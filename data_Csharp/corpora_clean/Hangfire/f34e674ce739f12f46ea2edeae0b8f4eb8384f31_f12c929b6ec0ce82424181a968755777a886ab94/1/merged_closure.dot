digraph  {
n0 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6"];
n1 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", label="Exit HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6"];
m0_0 [cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs", label="Entry HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13"];
m0_1 [cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs", label="Exit HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13"];
m1_28 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", span="31-31"];
m1_29 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", span="31-31"];
m1_24 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", span="29-29"];
m1_25 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", span="29-29"];
m1_8 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", span="18-18"];
m1_9 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", span="18-18"];
m1_10 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", span="20-20"];
m1_11 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", span="20-20"];
m1_6 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="17-17"];
m1_7 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="17-17"];
m1_36 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", span="37-37"];
m1_37 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", span="37-37"];
m1_38 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", span="38-38"];
m1_39 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", span="38-38"];
m1_4 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Servers()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Servers()", span="16-16"];
m1_5 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Servers()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.Servers()", span="16-16"];
m1_32 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", span="34-34"];
m1_33 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", span="34-34"];
m1_12 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", span="21-21"];
m1_13 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", span="21-21"];
m1_26 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", span="30-30"];
m1_27 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", span="30-30"];
m1_30 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", span="32-32"];
m1_31 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", span="32-32"];
m1_20 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", span="26-26"];
m1_21 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", span="26-26"];
m1_34 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", span="36-36"];
m1_35 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", span="36-36"];
m1_40 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", span="39-39"];
m1_41 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", span="39-39"];
m1_22 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", span="28-28"];
m1_23 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", span="28-28"];
m1_2 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="15-15"];
m1_3 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="15-15"];
m1_18 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", span="25-25"];
m1_19 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", span="25-25"];
m1_14 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", span="23-23"];
m1_15 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", span="23-23"];
m1_16 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", span="24-24"];
m1_17 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", span="24-24"];
m2_2 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m2_3 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m2_6 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m2_7 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m2_0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m2_1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m2_12 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m2_13 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m2_8 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m2_9 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m2_4 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m2_5 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m2_10 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m2_11 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m2_14 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m2_15 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m3_6 [cluster="HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", span="10-10"];
m3_7 [cluster="HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", span="10-10"];
m3_4 [cluster="HangFire.Storage.IStoredJobs.GetParameter(string, string)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.GetParameter(string, string)", span="8-8"];
m3_5 [cluster="HangFire.Storage.IStoredJobs.GetParameter(string, string)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.GetParameter(string, string)", span="8-8"];
m3_2 [cluster="HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", span="7-7"];
m3_3 [cluster="HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", span="7-7"];
m3_0 [cluster="HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", span="6-6"];
m3_1 [cluster="HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", span="6-6"];
m4_0 [cluster="HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", file="IStoredSets.cs", label="Entry HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", span="4-4"];
m4_1 [cluster="HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", file="IStoredSets.cs", label="Exit HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", span="4-4"];
m5_0 [cluster="HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="IWriteableJobQueue.cs", label="Entry HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="4-4"];
m5_1 [cluster="HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="IWriteableJobQueue.cs", label="Exit HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="4-4"];
m6_0 [cluster="HangFire.Storage.IWriteableStoredCounters.Increment(string)", file="IWriteableStoredCounters.cs", label="Entry HangFire.Storage.IWriteableStoredCounters.Increment(string)", span="6-6"];
m6_1 [cluster="HangFire.Storage.IWriteableStoredCounters.Increment(string)", file="IWriteableStoredCounters.cs", label="Exit HangFire.Storage.IWriteableStoredCounters.Increment(string)", span="6-6"];
m6_4 [cluster="HangFire.Storage.IWriteableStoredCounters.Decrement(string)", file="IWriteableStoredCounters.cs", label="Entry HangFire.Storage.IWriteableStoredCounters.Decrement(string)", span="9-9"];
m6_5 [cluster="HangFire.Storage.IWriteableStoredCounters.Decrement(string)", file="IWriteableStoredCounters.cs", label="Exit HangFire.Storage.IWriteableStoredCounters.Decrement(string)", span="9-9"];
m6_6 [cluster="HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", file="IWriteableStoredCounters.cs", label="Entry HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", span="10-10"];
m6_7 [cluster="HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", file="IWriteableStoredCounters.cs", label="Exit HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", span="10-10"];
m6_2 [cluster="HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", file="IWriteableStoredCounters.cs", label="Entry HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", span="7-7"];
m6_3 [cluster="HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", file="IWriteableStoredCounters.cs", label="Exit HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", span="7-7"];
m7_6 [cluster="HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteableStoredJobs.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m7_7 [cluster="HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteableStoredJobs.cs", label="Exit HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m7_0 [cluster="HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="IWriteableStoredJobs.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="7-7"];
m7_1 [cluster="HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="IWriteableStoredJobs.cs", label="Exit HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="7-7"];
m7_4 [cluster="HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteableStoredJobs.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m7_5 [cluster="HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteableStoredJobs.cs", label="Exit HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m7_2 [cluster="HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="IWriteableStoredJobs.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="8-8"];
m7_3 [cluster="HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="IWriteableStoredJobs.cs", label="Exit HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="8-8"];
m8_2 [cluster="HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="IWriteableStoredLists.cs", label="Entry HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="5-5"];
m8_3 [cluster="HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="IWriteableStoredLists.cs", label="Exit HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="5-5"];
m8_0 [cluster="HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="IWriteableStoredLists.cs", label="Entry HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="4-4"];
m8_1 [cluster="HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="IWriteableStoredLists.cs", label="Exit HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="4-4"];
m8_4 [cluster="HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="IWriteableStoredLists.cs", label="Entry HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="7-7"];
m8_5 [cluster="HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="IWriteableStoredLists.cs", label="Exit HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="7-7"];
m9_0 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="IWriteableStoredSets.cs", label="Entry HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="4-4"];
m9_1 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="IWriteableStoredSets.cs", label="Exit HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="4-4"];
m9_4 [cluster="HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="IWriteableStoredSets.cs", label="Entry HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="6-6"];
m9_5 [cluster="HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="IWriteableStoredSets.cs", label="Exit HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="6-6"];
m9_2 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="IWriteableStoredSets.cs", label="Entry HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="5-5"];
m9_3 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="IWriteableStoredSets.cs", label="Exit HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="5-5"];
m10_4 [cluster="HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="IWriteableStoredValues.cs", label="Entry HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="9-9"];
m10_5 [cluster="HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="IWriteableStoredValues.cs", label="Exit HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="9-9"];
m10_0 [cluster="HangFire.Storage.IWriteableStoredValues.Increment(string)", file="IWriteableStoredValues.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Increment(string)", span="6-6"];
m10_1 [cluster="HangFire.Storage.IWriteableStoredValues.Increment(string)", file="IWriteableStoredValues.cs", label="Exit HangFire.Storage.IWriteableStoredValues.Increment(string)", span="6-6"];
m10_2 [cluster="HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="IWriteableStoredValues.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="7-7"];
m10_3 [cluster="HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="IWriteableStoredValues.cs", label="Exit HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="7-7"];
m12_41 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobClientSteps.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40"];
m12_37 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobClientSteps.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m12_0 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="39-39"];
m12_1 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\r\n'')", span="43-43"];
m12_2 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Layout = new LayoutPage { Title = ''Queues'' }", span="53-53"];
m12_3 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="var queues = JobStorage.Queues()", span="54-54"];
m12_4 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\r\n'')", span="60-60"];
m12_5 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="queues.Count == 0", span="65-65"];
m12_8 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label=queues, span="99-99"];
m12_6 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        You have no queues yet. Try to enq'' +\r\n''ueue your first job.\r\n    </div>\r\n'')", span="71-72"];
m12_7 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Dequeued</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="84-94"];
m12_9 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a href=\'''' +\r\n'''')", span="105-106"];
m12_35 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="276-276"];
m12_10 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="111-111"];
m12_12 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(queue.Name)", span="121-121"];
m12_14 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(queue.Length)", span="132-132"];
m12_16 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(queue.Dequeued)", span="142-142"];
m12_18 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="queue.FirstJobs.Count == 0", span="157-157"];
m12_21 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="queue.FirstJobs", span="189-189"];
m12_11 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\''>\r\n                            '')", span="116-116"];
m12_13 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="126-127"];
m12_15 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="137-137"];
m12_17 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="150-150"];
m12_19 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                        <em>No jobs queued.</em>\r\n'')", span="163-163"];
m12_20 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(@''                        <table class=''''table table-condensed table-bordered table-inner''''>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Job type</th>\r\n                                    <th>Enqueued</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n'')", span="175-184"];
m12_22 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                                    <tr>\r\n                                       '' +\r\n'' <td><a href=\'''')", span="195-196"];
m12_33 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                            </tbody>\r\n                        </table>\r\n'')", span="256-256"];
m12_23 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="201-201"];
m12_24 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\''>'')", span="206-206"];
m12_25 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(HtmlHelper.JobId(job.Key))", span="211-211"];
m12_26 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''</a></td>\r\n                                        <td>'')", span="216-216"];
m12_27 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(HtmlHelper.JobType(job.Value.Type))", span="221-221"];
m12_28 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''</td>\r\n                                        <td data-moment=\'''')", span="226-226"];
m12_29 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt))", span="231-231"];
m12_30 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\''>'')", span="236-236"];
m12_31 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(job.Value.EnqueuedAt)", span="241-241"];
m12_32 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''</td>\r\n                                    </tr>\r\n'')", span="246-246"];
m12_34 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="266-266"];
m12_36 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="39-39"];
m12_38 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobClientSteps.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m12_39 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientSteps.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="197-197"];
m12_40 [cluster="HttpRequestBase.LinkTo(string)", file="JobClientSteps.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m12_42 [cluster="HangFire.Web.HtmlHelper.JobId(string)", file="JobClientSteps.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17"];
m12_44 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="JobClientSteps.cs", label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22"];
m12_45 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobClientSteps.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m12_43 [cluster="Unk.Write", file="JobClientSteps.cs", label="Entry Unk.Write", span=""];
m12_46 [file="JobClientSteps.cs", label="HangFire.Web.Pages.QueuesPage", span=""];
m14_14 [cluster="Unk.Commit", file="RedisAtomicWriteTransaction.cs", label="Entry Unk.Commit", span=""];
m14_18 [cluster="Unk.Dispose", file="RedisAtomicWriteTransaction.cs", label="Entry Unk.Dispose", span=""];
m14_0 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m14_9 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m14_15 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="35-35"];
m14_17 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="35-35"];
m14_11 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="30-30"];
m14_13 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="30-30"];
m14_10 [cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15"];
m14_19 [file="RedisAtomicWriteTransaction.cs", label="HangFire.Redis.RedisAtomicWriteTransaction", span=""];
m15_15 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="51-51"];
m15_16 [cluster="HangFire.Redis.RedisStorage.GetConnection()", color=green, community=0, file="RedisStorage.cs", label="return new RedisStorageConnection(this, _pooledManager.GetClient());", prediction=0, span="53-53"];
m15_17 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="51-51"];
m15_14 [cluster="Unk.GetClient", file="RedisStorage.cs", label="Entry Unk.GetClient", span=""];
m15_10 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46"];
m15_11 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="return new RedisMonitoringApi(_pooledManager.GetClient());", span="48-48"];
m15_12 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46"];
m15_9 [cluster="RedisClientManagerConfig.cstr", file="RedisStorage.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m15_19 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="56-56"];
m15_20 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="58-58"];
m15_21 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new DequeuedJobsWatcher(this);", span="59-59"];
m15_22 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new ServerWatchdog(this);", span="60-60"];
m15_23 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="56-56"];
m15_24 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="RedisStorage.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m15_25 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="RedisStorage.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m15_26 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="RedisStorage.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m15_8 [cluster="PooledRedisClientManager.cstr", file="RedisStorage.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m15_38 [cluster="string.Format(string, object, object)", file="RedisStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m15_13 [cluster="RedisMonitoringApi.cstr", file="RedisStorage.cs", label="Entry RedisMonitoringApi.cstr", span=""];
m15_35 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.ToString()", span="70-70"];
m15_36 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="return String.Format(''redis://{0}/{1}'', _host, _db);", span="72-72"];
m15_37 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.ToString()", span="70-70"];
m15_18 [cluster="RedisStorageConnection.cstr", file="RedisStorage.cs", label="Entry RedisStorageConnection.cstr", span=""];
m15_2 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="28-28"];
m15_3 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_host = host", span="30-30"];
m15_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_db = db", span="31-31"];
m15_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_options = options", span="32-32"];
m15_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ host },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = db,\r\n                    MaxWritePoolSize = _options.ConnectionPoolSize\r\n                })", span="34-41"];
m15_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="28-28"];
m15_39 [file="RedisStorage.cs", label="HangFire.Redis.RedisStorage", span=""];
m16_0 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStorageConnection.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="20-20"];
m16_1 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStorageConnection.cs", label="Exit Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="20-20"];
m18_52 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisStoredSets.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m18_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisStoredSets.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_12 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="Entry Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="41-41"];
m18_13 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="var scope = _activator.BeginScope()", span="43-43"];
m18_15 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="!context.BackgroundJob.Job.Method.IsStatic", span="47-47"];
m18_16 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="instance = scope.Resolve(context.BackgroundJob.Job.Type)", span="49-49"];
m18_18 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="throw new InvalidOperationException(\r\n                            String.Format(''JobActivator returned NULL instance of the '{0}' type.'', context.BackgroundJob.Job.Type));", span="53-54"];
m18_19 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="var arguments = SubstituteArguments(context)", span="58-58"];
m18_20 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="var result = InvokeMethod(context.BackgroundJob.Job.Method, instance, arguments)", span="59-59"];
m18_14 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="object instance = null", span="45-45"];
m18_17 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="instance == null", span="51-51"];
m18_21 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="return result;", span="61-61"];
m18_22 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="Exit Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="41-41"];
m18_27 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="Entry Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", span="93-93"];
m18_39 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="var parameters = context.BackgroundJob.Job.Method.GetParameters()", span="95-95"];
m18_40 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="var result = new List<object>(context.BackgroundJob.Job.Args.Count)", span="96-96"];
m18_44 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="var argument = context.BackgroundJob.Job.Args[i]", span="101-101"];
m18_45 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="var value = Substitutions.ContainsKey(parameter.ParameterType) \r\n                    ? Substitutions[parameter.ParameterType](context) \r\n                    : argument", span="103-105"];
m18_42 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="i < parameters.Length", span="98-98"];
m18_43 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="var parameter = parameters[i]", span="100-100"];
m18_41 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="var i = 0", span="98-98"];
m18_46 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="result.Add(value)", span="107-107"];
m18_48 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="return result.ToArray();", span="110-110"];
m18_47 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="i++", span="98-98"];
m18_49 [cluster="Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", file="RedisStoredSets.cs", label="Exit Hangfire.Server.CoreJobPerformanceProcess.SubstituteArguments(Hangfire.Server.PerformContext)", span="93-93"];
m18_37 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="RedisStoredSets.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m18_28 [cluster="Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", file="RedisStoredSets.cs", label="Entry Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", span="65-65"];
m18_29 [cluster="Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", file="RedisStoredSets.cs", label="return methodInfo.Invoke(instance, arguments);", span="69-69"];
m18_30 [cluster="Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", file="RedisStoredSets.cs", label=ArgumentException, span="71-71"];
m18_31 [cluster="Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", file="RedisStoredSets.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex);", span="73-75"];
m18_32 [cluster="Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", file="RedisStoredSets.cs", label=TargetInvocationException, span="77-77"];
m18_33 [cluster="Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", file="RedisStoredSets.cs", label="ex.InnerException is OperationCanceledException", span="79-79"];
m18_34 [cluster="Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", file="RedisStoredSets.cs", label="throw ex.InnerException;", span="84-84"];
m18_35 [cluster="Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", file="RedisStoredSets.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="87-89"];
m18_36 [cluster="Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", file="RedisStoredSets.cs", label="Exit Hangfire.Server.CoreJobPerformanceProcess.InvokeMethod(System.Reflection.MethodInfo, object, object[])", span="65-65"];
m18_51 [cluster="System.Collections.Generic.List<T>.List(int)", file="RedisStoredSets.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m18_53 [cluster="System.Func<T, TResult>.Invoke(T)", file="RedisStoredSets.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m18_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisStoredSets.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m18_26 [cluster="string.Format(string, object)", file="RedisStoredSets.cs", label="Entry string.Format(string, object)", span="0-0"];
m18_38 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="RedisStoredSets.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m18_24 [cluster="Hangfire.JobActivatorScope.Resolve(System.Type)", file="RedisStoredSets.cs", label="Entry Hangfire.JobActivatorScope.Resolve(System.Type)", span="38-38"];
m18_55 [cluster="System.Collections.Generic.List<T>.ToArray()", file="RedisStoredSets.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m18_23 [cluster="Hangfire.JobActivator.BeginScope()", file="RedisStoredSets.cs", label="Entry Hangfire.JobActivator.BeginScope()", span="49-49"];
m18_50 [cluster="System.Reflection.MethodBase.GetParameters()", file="RedisStoredSets.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m18_3 [cluster="lambda expression", file="RedisStoredSets.cs", label="Entry lambda expression", span="30-30"];
m18_0 [cluster="lambda expression", file="RedisStoredSets.cs", label="Entry lambda expression", span="29-29"];
m18_1 [cluster="lambda expression", file="RedisStoredSets.cs", label="x.CancellationToken", span="29-29"];
m18_2 [cluster="lambda expression", file="RedisStoredSets.cs", label="Exit lambda expression", span="29-29"];
m18_4 [cluster="lambda expression", file="RedisStoredSets.cs", label="x.CancellationToken.ShutdownToken", span="30-30"];
m18_5 [cluster="lambda expression", file="RedisStoredSets.cs", label="Exit lambda expression", span="30-30"];
m18_6 [cluster="Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", file="RedisStoredSets.cs", label="Entry Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", span="35-35"];
m18_7 [cluster="Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", file="RedisStoredSets.cs", label="activator == null", span="37-37"];
m18_9 [cluster="Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", file="RedisStoredSets.cs", label="_activator = activator", span="38-38"];
m18_8 [cluster="Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", file="RedisStoredSets.cs", label="throw new ArgumentNullException(''activator'');", span="37-37"];
m18_10 [cluster="Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", file="RedisStoredSets.cs", label="Exit Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", span="35-35"];
m18_25 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RedisStoredSets.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m18_56 [file="RedisStoredSets.cs", label="Hangfire.Server.CoreJobPerformanceProcess", span=""];
m19_14 [cluster="System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", file="RedisStoredValues.cs", label="Entry System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", span="0-0"];
m19_9 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="RedisStoredValues.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m19_0 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="RedisStoredValues.cs", label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17"];
m19_1 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="RedisStoredValues.cs", label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17"];
m19_13 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="RedisStoredValues.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m19_2 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="RedisStoredValues.cs", label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21"];
m19_7 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="RedisStoredValues.cs", label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21"];
m19_10 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="RedisStoredValues.cs", label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31"];
m19_12 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="RedisStoredValues.cs", label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31"];
m19_15 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="RedisStoredValues.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m19_8 [cluster="System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", file="RedisStoredValues.cs", label="Entry System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", span="0-0"];
m19_16 [file="RedisStoredValues.cs", label="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>", span=""];
m21_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m21_16 [cluster="System.Collections.Generic.List<T>.List()", file="RedisWriteOnlyJob.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m21_0 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", span="28-28"];
m21_1 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="RedisWriteOnlyJob.cs", label="environment == null", prediction=1, span="30-30"];
m21_2 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="RedisWriteOnlyJob.cs", label="throw new ArgumentNullException(nameof(environment));", prediction=2, span="30-30"];
m21_3 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="RedisWriteOnlyJob.cs", label="_context = new OwinContext(environment)", prediction=3, span="31-31"];
m21_4 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", span="28-28"];
m21_14 [cluster="IOwinContext.ReadFormSafeAsync()", file="RedisWriteOnlyJob.cs", label="Entry IOwinContext.ReadFormSafeAsync()", span="15-15"];
m21_15 [cluster="Unk.GetValues", file="RedisWriteOnlyJob.cs", label="Entry Unk.GetValues", span=""];
m21_6 [cluster="Unk.nameof", file="RedisWriteOnlyJob.cs", label="Entry Unk.nameof", span=""];
m21_10 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", span="42-42"];
m21_11 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", color=green, community=0, file="RedisWriteOnlyJob.cs", label="var form = await _context.ReadFormSafeAsync()", prediction=4, span="44-44"];
m21_12 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", color=green, community=0, file="RedisWriteOnlyJob.cs", label="return form.GetValues(key) ?? new List<string>();", prediction=5, span="45-45"];
m21_13 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", span="42-42"];
m21_7 [cluster="OwinContext.cstr", file="RedisWriteOnlyJob.cs", label="Entry OwinContext.cstr", span=""];
m21_17 [file="RedisWriteOnlyJob.cs", label="Hangfire.Dashboard.OwinDashboardRequest", span=""];
m22_0 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="RedisWriteOnlyList.cs", label="Entry Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", span="9-9"];
m22_1 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", color=green, community=0, file="RedisWriteOnlyList.cs", label="AutomaticMigrationsEnabled = false", prediction=6, span="11-11"];
m22_2 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="RedisWriteOnlyList.cs", label="Exit Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", span="9-9"];
m23_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyQueue.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m23_19 [cluster="Unk.EnqueueItemOnList", file="RedisWriteOnlyQueue.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m23_0 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", span="10-10"];
m23_1 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyQueue.cs", label="transaction == null", prediction=7, span="12-12"];
m23_2 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''transaction'');", prediction=8, span="12-12"];
m23_3 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyQueue.cs", label="_transaction = transaction", prediction=9, span="14-14"];
m23_4 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", span="10-10"];
m23_6 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m23_7 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", color=green, community=0, file="RedisWriteOnlyQueue.cs", label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", prediction=10, span="19-20"];
m23_8 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", color=green, community=0, file="RedisWriteOnlyQueue.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", prediction=10, span="22-23"];
m23_9 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m23_18 [cluster="string.Format(string, object)", file="RedisWriteOnlyQueue.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_10 [cluster="Unk.QueueCommand", file="RedisWriteOnlyQueue.cs", label="Entry Unk.QueueCommand", span=""];
m23_14 [cluster="Unk.AddItemToSet", file="RedisWriteOnlyQueue.cs", label="Entry Unk.AddItemToSet", span=""];
m23_15 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="22-23"];
m23_11 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="19-20"];
m23_12 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyQueue.cs", label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", prediction=10, span="19-20"];
m23_13 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="19-20"];
m23_16 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyQueue.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", prediction=10, span="22-23"];
m23_17 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="22-23"];
m23_20 [file="RedisWriteOnlyQueue.cs", label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue", span=""];
m23_21 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m23_22 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m24_102 [cluster="System.Collections.Generic.List<T>.List()", file="RedisWriteOnlySet.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m24_111 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", span="190-190"];
m24_112 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", file="RedisWriteOnlySet.cs", label="return value;", span="192-192"];
m24_113 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", span="190-190"];
m24_106 [cluster="string.Format(string, object, object)", file="RedisWriteOnlySet.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m24_148 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="247-247"];
m24_149 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="RedisWriteOnlySet.cs", label="_enclosingString = ''\''''", span="249-249"];
m24_150 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="RedisWriteOnlySet.cs", label="_valueRenderer = WrapString", span="250-250"];
m24_151 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="247-247"];
m24_80 [cluster="System.Text.StringBuilder.Append(string)", file="RedisWriteOnlySet.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m24_131 [cluster="System.Type.GetInterfaces()", file="RedisWriteOnlySet.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m24_93 [cluster="Unk.Join", file="RedisWriteOnlySet.cs", label="Entry Unk.Join", span=""];
m24_100 [cluster="object.ToString()", file="RedisWriteOnlySet.cs", label="Entry object.ToString()", span="0-0"];
m24_208 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="369-369"];
m24_210 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="RedisWriteOnlySet.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="371-371"];
m24_211 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="369-369"];
m24_84 [cluster="char.IsUpper(char)", file="RedisWriteOnlySet.cs", label="Entry char.IsUpper(char)", span="0-0"];
m24_164 [cluster="string.Replace(string, string)", file="RedisWriteOnlySet.cs", label="Entry string.Replace(string, string)", span="0-0"];
m24_209 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="RedisWriteOnlySet.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m24_78 [cluster="System.Text.StringBuilder.StringBuilder()", file="RedisWriteOnlySet.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m24_82 [cluster="System.Text.StringBuilder.AppendLine()", file="RedisWriteOnlySet.cs", label="Entry System.Text.StringBuilder.AppendLine()", span="0-0"];
m24_165 [cluster="System.Func<T, TResult>.Invoke(T)", file="RedisWriteOnlySet.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m24_126 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="RedisWriteOnlySet.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m24_107 [cluster="System.Text.StringBuilder.ToString()", file="RedisWriteOnlySet.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m24_141 [cluster="Unk.GetGenericArguments", file="RedisWriteOnlySet.cs", label="Entry Unk.GetGenericArguments", span=""];
m24_99 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="286-286"];
m24_171 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _valueRenderer = value => WrapKeyword(value.ToLowerInvariant()),\r\n                        _enclosingString = String.Empty,\r\n                    };", span="311-315"];
m24_167 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = String.Empty,\r\n                        _valueRenderer = value => String.Format(\r\n                            ''{0}.{1}'',\r\n                            WrapType(type.Name),\r\n                            value)\r\n                    };", span="290-297"];
m24_170 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="type == typeof(bool)", span="309-309"];
m24_166 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="type.IsEnum", span="288-288"];
m24_168 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="IsNumericType(type)", span="300-300"];
m24_172 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="type == typeof(char)", span="318-318"];
m24_174 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="type == typeof(string) || type == typeof(object)", span="326-326"];
m24_176 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="return new ArgumentRenderer\r\n                {\r\n                    _deserializationType = type,\r\n                };", span="334-337"];
m24_169 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = String.Empty,\r\n                        _valueRenderer = WrapIdentifier\r\n                    };", span="302-306"];
m24_173 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''''',\r\n                    };", span="320-323"];
m24_175 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''\'''',\r\n                    };", span="328-331"];
m24_177 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="286-286"];
m24_101 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", span="253-253"];
m24_154 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="var builder = new StringBuilder()", span="260-260"];
m24_153 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="return WrapKeyword(''null'');", span="257-257"];
m24_156 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="builder.Append(WrapIdentifier(\r\n                        isJson ? ''FromJson'' : ''Deserialize''))", span="263-264"];
m24_158 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="builder.Append(WrapString(Encode(''\'''' + rawValue.Replace(''\'''', ''\\\'''') + ''\'''')))", span="271-271"];
m24_159 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="builder.Append(_valueRenderer(Encode(_enclosingString + deserializedValue + _enclosingString)))", span="275-275"];
m24_157 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="builder.Append(''&lt;'')\r\n                        .Append(WrapType(Encode(_deserializationType.Name)))\r\n                        .Append(WrapIdentifier(''&gt;''))\r\n                        .Append(''('')", span="266-269"];
m24_161 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="builder.Append('')'')", span="280-280"];
m24_152 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="deserializedValue == null", span="255-255"];
m24_155 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="_deserializationType != null", span="261-261"];
m24_162 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="return builder.ToString();", span="283-283"];
m24_160 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="_deserializationType != null", span="278-278"];
m24_163 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", span="253-253"];
m24_97 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", span="223-223"];
m24_129 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", file="RedisWriteOnlySet.cs", label="return type.GetInterfaces()\r\n                .Where(x => x.IsGenericType\r\n                            && x.GetGenericTypeDefinition() == typeof (IEnumerable<>))\r\n                .Select(x => x.GetGenericArguments()[0])\r\n                .FirstOrDefault();", span="227-231"];
m24_127 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", file="RedisWriteOnlySet.cs", label="type == typeof (string)", span="225-225"];
m24_128 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", file="RedisWriteOnlySet.cs", label="return null;", span="225-225"];
m24_130 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", span="223-223"];
m24_92 [cluster="Unk.ToArray", file="RedisWriteOnlySet.cs", label="Entry Unk.ToArray", span=""];
m24_94 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="RedisWriteOnlySet.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m24_132 [cluster="Unk.Where", file="RedisWriteOnlySet.cs", label="Entry Unk.Where", span=""];
m24_147 [cluster="string.Substring(int, int)", file="RedisWriteOnlySet.cs", label="Entry string.Substring(int, int)", span="0-0"];
m24_105 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="RedisWriteOnlySet.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m24_119 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", span="205-205"];
m24_120 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", file="RedisWriteOnlySet.cs", label="return Span(''string'', value);", span="207-207"];
m24_121 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", span="205-205"];
m24_116 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", span="210-210"];
m24_122 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", file="RedisWriteOnlySet.cs", label="return String.Format(\r\n                ''<span class=\''{0}\''>{1}</span>'', \r\n                @class, \r\n                value);", span="212-215"];
m24_123 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", span="210-210"];
m24_79 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", span="195-195"];
m24_114 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", file="RedisWriteOnlySet.cs", label="return Span(''keyword'', value);", span="197-197"];
m24_115 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", span="195-195"];
m24_83 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", span="234-234"];
m24_142 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", file="RedisWriteOnlySet.cs", label="string name = t.Name", span="236-236"];
m24_144 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", file="RedisWriteOnlySet.cs", label="return index == -1 ? name : name.Substring(0, index);", span="238-238"];
m24_143 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", file="RedisWriteOnlySet.cs", label="int index = name.IndexOf('`')", span="237-237"];
m24_145 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", span="234-234"];
m24_103 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m24_138 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="230-230"];
m24_183 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="WrapKeyword(value.ToLowerInvariant())", span="313-313"];
m24_108 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="73-73"];
m24_109 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="WrapType(x.Name)", span="73-73"];
m24_180 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="String.Format(\r\n                            ''{0}.{1}'',\r\n                            WrapType(type.Name),\r\n                            value)", span="293-296"];
m24_182 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="313-313"];
m24_184 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="313-313"];
m24_110 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="73-73"];
m24_179 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="293-296"];
m24_181 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="293-296"];
m24_134 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="228-229"];
m24_136 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="228-229"];
m24_135 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="x.IsGenericType\r\n                            && x.GetGenericTypeDefinition() == typeof (IEnumerable<>)", span="228-229"];
m24_139 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="x.GetGenericArguments()[0]", span="230-230"];
m24_140 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="230-230"];
m24_77 [cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22"];
m24_185 [cluster="string.ToLowerInvariant()", file="RedisWriteOnlySet.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m24_133 [cluster="Unk.FirstOrDefault", file="RedisWriteOnlySet.cs", label="Entry Unk.FirstOrDefault", span=""];
m24_178 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="340-340"];
m24_203 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="return IsNumericType(Nullable.GetUnderlyingType(type));", span="362-362"];
m24_186 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="type == null", span="342-342"];
m24_188 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="Type.GetTypeCode(type)", span="344-344"];
m24_202 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="IsNullableType(type)", span="360-360"];
m24_187 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="return false;", span="342-342"];
m24_200 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="return true;", span="357-357"];
m24_204 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="return false;", span="364-364"];
m24_206 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="return false;", span="366-366"];
m24_189 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.Byte", span="346-346"];
m24_201 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.Object", span="359-359"];
m24_199 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.UInt64", span="356-356"];
m24_190 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.Decimal", span="347-347"];
m24_198 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.UInt32", span="355-355"];
m24_191 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.Double", span="348-348"];
m24_197 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.UInt16", span="354-354"];
m24_192 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.Int16", span="349-349"];
m24_196 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.Single", span="353-353"];
m24_193 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.Int32", span="350-350"];
m24_195 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.SByte", span="352-352"];
m24_194 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="TypeCode.Int64", span="351-351"];
m24_205 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="340-340"];
m24_91 [cluster="Unk.Select", file="RedisWriteOnlySet.cs", label="Entry Unk.Select", span=""];
m24_88 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", span="200-200"];
m24_117 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", file="RedisWriteOnlySet.cs", label="return Span(''type'', value);", span="202-202"];
m24_118 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", span="200-200"];
m24_0 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", span="28-28"];
m24_1 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="RedisWriteOnlySet.cs", label="job == null", prediction=14, span="30-30"];
m24_2 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="RedisWriteOnlySet.cs", label="return new NonEscapedString(''<em>Can not find the target method.</em>'');", prediction=15, span="30-30"];
m24_3 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="RedisWriteOnlySet.cs", label="var builder = new StringBuilder()", prediction=16, span="32-32"];
m24_4 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="RedisWriteOnlySet.cs", label="builder.Append(WrapKeyword(''using''))", prediction=17, span="34-34"];
m24_5 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="RedisWriteOnlySet.cs", label="builder.Append('' '')", prediction=16, span="35-35"];
m24_6 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(Encode(job.Type.Namespace))", span="36-36"];
m24_7 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append('';'')", span="37-37"];
m24_8 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.AppendLine()", span="38-38"];
m24_9 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.AppendLine()", span="39-39"];
m24_15 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(WrapType(job.Type.ToGenericTypeString()))", span="52-52"];
m24_16 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.AppendFormat(\r\n                    '' {0} = Activate&lt;{1}&gt;();'',\r\n                    Encode(serviceName),\r\n                    WrapType(Encode(job.Type.ToGenericTypeString())))", span="53-56"];
m24_17 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.AppendLine()", span="58-58"];
m24_18 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(Encode(serviceName))", span="60-60"];
m24_19 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(WrapType(Encode(job.Type.ToGenericTypeString())))", span="64-64"];
m24_20 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(''.'')", span="67-67"];
m24_21 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(Encode(job.Method.Name))", span="68-68"];
m24_24 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.AppendFormat(''&lt;{0}&gt;'', String.Join('', '', genericArgumentTypes))", span="76-76"];
m24_25 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(''('')", span="79-79"];
m24_63 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.AppendLine()", span="160-160"];
m24_64 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(''    '')", span="161-161"];
m24_67 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append('' '')", span="167-167"];
m24_68 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.AppendFormat(\r\n                    ''<span title=\''{0}:\'' data-placement=\''{1}\''>'',\r\n                    parameter.Name,\r\n                    tooltipPosition)", span="170-173"];
m24_69 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(renderedArgument)", span="175-175"];
m24_70 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append(''</span>'')", span="177-177"];
m24_72 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append('','')", span="181-181"];
m24_74 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="builder.Append('');'')", span="185-185"];
m24_75 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="return new NonEscapedString(builder.ToString());", span="187-187"];
m24_10 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="!job.Method.IsStatic", span="41-41"];
m24_11 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var serviceName = GetNameWithoutGenericArity(job.Type)", span="43-43"];
m24_12 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="job.Type.IsInterface && serviceName[0] == 'I' && Char.IsUpper(serviceName[1])", span="45-45"];
m24_22 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="job.Method.IsGenericMethod", span="70-70"];
m24_23 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var genericArgumentTypes = job.Method.GetGenericArguments()\r\n                    .Select(x => WrapType(x.Name))\r\n                    .ToArray()", span="72-74"];
m24_26 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var parameters = job.Method.GetParameters()", span="81-81"];
m24_33 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="i < job.Arguments.Length", span="91-91"];
m24_34 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var argument = job.Arguments[i]", span="93-93"];
m24_14 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="serviceName = Char.ToLower(serviceName[0]) + serviceName.Substring(1)", span="50-50"];
m24_62 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="renderedArgumentsTotalLength > splitStringMinLength", span="158-158"];
m24_65 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="tooltipPosition = ''left''", span="163-163"];
m24_66 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="i > 0", span="165-165"];
m24_59 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var parameter = parameters[i]", span="154-154"];
m24_60 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var tooltipPosition = ''top''", span="155-155"];
m24_61 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var renderedArgument = renderedArguments[i]", span="157-157"];
m24_71 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="i < renderedArguments.Count - 1", span="179-179"];
m24_73 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="i++", span="151-151"];
m24_58 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="i < renderedArguments.Count", span="151-151"];
m24_52 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="renderedArgument = String.Format(\r\n                                WrapKeyword(''new'') + ''{0} {{ {1} }}'',\r\n                                parameter.ParameterType.IsArray ? '' []'' : '''',\r\n                                String.Join('', '', renderedItems))", span="135-138"];
m24_44 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="renderedArgument = WrapKeyword(''null'')", span="115-115"];
m24_13 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="serviceName = serviceName.Substring(1)", span="47-47"];
m24_27 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var renderedArguments = new List<string>(parameters.Length)", span="82-82"];
m24_31 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="i < parameters.Length", span="87-87"];
m24_32 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var parameter = parameters[i]", span="89-89"];
m24_30 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var i = 0", span="87-87"];
m24_55 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="renderedArguments.Add(Encode(''<NO VALUE>''))", span="147-147"];
m24_35 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="string renderedArgument", span="94-94"];
m24_39 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="argumentValue = JobHelper.FromJson(argument, parameter.ParameterType)", span="103-103"];
m24_41 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="argumentValue = argument", span="109-109"];
m24_47 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="renderedArgument = argumentRenderer.Render(isJson, argumentValue.ToString(), argument)", span="122-122"];
m24_28 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var renderedArgumentsTotalLength = 0", span="83-83"];
m24_29 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="int splitStringMinLength = 100", span="85-85"];
m24_54 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="renderedArgumentsTotalLength += renderedArgument.Length", span="143-143"];
m24_57 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="int i = 0", span="151-151"];
m24_49 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="(IEnumerable) argumentValue", span="128-128"];
m24_48 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var renderedItems = new List<string>()", span="126-126"];
m24_53 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="renderedArguments.Add(renderedArgument)", span="142-142"];
m24_43 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="argumentValue == null", span="113-113"];
m24_56 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="i++", span="87-87"];
m24_36 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var enumerableArgument = GetIEnumerableGenericArgument(parameter.ParameterType)", span="96-96"];
m24_46 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var argumentRenderer = ArgumentRenderer.GetRenderer(parameter.ParameterType)", span="121-121"];
m24_38 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="bool isJson = true", span="99-99"];
m24_40 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label=Exception, span="105-105"];
m24_42 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="isJson = false", span="110-110"];
m24_51 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="renderedItems.Add(argumentRenderer.Render(isJson, item.ToString(),\r\n                                    JobHelper.ToJson(item)))", span="131-132"];
m24_50 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="var argumentRenderer = ArgumentRenderer.GetRenderer(enumerableArgument)", span="130-130"];
m24_45 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="enumerableArgument == null", span="119-119"];
m24_37 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="object argumentValue", span="98-98"];
m24_76 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", span="28-28"];
m24_90 [cluster="System.Reflection.MethodInfo.GetGenericArguments()", file="RedisWriteOnlySet.cs", label="Entry System.Reflection.MethodInfo.GetGenericArguments()", span="0-0"];
m24_86 [cluster="char.ToLower(char)", file="RedisWriteOnlySet.cs", label="Entry char.ToLower(char)", span="0-0"];
m24_96 [cluster="System.Collections.Generic.List<T>.List(int)", file="RedisWriteOnlySet.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m24_98 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m24_104 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisWriteOnlySet.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m24_137 [cluster="System.Type.GetGenericTypeDefinition()", file="RedisWriteOnlySet.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m24_146 [cluster="string.IndexOf(char)", file="RedisWriteOnlySet.cs", label="Entry string.IndexOf(char)", span="0-0"];
m24_81 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", span="218-218"];
m24_124 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", file="RedisWriteOnlySet.cs", label="return WebUtility.HtmlEncode(value);", span="220-220"];
m24_125 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", span="218-218"];
m24_95 [cluster="System.Reflection.MethodBase.GetParameters()", file="RedisWriteOnlySet.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m24_87 [cluster="System.Type.ToGenericTypeString()", file="RedisWriteOnlySet.cs", label="Entry System.Type.ToGenericTypeString()", span="7-7"];
m24_207 [cluster="System.Type.GetTypeCode(System.Type)", file="RedisWriteOnlySet.cs", label="Entry System.Type.GetTypeCode(System.Type)", span="0-0"];
m24_89 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="RedisWriteOnlySet.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m24_85 [cluster="string.Substring(int)", file="RedisWriteOnlySet.cs", label="Entry string.Substring(int)", span="0-0"];
m24_212 [file="RedisWriteOnlySet.cs", label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", span=""];
m24_213 [file="RedisWriteOnlySet.cs", label="System.Type", span=""];
m25_22 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="37-37"];
m25_23 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="_transaction.Dispose()", prediction=19, span="39-39"];
m25_24 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="37-37"];
m25_14 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", span="10-10"];
m25_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m25_21 [cluster="Unk.Commit", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Commit", span=""];
m25_15 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", span="10-10"];
m25_25 [cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Dispose", span=""];
m25_16 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyJob.RedisWriteOnlyJob(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyJob.RedisWriteOnlyJob(IRedisTransaction)", span="12-12"];
m25_17 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyCounter.RedisWriteOnlyCounter(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyCounter.RedisWriteOnlyCounter(IRedisTransaction)", span="10-10"];
m25_18 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="32-32"];
m25_19 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="return _transaction.Commit();", prediction=19, span="34-34"];
m25_20 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="32-32"];
m25_13 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", span="10-10"];
m25_12 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", span="10-10"];
m25_0 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="11-11"];
m25_1 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="transaction == null", prediction=21, span="13-13"];
m25_2 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''transaction'');", prediction=22, span="13-13"];
m25_3 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="_transaction = transaction", prediction=23, span="15-15"];
m25_4 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="Values = new RedisWriteOnlyValue(transaction)", prediction=24, span="17-17"];
m25_5 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="Sets = new RedisWriteOnlySet(transaction)", prediction=25, span="18-18"];
m25_6 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="Lists = new RedisWriteOnlyList(transaction)", prediction=26, span="19-19"];
m25_7 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="Queues = new RedisWriteOnlyQueue(transaction)", prediction=27, span="20-20"];
m25_8 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="Jobs = new RedisWriteOnlyJob(transaction)", prediction=28, span="21-21"];
m25_9 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="Counters = new RedisWriteOnlyCounter(transaction)", prediction=29, span="22-22"];
m25_10 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="11-11"];
m25_26 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Redis.RedisWriteOnlyTransaction", span=""];
m27_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlJobLock.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m27_34 [cluster="HangFire.States.IStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlJobLock.cs", label="Entry HangFire.States.IStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25"];
m27_39 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlJobLock.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24"];
m27_12 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46"];
m27_15 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="filters == null", span="50-50"];
m27_18 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="handlers.GetHandlers(OldStateName)", span="54-54"];
m27_20 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label=filters, span="59-59"];
m27_23 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="handlers.GetHandlers(NewState.Name)", span="66-66"];
m27_25 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label=filters, span="71-71"];
m27_16 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="throw new ArgumentNullException(''filters'');", span="50-50"];
m27_17 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="var transaction = _connection.CreateWriteTransaction()", span="52-52"];
m27_19 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="handler.Unapply(this, transaction)", span="56-56"];
m27_21 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="filter.OnStateUnapplied(this, transaction)", span="61-61"];
m27_22 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="transaction.SetJobState(JobId, NewState)", span="64-64"];
m27_24 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="handler.Apply(this, transaction)", span="68-68"];
m27_26 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="filter.OnStateApplied(this, transaction)", span="73-73"];
m27_28 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="transaction.ExpireJob(JobId, JobExpirationTimeout)", span="78-78"];
m27_29 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="transaction.PersistJob(JobId)", span="82-82"];
m27_30 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="transaction.Commit()", span="85-85"];
m27_27 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="NewState.ExpireJobOnApply", span="76-76"];
m27_31 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SqlJobLock.cs", label="Exit HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46"];
m27_38 [cluster="HangFire.States.IApplyStateFilter.OnStateApplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlJobLock.cs", label="Entry HangFire.States.IApplyStateFilter.OnStateApplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="29-29"];
m27_40 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="SqlJobLock.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25"];
m27_32 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="SqlJobLock.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26"];
m27_33 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="SqlJobLock.cs", label="Entry HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40"];
m27_41 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="SqlJobLock.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="53-53"];
m27_0 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="Entry HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", span="26-26"];
m27_1 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="connection == null", span="33-33"];
m27_3 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="newState == null", span="34-34"];
m27_5 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="_connection = connection", span="36-36"];
m27_6 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="OldStateName = oldStateName", span="37-37"];
m27_7 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="NewState = newState", span="38-38"];
m27_2 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="throw new ArgumentNullException(''connection'');", span="33-33"];
m27_4 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="throw new ArgumentNullException(''newState'');", span="34-34"];
m27_8 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="JobExpirationTimeout = TimeSpan.FromDays(1)", span="39-39"];
m27_9 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="SqlJobLock.cs", label="Exit HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", span="26-26"];
m27_37 [cluster="HangFire.States.IStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlJobLock.cs", label="Entry HangFire.States.IStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="24-24"];
m27_11 [cluster="System.TimeSpan.FromDays(double)", file="SqlJobLock.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m27_36 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlJobLock.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26"];
m27_35 [cluster="HangFire.States.IApplyStateFilter.OnStateUnapplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlJobLock.cs", label="Entry HangFire.States.IApplyStateFilter.OnStateUnapplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="36-36"];
m27_42 [file="SqlJobLock.cs", label="HangFire.States.ApplyStateContext", span=""];
m28_0 [cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", file="SqlServerApplicationLockException.cs", label="Entry HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7"];
m28_1 [cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", file="SqlServerApplicationLockException.cs", label="Exit HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7"];
m30_6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlServerStorage.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m30_2 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="SqlServerStorage.cs", label="Entry HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", span="24-24"];
m30_3 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="SqlServerStorage.cs", label="DefaultExpressionFingerprint other = obj as DefaultExpressionFingerprint", span="26-26"];
m30_4 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="SqlServerStorage.cs", label="return (other != null)\r\n                   && this.Equals(other);", span="27-28"];
m30_5 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="SqlServerStorage.cs", label="Exit HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", span="24-24"];
m30_0 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerStorage.cs", label="Entry HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17"];
m30_1 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerStorage.cs", label="Exit HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17"];
m30_7 [file="SqlServerStorage.cs", label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint", span=""];
m31_13 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="53-53"];
m31_9 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="38-38"];
m31_10 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", color=green, community=0, file="SqlServerWriteOnlyCounter.cs", label="combiner.AddObject(Method)", prediction=30, span="40-40"];
m31_11 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", color=green, community=0, file="SqlServerWriteOnlyCounter.cs", label="base.AddToHashCodeCombiner(combiner)", prediction=30, span="41-41"];
m31_12 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="38-38"];
m31_8 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m31_7 [cluster="object.Equals(object, object)", file="SqlServerWriteOnlyCounter.cs", label="Entry object.Equals(object, object)", span="0-0"];
m31_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="26-26"];
m31_0 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="18-18"];
m31_1 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", color=green, community=0, file="SqlServerWriteOnlyCounter.cs", label="Method = method", prediction=32, span="24-24"];
m31_2 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="18-18"];
m31_3 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", span="30-30"];
m31_4 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", color=green, community=0, file="SqlServerWriteOnlyCounter.cs", label="UnaryExpressionFingerprint other = obj as UnaryExpressionFingerprint", prediction=33, span="32-32"];
m31_5 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", color=green, community=0, file="SqlServerWriteOnlyCounter.cs", label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", prediction=30, span="33-35"];
m31_6 [cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", span="30-30"];
m31_15 [file="SqlServerWriteOnlyCounter.cs", label="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint", span=""];
m32_12 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="48-48"];
m32_3 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", span="26-26"];
m32_4 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="ParameterExpressionFingerprint other = obj as ParameterExpressionFingerprint", prediction=35, span="28-28"];
m32_5 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="return (other != null)\r\n                   && (this.ParameterIndex == other.ParameterIndex)\r\n                   && this.Equals(other);", prediction=36, span="29-31"];
m32_6 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", span="26-26"];
m32_7 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m32_8 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="34-34"];
m32_9 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="combiner.AddInt32(ParameterIndex)", prediction=36, span="36-36"];
m32_10 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="base.AddToHashCodeCombiner(combiner)", prediction=36, span="37-37"];
m32_11 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="34-34"];
m32_13 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="26-26"];
m32_0 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", span="17-17"];
m32_1 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="ParameterIndex = parameterIndex", prediction=39, span="20-20"];
m32_2 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", span="17-17"];
m32_14 [file="SqlServerWriteOnlyJob.cs", label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", span=""];
m33_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyList.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m33_26 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104"];
m33_28 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="106-106"];
m33_27 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="client == null", span="106-106"];
m33_29 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="return client.Create(methodCall, new ScheduledState(delay));", span="108-108"];
m33_30 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104"];
m33_77 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="279-279"];
m33_78 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="return ContinueWith(client, parentId, methodCall, nextState, JobContinuationOptions.OnlyOnSucceededState);", span="285-285"];
m33_79 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="279-279"];
m33_6 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m33_36 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138"];
m33_38 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="143-143"];
m33_37 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="client == null", span="143-143"];
m33_39 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="145-145"];
m33_40 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138"];
m33_68 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="265-265"];
m33_71 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="var state = new EnqueuedState()", span="269-269"];
m33_70 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="267-267"];
m33_69 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="client == null", span="267-267"];
m33_72 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="return client.ChangeState(jobId, state, fromState);", span="270-270"];
m33_73 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="265-265"];
m33_55 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="204-204"];
m33_56 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="SqlServerWriteOnlyList.cs", label="return Delete(client, jobId, null);", span="206-206"];
m33_57 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="204-204"];
m33_31 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120"];
m33_33 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="125-125"];
m33_32 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="client == null", span="125-125"];
m33_34 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="127-127"];
m33_35 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120"];
m33_49 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="177-177"];
m33_51 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="179-179"];
m33_50 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="client == null", span="179-179"];
m33_52 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="return client.ChangeState(jobId, state, null);", span="180-180"];
m33_53 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="177-177"];
m33_58 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="233-233"];
m33_60 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="235-235"];
m33_59 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="client == null", span="235-235"];
m33_61 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="var state = new DeletedState()", span="237-237"];
m33_62 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="return client.ChangeState(jobId, state, fromState);", span="238-238"];
m33_63 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="233-233"];
m33_14 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69"];
m33_17 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="return client.Create(methodCall, new ScheduledState(delay));", span="73-73"];
m33_16 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="71-71"];
m33_15 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="client == null", span="71-71"];
m33_18 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69"];
m33_13 [cluster="Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158"];
m33_20 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84"];
m33_23 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="91-91"];
m33_22 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="89-89"];
m33_21 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="client == null", span="89-89"];
m33_24 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84"];
m33_42 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41"];
m33_8 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54"];
m33_11 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyList.cs", label="return client.Create(methodCall, new EnqueuedState());", span="58-58"];
m33_10 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="56-56"];
m33_9 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyList.cs", label="client == null", span="56-56"];
m33_12 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54"];
m33_43 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158"];
m33_45 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="163-163"];
m33_44 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="client == null", span="163-163"];
m33_46 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="165-165"];
m33_47 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158"];
m33_64 [cluster="Hangfire.States.DeletedState.DeletedState()", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m33_19 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="28-28"];
m33_80 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="297-297"];
m33_85 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", span="304-304"];
m33_84 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="client == null", span="304-304"];
m33_86 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="var state = new AwaitingState(parentId, nextState, options)", span="306-306"];
m33_87 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="307-307"];
m33_88 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="297-297"];
m33_65 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="249-249"];
m33_66 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="SqlServerWriteOnlyList.cs", label="return Requeue(client, jobId, null);", span="251-251"];
m33_67 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="249-249"];
m33_48 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="191-191"];
m33_0 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
m33_1 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="client == null", prediction=40, span="38-38"];
m33_2 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="throw new ArgumentNullException(''client'');", prediction=41, span="38-38"];
m33_3 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="return client.Create(methodCall, new EnqueuedState());", prediction=42, span="40-40"];
m33_4 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
m33_7 [cluster="Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138"];
m33_74 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="273-273"];
m33_75 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyList.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState());", span="276-276"];
m33_76 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="273-273"];
m33_81 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288"];
m33_82 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="294-294"];
m33_83 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288"];
m33_54 [cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="54-54"];
m33_89 [cluster="Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="40-40"];
m33_41 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m33_25 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="SqlServerWriteOnlyList.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="34-34"];
m34_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="10-10"];
m34_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyQueue.cs", label="transaction == null", prediction=43, span="12-12"];
m34_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyQueue.cs", label="throw new ArgumentNullException(''transaction'');", prediction=44, span="12-12"];
m34_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyQueue.cs", label="_transaction = transaction", prediction=45, span="14-14"];
m34_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="10-10"];
m34_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyQueue.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m34_10 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="38-38"];
m34_14 [cluster="Unk.Execute", file="SqlServerWriteOnlyQueue.cs", label="Entry Unk.Execute", span=""];
m34_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m34_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", color=green, community=0, file="SqlServerWriteOnlyQueue.cs", label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", prediction=46, span="19-21"];
m34_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", color=green, community=0, file="SqlServerWriteOnlyQueue.cs", label="_transaction.QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", prediction=47, span="23-25"];
m34_9 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m34_11 [cluster="lambda expression", file="SqlServerWriteOnlyQueue.cs", label="Entry lambda expression", span="23-25"];
m34_12 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyQueue.cs", label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", prediction=48, span="23-25"];
m34_13 [cluster="lambda expression", file="SqlServerWriteOnlyQueue.cs", label="Exit lambda expression", span="23-25"];
m34_15 [file="SqlServerWriteOnlyQueue.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue", span=""];
m34_16 [file="SqlServerWriteOnlyQueue.cs", label=string, span=""];
m34_17 [file="SqlServerWriteOnlyQueue.cs", label=string, span=""];
m34_18 [file="SqlServerWriteOnlyQueue.cs", label=enqueueJobSql, span=""];
m35_8 [cluster="Hangfire.JobStorage.GetConnection()", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m35_0 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="26-26"];
m35_1 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="_heartbeatInterval = heartbeatInterval", prediction=49, span="28-28"];
m35_2 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="SqlServerWriteOnlySet.cs", label="Exit Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="26-26"];
m35_3 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m35_4 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="var connection = context.Storage.GetConnection()", prediction=50, span="33-33"];
m35_5 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="connection.Heartbeat(context.ServerId)", prediction=51, span="35-35"];
m35_6 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="context.Sleep(_heartbeatInterval)", prediction=51, span="38-38"];
m35_7 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlySet.cs", label="Exit Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m35_10 [cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23"];
m35_11 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Server.ServerHeartbeat.ToString()", span="41-41"];
m35_12 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="return ''Server Heartbeat'';", prediction=53, span="43-43"];
m35_13 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="SqlServerWriteOnlySet.cs", label="Exit Hangfire.Server.ServerHeartbeat.ToString()", span="41-41"];
m35_9 [cluster="Hangfire.Storage.IStorageConnection.Heartbeat(string)", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Storage.IStorageConnection.Heartbeat(string)", span="49-49"];
m35_14 [file="SqlServerWriteOnlySet.cs", label="Hangfire.Server.ServerHeartbeat", span=""];
m37_34 [cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120"];
m37_20 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105"];
m37_21 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="107-107"];
m37_22 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="return client.Schedule(methodCall, enqueueAt);", span="108-108"];
m37_23 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105"];
m37_64 [cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288"];
m37_45 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Requeue(string)", span="178-178"];
m37_46 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="180-180"];
m37_47 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="SqlServerWriteOnlyValue.cs", label="return client.Requeue(jobId);", span="181-181"];
m37_48 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Requeue(string)", span="178-178"];
m37_59 [cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="273-273"];
m37_24 [cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84"];
m37_3 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48"];
m37_35 [cluster="Hangfire.BackgroundJob.Delete(string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149"];
m37_36 [cluster="Hangfire.BackgroundJob.Delete(string)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="151-151"];
m37_37 [cluster="Hangfire.BackgroundJob.Delete(string)", file="SqlServerWriteOnlyValue.cs", label="return client.Delete(jobId);", span="152-152"];
m37_38 [cluster="Hangfire.BackgroundJob.Delete(string)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Delete(string)", span="149-149"];
m37_9 [cluster="Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
m37_60 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206"];
m37_61 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="208-208"];
m37_62 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyValue.cs", label="return client.ContinueWith(parentId, methodCall, options);", span="209-209"];
m37_63 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206"];
m37_49 [cluster="Hangfire.IBackgroundJobClient.Requeue(string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Requeue(string)", span="249-249"];
m37_8 [cluster="System.Func<TResult>.Invoke()", file="SqlServerWriteOnlyValue.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m37_54 [cluster="Hangfire.IBackgroundJobClient.Requeue(string, string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Requeue(string, string)", span="265-265"];
m37_39 [cluster="Hangfire.IBackgroundJobClient.Delete(string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Delete(string)", span="204-204"];
m37_55 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200"];
m37_56 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="202-202"];
m37_57 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyValue.cs", label="return client.ContinueWith(parentId, methodCall);", span="203-203"];
m37_58 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200"];
m37_30 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135"];
m37_31 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="137-137"];
m37_32 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="return client.Schedule(methodCall, enqueueAt);", span="138-138"];
m37_33 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135"];
m37_0 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Entry lambda expression", span="29-29"];
m37_1 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="new BackgroundJobClient(JobStorage.Current)", prediction=54, span="29-29"];
m37_2 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Exit lambda expression", span="29-29"];
m37_29 [cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104"];
m37_50 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="194-194"];
m37_51 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="196-196"];
m37_52 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="SqlServerWriteOnlyValue.cs", label="return client.Requeue(jobId, fromState);", span="197-197"];
m37_53 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Requeue(string, string)", span="194-194"];
m37_40 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="165-165"];
m37_41 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="167-167"];
m37_42 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="SqlServerWriteOnlyValue.cs", label="return client.Delete(jobId, fromState);", span="168-168"];
m37_43 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Delete(string, string)", span="165-165"];
m37_15 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91"];
m37_16 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="93-93"];
m37_17 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="return client.Schedule(methodCall, delay);", span="94-94"];
m37_18 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91"];
m37_44 [cluster="Hangfire.IBackgroundJobClient.Delete(string, string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Delete(string, string)", span="233-233"];
m37_4 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61"];
m37_5 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", prediction=55, span="63-63"];
m37_6 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="return client.Enqueue(methodCall);", prediction=56, span="64-64"];
m37_7 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61"];
m37_19 [cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69"];
m37_10 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m37_11 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="79-79"];
m37_12 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyValue.cs", label="return client.Enqueue(methodCall);", span="80-80"];
m37_13 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m37_25 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120"];
m37_26 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="var client = ClientFactory()", span="122-122"];
m37_27 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="return client.Schedule(methodCall, delay);", span="123-123"];
m37_28 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120"];
m37_14 [cluster="Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54"];
m38_14 [cluster="System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", file="SqlStorageConnection.cs", label="Entry System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", span="0-0"];
m38_9 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="SqlStorageConnection.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m38_0 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="SqlStorageConnection.cs", label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17"];
m38_1 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="SqlStorageConnection.cs", label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17"];
m38_13 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="SqlStorageConnection.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m38_2 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="SqlStorageConnection.cs", label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21"];
m38_3 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="SqlStorageConnection.cs", label="var visitor = new HoistingExpressionVisitor<TIn, TOut>()", span="25-25"];
m38_4 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="SqlStorageConnection.cs", label="var rewrittenBodyExpr = visitor.Visit(expr.Body)", span="26-26"];
m38_5 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="SqlStorageConnection.cs", label="var rewrittenLambdaExpr = Expression.Lambda<Hoisted<TIn, TOut>>(rewrittenBodyExpr, expr.Parameters[0], _hoistedConstantsParamExpr)", span="27-27"];
m38_6 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="SqlStorageConnection.cs", label="return rewrittenLambdaExpr;", span="28-28"];
m38_7 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="SqlStorageConnection.cs", label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21"];
m38_10 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="SqlStorageConnection.cs", label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31"];
m38_11 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="SqlStorageConnection.cs", label="return Expression.Convert(Expression.Property(_hoistedConstantsParamExpr, ''Item'', Expression.Constant(_numConstantsProcessed++)), node.Type);", span="34-34"];
m38_12 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="SqlStorageConnection.cs", label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31"];
m38_15 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="SqlStorageConnection.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m38_8 [cluster="System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", file="SqlStorageConnection.cs", label="Entry System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", span="0-0"];
m38_16 [file="SqlStorageConnection.cs", label="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>", span=""];
m39_17 [cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49"];
m39_18 [cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="SqlStoredJobs.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="51-54"];
m39_19 [cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49"];
m39_10 [cluster="Unk.>", file="SqlStoredJobs.cs", label="Entry Unk.>", span=""];
m39_16 [cluster="Unk.Execute", file="SqlStoredJobs.cs", label="Entry Unk.Execute", span=""];
m39_13 [cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", span="38-38"];
m39_14 [cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="SqlStoredJobs.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="40-46"];
m39_15 [cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", span="38-38"];
m39_3 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", span="20-20"];
m39_4 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="var job = _connection.Query<Job>(\r\n                @''select InvocationData, State from HangFire.Job where id = @id'',\r\n                new { id = id })\r\n                .SingleOrDefault()", span="22-25"];
m39_5 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="job == null", span="27-27"];
m39_7 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="var data = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="29-29"];
m39_8 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = data,\r\n                State = job.State,\r\n            };", span="31-35"];
m39_6 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="return null;", span="27-27"];
m39_9 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", span="20-20"];
m39_0 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15"];
m39_1 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStoredJobs.cs", label="_connection = connection", span="17-17"];
m39_2 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15"];
m39_11 [cluster="Unk.SingleOrDefault", file="SqlStoredJobs.cs", label="Entry Unk.SingleOrDefault", span=""];
m39_12 [cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="SqlStoredJobs.cs", label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2"];
m39_20 [cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57"];
m39_21 [cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="SqlStoredJobs.cs", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = payload.Id, queueName = payload.Queue })", span="59-60"];
m39_22 [cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57"];
m39_23 [file="SqlStoredJobs.cs", label="HangFire.SqlServer.SqlStoredJobs", span=""];
m40_7 [cluster="Unk.SingleOrDefault", file="SqlStoredSets.cs", label="Entry Unk.SingleOrDefault", span=""];
m40_6 [cluster="Unk.>", file="SqlStoredSets.cs", label="Entry Unk.>", span=""];
m40_3 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SqlStoredSets.cs", label="Entry HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m40_4 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SqlStoredSets.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="18-21"];
m40_5 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SqlStoredSets.cs", label="Exit HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m40_0 [cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStoredSets.cs", label="Entry HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", span="11-11"];
m40_1 [cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStoredSets.cs", label="_connection = connection", span="13-13"];
m40_2 [cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStoredSets.cs", label="Exit HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", span="11-11"];
m40_8 [file="SqlStoredSets.cs", label="HangFire.SqlServer.SqlStoredSets", span=""];
m41_61 [cluster="HangFire.Web.RazorPage.Write(object)", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m41_0 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.Execute()", span="62-62"];
m41_49 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Write(RenderPartial(new Paginator(pager)))", span="373-373"];
m41_48 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="362-362"];
m41_27 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Write(HtmlHelper.JobId(job.Key))", span="229-229"];
m41_28 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="234-234"];
m41_29 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="!job.Value.InEnqueuedState", span="239-239"];
m41_30 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="245-246"];
m41_31 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <span class=\''label label-default\'' style=\'''')", span="256-257"];
m41_32 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="262-262"];
m41_33 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''\''>\r\n                                '')", span="267-267"];
m41_34 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Write(job.Value.State)", span="272-272"];
m41_35 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''\r\n                            </span>\r\n                        </td>\r\n           '' +\r\n''             <td>\r\n                            <a class=\''job-method\'' href=\'''')", span="277-278"];
m41_36 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="283-283"];
m41_37 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''\''>\r\n                                '')", span="288-288"];
m41_38 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="293-293"];
m41_39 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''\r\n                            </a>\r\n                        </td>\r\n              '' +\r\n''          <td class=\''align-right\''>\r\n'')", span="298-299"];
m41_40 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="job.Value.EnqueuedAt.HasValue", span="304-304"];
m41_41 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="310-310"];
m41_46 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''                                <em>n/a</em>\r\n'')", span="342-342"];
m41_42 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="315-315"];
m41_43 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''\''>\r\n                                    '')", span="320-320"];
m41_44 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Write(job.Value.EnqueuedAt)", span="325-325"];
m41_45 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''\r\n                                </span>\r\n'')", span="330-330"];
m41_47 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="352-352"];
m41_50 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlWriteTransaction.cs", label="Exit HangFire.Web.Pages.EnqueuedJobsPage.Execute()", span="62-62"];
m41_67 [cluster="string.Format(string, object)", file="SqlWriteTransaction.cs", label="Entry string.Format(string, object)", span="0-0"];
m41_60 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlWriteTransaction.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", span="29-29"];
m41_58 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m41_56 [cluster="Unk.TryParse", file="SqlWriteTransaction.cs", label="Entry Unk.TryParse", span=""];
m41_51 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m41_53 [cluster="string.ToUpperInvariant()", file="SqlWriteTransaction.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m41_63 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m41_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlWriteTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m41_62 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m41_66 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlWriteTransaction.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m41_59 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39"];
m41_69 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlWriteTransaction.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m41_64 [cluster="Unk.Write", file="SqlWriteTransaction.cs", label="Entry Unk.Write", span=""];
m41_65 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m41_57 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="SqlWriteTransaction.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m41_52 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m41_55 [cluster="HttpRequestBase.LinkTo(string)", file="SqlWriteTransaction.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m41_68 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m41_70 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SqlWriteTransaction.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m41_71 [file="SqlWriteTransaction.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m42_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateApplyingContext.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m42_0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", span="23-23"];
m42_1 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="transaction == null", span="27-27"];
m42_3 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="Transaction = transaction", span="29-29"];
m42_2 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''transaction'');", span="27-27"];
m42_4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", span="23-23"];
m42_6 [file="StateApplyingContext.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m43_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m43_5 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="StateMachine.cs", label="Entry Hangfire.Client.CreatedContext.SetJobParameter(string, object)", span="70-70"];
m43_6 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="StateMachine.cs", label="String.IsNullOrWhiteSpace(name)", span="72-72"];
m43_7 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="StateMachine.cs", label="throw new ArgumentNullException(''name'');", span="72-72"];
m43_8 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="StateMachine.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="74-74"];
m43_9 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="StateMachine.cs", label="Exit Hangfire.Client.CreatedContext.SetJobParameter(string, object)", span="70-70"];
m43_10 [cluster="string.IsNullOrWhiteSpace(string)", file="StateMachine.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m43_0 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="StateMachine.cs", label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", span="29-29"];
m43_1 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="StateMachine.cs", label="JobId = jobId", span="36-36"];
m43_2 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="StateMachine.cs", label="Canceled = canceled", span="37-37"];
m43_3 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="StateMachine.cs", label="Exception = exception", span="38-38"];
m43_4 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="StateMachine.cs", label="Exit Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", span="29-29"];
m43_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StateMachine.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m43_13 [file="StateMachine.cs", label="Hangfire.Client.CreatedContext", span=""];
m44_87 [cluster="RedisWriteOnlyTransaction.cstr", file="StateSteps.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m44_268 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="438-438"];
m44_269 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="var serializedHistory = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="440-441"];
m44_272 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="i < table.RowCount", span="444-444"];
m44_273 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.Rows[i][''State''], history[i][''State''])", span="446-446"];
m44_270 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="var history = serializedHistory.Select(JobHelper.FromJson<Dictionary<string, string>>).ToList()", span="442-442"];
m44_271 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="var i = 0", span="444-444"];
m44_274 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="i++", span="444-444"];
m44_275 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="438-438"];
m44_176 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="297-297"];
m44_177 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="299-299"];
m44_178 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="var timestamp = JobHelper.FromTimestamp((long)score)", span="300-300"];
m44_179 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="Assert.IsTrue(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="302-302"];
m44_180 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.AddSeconds(1))", span="303-303"];
m44_181 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="297-297"];
m44_160 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="272-272"];
m44_161 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StateSteps.cs", label="Assert.AreEqual(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="274-274"];
m44_162 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StateSteps.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="275-275"];
m44_163 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="272-272"];
m44_114 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="189-189"];
m44_115 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", color=green, community=0, file="StateSteps.cs", label="var stateMachine = new StateMachine(\r\n                new RedisStorageConnection(Redis.Storage, Redis.Client), _handlers, _filters)", prediction=57, span="193-194"];
m44_116 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StateSteps.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _stateMocks[state].Object, allowedState)", span="194-194"];
m44_117 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="189-189"];
m44_19 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", span="66-66"];
m44_20 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="StateSteps.cs", label="_state = new EnqueuedState(''SomeReason'')", span="68-68"];
m44_21 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", span="66-66"];
m44_185 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="307-307"];
m44_186 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StateSteps.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="309-309"];
m44_187 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StateSteps.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="310-310"];
m44_188 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StateSteps.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="311-311"];
m44_189 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StateSteps.cs", label="Assert.IsTrue(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="313-313"];
m44_190 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StateSteps.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="314-314"];
m44_191 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="307-307"];
m44_121 [cluster="Unk.AreEqual", file="StateSteps.cs", label="Entry Unk.AreEqual", span=""];
m44_175 [cluster="Unk.IsFalse", file="StateSteps.cs", label="Entry Unk.IsFalse", span=""];
m44_102 [cluster="HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="14-14"];
m44_72 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="110-110"];
m44_73 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StateSteps.cs", label="Given(String.Format(''a '{0}' state'', state))", span="112-112"];
m44_74 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StateSteps.cs", label="_filters.Add(\r\n                new TestStateChangingFilter(name, _stateChangingResults, _stateMocks[state].Object))", span="114-115"];
m44_75 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="110-110"];
m44_159 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="StateSteps.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m44_221 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", span="367-367"];
m44_222 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="StateSteps.cs", label="Assert.Inconclusive(''Re-write this test for the corresponding handler'')", span="372-372"];
m44_223 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", span="367-367"];
m44_113 [cluster="Unk.ChangeState", file="StateSteps.cs", label="Entry Unk.ChangeState", span=""];
m44_231 [cluster="Unk.Unapply", file="StateSteps.cs", label="Entry Unk.Unapply", span=""];
m44_126 [cluster="Unk.ForEach", file="StateSteps.cs", label="Entry Unk.ForEach", span=""];
m44_217 [cluster="Unk.IsNotNull", file="StateSteps.cs", label="Entry Unk.IsNotNull", span=""];
m44_48 [cluster="Unk.Given", file="StateSteps.cs", label="Entry Unk.Given", span=""];
m44_192 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="318-318"];
m44_193 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StateSteps.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="320-320"];
m44_194 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="318-318"];
m44_90 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="StateSteps.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m44_22 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="StateSteps.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="31-31"];
m44_257 [cluster="Unk.ContainsKey", file="StateSteps.cs", label="Entry Unk.ContainsKey", span=""];
m44_241 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="391-391"];
m44_242 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="393-394"];
m44_243 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Assert.IsNotNull(entry)", span="395-395"];
m44_244 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="397-397"];
m44_245 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Assert.IsNotNull(history, entry)", span="398-398"];
m44_247 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Assert.IsTrue(history.ContainsKey(property.Key))", span="402-402"];
m44_248 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Assert.AreEqual(property.Value, history[property.Key])", span="403-403"];
m44_246 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label=_stateProperties, span="400-400"];
m44_249 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="391-391"];
m44_144 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="239-239"];
m44_145 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StateSteps.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="241-246"];
m44_146 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StateSteps.cs", label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n            })", span="248-254"];
m44_147 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="239-239"];
m44_143 [cluster="Unk.PopItemFromList", file="StateSteps.cs", label="Entry Unk.PopItemFromList", span=""];
m44_158 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="StateSteps.cs", label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="31-31"];
m44_76 [cluster="TestStateChangingFilter.cstr", file="StateSteps.cs", label="Entry TestStateChangingFilter.cstr", span=""];
m44_29 [cluster="Mock<JobState>.cstr", file="StateSteps.cs", label="Entry Mock<JobState>.cstr", span=""];
m44_17 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="StateSteps.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="27-27"];
m44_250 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m44_118 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="198-198"];
m44_119 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StateSteps.cs", label="Assert.AreEqual(name, _state.StateName)", span="200-200"];
m44_120 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="198-198"];
m44_67 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="104-104"];
m44_68 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StateSteps.cs", label="_filters.Add(new TestStateChangingFilter(name, _stateChangingResults))", span="106-106"];
m44_69 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="104-104"];
m44_10 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="54-54"];
m44_11 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StateSteps.cs", label="_state = new ProcessingState(''SomeReason'', ''TestServer'')", span="56-56"];
m44_12 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="54-54"];
m44_89 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateSteps.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m44_18 [cluster="System.DateTime.AddDays(double)", file="StateSteps.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m44_41 [cluster="Unk.GetProperties", file="StateSteps.cs", label="Entry Unk.GetProperties", span=""];
m44_224 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="376-376"];
m44_225 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="StateSteps.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId)))", span="378-379"];
m44_226 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="376-376"];
m44_256 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="408-408"];
m44_251 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="408-408"];
m44_252 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="410-411"];
m44_253 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label=_stateProperties, span="413-413"];
m44_254 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label="Assert.IsTrue(stateEntry.ContainsKey(property.Key))", span="415-415"];
m44_255 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label="Assert.AreEqual(property.Value, stateEntry[property.Key])", span="416-416"];
m44_81 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="125-125"];
m44_82 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", color=green, community=0, file="StateSteps.cs", label="var transaction = \r\n                new RedisWriteOnlyTransaction(Redis.Client.CreateTransaction())", prediction=58, span="128-129"];
m44_83 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="StateSteps.cs", label="var context = new StateApplyingContext(\r\n                    new StateContext(JobSteps.DefaultJobId, _defaultData),\r\n                    transaction)", span="131-133"];
m44_85 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="StateSteps.cs", label="transaction.Commit()", span="138-138"];
m44_84 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="StateSteps.cs", label="Assert.Inconclusive(''Re-write this test for the corresponding handler'')", span="135-135"];
m44_86 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="125-125"];
m44_91 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="StateSteps.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="30-30"];
m44_258 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="421-421"];
m44_259 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.RowCount, _stateChangingResults.Count)", span="423-423"];
m44_261 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i < table.RowCount", span="425-425"];
m44_262 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.Rows[i][''Filter''], _stateChangingResults[i])", span="427-427"];
m44_260 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="var i = 0", span="425-425"];
m44_263 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i++", span="425-425"];
m44_264 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="421-421"];
m44_238 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="386-386"];
m44_34 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="75-75"];
m44_37 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="76-76"];
m44_35 [cluster="lambda expression", file="StateSteps.cs", label="x.StateName", span="75-75"];
m44_36 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="75-75"];
m44_38 [cluster="lambda expression", file="StateSteps.cs", label="x.GetProperties(It.IsAny<JobMethod>())", span="76-76"];
m44_39 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="76-76"];
m44_50 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="87-87"];
m44_53 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="87-87"];
m44_56 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="88-88"];
m44_51 [cluster="lambda expression", file="StateSteps.cs", label="x[''Name'']", span="87-87"];
m44_52 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="87-87"];
m44_54 [cluster="lambda expression", file="StateSteps.cs", label="x[''Value'']", span="87-87"];
m44_55 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="87-87"];
m44_57 [cluster="lambda expression", file="StateSteps.cs", label="x.GetProperties(It.IsAny<JobMethod>())", span="88-88"];
m44_58 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="88-88"];
m44_127 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="213-219"];
m44_128 [cluster="lambda expression", file="StateSteps.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="215-215"];
m44_129 [cluster="lambda expression", file="StateSteps.cs", label="Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl)", span="216-218"];
m44_130 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="213-219"];
m44_148 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="248-254"];
m44_149 [cluster="lambda expression", file="StateSteps.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="250-250"];
m44_150 [cluster="lambda expression", file="StateSteps.cs", label="Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl)", span="251-253"];
m44_151 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="248-254"];
m44_228 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="379-379"];
m44_229 [cluster="lambda expression", file="StateSteps.cs", label="x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId))", span="379-379"];
m44_230 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="379-379"];
m44_232 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="379-379"];
m44_233 [cluster="lambda expression", file="StateSteps.cs", label="y.JobId == JobSteps.DefaultJobId", span="379-379"];
m44_234 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="379-379"];
m44_239 [cluster="lambda expression", file="StateSteps.cs", label="x.Unapply(It.IsAny<StateApplyingContext>())", span="386-386"];
m44_240 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="386-386"];
m44_198 [cluster="Unk.SetContainsItem", file="StateSteps.cs", label="Entry Unk.SetContainsItem", span=""];
m44_59 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", span="93-93"];
m44_60 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="Given(''a job'')", span="95-95"];
m44_61 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="Given(''its state is Old'')", span="96-96"];
m44_62 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="_oldStateDescriptorMock = new Mock<JobStateHandler>()", span="98-98"];
m44_63 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="Assert.Inconclusive(''Rewrite'')", span="100-100"];
m44_64 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", span="93-93"];
m44_70 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="StateSteps.cs", label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m44_278 [cluster="Unk.ToList", file="StateSteps.cs", label="Entry Unk.ToList", span=""];
m44_172 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="291-291"];
m44_173 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StateSteps.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="293-293"];
m44_174 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="291-291"];
m44_31 [cluster="Unk.Returns", file="StateSteps.cs", label="Entry Unk.Returns", span=""];
m44_33 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateSteps.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m44_88 [cluster="Unk.CreateTransaction", file="StateSteps.cs", label="Entry Unk.CreateTransaction", span=""];
m44_101 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateSteps.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m44_104 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="172-172"];
m44_105 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StateSteps.cs", label="When(String.Format(\r\n                ''I change the state of the '{0}' job to the '{1}''',\r\n                JobSteps.DefaultJobId,\r\n                state))", span="174-177"];
m44_106 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="172-172"];
m44_131 [cluster="Unk.GetTimeToLive", file="StateSteps.cs", label="Entry Unk.GetTimeToLive", span=""];
m44_71 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="StateSteps.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m44_9 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="StateSteps.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="27-27"];
m44_77 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="119-119"];
m44_78 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StateSteps.cs", label="_filters.Add(new TestStateChangedFilter(name, _stateAppliedResults))", span="121-121"];
m44_79 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="119-119"];
m44_42 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="83-83"];
m44_43 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StateSteps.cs", label="Given(String.Format(''a '{0}' state'', state))", span="85-85"];
m44_44 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StateSteps.cs", label="_stateProperties = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="87-87"];
m44_45 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StateSteps.cs", label="_stateMocks[state].Setup(x => x.GetProperties(It.IsAny<JobMethod>()))\r\n                .Returns(_stateProperties)", span="88-89"];
m44_46 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="83-83"];
m44_235 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="383-383"];
m44_236 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StateSteps.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.IsAny<StateApplyingContext>()),\r\n                Times.Never)", span="385-387"];
m44_237 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="383-383"];
m44_216 [cluster="Unk.RemoveStartFromList", file="StateSteps.cs", label="Entry Unk.RemoveStartFromList", span=""];
m44_199 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="330-330"];
m44_200 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="332-332"];
m44_201 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Assert.AreEqual(state, job[''State''])", span="333-333"];
m44_202 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="330-330"];
m44_65 [cluster="Mock<JobStateHandler>.cstr", file="StateSteps.cs", label="Entry Mock<JobStateHandler>.cstr", span=""];
m44_133 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="223-223"];
m44_134 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StateSteps.cs", label="Assert.AreEqual(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="225-227"];
m44_135 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="223-223"];
m44_80 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StateSteps.cs", label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m44_265 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="432-432"];
m44_266 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StateSteps.cs", label="Assert.AreEqual(0, _stateChangingResults.Count)", span="434-434"];
m44_267 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="432-432"];
m44_8 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StateSteps.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m44_23 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="72-72"];
m44_24 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="var mock = new Mock<JobState>(''SomeReason'')", span="74-74"];
m44_25 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="mock.Setup(x => x.StateName).Returns(state)", span="75-75"];
m44_27 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="_stateMocks.Add(state, mock)", span="79-79"];
m44_26 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="mock.Setup(x => x.GetProperties(It.IsAny<JobMethod>()))\r\n                .Returns(new Dictionary<string, string>())", span="76-77"];
m44_28 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAState(string)", span="72-72"];
m44_13 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string)", file="StateSteps.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string)", span="27-27"];
m44_30 [cluster="Unk.Setup", file="StateSteps.cs", label="Entry Unk.Setup", span=""];
m44_14 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="60-60"];
m44_15 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StateSteps.cs", label="_state = new ScheduledState(''SomeReason'', DateTime.UtcNow.AddDays(1))", span="62-62"];
m44_16 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="60-60"];
m44_218 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="358-358"];
m44_219 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="StateSteps.cs", label="Assert.Inconclusive(''Re-write this test for the corresponding handler'')", span="363-363"];
m44_220 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="358-358"];
m44_195 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="324-324"];
m44_196 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="326-326"];
m44_197 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="324-324"];
m44_169 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="285-285"];
m44_170 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="287-287"];
m44_171 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="285-285"];
m44_164 [cluster="Unk.GetSortedSetCount", file="StateSteps.cs", label="Entry Unk.GetSortedSetCount", span=""];
m44_227 [cluster="Unk.Verify", file="StateSteps.cs", label="Entry Unk.Verify", span=""];
m44_138 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="231-231"];
m44_139 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Assert.AreEqual(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="233-233"];
m44_140 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="234-235"];
m44_141 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="231-231"];
m44_166 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="279-279"];
m44_167 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Assert.AreEqual(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="281-281"];
m44_168 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="279-279"];
m44_207 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="337-337"];
m44_204 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="337-337"];
m44_205 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StateSteps.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="339-340"];
m44_206 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StateSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, stateEntry)", span="341-341"];
m44_165 [cluster="Unk.SortedSetContainsItem", file="StateSteps.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m44_107 [cluster="string.Format(string, object, object)", file="StateSteps.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m44_184 [cluster="System.DateTime.AddSeconds(double)", file="StateSteps.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m44_136 [cluster="string.Format(string, params object[])", file="StateSteps.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m44_122 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="204-204"];
m44_123 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="206-211"];
m44_124 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n                })", span="213-219"];
m44_125 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="204-204"];
m44_49 [cluster="Unk.ToDictionary", file="StateSteps.cs", label="Entry Unk.ToDictionary", span=""];
m44_132 [cluster="Unk.IsTrue", file="StateSteps.cs", label="Entry Unk.IsTrue", span=""];
m44_203 [cluster="Unk.GetAllEntriesFromHash", file="StateSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m44_4 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="47-47"];
m44_5 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="_failedException = new InvalidOperationException(''Hello'')", span="49-49"];
m44_6 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="_state = new FailedState(''SomeReason'', _failedException)", span="50-50"];
m44_7 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="47-47"];
m44_183 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="StateSteps.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m44_47 [cluster="string.Format(string, object)", file="StateSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m44_215 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="345-345"];
m44_209 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="345-345"];
m44_210 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="347-348"];
m44_214 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, history)", span="354-354"];
m44_211 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Assert.IsNotNull(entry)", span="349-349"];
m44_212 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="351-351"];
m44_213 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Assert.IsNotNull(history, entry)", span="352-352"];
m44_66 [cluster="Unk.Inconclusive", file="StateSteps.cs", label="Entry Unk.Inconclusive", span=""];
m44_40 [cluster="Unk.>", file="StateSteps.cs", label="Entry Unk.>", span=""];
m44_182 [cluster="Unk.GetItemScoreInSortedSet", file="StateSteps.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m44_142 [cluster="Unk.GetListCount", file="StateSteps.cs", label="Entry Unk.GetListCount", span=""];
m44_0 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="41-41"];
m44_1 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StateSteps.cs", label="_state = new SucceededState(''Some reason'')", span="43-43"];
m44_2 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="41-41"];
m44_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m44_108 [cluster="Unk.When", file="StateSteps.cs", label="Entry Unk.When", span=""];
m44_152 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="258-258"];
m44_153 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Assert.AreEqual(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="260-260"];
m44_154 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="258-258"];
m44_3 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="StateSteps.cs", label="Entry HangFire.States.SucceededState.SucceededState(string)", span="29-29"];
m44_155 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="264-264"];
m44_156 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StateSteps.cs", label="DictionaryAssert.ContainsFollowingItems(\r\n                table,\r\n                _state.GetProperties(_defaultData))", span="266-268"];
m44_157 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="264-264"];
m44_276 [cluster="Unk.GetAllItemsFromList", file="StateSteps.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m44_109 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="181-181"];
m44_110 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", color=green, community=0, file="StateSteps.cs", label="var stateMachine = new StateMachine(\r\n                new RedisStorageConnection(Redis.Storage, Redis.Client), _handlers, _filters)", prediction=59, span="184-185"];
m44_111 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StateSteps.cs", label="stateMachine.ChangeState(jobId, _stateMocks[state].Object)", span="185-185"];
m44_112 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="181-181"];
m44_277 [cluster="Unk.Select", file="StateSteps.cs", label="Entry Unk.Select", span=""];
m44_103 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateSteps.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m44_97 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="164-164"];
m44_98 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", color=green, community=0, file="StateSteps.cs", label="var stateMachine = new StateMachine(\r\n                new RedisStorageConnection(Redis.Storage, Redis.Client), _handlers, _filters)", prediction=60, span="167-168"];
m44_99 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StateSteps.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="168-168"];
m44_100 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="164-164"];
m44_137 [cluster="Unk.GetValue", file="StateSteps.cs", label="Entry Unk.GetValue", span=""];
m44_92 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="142-142"];
m44_93 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", color=green, community=0, file="StateSteps.cs", label="var transaction =\r\n                new RedisWriteOnlyTransaction(Redis.Client.CreateTransaction())", prediction=61, span="145-146"];
m44_94 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="Assert.Inconclusive(''Rewrite it.'')", span="157-157"];
m44_95 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="transaction.Commit()", span="160-160"];
m44_96 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="142-142"];
m44_208 [cluster="Unk.ContainsFollowingItems", file="StateSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m44_279 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="451-451"];
m44_280 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.RowCount, _stateAppliedResults.Count)", span="453-453"];
m44_282 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i < table.RowCount", span="455-455"];
m44_283 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.Rows[i][''Method''], _stateAppliedResults[i])", span="457-457"];
m44_281 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="var i = 0", span="455-455"];
m44_284 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i++", span="455-455"];
m44_285 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="451-451"];
m44_286 [file="StateSteps.cs", label="HangFire.Tests.States.StateSteps", span=""];
m12_3 -> m12_5  [color=darkseagreen4, key=1, label=queues, style=dashed];
m12_3 -> m12_8  [color=darkseagreen4, key=1, label=queues, style=dashed];
m12_8 -> m12_10  [color=darkseagreen4, key=1, label=queue, style=dashed];
m12_8 -> m12_12  [color=darkseagreen4, key=1, label=queue, style=dashed];
m12_8 -> m12_14  [color=darkseagreen4, key=1, label=queue, style=dashed];
m12_8 -> m12_16  [color=darkseagreen4, key=1, label=queue, style=dashed];
m12_8 -> m12_18  [color=darkseagreen4, key=1, label=queue, style=dashed];
m12_8 -> m12_21  [color=darkseagreen4, key=1, label=queue, style=dashed];
m12_21 -> m12_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_23 -> m12_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_23 -> m12_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_25 -> m12_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_25 -> m12_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_27 -> m12_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_27 -> m12_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_29 -> m12_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_29 -> m12_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_31 -> m12_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_46 -> m12_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m12_46 -> m12_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m15_39 -> m15_16  [color=green, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_21  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m18_12 -> m18_15  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m18_12 -> m18_18  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m18_39 -> m18_42  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m18_40 -> m18_46  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_40 -> m18_48  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_41 -> m18_47  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_47 -> m18_47  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_0 -> m21_2  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m21_10 -> m21_12  [color=green, key=1, label=string, style=dashed];
m23_6 -> m23_12  [color=green, key=1, label=string, style=dashed];
m23_6 -> m23_8  [color=green, key=1, label=string, style=dashed];
m23_6 -> m23_16  [color=green, key=1, label=string, style=dashed];
m23_7 -> m23_11  [color=green, key=1, label="lambda expression", style=dashed];
m23_8 -> m23_15  [color=green, key=1, label="lambda expression", style=dashed];
m23_20 -> m23_7  [color=green, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue", style=dashed];
m23_20 -> m23_8  [color=green, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue", style=dashed];
m23_21 -> m23_12  [color=green, key=1, label=string, style=dashed];
m23_21 -> m23_16  [color=green, key=1, label=string, style=dashed];
m23_22 -> m23_16  [color=green, key=1, label=string, style=dashed];
m24_99 -> m24_180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_99 -> m24_168  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_99 -> m24_170  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_99 -> m24_172  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_99 -> m24_174  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_171 -> m24_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_167 -> m24_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_101 -> m24_156  [color=darkseagreen4, key=1, label=bool, style=dashed];
m24_101 -> m24_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_101 -> m24_159  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_154 -> m24_156  [color=darkseagreen4, key=1, label=builder, style=dashed];
m24_154 -> m24_157  [color=darkseagreen4, key=1, label=builder, style=dashed];
m24_154 -> m24_158  [color=darkseagreen4, key=1, label=builder, style=dashed];
m24_154 -> m24_159  [color=darkseagreen4, key=1, label=builder, style=dashed];
m24_154 -> m24_161  [color=darkseagreen4, key=1, label=builder, style=dashed];
m24_154 -> m24_162  [color=darkseagreen4, key=1, label=builder, style=dashed];
m24_97 -> m24_129  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_129 -> m24_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_129 -> m24_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_142 -> m24_144  [color=darkseagreen4, key=1, label=name, style=dashed];
m24_178 -> m24_188  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_178 -> m24_202  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_178 -> m24_203  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_0 -> m24_6  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m24_0 -> m24_10  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m24_0 -> m24_12  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m24_0 -> m24_15  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m24_0 -> m24_19  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m24_0 -> m24_21  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m24_0 -> m24_22  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m24_0 -> m24_33  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m24_3 -> m24_5  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_6  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_7  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_8  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_9  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_15  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_17  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_18  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_19  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_20  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_21  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_24  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_25  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_63  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_64  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_67  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_68  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_69  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_70  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_72  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_74  [color=green, key=1, label=builder, style=dashed];
m24_3 -> m24_75  [color=green, key=1, label=builder, style=dashed];
m24_23 -> m24_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_26 -> m24_31  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_14 -> m24_18  [color=darkseagreen4, key=1, label=serviceName, style=dashed];
m24_59 -> m24_68  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m24_60 -> m24_68  [color=darkseagreen4, key=1, label=tooltipPosition, style=dashed];
m24_61 -> m24_69  [color=darkseagreen4, key=1, label=renderedArgument, style=dashed];
m24_73 -> m24_73  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_27 -> m24_71  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m24_27 -> m24_58  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m24_27 -> m24_53  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m24_27 -> m24_55  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m24_30 -> m24_33  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_30 -> m24_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_41 -> m24_43  [color=darkseagreen4, key=1, label=argumentValue, style=dashed];
m24_41 -> m24_49  [color=darkseagreen4, key=1, label=argumentValue, style=dashed];
m24_28 -> m24_62  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m24_29 -> m24_62  [color=darkseagreen4, key=1, label=splitStringMinLength, style=dashed];
m24_54 -> m24_62  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m24_57 -> m24_66  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_57 -> m24_71  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_57 -> m24_73  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_49 -> m24_51  [color=darkseagreen4, key=1, label=item, style=dashed];
m24_48 -> m24_51  [color=darkseagreen4, key=1, label=renderedItems, style=dashed];
m24_56 -> m24_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_36 -> m24_45  [color=darkseagreen4, key=1, label=enumerableArgument, style=dashed];
m24_42 -> m24_51  [color=darkseagreen4, key=1, label=isJson, style=dashed];
m24_212 -> m24_159  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m24_212 -> m24_157  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m24_212 -> m24_155  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m24_212 -> m24_160  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m24_213 -> m24_180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_26 -> m25_19  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m25_26 -> m25_23  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m27_12 -> m27_15  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>", style=dashed];
m27_12 -> m27_18  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m27_12 -> m27_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>", style=dashed];
m27_12 -> m27_23  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m27_12 -> m27_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>", style=dashed];
m27_17 -> m27_19  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_17 -> m27_21  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_17 -> m27_22  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_17 -> m27_24  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_17 -> m27_26  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_17 -> m27_28  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_17 -> m27_29  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_17 -> m27_30  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_0 -> m27_3  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m27_42 -> m27_18  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m27_42 -> m27_19  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m27_42 -> m27_21  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m27_42 -> m27_22  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m27_42 -> m27_23  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m27_42 -> m27_24  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m27_42 -> m27_26  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m27_42 -> m27_27  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m27_42 -> m27_28  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m27_42 -> m27_29  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m30_7 -> m30_4  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint", style=dashed];
m31_9 -> m31_11  [color=green, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m31_15 -> m31_5  [color=green, key=1, label="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint", style=dashed];
m31_15 -> m31_10  [color=green, key=1, label="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint", style=dashed];
m31_15 -> m31_11  [color=green, key=1, label="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint", style=dashed];
m32_8 -> m32_10  [color=green, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m32_14 -> m32_5  [color=green, key=1, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", style=dashed];
m32_14 -> m32_9  [color=green, key=1, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", style=dashed];
m32_14 -> m32_10  [color=green, key=1, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", style=dashed];
m33_26 -> m33_29  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_36 -> m33_39  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_68 -> m33_72  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_31 -> m33_34  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_34 -> m33_34  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m33_49 -> m33_52  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_58 -> m33_62  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_14 -> m33_17  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_20 -> m33_23  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_23 -> m33_23  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m33_8 -> m33_11  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_43 -> m33_46  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_80 -> m33_87  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m33_0 -> m33_3  [color=green, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m34_8 -> m34_11  [color=green, key=1, label="lambda expression", style=dashed];
m35_3 -> m35_5  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m35_3 -> m35_6  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m35_14 -> m35_6  [color=green, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m37_20 -> m37_22  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m37_45 -> m37_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_35 -> m37_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_60 -> m37_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_55 -> m37_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_30 -> m37_32  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m37_50 -> m37_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_40 -> m37_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_15 -> m37_17  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m37_4 -> m37_6  [color=green, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m37_10 -> m37_12  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m37_25 -> m37_27  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m38_16 -> m38_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>", style=dashed];
m41_27 -> m41_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_27 -> m41_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_29 -> m41_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_29 -> m41_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_32 -> m41_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_32 -> m41_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_34 -> m41_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_34 -> m41_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_36 -> m41_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_36 -> m41_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_38 -> m41_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_38 -> m41_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_40 -> m41_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_40 -> m41_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_42 -> m41_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_42 -> m41_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_44 -> m41_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_71 -> m41_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m41_71 -> m41_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m44_268 -> m44_272  [color=darkseagreen4, key=1, label=Table, style=dashed];
m44_268 -> m44_273  [color=darkseagreen4, key=1, label=Table, style=dashed];
m44_270 -> m44_273  [color=darkseagreen4, key=1, label=history, style=dashed];
m44_271 -> m44_273  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_271 -> m44_274  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_274 -> m44_274  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_178 -> m44_180  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m44_114 -> m44_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_188 -> m44_190  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m44_72 -> m44_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_242 -> m44_245  [color=darkseagreen4, key=1, label=entry, style=dashed];
m44_244 -> m44_247  [color=darkseagreen4, key=1, label=history, style=dashed];
m44_244 -> m44_248  [color=darkseagreen4, key=1, label=history, style=dashed];
m44_247 -> m44_247  [color=darkseagreen4, key=1, label=property, style=dashed];
m44_248 -> m44_248  [color=darkseagreen4, key=1, label=property, style=dashed];
m44_146 -> m44_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_225 -> m44_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_252 -> m44_254  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m44_252 -> m44_255  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m44_254 -> m44_254  [color=darkseagreen4, key=1, label=property, style=dashed];
m44_255 -> m44_255  [color=darkseagreen4, key=1, label=property, style=dashed];
m44_82 -> m44_85  [color=green, key=1, label=transaction, style=dashed];
m44_258 -> m44_261  [color=darkseagreen4, key=1, label=Table, style=dashed];
m44_258 -> m44_262  [color=darkseagreen4, key=1, label=Table, style=dashed];
m44_260 -> m44_262  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_260 -> m44_263  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_263 -> m44_263  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_127 -> m44_129  [color=darkseagreen4, key=1, label="?", style=dashed];
m44_148 -> m44_150  [color=darkseagreen4, key=1, label="?", style=dashed];
m44_229 -> m44_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_42 -> m44_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_44 -> m44_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_44 -> m44_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_45 -> m44_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_236 -> m44_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_199 -> m44_201  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_23 -> m44_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_23 -> m44_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_24 -> m44_26  [color=darkseagreen4, key=1, label=mock, style=dashed];
m44_24 -> m44_27  [color=darkseagreen4, key=1, label=mock, style=dashed];
m44_25 -> m44_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_26 -> m44_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_204 -> m44_206  [color=darkseagreen4, key=1, label=Table, style=dashed];
m44_124 -> m44_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_209 -> m44_214  [color=darkseagreen4, key=1, label=Table, style=dashed];
m44_210 -> m44_213  [color=darkseagreen4, key=1, label=entry, style=dashed];
m44_212 -> m44_214  [color=darkseagreen4, key=1, label=history, style=dashed];
m44_109 -> m44_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_93 -> m44_95  [color=green, key=1, label=transaction, style=dashed];
m44_279 -> m44_282  [color=darkseagreen4, key=1, label=Table, style=dashed];
m44_279 -> m44_283  [color=darkseagreen4, key=1, label=Table, style=dashed];
m44_281 -> m44_283  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_281 -> m44_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_284 -> m44_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_286 -> m44_27  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_45  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_68  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_74  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_78  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_99  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_111  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_116  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_119  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_156  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_225  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_236  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_246  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_253  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_259  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_262  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_266  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_280  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m44_286 -> m44_283  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
}
