digraph  {
n13 [label="HangFire.States.FailedState", span=""];
n0 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)"];
n1 [label="exception == null", span="30-30", cluster="HangFire.States.FailedState.FailedState(System.Exception)"];
n3 [label="_exception = exception", span="31-31", cluster="HangFire.States.FailedState.FailedState(System.Exception)"];
n2 [label="throw new ArgumentNullException(''exception'');", span="30-30", cluster="HangFire.States.FailedState.FailedState(System.Exception)"];
n4 [label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)"];
n5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n6 [label="Entry HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="36-36", cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)"];
n7 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ExceptionType'', _exception.GetType().FullName },\r\n                    { ''ExceptionMessage'', _exception.Message },\r\n                    { ''ExceptionDetails'', _exception.ToString() }\r\n                };", span="38-44", cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", color=red, community=0];
n8 [label="Exit HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="36-36", cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)"];
n9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n10 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)"];
n11 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()"];
n12 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()"];
d27 [label="NewState.IsFinal", span="76-76", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", color=green, community=0];
d42 [label="HangFire.States.ApplyStateContext", span=""];
d25 [label=filters, span="71-71", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d28 [label="transaction.ExpireJob(JobId, JobExpirationTimeout)", span="78-78", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d29 [label="transaction.PersistJob(JobId)", span="82-82", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d5 [label="_connection = connection", span="36-36", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d6 [label="OldStateName = oldStateName", span="37-37", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d7 [label="NewState = newState", span="38-38", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d8 [label="JobExpirationTimeout = TimeSpan.FromDays(1)", span="39-39", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d17 [label="var transaction = _connection.CreateWriteTransaction()", span="52-52", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d18 [label="handlers.GetHandlers(OldStateName)", span="54-54", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d19 [label="handler.Unapply(this, transaction)", span="56-56", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d21 [label="filter.OnStateUnapplied(this, transaction)", span="61-61", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d22 [label="transaction.SetJobState(JobId, NewState)", span="64-64", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d23 [label="handlers.GetHandlers(NewState.Name)", span="66-66", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d24 [label="handler.Apply(this, transaction)", span="68-68", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d26 [label="filter.OnStateApplied(this, transaction)", span="73-73", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d12 [label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d30 [label="transaction.Commit()", span="85-85", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d39 [label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)"];
d40 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)"];
d0 [label="Entry HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)", span="26-26", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d3 [label="newState == null", span="34-34", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d9 [label="Exit HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)", span="26-26", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d11 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
d15 [label="filters == null", span="50-50", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d32 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()"];
d20 [label=filters, span="59-59", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d33 [label="Entry HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40", cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)"];
d34 [label="Entry HangFire.States.IStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25", cluster="HangFire.States.IStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
d35 [label="Entry HangFire.States.IApplyStateFilter.OnStateUnapplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="36-36", cluster="HangFire.States.IApplyStateFilter.OnStateUnapplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
d36 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)"];
d37 [label="Entry HangFire.States.IStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="24-24", cluster="HangFire.States.IStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
d38 [label="Entry HangFire.States.IApplyStateFilter.OnStateApplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="29-29", cluster="HangFire.States.IApplyStateFilter.OnStateApplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
d31 [label="Exit HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d13 [label="handlers == null", span="49-49", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d41 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()"];
d1 [label="connection == null", span="33-33", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d4 [label="throw new ArgumentNullException(''newState'');", span="34-34", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d2 [label="throw new ArgumentNullException(''connection'');", span="33-33", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)"];
d16 [label="throw new ArgumentNullException(''filters'');", span="50-50", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d14 [label="throw new ArgumentNullException(''handlers'');", span="49-49", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
d10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
m0_0 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="25-25", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_1 [label="_job = Job.FromExpression(() => Console.WriteLine())", span="27-27", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_2 [label="_newState = new Mock<State>()", span="28-28", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_3 [label="_newState.Setup(x => x.Name).Returns(NewState)", span="29-29", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_4 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="31-31", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_5 [label="_filters = new List<IApplyStateFilter>()", span="33-33", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_6 [label="_handlers = new StateHandlerCollection()", span="34-34", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_7 [label="_stateContext = new StateContext(JobId, _job)", span="36-36", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_8 [label="_connection = new Mock<IStorageConnection>()", span="37-37", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_9 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="38-38", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_10 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="25-25", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs"];
m0_16 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ApplyStateContextFacts.cs"];
m0_214 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ApplyStateContextFacts.cs"];
m0_15 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="ApplyStateContextFacts.cs"];
m0_137 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="ApplyStateContextFacts.cs"];
m0_36 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ApplyStateContextFacts.cs"];
m0_76 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="ApplyStateContextFacts.cs"];
m0_31 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="42-42", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ApplyStateContextFacts.cs"];
m0_32 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ApplyStateContext(null, _stateContext, _newState.Object, OldState))", span="44-45", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ApplyStateContextFacts.cs"];
m0_33 [label="Assert.Equal(''connection'', exception.ParamName)", span="47-47", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ApplyStateContextFacts.cs"];
m0_34 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="42-42", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ApplyStateContextFacts.cs"];
m0_184 [label="Entry Unk.OnStateUnapplied", span="", cluster="Unk.OnStateUnapplied", file="ApplyStateContextFacts.cs"];
m0_154 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob", file="ApplyStateContextFacts.cs"];
m0_35 [label="Entry Unk.>", span="", cluster="Unk.>", file="ApplyStateContextFacts.cs"];
m0_18 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="ApplyStateContextFacts.cs"];
m0_179 [label="Entry Mock<IApplyStateFilter>.cstr", span="", cluster="Mock<IApplyStateFilter>.cstr", file="ApplyStateContextFacts.cs"];
m0_40 [label="Entry ApplyStateContext.cstr", span="", cluster="ApplyStateContext.cstr", file="ApplyStateContextFacts.cs"];
m0_204 [label="Entry Unk.OnStateApplied", span="", cluster="Unk.OnStateApplied", file="ApplyStateContextFacts.cs"];
m0_208 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="224-224", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_209 [label="var context = CreateContext()", span="226-226", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_210 [label="Assert.Equal(OldState, context.OldStateName)", span="228-228", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_211 [label="Assert.Same(_newState.Object, context.NewState)", span="229-229", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_212 [label="Assert.Same(_job, context.Job)", span="230-230", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_213 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="224-224", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_53 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="233-233", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="ApplyStateContextFacts.cs"];
m0_215 [label="return new ApplyStateContext(\r\n                _connection.Object,\r\n                _stateContext,\r\n                _newState.Object,\r\n                OldState);", span="235-239", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="ApplyStateContextFacts.cs"];
m0_216 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="233-233", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="ApplyStateContextFacts.cs"];
m0_17 [label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22", cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()", file="ApplyStateContextFacts.cs"];
m0_72 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="ApplyStateContextFacts.cs"];
m0_180 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="ApplyStateContextFacts.cs"];
m0_168 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="175-175", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_169 [label="var context = CreateContext()", span="178-178", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_170 [label="var filter1 = new Mock<IApplyStateFilter>()", span="180-180", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_174 [label="filter1.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="186-187", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_175 [label="filter2.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="188-189", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_177 [label="context.ApplyState(_handlers, _filters)", span="195-195", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_171 [label="var filter2 = new Mock<IApplyStateFilter>()", span="181-181", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_172 [label="_filters.Add(filter1.Object)", span="183-183", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_173 [label="_filters.Add(filter2.Object)", span="184-184", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_176 [label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="190-192", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_178 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="175-175", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_81 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="99-99", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_82 [label="var context = CreateContext()", span="102-102", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_83 [label="var handler1 = new Mock<IStateHandler>()", span="104-104", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_89 [label="handler1.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="113-113", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_90 [label="handler2.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="114-114", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_92 [label="context.ApplyState(_handlers, _filters)", span="119-119", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_84 [label="handler1.Setup(x => x.StateName).Returns(OldState)", span="105-105", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_87 [label="_handlers.AddHandler(handler1.Object)", span="110-110", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_85 [label="var handler2 = new Mock<IStateHandler>()", span="107-107", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_86 [label="handler2.Setup(x => x.StateName).Returns(OldState)", span="108-108", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_88 [label="_handlers.AddHandler(handler2.Object)", span="111-111", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_91 [label="_transaction.Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="115-116", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_93 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="99-99", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_141 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="153-153", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="ApplyStateContextFacts.cs"];
m0_142 [label="var context = CreateContext()", span="155-155", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="ApplyStateContextFacts.cs"];
m0_143 [label="_newState.Setup(x => x.ExpireJobOnApply).Returns(true)", span="156-156", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_144 [label="context.ApplyState(_handlers, _filters)", span="158-158", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="ApplyStateContextFacts.cs"];
m0_145 [label="_transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="160-160", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="ApplyStateContextFacts.cs"];
m0_146 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="153-153", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="ApplyStateContextFacts.cs"];
m0_58 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="71-71", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="ApplyStateContextFacts.cs"];
m0_59 [label="var context = CreateContext()", span="73-73", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="ApplyStateContextFacts.cs"];
m0_60 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(_handlers, null))", span="75-76", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="ApplyStateContextFacts.cs"];
m0_61 [label="Assert.Equal(''filters'', exception.ParamName)", span="78-78", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="ApplyStateContextFacts.cs"];
m0_62 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="71-71", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="ApplyStateContextFacts.cs"];
m0_12 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="ApplyStateContextFacts.cs"];
m0_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ApplyStateContextFacts.cs"];
m0_48 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="60-60", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="ApplyStateContextFacts.cs"];
m0_49 [label="var context = CreateContext()", span="62-62", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="ApplyStateContextFacts.cs"];
m0_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(null, _filters))", span="64-65", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="ApplyStateContextFacts.cs"];
m0_51 [label="Assert.Equal(''handlers'', exception.ParamName)", span="67-67", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="ApplyStateContextFacts.cs"];
m0_52 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="60-60", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="ApplyStateContextFacts.cs"];
m0_105 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="ApplyStateContextFacts.cs"];
m0_41 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", span="51-51", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="ApplyStateContextFacts.cs"];
m0_42 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ApplyStateContext(_connection.Object, _stateContext, null, OldState))", span="53-54", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="ApplyStateContextFacts.cs"];
m0_43 [label="Assert.Equal(''newState'', exception.ParamName)", span="56-56", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="ApplyStateContextFacts.cs"];
m0_44 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", span="51-51", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="ApplyStateContextFacts.cs"];
m0_95 [label="Entry Unk.AddHandler", span="", cluster="Unk.AddHandler", file="ApplyStateContextFacts.cs"];
m0_205 [label="Entry lambda expression", span="214-214", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_20 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_27 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_21 [label="Console.WriteLine()", span="27-27", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_22 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_25 [label="x.Name", span="29-29", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_26 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_28 [label="x.CreateWriteTransaction()", span="38-38", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_29 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_37 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_38 [label="new ApplyStateContext(null, _stateContext, _newState.Object, OldState)", span="45-45", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_39 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_45 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_46 [label="new ApplyStateContext(_connection.Object, _stateContext, null, OldState)", span="54-54", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_47 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_55 [label="context.ApplyState(null, _filters)", span="65-65", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_54 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_56 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_64 [label="context.ApplyState(_handlers, null)", span="76-76", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_63 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_65 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_73 [label="Entry lambda expression", span="85-86", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_77 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_74 [label="x.SetJobState(\r\n                JobId, _newState.Object)", span="85-86", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_75 [label="Exit lambda expression", span="85-86", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_78 [label="x.Commit()", span="88-88", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_79 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_103 [label="x.Unapply(context, _transaction.Object)", span="113-113", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_107 [label="x.Unapply(context, _transaction.Object)", span="114-114", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_96 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_99 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_102 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_106 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_109 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_97 [label="x.StateName", span="105-105", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_98 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_100 [label="x.StateName", span="108-108", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_101 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_104 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_108 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_110 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="115-115", cluster="lambda expression", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_111 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_135 [label="x.Apply(context, _transaction.Object)", span="143-143", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_139 [label="x.Apply(context, _transaction.Object)", span="144-144", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_125 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_128 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_131 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_134 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_138 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_126 [label="x.StateName", span="131-131", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_127 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_129 [label="x.StateName", span="134-134", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_130 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_132 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="140-140", cluster="lambda expression", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_133 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_136 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_140 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_148 [label="Entry lambda expression", span="156-156", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_151 [label="Entry lambda expression", span="160-160", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_149 [label="x.ExpireJobOnApply", span="156-156", cluster="lambda expression", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_150 [label="Exit lambda expression", span="156-156", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_152 [label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="160-160", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_153 [label="Exit lambda expression", span="160-160", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_161 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_164 [label="Entry lambda expression", span="171-171", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_162 [label="x.ExpireJobOnApply", span="167-167", cluster="lambda expression", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_163 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_165 [label="x.PersistJob(JobId)", span="171-171", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_166 [label="Exit lambda expression", span="171-171", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_182 [label="x.OnStateUnapplied(context, _transaction.Object)", span="186-186", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_186 [label="x.OnStateUnapplied(context, _transaction.Object)", span="188-188", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_181 [label="Entry lambda expression", span="186-186", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_185 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_188 [label="Entry lambda expression", span="191-191", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_183 [label="Exit lambda expression", span="186-186", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_187 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_189 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="191-191", cluster="lambda expression", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_190 [label="Exit lambda expression", span="191-191", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_202 [label="x.OnStateApplied(context, _transaction.Object)", span="212-212", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_206 [label="x.OnStateApplied(context, _transaction.Object)", span="214-214", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_201 [label="Entry lambda expression", span="212-212", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_203 [label="Exit lambda expression", span="212-212", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_207 [label="Exit lambda expression", span="214-214", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_155 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="164-164", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="ApplyStateContextFacts.cs"];
m0_156 [label="var context = CreateContext()", span="166-166", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="ApplyStateContextFacts.cs"];
m0_157 [label="_newState.Setup(x => x.ExpireJobOnApply).Returns(false)", span="167-167", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_158 [label="context.ApplyState(_handlers, _filters)", span="169-169", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="ApplyStateContextFacts.cs"];
m0_159 [label="_transaction.Verify(x => x.PersistJob(JobId))", span="171-171", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="ApplyStateContextFacts.cs"];
m0_160 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="164-164", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="ApplyStateContextFacts.cs"];
m0_147 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ApplyStateContextFacts.cs"];
m0_80 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="ApplyStateContextFacts.cs"];
m0_191 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="201-201", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_192 [label="var context = CreateContext()", span="204-204", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_193 [label="var filter1 = new Mock<IApplyStateFilter>()", span="206-206", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_197 [label="filter1.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="212-213", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_198 [label="filter2.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="214-215", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_199 [label="context.ApplyState(_handlers, _filters)", span="218-218", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_194 [label="var filter2 = new Mock<IApplyStateFilter>()", span="207-207", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_195 [label="_filters.Add(filter1.Object)", span="209-209", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_196 [label="_filters.Add(filter2.Object)", span="210-210", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_200 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="201-201", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="ApplyStateContextFacts.cs"];
m0_30 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="ApplyStateContextFacts.cs"];
m0_11 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ApplyStateContextFacts.cs"];
m0_66 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="82-82", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="ApplyStateContextFacts.cs"];
m0_67 [label="_transaction.Setup(x => x.SetJobState(\r\n                JobId, _newState.Object)).InSequence()", span="85-86", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="ApplyStateContextFacts.cs"];
m0_68 [label="_transaction.Setup(x => x.Commit()).InSequence()", span="88-88", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="ApplyStateContextFacts.cs"];
m0_69 [label="var context = CreateContext()", span="90-90", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="ApplyStateContextFacts.cs"];
m0_70 [label="context.ApplyState(_handlers, _filters)", span="93-93", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="ApplyStateContextFacts.cs"];
m0_71 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="82-82", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="ApplyStateContextFacts.cs"];
m0_112 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="125-125", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_113 [label="var context = CreateContext()", span="128-128", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_114 [label="var handler1 = new Mock<IStateHandler>()", span="130-130", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_121 [label="handler1.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="143-143", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_122 [label="handler2.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="144-144", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_123 [label="context.ApplyState(_handlers, _filters)", span="147-147", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_115 [label="handler1.Setup(x => x.StateName).Returns(NewState)", span="131-131", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_118 [label="_handlers.AddHandler(handler1.Object)", span="136-136", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_116 [label="var handler2 = new Mock<IStateHandler>()", span="133-133", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_117 [label="handler2.Setup(x => x.StateName).Returns(NewState)", span="134-134", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_119 [label="_handlers.AddHandler(handler2.Object)", span="137-137", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_120 [label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="139-141", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_124 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="125-125", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="ApplyStateContextFacts.cs"];
m0_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ApplyStateContextFacts.cs"];
m0_94 [label="Entry Mock<IStateHandler>.cstr", span="", cluster="Mock<IStateHandler>.cstr", file="ApplyStateContextFacts.cs"];
m0_167 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob", file="ApplyStateContextFacts.cs"];
m0_19 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ApplyStateContextFacts.cs"];
m0_23 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="ApplyStateContextFacts.cs"];
m0_217 [label="HangFire.Core.Tests.States.ApplyStateContextFacts", span="", file="ApplyStateContextFacts.cs"];
m0_218 [label=context, span="", file="ApplyStateContextFacts.cs"];
m0_219 [label=context, span="", file="ApplyStateContextFacts.cs"];
m0_220 [label=context, span="", file="ApplyStateContextFacts.cs"];
m0_221 [label=context, span="", file="ApplyStateContextFacts.cs"];
m0_222 [label=context, span="", file="ApplyStateContextFacts.cs"];
m0_223 [label=context, span="", file="ApplyStateContextFacts.cs"];
m1_20 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJobClientExtensions.cs"];
m1_21 [label="client == null", span="93-93", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJobClientExtensions.cs"];
m1_23 [label="return client.Create(methodCall, new EnqueuedState(queue));", span="95-95", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJobClientExtensions.cs"];
m1_22 [label="throw new ArgumentNullException(''client'');", span="93-93", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJobClientExtensions.cs"];
m1_24 [label="Exit HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJobClientExtensions.cs"];
m1_43 [label="Entry HangFire.BackgroundJobClientExtensions.Create<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, HangFire.States.State)", span="158-158", cluster="HangFire.BackgroundJobClientExtensions.Create<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_44 [label="client == null", span="163-163", cluster="HangFire.BackgroundJobClientExtensions.Create<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_46 [label="return client.Create(Job.FromExpression(methodCall), state);", span="165-165", cluster="HangFire.BackgroundJobClientExtensions.Create<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_45 [label="throw new ArgumentNullException(''client'');", span="163-163", cluster="HangFire.BackgroundJobClientExtensions.Create<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_47 [label="Exit HangFire.BackgroundJobClientExtensions.Create<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, HangFire.States.State)", span="158-158", cluster="HangFire.BackgroundJobClientExtensions.Create<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_7 [label="Entry HangFire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.States.State)", span="138-138", cluster="HangFire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_6 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="BackgroundJobClientExtensions.cs"];
m1_8 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs"];
m1_9 [label="client == null", span="55-55", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs"];
m1_11 [label="return client.Create(methodCall, new EnqueuedState());", span="57-57", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs"];
m1_10 [label="throw new ArgumentNullException(''client'');", span="55-55", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs"];
m1_12 [label="Exit HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs"];
m1_30 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_41 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensions.cs"];
m1_13 [label="Entry HangFire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, HangFire.States.State)", span="158-158", cluster="HangFire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_25 [label="Entry HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106", cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_26 [label="client == null", span="108-108", cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_28 [label="return client.Create(methodCall, new ScheduledState(delay));", span="110-110", cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_27 [label="throw new ArgumentNullException(''client'');", span="108-108", cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_29 [label="Exit HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106", cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_31 [label="Entry HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123", cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_32 [label="client == null", span="125-125", cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_34 [label="return client.Create(methodCall, new ScheduledState(delay));", span="127-127", cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_33 [label="throw new ArgumentNullException(''client'');", span="125-125", cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_35 [label="Exit HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123", cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m1_36 [label="Entry HangFire.BackgroundJobClientExtensions.Create(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, HangFire.States.State)", span="138-138", cluster="HangFire.BackgroundJobClientExtensions.Create(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_37 [label="client == null", span="143-143", cluster="HangFire.BackgroundJobClientExtensions.Create(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_39 [label="return client.Create(Job.FromExpression(methodCall), state);", span="145-145", cluster="HangFire.BackgroundJobClientExtensions.Create(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_38 [label="throw new ArgumentNullException(''client'');", span="143-143", cluster="HangFire.BackgroundJobClientExtensions.Create(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_40 [label="Exit HangFire.BackgroundJobClientExtensions.Create(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, HangFire.States.State)", span="138-138", cluster="HangFire.BackgroundJobClientExtensions.Create(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_42 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClientExtensions.cs"];
m1_14 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", span="71-71", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJobClientExtensions.cs"];
m1_15 [label="client == null", span="73-73", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJobClientExtensions.cs"];
m1_17 [label="return client.Create(methodCall, new EnqueuedState(queue));", span="75-75", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJobClientExtensions.cs"];
m1_16 [label="throw new ArgumentNullException(''client'');", span="73-73", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJobClientExtensions.cs"];
m1_18 [label="Exit HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", span="71-71", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJobClientExtensions.cs"];
m1_0 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensions.cs"];
m1_1 [label="client == null", span="37-37", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensions.cs"];
m1_3 [label="return client.Create(methodCall, new EnqueuedState());", span="39-39", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensions.cs"];
m1_2 [label="throw new ArgumentNullException(''client'');", span="37-37", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensions.cs"];
m1_4 [label="Exit HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensions.cs"];
m1_19 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="BackgroundJobClientExtensions.cs"];
m1_48 [label="Entry HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="146-146", cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs"];
m2_6 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="20-20", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object))", span="22-24", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_8 [label="Assert.Equal(''client'', exception.ParamName)", span="26-26", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_9 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="20-20", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_95 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_96 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical''))", span="94-96", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_97 [label="Assert.Equal(''client'', exception.ParamName)", span="98-98", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_98 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_5 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="BackgroundJobClientExtensionsFacts.cs"];
m2_4 [label="Entry Mock<IBackgroundJobClient>.cstr", span="", cluster="Mock<IBackgroundJobClient>.cstr", file="BackgroundJobClientExtensionsFacts.cs"];
m2_11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClientExtensionsFacts.cs"];
m2_31 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_32 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object))", span="40-42", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_33 [label="Assert.Equal(''client'', exception.ParamName)", span="44-44", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_34 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_52 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_53 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod()))", span="58-60", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_54 [label="Assert.Equal(''client'', exception.ParamName)", span="62-62", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_55 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobClientExtensionsFacts.cs"];
m2_41 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_194 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_151 [label="Entry HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106", cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensionsFacts.cs"];
m2_176 [label="Entry HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123", cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensionsFacts.cs"];
m2_102 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", span="71-71", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJobClientExtensionsFacts.cs"];
m2_67 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="BackgroundJobClientExtensionsFacts.cs"];
m2_20 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="30-30", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_21 [label="_client.Object.Create(() => StaticMethod(), _state.Object)", span="32-32", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_22 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="34-34", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_23 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="30-30", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_119 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_120 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical''))", span="114-116", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_121 [label="Assert.Equal(''client'', exception.ParamName)", span="118-118", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_122 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_106 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_107 [label="_client.Object.Enqueue(() => StaticMethod(), ''critical'')", span="104-104", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_108 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="106-108", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_109 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_126 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJobClientExtensionsFacts.cs"];
m2_19 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_193 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_127 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_13 [label="BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object)", span="23-24", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_29 [label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="34-34", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_36 [label="BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object)", span="41-42", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_50 [label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="52-52", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_12 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_14 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_16 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_25 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_28 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_30 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_35 [label="Entry lambda expression", span="41-42", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_37 [label="Exit lambda expression", span="41-42", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_38 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_46 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_49 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_51 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_68 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_71 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_89 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_92 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_110 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_113 [label="Entry lambda expression", span="106-108", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_134 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_137 [label="Entry lambda expression", span="126-128", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_160 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_163 [label="Entry lambda expression", span="146-148", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_184 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_187 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_72 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="70-70", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_93 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="88-88", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_114 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="106-108", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_138 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="126-128", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_164 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="146-148", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_188 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="167-169", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_18 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_17 [label="StaticMethod()", span="24-24", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_27 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_26 [label="StaticMethod()", span="32-32", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_40 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_39 [label="x.InstanceMethod()", span="42-42", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_48 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_47 [label="x.InstanceMethod()", span="50-50", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_70 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_69 [label="StaticMethod()", span="68-68", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_73 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_91 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_90 [label="x.InstanceMethod()", span="86-86", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_94 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_112 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_111 [label="StaticMethod()", span="104-104", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_115 [label="Exit lambda expression", span="106-108", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_136 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_135 [label="x.InstanceMethod()", span="124-124", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_139 [label="Exit lambda expression", span="126-128", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_148 [label="BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1))", span="135-136", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_174 [label="BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="155-156", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_162 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_161 [label="StaticMethod()", span="144-144", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_165 [label="Exit lambda expression", span="146-148", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_186 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_185 [label="x.InstanceMethod()", span="165-165", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_189 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_56 [label="Entry lambda expression", span="59-60", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_78 [label="Entry lambda expression", span="77-78", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_99 [label="Entry lambda expression", span="95-96", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_116 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_123 [label="Entry lambda expression", span="115-116", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_140 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_147 [label="Entry lambda expression", span="135-136", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_166 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_173 [label="Entry lambda expression", span="155-156", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_190 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_149 [label="Exit lambda expression", span="135-136", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_152 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_175 [label="Exit lambda expression", span="155-156", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_177 [label="Entry lambda expression", span="156-156", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_58 [label="Exit lambda expression", span="59-60", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_57 [label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod())", span="59-60", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_80 [label="Exit lambda expression", span="77-78", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_79 [label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod())", span="77-78", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_101 [label="Exit lambda expression", span="95-96", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_100 [label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical'')", span="95-96", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_118 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_117 [label="state.Queue == ''critical''", span="108-108", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_125 [label="Exit lambda expression", span="115-116", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_124 [label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical'')", span="115-116", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_142 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_141 [label="state.Queue == ''critical''", span="128-128", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_168 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_167 [label="state.EnqueueAt > DateTime.UtcNow", span="148-148", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_192 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_191 [label="state.EnqueueAt > DateTime.UtcNow", span="169-169", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_61 [label="StaticMethod()", span="60-60", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_104 [label="StaticMethod()", span="96-96", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_153 [label="StaticMethod()", span="136-136", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_83 [label="x.InstanceMethod()", span="78-78", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_128 [label="x.InstanceMethod()", span="116-116", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_178 [label="x.InstanceMethod()", span="156-156", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_154 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_179 [label="Exit lambda expression", span="156-156", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_60 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_82 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_103 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_62 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_105 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_84 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_129 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_74 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_75 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod()))", span="76-78", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_76 [label="Assert.Equal(''client'', exception.ParamName)", span="80-80", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_77 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_85 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_86 [label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod())", span="86-86", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_87 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="88-88", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_88 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_42 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_43 [label="_client.Object.Create<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), _state.Object)", span="50-50", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_44 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="52-52", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_45 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_81 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensionsFacts.cs"];
m2_63 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_64 [label="_client.Object.Enqueue(() => StaticMethod())", span="68-68", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_65 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="70-70", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_66 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_159 [label="Entry Unk.Schedule", span="", cluster="Unk.Schedule", file="BackgroundJobClientExtensionsFacts.cs"];
m2_15 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="BackgroundJobClientExtensionsFacts.cs"];
m2_0 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_2 [label="_state = new Mock<IState>()", span="16-16", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs"];
m2_1 [label="_client = new Mock<IBackgroundJobClient>()", span="15-15", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_3 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_155 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_156 [label="_client.Object.Schedule(() => StaticMethod(), TimeSpan.FromDays(1))", span="144-144", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_157 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="146-148", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_158 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_24 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobClientExtensionsFacts.cs"];
m2_169 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_170 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1)))", span="154-156", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_171 [label="Assert.Equal(''client'', exception.ParamName)", span="158-158", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_172 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_59 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensionsFacts.cs"];
m2_143 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_144 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1)))", span="134-136", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_145 [label="Assert.Equal(''client'', exception.ParamName)", span="138-138", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_146 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_180 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_181 [label="_client.Object.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="164-165", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_182 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="167-169", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_183 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_130 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_131 [label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), ''critical'')", span="124-124", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_132 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="126-128", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_133 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_195 [label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", span="", file="BackgroundJobClientExtensionsFacts.cs"];
m4_71 [label="CreateAndPerform(UInt32Value)", span="103-103", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt32Values_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_145 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_146 [label="Entry lambda expression", span="152-156", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_147 [label="x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextOccurrence)))", span="152-156", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_199 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs"];
m4_136 [label="scheduler.Execute(_token)", span="146-146", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="BackgroundJobServer.cs"];
m4_137 [label="_client.Verify(\r\n                x => x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>()),\r\n                Times.Never)", span="148-150", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="BackgroundJobServer.cs"];
m4_138 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextOccurrence))))", span="152-156", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="BackgroundJobServer.cs"];
m4_17 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(bool)", span="26-26", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(bool)", file="BackgroundJobServer.cs"];
m4_97 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="101-101", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="BackgroundJobServer.cs"];
m4_98 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="194-194", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="BackgroundJobServer.cs"];
m4_99 [label="Entry Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="56-56", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m4_203 [label="Entry Tuple<string, Func<string>>.cstr", span="", cluster="Tuple<string, Func<string>>.cstr", file="BackgroundJobServer.cs"];
m4_104 [label="Assert.Equal(TimeSpanValue, value)", span="152-152", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", file="BackgroundJobServer.cs"];
m4_106 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", span="155-155", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", color=green, community=0, file="BackgroundJobServer.cs"];
m4_105 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", span="152-152", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", file="BackgroundJobServer.cs"];
m4_107 [label="CreateAndPerform(TimeSpanValue)", span="157-157", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", color=green, community=0, file="BackgroundJobServer.cs"];
m4_108 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", span="155-155", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", color=green, community=0, file="BackgroundJobServer.cs"];
m4_109 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", span="161-161", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", color=green, community=0, file="BackgroundJobServer.cs"];
m4_110 [label="Assert.Equal(ObjectValue, value)", span="161-161", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", file="BackgroundJobServer.cs"];
m4_111 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", span="161-161", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", file="BackgroundJobServer.cs"];
m4_204 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="68-68", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="BackgroundJobServer.cs"];
m4_154 [label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(DateTime.UtcNow)", span="163-163", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="BackgroundJobServer.cs"];
m4_155 [label="var scheduler = CreateScheduler()", span="164-164", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="BackgroundJobServer.cs"];
m4_156 [label="scheduler.Execute(_token)", span="166-166", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="BackgroundJobServer.cs"];
m4_49 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="BackgroundJobServer.cs"];
m4_50 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_51 [label="x.GetAllItemsFromSet(''recurring-jobs'')", span="51-51", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_214 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="BackgroundJobServer.cs"];
m4_118 [label="Exit lambda expression", span="124-125", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_119 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="BackgroundJobServer.cs"];
m4_120 [label="Entry lambda expression", span="127-131", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_18 [label="Entry Mock<IScheduleInstantFactory>.cstr", span="", cluster="Mock<IScheduleInstantFactory>.cstr", file="BackgroundJobServer.cs"];
m4_19 [label="Entry Mock<IThrottler>.cstr", span="", cluster="Mock<IThrottler>.cstr", file="BackgroundJobServer.cs"];
m4_159 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", span="233-233", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", file="BackgroundJobServer.cs"];
m4_73 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, null, _instantFactory.Object, _throttler.Object))", span="73-75", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobServer.cs"];
m4_74 [label="Assert.Equal(''client'', exception.ParamName)", span="77-77", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobServer.cs"];
m4_75 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="71-71", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobServer.cs"];
m4_93 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", span="134-134", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", file="BackgroundJobServer.cs"];
m4_94 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", span="137-137", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_95 [label="CreateAndPerform(UInt16Value)", span="139-139", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_96 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", span="137-137", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_166 [label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="178-178", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="BackgroundJobServer.cs"];
m4_167 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="172-172", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="BackgroundJobServer.cs"];
m4_168 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="BackgroundJobServer.cs"];
m4_127 [label="Entry lambda expression", span="133-137", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_128 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextOccurrence)))", span="133-137", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_129 [label="Exit lambda expression", span="133-137", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_112 [label="Entry lambda expression", span="122-125", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_113 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''))", span="122-125", cluster="lambda expression", file="BackgroundJobServer.cs", color=green, community=0];
m4_114 [label="Exit lambda expression", span="122-125", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_37 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_38 [label="Entry Unk.GetInstant", span="", cluster="Unk.GetInstant", file="BackgroundJobServer.cs"];
m4_39 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_180 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", span="273-273", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_88 [label="Assert.Equal(''throttler'', exception.ParamName)", span="97-97", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="BackgroundJobServer.cs"];
m4_89 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="91-91", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="BackgroundJobServer.cs"];
m4_90 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_58 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="BackgroundJobServer.cs"];
m4_59 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_60 [label="x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="57-57", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_0 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="27-27", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="BackgroundJobServer.cs"];
m4_1 [label="_storage = new Mock<JobStorage>()", span="29-29", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="BackgroundJobServer.cs"];
m4_2 [label="_client = new Mock<IBackgroundJobClient>()", span="30-30", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="BackgroundJobServer.cs"];
m4_3 [label="_instantFactory = new Mock<IScheduleInstantFactory>()", span="31-31", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="BackgroundJobServer.cs"];
m4_4 [label="_throttler = new Mock<IThrottler>()", span="32-32", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="BackgroundJobServer.cs"];
m4_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_76 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_77 [label="new RecurringJobScheduler(_storage.Object, null, _instantFactory.Object, _throttler.Object)", span="75-75", cluster="lambda expression", color=red, community=0, file="BackgroundJobServer.cs"];
m4_78 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_152 [label="Assert.Equal(NullNullableValue, value)", span="224-224", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", file="BackgroundJobServer.cs"];
m4_157 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", span="233-233", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", file="BackgroundJobServer.cs"];
m4_153 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", span="224-224", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", file="BackgroundJobServer.cs"];
m4_158 [label="Assert.Equal(ArrayValue, value)", span="233-233", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", file="BackgroundJobServer.cs"];
m4_163 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", span="242-242", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", file="BackgroundJobServer.cs"];
m4_164 [label="Assert.Equal(ListValue, value)", span="242-242", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", file="BackgroundJobServer.cs"];
m4_165 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", span="242-242", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", file="BackgroundJobServer.cs"];
m4_43 [label="Console.WriteLine()", span="45-45", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_44 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_45 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="BackgroundJobServer.cs"];
m4_85 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_86 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="91-91", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="BackgroundJobServer.cs"];
m4_87 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, _instantFactory.Object, null))", span="93-95", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="BackgroundJobServer.cs"];
m4_139 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="141-141", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="BackgroundJobServer.cs"];
m4_140 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_141 [label="x.GetMatches(It.IsAny<DateTime?>())", span="143-143", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_26 [label="Assert.Equal(ByteValue, value)", span="35-35", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", file="BackgroundJobServer.cs"];
m4_5 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="BackgroundJobServer.cs"];
m4_6 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundJobServer.cs"];
m4_7 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundJobServer.cs"];
m4_8 [label="Entry Mock<IJobCancellationToken>.cstr", span="", cluster="Mock<IJobCancellationToken>.cstr", file="BackgroundJobServer.cs"];
m4_9 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_10 [label="x.ActivateJob(It.IsAny<Type>())", span="19-19", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_11 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobServer.cs"];
m4_13 [label="Entry Unk.ActivateJob", span="", cluster="Unk.ActivateJob", file="BackgroundJobServer.cs"];
m4_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_15 [label="new JobArgumentFacts()", span="20-20", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_21 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", span="29-29", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_184 [label="return new RecurringJobScheduler(\r\n                _storage.Object, \r\n                _client.Object, \r\n                _instantFactory.Object,\r\n                _throttler.Object);", span="196-200", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="BackgroundJobServer.cs"];
m4_185 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="194-194", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="BackgroundJobServer.cs"];
m4_186 [label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span="", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_115 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="BackgroundJobServer.cs"];
m4_116 [label="Entry lambda expression", span="124-125", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_117 [label="rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''", span="125-125", cluster="lambda expression", file="BackgroundJobServer.cs", color=green, community=0];
m4_70 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_72 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="71-71", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobServer.cs"];
m4_126 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", span="182-182", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", file="BackgroundJobServer.cs"];
m4_79 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="81-81", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="BackgroundJobServer.cs"];
m4_80 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, null, _throttler.Object))", span="83-85", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", color=red, community=0, file="BackgroundJobServer.cs"];
m4_81 [label="Assert.Equal(''instantFactory'', exception.ParamName)", span="87-87", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="BackgroundJobServer.cs"];
m4_103 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_24 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", span="292-292", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_187 [label=jobKey, span="", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_190 [label=scheduler, span="", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_192 [label="serializationMethods.Add(new Tuple<string, Func<string>>(\r\n					''TypeDescriptor'',\r\n					() => converter.ConvertToInvariantString(argumentValue)))", span="302-304", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_193 [label="serializationMethods.Add(new Tuple<string, Func<string>>(\r\n				''JSON'',\r\n				() => JsonConvert.SerializeObject(argumentValue)))", span="307-309", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_188 [label=time, span="", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_195 [label="var job = new Job(type, methodInfo, new[] { method.Item2() })", span="313-313", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_189 [label=scheduler, span="", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_194 [label=serializationMethods, span="311-311", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_191 [label="var converter = TypeDescriptor.GetConverter(typeof(T))", span="301-301", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_196 [label="job.Perform(_activator.Object, _token.Object)", span="314-314", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_197 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", span="292-292", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="BackgroundJobServer.cs"];
m4_181 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", span="284-284", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", file="BackgroundJobServer.cs"];
m4_208 [label="converter.ConvertToInvariantString(argumentValue)", span="304-304", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_212 [label="JsonConvert.SerializeObject(argumentValue)", span="309-309", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_207 [label="Entry lambda expression", span="304-304", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_209 [label="Exit lambda expression", span="304-304", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_211 [label="Entry lambda expression", span="309-309", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_213 [label="Exit lambda expression", span="309-309", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_68 [label="Assert.Equal(UInt32Value, value)", span="98-98", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", file="BackgroundJobServer.cs"];
m4_69 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", span="98-98", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", color=green, community=0, file="BackgroundJobServer.cs"];
m4_121 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", span="179-179", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", color=green, community=0, file="BackgroundJobServer.cs"];
m4_122 [label="Assert.Equal(CultureInfoValue, value)", span="179-179", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", file="BackgroundJobServer.cs"];
m4_123 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", span="179-179", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", file="BackgroundJobServer.cs"];
m4_40 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", span="56-56", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_84 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", span="119-119", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_91 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", span="134-134", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", file="BackgroundJobServer.cs"];
m4_124 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", span="182-182", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", file="BackgroundJobServer.cs"];
m4_131 [label="CreateAndPerform(EnumValue)", span="193-193", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", file="BackgroundJobServer.cs"];
m4_150 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", span="218-218", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_173 [label="CreateAndPerform(DictionaryValue, true)", span="260-260", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_182 [label="Assert.Equal(CustomClassValue.CreatedAt, value.CreatedAt)", span="284-284", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", file="BackgroundJobServer.cs"];
m4_31 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", span="44-44", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", file="BackgroundJobServer.cs"];
m4_36 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", span="47-47", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_102 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", span="146-146", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_144 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", span="209-209", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_170 [label="Assert.Equal(DictionaryValue, value)", span="255-255", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", file="BackgroundJobServer.cs"];
m4_55 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", span="80-80", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", file="BackgroundJobServer.cs"];
m4_130 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", span="191-191", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", file="BackgroundJobServer.cs"];
m4_125 [label="CreateAndPerform(CultureInfoValue)", span="184-184", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", file="BackgroundJobServer.cs"];
m4_30 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", span="38-38", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_35 [label="CreateAndPerform(SByteValue)", span="49-49", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_41 [label="CreateAndPerform(CharValue)", span="58-58", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_42 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", span="56-56", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_46 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", span="65-65", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_54 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", span="74-74", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_83 [label="CreateAndPerform(UInt64Value)", span="121-121", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs", color=red, community=0];
m4_92 [label="Assert.Equal(UInt16Value, value)", span="134-134", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", file="BackgroundJobServer.cs"];
m4_101 [label="CreateAndPerform(StringValue)", span="148-148", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_132 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", span="191-191", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", file="BackgroundJobServer.cs"];
m4_143 [label="CreateAndPerform(UriValue)", span="211-211", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_148 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", span="218-218", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_149 [label="CreateAndPerform(NotNullNullableValue)", span="220-220", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_151 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", span="224-224", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", file="BackgroundJobServer.cs"];
m4_160 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", span="236-236", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_169 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", span="255-255", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", file="BackgroundJobServer.cs"];
m4_172 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", span="258-258", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_174 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", span="258-258", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_183 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", span="284-284", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", file="BackgroundJobServer.cs"];
m4_32 [label="Assert.Equal(SByteValue, value)", span="44-44", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", file="BackgroundJobServer.cs"];
m4_61 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", span="89-89", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", file="BackgroundJobServer.cs"];
m4_142 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", span="209-209", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_171 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", span="255-255", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", file="BackgroundJobServer.cs"];
m4_56 [label="Assert.Equal(SingleValue, value)", span="80-80", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", file="BackgroundJobServer.cs"];
m4_48 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", span="65-65", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_47 [label="CreateAndPerform(DecimalValue)", span="67-67", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_52 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", span="74-74", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_161 [label="CreateAndPerform(ArrayValue, true)", span="238-238", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_162 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", span="236-236", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_22 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundJobServer.cs"];
m4_23 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundJobServer.cs"];
m4_202 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobServer.cs"];
m4_175 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="182-182", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="BackgroundJobServer.cs"];
m4_176 [label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="185-186", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="BackgroundJobServer.cs"];
m4_177 [label="var scheduler = CreateScheduler()", span="188-188", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="BackgroundJobServer.cs"];
m4_178 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", span="273-273", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_179 [label="CreateAndPerform(CustomStructValue, true)", span="275-275", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", file="BackgroundJobServer.cs"];
m4_205 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="BackgroundJobServer.cs"];
m4_25 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", span="35-35", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", file="BackgroundJobServer.cs"];
m4_63 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", span="89-89", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", file="BackgroundJobServer.cs"];
m4_64 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", span="92-92", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", color=green, community=0, file="BackgroundJobServer.cs"];
m4_65 [label="CreateAndPerform(Int32Value)", span="94-94", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_66 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", span="92-92", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_67 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", span="98-98", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", file="BackgroundJobServer.cs"];
m4_20 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="BackgroundJobServer.cs"];
m4_34 [label="Entry Unk.GetMatches", span="", cluster="Unk.GetMatches", file="BackgroundJobServer.cs"];
m4_133 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", span="197-197", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", file="BackgroundJobServer.cs"];
m4_134 [label="Assert.Equal(GuidValue, value)", span="197-197", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", file="BackgroundJobServer.cs"];
m4_135 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", span="197-197", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", file="BackgroundJobServer.cs"];
m4_29 [label="CreateAndPerform(ByteValue)", span="40-40", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_62 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="BackgroundJobServer.cs"];
m4_100 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobServer.cs"];
m4_27 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", span="35-35", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", file="BackgroundJobServer.cs"];
m4_82 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="81-81", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="BackgroundJobServer.cs"];
m4_57 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BackgroundJobServer.cs"];
m4_198 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="BackgroundJobServer.cs"];
m4_210 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="BackgroundJobServer.cs"];
m4_33 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobServer.cs"];
m4_200 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="BackgroundJobServer.cs"];
m4_201 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="BackgroundJobServer.cs"];
m4_206 [label="Entry Unk.Perform", span="", cluster="Unk.Perform", file="BackgroundJobServer.cs"];
m4_53 [label="CreateAndPerform(DoubleValue)", span="76-76", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", file="BackgroundJobServer.cs"];
m4_28 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobServer.cs"];
m4_215 [label="Hangfire.Core.Tests.Common.JobArgumentFacts", span="", file="BackgroundJobServer.cs"];
m4_216 [label=T, span="", file="BackgroundJobServer.cs"];
m4_217 [label=converter, span="", file="BackgroundJobServer.cs"];
m5_15 [label="Entry Unk.InfoFormat", span="", cluster="Unk.InfoFormat", file="BackgroundJobServerOptions.cs"];
m5_8 [label="HangFire.BackgroundJobServerOptions", span="", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="BackgroundJobServerOptions.cs"];
m5_9 [label="logger.InfoFormat(''Using the following options for HangFire Server:'')", span="61-61", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", color=green, community=0, file="BackgroundJobServerOptions.cs"];
m5_10 [label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="62-62", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", color=green, community=0, file="BackgroundJobServerOptions.cs"];
m5_11 [label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="63-63", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", color=green, community=0, file="BackgroundJobServerOptions.cs"];
m5_12 [label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="64-64", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", color=green, community=0, file="BackgroundJobServerOptions.cs"];
m5_13 [label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="65-65", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", color=green, community=0, file="BackgroundJobServerOptions.cs"];
m5_14 [label="Exit HangFire.BackgroundJobServerOptions.Log(ILog)", span="59-59", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="BackgroundJobServerOptions.cs"];
m5_0 [label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m5_1 [label="WorkerCount = Environment.ProcessorCount * 5", span="13-13", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m5_2 [label="ServerName = Environment.MachineName", span="14-14", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m5_3 [label="Queues = new[] { EnqueuedState.DefaultQueue }", span="15-15", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m5_4 [label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="16-16", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m5_5 [label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="17-17", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m5_6 [label="Exit HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m5_7 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundJobServerOptions.cs"];
m5_17 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="BackgroundJobServerOptions.cs"];
m5_18 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m5_19 [label="''''' + x + '''''", span="63-63", cluster="lambda expression", color=green, community=0, file="BackgroundJobServerOptions.cs"];
m5_20 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m5_16 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobServerOptions.cs"];
m6_23 [label="Entry HangFire.Client.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="26-26", cluster="HangFire.Client.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="ClientExceptionContextFacts.cs"];
m6_16 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="26-26", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ClientExceptionContextFacts.cs"];
m6_17 [label="Assert.Throws<NullReferenceException>(\r\n                () => new ClientExceptionContext(null, new Exception()))", span="28-29", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ClientExceptionContextFacts.cs"];
m6_18 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="26-26", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ClientExceptionContextFacts.cs"];
m6_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="ClientExceptionContextFacts.cs"];
m6_10 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="ClientExceptionContextFacts.cs"];
m6_9 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="ClientExceptionContextFacts.cs"];
m6_33 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", span="42-42", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m6_34 [label="var exception = new Exception()", span="44-44", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m6_35 [label="var context = new ClientExceptionContext(_createContext, exception)", span="45-45", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m6_36 [label="Assert.Same(exception, context.Exception)", span="47-47", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m6_37 [label="Assert.False(context.ExceptionHandled)", span="48-48", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m6_38 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", span="42-42", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m6_39 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ClientExceptionContextFacts.cs"];
m6_40 [label="Entry Unk.False", span="", cluster="Unk.False", file="ClientExceptionContextFacts.cs"];
m6_8 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ClientExceptionContextFacts.cs"];
m6_29 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ClientExceptionContextFacts.cs"];
m6_15 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.TestMethod()", span="51-51", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.TestMethod()", file="ClientExceptionContextFacts.cs"];
m6_41 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.TestMethod()", span="51-51", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.TestMethod()", file="ClientExceptionContextFacts.cs"];
m6_24 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="ClientExceptionContextFacts.cs"];
m6_0 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", span="14-14", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m6_1 [label="var connection = new Mock<IStorageConnection>()", span="16-16", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m6_2 [label="var job = Job.FromExpression(() => TestMethod())", span="17-17", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m6_5 [label="_createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="21-22", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m6_3 [label="var state = new Mock<State>()", span="18-18", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", color=red, community=0, file="ClientExceptionContextFacts.cs"];
m6_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="19-19", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m6_6 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", span="14-14", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m6_7 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ClientExceptionContextFacts.cs"];
m6_30 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m6_12 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m6_13 [label="TestMethod()", span="17-17", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m6_14 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m6_20 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m6_21 [label="new ClientExceptionContext(null, new Exception())", span="29-29", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m6_22 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m6_31 [label="new ClientExceptionContext(_createContext, null)", span="36-36", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m6_32 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m6_11 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="ClientExceptionContextFacts.cs"];
m6_25 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", span="33-33", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="ClientExceptionContextFacts.cs"];
m6_26 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ClientExceptionContext(_createContext, null))", span="35-36", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="ClientExceptionContextFacts.cs"];
m6_27 [label="Assert.Equal(''exception'', exception.ParamName)", span="38-38", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="ClientExceptionContextFacts.cs"];
m6_28 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", span="33-33", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="ClientExceptionContextFacts.cs"];
m6_42 [label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", span="", file="ClientExceptionContextFacts.cs"];
m8_3 [label="Entry Unk.MapSignalR", span="", cluster="Unk.MapSignalR", file="CreateContextFacts.cs"];
m8_0 [label="Entry HangFire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", span="10-10", cluster="HangFire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", file="CreateContextFacts.cs"];
m8_1 [label="app.MapSignalR()", span="12-12", cluster="HangFire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", file="CreateContextFacts.cs"];
m8_2 [label="Exit HangFire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", span="10-10", cluster="HangFire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", file="CreateContextFacts.cs"];
m9_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="CreatedContextFacts.cs"];
m9_23 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="CreatedContextFacts.cs"];
m9_21 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="CreatedContextFacts.cs"];
m9_26 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="CreatedContextFacts.cs"];
m9_7 [label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="CreatedContextFacts.cs"];
m9_25 [label="Entry Unk.True", span="", cluster="Unk.True", file="CreatedContextFacts.cs"];
m9_0 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="CreatedContextFacts.cs"];
m9_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatedContext(null, false, null))", span="15-16", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="CreatedContextFacts.cs"];
m9_2 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="CreatedContextFacts.cs"];
m9_20 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CreatedContextFacts.cs"];
m9_22 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="CreatedContextFacts.cs"];
m9_30 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", span="36-36", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", file="CreatedContextFacts.cs"];
m9_31 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", span="36-36", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", file="CreatedContextFacts.cs"];
m9_19 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="CreatedContextFacts.cs"];
m9_27 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="CreatedContextFacts.cs"];
m9_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="CreatedContextFacts.cs"];
m9_5 [label="new CreatedContext(null, false, null)", span="16-16", cluster="lambda expression", file="CreatedContextFacts.cs"];
m9_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="CreatedContextFacts.cs"];
m9_28 [label="TestMethod()", span="23-23", cluster="lambda expression", file="CreatedContextFacts.cs"];
m9_29 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="CreatedContextFacts.cs"];
m9_24 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="CreatedContextFacts.cs"];
m9_8 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m9_9 [label="var connection = new Mock<IStorageConnection>()", span="22-22", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m9_10 [label="var job = Job.FromExpression(() => TestMethod())", span="23-23", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m9_14 [label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="28-29", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m9_11 [label="var state = new Mock<State>()", span="24-24", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=red, community=0, file="CreatedContextFacts.cs"];
m9_12 [label="var exception = new Exception()", span="25-25", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m9_13 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m9_15 [label="var context = new CreatedContext(createContext, true, exception)", span="30-30", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m9_17 [label="Assert.Same(exception, context.Exception)", span="33-33", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m9_16 [label="Assert.True(context.Canceled)", span="32-32", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m9_18 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m10_0 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="31-31", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="CreatingContextFacts.cs"];
m10_1 [label="pathPattern == null", span="33-33", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="CreatingContextFacts.cs"];
m10_3 [label="_pathPattern = pathPattern", span="35-35", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="CreatingContextFacts.cs"];
m10_4 [label="_transactionType = transactionType", span="36-36", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="CreatingContextFacts.cs"];
m10_2 [label="throw new ArgumentNullException(''pathPattern'');", span="33-33", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="CreatingContextFacts.cs"];
m10_5 [label="_formatter = new ThreadLocal<IMessageFormatter>(\r\n                () => new BinaryMessageFormatter())", span="38-39", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="CreatingContextFacts.cs"];
m10_6 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="31-31", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="CreatingContextFacts.cs"];
m10_13 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_14 [label="string jobId = null", span="44-44", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_17 [label="cancellationToken.ThrowIfCancellationRequested()", span="50-50", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_18 [label="var queueName = queues[queueIndex]", span="52-52", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_21 [label="var message = queueIndex == queues.Length - 1\r\n                            ? transaction.Receive(messageQueue, SyncReceiveTimeout)\r\n                            : transaction.Receive(messageQueue, new TimeSpan(1))", span="60-62", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_29 [label="queueIndex = (queueIndex + 1) % queues.Length", span="81-81", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_15 [label="IMsmqTransaction transaction", span="45-45", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_16 [label="var queueIndex = 0", span="46-46", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_19 [label="transaction = CreateTransaction()", span="54-54", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_20 [label="var messageQueue = GetMessageQueue(queueName)", span="56-56", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_25 [label="transaction.Abort()", span="71-71", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_26 [label="transaction.Dispose()", span="72-72", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_31 [label="return new MsmqFetchedJob(transaction, jobId);", span="84-84", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_22 [label="message.Formatter = _formatter.Value", span="64-64", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_23 [label="jobId = (string)message.Body", span="66-66", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_24 [label=MessageQueueException, span="69-69", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_30 [label="jobId == null", span="82-82", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_27 [label="ex.MessageQueueErrorCode != MessageQueueErrorCode.IOTimeout", span="74-74", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_28 [label="throw;", span="76-76", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_32 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="CreatingContextFacts.cs"];
m10_12 [label="Entry BinaryMessageFormatter.cstr", span="", cluster="BinaryMessageFormatter.cstr", file="CreatingContextFacts.cs"];
m10_51 [label="Entry Unk.Begin", span="", cluster="Unk.Begin", file="CreatingContextFacts.cs"];
m10_67 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CreatingContextFacts.cs"];
m10_35 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.GetMessageQueue(string)", span="112-112", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.GetMessageQueue(string)", file="CreatingContextFacts.cs"];
m10_64 [label="return new MessageQueue(String.Format(_pathPattern, queue));", span="114-114", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.GetMessageQueue(string)", file="CreatingContextFacts.cs"];
m10_65 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueue.GetMessageQueue(string)", span="112-112", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.GetMessageQueue(string)", file="CreatingContextFacts.cs"];
m10_34 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", span="99-99", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", file="CreatingContextFacts.cs"];
m10_54 [label=_transactionType, span="101-101", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", file="CreatingContextFacts.cs"];
m10_55 [label="MsmqTransactionType.Internal", span="103-103", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", file="CreatingContextFacts.cs"];
m10_57 [label="MsmqTransactionType.Dtc", span="105-105", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", file="CreatingContextFacts.cs"];
m10_56 [label="return new MsmqInternalTransaction();", span="104-104", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", file="CreatingContextFacts.cs"];
m10_58 [label="return new MsmqDtcTransaction();", span="106-106", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", file="CreatingContextFacts.cs"];
m10_60 [label="throw new InvalidOperationException(''Unknown MSMQ transaction type: '' + _transactionType);", span="109-109", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", file="CreatingContextFacts.cs"];
m10_59 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", span="99-99", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.CreateTransaction()", file="CreatingContextFacts.cs"];
m10_62 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="CreatingContextFacts.cs"];
m10_63 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CreatingContextFacts.cs"];
m10_33 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="CreatingContextFacts.cs"];
m10_49 [label="Entry Message.cstr", span="", cluster="Message.cstr", file="CreatingContextFacts.cs"];
m10_36 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", span="23-23", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", file="CreatingContextFacts.cs"];
m10_38 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="CreatingContextFacts.cs"];
m10_41 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", span="87-87", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", file="CreatingContextFacts.cs"];
m10_42 [label="var messageQueue = GetMessageQueue(queue)", span="89-89", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", file="CreatingContextFacts.cs"];
m10_43 [label="var message = new Message { Body = jobId, Label = jobId, Formatter = _formatter.Value }", span="90-90", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", file="CreatingContextFacts.cs"];
m10_46 [label="messageQueue.Send(message, transaction)", span="94-94", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", file="CreatingContextFacts.cs"];
m10_44 [label="var transaction = new MessageQueueTransaction()", span="91-91", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", file="CreatingContextFacts.cs"];
m10_45 [label="transaction.Begin()", span="93-93", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", file="CreatingContextFacts.cs"];
m10_47 [label="transaction.Commit()", span="95-95", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", file="CreatingContextFacts.cs"];
m10_48 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", span="87-87", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", file="CreatingContextFacts.cs"];
m10_9 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="CreatingContextFacts.cs"];
m10_10 [label="new BinaryMessageFormatter()", span="39-39", cluster="lambda expression", file="CreatingContextFacts.cs"];
m10_11 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="CreatingContextFacts.cs"];
m10_66 [label="Entry MessageQueue.cstr", span="", cluster="MessageQueue.cstr", file="CreatingContextFacts.cs"];
m10_40 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="CreatingContextFacts.cs"];
m10_52 [label="Entry Unk.Send", span="", cluster="Unk.Send", file="CreatingContextFacts.cs"];
m10_37 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)", file="CreatingContextFacts.cs"];
m10_53 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="CreatingContextFacts.cs"];
m10_61 [label="Entry Hangfire.SqlServer.Msmq.MsmqInternalTransaction.MsmqInternalTransaction()", span="25-25", cluster="Hangfire.SqlServer.Msmq.MsmqInternalTransaction.MsmqInternalTransaction()", file="CreatingContextFacts.cs"];
m10_8 [label="Entry ThreadLocal<IMessageFormatter>.cstr", span="", cluster="ThreadLocal<IMessageFormatter>.cstr", file="CreatingContextFacts.cs"];
m10_50 [label="Entry MessageQueueTransaction.cstr", span="", cluster="MessageQueueTransaction.cstr", file="CreatingContextFacts.cs"];
m10_39 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="CreatingContextFacts.cs"];
m10_68 [label="Hangfire.SqlServer.Msmq.MsmqJobQueue", span="", file="CreatingContextFacts.cs"];
m11_63 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ElectStateContext.cs"];
m11_59 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ElectStateContext.cs"];
m11_57 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ElectStateContext.cs"];
m11_55 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ElectStateContext.cs"];
m11_6 [label="Pager pager", span="69-69", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs", color=green, community=0];
m11_68 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="ElectStateContext.cs"];
m11_62 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32", cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="ElectStateContext.cs"];
m11_3 [label="int from, perPage", span="64-64", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_65 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ElectStateContext.cs"];
m11_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="ElectStateContext.cs"];
m11_7 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="ElectStateContext.cs"];
m11_9 [label="pager = new Pager(from, perPage, monitor.ProcessingCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/processing'')\r\n        }", span="74-77", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_8 [label="HangFire.SqlServer.DataTypes.SqlServerSet", span="", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_1 [label="_connection = connection", span="13-13", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="ElectStateContext.cs"];
m11_2 [label="Exit HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="ElectStateContext.cs"];
m11_11 [label="WriteLiteral(''\r\n'')", span="87-87", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_13 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No jobs are being processed right now'' +\r\n''.\r\n    </div>\r\n'')", span="98-99", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_14 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="111-113", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_15 [label="Write(Request.LinkTo(''/processing/requeue''))", span="118-118", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_16 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Enqueueing...''''>\r\n                <span class=''''glyphicon glyphicon-repeat''''></span>\r\n                Requeue jobs\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="123-130", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_17 [label="Write(Request.LinkTo(''/processing/delete''))", span="135-135", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_18 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="140-147", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_19 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="152-152", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_20 [label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>Server</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Started</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="157-173", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_22 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="184-184", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_23 [label="Write(!job.Value.InProcessingState ? ''obsolete-data'' : null)", span="189-189", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_24 [label="WriteLiteral('' '')", span="194-194", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_25 [label="Write(job.Value.InProcessingState ? ''hover'' : null)", span="199-199", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_26 [label="WriteLiteral(''\''>\r\n                        <td>\r\n'')", span="204-204", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_28 [label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="215-216", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_29 [label="Write(job.Key)", span="221-221", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_30 [label="WriteLiteral(''\'' />\r\n'')", span="226-226", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_31 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <a href=\'''')", span="236-237", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_32 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="242-242", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_33 [label="WriteLiteral(''\''>\r\n                                '')", span="247-247", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_34 [label="Write(HtmlHelper.JobId(job.Key))", span="252-252", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_35 [label="WriteLiteral(''\r\n                            </a>\r\n'')", span="257-257", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_37 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="268-269", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_38 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          '')", span="279-280", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_39 [label="Write(job.Value.ServerId.ToUpperInvariant())", span="285-285", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_40 [label="WriteLiteral(''\r\n                        </td>\r\n                        <td>\r\n                  '' +\r\n''          <a class=\''job-method\'' href=\'''')", span="290-291", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_41 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="296-296", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_42 [label="WriteLiteral(''\''>\r\n                                '')", span="301-301", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_43 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="306-306", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_44 [label="WriteLiteral(''\r\n                            </a>\r\n                        </td>\r\n              '' +\r\n''          <td class=\''align-right\''>\r\n'')", span="311-312", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_46 [label="WriteLiteral(''                                <span data-moment=\'''')", span="323-323", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_47 [label="Write(JobHelper.ToStringTimestamp(job.Value.StartedAt.Value))", span="328-328", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_48 [label="WriteLiteral(''\''>\r\n                                    '')", span="333-333", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_49 [label="Write(job.Value.StartedAt)", span="338-338", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_50 [label="WriteLiteral(''\r\n                                </span>\r\n'')", span="343-343", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_51 [label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="353-353", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_52 [label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="363-363", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_53 [label="Write(RenderPartial(new Paginator(pager)))", span="374-374", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_10 [label="processingJobs = monitor\r\n            .ProcessingJobs(pager.FromRecord, pager.RecordsPerPage)", span="79-80", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_12 [label="pager.TotalPageCount == 0", span="92-92", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_21 [label=processingJobs, span="178-178", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_27 [label="job.Value.InProcessingState", span="209-209", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_36 [label="!job.Value.InProcessingState", span="262-262", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_45 [label="job.Value.StartedAt.HasValue", span="317-317", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_54 [label="Exit HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ElectStateContext.cs"];
m11_64 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ElectStateContext.cs"];
m11_66 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ElectStateContext.cs"];
m11_67 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ElectStateContext.cs"];
m11_58 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ElectStateContext.cs"];
m11_56 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ElectStateContext.cs"];
m11_61 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="ElectStateContext.cs"];
m11_60 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42", cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="ElectStateContext.cs"];
m11_69 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ElectStateContext.cs"];
m11_71 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ElectStateContext.cs"];
m11_72 [label="HangFire.Web.Pages.ProcessingJobsPage", span="", file="ElectStateContext.cs"];
m12_31 [label="Entry Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_39 [label=i, span="91-91", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_40 [label=0, span="93-93", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_42 [label=1, span="95-95", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_44 [label=2, span="97-97", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_41 [label="return LogLevel.Debug;", span="94-94", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_43 [label="return LogLevel.Info;", span="96-96", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_45 [label="return LogLevel.Warn;", span="98-98", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_47 [label="return LogLevel.Error;", span="101-101", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_46 [label="Exit Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="ElectStateContextFacts.cs"];
m12_61 [label="Entry System.Random.Next(int, int)", span="0-0", cluster="System.Random.Next(int, int)", file="ElectStateContextFacts.cs"];
m12_57 [label="Entry System.Random.Random(int)", span="0-0", cluster="System.Random.Random(int)", file="ElectStateContextFacts.cs"];
m12_38 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="ElectStateContextFacts.cs"];
m12_10 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ElectStateContextFacts.cs"];
m12_29 [label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26", cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_60 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="ElectStateContextFacts.cs"];
m12_30 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ElectStateContextFacts.cs"];
m12_12 [label="Entry Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_13 [label="var i = 0", span="53-53", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_15 [label="_innerProcess.Execute(context)", span="57-57", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_25 [label="context.CancellationToken.WaitHandle.WaitOne(nextTry)", span="83-83", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_26 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="84-84", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_14 [label="i <= MaxRetryAttempts", span="53-53", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_20 [label="i >= MaxRetryAttempts - 1", span="67-67", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_22 [label="var nextTry = DelayCallback(i)", span="69-69", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_23 [label="var logLevel = GetLogLevel(i)", span="70-70", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_24 [label="_logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", span="72-80", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="ElectStateContextFacts.cs"];
m12_27 [label="i++", span="53-53", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_16 [label="return;", span="58-58", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_17 [label=OperationCanceledException, span="60-60", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_18 [label="throw;", span="62-62", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_19 [label=Exception, span="64-64", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_21 [label="throw;", span="67-67", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_28 [label="Exit Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ElectStateContextFacts.cs"];
m12_63 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ElectStateContextFacts.cs"];
m12_34 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ElectStateContextFacts.cs"];
m12_32 [label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54", cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="ElectStateContextFacts.cs"];
m12_48 [label="Entry Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104", cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="ElectStateContextFacts.cs"];
m12_49 [label="return _innerProcess.ToString();", span="106-106", cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="ElectStateContextFacts.cs"];
m12_50 [label="Exit Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104", cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="ElectStateContextFacts.cs"];
m12_35 [label="Entry lambda expression", span="74-79", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m12_36 [label="String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", span="74-79", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m12_37 [label="Exit lambda expression", span="74-79", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m12_62 [label="Entry System.Math.Min(double, double)", span="0-0", cluster="System.Math.Min(double, double)", file="ElectStateContextFacts.cs"];
m12_58 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="ElectStateContextFacts.cs"];
m12_11 [label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353", cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="ElectStateContextFacts.cs"];
m12_59 [label="Entry System.Guid.GetHashCode()", span="0-0", cluster="System.Guid.GetHashCode()", file="ElectStateContextFacts.cs"];
m12_33 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ElectStateContextFacts.cs"];
m12_52 [label="Entry Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="ElectStateContextFacts.cs"];
m12_53 [label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="112-112", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="ElectStateContextFacts.cs"];
m12_54 [label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="113-114", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="ElectStateContextFacts.cs"];
m12_55 [label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="116-116", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="ElectStateContextFacts.cs"];
m12_56 [label="Exit Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="ElectStateContextFacts.cs"];
m12_0 [label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="ElectStateContextFacts.cs"];
m12_1 [label="innerProcess == null", span="32-32", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="ElectStateContextFacts.cs"];
m12_3 [label="_innerProcess = innerProcess", span="34-34", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="ElectStateContextFacts.cs"];
m12_2 [label="throw new ArgumentNullException(''innerProcess'');", span="32-32", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="ElectStateContextFacts.cs"];
m12_4 [label="_logger = LogProvider.GetLogger(_innerProcess.GetType())", span="35-35", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="ElectStateContextFacts.cs"];
m12_5 [label="MaxRetryAttempts = DefaultMaxRetryAttempts", span="37-37", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="ElectStateContextFacts.cs"];
m12_6 [label="MaxAttemptDelay = DefaultMaxAttemptDelay", span="38-38", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="ElectStateContextFacts.cs"];
m12_7 [label="DelayCallback = GetBackOffMultiplier", span="39-39", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="ElectStateContextFacts.cs"];
m12_8 [label="Exit Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="ElectStateContextFacts.cs"];
m12_51 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="ElectStateContextFacts.cs"];
m12_64 [label="Hangfire.Server.AutomaticRetryProcess", span="", file="ElectStateContextFacts.cs"];
m12_65 [label=i, span="", file="ElectStateContextFacts.cs"];
m12_66 [label=nextTry, span="", file="ElectStateContextFacts.cs"];
m13_0 [label="Entry HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6", cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="EnqueuedState.cs"];
m13_1 [label="Exception = exception", span="8-8", cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="EnqueuedState.cs"];
m13_2 [label="Exit HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6", cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="EnqueuedState.cs"];
m13_3 [label="HangFire.Web.Pages.ErrorPage", span="", file="EnqueuedState.cs"];
m15_10 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs"];
m15_0 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m15_1 [label="exception == null", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m15_4 [label="Exception = exception", span="31-31", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m15_2 [label="throw new ArgumentNullException(''exception'');", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m15_3 [label="FailedAt = DateTime.UtcNow", span="30-30", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m15_5 [label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m15_13 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="FailedState.cs"];
m15_7 [label="Entry HangFire.States.FailedState.SerializeData()", span="39-39", cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs"];
m15_8 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.ToStringTimestamp(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="41-47", cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs"];
m15_9 [label="Exit HangFire.States.FailedState.SerializeData()", span="39-39", cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs"];
m15_11 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs"];
m15_12 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="FailedState.cs"];
m15_14 [label="HangFire.States.FailedState", span="", file="FailedState.cs"];
m16_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="FailedStateFacts.cs"];
m16_25 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="FailedStateFacts.cs"];
m16_23 [label="Entry HangFire.States.FailedState.SerializeData()", span="39-39", cluster="HangFire.States.FailedState.SerializeData()", file="FailedStateFacts.cs"];
m16_13 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="FailedStateFacts.cs"];
m16_12 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="FailedStateFacts.cs"];
m16_8 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="18-18", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m16_9 [label="var state = new FailedState(new Exception())", span="20-20", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m16_10 [label="Assert.Equal(FailedState.StateName, state.Name)", span="21-21", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m16_11 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="18-18", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m16_14 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="25-25", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m16_15 [label="var state = new FailedState(new Exception(''Message''))", span="27-27", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m16_16 [label="var serializedData = state.SerializeData()", span="29-29", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m16_17 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.FailedAt), serializedData[''FailedAt''])", span="31-31", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m16_20 [label="Assert.Equal(state.Exception.ToString(), serializedData[''ExceptionDetails''])", span="34-34", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m16_18 [label="Assert.Equal(''System.Exception'', serializedData[''ExceptionType''])", span="32-32", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m16_19 [label="Assert.Equal(''Message'', serializedData[''ExceptionMessage''])", span="33-33", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m16_21 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="25-25", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m16_0 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs"];
m16_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="13-14", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs"];
m16_2 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs"];
m16_4 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="FailedStateFacts.cs"];
m16_5 [label="new FailedState(null)", span="14-14", cluster="lambda expression", file="FailedStateFacts.cs"];
m16_6 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="FailedStateFacts.cs"];
m16_22 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="FailedStateFacts.cs"];
m16_24 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedStateFacts.cs"];
m17_12 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="FetchedJobsWatcherFacts.cs"];
m17_70 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="FetchedJobsWatcherFacts.cs"];
m17_0 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="FetchedJobsWatcherFacts.cs"];
m17_1 [label="MaxRetryAttempts = 10", span="26-26", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="FetchedJobsWatcherFacts.cs"];
m17_2 [label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="27-27", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="FetchedJobsWatcherFacts.cs"];
m17_3 [label="LowerLogVerbosity = false", span="28-28", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="FetchedJobsWatcherFacts.cs"];
m17_4 [label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="FetchedJobsWatcherFacts.cs"];
m17_5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="FetchedJobsWatcherFacts.cs"];
m17_6 [label="HangFire.Server.ServerComponentRunnerOptions", span="", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m17_61 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="74-74", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_65 [label="var watcher = CreateWatcher()", span="82-82", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_66 [label="watcher.Execute(_token)", span="85-85", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_64 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="80-80", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_67 [label="Assert.NotNull(JobHelper.FromNullableStringTimestamp(\r\n                    redis.GetValueFromHash(''hangfire:job:my-job'', ''Checked'')))", span="87-88", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_62 [label="var redis = RedisUtils.CreateClient()", span="76-76", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_63 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="79-79", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_68 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="74-74", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_24 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="FetchedJobsWatcherFacts.cs"];
m17_52 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="FetchedJobsWatcherFacts.cs"];
m17_48 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="FetchedJobsWatcherFacts.cs"];
m17_29 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="39-39", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m17_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(_storage, null))", span="41-42", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m17_31 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="44-44", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m17_32 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="39-39", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m17_37 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="48-48", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_42 [label="var watcher = CreateWatcher()", span="58-58", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_43 [label="watcher.Execute(_token)", span="61-61", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_44 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                    ''my-job'', \r\n                    It.IsAny<EnqueuedState>(),\r\n                    new[] { EnqueuedState.StateName, ProcessingState.StateName }))", span="64-67", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_41 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="55-56", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_45 [label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="69-69", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_38 [label="var redis = RedisUtils.CreateClient()", span="50-50", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_40 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="54-54", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_39 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="53-53", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_46 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="48-48", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m17_18 [label="Entry Unk.>", span="", cluster="Unk.>", file="FetchedJobsWatcherFacts.cs"];
m17_9 [label="Entry HangFire.Redis.Tests.RedisUtils.GetDb()", span="37-37", cluster="HangFire.Redis.Tests.RedisUtils.GetDb()", file="FetchedJobsWatcherFacts.cs"];
m17_56 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="FetchedJobsWatcherFacts.cs"];
m17_50 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="FetchedJobsWatcherFacts.cs"];
m17_54 [label="Entry HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", span="52-52", cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", file="FetchedJobsWatcherFacts.cs"];
m17_36 [label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", span="33-33", cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", file="FetchedJobsWatcherFacts.cs"];
m17_71 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="FetchedJobsWatcherFacts.cs"];
m17_72 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="93-93", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_77 [label="var watcher = CreateWatcher()", span="103-103", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_78 [label="watcher.Execute(_token)", span="106-106", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_79 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                    ''my-job'', It.IsAny<EnqueuedState>(), It.IsAny<string[]>()))", span="109-110", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_76 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="100-101", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_73 [label="var redis = RedisUtils.CreateClient()", span="95-95", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_75 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="99-99", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_74 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="98-98", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_80 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="93-93", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="FetchedJobsWatcherFacts.cs"];
m17_49 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="FetchedJobsWatcherFacts.cs"];
m17_28 [label="Entry FetchedJobsWatcher.cstr", span="", cluster="FetchedJobsWatcher.cstr", file="FetchedJobsWatcherFacts.cs"];
m17_53 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="139-139", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs"];
m17_97 [label="return new FetchedJobsWatcher(_storage, _stateMachineFactory.Object);", span="141-141", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs"];
m17_98 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="139-139", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs"];
m17_60 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="FetchedJobsWatcherFacts.cs"];
m17_8 [label="Entry HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", span="20-20", cluster="HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", file="FetchedJobsWatcherFacts.cs"];
m17_81 [label="Entry lambda expression", span="109-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_94 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_95 [label="x.TryToChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>())", span="134-134", cluster="lambda expression", color=green, community=0, file="FetchedJobsWatcherFacts.cs"];
m17_96 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_26 [label="new FetchedJobsWatcher(null, _stateMachineFactory.Object)", span="33-33", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_34 [label="new FetchedJobsWatcher(_storage, null)", span="42-42", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_16 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="25-25", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_58 [label="x.TryToChangeState(\r\n                    ''my-job'', \r\n                    It.IsAny<EnqueuedState>(),\r\n                    new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="64-67", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_82 [label="x.TryToChangeState(\r\n                    ''my-job'', It.IsAny<EnqueuedState>(), It.IsAny<string[]>())", span="109-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_15 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_25 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_27 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_33 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_35 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_57 [label="Entry lambda expression", span="64-67", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_17 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_59 [label="Exit lambda expression", span="64-67", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_83 [label="Exit lambda expression", span="109-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m17_47 [label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15", cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="FetchedJobsWatcherFacts.cs"];
m17_10 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="FetchedJobsWatcherFacts.cs"];
m17_7 [label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="FetchedJobsWatcherFacts.cs"];
m17_69 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="FetchedJobsWatcherFacts.cs"];
m17_88 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="122-123", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_92 [label="_stateMachine.Verify(\r\n                    x => x.TryToChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>()),\r\n                    Times.Never)", span="133-135", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", color=green, community=0, file="FetchedJobsWatcherFacts.cs"];
m17_91 [label="watcher.Execute(_token)", span="130-130", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_90 [label="var watcher = CreateWatcher()", span="127-127", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_84 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="115-115", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_89 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="124-125", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_85 [label="var redis = RedisUtils.CreateClient()", span="117-117", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_86 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="120-120", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_87 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="121-121", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_93 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="115-115", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m17_11 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="FetchedJobsWatcherFacts.cs"];
m17_19 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="FetchedJobsWatcherFacts.cs"];
m17_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="FetchedJobsWatcherFacts.cs"];
m17_20 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m17_21 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(null, _stateMachineFactory.Object))", span="32-33", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m17_22 [label="Assert.Equal(''storage'', exception.ParamName)", span="35-35", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m17_23 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m17_55 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="FetchedJobsWatcherFacts.cs"];
m17_99 [label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", span="", file="FetchedJobsWatcherFacts.cs"];
m18_0 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="IBackgroundJobClient.cs"];
m18_1 [label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="IBackgroundJobClient.cs"];
m19_0 [label="Entry HangFire.Server.IJobPerformer.Perform()", span="20-20", cluster="HangFire.Server.IJobPerformer.Perform()", file="IJobPerformer.cs"];
m19_1 [label="Exit HangFire.Server.IJobPerformer.Perform()", span="20-20", cluster="HangFire.Server.IJobPerformer.Perform()", file="IJobPerformer.cs"];
m20_2 [label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24", cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="IStateMachine.cs"];
m20_3 [label="Exit HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24", cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="IStateMachine.cs"];
m20_0 [label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="IStateMachine.cs"];
m20_1 [label="Exit HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="IStateMachine.cs"];
m21_1 [label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m21_22 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs"];
m21_23 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs"];
m21_26 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs"];
m21_27 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs"];
m21_2 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs"];
m21_3 [label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs"];
m21_18 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs"];
m21_19 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs"];
m21_28 [label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs"];
m21_29 [label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs"];
m21_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs"];
m21_9 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs"];
m21_12 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m21_13 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m21_30 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs"];
m21_31 [label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs"];
m21_10 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m21_11 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m21_20 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs"];
m21_21 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs"];
m21_14 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m21_15 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m21_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m21_5 [label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m21_6 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m21_7 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m21_16 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m21_17 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m21_24 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs"];
m21_25 [label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs"];
m22_25 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44", cluster="HangFire.JobHelper.FromJson<T>(string)", file="Job.cs"];
m22_26 [label="return JsonSerializer.DeserializeFromString<T>(value);", span="46-46", cluster="HangFire.JobHelper.FromJson<T>(string)", file="Job.cs"];
m22_27 [label="Exit HangFire.JobHelper.FromJson<T>(string)", span="44-44", cluster="HangFire.JobHelper.FromJson<T>(string)", file="Job.cs"];
m22_40 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="Job.cs"];
m22_44 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="Job.cs"];
m22_33 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57", cluster="HangFire.JobHelper.FromTimestamp(long)", file="Job.cs"];
m22_34 [label="return Epoch.AddSeconds(value);", span="59-59", cluster="HangFire.JobHelper.FromTimestamp(long)", file="Job.cs"];
m22_35 [label="Exit HangFire.JobHelper.FromTimestamp(long)", span="57-57", cluster="HangFire.JobHelper.FromTimestamp(long)", file="Job.cs"];
m22_36 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="Job.cs"];
m22_17 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="Job.cs"];
m22_21 [label="Entry HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="Job.cs"];
m22_22 [label="return JsonSerializer.SerializeToString(value);", span="41-41", cluster="HangFire.JobHelper.ToJson(object)", file="Job.cs"];
m22_23 [label="Exit HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="Job.cs"];
m22_55 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Job.cs"];
m22_20 [label="Entry HangFire.JobHelper.ValidateQueueName(string)", span="82-82", cluster="HangFire.JobHelper.ValidateQueueName(string)", file="Job.cs"];
m22_50 [label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="84-84", cluster="HangFire.JobHelper.ValidateQueueName(string)", file="Job.cs"];
m22_51 [label="throw new InvalidOperationException(String.Format(\r\n                    ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue));", span="86-87", cluster="HangFire.JobHelper.ValidateQueueName(string)", file="Job.cs"];
m22_52 [label="Exit HangFire.JobHelper.ValidateQueueName(string)", span="82-82", cluster="HangFire.JobHelper.ValidateQueueName(string)", file="Job.cs"];
m22_37 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="Job.cs"];
m22_38 [label="return ToTimestamp(value).ToString();", span="64-64", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="Job.cs"];
m22_39 [label="Exit HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="Job.cs"];
m22_16 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Job.cs"];
m22_29 [label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="51-51", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="Job.cs"];
m22_30 [label="TimeSpan elapsedTime = value - Epoch", span="53-53", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="Job.cs"];
m22_31 [label="return (long)elapsedTime.TotalSeconds;", span="54-54", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="Job.cs"];
m22_32 [label="Exit HangFire.JobHelper.ToTimestamp(System.DateTime)", span="51-51", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="Job.cs"];
m22_28 [label="Entry Unk.>", span="", cluster="Unk.>", file="Job.cs"];
m22_7 [label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="22-22", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Job.cs"];
m22_8 [label="jobType == null", span="24-24", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Job.cs"];
m22_10 [label="var attribute = jobType\r\n                .GetCustomAttributes(true)\r\n                .Cast<QueueAttribute>()\r\n                .FirstOrDefault()", span="26-29", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Job.cs"];
m22_9 [label="throw new ArgumentNullException(''jobType'');", span="24-24", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Job.cs"];
m22_11 [label="var queueName = attribute != null \r\n                ? !String.IsNullOrEmpty(attribute.Name) ? attribute.Name : DefaultQueue\r\n                : DefaultQueue", span="31-33", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Job.cs"];
m22_12 [label="ValidateQueueName(queueName)", span="34-34", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Job.cs"];
m22_13 [label="return queueName;", span="36-36", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Job.cs"];
m22_14 [label="Exit HangFire.JobHelper.GetQueue(System.Type)", span="22-22", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Job.cs"];
m22_18 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="Job.cs"];
m22_45 [label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="72-72", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="Job.cs"];
m22_46 [label="String.IsNullOrEmpty(value)", span="74-74", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="Job.cs"];
m22_48 [label="return FromStringTimestamp(value);", span="79-79", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="Job.cs"];
m22_47 [label="return null;", span="76-76", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="Job.cs"];
m22_49 [label="Exit HangFire.JobHelper.FromNullableStringTimestamp(string)", span="72-72", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="Job.cs"];
m22_6 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="Job.cs"];
m22_54 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Job.cs"];
m22_19 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="Job.cs"];
m22_24 [label="Entry Unk.SerializeToString", span="", cluster="Unk.SerializeToString", file="Job.cs"];
m22_53 [label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="Job.cs"];
m22_41 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="67-67", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="Job.cs"];
m22_42 [label="return FromTimestamp(long.Parse(value));", span="69-69", cluster="HangFire.JobHelper.FromStringTimestamp(string)", color=red, community=0, file="Job.cs"];
m22_43 [label="Exit HangFire.JobHelper.FromStringTimestamp(string)", span="67-67", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="Job.cs"];
m22_0 [label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="11-11", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="Job.cs"];
m22_1 [label="var type = Type.GetType(jobType)", span="13-13", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="Job.cs"];
m22_2 [label="type == null", span="14-14", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="Job.cs"];
m22_4 [label="return GetQueue(type);", span="19-19", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="Job.cs"];
m22_3 [label="return null;", span="16-16", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="Job.cs"];
m22_5 [label="Exit HangFire.JobHelper.TryToGetQueue(string)", span="11-11", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="Job.cs"];
m23_72 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="JobCreationProcessFacts.cs"];
m23_12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JobCreationProcessFacts.cs"];
m23_11 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="JobCreationProcessFacts.cs"];
m23_0 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m23_1 [label="var connection = new Mock<IStorageConnection>()", span="19-19", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m23_2 [label="var job = Job.FromExpression(() => TestMethod())", span="20-20", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m23_6 [label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m23_3 [label="var state = new Mock<State>()", span="21-21", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=red, community=0, file="JobCreationProcessFacts.cs"];
m23_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m23_5 [label="_filters = new List<object>()", span="24-24", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m23_7 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m23_25 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobCreationProcessFacts.cs"];
m23_13 [label="Entry Mock<CreateContext>.cstr", span="", cluster="Mock<CreateContext>.cstr", file="JobCreationProcessFacts.cs"];
m23_97 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m23_98 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m23_99 [label="var filter = new Mock<IClientExceptionFilter>()", span="105-105", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m23_100 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m23_101 [label="_filters.Add(filter.Object)", span="109-109", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m23_102 [label="var process = CreateProcess()", span="111-111", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m23_103 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m23_104 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m23_106 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="JobCreationProcessFacts.cs"];
m23_41 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m23_42 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m23_43 [label="var process = CreateProcess()", span="54-54", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m23_44 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m23_45 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m23_35 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="JobCreationProcessFacts.cs"];
m23_251 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_252 [label="var outerFilter = new Mock<IClientFilter>()", span="247-247", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_253 [label="var innerFilter = new Mock<IClientFilter>()", span="248-248", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_254 [label="_filters.Add(outerFilter.Object)", span="250-250", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_260 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_255 [label="_filters.Add(innerFilter.Object)", span="251-251", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_256 [label="var exception = new InvalidOperationException()", span="253-253", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_257 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_258 [label="var process = CreateProcess()", span="256-256", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_259 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_261 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m23_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="JobCreationProcessFacts.cs"];
m23_53 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m23_54 [label="var filter = new Mock<IClientExceptionFilter>()", span="63-63", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m23_55 [label="_filters.Add(filter.Object)", span="64-64", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m23_59 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m23_56 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m23_57 [label="var process = CreateProcess()", span="67-67", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m23_58 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m23_60 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m23_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobCreationProcessFacts.cs"];
m23_61 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="JobCreationProcessFacts.cs"];
m23_29 [label="Entry HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", span="45-45", cluster="HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", file="JobCreationProcessFacts.cs"];
m23_23 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m23_328 [label="return new JobCreationProcess(_filters);", span="314-314", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m23_329 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m23_18 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m23_19 [label="var process = CreateProcess()", span="32-32", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m23_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m23_21 [label="Assert.Equal(''context'', exception.ParamName)", span="37-37", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m23_22 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m23_119 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_120 [label="var filter = new Mock<IClientFilter>()", span="121-121", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_121 [label="_filters.Add(filter.Object)", span="122-122", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_122 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_124 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_123 [label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_125 [label="var process = CreateProcess()", span="128-128", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_126 [label="process.Run(_context.Object)", span="131-131", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_127 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_164 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m23_165 [label="var filter = new Mock<IClientFilter>()", span="163-163", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m23_166 [label="_filters.Add(filter.Object)", span="164-164", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m23_167 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m23_171 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m23_168 [label="var process = CreateProcess()", span="169-169", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m23_169 [label="process.Run(_context.Object)", span="172-172", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m23_170 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m23_172 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m23_139 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="JobCreationProcessFacts.cs"];
m23_228 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_229 [label="var filter = new Mock<IClientFilter>()", span="226-226", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_230 [label="_filters.Add(filter.Object)", span="227-227", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_235 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_231 [label="var exception = new InvalidOperationException()", span="229-229", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_232 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_233 [label="var process = CreateProcess()", span="232-232", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_234 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_236 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m23_62 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobCreationProcessFacts.cs"];
m23_84 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="JobCreationProcessFacts.cs"];
m23_330 [label="Entry HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcessFacts.cs"];
m23_185 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_186 [label="var outerFilter = new Mock<IClientFilter>()", span="183-183", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_187 [label="var innerFilter = new Mock<IClientFilter>()", span="184-184", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_188 [label="_filters.Add(outerFilter.Object)", span="186-186", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_193 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_189 [label="_filters.Add(innerFilter.Object)", span="187-187", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_190 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_191 [label="var process = CreateProcess()", span="192-192", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_192 [label="process.Run(_context.Object)", span="195-195", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_194 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m23_10 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="JobCreationProcessFacts.cs"];
m23_46 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobCreationProcessFacts.cs"];
m23_238 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="JobCreationProcessFacts.cs"];
m23_73 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_74 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_75 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_77 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_78 [label="_filters.Add(filter1.Object)", span="86-86", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_76 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_79 [label="_filters.Add(filter2.Object)", span="87-87", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_80 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_81 [label="var process = CreateProcess()", span="91-91", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_82 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_83 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m23_30 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m23_31 [label="var process = CreateProcess()", span="43-43", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m23_32 [label="process.Run(_context.Object)", span="45-45", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m23_33 [label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m23_34 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m23_324 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_15 [label="TestMethod()", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_27 [label="process.Run(null)", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_37 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_38 [label="x.CreateJob()", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_39 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_51 [label="process.Run(_context.Object)", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_50 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_48 [label="x.CreateJob()", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_52 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_63 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_67 [label="process.Run(_context.Object)", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_66 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_69 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_64 [label="x.CreateJob()", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_65 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_68 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_70 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_71 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_85 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_88 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_91 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_95 [label="process.Run(_context.Object)", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_94 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_86 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_87 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_89 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_90 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_92 [label="x.CreateJob()", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_93 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_96 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_107 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_110 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_113 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_117 [label="process.Run(_context.Object)", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_116 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_108 [label="x.CreateJob()", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_109 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_111 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_112 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_114 [label="x.ExceptionHandled = true", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_115 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_118 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_129 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_133 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_136 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_130 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_131 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_134 [label="x.CreateJob()", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_135 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_137 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_138 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_152 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_155 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_158 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_161 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_153 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_154 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_156 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_157 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_159 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_160 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_162 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_163 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_179 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_182 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_174 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_177 [label="x.Canceled = true", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_180 [label="x.CreateJob()", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_181 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_183 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_184 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_195 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_198 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_201 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_196 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_197 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_199 [label="context.Canceled = true", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_200 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_202 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_203 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_204 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_205 [label="context.Canceled", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_206 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_216 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_220 [label="process.Run(_context.Object)", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_219 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_222 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_225 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_217 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_218 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_221 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_223 [label="x.CreateJob()", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_224 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_226 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_227 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_246 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_249 [label="context.Exception == exception", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_239 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_243 [label="process.Run(_context.Object)", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_242 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_245 [label="Entry lambda expression", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_240 [label="x.CreateJob()", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_241 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_244 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_247 [label="Exit lambda expression", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_248 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_250 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_269 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_272 [label="context.Exception == exception", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_262 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_266 [label="process.Run(_context.Object)", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_265 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_268 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_263 [label="x.CreateJob()", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_264 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_267 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_270 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_271 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_273 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_287 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_290 [label="context.Exception == exception", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_283 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_286 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_292 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_296 [label="process.Run(_context.Object)", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_295 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_284 [label="x.CreateJob()", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_285 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_288 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_289 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_291 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_293 [label="x.ExceptionHandled = true", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_294 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_297 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_309 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_312 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_315 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_319 [label="process.Run(_context.Object)", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_318 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_321 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_310 [label="x.CreateJob()", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_311 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_313 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_314 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_316 [label="x.ExceptionHandled = true", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_317 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_320 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_322 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_323 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_325 [label="context.Exception != null", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_326 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m23_36 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobCreationProcessFacts.cs"];
m23_207 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m23_208 [label="var filter = new Mock<IClientFilter>()", span="205-205", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m23_209 [label="_filters.Add(filter.Object)", span="206-206", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m23_210 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m23_214 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m23_211 [label="var process = CreateProcess()", span="211-211", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m23_212 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m23_213 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m23_215 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m23_298 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_299 [label="var outerFilter = new Mock<IClientFilter>()", span="288-288", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_300 [label="var innerFilter = new Mock<IClientFilter>()", span="289-289", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_301 [label="_filters.Add(outerFilter.Object)", span="291-291", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_307 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_302 [label="_filters.Add(innerFilter.Object)", span="292-292", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_304 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_303 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_305 [label="var process = CreateProcess()", span="299-299", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_306 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_308 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m23_132 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="JobCreationProcessFacts.cs"];
m23_274 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m23_275 [label="var filter = new Mock<IClientFilter>()", span="269-269", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m23_276 [label="_filters.Add(filter.Object)", span="270-270", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m23_279 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m23_277 [label="var exception = new InvalidOperationException()", span="272-272", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m23_278 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m23_280 [label="var process = CreateProcess()", span="278-278", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m23_281 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m23_282 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m23_105 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="JobCreationProcessFacts.cs"];
m23_9 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobCreationProcessFacts.cs"];
m23_17 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs"];
m23_327 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs"];
m23_40 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="JobCreationProcessFacts.cs"];
m23_128 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="JobCreationProcessFacts.cs"];
m23_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobCreationProcessFacts.cs"];
m23_140 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_141 [label="var outerFilter = new Mock<IClientFilter>()", span="140-140", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_142 [label="var innerFilter = new Mock<IClientFilter>()", span="141-141", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_143 [label="_filters.Add(outerFilter.Object)", span="143-143", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_145 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_148 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_144 [label="_filters.Add(innerFilter.Object)", span="144-144", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_146 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_147 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_149 [label="var process = CreateProcess()", span="151-151", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_150 [label="process.Run(_context.Object)", span="154-154", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_151 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m23_331 [label="HangFire.Core.Tests.Client.JobCreationProcessFacts", span="", file="JobCreationProcessFacts.cs"];
m23_332 [label=process, span="", file="JobCreationProcessFacts.cs"];
m23_333 [label=process, span="", file="JobCreationProcessFacts.cs"];
m23_334 [label=process, span="", file="JobCreationProcessFacts.cs"];
m23_335 [label=process, span="", file="JobCreationProcessFacts.cs"];
m23_336 [label=process, span="", file="JobCreationProcessFacts.cs"];
m23_337 [label=process, span="", file="JobCreationProcessFacts.cs"];
m23_338 [label=process, span="", file="JobCreationProcessFacts.cs"];
m23_339 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m23_340 [label=process, span="", file="JobCreationProcessFacts.cs"];
m23_341 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m23_342 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m23_343 [label=process, span="", file="JobCreationProcessFacts.cs"];
m23_344 [label=process, span="", file="JobCreationProcessFacts.cs"];
m27_10 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="PreserveCultureAttributeFacts.cs"];
m27_18 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", file="PreserveCultureAttributeFacts.cs"];
m27_19 [label="_scope.Complete()", span="53-53", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", file="PreserveCultureAttributeFacts.cs"];
m27_20 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", file="PreserveCultureAttributeFacts.cs"];
m27_0 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="PreserveCultureAttributeFacts.cs"];
m27_1 [label="_scope = new TransactionScope()", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="PreserveCultureAttributeFacts.cs"];
m27_2 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="PreserveCultureAttributeFacts.cs"];
m27_17 [label="Entry Unk.Receive", span="", cluster="Unk.Receive", file="PreserveCultureAttributeFacts.cs"];
m27_11 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="PreserveCultureAttributeFacts.cs"];
m27_12 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", span="43-43", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="PreserveCultureAttributeFacts.cs"];
m27_14 [label="_suppressedScope = new TransactionScope(TransactionScopeOption.Suppress)", span="46-46", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="PreserveCultureAttributeFacts.cs"];
m27_13 [label="var message = queue.Receive(timeout, MessageQueueTransactionType.Automatic)", span="45-45", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="PreserveCultureAttributeFacts.cs"];
m27_15 [label="return message;", span="48-48", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="PreserveCultureAttributeFacts.cs"];
m27_16 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", span="43-43", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="PreserveCultureAttributeFacts.cs"];
m27_3 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="PreserveCultureAttributeFacts.cs"];
m27_4 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="PreserveCultureAttributeFacts.cs"];
m27_5 [label="_suppressedScope != null", span="34-34", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=green, community=0, file="PreserveCultureAttributeFacts.cs"];
m27_6 [label="_suppressedScope.Complete()", span="36-36", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=green, community=0, file="PreserveCultureAttributeFacts.cs"];
m27_8 [label="_scope.Dispose()", span="40-40", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="PreserveCultureAttributeFacts.cs"];
m27_7 [label="_suppressedScope.Dispose()", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="PreserveCultureAttributeFacts.cs"];
m27_9 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="PreserveCultureAttributeFacts.cs"];
m27_23 [label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction", span="", file="PreserveCultureAttributeFacts.cs"];
m29_28 [label="var state = new ProcessingState(''server'')", span="44-44", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs", color=green, community=0];
m29_42 [label="options == null", span="110-110", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_46 [label="i < options.WorkerCount", span="114-114", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_47 [label="processes.Add(new Worker(new WorkerContext(options.Queues, i + 1)))", span="116-116", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_50 [label="processes.Add(new SchedulePoller(options.SchedulePollingInterval))", span="120-120", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_51 [label="processes.Add(new ServerWatchdog(options.ServerWatchdogOptions))", span="121-121", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_43 [label="throw new ArgumentNullException(''options'');", span="110-110", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_44 [label="var processes = new List<IServerProcess>()", span="112-112", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_45 [label="var i = 0", span="114-114", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_49 [label="processes.Add(new ServerHeartbeat())", span="119-119", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_52 [label="processes.Add(new RecurringJobScheduler())", span="122-122", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_53 [label="return processes;", span="124-124", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_48 [label="i++", span="114-114", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_54 [label="Exit Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", span="108-108", cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", file="ProcessingStateFacts.cs"];
m29_8 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="70-70", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_9 [label="storage == null", span="75-75", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_10 [label="throw new ArgumentNullException(''storage'');", span="75-75", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_27 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs"];
m29_37 [label="Entry Hangfire.BackgroundJobServer.Dispose()", span="102-102", cluster="Hangfire.BackgroundJobServer.Dispose()", file="ProcessingStateFacts.cs"];
m29_38 [label="_server.Dispose()", span="104-104", cluster="Hangfire.BackgroundJobServer.Dispose()", file="ProcessingStateFacts.cs"];
m29_39 [label="Logger.Info(''Hangfire Server stopped.'')", span="105-105", cluster="Hangfire.BackgroundJobServer.Dispose()", file="ProcessingStateFacts.cs"];
m29_40 [label="Exit Hangfire.BackgroundJobServer.Dispose()", span="102-102", cluster="Hangfire.BackgroundJobServer.Dispose()", file="ProcessingStateFacts.cs"];
m29_4 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m29_5 [label="new ProcessingState(null)", span="13-13", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m29_14 [label="throw new ArgumentNullException(''additionalProcesses'');", span="77-77", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_15 [label="var processes = new List<IServerProcess>()", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_16 [label="processes.AddRange(GetProcesses(options))", span="80-80", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_17 [label="processes.AddRange(storage.GetComponents())", span="81-81", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_0 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs"];
m29_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(null))", span="12-13", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs"];
m29_18 [label="processes.AddRange(additionalProcesses)", span="82-82", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_56 [label="Entry Hangfire.Server.WorkerContext.WorkerContext(string[], int)", span="27-27", cluster="Hangfire.Server.WorkerContext.WorkerContext(string[], int)", file="ProcessingStateFacts.cs"];
m29_62 [label="Entry Hangfire.BackgroundJobServer.Start()", span="128-128", cluster="Hangfire.BackgroundJobServer.Start()", file="ProcessingStateFacts.cs"];
m29_63 [label="Exit Hangfire.BackgroundJobServer.Start()", span="128-128", cluster="Hangfire.BackgroundJobServer.Start()", file="ProcessingStateFacts.cs"];
m29_19 [label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="84-88", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_20 [label="Logger.Info(''Starting Hangfire Server'')", span="90-90", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_21 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', storage)", span="91-91", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_22 [label="storage.WriteOptionsToLog(Logger)", span="93-93", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_23 [label="options.WriteToLog(Logger)", span="94-94", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_24 [label="_server = new BackgroundProcessServer(storage, processes, properties)\r\n            {\r\n                ShutdownTimeout = options.ShutdownTimeout\r\n            }", span="96-99", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_7 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="65-65", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="ProcessingStateFacts.cs"];
m29_2 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="44-44", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="ProcessingStateFacts.cs"];
m29_61 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="39-39", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="ProcessingStateFacts.cs"];
m29_3 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="44-44", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="ProcessingStateFacts.cs"];
m29_59 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="ProcessingStateFacts.cs"];
m29_31 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingStateFacts.cs"];
m29_34 [label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68", cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="ProcessingStateFacts.cs"];
m29_35 [label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="71-71", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ProcessingStateFacts.cs"];
m29_29 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="ProcessingStateFacts.cs"];
m29_30 [label="Entry Hangfire.JobStorage.GetComponents()", span="58-58", cluster="Hangfire.JobStorage.GetComponents()", file="ProcessingStateFacts.cs"];
m29_33 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="ProcessingStateFacts.cs"];
m29_25 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="70-70", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_64 [label="Entry Hangfire.BackgroundJobServer.Stop()", span="133-133", cluster="Hangfire.BackgroundJobServer.Stop()", file="ProcessingStateFacts.cs"];
m29_65 [label="Exit Hangfire.BackgroundJobServer.Stop()", span="133-133", cluster="Hangfire.BackgroundJobServer.Stop()", file="ProcessingStateFacts.cs"];
m29_58 [label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", span="20-20", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", file="ProcessingStateFacts.cs"];
m29_11 [label="options == null", span="76-76", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_12 [label="throw new ArgumentNullException(''options'');", span="76-76", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_6 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="65-65", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="ProcessingStateFacts.cs"];
m29_13 [label="additionalProcesses == null", span="77-77", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="ProcessingStateFacts.cs"];
m29_26 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingStateFacts.cs"];
m29_32 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="ProcessingStateFacts.cs"];
m29_57 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ProcessingStateFacts.cs"];
m29_55 [label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="35-35", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="ProcessingStateFacts.cs"];
m29_60 [label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="27-27", cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", file="ProcessingStateFacts.cs"];
m29_41 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="ProcessingStateFacts.cs"];
m29_36 [label="Entry Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", span="38-38", cluster="Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", file="ProcessingStateFacts.cs"];
m29_66 [label="Hangfire.BackgroundJobServer", span="", file="ProcessingStateFacts.cs"];
m30_86 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="QueueAttributeFacts.cs"];
m30_82 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="QueueAttributeFacts.cs"];
m30_95 [label="Entry HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", span="74-74", cluster="HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", file="QueueAttributeFacts.cs"];
m30_81 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="9-9", cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="QueueAttributeFacts.cs"];
m30_91 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="QueueAttributeFacts.cs"];
m30_92 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="QueueAttributeFacts.cs"];
m30_93 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QueueAttributeFacts.cs"];
m30_78 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="QueueAttributeFacts.cs"];
m30_0 [label="Entry HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_1 [label="WriteLiteral(''\r\n'')", span="73-73", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_2 [label="JobDetailsDto job", span="88-88", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_3 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="89-89", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_4 [label="job = monitor.JobDetails(JobId.ToString())", span="91-91", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_5 [label="string title = null", span="94-94", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_6 [label="job != null && job.Method != null", span="96-96", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_7 [label="title = HtmlHelper.DisplayMethod(job.Method)", span="98-98", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_11 [label="job == null", span="114-114", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_17 [label="job.CreatedAt.HasValue", span="149-149", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_19 [label="Write(JobHelper.ToStringTimestamp(job.CreatedAt.Value))", span="161-161", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_21 [label="job.Method != null", span="179-179", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_23 [label="Write(JobMethodCallRenderer.Render(job.Method, job.Arguments, job.OldFormatArguments))", span="190-190", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_26 [label="job.Properties.Count > 0", span="210-210", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_28 [label="job.Properties", span="221-221", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_37 [label="job.History.Count > 0", span="277-277", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_40 [label="job.History", span="289-289", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_8 [label="title = title ?? ''Job''", span="101-101", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_9 [label="Layout = new LayoutPage { Title = title, Subtitle = HtmlHelper.JobId(JobId.ToString(), false).ToString() }", span="103-103", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_10 [label="WriteLiteral(''\r\n'')", span="109-109", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_12 [label="WriteLiteral(''    '')", span="120-120", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_16 [label="WriteLiteral(''    <div class=\''job-snippet\''>\r\n        <div class=\''job-snippet-code\''>\r\n'')", span="144-144", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_13 [label="WriteLiteral('' The job with id \''')", span="122-122", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_14 [label="Write(JobId)", span="127-127", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_15 [label="WriteLiteral(''\' was expired or was not existed on the server.\r\n'')", span="132-132", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_18 [label="WriteLiteral(''                <div class=\''pull-right job-creation-date\''>\r\n                    C'' +\r\n''reated\r\n                    <span data-moment=\'''')", span="155-156", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_20 [label="WriteLiteral(''\''></span>\r\n                </div>\r\n'')", span="166-166", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_22 [label="WriteLiteral(''                <pre><code>'')", span="185-185", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_25 [label="WriteLiteral(''            <div class=\''clearfix\''></div>\r\n        </div>\r\n\r\n'')", span="205-205", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_24 [label="WriteLiteral(''</code></pre>\r\n'')", span="195-195", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_27 [label="WriteLiteral(''            <div class=\''job-snippet-properties\''>\r\n                <dl>\r\n'')", span="216-216", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_36 [label="WriteLiteral(''    </div>\r\n'')", span="271-271", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_29 [label="WriteLiteral(''                        <dt>'')", span="227-227", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_35 [label="WriteLiteral(''                </dl>\r\n            </div>\r\n'')", span="261-261", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_30 [label="Write(property.Key)", span="232-232", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_31 [label="WriteLiteral(''</dt>\r\n'')", span="237-237", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_33 [label="Write(property.Value)", span="246-246", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_32 [label="WriteLiteral(''                        <dd><pre>'')", span="241-241", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_34 [label="WriteLiteral(''</pre></dd>\r\n'')", span="251-251", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_38 [label="WriteLiteral(''        <h3>History</h3>\r\n'')", span="283-283", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_39 [label="var index = 0", span="288-288", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_42 [label="index == 0", span="295-295", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_45 [label="Write(index == 0 ? ''job-history-current'' : null)", span="311-311", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_76 [label="index++", span="488-488", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_41 [label="var background = JobHistoryRenderer.BackgroundStateColors.ContainsKey(entry[''State''])\r\n               ? JobHistoryRenderer.BackgroundStateColors[entry[''State'']]\r\n               : null", span="291-293", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_43 [label="background = JobHistoryRenderer.ForegroundStateColors.ContainsKey(entry[''State''])\r\n                    ? JobHistoryRenderer.ForegroundStateColors[entry[''State'']]\r\n                    : null", span="297-299", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_49 [label="Write(entry[''CreatedAt''])", span="331-331", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_51 [label="Write(JobHelper.FromStringTimestamp(entry[''CreatedAt'']))", span="341-341", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_53 [label="Write(entry[''State''])", span="352-352", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_55 [label="entry.ContainsKey(''Reason'')", span="362-362", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_57 [label="Write(entry[''Reason''])", span="373-373", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_60 [label="JobHistoryRenderer.Exists(entry[''State''])", span="393-393", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_61 [label="var rendered = JobHistoryRenderer.Render(entry[''State''], entry)", span="395-395", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_67 [label="entry.Where(x => x.Key != ''State'' && x.Key != ''Date'' && x.Key != ''Reason'')", span="432-432", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_47 [label="Write(background != null ? String.Format(''background-color: {0};'', background) : null)", span="321-321", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_44 [label="WriteLiteral(''            <div class=\''job-history '')", span="306-306", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_46 [label="WriteLiteral(''\''>\r\n                <div class=\''job-history-heading\'' style=\'''')", span="316-316", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_48 [label="WriteLiteral(''\''>\r\n                    <span class=\''pull-right\'' data-moment=\'''')", span="326-326", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_50 [label="WriteLiteral(''\''>'')", span="336-336", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_52 [label="WriteLiteral(''</span>\r\n                    <h4 class=\''job-history-title\''>\r\n                    '' +\r\n''    '')", span="346-347", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_54 [label="WriteLiteral(''\r\n\r\n'')", span="357-357", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_56 [label="WriteLiteral(''                            <small>'')", span="368-368", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_59 [label="WriteLiteral(''                    </h4>\r\n                </div>\r\n\r\n'')", span="388-388", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_58 [label="WriteLiteral(''</small>\r\n'')", span="378-378", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_66 [label="WriteLiteral(''                    <div class=\''job-history-body\''>\r\n                        <dl c'' +\r\n''lass=\''dl-horizontal\''>\r\n'')", span="426-427", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_62 [label="rendered != null", span="396-396", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_64 [label="Write(rendered)", span="408-408", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_63 [label="WriteLiteral(''                        <div class=\''job-history-body\''>\r\n                         '' +\r\n''   '')", span="402-403", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_75 [label="WriteLiteral(''            </div>\r\n'')", span="482-482", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_65 [label="WriteLiteral(''\r\n                        </div>\r\n'')", span="413-413", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_68 [label="WriteLiteral(''                                <dt>'')", span="438-438", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_74 [label="WriteLiteral(''                        </dl>\r\n                    </div>\r\n'')", span="472-472", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_69 [label="Write(item.Key)", span="443-443", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_72 [label="Write(item.Value)", span="457-457", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_70 [label="WriteLiteral('':</dt>\r\n'')", span="448-448", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_71 [label="WriteLiteral(''                                <dd>'')", span="452-452", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_73 [label="WriteLiteral(''</dd>\r\n'')", span="462-462", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_77 [label="Exit HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="QueueAttributeFacts.cs"];
m30_94 [label="Entry HangFire.Web.JobHistoryRenderer.Exists(string)", span="69-69", cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="QueueAttributeFacts.cs"];
m30_96 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="QueueAttributeFacts.cs"];
m30_85 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="QueueAttributeFacts.cs"];
m30_90 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="QueueAttributeFacts.cs"];
m30_97 [label="Entry lambda expression", span="432-432", cluster="lambda expression", file="QueueAttributeFacts.cs"];
m30_98 [label="x.Key != ''State'' && x.Key != ''Date'' && x.Key != ''Reason''", span="432-432", cluster="lambda expression", file="QueueAttributeFacts.cs"];
m30_99 [label="Exit lambda expression", span="432-432", cluster="lambda expression", file="QueueAttributeFacts.cs"];
m30_88 [label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", span="28-28", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", file="QueueAttributeFacts.cs"];
m30_80 [label="Entry string.ToString()", span="0-0", cluster="string.ToString()", file="QueueAttributeFacts.cs"];
m30_89 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="QueueAttributeFacts.cs"];
m30_84 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="QueueAttributeFacts.cs"];
m30_79 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", file="QueueAttributeFacts.cs"];
m30_83 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="QueueAttributeFacts.cs"];
m30_100 [label="HangFire.Web.Pages.JobDetailsPage", span="", file="QueueAttributeFacts.cs"];
m31_183 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", span="284-284", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_145 [label="Exit lambda expression", span="132-153", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_146 [label="Entry Unk.GetItemFromList", span="", cluster="Unk.GetItemFromList", file="RedisWriteOnlyTransactionFacts.cs"];
m31_147 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="RedisWriteOnlyTransactionFacts.cs"];
m31_199 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_136 [label="state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="138-139", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_137 [label="Commit(redis, x => x.AddJobState(''my-job'', state.Object))", span="142-142", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_138 [label="var serializedEntry = redis.GetItemFromList(''hangfire:job:my-job:history'', 0)", span="145-145", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_201 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_202 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_203 [label="Entry Tuple<string, Func<string>>.cstr", span="", cluster="Tuple<string, Func<string>>.cstr", file="RedisWriteOnlyTransactionFacts.cs"];
m31_324 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_97 [label="var state = new Mock<IState>()", span="97-97", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m31_98 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="98-98", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_99 [label="state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>())", span="99-99", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_64 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", span="92-92", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_63 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", span="89-89", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m31_62 [label="Assert.Equal(Int32Value, value)", span="89-89", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_204 [label="Entry lambda expression", span="198-207", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_154 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_155 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_156 [label="x.SerializeData()", span="138-138", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_80 [label="Assert.Equal(UInt64Value, value)", span="116-116", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ulong)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_49 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RedisWriteOnlyTransactionFacts.cs"];
m31_50 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RedisWriteOnlyTransactionFacts.cs"];
m31_51 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_106 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_107 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_108 [label="x.SerializeData()", span="99-99", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_214 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_0 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", span="16-16", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_1 [label="_activator = new Mock<JobActivator>()", span="18-18", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_2 [label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>()))\r\n				      .Returns(() => new JobArgumentFacts())", span="19-20", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_253 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_118 [label="redis.SetEntry(''hangfire:job:my-job:state'', ''state'', TimeSpan.FromDays(1))", span="116-116", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_119 [label="redis.SetEntry(''hangfire:job:my-job:history'', ''history'', TimeSpan.FromDays(1))", span="117-117", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_120 [label="Commit(redis, x => x.PersistJob(''my-job''))", span="120-120", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_17 [label="var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'')", span="33-33", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_18 [label="var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'')", span="34-34", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_19 [label="var historyEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'')", span="35-35", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_161 [label="CreateAndPerform(ArrayValue, true)", span="238-238", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_242 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_243 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value''));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="242-247", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_244 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_73 [label="Assert.False(stateHash.ContainsKey(''OldName''))", span="84-84", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_74 [label="Assert.Equal(''my-state'', stateHash[''State''])", span="85-85", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_75 [label="Assert.Equal(''my-reason'', stateHash[''Reason''])", span="86-86", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_166 [label="Commit(redis, x => x.AddToQueue(''critical'', ''my-job''))", span="161-161", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_167 [label="Assert.True(redis.SetContainsItem(''hangfire:queues'', ''critical''))", span="163-163", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_168 [label="Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0))", span="164-164", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_127 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_128 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_129 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_112 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_113 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_114 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'', TimeSpan.FromDays(1));\r\n\r\n                // Act\r\n                Commit(redis, x => x.PersistJob(''my-job''));\r\n\r\n                // Assert\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:state'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:history'') < TimeSpan.Zero);\r\n            })", span="112-126", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_37 [label="Entry lambda expression", span="46-59", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_38 [label="var state = new Mock<IState>()", span="49-49", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m31_39 [label="state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>())", span="50-50", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_254 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_255 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n                Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3);\r\n            })", span="253-259", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_256 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_88 [label="x.Reason", span="77-77", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m31_89 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_90 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_58 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_59 [label="x.SetJobState(''my-job'', state.Object)", span="54-54", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_60 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisWriteOnlyTransactionFacts.cs"];
m31_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_79 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ulong)", span="116-116", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ulong)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_241 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_76 [label="Assert.Equal(''Value'', stateHash[''Name''])", span="87-87", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_77 [label="Exit lambda expression", span="65-88", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_78 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisWriteOnlyTransactionFacts.cs"];
m31_267 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_268 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'');\r\n\r\n                Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''));\r\n\r\n                Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="265-272", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_269 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_43 [label="Assert.Equal(''my-state'', hash[''State''])", span="58-58", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_44 [label="Exit lambda expression", span="46-59", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_45 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="RedisWriteOnlyTransactionFacts.cs"];
m31_85 [label="x.Name", span="76-76", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_86 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_87 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_139 [label="Assert.NotNull(serializedEntry)", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_140 [label="var entry = JobHelper.FromJson<Dictionary<string, string>>(serializedEntry)", span="148-148", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_141 [label="Assert.Equal(''my-state'', entry[''State''])", span="149-149", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_148 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", span="218-218", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_275 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="RedisWriteOnlyTransactionFacts.cs"];
m31_184 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_185 [label="x.AddToQueue(''critical'', ''my-job'')", span="175-175", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_186 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_115 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_116 [label="Entry lambda expression", span="112-126", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_117 [label="redis.SetEntry(''hangfire:job:my-job'', ''job'', TimeSpan.FromDays(1))", span="115-115", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_217 [label=converter, span="", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_216 [label=T, span="", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_215 [label="Hangfire.Core.Tests.Common.JobArgumentFacts", span="", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_70 [label="state.Setup(x => x.Reason).Returns(''my-reason'')", span="77-77", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m31_71 [label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="80-80", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_72 [label="var stateHash = redis.GetAllEntriesFromHash(''hangfire:job:my-job:state'')", span="83-83", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_279 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_329 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="RedisWriteOnlyTransactionFacts.cs"];
m31_81 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_103 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="RedisWriteOnlyTransactionFacts.cs"];
m31_104 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_105 [label="x.Name", span="98-98", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_94 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>());\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:job:my-job:history''));\r\n            })", span="94-106", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m31_95 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", span="92-92", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", color=red, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m31_96 [label="Entry lambda expression", span="94-106", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_24 [label="Entry Unk.SetEntry", span="", cluster="Unk.SetEntry", file="RedisWriteOnlyTransactionFacts.cs"];
m31_187 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_190 [label="Entry lambda expression", span="184-192", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_192 [label="Commit(redis, x => x.IncrementCounter(''entry''))", span="188-188", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_193 [label="Assert.Equal(''4'', redis.GetValue(''hangfire:entry''))", span="190-190", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_188 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.IncrementCounter(''entry''));\r\n\r\n                Assert.Equal(''4'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero);\r\n            })", span="184-192", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_195 [label="Exit lambda expression", span="184-192", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_189 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_194 [label="Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero)", span="191-191", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_191 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="186-186", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_196 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="RedisWriteOnlyTransactionFacts.cs"];
m31_197 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_332 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_9 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'');\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'');\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)));\r\n\r\n                // Assert\r\n                var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'');\r\n                var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n                var historyEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n\r\n                Assert.True(TimeSpan.FromHours(23) < jobEntryTtl && jobEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < stateEntryTtl && stateEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < historyEntryTtl && historyEntryTtl < TimeSpan.FromHours(25));\r\n            })", span="22-40", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_14 [label="redis.SetEntry(''hangfire:job:my-job:state'', ''state'')", span="26-26", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_10 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_11 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="RedisWriteOnlyTransactionFacts.cs"];
m31_15 [label="redis.SetEntry(''hangfire:job:my-job:history'', ''history'')", span="27-27", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_16 [label="Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)))", span="30-30", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_208 [label="Assert.Equal(''4'', redis.GetValue(''hangfire:entry''))", span="205-205", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_212 [label="x.IncrementCounter(''entry'', TimeSpan.FromDays(1))", span="202-202", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_207 [label="var entryTtl = redis.GetTimeToLive(''hangfire:entry'')", span="204-204", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_209 [label="Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25))", span="206-206", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_211 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_213 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_40 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", span="56-56", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_41 [label="CreateAndPerform(CharValue)", span="58-58", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_65 [label="CreateAndPerform(Int32Value)", span="94-94", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_67 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", span="98-98", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m31_66 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", span="92-92", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_68 [label="Assert.Equal(UInt32Value, value)", span="98-98", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_69 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", span="98-98", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_91 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", span="134-134", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_100 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", span="146-146", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_111 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", span="161-161", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_132 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", span="191-191", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_133 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", span="197-197", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m31_134 [label="Assert.Equal(GuidValue, value)", span="197-197", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_135 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", span="197-197", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m31_159 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", span="233-233", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", file="RedisWriteOnlyTransactionFacts.cs"];
m31_152 [label="Assert.Equal(NullNullableValue, value)", span="224-224", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_153 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", span="224-224", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m31_42 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", span="56-56", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_55 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", span="80-80", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisWriteOnlyTransactionFacts.cs"];
m31_84 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", span="119-119", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_92 [label="Assert.Equal(UInt16Value, value)", span="134-134", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_102 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", span="146-146", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_101 [label="CreateAndPerform(StringValue)", span="148-148", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_110 [label="Assert.Equal(ObjectValue, value)", span="161-161", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_149 [label="CreateAndPerform(NotNullNullableValue)", span="220-220", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_158 [label="Assert.Equal(ArrayValue, value)", span="233-233", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", file="RedisWriteOnlyTransactionFacts.cs"];
m31_160 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", span="236-236", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_165 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", span="242-242", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_178 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", span="273-273", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_218 [label="Entry lambda expression", span="213-221", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_231 [label="Entry lambda expression", span="227-236", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_245 [label="Entry lambda expression", span="242-247", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_257 [label="Entry lambda expression", span="253-259", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_270 [label="Entry lambda expression", span="265-272", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_283 [label="Entry lambda expression", span="278-285", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_296 [label="Entry lambda expression", span="291-301", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_311 [label="Entry lambda expression", span="307-319", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_53 [label="CreateAndPerform(DoubleValue)", span="76-76", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_52 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", span="74-74", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_57 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", span="80-80", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_56 [label="Assert.Equal(SingleValue, value)", span="80-80", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_180 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", span="273-273", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_206 [label="Entry Unk.Perform", span="", cluster="Unk.Perform", file="RedisWriteOnlyTransactionFacts.cs"];
m31_220 [label="Commit(redis, x => x.DecrementCounter(''entry''))", span="217-217", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_233 [label="Commit(redis, x => x.DecrementCounter(''entry'', TimeSpan.FromDays(1)))", span="231-231", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_246 [label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value''))", span="244-244", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_258 [label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2))", span="255-255", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_272 [label="Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''))", span="269-269", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_285 [label="Commit(redis, x => x.InsertToList(''list'', ''new-value''))", span="282-282", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_300 [label="Commit(redis, x => x.RemoveFromList(''list'', ''value''))", span="297-297", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_316 [label="Commit(redis, x => x.TrimList(''list'', 1, 2))", span="314-314", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_23 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", span="29-29", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_13 [label="Entry Unk.ActivateJob", span="", cluster="Unk.ActivateJob", file="RedisWriteOnlyTransactionFacts.cs"];
m31_83 [label="CreateAndPerform(UInt64Value)", span="121-121", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_82 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", span="119-119", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_109 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", span="161-161", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_144 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", span="209-209", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_151 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", span="224-224", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_150 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", span="218-218", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_157 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", span="233-233", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", file="RedisWriteOnlyTransactionFacts.cs"];
m31_124 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", span="182-182", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_121 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", span="179-179", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_122 [label="Assert.Equal(CultureInfoValue, value)", span="179-179", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_123 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", span="179-179", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_169 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", span="255-255", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_182 [label="Assert.Equal(CustomClassValue.CreatedAt, value.CreatedAt)", span="284-284", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_179 [label="CreateAndPerform(CustomStructValue, true)", span="275-275", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_181 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", span="284-284", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_210 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_205 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_223 [label="Exit lambda expression", span="213-221", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_219 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="215-215", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_221 [label="Assert.Equal(''2'', redis.GetValue(''hangfire:entry''))", span="219-219", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_222 [label="Assert.True(redis.GetTimeToLive(''entry'') < TimeSpan.Zero)", span="220-220", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_237 [label="Exit lambda expression", span="227-236", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_232 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="229-229", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_234 [label="var entryTtl = redis.GetTimeToLive(''hangfire:entry'')", span="233-233", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_235 [label="Assert.Equal(''2'', redis.GetValue(''hangfire:entry''))", span="234-234", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_248 [label="Exit lambda expression", span="242-247", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_247 [label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="246-246", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_261 [label="Exit lambda expression", span="253-259", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_259 [label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="257-257", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_260 [label="Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3)", span="258-258", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_274 [label="Exit lambda expression", span="265-272", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_271 [label="redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'')", span="267-267", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_273 [label="Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="271-271", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_287 [label="Exit lambda expression", span="278-285", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_284 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="280-280", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_286 [label="Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="284-284", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_303 [label="Exit lambda expression", span="291-301", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_297 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="293-293", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_298 [label="redis.AddItemToList(''hangfire:list'', ''another-value'')", span="294-294", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_299 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="295-295", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_301 [label="Assert.Equal(1, redis.GetListCount(''hangfire:list''))", span="299-299", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_302 [label="Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="300-300", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_320 [label="Exit lambda expression", span="307-319", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_312 [label="redis.AddItemToList(''hangfire:list'', ''1'')", span="309-309", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_313 [label="redis.AddItemToList(''hangfire:list'', ''2'')", span="310-310", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_314 [label="redis.AddItemToList(''hangfire:list'', ''3'')", span="311-311", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_315 [label="redis.AddItemToList(''hangfire:list'', ''4'')", span="312-312", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_317 [label="Assert.Equal(2, redis.GetListCount(''hangfire:list''))", span="316-316", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_318 [label="Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0))", span="317-317", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_319 [label="Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1))", span="318-318", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_29 [label="CreateAndPerform(ByteValue)", span="40-40", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_125 [label="CreateAndPerform(CultureInfoValue)", span="184-184", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_171 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", span="255-255", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_224 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_238 [label="Entry lambda expression", span="231-231", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_250 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_263 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_276 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_289 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_304 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_321 [label="Entry lambda expression", span="314-314", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_22 [label="CreateAndPerform(BooleanValue)", span="31-31", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RedisWriteOnlyTransactionFacts.cs"];
m31_21 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", span="29-29", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_142 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", span="209-209", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_143 [label="CreateAndPerform(UriValue)", span="211-211", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_236 [label="Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25))", span="235-235", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_31 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", span="44-44", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_30 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", span="38-38", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_126 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", span="182-182", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_173 [label="CreateAndPerform(DictionaryValue, true)", span="260-260", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_172 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", span="258-258", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_198 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="RedisWriteOnlyTransactionFacts.cs"];
m31_226 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_225 [label="x.DecrementCounter(''entry'')", span="217-217", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_240 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_239 [label="x.DecrementCounter(''entry'', TimeSpan.FromDays(1))", span="231-231", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_252 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_251 [label="x.AddToSet(''my-set'', ''my-value'')", span="244-244", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_265 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_264 [label="x.AddToSet(''my-set'', ''my-value'', 3.2)", span="255-255", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_278 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_277 [label="x.RemoveFromSet(''my-set'', ''my-value'')", span="269-269", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_291 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_290 [label="x.InsertToList(''list'', ''new-value'')", span="282-282", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_306 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_305 [label="x.RemoveFromList(''list'', ''value'')", span="297-297", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_323 [label="Exit lambda expression", span="314-314", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_322 [label="x.TrimList(''list'', 1, 2)", span="314-314", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_5 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="RedisWriteOnlyTransactionFacts.cs"];
m31_6 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RedisWriteOnlyTransactionFacts.cs"];
m31_170 [label="Assert.Equal(DictionaryValue, value)", span="255-255", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_266 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_337 [label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15", cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_200 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_48 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", span="65-65", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_7 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_175 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", span="169-169", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_176 [label="UseConnection(redis =>\r\n            {\r\n                redis.EnqueueItemOnList(''hangfire:queue:critical'', ''another-job'');\r\n\r\n                Commit(redis, x => x.AddToQueue(''critical'', ''my-job''));\r\n\r\n                Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0));\r\n            })", span="171-178", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_177 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", span="169-169", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_330 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="RedisWriteOnlyTransactionFacts.cs"];
m31_292 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_36 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", span="47-47", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_35 [label="CreateAndPerform(SByteValue)", span="49-49", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", color=red, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m31_34 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", span="47-47", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_26 [label="Assert.Equal(ByteValue, value)", span="35-35", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_61 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", span="89-89", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_162 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", span="236-236", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_163 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", span="242-242", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_164 [label="Assert.Equal(ListValue, value)", span="242-242", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_227 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_130 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.Reason).Returns(''my-reason'');\r\n                state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                // Act\r\n                Commit(redis, x => x.AddJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var serializedEntry = redis.GetItemFromList(''hangfire:job:my-job:history'', 0);\r\n                Assert.NotNull(serializedEntry);\r\n\r\n                var entry = JobHelper.FromJson<Dictionary<string, string>>(serializedEntry);\r\n                Assert.Equal(''my-state'', entry[''State'']);\r\n                Assert.Equal(''my-reason'', entry[''Reason'']);\r\n                Assert.Equal(''Value'', entry[''Name'']);\r\n                Assert.True(entry.ContainsKey(''CreatedAt''));\r\n            })", span="132-153", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m31_131 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_331 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_280 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_281 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.InsertToList(''list'', ''new-value''));\r\n\r\n                Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="278-285", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_282 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_93 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", span="134-134", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_46 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", span="65-65", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_288 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="RedisWriteOnlyTransactionFacts.cs"];
m31_33 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", span="44-44", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_174 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", span="258-258", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_8 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_307 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_308 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_309 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''1'');\r\n                redis.AddItemToList(''hangfire:list'', ''2'');\r\n                redis.AddItemToList(''hangfire:list'', ''3'');\r\n                redis.AddItemToList(''hangfire:list'', ''4'');\r\n\r\n                Commit(redis, x => x.TrimList(''list'', 1, 2));\r\n\r\n                Assert.Equal(2, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0));\r\n                Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1));\r\n            })", span="307-319", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_310 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_249 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="RedisWriteOnlyTransactionFacts.cs"];
m31_27 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", span="35-35", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_25 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="322-322", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_325 [label="var transaction = new RedisWriteOnlyTransaction(redis.CreateTransaction())", span="324-324", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_326 [label="action(transaction)", span="326-326", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_327 [label="transaction.Commit()", span="327-327", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_328 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="322-322", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_333 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="331-331", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_335 [label="action(redis)", span="335-335", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_334 [label="var redis = RedisUtils.CreateClient()", span="333-333", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_336 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="331-331", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_32 [label="Assert.Equal(SByteValue, value)", span="44-44", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_262 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="RedisWriteOnlyTransactionFacts.cs"];
m31_293 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_294 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n                redis.AddItemToList(''hangfire:list'', ''another-value'');\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.RemoveFromList(''list'', ''value''));\r\n\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="291-301", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_295 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_228 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", span="225-225", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_229 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.DecrementCounter(''entry'', TimeSpan.FromDays(1)));\r\n\r\n                var entryTtl = redis.GetTimeToLive(''hangfire:entry'');\r\n                Assert.Equal(''2'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25));\r\n            })", span="227-236", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_230 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", span="225-225", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_47 [label="CreateAndPerform(DecimalValue)", span="67-67", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_54 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", span="74-74", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_28 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", span="38-38", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_338 [label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", span="", file="RedisWriteOnlyTransactionFacts.cs"];
m31_339 [label=state, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m31_340 [label=state, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m31_341 [label=state, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m31_342 [label=state, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m32_8 [label="Entry Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", span="49-49", cluster="Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", file="RetryAttributeFacts.cs"];
m32_9 [label="_context.Response.Expires = value", span="51-51", cluster="Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", file="RetryAttributeFacts.cs"];
m32_10 [label="Exit Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", span="49-49", cluster="Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", file="RetryAttributeFacts.cs"];
m32_11 [label="Entry Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", span="54-54", cluster="Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", file="RetryAttributeFacts.cs"];
m32_12 [label="return _context.Response.WriteAsync(text);", span="56-56", cluster="Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", file="RetryAttributeFacts.cs"];
m32_13 [label="Exit Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", span="54-54", cluster="Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", file="RetryAttributeFacts.cs"];
m32_14 [label="Entry Unk.WriteAsync", span="", cluster="Unk.WriteAsync", file="RetryAttributeFacts.cs"];
m32_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="RetryAttributeFacts.cs"];
m32_7 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="RetryAttributeFacts.cs"];
m32_0 [label="Entry Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", span="29-29", cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="RetryAttributeFacts.cs"];
m32_1 [label="environment == null", span="31-31", cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="RetryAttributeFacts.cs"];
m32_2 [label="throw new ArgumentNullException(nameof(environment));", span="31-31", cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="RetryAttributeFacts.cs"];
m32_3 [label="_context = new OwinContext(environment)", span="32-32", cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="RetryAttributeFacts.cs"];
m32_4 [label="Exit Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", span="29-29", cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="RetryAttributeFacts.cs"];
m32_15 [label="Hangfire.Dashboard.OwinDashboardResponse", span="", file="RetryAttributeFacts.cs"];
m35_0 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m35_1 [label="var job = Job.FromExpression(() => Console.WriteLine())", span="21-21", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m35_2 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m35_4 [label="_stateContext = new StateContext(JobId, job)", span="25-25", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m35_3 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m35_5 [label="_context = new ApplyStateContext(\r\n                _connection.Object,\r\n                _stateContext, \r\n                new ScheduledState(EnqueueAt), \r\n                null)", span="26-30", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m35_6 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m35_8 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="ScheduledStateHandlerFacts.cs"];
m35_28 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="ScheduledStateHandlerFacts.cs"];
m35_23 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="41-41", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m35_24 [label="var handler = new ScheduledState.Handler()", span="43-43", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m35_25 [label="handler.Apply(_context, _transaction.Object)", span="44-44", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m35_26 [label="_transaction.Verify(x => x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(EnqueueAt)))", span="46-47", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m35_27 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="41-41", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m35_35 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="51-51", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m35_36 [label="var handler = new ScheduledState.Handler()", span="53-53", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m35_37 [label="handler.Unapply(_context, _transaction.Object)", span="54-54", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m35_38 [label="_transaction.Verify(x => x.RemoveFromSet(''schedule'', JobId))", span="56-56", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m35_39 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="51-51", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m35_22 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ScheduledStateHandlerFacts.cs"];
m35_21 [label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="52-52", cluster="HangFire.States.ScheduledState.Handler.Handler()", file="ScheduledStateHandlerFacts.cs"];
m35_51 [label="Entry Unk.>", span="", cluster="Unk.>", file="ScheduledStateHandlerFacts.cs"];
m35_10 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="ScheduledStateHandlerFacts.cs"];
m35_34 [label="Entry Unk.AddToSet", span="", cluster="Unk.AddToSet", file="ScheduledStateHandlerFacts.cs"];
m35_33 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ScheduledStateHandlerFacts.cs"];
m35_11 [label="Entry ApplyStateContext.cstr", span="", cluster="ApplyStateContext.cstr", file="ScheduledStateHandlerFacts.cs"];
m35_50 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="ScheduledStateHandlerFacts.cs"];
m35_40 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="ScheduledStateHandlerFacts.cs"];
m35_45 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", span="60-60", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m35_46 [label="var handler = new ScheduledState.Handler()", span="62-62", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m35_47 [label="var context = new ApplyStateContext(\r\n                _connection.Object, _stateContext, new Mock<State>().Object, null)", span="63-64", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", color=red, community=0, file="ScheduledStateHandlerFacts.cs"];
m35_48 [label="Assert.Throws<InvalidOperationException>(\r\n                () => handler.Apply(context, _transaction.Object))", span="66-67", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m35_49 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", span="60-60", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m35_52 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_13 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_14 [label="Console.WriteLine()", span="21-21", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_15 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_30 [label="Entry lambda expression", span="46-47", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_31 [label="x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(EnqueueAt))", span="46-47", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_32 [label="Exit lambda expression", span="46-47", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_41 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_42 [label="x.RemoveFromSet(''schedule'', JobId)", span="56-56", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_43 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_53 [label="handler.Apply(context, _transaction.Object)", span="67-67", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_54 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m35_29 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ScheduledStateHandlerFacts.cs"];
m35_17 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m35_18 [label="var handler = new ScheduledState.Handler()", span="36-36", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m35_19 [label="Assert.Equal(ScheduledState.StateName, handler.StateName)", span="37-37", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m35_20 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m35_12 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateHandlerFacts.cs"];
m35_7 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ScheduledStateHandlerFacts.cs"];
m35_44 [label="Entry Unk.RemoveFromSet", span="", cluster="Unk.RemoveFromSet", file="ScheduledStateHandlerFacts.cs"];
m35_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ScheduledStateHandlerFacts.cs"];
m35_16 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="ScheduledStateHandlerFacts.cs"];
m35_55 [label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts", span="", file="ScheduledStateHandlerFacts.cs"];
m35_56 [label=handler, span="", file="ScheduledStateHandlerFacts.cs"];
m35_57 [label=context, span="", file="ScheduledStateHandlerFacts.cs"];
m36_9 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SchedulePollerFacts.cs"];
m36_23 [label="Entry HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66", cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="SchedulePollerFacts.cs"];
m36_24 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults, true))", span="68-68", cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="SchedulePollerFacts.cs"];
m36_25 [label="Exit HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66", cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="SchedulePollerFacts.cs"];
m36_76 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SchedulePollerFacts.cs"];
m36_5 [label="Entry HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", span="36-36", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", file="SchedulePollerFacts.cs"];
m36_6 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults))", span="38-38", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", file="SchedulePollerFacts.cs"];
m36_7 [label="Exit HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", span="36-36", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", file="SchedulePollerFacts.cs"];
m36_116 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="SchedulePollerFacts.cs"];
m36_95 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="SchedulePollerFacts.cs"];
m36_50 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SchedulePollerFacts.cs"];
m36_86 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="SchedulePollerFacts.cs"];
m36_22 [label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="12-12", cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="SchedulePollerFacts.cs"];
m36_91 [label="Entry HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", span="171-171", cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="SchedulePollerFacts.cs"];
m36_92 [label="var job = Redis.Client.GetAllEntriesFromHash(''hangfire:job:'' + JobSteps.DefaultJobId)", span="173-173", cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="SchedulePollerFacts.cs"];
m36_93 [label="DictionaryAssert.ContainsFollowingItems(table, job)", span="174-174", cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="SchedulePollerFacts.cs"];
m36_94 [label="Exit HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", span="171-171", cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="SchedulePollerFacts.cs"];
m36_46 [label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="SchedulePollerFacts.cs"];
m36_47 [label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="96-96", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="SchedulePollerFacts.cs"];
m36_48 [label="When(''I create a job'')", span="97-97", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="SchedulePollerFacts.cs"];
m36_49 [label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="SchedulePollerFacts.cs"];
m36_34 [label="Entry Mock<JobState>.cstr", span="", cluster="Mock<JobState>.cstr", file="SchedulePollerFacts.cs"];
m36_108 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SchedulePollerFacts.cs"];
m36_87 [label="Entry HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165", cluster="HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", file="SchedulePollerFacts.cs"];
m36_88 [label="Assert.IsFalse(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="167-167", cluster="HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", file="SchedulePollerFacts.cs"];
m36_89 [label="Exit HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165", cluster="HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", file="SchedulePollerFacts.cs"];
m36_106 [label="Entry Unk.>", span="", cluster="Unk.>", file="SchedulePollerFacts.cs"];
m36_135 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="SchedulePollerFacts.cs"];
m36_77 [label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="SchedulePollerFacts.cs"];
m36_78 [label="_client.CreateJob(JobSteps.DefaultJobId, typeof(ClientSteps), null, null)", span="150-150", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="SchedulePollerFacts.cs"];
m36_79 [label=Exception, span="152-152", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="SchedulePollerFacts.cs"];
m36_80 [label="_exception = ex", span="154-154", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="SchedulePollerFacts.cs"];
m36_81 [label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="SchedulePollerFacts.cs"];
m36_0 [label="Entry HangFire.Tests.ClientSteps.GivenAClient()", span="28-28", cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="SchedulePollerFacts.cs"];
m36_1 [label="_client = new JobClient(\r\n                RedisFactory.BasicManager,\r\n                new JobCreator(_clientFilters, _exceptionFilters))", span="30-32", cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="SchedulePollerFacts.cs"];
m36_2 [label="Exit HangFire.Tests.ClientSteps.GivenAClient()", span="28-28", cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="SchedulePollerFacts.cs"];
m36_117 [label="Entry HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", span="203-203", cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="SchedulePollerFacts.cs"];
m36_118 [label="Assert.IsNotNull(_exception)", span="205-205", cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="SchedulePollerFacts.cs"];
m36_119 [label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="206-206", cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="SchedulePollerFacts.cs"];
m36_120 [label="Exit HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", span="203-203", cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="SchedulePollerFacts.cs"];
m36_90 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="SchedulePollerFacts.cs"];
m36_107 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="SchedulePollerFacts.cs"];
m36_13 [label="Entry HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="48-48", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="SchedulePollerFacts.cs"];
m36_14 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, false, true))", span="50-50", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="SchedulePollerFacts.cs"];
m36_15 [label="Exit HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="48-48", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="SchedulePollerFacts.cs"];
m36_147 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="SchedulePollerFacts.cs"];
m36_136 [label="Entry HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="230-230", cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_137 [label="Assert.AreEqual(table.RowCount, _exceptionFilterResults.Count)", span="232-232", cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_139 [label="i < table.RowCount", span="234-234", cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_140 [label="var filter = table.Rows[i][''Filter'']", span="236-236", cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_138 [label="var i = 0", span="234-234", cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_141 [label="Assert.AreEqual(filter, _exceptionFilterResults[i])", span="237-237", cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_142 [label="i++", span="234-234", cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_143 [label="Exit HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="230-230", cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_3 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="SchedulePollerFacts.cs"];
m36_45 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="SchedulePollerFacts.cs"];
m36_51 [label="Entry Unk.When", span="", cluster="Unk.When", file="SchedulePollerFacts.cs"];
m36_97 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="SchedulePollerFacts.cs"];
m36_98 [label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="180-182", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="SchedulePollerFacts.cs"];
m36_99 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="183-183", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="SchedulePollerFacts.cs"];
m36_100 [label="Assert.AreEqual(_arguments.Count, args.Count)", span="185-185", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="SchedulePollerFacts.cs"];
m36_102 [label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="188-188", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="SchedulePollerFacts.cs"];
m36_101 [label=_arguments, span="186-186", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="SchedulePollerFacts.cs"];
m36_103 [label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="189-189", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="SchedulePollerFacts.cs"];
m36_104 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="SchedulePollerFacts.cs"];
m36_82 [label="Entry HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="159-159", cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="SchedulePollerFacts.cs"];
m36_83 [label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="161-161", cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="SchedulePollerFacts.cs"];
m36_84 [label="Exit HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="159-159", cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="SchedulePollerFacts.cs"];
m36_144 [label="Entry HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", span="242-242", cluster="HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", file="SchedulePollerFacts.cs"];
m36_145 [label="Assert.IsNull(_exception)", span="244-244", cluster="HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", file="SchedulePollerFacts.cs"];
m36_146 [label="Exit HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", span="242-242", cluster="HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", file="SchedulePollerFacts.cs"];
m36_35 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SchedulePollerFacts.cs"];
m36_123 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="SchedulePollerFacts.cs"];
m36_26 [label="Entry HangFire.Tests.ClientSteps.WhenICreateAJob()", span="73-73", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="SchedulePollerFacts.cs"];
m36_27 [label="_stateMock = new Mock<JobState>(''SomeReason'')", span="75-75", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="SchedulePollerFacts.cs"];
m36_28 [label="_stateMock.Setup(x => x.StateName).Returns(''Test'')", span="76-76", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="SchedulePollerFacts.cs"];
m36_29 [label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="77-77", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="SchedulePollerFacts.cs"];
m36_30 [label="_client.CreateJob(\r\n                    JobSteps.DefaultJobId,\r\n                    typeof(TestJob),\r\n                    _stateMock.Object,\r\n                    _arguments)", span="81-85", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="SchedulePollerFacts.cs"];
m36_31 [label=Exception, span="87-87", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="SchedulePollerFacts.cs"];
m36_32 [label="_exception = ex", span="89-89", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", color=red, community=0, file="SchedulePollerFacts.cs"];
m36_33 [label="Exit HangFire.Tests.ClientSteps.WhenICreateAJob()", span="73-73", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="SchedulePollerFacts.cs"];
m36_66 [label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", span="120-120", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="SchedulePollerFacts.cs"];
m36_67 [label="_client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, null)", span="124-124", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="SchedulePollerFacts.cs"];
m36_68 [label=Exception, span="126-126", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="SchedulePollerFacts.cs"];
m36_69 [label="_exception = ex", span="128-128", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="SchedulePollerFacts.cs"];
m36_70 [label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", span="120-120", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="SchedulePollerFacts.cs"];
m36_122 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="SchedulePollerFacts.cs"];
m36_113 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_39 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_42 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_40 [label="x.StateName", span="76-76", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_41 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_43 [label="x.GetProperties()", span="77-77", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_44 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_52 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_55 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_53 [label="x[''Name'']", span="96-96", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_54 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_56 [label="x[''Value'']", span="96-96", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_57 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_114 [label="x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="197-197", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_115 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m36_121 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="SchedulePollerFacts.cs"];
m36_112 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SchedulePollerFacts.cs"];
m36_71 [label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="SchedulePollerFacts.cs"];
m36_72 [label="_client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), null, null)", span="137-137", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="SchedulePollerFacts.cs"];
m36_73 [label=Exception, span="139-139", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="SchedulePollerFacts.cs"];
m36_74 [label="_exception = ex", span="141-141", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="SchedulePollerFacts.cs"];
m36_75 [label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="SchedulePollerFacts.cs"];
m36_10 [label="Entry HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="42-42", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="SchedulePollerFacts.cs"];
m36_11 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, true))", span="44-44", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="SchedulePollerFacts.cs"];
m36_12 [label="Exit HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="42-42", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="SchedulePollerFacts.cs"];
m36_8 [label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="SchedulePollerFacts.cs"];
m36_58 [label="Entry HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101", cluster="HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="SchedulePollerFacts.cs"];
m36_59 [label="_clientFilters.Add(new TestFilter(''buggy'', _clientFilterResults, true))", span="103-103", cluster="HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="SchedulePollerFacts.cs"];
m36_60 [label="Exit HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101", cluster="HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="SchedulePollerFacts.cs"];
m36_105 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="SchedulePollerFacts.cs"];
m36_16 [label="Entry HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="SchedulePollerFacts.cs"];
m36_17 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, true, false, false))", span="56-56", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="SchedulePollerFacts.cs"];
m36_18 [label="Exit HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54", cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="SchedulePollerFacts.cs"];
m36_96 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="SchedulePollerFacts.cs"];
m36_36 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SchedulePollerFacts.cs"];
m36_38 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="SchedulePollerFacts.cs"];
m36_19 [label="Entry HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", span="60-60", cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", file="SchedulePollerFacts.cs"];
m36_20 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults))", span="62-62", cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", file="SchedulePollerFacts.cs"];
m36_21 [label="Exit HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", span="60-60", cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", file="SchedulePollerFacts.cs"];
m36_124 [label="Entry HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="211-211", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_125 [label="Assert.AreEqual(table.RowCount, _clientFilterResults.Count)", span="213-213", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_127 [label="i < table.RowCount", span="215-215", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_128 [label="var method = table.Rows[i][''Method'']", span="217-217", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_126 [label="var i = 0", span="215-215", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_129 [label="Assert.AreEqual(method, _clientFilterResults[i])", span="218-218", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_130 [label="i++", span="215-215", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_131 [label="Exit HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="211-211", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="SchedulePollerFacts.cs"];
m36_4 [label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SchedulePollerFacts.cs"];
m36_109 [label="Entry HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194", cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="SchedulePollerFacts.cs"];
m36_110 [label="_stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId),\r\n                Times.Once)", span="196-198", cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="SchedulePollerFacts.cs"];
m36_111 [label="Exit HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194", cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="SchedulePollerFacts.cs"];
m36_61 [label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="SchedulePollerFacts.cs"];
m36_62 [label="_client.CreateJob(null, typeof(TestJob), new Mock<JobState>(''1'').Object, null)", span="111-111", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="SchedulePollerFacts.cs"];
m36_63 [label=Exception, span="113-113", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="SchedulePollerFacts.cs"];
m36_64 [label="_exception = ex", span="115-115", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="SchedulePollerFacts.cs"];
m36_65 [label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="SchedulePollerFacts.cs"];
m36_85 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SchedulePollerFacts.cs"];
m36_132 [label="Entry HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", span="223-223", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", file="SchedulePollerFacts.cs"];
m36_133 [label="Assert.AreNotEqual(0, _exceptionFilterResults.Count)", span="225-225", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", file="SchedulePollerFacts.cs"];
m36_134 [label="Exit HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", span="223-223", cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", file="SchedulePollerFacts.cs"];
m36_148 [label="HangFire.Tests.ClientSteps", span="", file="SchedulePollerFacts.cs"];
m38_5 [label="_queues = queues", span="26-26", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ServerComponentRunnerCollection.cs"];
m38_26 [label="System.IO.EndOfStreamException", span="64-64", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_45 [label="Exit HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", span="87-87", cluster="HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", file="ServerComponentRunnerCollection.cs"];
m38_47 [label="_channel != null", span="86-86", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_48 [label="_channel.IsOpen", span="88-88", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_49 [label="_channel.Close()", span="88-88", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_46 [label="Entry System.Collections.Generic.List<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.List<T>.CopyTo(T[], int)", file="ServerComponentRunnerCollection.cs"];
m38_50 [label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Remove(T)", file="ServerComponentRunnerCollection.cs"];
m38_51 [label="HangFire.Server.ServerComponentRunnerCollection", span="", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_52 [label="_connection.IsOpen", span="94-94", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_53 [label="_connection.Close()", span="94-94", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_54 [label="_connection.Dispose()", span="95-95", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_55 [label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", span="84-84", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_73 [label="Entry Unk.CreateModel", span="", cluster="Unk.CreateModel", file="ServerComponentRunnerCollection.cs"];
m38_6 [label="_factory = factory", span="27-27", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ServerComponentRunnerCollection.cs"];
m38_35 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77", cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="ServerComponentRunnerCollection.cs"];
m38_56 [label="Entry Unk.Close", span="", cluster="Unk.Close", file="ServerComponentRunnerCollection.cs"];
m38_95 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="ServerComponentRunnerCollection.cs"];
m38_43 [label="Entry Unk.CreateBasicProperties", span="", cluster="Unk.CreateBasicProperties", file="ServerComponentRunnerCollection.cs"];
m38_44 [label="Entry Unk.SetPersistent", span="", cluster="Unk.SetPersistent", file="ServerComponentRunnerCollection.cs"];
m38_12 [label="Entry Unk.CreateConnection", span="", cluster="Unk.CreateConnection", file="ServerComponentRunnerCollection.cs"];
m38_13 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", color=red, community=0, file="ServerComponentRunnerCollection.cs"];
m38_14 [label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", span="99-99", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_15 [label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_94 [label="Entry QueueingBasicConsumer.cstr", span="", cluster="QueueingBasicConsumer.cstr", file="ServerComponentRunnerCollection.cs"];
m38_27 [label="CreateChannel()", span="66-66", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_28 [label="message = null", span="67-67", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_29 [label="message == null", span="70-70", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_30 [label="return new RabbitMqFetchedJob(message, ref _channel);", span="72-72", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_11 [label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22", cluster="HangFire.Server.IServerComponentRunner.Start()", file="ServerComponentRunnerCollection.cs"];
m38_42 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="ServerComponentRunnerCollection.cs"];
m38_0 [label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerComponentRunnerCollection.cs"];
m38_7 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ServerComponentRunnerCollection.cs"];
m38_8 [label=_runners, span="38-38", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ServerComponentRunnerCollection.cs"];
m38_9 [label="runner.Start()", span="40-40", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ServerComponentRunnerCollection.cs"];
m38_3 [label="_runners = new List<IServerComponentRunner>(runners)", span="30-30", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerComponentRunnerCollection.cs"];
m38_1 [label="runners == null", span="28-28", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerComponentRunnerCollection.cs"];
m38_4 [label="Exit HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerComponentRunnerCollection.cs"];
m38_2 [label="throw new ArgumentNullException(''runners'');", span="28-28", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerComponentRunnerCollection.cs"];
m38_10 [label="Exit HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ServerComponentRunnerCollection.cs"];
m38_18 [label="Stop()", span="54-54", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", color=green, community=0, file="ServerComponentRunnerCollection.cs"];
m38_17 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_19 [label=_runners, span="56-56", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerComponentRunnerCollection.cs", color=red, community=0];
m38_23 [label="Entry HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", span="62-62", cluster="HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", color=green, community=0, file="ServerComponentRunnerCollection.cs"];
m38_22 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_24 [label="return _runners.GetEnumerator();", span="64-64", cluster="HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", file="ServerComponentRunnerCollection.cs"];
m38_16 [label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23", cluster="HangFire.Server.IServerComponentRunner.Stop()", file="ServerComponentRunnerCollection.cs"];
m38_20 [label="runner.Dispose()", span="58-58", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_21 [label="Exit HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerComponentRunnerCollection.cs"];
m38_25 [label="Exit HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", span="62-62", cluster="HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", file="ServerComponentRunnerCollection.cs"];
m38_31 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", span="72-72", cluster="HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", file="ServerComponentRunnerCollection.cs"];
m38_39 [label="properties.SetPersistent(true)", span="79-79", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ServerComponentRunnerCollection.cs"];
m38_40 [label="_channel.BasicPublish('''', queue, properties, body)", span="81-81", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ServerComponentRunnerCollection.cs"];
m38_41 [label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="75-75", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ServerComponentRunnerCollection.cs"];
m38_75 [label="Entry Unk.QueueDeclare", span="", cluster="Unk.QueueDeclare", file="ServerComponentRunnerCollection.cs"];
m38_74 [label="Entry Unk.BasicQos", span="", cluster="Unk.BasicQos", file="ServerComponentRunnerCollection.cs"];
m38_32 [label="_runners.Add(item)", span="74-74", cluster="HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", file="ServerComponentRunnerCollection.cs"];
m38_33 [label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", span="120-120", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_36 [label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="75-75", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ServerComponentRunnerCollection.cs"];
m38_37 [label="var body = Encoding.UTF8.GetBytes(jobId)", span="77-77", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ServerComponentRunnerCollection.cs"];
m38_57 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ServerComponentRunnerCollection.cs"];
m38_34 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ServerComponentRunnerCollection.cs"];
m38_100 [label="Entry lambda expression", span="150-150", cluster="lambda expression", file="ServerComponentRunnerCollection.cs"];
m38_97 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="ServerComponentRunnerCollection.cs"];
m38_98 [label=consumer, span="134-134", cluster="lambda expression", file="ServerComponentRunnerCollection.cs"];
m38_101 [label=newConsumer, span="150-150", cluster="lambda expression", file="ServerComponentRunnerCollection.cs"];
m38_99 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="ServerComponentRunnerCollection.cs"];
m38_102 [label="Exit lambda expression", span="150-150", cluster="lambda expression", file="ServerComponentRunnerCollection.cs"];
m38_38 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="ServerComponentRunnerCollection.cs"];
m38_59 [label="_channel != null && _channel.IsOpen && _connection.IsOpen", span="103-103", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_61 [label="_channel != null && _channel.IsOpen", span="105-105", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_62 [label="_channel.Abort()", span="105-105", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_63 [label="!_connection.IsOpen", span="106-106", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_64 [label="_connection = _factory.CreateConnection()", span="106-106", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_65 [label="_channel = _connection.CreateModel()", span="108-108", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_66 [label="_channel.BasicQos(0, 1, false)", span="109-109", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_67 [label="var properties = _channel.CreateBasicProperties()", span="111-111", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_69 [label=_queues, span="115-115", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_70 [label="_channel.QueueDeclare(queue, true, false, false, null)", span="116-116", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_58 [label=ConsumerLock, span="101-101", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_60 [label="return;", span="103-103", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_68 [label="properties.SetPersistent(true)", span="112-112", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_71 [label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", span="99-99", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ServerComponentRunnerCollection.cs"];
m38_93 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ServerComponentRunnerCollection.cs"];
m38_96 [label="Entry Unk.BasicConsume", span="", cluster="Unk.BasicConsume", file="ServerComponentRunnerCollection.cs"];
m38_72 [label="Entry Unk.Abort", span="", cluster="Unk.Abort", file="ServerComponentRunnerCollection.cs"];
m38_76 [label="QueueingBasicConsumer consumer", span="122-122", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_77 [label="cancellationToken.ThrowIfCancellationRequested()", span="124-124", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_78 [label="!_consumers.TryGetValue(queue, out consumer)", span="126-126", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_80 [label="!_consumers.TryGetValue(queue, out consumer)", span="131-131", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_82 [label="_consumers.AddOrUpdate(queue, consumer, (dq, dc) => consumer)", span="134-134", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_83 [label="_channel.BasicConsume(queue, false, ''HangFire.RabbitMq.'' + Thread.CurrentThread.Name, consumer)", span="135-135", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_88 [label="_consumers.AddOrUpdate(queue, newConsumer, (dq, dc) => newConsumer)", span="150-150", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_89 [label="_channel.BasicConsume(queue, false, ''HangFire.RabbitMq.'' + Thread.CurrentThread.Name, newConsumer)", span="151-151", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_81 [label="consumer = new QueueingBasicConsumer(_channel)", span="133-133", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_87 [label="var newConsumer = new QueueingBasicConsumer(_channel)", span="149-149", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_91 [label="return consumer;", span="158-158", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_79 [label=ConsumerLock, span="129-129", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_84 [label="consumer.Model.IsClosed", span="142-142", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_86 [label="consumer.Model.IsClosed", span="146-146", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_90 [label="consumer = newConsumer", span="152-152", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_85 [label=ConsumerLock, span="144-144", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_92 [label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", span="120-120", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ServerComponentRunnerCollection.cs"];
m38_103 [label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", span="", file="ServerComponentRunnerCollection.cs"];
m38_104 [label=consumer, span="", file="ServerComponentRunnerCollection.cs"];
m38_105 [label=newConsumer, span="", file="ServerComponentRunnerCollection.cs"];
m39_0 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs"];
m39_1 [label="MaxRetryAttempts = 10", span="26-26", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs"];
m39_2 [label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="27-27", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs"];
m39_3 [label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=green, community=0, file="ServerComponentRunnerOptions.cs"];
m39_4 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerOptions.cs"];
m39_5 [label="HangFire.Server.ServerComponentRunnerOptions", span="", file="ServerComponentRunnerOptions.cs"];
m40_0 [label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="SharedWorkerContext.cs"];
m40_1 [label="serverId == null", span="31-31", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_2 [label="throw new ArgumentNullException(''serverId'');", span="31-31", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_3 [label="queues == null", span="32-32", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_4 [label="throw new ArgumentNullException(''queues'');", span="32-32", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_5 [label="storage == null", span="33-33", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_6 [label="throw new ArgumentNullException(''storage'');", span="33-33", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_7 [label="performanceProcess == null", span="34-34", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_8 [label="throw new ArgumentNullException(''performanceProcess'');", span="34-34", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_9 [label="activator == null", span="35-35", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_10 [label="throw new ArgumentNullException(''activator'');", span="35-35", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_11 [label="stateMachineFactory == null", span="36-36", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_12 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="36-36", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_13 [label="ServerId = serverId", span="38-38", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_14 [label="Queues = queues", span="39-39", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_15 [label="Storage = storage", span="40-40", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_16 [label="PerformanceProcess = performanceProcess", span="41-41", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_17 [label="Activator = activator", span="42-42", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_18 [label="StateMachineFactory = stateMachineFactory", span="43-43", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m40_19 [label="Exit HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="SharedWorkerContext.cs"];
m40_23 [label="HangFire.Server.SharedWorkerContext", span="", file="SharedWorkerContext.cs"];
m41_398 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="SharedWorkerContextFacts.cs"];
m41_91 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SharedWorkerContextFacts.cs"];
m41_115 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="SharedWorkerContextFacts.cs"];
m41_0 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SharedWorkerContextFacts.cs"];
m41_1 [label="_connectionString = connectionString", span="39-39", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_2 [label="_queueProviders = queueProviders", span="40-40", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_3 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SharedWorkerContextFacts.cs"];
m41_48 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="518-518", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_387 [label="return DeserializeJobs(jobs, selector);", span="539-539", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_385 [label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="525-532", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_386 [label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="534-537", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_388 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="518-518", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_399 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SharedWorkerContextFacts.cs"];
m41_234 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="314-314", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SharedWorkerContextFacts.cs"];
m41_235 [label="return UseConnection(connection =>\r\n            {\r\n                const string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n'';\r\n\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count);\r\n\r\n                    Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0;\r\n\r\n                    stats.Enqueued = getCountIfExists(EnqueuedState.StateName);\r\n                    stats.Failed = getCountIfExists(FailedState.StateName);\r\n                    stats.Processing = getCountIfExists(ProcessingState.StateName);\r\n                    stats.Scheduled = getCountIfExists(ScheduledState.StateName);\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n\r\n                stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count();\r\n\r\n                return stats;\r\n            });", span="316-353", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SharedWorkerContextFacts.cs"];
m41_236 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="314-314", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SharedWorkerContextFacts.cs"];
m41_52 [label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="SharedWorkerContextFacts.cs"];
m41_72 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="117-117", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SharedWorkerContextFacts.cs"];
m41_73 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="119-120", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_74 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="117-117", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SharedWorkerContextFacts.cs"];
m41_361 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="SharedWorkerContextFacts.cs"];
m41_7 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="447-447", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SharedWorkerContextFacts.cs"];
m41_352 [label="var connection = new SqlConnection(_connectionString)", span="450-450", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SharedWorkerContextFacts.cs"];
m41_351 [label="var transaction = new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="449-449", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SharedWorkerContextFacts.cs"];
m41_354 [label="var result = action(connection)", span="454-454", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SharedWorkerContextFacts.cs"];
m41_353 [label="connection.Open()", span="452-452", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SharedWorkerContextFacts.cs"];
m41_356 [label="return result;", span="458-458", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SharedWorkerContextFacts.cs"];
m41_355 [label="transaction.Complete()", span="456-456", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SharedWorkerContextFacts.cs"];
m41_357 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="447-447", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SharedWorkerContextFacts.cs"];
m41_360 [label="Entry SqlConnection.cstr", span="", cluster="SqlConnection.cstr", file="SharedWorkerContextFacts.cs"];
m41_273 [label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22", cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="SharedWorkerContextFacts.cs"];
m41_411 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SharedWorkerContextFacts.cs"];
m41_194 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="263-263", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SharedWorkerContextFacts.cs"];
m41_195 [label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="265-299", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SharedWorkerContextFacts.cs"];
m41_196 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="263-263", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SharedWorkerContextFacts.cs"];
m41_258 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SharedWorkerContextFacts.cs"];
m41_104 [label="Entry HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="67-67", cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="SharedWorkerContextFacts.cs"];
m41_367 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="SharedWorkerContextFacts.cs"];
m41_36 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="77-77", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SharedWorkerContextFacts.cs"];
m41_37 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="79-80", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_38 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="77-77", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SharedWorkerContextFacts.cs"];
m41_181 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="251-251", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SharedWorkerContextFacts.cs"];
m41_182 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="253-254", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SharedWorkerContextFacts.cs"];
m41_183 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="251-251", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SharedWorkerContextFacts.cs"];
m41_179 [label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24", cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="SharedWorkerContextFacts.cs"];
m41_255 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="SharedWorkerContextFacts.cs"];
m41_384 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="SharedWorkerContextFacts.cs"];
m41_105 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="168-168", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_106 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="170-182", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_107 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="168-168", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_94 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="150-150", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_95 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="152-165", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_96 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="150-150", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_269 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SharedWorkerContextFacts.cs"];
m41_64 [label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="SharedWorkerContextFacts.cs"];
m41_146 [label="Entry Unk.EnqueuedJobs", span="", cluster="Unk.EnqueuedJobs", file="SharedWorkerContextFacts.cs"];
m41_65 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="111-111", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SharedWorkerContextFacts.cs"];
m41_66 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="113-114", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_67 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="111-111", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SharedWorkerContextFacts.cs"];
m41_383 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="31-31", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SharedWorkerContextFacts.cs"];
m41_22 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="60-60", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SharedWorkerContextFacts.cs"];
m41_23 [label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var counters = queueApi.GetEnqueuedAndFetchedCount(queue);\r\n\r\n                return counters.FetchedCount ?? 0;\r\n            });", span="62-68", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_24 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="60-60", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SharedWorkerContextFacts.cs"];
m41_53 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SharedWorkerContextFacts.cs"];
m41_254 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SharedWorkerContextFacts.cs"];
m41_256 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SharedWorkerContextFacts.cs"];
m41_400 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="SharedWorkerContextFacts.cs"];
m41_30 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="71-71", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SharedWorkerContextFacts.cs"];
m41_31 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="73-74", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_32 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="71-71", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SharedWorkerContextFacts.cs"];
m41_92 [label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21", cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="SharedWorkerContextFacts.cs"];
m41_389 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="542-542", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_394 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="553-554", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_393 [label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="551-551", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_390 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="546-546", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_391 [label=jobs, span="548-548", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_392 [label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="550-550", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_395 [label="return new JobList<TDto>(result);", span="557-557", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_396 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="542-542", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SharedWorkerContextFacts.cs"];
m41_358 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SharedWorkerContextFacts.cs"];
m41_141 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SharedWorkerContextFacts.cs"];
m41_332 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SharedWorkerContextFacts.cs"];
m41_210 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SharedWorkerContextFacts.cs"];
m41_350 [label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SharedWorkerContextFacts.cs"];
m41_125 [label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="SharedWorkerContextFacts.cs"];
m41_266 [label="Entry lambda expression", span="333-333", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_8 [label="Entry lambda expression", span="45-46", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_9 [label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="46-46", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_10 [label="Exit lambda expression", span="45-46", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_15 [label="Entry lambda expression", span="51-57", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_16 [label="var queueApi = GetQueueApi(connection, queue)", span="53-53", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_17 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="54-54", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_18 [label="return counters.EnqueuedCount ?? 0;", span="56-56", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_19 [label="Exit lambda expression", span="51-57", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_25 [label="Entry lambda expression", span="62-68", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_26 [label="var queueApi = GetQueueApi(connection, queue)", span="64-64", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_27 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="65-65", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_28 [label="return counters.FetchedCount ?? 0;", span="67-67", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_29 [label="Exit lambda expression", span="62-68", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_33 [label="Entry lambda expression", span="73-74", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_34 [label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="74-74", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_35 [label="Exit lambda expression", span="73-74", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_39 [label="Entry lambda expression", span="79-80", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_40 [label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="80-80", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_41 [label="Exit lambda expression", span="79-80", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_45 [label="Entry lambda expression", span="85-94", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_46 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="85-94", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_47 [label="Exit lambda expression", span="85-94", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_49 [label="Entry lambda expression", span="89-94", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_50 [label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="89-94", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_51 [label="Exit lambda expression", span="89-94", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_58 [label="Entry lambda expression", span="99-108", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_59 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="99-108", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_60 [label="Exit lambda expression", span="99-108", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_61 [label="Entry lambda expression", span="103-108", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_62 [label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="103-108", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_63 [label="Exit lambda expression", span="103-108", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_68 [label="Entry lambda expression", span="113-114", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_69 [label="GetTimelineStats(connection, ''succeeded'')", span="114-114", cluster="lambda expression", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_70 [label="Exit lambda expression", span="113-114", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_75 [label="Entry lambda expression", span="119-120", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_76 [label="GetTimelineStats(connection, ''failed'')", span="120-120", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_98 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="152-165", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_109 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="170-182", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_120 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="187-196", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_130 [label="var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray()", span="203-207", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_135 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(connection, enqueuedJobIds)\r\n                    })", span="216-222", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_165 [label="var queueApi = GetQueueApi(connection, queue)", span="233-233", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_167 [label="return EnqueuedJobs(connection, enqueuedJobIds);", span="236-236", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_175 [label="var queueApi = GetQueueApi(connection, queue)", span="244-244", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_177 [label="return FetchedJobs(connection, fetchedJobIds);", span="247-247", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_185 [label="GetHourlyTimelineStats(connection, ''succeeded'')", span="254-254", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_192 [label="GetHourlyTimelineStats(connection, ''failed'')", span="260-260", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_205 [label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="291-297", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_226 [label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="305-305", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_232 [label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="311-311", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_251 [label="stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count()", span="348-350", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_112 [label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="175-182", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_337 [label="String.Format(''stats:{0}:{1}'', type, x)", span="410-410", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_77 [label="Exit lambda expression", span="119-120", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_82 [label="Entry lambda expression", span="125-147", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_97 [label="Entry lambda expression", span="152-165", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_99 [label="Exit lambda expression", span="152-165", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_100 [label="Entry lambda expression", span="157-165", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_108 [label="Entry lambda expression", span="170-182", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_110 [label="Exit lambda expression", span="170-182", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_111 [label="Entry lambda expression", span="175-182", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_119 [label="Entry lambda expression", span="187-196", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_121 [label="Exit lambda expression", span="187-196", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_122 [label="Entry lambda expression", span="192-196", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_129 [label="Entry lambda expression", span="201-226", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_131 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="209-209", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_147 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_151 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_155 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_158 [label="Entry lambda expression", span="206-206", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_132 [label=tuples, span="211-211", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_133 [label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="213-213", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_134 [label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="214-214", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_164 [label="Entry lambda expression", span="231-237", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_166 [label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="234-234", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_168 [label="Exit lambda expression", span="231-237", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_174 [label="Entry lambda expression", span="242-248", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_176 [label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="245-245", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_178 [label="Exit lambda expression", span="242-248", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_184 [label="Entry lambda expression", span="253-254", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_186 [label="Exit lambda expression", span="253-254", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_191 [label="Entry lambda expression", span="259-260", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_193 [label="Exit lambda expression", span="259-260", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_197 [label="Entry lambda expression", span="265-299", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_200 [label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="275-275", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_203 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="278-278", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_204 [label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList()", span="279-289", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_206 [label="Exit lambda expression", span="265-299", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_225 [label="Entry lambda expression", span="304-305", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_227 [label="Exit lambda expression", span="304-305", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_231 [label="Entry lambda expression", span="310-311", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_233 [label="Exit lambda expression", span="310-311", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_237 [label="Entry lambda expression", span="316-353", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_239 [label="var stats = new StatisticsDto()", span="328-328", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_250 [label="stats.Recurring = multi.Read<int>().Single()", span="345-345", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_252 [label="return stats;", span="352-352", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_270 [label="Entry lambda expression", span="349-349", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_368 [label="Entry lambda expression", span="480-487", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_199 [label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="273-273", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_113 [label="Exit lambda expression", span="175-182", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_336 [label="Entry lambda expression", span="410-410", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_338 [label="Exit lambda expression", span="410-410", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_340 [label="Entry lambda expression", span="420-420", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_343 [label="Entry lambda expression", span="420-420", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_83 [label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="127-129", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_86 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="135-135", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_219 [label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            }", span="282-288", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_247 [label="stats.Servers = multi.Read<int>().Single()", span="340-340", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_248 [label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="342-342", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_249 [label="stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0", span="343-343", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_89 [label="Exit lambda expression", span="125-147", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_102 [label="Exit lambda expression", span="157-165", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_101 [label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="157-165", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_124 [label="Exit lambda expression", span="192-196", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_123 [label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="192-196", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_137 [label="Exit lambda expression", span="201-226", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_148 [label="x.GetJobQueueMonitoringApi(connection)", span="204-204", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_136 [label="return result;", span="225-225", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_149 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_153 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_152 [label="x.GetQueues()", span="205-205", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_157 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_156 [label="new { Monitoring = monitoring, Queue = queue }", span="205-205", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_160 [label="Exit lambda expression", span="206-206", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_159 [label="x.Queue", span="206-206", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_87 [label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="136-143", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_301 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="368-368", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_198 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="268-271", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_201 [label="job == null", span="276-276", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_212 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_215 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_218 [label="Entry lambda expression", span="282-288", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_202 [label="return null;", span="276-276", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_253 [label="Exit lambda expression", span="316-353", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_238 [label="string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="318-326", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_240 [label="var multi = connection.QueryMultiple(sql)", span="329-329", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_271 [label="x.GetJobQueueMonitoringApi(connection).GetQueues()", span="349-349", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_243 [label="stats.Enqueued = getCountIfExists(EnqueuedState.StateName)", span="335-335", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_244 [label="stats.Failed = getCountIfExists(FailedState.StateName)", span="336-336", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_245 [label="stats.Processing = getCountIfExists(ProcessingState.StateName)", span="337-337", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_246 [label="stats.Scheduled = getCountIfExists(ScheduledState.StateName)", span="338-338", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_272 [label="Exit lambda expression", span="349-349", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_370 [label="Exit lambda expression", span="480-487", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_369 [label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="480-487", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_333 [label="Entry lambda expression", span="409-409", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_241 [label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="331-331", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_342 [label="Exit lambda expression", span="420-420", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_341 [label="(string)x.Key", span="420-420", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_345 [label="Exit lambda expression", span="420-420", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_344 [label="(long)x.Count", span="420-420", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_84 [label="var result = new List<ServerDto>()", span="131-131", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_85 [label=servers, span="133-133", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_220 [label="Exit lambda expression", span="282-288", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_88 [label="return result;", span="146-146", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_300 [label="Entry lambda expression", span="368-368", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_302 [label="Exit lambda expression", span="368-368", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_305 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_308 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_214 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_213 [label="x.Name", span="278-278", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_217 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_216 [label="x.Value", span="278-278", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_242 [label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="333-333", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_335 [label="Exit lambda expression", span="409-409", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_334 [label="x.ToString(''yyyy-MM-dd'')", span="409-409", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_260 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_263 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_267 [label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="333-333", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_307 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_306 [label="(string)x.Key", span="378-378", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_310 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_309 [label="(long)x.Count", span="378-378", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_262 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_261 [label="x.State", span="331-331", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_265 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_264 [label="x.Count", span="331-331", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_268 [label="Exit lambda expression", span="333-333", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m41_180 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="560-560", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_406 [label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="580-587", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_404 [label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="576-576", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_405 [label=jobs, span="578-578", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_403 [label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="571-574", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_402 [label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", span="564-569", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_407 [label="return new JobList<FetchedJobDto>(result);", span="590-590", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_408 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="560-560", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_145 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SharedWorkerContextFacts.cs"];
m41_93 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SharedWorkerContextFacts.cs"];
m41_90 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SharedWorkerContextFacts.cs"];
m41_54 [label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="56-56", cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="SharedWorkerContextFacts.cs"];
m41_339 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="SharedWorkerContextFacts.cs"];
m41_412 [label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21", cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="SharedWorkerContextFacts.cs"];
m41_303 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="SharedWorkerContextFacts.cs"];
m41_171 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="240-240", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SharedWorkerContextFacts.cs"];
m41_172 [label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage);\r\n\r\n                return FetchedJobs(connection, fetchedJobIds);\r\n            });", span="242-248", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SharedWorkerContextFacts.cs"];
m41_173 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="240-240", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SharedWorkerContextFacts.cs"];
m41_142 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SharedWorkerContextFacts.cs"];
m41_299 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="SharedWorkerContextFacts.cs"];
m41_410 [label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span="", cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="SharedWorkerContextFacts.cs"];
m41_296 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SharedWorkerContextFacts.cs"];
m41_42 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="83-83", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_43 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="85-94", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_44 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="83-83", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_297 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SharedWorkerContextFacts.cs"];
m41_362 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SharedWorkerContextFacts.cs"];
m41_359 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SharedWorkerContextFacts.cs"];
m41_409 [label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="SharedWorkerContextFacts.cs"];
m41_20 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", span="437-437", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_346 [label="var provider = _queueProviders.GetProvider(queueName)", span="441-441", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_347 [label="var monitoringApi = provider.GetJobQueueMonitoringApi(connection)", span="442-442", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_348 [label="return monitoringApi;", span="444-444", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_349 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", span="437-437", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_295 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SharedWorkerContextFacts.cs"];
m41_4 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="43-43", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SharedWorkerContextFacts.cs"];
m41_5 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="45-46", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_6 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="43-43", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SharedWorkerContextFacts.cs"];
m41_207 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="SharedWorkerContextFacts.cs"];
m41_114 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SharedWorkerContextFacts.cs"];
m41_55 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="97-97", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_56 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="99-108", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_57 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="97-97", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_228 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="308-308", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SharedWorkerContextFacts.cs"];
m41_229 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="310-311", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SharedWorkerContextFacts.cs"];
m41_230 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="308-308", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SharedWorkerContextFacts.cs"];
m41_161 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SharedWorkerContextFacts.cs"];
m41_162 [label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage);\r\n\r\n                return EnqueuedJobs(connection, enqueuedJobIds);\r\n            });", span="231-237", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SharedWorkerContextFacts.cs"];
m41_163 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SharedWorkerContextFacts.cs"];
m41_78 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="123-123", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SharedWorkerContextFacts.cs"];
m41_79 [label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="125-147", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SharedWorkerContextFacts.cs"];
m41_80 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="123-123", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SharedWorkerContextFacts.cs"];
m41_304 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SharedWorkerContextFacts.cs"];
m41_139 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="SharedWorkerContextFacts.cs"];
m41_209 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SharedWorkerContextFacts.cs"];
m41_222 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="302-302", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SharedWorkerContextFacts.cs"];
m41_223 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="304-305", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SharedWorkerContextFacts.cs"];
m41_224 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="302-302", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SharedWorkerContextFacts.cs"];
m41_376 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="503-503", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SharedWorkerContextFacts.cs"];
m41_377 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="505-505", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SharedWorkerContextFacts.cs"];
m41_378 [label="data.Arguments = arguments", span="506-506", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SharedWorkerContextFacts.cs"];
m41_379 [label="return data.Deserialize();", span="510-510", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SharedWorkerContextFacts.cs"];
m41_381 [label="return null;", span="514-514", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SharedWorkerContextFacts.cs"];
m41_380 [label=JobLoadException, span="512-512", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SharedWorkerContextFacts.cs"];
m41_382 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="503-503", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SharedWorkerContextFacts.cs"];
m41_371 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SharedWorkerContextFacts.cs"];
m41_103 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SharedWorkerContextFacts.cs"];
m41_21 [label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25", cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="SharedWorkerContextFacts.cs"];
m41_81 [label="Entry Unk.>", span="", cluster="Unk.>", file="SharedWorkerContextFacts.cs"];
m41_143 [label="Entry Unk.GetEnqueuedJobIds", span="", cluster="Unk.GetEnqueuedJobIds", file="SharedWorkerContextFacts.cs"];
m41_140 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="SharedWorkerContextFacts.cs"];
m41_144 [label="Entry Unk.GetEnqueuedAndFetchedCount", span="", cluster="Unk.GetEnqueuedAndFetchedCount", file="SharedWorkerContextFacts.cs"];
m41_11 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="490-490", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_372 [label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="492-493", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_373 [label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName })\r\n                 .Single()", span="495-498", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_374 [label="return count;", span="500-500", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_375 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="490-490", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_154 [label="Entry Unk.GetQueues", span="", cluster="Unk.GetQueues", file="SharedWorkerContextFacts.cs"];
m41_401 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SharedWorkerContextFacts.cs"];
m41_116 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="185-185", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_117 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="187-196", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_118 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="185-185", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SharedWorkerContextFacts.cs"];
m41_12 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="49-49", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SharedWorkerContextFacts.cs"];
m41_13 [label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var counters = queueApi.GetEnqueuedAndFetchedCount(queue);\r\n\r\n                return counters.EnqueuedCount ?? 0;\r\n            });", span="51-57", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m41_14 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="49-49", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SharedWorkerContextFacts.cs"];
m41_188 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="257-257", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SharedWorkerContextFacts.cs"];
m41_189 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="259-260", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SharedWorkerContextFacts.cs"];
m41_190 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="257-257", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SharedWorkerContextFacts.cs"];
m41_170 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="462-462", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_365 [label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="478-487", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_364 [label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="473-476", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_363 [label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", span="466-471", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_366 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="462-462", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SharedWorkerContextFacts.cs"];
m41_169 [label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23", cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="SharedWorkerContextFacts.cs"];
m41_259 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SharedWorkerContextFacts.cs"];
m41_138 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SharedWorkerContextFacts.cs"];
m41_150 [label="Entry Unk.GetJobQueueMonitoringApi", span="", cluster="Unk.GetJobQueueMonitoringApi", file="SharedWorkerContextFacts.cs"];
m41_221 [label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21", cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="SharedWorkerContextFacts.cs"];
m41_397 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="SharedWorkerContextFacts.cs"];
m41_257 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SharedWorkerContextFacts.cs"];
m41_71 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="395-395", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_311 [label="var endDate = DateTime.UtcNow.Date", span="399-399", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_318 [label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="410-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_320 [label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="417-420", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_324 [label="var result = new Dictionary<DateTime, long>()", span="427-427", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_330 [label="return result;", span="434-434", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_312 [label="var startDate = endDate.AddDays(-7)", span="400-400", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_314 [label="startDate <= endDate", span="403-403", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_315 [label="dates.Add(endDate)", span="405-405", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_316 [label="endDate = endDate.AddDays(-1)", span="406-406", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_317 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="409-409", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_319 [label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="412-415", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_321 [label=keys, span="422-422", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_322 [label="!valuesMap.ContainsKey(key)", span="424-424", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_323 [label="valuesMap.Add(key, 0)", span="424-424", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_327 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="430-430", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_325 [label="var i = 0", span="428-428", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_328 [label="result.Add(dates[i], value)", span="431-431", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_326 [label="i < stringDates.Count", span="428-428", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_313 [label="var dates = new List<DateTime>()", span="401-401", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_329 [label="i++", span="428-428", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_331 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="395-395", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_126 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="199-199", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SharedWorkerContextFacts.cs"];
m41_127 [label="return UseConnection<IList<QueueWithTopEnqueuedJobsDto>>(connection =>\r\n            {\r\n                var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray();\r\n\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length);\r\n\r\n                foreach (var tuple in tuples)\r\n                {\r\n                    var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5);\r\n                    var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue);\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(connection, enqueuedJobIds)\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="201-226", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SharedWorkerContextFacts.cs"];
m41_128 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="199-199", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SharedWorkerContextFacts.cs"];
m41_187 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="356-356", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_281 [label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="368-368", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_278 [label="dates.Add(endDate)", span="364-364", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_274 [label="var endDate = DateTime.UtcNow", span="360-360", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_283 [label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="375-378", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_287 [label="var result = new Dictionary<DateTime, long>()", span="385-385", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_282 [label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="370-373", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_275 [label="var dates = new List<DateTime>()", span="361-361", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_277 [label="i < 24", span="362-362", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_284 [label=keys, span="380-380", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_279 [label="endDate = endDate.AddHours(-1)", span="365-365", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_293 [label="return result;", span="392-392", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_285 [label="!valuesMap.ContainsKey(key)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_286 [label="valuesMap.Add(key, 0)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_290 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="388-388", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_288 [label="var i = 0", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_291 [label="result.Add(dates[i], value)", span="389-389", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_276 [label="var i = 0", span="362-362", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_289 [label="i < dates.Count", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_280 [label="i++", span="362-362", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_292 [label="i++", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_294 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="356-356", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SharedWorkerContextFacts.cs"];
m41_208 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SharedWorkerContextFacts.cs"];
m41_211 [label="Entry Unk.DeserializeJob", span="", cluster="Unk.DeserializeJob", file="SharedWorkerContextFacts.cs"];
m41_413 [label="HangFire.SqlServer.SqlServerMonitoringApi", span="", file="SharedWorkerContextFacts.cs"];
m41_414 [label=string, span="", file="SharedWorkerContextFacts.cs"];
m41_415 [label=string, span="", file="SharedWorkerContextFacts.cs"];
m41_416 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_417 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_418 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_419 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_420 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_421 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_422 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_423 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_424 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_425 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_427 [label=string, span="", file="SharedWorkerContextFacts.cs"];
m41_430 [label=string, span="", file="SharedWorkerContextFacts.cs"];
m41_437 [label=string, span="", file="SharedWorkerContextFacts.cs"];
m41_428 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_429 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_431 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_432 [label=int, span="", file="SharedWorkerContextFacts.cs"];
m41_433 [label=string, span="", file="SharedWorkerContextFacts.cs"];
m41_426 [label=SqlConnection, span="", file="SharedWorkerContextFacts.cs"];
m41_436 [label=string, span="", file="SharedWorkerContextFacts.cs"];
m41_435 [label=SqlConnection, span="", file="SharedWorkerContextFacts.cs"];
m41_434 [label=countByStates, span="", file="SharedWorkerContextFacts.cs"];
m42_12 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="SharedWorkerContextMock.cs"];
m42_0 [label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="SharedWorkerContextMock.cs"];
m42_1 [label="ServerId = ''server''", span="13-13", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m42_2 [label="Queues = new[] { ''default'' }", span="14-14", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m42_3 [label="Storage = new Mock<JobStorage>()", span="15-15", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m42_4 [label="PerformanceProcess = new Mock<IJobPerformanceProcess>()", span="16-16", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m42_5 [label="Activator = new Mock<JobActivator>()", span="17-17", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m42_6 [label="StateMachineFactory = new Mock<IStateMachineFactory>()", span="18-18", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m42_7 [label="_context = new Lazy<SharedWorkerContext>(\r\n                () => new SharedWorkerContext(\r\n                    ServerId,\r\n                    Queues,\r\n                    Storage.Object,\r\n                    PerformanceProcess.Object,\r\n                    Activator.Object,\r\n                    StateMachineFactory.Object))", span="20-27", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=1, file="SharedWorkerContextMock.cs"];
m42_8 [label="Exit HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="SharedWorkerContextMock.cs"];
m42_13 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="SharedWorkerContextMock.cs"];
m42_17 [label="Entry SharedWorkerContext.cstr", span="", cluster="SharedWorkerContext.cstr", file="SharedWorkerContextMock.cs"];
m42_9 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="SharedWorkerContextMock.cs"];
m42_14 [label="Entry lambda expression", span="21-27", cluster="lambda expression", file="SharedWorkerContextMock.cs"];
m42_15 [label="new SharedWorkerContext(\r\n                    ServerId,\r\n                    Queues,\r\n                    Storage.Object,\r\n                    PerformanceProcess.Object,\r\n                    Activator.Object,\r\n                    StateMachineFactory.Object)", span="21-27", cluster="lambda expression", color=green, community=1, file="SharedWorkerContextMock.cs"];
m42_16 [label="Exit lambda expression", span="21-27", cluster="lambda expression", file="SharedWorkerContextMock.cs"];
m42_10 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", file="SharedWorkerContextMock.cs"];
m42_11 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="SharedWorkerContextMock.cs"];
m42_18 [label="HangFire.Core.Tests.SharedWorkerContextMock", span="", file="SharedWorkerContextMock.cs"];
m43_82 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_83 [label="AddToSet(key, value, 0.0)", span="155-155", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_84 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_98 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_99 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="181-183", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_100 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_85 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m43_86 [label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m43_87 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="167-169", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m43_88 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m43_64 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_65 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_66 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_44 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="96-96", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m43_45 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="98-100", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m43_46 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="102-111", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m43_47 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="96-96", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m43_119 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs"];
m43_35 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="76-76", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m43_36 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="78-81", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m43_37 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="83-93", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m43_38 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="76-76", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m43_110 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m43_111 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num, [Key] from HangFire.List)\r\ndelete from cte where row_num not between @start and @end and [Key] = @key''", span="195-198", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m43_112 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="200-202", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m43_113 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m43_23 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="205-205", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m43_117 [label="_commandQueue.Enqueue(action)", span="207-207", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m43_118 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="205-205", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m43_17 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs"];
m43_18 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs"];
m43_15 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m43_76 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_77 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_78 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_70 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_71 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_72 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_19 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerWriteOnlyTransaction.cs"];
m43_27 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_92 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_93 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="174-176", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_94 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_20 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_21 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="64-66", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_22 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m43_104 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_105 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="188-190", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_106 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_8 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m43_9 [label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="47-49", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m43_10 [label="_connection.EnlistTransaction(Transaction.Current)", span="51-51", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m43_13 [label="transaction.Complete()", span="58-58", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m43_11 [label=_commandQueue, span="53-53", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m43_12 [label="command(_connection)", span="55-55", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m43_14 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m43_16 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m43_42 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="SqlServerWriteOnlyTransaction.cs"];
m43_114 [label="Entry lambda expression", span="200-202", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_25 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="64-66", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_24 [label="Entry lambda expression", span="64-66", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_26 [label="Exit lambda expression", span="64-66", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_33 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="71-73", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_32 [label="Entry lambda expression", span="71-73", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_34 [label="Exit lambda expression", span="71-73", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_40 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="83-93", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_39 [label="Entry lambda expression", span="83-93", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_41 [label="Exit lambda expression", span="83-93", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_49 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="102-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_48 [label="Entry lambda expression", span="102-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_50 [label="Exit lambda expression", span="102-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_56 [label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="120-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_55 [label="Entry lambda expression", span="120-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_57 [label="Exit lambda expression", span="120-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_62 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_61 [label="Entry lambda expression", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_63 [label="Exit lambda expression", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_68 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_67 [label="Entry lambda expression", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_69 [label="Exit lambda expression", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_74 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_73 [label="Entry lambda expression", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_75 [label="Exit lambda expression", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_80 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_79 [label="Entry lambda expression", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_81 [label="Exit lambda expression", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_90 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_89 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_91 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_96 [label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="174-176", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_95 [label="Entry lambda expression", span="174-176", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_97 [label="Exit lambda expression", span="174-176", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_102 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_101 [label="Entry lambda expression", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_103 [label="Exit lambda expression", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_108 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="188-190", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_107 [label="Entry lambda expression", span="188-190", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_109 [label="Exit lambda expression", span="188-190", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_115 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="200-202", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_116 [label="Exit lambda expression", span="200-202", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m43_0 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m43_1 [label="connection == null", span="36-36", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m43_3 [label="_connection = connection", span="38-38", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m43_2 [label="throw new ArgumentNullException(''connection'');", span="36-36", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m43_4 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m43_43 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs"];
m43_28 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs"];
m43_51 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_52 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="116-118", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_53 [label="QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="120-122", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_54 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_58 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_59 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_60 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_29 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_30 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="71-73", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_31 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m43_6 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m43_7 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m43_120 [label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_121 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_122 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_123 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_124 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_125 [label="HangFire.States.State", span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_126 [label=addAndSetStateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_127 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_128 [label="HangFire.States.State", span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_129 [label=addStateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_130 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_131 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_132 [label=enqueueJobSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_133 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_134 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_135 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_136 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_137 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_138 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_139 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_140 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_141 [label=double, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_142 [label=addSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_143 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_144 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_145 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_146 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_147 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_148 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_149 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_150 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_151 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m43_152 [label=trimSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m44_0 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="State.cs"];
m44_1 [label="return new Dictionary<string, string>();", span="29-29", cluster="HangFire.States.State.SerializeData()", color=red, community=0, file="State.cs"];
m44_2 [label="Exit HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="State.cs"];
m45_1 [label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="8-8", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="StateFacts.cs"];
m45_22 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="StateFacts.cs"];
m45_23 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="StateFacts.cs"];
m45_26 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="29-29", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="StateFacts.cs"];
m45_27 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="29-29", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="StateFacts.cs"];
m45_2 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="9-9", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="StateFacts.cs"];
m45_3 [label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="9-9", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="StateFacts.cs"];
m45_20 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="StateFacts.cs"];
m45_21 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="StateFacts.cs"];
m45_18 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="23-23", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="StateFacts.cs"];
m45_19 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="23-23", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="StateFacts.cs"];
m45_28 [label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="StateFacts.cs"];
m45_29 [label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="StateFacts.cs"];
m45_32 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", file="StateFacts.cs"];
m45_33 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", file="StateFacts.cs"];
m45_34 [label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="StateFacts.cs"];
m45_35 [label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="StateFacts.cs"];
m45_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="14-14", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="StateFacts.cs"];
m45_9 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="14-14", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="StateFacts.cs"];
m45_12 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="18-18", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="StateFacts.cs"];
m45_13 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="18-18", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="StateFacts.cs"];
m45_36 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="37-37", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StateFacts.cs"];
m45_37 [label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="37-37", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StateFacts.cs"];
m45_10 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="17-17", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="StateFacts.cs"];
m45_11 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="17-17", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="StateFacts.cs"];
m45_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="StateFacts.cs"];
m45_5 [label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="StateFacts.cs"];
m45_14 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="19-19", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="StateFacts.cs"];
m45_15 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="19-19", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="StateFacts.cs"];
m45_30 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", file="StateFacts.cs"];
m45_31 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", file="StateFacts.cs"];
m45_6 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="11-11", cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="StateFacts.cs"];
m45_7 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="11-11", cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="StateFacts.cs"];
m45_16 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="20-20", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="StateFacts.cs"];
m45_17 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="20-20", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="StateFacts.cs"];
m45_24 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="StateFacts.cs"];
m45_25 [label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="StateFacts.cs"];
m46_28 [label="Entry System.Runtime.InteropServices.Marshal.StringToBSTR(string)", span="0-0", cluster="System.Runtime.InteropServices.Marshal.StringToBSTR(string)", file="StateMachine.cs"];
m46_25 [label="Entry Unk.Exists", span="", cluster="Unk.Exists", file="StateMachine.cs"];
m46_3 [label="Entry Unk.GetCount", span="", cluster="Unk.GetCount", file="StateMachine.cs"];
m46_4 [label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", span="92-92", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_5 [label="!MessageQueue.Exists(path)", span="94-94", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_16 [label="var objectName = Marshal.StringToBSTR(''queue=Direct=OS:'' + path)", span="112-112", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_6 [label="return 0;", span="96-96", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_7 [label="var props = new MQMGMTPROPS()", span="99-99", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_8 [label="props.cProp = 1", span="100-100", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_9 [label="var aPropId = PROPID_MGMT_QUEUE_MESSAGE_COUNT", span="102-102", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_10 [label="props.aPropID = &aPropId", span="103-103", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_11 [label="var aPropVar = new MQPROPVariant()", span="105-105", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_12 [label="aPropVar.vt = VT_NULL", span="106-106", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_13 [label="props.aPropVar = &aPropVar", span="107-107", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_14 [label="var status = 0", span="109-109", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_15 [label="props.status = &status", span="110-110", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_19 [label="var result = MQMgmtGetInfo(null, (char*) objectName, &props)", span="119-119", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_17 [label="uint rtn", span="115-115", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_18 [label=LockObject, span="117-117", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_20 [label="result != 0 || *props.status != 0 || props.aPropVar->vt != VT_UI4", span="120-120", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_22 [label="rtn = props.aPropVar->ulVal", span="126-126", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_21 [label="rtn = 0", span="122-122", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_23 [label="return rtn;", span="130-130", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_24 [label="Exit Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", span="92-92", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="StateMachine.cs"];
m46_27 [label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQPROPVariant.MQPROPVariant()", span="189-189", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQPROPVariant.MQPROPVariant()", file="StateMachine.cs"];
m46_26 [label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS.MQMGMTPROPS()", span="162-162", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS.MQMGMTPROPS()", file="StateMachine.cs"];
m46_29 [label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", span="154-154", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", file="StateMachine.cs"];
m46_30 [label="Exit Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", span="154-154", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", file="StateMachine.cs"];
m46_0 [label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", span="74-74", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", file="StateMachine.cs"];
m46_1 [label="return GetCount(queue.Path);", span="76-76", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", file="StateMachine.cs"];
m46_2 [label="Exit Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", span="74-74", cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", file="StateMachine.cs"];
m47_0 [label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="StateMachineFacts.cs"];
m47_1 [label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="StateMachineFacts.cs"];
m47_2 [label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="StateMachineFacts.cs"];
m47_3 [label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="StateMachineFacts.cs"];
m48_9 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="29-29", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededState.cs"];
m48_5 [label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="SucceededState.cs"];
m48_6 [label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs"];
m48_7 [label="context.Transaction.RemoveFromList(''succeeded'', context.JobId)", span="16-16", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs"];
m48_8 [label="Exit HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs"];
m48_0 [label="Entry HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m48_1 [label="context.Transaction.InsertToList(''succeeded'', context.JobId)", span="10-10", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m48_2 [label="context.Transaction.TrimList(''succeeded'', 0, 99)", span="11-11", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m48_3 [label="Exit HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m48_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SucceededState.cs"];
m49_6 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="17-17", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m49_7 [label="var state = new SucceededState()", span="19-19", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m49_8 [label="var data = state.SerializeData()", span="21-21", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m49_9 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.SucceededAt), data[''SucceededAt''])", span="23-23", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m49_10 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="17-17", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m49_17 [label="Entry Unk.True", span="", cluster="Unk.True", file="SucceededStateFacts.cs"];
m49_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SucceededStateFacts.cs"];
m49_0 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="10-10", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m49_1 [label="var state = new SucceededState()", span="12-12", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m49_2 [label="Assert.Equal(SucceededState.StateName, state.Name)", span="13-13", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m49_3 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="10-10", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m49_11 [label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededStateFacts.cs"];
m49_13 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="27-27", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m49_14 [label="var state = new SucceededState()", span="29-29", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m49_15 [label="Assert.True(state.ExpireJobOnApply)", span="30-30", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", color=red, community=0, file="SucceededStateFacts.cs"];
m49_16 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="27-27", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m49_4 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededStateFacts.cs"];
m51_5 [label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="WorkerContext.cs"];
m51_6 [label="context.Transaction.Sets.Remove(''failed'', context.JobId)", span="20-20", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="WorkerContext.cs"];
m51_7 [label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="WorkerContext.cs"];
m51_0 [label="Entry HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="WorkerContext.cs"];
m51_1 [label="context.Transaction.AddToSet(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="12-15", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="WorkerContext.cs"];
m51_2 [label="Exit HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="WorkerContext.cs"];
m51_8 [label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="WorkerContext.cs"];
m51_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="WorkerContext.cs"];
m51_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="WorkerContext.cs"];
m52_4 [label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", span="17-17", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", file="WorkerContextFacts.cs"];
m52_9 [label="new WorkerContext(null, WorkerNumber)", span="20-20", cluster="lambda expression", file="WorkerContextFacts.cs", color=green, community=0];
m52_3 [label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="13-13", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="WorkerContextFacts.cs"];
m52_11 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerContext(Server, null, WorkerNumber))", span="24-25", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArgumentIsNull()", file="WorkerContextFacts.cs", color=red, community=1];
m52_0 [label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", file="WorkerContextFacts.cs"];
m52_1 [label="_sharedContext = new SharedWorkerContextMock()", span="13-13", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", color=green, community=0, file="WorkerContextFacts.cs"];
m52_2 [label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", color=red, community=0, file="WorkerContextFacts.cs"];
m52_24 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="WorkerContextFacts.cs"];
m52_31 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="22-22", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContextFacts.cs"];
m52_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", color=green, community=1, file="WorkerContextFacts.cs"];
m52_6 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="WorkerContextFacts.cs"];
m52_10 [label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArgumentIsNull()", span="22-22", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArgumentIsNull()", file="WorkerContextFacts.cs"];
m52_12 [label="Assert.Equal(''queueNames'', exception.ParamName)", span="27-27", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArgumentIsNull()", color=red, community=0, file="WorkerContextFacts.cs"];
m52_13 [label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArgumentIsNull()", span="22-22", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArgumentIsNull()", file="WorkerContextFacts.cs"];
m52_23 [label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="58-58", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="WorkerContextFacts.cs"];
m52_39 [label="return new WorkerContext(Server, Queues, WorkerNumber);", span="60-60", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", color=red, community=0, file="WorkerContextFacts.cs"];
m52_30 [label="Exit lambda expression", span="44-44", cluster="lambda expression", color=green, community=0, file="WorkerContextFacts.cs"];
m52_40 [label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="58-58", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="WorkerContextFacts.cs"];
m52_17 [label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="31-31", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs"];
m52_18 [label="var context = CreateContext()", span="33-33", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs"];
m52_19 [label="Assert.Same(Server, context.ServerName)", span="35-35", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", color=red, community=0, file="WorkerContextFacts.cs"];
m52_20 [label="Assert.Same(Queues, context.QueueNames)", span="36-36", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", color=red, community=0, file="WorkerContextFacts.cs"];
m52_21 [label="Assert.Equal(WorkerNumber, context.WorkerNumber)", span="37-37", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs"];
m52_22 [label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="31-31", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs"];
m52_25 [label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="41-41", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="WorkerContextFacts.cs"];
m52_26 [label="Assert.Throws<NullReferenceException>(\r\n                () => new WorkerContext(null))", span="43-44", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="WorkerContextFacts.cs"];
m52_27 [label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="41-41", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="WorkerContextFacts.cs"];
m52_32 [label="HangFire.Core.Tests.Server.WorkerContextFacts", span="", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m52_33 [label="var context = CreateContext()", span="50-50", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m52_34 [label="var contextCopy = new WorkerContext(context)", span="51-51", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m52_35 [label="Assert.Same(context.ServerName, contextCopy.ServerName)", span="53-53", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", color=red, community=0, file="WorkerContextFacts.cs"];
m52_36 [label="Assert.Same(context.QueueNames, contextCopy.QueueNames)", span="54-54", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", color=red, community=0, file="WorkerContextFacts.cs"];
m52_37 [label="Assert.Equal(context.WorkerNumber, contextCopy.WorkerNumber)", span="55-55", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m52_38 [label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="48-48", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m52_28 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="WorkerContextFacts.cs"];
m52_7 [label="new WorkerContext(null, Queues, WorkerNumber)", span="16-16", cluster="lambda expression", color=red, community=0, file="WorkerContextFacts.cs"];
m52_8 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="WorkerContextFacts.cs"];
m52_14 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="WorkerContextFacts.cs"];
m52_15 [label="new WorkerContext(Server, null, WorkerNumber)", span="25-25", cluster="lambda expression", color=red, community=0, file="WorkerContextFacts.cs"];
m52_16 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="WorkerContextFacts.cs"];
m52_29 [label="new WorkerContext(null)", span="44-44", cluster="lambda expression", file="WorkerContextFacts.cs"];
m53_5 [label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="WorkerContextMock.cs"];
m53_10 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerContextMock.cs"];
m53_6 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="WorkerContextMock.cs"];
m53_0 [label="Entry HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9", cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs"];
m53_1 [label="SharedContext = new SharedWorkerContextMock()", span="11-11", cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", color=green, community=0, file="WorkerContextMock.cs"];
m53_2 [label="WorkerNumber = 1", span="12-12", cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", color=green, community=0, file="WorkerContextMock.cs"];
m53_3 [label="_context = new Lazy<WorkerContext>(\r\n                () => new WorkerContext(SharedContext.Object, WorkerNumber))", span="14-15", cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", color=green, community=1, file="WorkerContextMock.cs"];
m53_4 [label="Exit HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9", cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs"];
m53_7 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="WorkerContextMock.cs"];
m53_8 [label="new WorkerContext(SharedContext.Object, WorkerNumber)", span="15-15", cluster="lambda expression", color=green, community=0, file="WorkerContextMock.cs"];
m53_9 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="WorkerContextMock.cs"];
m53_11 [label="HangFire.Core.Tests.WorkerContextMock", span="", file="WorkerContextMock.cs"];
m54_21 [label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40", cluster="HangFire.Web.RazorPage.Write(object)", file="WorkerFacts.cs"];
m54_22 [label="value == null", span="42-42", cluster="HangFire.Web.RazorPage.Write(object)", file="WorkerFacts.cs"];
m54_24 [label="var html = value as IHtmlString", span="44-44", cluster="HangFire.Web.RazorPage.Write(object)", file="WorkerFacts.cs"];
m54_25 [label="WriteLiteral(html != null ? html.ToHtmlString() : Encode(value.ToString()))", span="45-45", cluster="HangFire.Web.RazorPage.Write(object)", file="WorkerFacts.cs"];
m54_23 [label="return;", span="43-43", cluster="HangFire.Web.RazorPage.Write(object)", color=red, community=0, file="WorkerFacts.cs"];
m54_26 [label="Exit HangFire.Web.RazorPage.Write(object)", span="40-40", cluster="HangFire.Web.RazorPage.Write(object)", file="WorkerFacts.cs"];
m54_20 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="WorkerFacts.cs"];
m54_41 [label="Entry Unk.HtmlEncode", span="", cluster="Unk.HtmlEncode", file="WorkerFacts.cs"];
m54_11 [label="return _content.ToString();", span="30-30", cluster="HangFire.Web.RazorPage.TransformText(string)", file="WorkerFacts.cs", color=red, community=0];
m54_10 [label="return Layout.TransformText(_content.ToString());", span="27-27", cluster="HangFire.Web.RazorPage.TransformText(string)", file="WorkerFacts.cs", color=red, community=0];
m54_29 [label="Entry HangFire.Web.RazorPage.Encode(string)", span="59-59", cluster="HangFire.Web.RazorPage.Encode(string)", file="WorkerFacts.cs"];
m54_39 [label="return string.IsNullOrEmpty(text)\r\n                       ? string.Empty\r\n                       : Server.HtmlEncode(text);", span="61-63", cluster="HangFire.Web.RazorPage.Encode(string)", file="WorkerFacts.cs"];
m54_40 [label="Exit HangFire.Web.RazorPage.Encode(string)", span="59-59", cluster="HangFire.Web.RazorPage.Encode(string)", file="WorkerFacts.cs"];
m54_14 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="WorkerFacts.cs"];
m54_15 [label="string.IsNullOrEmpty(textToAppend)", span="35-35", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="WorkerFacts.cs"];
m54_17 [label="_content.Append(textToAppend)", span="37-37", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", color=red, community=0, file="WorkerFacts.cs"];
m54_16 [label="return;", span="36-36", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="WorkerFacts.cs"];
m54_18 [label="Exit HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="WorkerFacts.cs"];
m54_5 [label="queues = new[] { EnqueuedState.DefaultQueue }", span="41-41", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", file="WorkerFacts.cs", color=green, community=0];
m54_7 [label="configuration.Entry.QueueProviders.Add(provider, queues)", span="45-45", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", file="WorkerFacts.cs"];
m54_8 [label="return configuration;", span="47-47", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", file="WorkerFacts.cs", color=green, community=0];
m54_9 [label="Exit Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", span="33-33", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", file="WorkerFacts.cs"];
m54_12 [label="Exit HangFire.Web.RazorPage.TransformText(string)", span="19-19", cluster="HangFire.Web.RazorPage.TransformText(string)", file="WorkerFacts.cs"];
m54_13 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="WorkerFacts.cs"];
m54_34 [label="Entry HtmlString.cstr", span="", cluster="HtmlString.cstr", file="WorkerFacts.cs"];
m54_30 [label="Entry Unk.WriteLiteral", span="", cluster="Unk.WriteLiteral", file="WorkerFacts.cs"];
m54_31 [label="Entry HangFire.Web.RazorPage.RenderBody()", span="48-48", cluster="HangFire.Web.RazorPage.RenderBody()", file="WorkerFacts.cs"];
m54_32 [label="return new HtmlString(_innerContent);", span="50-50", cluster="HangFire.Web.RazorPage.RenderBody()", file="WorkerFacts.cs"];
m54_33 [label="Exit HangFire.Web.RazorPage.RenderBody()", span="48-48", cluster="HangFire.Web.RazorPage.RenderBody()", file="WorkerFacts.cs"];
m54_35 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="53-53", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="WorkerFacts.cs"];
m54_36 [label="page.Execute()", span="55-55", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", color=red, community=0, file="WorkerFacts.cs"];
m54_37 [label="return new HtmlString(page._content.ToString());", span="56-56", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", color=red, community=0, file="WorkerFacts.cs"];
m54_38 [label="Exit HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="53-53", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="WorkerFacts.cs"];
m54_27 [label="Entry Unk.ToHtmlString", span="", cluster="Unk.ToHtmlString", file="WorkerFacts.cs"];
m54_2 [label="Exit Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", span="25-25", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", file="WorkerFacts.cs"];
m54_3 [label="Entry Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", span="33-33", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", color=red, community=0, file="WorkerFacts.cs"];
m54_4 [label="queues.Length == 0", span="39-39", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", file="WorkerFacts.cs", color=green, community=0];
m54_19 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="WorkerFacts.cs"];
m54_0 [label="Entry Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", span="25-25", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", file="WorkerFacts.cs"];
m54_1 [label="return UseMsmqQueues(configuration, MsmqTransactionType.Internal, pathPattern, queues);", span="30-30", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", file="WorkerFacts.cs"];
m54_6 [label="var provider = new MsmqJobQueueProvider(pathPattern, queues, transactionType)", span="44-44", cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", file="WorkerFacts.cs"];
m54_28 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="WorkerFacts.cs"];
m54_42 [label="HangFire.Web.RazorPage", span="", file="WorkerFacts.cs"];
m55_26 [label="Entry HangFire.Server.WorkerManager.Dispose()", span="61-61", cluster="HangFire.Server.WorkerManager.Dispose()", file="WorkerManager.cs"];
m55_27 [label="_workerRunners.Dispose()", span="63-63", cluster="HangFire.Server.WorkerManager.Dispose()", file="WorkerManager.cs"];
m55_28 [label="Exit HangFire.Server.WorkerManager.Dispose()", span="61-61", cluster="HangFire.Server.WorkerManager.Dispose()", file="WorkerManager.cs"];
m55_6 [label="var i = 1", span="36-36", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs"];
m55_10 [label="i++", span="36-36", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", color=red, community=0, file="WorkerManager.cs"];
m55_13 [label="var queue = JobHelper.GetQueue(type)", span="88-88", cluster="HangFire.Perform.Async(System.Type, object)", file="WorkerManager.cs"];
m55_15 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="WorkerManager.cs"];
m55_11 [label="_workerRunners = new ServerComponentRunnerCollection(workerRunners)", span="44-44", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs"];
m55_12 [label="Exit HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="29-29", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs"];
m55_14 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="WorkerManager.cs"];
m55_16 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs"];
m55_0 [label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="29-29", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs"];
m55_1 [label="sharedContext == null", span="31-31", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", color=green, community=0, file="WorkerManager.cs"];
m55_2 [label="throw new ArgumentNullException(''sharedContext'');", span="31-31", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", color=green, community=0];
m55_37 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="WorkerManager.cs"];
m55_30 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="142-142", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="WorkerManager.cs"];
m55_31 [label="return In(delay, type, null);", span="144-144", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", color=green, community=0, file="WorkerManager.cs"];
m55_32 [label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="142-142", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="WorkerManager.cs"];
m55_3 [label="workerCount <= 0", span="33-33", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", color=green, community=0];
m55_4 [label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="33-33", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", color=green, community=0, file="WorkerManager.cs"];
m55_5 [label="var workerRunners = new List<IServerComponentRunner>(workerCount)", span="35-35", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs"];
m55_19 [label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="WorkerManager.cs"];
m55_21 [label="_workerRunners.Start()", span="51-51", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", color=green, community=0];
m55_39 [label="return Guid.NewGuid().ToString();", span="175-175", cluster="HangFire.Perform.GenerateId()", file="WorkerManager.cs"];
m55_40 [label="Exit HangFire.Perform.GenerateId()", span="173-173", cluster="HangFire.Perform.GenerateId()", file="WorkerManager.cs"];
m55_29 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="WorkerManager.cs"];
m55_33 [label="return new ServerComponentRunner(\r\n                new Worker(context),\r\n                new ServerComponentRunnerOptions { LowerLogVerbosity = true });", span="73-75", cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManager.cs", color=green, community=0];
m55_34 [label="Exit HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="71-71", cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManager.cs"];
m55_35 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="WorkerManager.cs"];
m55_36 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="WorkerManager.cs"];
m55_18 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerManager.cs"];
m55_20 [label="Entry HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="47-47", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs"];
m55_42 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="WorkerManager.cs"];
m55_23 [label="Exit HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="47-47", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs"];
m55_24 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="WorkerManager.cs"];
m55_25 [label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0", cluster="System.Threading.WaitHandle.WaitOne()", file="WorkerManager.cs"];
m55_38 [label="HangFire.Server.WorkerManager", span="", cluster="System.DateTime.Add(System.TimeSpan)", file="WorkerManager.cs"];
m55_17 [label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="71-71", cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManager.cs"];
m55_7 [label="i <= workerCount", span="36-36", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs"];
m55_8 [label="var workerContext = new WorkerContext(sharedContext, i)", span="38-38", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", color=green, community=0, file="WorkerManager.cs"];
m55_9 [label="workerRunners.Add(CreateWorkerRunner(workerContext))", span="41-41", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs"];
m55_41 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="WorkerManager.cs"];
m55_22 [label="cancellationToken.WaitHandle.WaitOne()", span="53-53", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", color=green, community=0];
m56_145 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", span="215-215", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", file="WorkerManagerFacts.cs"];
m56_146 [label="Assert.Equal(NotNullNullableValue, value)", span="215-215", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", file="WorkerManagerFacts.cs"];
m56_147 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", span="215-215", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", file="WorkerManagerFacts.cs"];
m56_199 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="WorkerManagerFacts.cs"];
m56_136 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", span="200-200", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_137 [label="CreateAndPerform(GuidValue)", span="202-202", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_138 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", span="200-200", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_47 [label="CreateAndPerform(DecimalValue)", span="67-67", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs", color=red, community=0];
m56_48 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", span="65-65", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", color=green, community=0, file="WorkerManagerFacts.cs"];
m56_49 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", span="71-71", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", file="WorkerManagerFacts.cs"];
m56_50 [label="Assert.Equal(DoubleValue, value)", span="71-71", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", file="WorkerManagerFacts.cs", color=red, community=0];
m56_51 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", span="71-71", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", file="WorkerManagerFacts.cs"];
m56_70 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UInt32Values_AreBeingCorrectlyDeserialized()", span="101-101", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt32Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_97 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", span="143-143", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", file="WorkerManagerFacts.cs"];
m56_98 [label="Assert.Equal(StringValue, value)", span="143-143", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", file="WorkerManagerFacts.cs"];
m56_99 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", span="143-143", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", file="WorkerManagerFacts.cs"];
m56_203 [label="Entry Tuple<string, Func<string>>.cstr", span="", cluster="Tuple<string, Func<string>>.cstr", file="WorkerManagerFacts.cs"];
m56_204 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="68-68", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="WorkerManagerFacts.cs"];
m56_154 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", span="227-227", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_155 [label="CreateAndPerform(NullNullableValue)", span="229-229", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_156 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", span="227-227", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_0 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", span="16-16", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", file="WorkerManagerFacts.cs"];
m56_1 [label="_activator = new Mock<JobActivator>()", span="18-18", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", color=red, community=0, file="WorkerManagerFacts.cs"];
m56_2 [label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>()))\r\n				      .Returns(() => new JobArgumentFacts())", span="19-20", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", file="WorkerManagerFacts.cs"];
m56_3 [label="_token = new Mock<IJobCancellationToken>()", span="22-22", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", color=red, community=0, file="WorkerManagerFacts.cs"];
m56_4 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", span="16-16", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", file="WorkerManagerFacts.cs"];
m56_5 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="WorkerManagerFacts.cs"];
m56_23 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", span="29-29", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_24 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", span="292-292", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", color=green, community=1, file="WorkerManagerFacts.cs"];
m56_25 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", span="35-35", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", file="WorkerManagerFacts.cs"];
m56_106 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", span="155-155", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_107 [label="CreateAndPerform(TimeSpanValue)", span="157-157", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_108 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", span="155-155", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_214 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="WorkerManagerFacts.cs"];
m56_118 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", span="173-173", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", file="WorkerManagerFacts.cs"];
m56_119 [label="CreateAndPerform(DateTimeOffsetValue)", span="175-175", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", file="WorkerManagerFacts.cs"];
m56_120 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", span="173-173", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", file="WorkerManagerFacts.cs"];
m56_30 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", span="38-38", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_31 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", span="44-44", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", color=green, community=0, file="WorkerManagerFacts.cs"];
m56_32 [label="Assert.Equal(SByteValue, value)", span="44-44", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", file="WorkerManagerFacts.cs", color=red, community=0];
m56_33 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", span="44-44", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", file="WorkerManagerFacts.cs"];
m56_17 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_18 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerManagerFacts.cs"];
m56_19 [label="Entry Unk.CreateWorkerSupervisor", span="", cluster="Unk.CreateWorkerSupervisor", file="WorkerManagerFacts.cs"];
m56_73 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_74 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", span="88-88", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m56_75 [label="_manager.Object.Execute(new CancellationToken(true))", span="90-90", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m56_166 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", span="245-245", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_167 [label="CreateAndPerform(ListValue, true)", span="247-247", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_168 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", span="245-245", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_127 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", span="188-188", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", file="WorkerManagerFacts.cs"];
m56_128 [label="Assert.Equal(EnumValue, value)", span="188-188", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", file="WorkerManagerFacts.cs"];
m56_129 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", span="188-188", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", file="WorkerManagerFacts.cs"];
m56_112 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", span="164-164", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", file="WorkerManagerFacts.cs"];
m56_113 [label="CreateAndPerform(ObjectValue)", span="166-166", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", file="WorkerManagerFacts.cs"];
m56_114 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", span="164-164", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", file="WorkerManagerFacts.cs"];
m56_37 [label="Exit lambda expression", span="52-53", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_38 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", span="59-59", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="WorkerManagerFacts.cs"];
m56_39 [label="var manager = new WorkerManager(_sharedContext, WorkerCount)", span="61-61", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="WorkerManagerFacts.cs", color=green, community=0];
m56_53 [label="CreateAndPerform(DoubleValue)", span="76-76", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs", color=red, community=0];
m56_88 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", span="128-128", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_89 [label="CreateAndPerform(Int16Value)", span="130-130", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_90 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", span="128-128", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_58 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="WorkerManagerFacts.cs"];
m56_59 [label="Entry lambda expression", span="75-75", cluster="lambda expression", color=red, community=0, file="WorkerManagerFacts.cs"];
m56_60 [label="x.Start()", span="75-75", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_7 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="WorkerManagerFacts.cs"];
m56_76 [label="_workerSupervisors[0].Verify(x => x.Dispose())", span="92-92", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m56_77 [label="_workerSupervisors[1].Verify(x => x.Dispose())", span="93-93", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", color=red, community=0, file="WorkerManagerFacts.cs"];
m56_78 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", span="88-88", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m56_43 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", span="59-59", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="WorkerManagerFacts.cs"];
m56_44 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", color=red, community=0, file="WorkerManagerFacts.cs"];
m56_45 [label="Entry HangFire.Server.WorkerManager.CreateWorkerSupervisor(HangFire.Server.WorkerContext)", span="62-62", cluster="HangFire.Server.WorkerManager.CreateWorkerSupervisor(HangFire.Server.WorkerContext)", file="WorkerManagerFacts.cs"];
m56_85 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_86 [label="HangFire.Core.Tests.Server.WorkerManagerFacts", span="", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(short)", file="WorkerManagerFacts.cs"];
m56_87 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(short)", span="125-125", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(short)", file="WorkerManagerFacts.cs"];
m56_139 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", span="206-206", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", file="WorkerManagerFacts.cs"];
m56_140 [label="Assert.Equal(UriValue, value)", span="206-206", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", file="WorkerManagerFacts.cs"];
m56_141 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", span="206-206", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", file="WorkerManagerFacts.cs"];
m56_184 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", span="287-287", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_185 [label="CreateAndPerform(CustomClassValue, true)", span="289-289", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_186 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", span="287-287", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_115 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", span="170-170", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", file="WorkerManagerFacts.cs"];
m56_116 [label="Assert.Equal(DateTimeOffsetValue, value)", span="170-170", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", file="WorkerManagerFacts.cs"];
m56_117 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", span="170-170", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", file="WorkerManagerFacts.cs"];
m56_71 [label="Entry lambda expression", span="84-84", cluster="lambda expression", color=red, community=0, file="WorkerManagerFacts.cs"];
m56_72 [label="x.Stop()", span="84-84", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_79 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_80 [label="x.Dispose()", span="92-92", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_81 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_103 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", span="152-152", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", file="WorkerManagerFacts.cs"];
m56_104 [label="Assert.Equal(TimeSpanValue, value)", span="152-152", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", file="WorkerManagerFacts.cs"];
m56_105 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", span="152-152", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", file="WorkerManagerFacts.cs"];
m56_82 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", span="119-119", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_94 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", span="137-137", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_95 [label="CreateAndPerform(UInt16Value)", span="139-139", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_96 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", span="137-137", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_187 [label="var type = typeof(JobArgumentFacts)", span="294-294", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_190 [label="!checkJsonOnly", span="299-299", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_192 [label="serializationMethods.Add(new Tuple<string, Func<string>>(\r\n					''TypeDescriptor'',\r\n					() => converter.ConvertToInvariantString(argumentValue)))", span="302-304", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_193 [label="serializationMethods.Add(new Tuple<string, Func<string>>(\r\n				''JSON'',\r\n				() => JsonConvert.SerializeObject(argumentValue)))", span="307-309", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_188 [label="var methodInfo = type.GetMethod(''Method'', new[] { typeof(T) })", span="295-295", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_195 [label="var job = new Job(type, methodInfo, new[] { method.Item2() })", span="313-313", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_189 [label="var serializationMethods = new List<Tuple<string, Func<string>>>()", span="297-297", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_194 [label=serializationMethods, span="311-311", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_191 [label="var converter = TypeDescriptor.GetConverter(typeof(T))", span="301-301", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_196 [label="job.Perform(_activator.Object, _token.Object)", span="314-314", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_197 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", span="292-292", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", file="WorkerManagerFacts.cs"];
m56_83 [label="CreateAndPerform(UInt64Value)", span="121-121", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs", color=red, community=0];
m56_9 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="WorkerManagerFacts.cs"];
m56_10 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="WorkerManagerFacts.cs"];
m56_11 [label="Entry Mock<IServerSupervisor>.cstr", span="", cluster="Mock<IServerSupervisor>.cstr", file="WorkerManagerFacts.cs"];
m56_15 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_16 [label="x.CreateWorkerSupervisor(It.IsNotNull<WorkerContext>())", span="37-37", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_208 [label="converter.ConvertToInvariantString(argumentValue)", span="304-304", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_212 [label="JsonConvert.SerializeObject(argumentValue)", span="309-309", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_207 [label="Entry lambda expression", span="304-304", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_209 [label="Exit lambda expression", span="304-304", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_211 [label="Entry lambda expression", span="309-309", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_213 [label="Exit lambda expression", span="309-309", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m56_26 [label="Assert.Equal(ByteValue, value)", span="35-35", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", file="WorkerManagerFacts.cs"];
m56_27 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", span="35-35", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", color=green, community=0, file="WorkerManagerFacts.cs"];
m56_28 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", span="38-38", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_35 [label="CreateAndPerform(SByteValue)", span="49-49", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_36 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", span="47-47", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", color=green, community=0, file="WorkerManagerFacts.cs"];
m56_21 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", span="29-29", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="WorkerManagerFacts.cs"];
m56_55 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", span="80-80", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", file="WorkerManagerFacts.cs"];
m56_67 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", span="98-98", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", file="WorkerManagerFacts.cs"];
m56_22 [label="CreateAndPerform(BooleanValue)", span="31-31", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_57 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", span="80-80", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", file="WorkerManagerFacts.cs"];
m56_56 [label="Assert.Equal(SingleValue, value)", span="80-80", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", file="WorkerManagerFacts.cs", color=red, community=0];
m56_69 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", span="98-98", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", file="WorkerManagerFacts.cs"];
m56_68 [label="Assert.Equal(UInt32Value, value)", span="98-98", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", file="WorkerManagerFacts.cs", color=red, community=0];
m56_61 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", span="89-89", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", file="WorkerManagerFacts.cs"];
m56_84 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", span="119-119", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_62 [label="Assert.Equal(Int32Value, value)", span="89-89", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", file="WorkerManagerFacts.cs", color=red, community=0];
m56_63 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", span="89-89", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", color=green, community=0, file="WorkerManagerFacts.cs"];
m56_64 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", span="92-92", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_65 [label="CreateAndPerform(Int32Value)", span="94-94", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs", color=red, community=0];
m56_66 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", span="92-92", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_202 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerManagerFacts.cs"];
m56_121 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", span="179-179", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", file="WorkerManagerFacts.cs"];
m56_122 [label="Assert.Equal(CultureInfoValue, value)", span="179-179", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", file="WorkerManagerFacts.cs"];
m56_123 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", span="179-179", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", file="WorkerManagerFacts.cs"];
m56_6 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="WorkerManagerFacts.cs"];
m56_175 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", span="270-270", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", file="WorkerManagerFacts.cs"];
m56_176 [label="Assert.Equal(CustomStructValue, value)", span="270-270", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", file="WorkerManagerFacts.cs"];
m56_177 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", span="270-270", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", file="WorkerManagerFacts.cs"];
m56_205 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="WorkerManagerFacts.cs"];
m56_34 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", span="47-47", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_130 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", span="191-191", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", file="WorkerManagerFacts.cs"];
m56_131 [label="CreateAndPerform(EnumValue)", span="193-193", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", file="WorkerManagerFacts.cs"];
m56_132 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", span="191-191", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", file="WorkerManagerFacts.cs"];
m56_124 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", span="182-182", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", file="WorkerManagerFacts.cs"];
m56_125 [label="CreateAndPerform(CultureInfoValue)", span="184-184", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", file="WorkerManagerFacts.cs"];
m56_126 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", span="182-182", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", file="WorkerManagerFacts.cs"];
m56_46 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", span="65-65", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_178 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", span="273-273", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_179 [label="CreateAndPerform(CustomStructValue, true)", span="275-275", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_180 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", span="273-273", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_169 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", span="255-255", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", file="WorkerManagerFacts.cs"];
m56_170 [label="Assert.Equal(DictionaryValue, value)", span="255-255", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", file="WorkerManagerFacts.cs"];
m56_171 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", span="255-255", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", file="WorkerManagerFacts.cs"];
m56_13 [label="Entry Unk.ActivateJob", span="", cluster="Unk.ActivateJob", file="WorkerManagerFacts.cs"];
m56_100 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", span="146-146", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_101 [label="CreateAndPerform(StringValue)", span="148-148", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_102 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", span="146-146", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_40 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", span="56-56", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", color=green, community=0, file="WorkerManagerFacts.cs"];
m56_41 [label="CreateAndPerform(CharValue)", span="58-58", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs", color=red, community=0];
m56_42 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", span="56-56", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_52 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", span="74-74", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_8 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", file="WorkerManagerFacts.cs"];
m56_91 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", span="134-134", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", file="WorkerManagerFacts.cs"];
m56_92 [label="Assert.Equal(UInt16Value, value)", span="134-134", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", file="WorkerManagerFacts.cs"];
m56_93 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", span="134-134", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", file="WorkerManagerFacts.cs"];
m56_151 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", span="224-224", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", file="WorkerManagerFacts.cs"];
m56_152 [label="Assert.Equal(NullNullableValue, value)", span="224-224", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", file="WorkerManagerFacts.cs"];
m56_153 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", span="224-224", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", file="WorkerManagerFacts.cs"];
m56_54 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", span="74-74", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_157 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", span="233-233", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", file="WorkerManagerFacts.cs"];
m56_158 [label="Assert.Equal(ArrayValue, value)", span="233-233", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", file="WorkerManagerFacts.cs"];
m56_159 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", span="233-233", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", file="WorkerManagerFacts.cs"];
m56_109 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", span="161-161", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", file="WorkerManagerFacts.cs"];
m56_110 [label="Assert.Equal(ObjectValue, value)", span="161-161", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", file="WorkerManagerFacts.cs"];
m56_111 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", span="161-161", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", file="WorkerManagerFacts.cs"];
m56_172 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", span="258-258", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_173 [label="CreateAndPerform(DictionaryValue, true)", span="260-260", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_174 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", span="258-258", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_163 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", span="242-242", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", file="WorkerManagerFacts.cs"];
m56_164 [label="Assert.Equal(ListValue, value)", span="242-242", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", file="WorkerManagerFacts.cs"];
m56_165 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", span="242-242", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", file="WorkerManagerFacts.cs"];
m56_198 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="WorkerManagerFacts.cs"];
m56_142 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", span="209-209", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_143 [label="CreateAndPerform(UriValue)", span="211-211", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_144 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", span="209-209", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_210 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="WorkerManagerFacts.cs"];
m56_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerManagerFacts.cs"];
m56_200 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="WorkerManagerFacts.cs"];
m56_201 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="WorkerManagerFacts.cs"];
m56_148 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", span="218-218", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_149 [label="CreateAndPerform(NotNullNullableValue)", span="220-220", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_150 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", span="218-218", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs"];
m56_206 [label="Entry Unk.Perform", span="", cluster="Unk.Perform", file="WorkerManagerFacts.cs"];
m56_181 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", span="284-284", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", file="WorkerManagerFacts.cs"];
m56_182 [label="Assert.Equal(CustomClassValue.CreatedAt, value.CreatedAt)", span="284-284", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", file="WorkerManagerFacts.cs"];
m56_183 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", span="284-284", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", file="WorkerManagerFacts.cs"];
m56_133 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", span="197-197", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", file="WorkerManagerFacts.cs"];
m56_134 [label="Assert.Equal(GuidValue, value)", span="197-197", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", file="WorkerManagerFacts.cs"];
m56_135 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", span="197-197", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", file="WorkerManagerFacts.cs"];
m56_29 [label="CreateAndPerform(ByteValue)", span="40-40", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", file="WorkerManagerFacts.cs", color=red, community=0];
m56_160 [label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", span="236-236", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_161 [label="CreateAndPerform(ArrayValue, true)", span="238-238", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_162 [label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", span="236-236", cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", file="WorkerManagerFacts.cs"];
m56_215 [label="Hangfire.Core.Tests.Common.JobArgumentFacts", span="", file="WorkerManagerFacts.cs"];
m56_216 [label=T, span="", file="WorkerManagerFacts.cs"];
m56_217 [label=converter, span="", file="WorkerManagerFacts.cs"];
m57_86 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="WriteTransactionFacts.cs"];
m57_82 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="WriteTransactionFacts.cs"];
m57_95 [label="Entry HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", span="74-74", cluster="HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", file="WriteTransactionFacts.cs"];
m57_81 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="9-9", cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="WriteTransactionFacts.cs"];
m57_91 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="WriteTransactionFacts.cs"];
m57_92 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="WriteTransactionFacts.cs"];
m57_93 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="WriteTransactionFacts.cs"];
m57_78 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="WriteTransactionFacts.cs"];
m57_0 [label="Entry HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_1 [label="WriteLiteral(''\r\n'')", span="73-73", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_2 [label="JobDetailsDto job", span="88-88", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_3 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="89-89", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_4 [label="job = monitor.JobDetails(JobId.ToString())", span="91-91", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_5 [label="string title = null", span="94-94", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_6 [label="job != null && job.Method != null", span="96-96", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_7 [label="title = HtmlHelper.DisplayMethod(job.Method)", span="98-98", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_11 [label="job == null", span="114-114", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_17 [label="job.CreatedAt.HasValue", span="149-149", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_19 [label="Write(JobHelper.ToStringTimestamp(job.CreatedAt.Value))", span="161-161", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_21 [label="job.Method != null", span="179-179", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_23 [label="Write(JobMethodCallRenderer.Render(job.Method, job.Arguments, job.OldFormatArguments))", span="190-190", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_26 [label="job.Properties.Count > 0", span="210-210", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_28 [label="job.Properties", span="221-221", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_37 [label="job.History.Count > 0", span="277-277", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_40 [label="job.History", span="289-289", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_8 [label="title = title ?? ''Job''", span="101-101", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_9 [label="Layout = new LayoutPage { Title = title, Subtitle = HtmlHelper.JobId(JobId.ToString(), false).ToString() }", span="103-103", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_10 [label="WriteLiteral(''\r\n'')", span="109-109", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_12 [label="WriteLiteral(''    '')", span="120-120", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_16 [label="WriteLiteral(''    <div class=\''job-snippet\''>\r\n        <div class=\''job-snippet-code\''>\r\n'')", span="144-144", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_13 [label="WriteLiteral('' The job with id \''')", span="122-122", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_14 [label="Write(JobId)", span="127-127", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_15 [label="WriteLiteral(''\' was expired or was not existed on the server.\r\n'')", span="132-132", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_18 [label="WriteLiteral(''                <div class=\''pull-right job-creation-date\''>\r\n                    C'' +\r\n''reated\r\n                    <span data-moment=\'''')", span="155-156", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_20 [label="WriteLiteral(''\''></span>\r\n                </div>\r\n'')", span="166-166", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_22 [label="WriteLiteral(''                <pre><code>'')", span="185-185", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_25 [label="WriteLiteral(''            <div class=\''clearfix\''></div>\r\n        </div>\r\n\r\n'')", span="205-205", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_24 [label="WriteLiteral(''</code></pre>\r\n'')", span="195-195", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_27 [label="WriteLiteral(''            <div class=\''job-snippet-properties\''>\r\n                <dl>\r\n'')", span="216-216", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_36 [label="WriteLiteral(''    </div>\r\n'')", span="271-271", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_29 [label="WriteLiteral(''                        <dt>'')", span="227-227", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_35 [label="WriteLiteral(''                </dl>\r\n            </div>\r\n'')", span="261-261", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_30 [label="Write(property.Key)", span="232-232", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_31 [label="WriteLiteral(''</dt>\r\n'')", span="237-237", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_33 [label="Write(property.Value)", span="246-246", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_32 [label="WriteLiteral(''                        <dd><pre>'')", span="241-241", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_34 [label="WriteLiteral(''</pre></dd>\r\n'')", span="251-251", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_38 [label="WriteLiteral(''        <h3>History</h3>\r\n'')", span="283-283", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_39 [label="var index = 0", span="288-288", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_42 [label="index == 0", span="295-295", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_45 [label="Write(index == 0 ? ''job-history-current'' : null)", span="311-311", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_76 [label="index++", span="488-488", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_41 [label="var background = JobHistoryRenderer.BackgroundStateColors.ContainsKey(entry[''State''])\r\n               ? JobHistoryRenderer.BackgroundStateColors[entry[''State'']]\r\n               : null", span="291-293", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_43 [label="background = JobHistoryRenderer.ForegroundStateColors.ContainsKey(entry[''State''])\r\n                    ? JobHistoryRenderer.ForegroundStateColors[entry[''State'']]\r\n                    : null", span="297-299", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_49 [label="Write(entry[''CreatedAt''])", span="331-331", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_51 [label="Write(JobHelper.FromStringTimestamp(entry[''CreatedAt'']))", span="341-341", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_53 [label="Write(entry[''State''])", span="352-352", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_55 [label="entry.ContainsKey(''Reason'')", span="362-362", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_57 [label="Write(entry[''Reason''])", span="373-373", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_60 [label="JobHistoryRenderer.Exists(entry[''State''])", span="393-393", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_61 [label="var rendered = JobHistoryRenderer.Render(entry[''State''], entry)", span="395-395", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_67 [label="entry.Where(x => x.Key != ''State'' && x.Key != ''Date'' && x.Key != ''Reason'')", span="432-432", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_47 [label="Write(background != null ? String.Format(''background-color: {0};'', background) : null)", span="321-321", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_44 [label="WriteLiteral(''            <div class=\''job-history '')", span="306-306", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_46 [label="WriteLiteral(''\''>\r\n                <div class=\''job-history-heading\'' style=\'''')", span="316-316", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_48 [label="WriteLiteral(''\''>\r\n                    <span class=\''pull-right\'' data-moment=\'''')", span="326-326", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_50 [label="WriteLiteral(''\''>'')", span="336-336", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_52 [label="WriteLiteral(''</span>\r\n                    <h4 class=\''job-history-title\''>\r\n                    '' +\r\n''    '')", span="346-347", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_54 [label="WriteLiteral(''\r\n\r\n'')", span="357-357", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_56 [label="WriteLiteral(''                            <small>'')", span="368-368", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_59 [label="WriteLiteral(''                    </h4>\r\n                </div>\r\n\r\n'')", span="388-388", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_58 [label="WriteLiteral(''</small>\r\n'')", span="378-378", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_66 [label="WriteLiteral(''                    <div class=\''job-history-body\''>\r\n                        <dl c'' +\r\n''lass=\''dl-horizontal\''>\r\n'')", span="426-427", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_62 [label="rendered != null", span="396-396", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_64 [label="Write(rendered)", span="408-408", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_63 [label="WriteLiteral(''                        <div class=\''job-history-body\''>\r\n                         '' +\r\n''   '')", span="402-403", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_75 [label="WriteLiteral(''            </div>\r\n'')", span="482-482", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_65 [label="WriteLiteral(''\r\n                        </div>\r\n'')", span="413-413", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_68 [label="WriteLiteral(''                                <dt>'')", span="438-438", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_74 [label="WriteLiteral(''                        </dl>\r\n                    </div>\r\n'')", span="472-472", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_69 [label="Write(item.Key)", span="443-443", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_72 [label="Write(item.Value)", span="457-457", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_70 [label="WriteLiteral('':</dt>\r\n'')", span="448-448", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_71 [label="WriteLiteral(''                                <dd>'')", span="452-452", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_73 [label="WriteLiteral(''</dd>\r\n'')", span="462-462", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_77 [label="Exit HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="WriteTransactionFacts.cs"];
m57_94 [label="Entry HangFire.Web.JobHistoryRenderer.Exists(string)", span="69-69", cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="WriteTransactionFacts.cs"];
m57_96 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="WriteTransactionFacts.cs"];
m57_85 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="WriteTransactionFacts.cs"];
m57_90 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="WriteTransactionFacts.cs"];
m57_97 [label="Entry lambda expression", span="432-432", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m57_98 [label="x.Key != ''State'' && x.Key != ''Date'' && x.Key != ''Reason''", span="432-432", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m57_99 [label="Exit lambda expression", span="432-432", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m57_88 [label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", span="28-28", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", file="WriteTransactionFacts.cs"];
m57_80 [label="Entry string.ToString()", span="0-0", cluster="string.ToString()", file="WriteTransactionFacts.cs"];
m57_89 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="WriteTransactionFacts.cs"];
m57_84 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="WriteTransactionFacts.cs"];
m57_79 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", file="WriteTransactionFacts.cs"];
m57_83 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="WriteTransactionFacts.cs"];
m57_100 [label="HangFire.Web.Pages.JobDetailsPage", span="", file="WriteTransactionFacts.cs"];
n13 -> n3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
n13 -> n7  [key=1, style=dashed, color=red, label="HangFire.States.FailedState"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n2 -> n4  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n4 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid, color=red];
n7 -> n8  [key=0, style=solid, color=red];
n7 -> n9  [key=2, style=dotted, color=red];
n7 -> n10  [key=2, style=dotted, color=red];
n7 -> n11  [key=2, style=dotted, color=red];
n7 -> n12  [key=2, style=dotted, color=red];
n7 -> n1  [key=3, color=red, style=bold, label="Property variable string OldStateName"];
n8 -> n6  [key=0, style=bold, color=blue];
d27 -> d28  [key=0, style=solid, color=green];
d27 -> d29  [key=0, style=solid, color=green];
d42 -> d27  [key=1, style=dashed, color=green, label="HangFire.States.ApplyStateContext"];
d42 -> d5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d42 -> d29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
d25 -> d27  [key=0, style=solid, color=green];
d25 -> d26  [key=0, style=solid];
d28 -> d30  [key=0, style=solid];
d28 -> d39  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d29 -> d40  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d8 -> d11  [key=2, style=dotted];
d17 -> d28  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d17 -> d29  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d17 -> d18  [key=0, style=solid];
d17 -> d32  [key=2, style=dotted];
d17 -> d19  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d17 -> d21  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d17 -> d22  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d17 -> d24  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d17 -> d26  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d17 -> d30  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [key=0, style=solid];
d18 -> d33  [key=2, style=dotted];
d19 -> d18  [key=0, style=solid];
d19 -> d34  [key=2, style=dotted];
d21 -> d20  [key=0, style=solid];
d21 -> d35  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d22 -> d36  [key=2, style=dotted];
d23 -> d25  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d23 -> d33  [key=2, style=dotted];
d24 -> d23  [key=0, style=solid];
d24 -> d37  [key=2, style=dotted];
d26 -> d25  [key=0, style=solid];
d26 -> d38  [key=2, style=dotted];
d12 -> d25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>"];
d12 -> d18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
d12 -> d23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
d12 -> d13  [key=0, style=solid];
d12 -> d15  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>"];
d12 -> d20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>"];
d30 -> d31  [key=0, style=solid];
d30 -> d41  [key=2, style=dotted];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
d0 -> d6  [key=1, style=dashed, color=darkseagreen4, label=string];
d0 -> d7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
d3 -> d5  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d9 -> d0  [key=0, style=bold, color=blue];
d15 -> d17  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d20 -> d22  [key=0, style=solid];
d31 -> d12  [key=0, style=bold, color=blue];
d13 -> d15  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d4 -> d9  [key=0, style=solid];
d4 -> d10  [key=2, style=dotted];
d2 -> d9  [key=0, style=solid];
d2 -> d10  [key=2, style=dotted];
d16 -> d31  [key=0, style=solid];
d16 -> d10  [key=2, style=dotted];
d14 -> d31  [key=0, style=solid];
d14 -> d10  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_1 -> m0_11  [key=2, style=dotted];
m0_1 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_2 -> m0_3  [key=0, style=solid, color=red];
m0_2 -> m0_12  [key=2, style=dotted, color=red];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_14  [key=2, style=dotted];
m0_3 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_15  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_16  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_17  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_18  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_19  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_13  [key=2, style=dotted];
m0_9 -> m0_14  [key=2, style=dotted];
m0_9 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_10 -> m0_0  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_35  [key=2, style=dotted];
m0_32 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_36  [key=2, style=dotted];
m0_34 -> m0_31  [key=0, style=bold, color=blue];
m0_208 -> m0_209  [key=0, style=solid];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_53  [key=2, style=dotted];
m0_209 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_209 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_36  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_214  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_214  [key=2, style=dotted];
m0_213 -> m0_208  [key=0, style=bold, color=blue];
m0_53 -> m0_215  [key=0, style=solid];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_40  [key=2, style=dotted];
m0_216 -> m0_53  [key=0, style=bold, color=blue];
m0_168 -> m0_169  [key=0, style=solid];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_53  [key=2, style=dotted];
m0_169 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_169 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_169 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_169 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_169 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_179  [key=2, style=dotted];
m0_170 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m0_170 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_13  [key=2, style=dotted];
m0_174 -> m0_72  [key=2, style=dotted];
m0_174 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_175 -> m0_176  [key=0, style=solid, color=red];
m0_175 -> m0_13  [key=2, style=dotted];
m0_175 -> m0_72  [key=2, style=dotted];
m0_175 -> m0_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> d12  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_179  [key=2, style=dotted];
m0_171 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m0_171 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_180  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_180  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid, color=red];
m0_176 -> m0_13  [key=2, style=dotted, color=red];
m0_176 -> m0_72  [key=2, style=dotted, color=red];
m0_176 -> m0_188  [key=1, style=dashed, color=red, label="lambda expression"];
m0_178 -> m0_168  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_53  [key=2, style=dotted];
m0_82 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_82 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_82 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_82 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_82 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_94  [key=2, style=dotted];
m0_83 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m0_83 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_13  [key=2, style=dotted];
m0_89 -> m0_72  [key=2, style=dotted];
m0_89 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_90 -> m0_91  [key=0, style=solid, color=red];
m0_90 -> m0_13  [key=2, style=dotted];
m0_90 -> m0_72  [key=2, style=dotted];
m0_90 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> d12  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_13  [key=2, style=dotted];
m0_84 -> m0_14  [key=2, style=dotted];
m0_84 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_95  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_94  [key=2, style=dotted];
m0_85 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=handler2];
m0_85 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=handler2];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_13  [key=2, style=dotted];
m0_86 -> m0_14  [key=2, style=dotted];
m0_86 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_95  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid, color=red];
m0_91 -> m0_13  [key=2, style=dotted, color=red];
m0_91 -> m0_72  [key=2, style=dotted, color=red];
m0_91 -> m0_109  [key=1, style=dashed, color=red, label="lambda expression"];
m0_93 -> m0_81  [key=0, style=bold, color=blue];
m0_141 -> m0_142  [key=0, style=solid];
m0_142 -> m0_143  [key=0, style=solid, color=red];
m0_142 -> m0_53  [key=2, style=dotted];
m0_142 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_143 -> m0_144  [key=0, style=solid, color=red];
m0_143 -> m0_13  [key=2, style=dotted, color=red];
m0_143 -> m0_14  [key=2, style=dotted, color=red];
m0_143 -> m0_148  [key=1, style=dashed, color=red, label="lambda expression"];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> d12  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_147  [key=2, style=dotted];
m0_145 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_146 -> m0_141  [key=0, style=bold, color=blue];
m0_58 -> m0_59  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_53  [key=2, style=dotted];
m0_59 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_35  [key=2, style=dotted];
m0_60 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_36  [key=2, style=dotted];
m0_62 -> m0_58  [key=0, style=bold, color=blue];
m0_48 -> m0_49  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_53  [key=2, style=dotted];
m0_49 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_35  [key=2, style=dotted];
m0_50 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_36  [key=2, style=dotted];
m0_52 -> m0_48  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_35  [key=2, style=dotted];
m0_42 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_36  [key=2, style=dotted];
m0_44 -> m0_41  [key=0, style=bold, color=blue];
m0_205 -> m0_206  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=2, style=dotted];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=2, style=dotted];
m0_39 -> m0_37  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_40  [key=2, style=dotted];
m0_47 -> m0_45  [key=0, style=bold, color=blue];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> d12  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_56 -> m0_54  [key=0, style=bold, color=blue];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> d12  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_65 -> m0_63  [key=0, style=bold, color=blue];
m0_73 -> m0_74  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [key=2, style=dotted];
m0_75 -> m0_73  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=2, style=dotted];
m0_79 -> m0_77  [key=0, style=bold, color=blue];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_105  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_105  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid, color=red];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_96  [key=0, style=bold, color=blue];
m0_100 -> m0_101  [key=0, style=solid];
m0_101 -> m0_99  [key=0, style=bold, color=blue];
m0_104 -> m0_102  [key=0, style=bold, color=blue];
m0_108 -> m0_106  [key=0, style=bold, color=blue];
m0_110 -> m0_111  [key=0, style=solid, color=red];
m0_110 -> m0_35  [key=2, style=dotted, color=red];
m0_110 -> m0_76  [key=2, style=dotted, color=red];
m0_111 -> m0_109  [key=0, style=bold, color=blue];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_137  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_137  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid, color=red];
m0_134 -> m0_135  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_127 -> m0_125  [key=0, style=bold, color=blue];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_128  [key=0, style=bold, color=blue];
m0_132 -> m0_133  [key=0, style=solid, color=red];
m0_132 -> m0_35  [key=2, style=dotted, color=red];
m0_132 -> m0_76  [key=2, style=dotted, color=red];
m0_133 -> m0_131  [key=0, style=bold, color=blue];
m0_136 -> m0_134  [key=0, style=bold, color=blue];
m0_140 -> m0_138  [key=0, style=bold, color=blue];
m0_148 -> m0_149  [key=0, style=solid, color=red];
m0_151 -> m0_152  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid, color=red];
m0_150 -> m0_148  [key=0, style=bold, color=blue];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_35  [key=2, style=dotted];
m0_152 -> m0_154  [key=2, style=dotted];
m0_153 -> m0_151  [key=0, style=bold, color=blue];
m0_161 -> m0_162  [key=0, style=solid, color=red];
m0_164 -> m0_165  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid, color=red];
m0_163 -> m0_161  [key=0, style=bold, color=blue];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_167  [key=2, style=dotted];
m0_166 -> m0_164  [key=0, style=bold, color=blue];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_184  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_184  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_185 -> m0_186  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid, color=red];
m0_183 -> m0_181  [key=0, style=bold, color=blue];
m0_187 -> m0_185  [key=0, style=bold, color=blue];
m0_189 -> m0_190  [key=0, style=solid, color=red];
m0_189 -> m0_35  [key=2, style=dotted, color=red];
m0_189 -> m0_76  [key=2, style=dotted, color=red];
m0_190 -> m0_188  [key=0, style=bold, color=blue];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_204  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_204  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_203 -> m0_201  [key=0, style=bold, color=blue];
m0_207 -> m0_205  [key=0, style=bold, color=blue];
m0_155 -> m0_156  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid, color=red];
m0_156 -> m0_53  [key=2, style=dotted];
m0_156 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_157 -> m0_158  [key=0, style=solid, color=red];
m0_157 -> m0_13  [key=2, style=dotted, color=red];
m0_157 -> m0_14  [key=2, style=dotted, color=red];
m0_157 -> m0_161  [key=1, style=dashed, color=red, label="lambda expression"];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> d12  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_147  [key=2, style=dotted];
m0_159 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_160 -> m0_155  [key=0, style=bold, color=blue];
m0_191 -> m0_192  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_53  [key=2, style=dotted];
m0_192 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_192 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_192 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_192 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_192 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_179  [key=2, style=dotted];
m0_193 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m0_193 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_13  [key=2, style=dotted];
m0_197 -> m0_72  [key=2, style=dotted];
m0_197 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_13  [key=2, style=dotted];
m0_198 -> m0_72  [key=2, style=dotted];
m0_198 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> d12  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_179  [key=2, style=dotted];
m0_194 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m0_194 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_180  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_180  [key=2, style=dotted];
m0_200 -> m0_191  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_13  [key=2, style=dotted];
m0_67 -> m0_72  [key=2, style=dotted];
m0_67 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_13  [key=2, style=dotted];
m0_68 -> m0_72  [key=2, style=dotted];
m0_68 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_53  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> d12  [key=2, style=dotted];
m0_71 -> m0_66  [key=0, style=bold, color=blue];
m0_112 -> m0_113  [key=0, style=solid];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_53  [key=2, style=dotted];
m0_113 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_113 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_113 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_113 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_113 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_94  [key=2, style=dotted];
m0_114 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m0_114 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_13  [key=2, style=dotted];
m0_121 -> m0_72  [key=2, style=dotted];
m0_121 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_13  [key=2, style=dotted];
m0_122 -> m0_72  [key=2, style=dotted];
m0_122 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> d12  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_13  [key=2, style=dotted];
m0_115 -> m0_14  [key=2, style=dotted];
m0_115 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_95  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_94  [key=2, style=dotted];
m0_116 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=handler2];
m0_116 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=handler2];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_13  [key=2, style=dotted];
m0_117 -> m0_14  [key=2, style=dotted];
m0_117 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_119 -> m0_120  [key=0, style=solid, color=red];
m0_119 -> m0_95  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid, color=red];
m0_120 -> m0_13  [key=2, style=dotted, color=red];
m0_120 -> m0_72  [key=2, style=dotted, color=red];
m0_120 -> m0_131  [key=1, style=dashed, color=red, label="lambda expression"];
m0_124 -> m0_112  [key=0, style=bold, color=blue];
m0_217 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_2  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_91  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_120  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_143  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_157  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_176  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_217 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
m0_218 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_219 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_220 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_220 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_221 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_221 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_222 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_222 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_223 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_223 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label=context];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m1_20 -> m1_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string Enqueue"];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_19  [key=2, style=dotted];
m1_23 -> m1_13  [key=2, style=dotted];
m1_22 -> m1_24  [key=0, style=solid];
m1_22 -> d10  [key=2, style=dotted];
m1_24 -> m1_20  [key=0, style=bold, color=blue];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=2, style=dotted];
m1_46 -> m1_42  [key=2, style=dotted];
m1_45 -> m1_47  [key=0, style=solid];
m1_45 -> d10  [key=2, style=dotted];
m1_47 -> m1_43  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m1_8 -> m1_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string Enqueue"];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_6  [key=2, style=dotted];
m1_11 -> m1_13  [key=2, style=dotted];
m1_10 -> m1_12  [key=0, style=solid];
m1_10 -> d10  [key=2, style=dotted];
m1_12 -> m1_8  [key=0, style=bold, color=blue];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m1_25 -> m1_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string Schedule"];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=2, style=dotted];
m1_28 -> m1_7  [key=2, style=dotted];
m1_27 -> m1_29  [key=0, style=solid];
m1_27 -> d10  [key=2, style=dotted];
m1_29 -> m1_25  [key=0, style=bold, color=blue];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m1_31 -> m1_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string Schedule"];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_30  [key=2, style=dotted];
m1_34 -> m1_13  [key=2, style=dotted];
m1_33 -> m1_35  [key=0, style=solid];
m1_33 -> d10  [key=2, style=dotted];
m1_35 -> m1_31  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=2, style=dotted];
m1_39 -> m1_42  [key=2, style=dotted];
m1_38 -> m1_40  [key=0, style=solid];
m1_38 -> d10  [key=2, style=dotted];
m1_40 -> m1_36  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m1_14 -> m1_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string Enqueue"];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_17 -> m1_7  [key=2, style=dotted];
m1_16 -> m1_18  [key=0, style=solid];
m1_16 -> d10  [key=2, style=dotted];
m1_18 -> m1_14  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m1_0 -> m1_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string Enqueue"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> d10  [key=2, style=dotted];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_10  [key=2, style=dotted];
m2_7 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=2, style=dotted];
m2_9 -> m2_6  [key=0, style=bold, color=blue];
m2_95 -> m2_96  [key=0, style=solid];
m2_96 -> m2_10  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_97 -> m2_11  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_98 -> m2_95  [key=0, style=bold, color=blue];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_10  [key=2, style=dotted];
m2_32 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_11  [key=2, style=dotted];
m2_34 -> m2_31  [key=0, style=bold, color=blue];
m2_52 -> m2_53  [key=0, style=solid];
m2_53 -> m2_10  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_54 -> m2_11  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_55 -> m2_52  [key=0, style=bold, color=blue];
m2_41 -> m2_194  [key=0, style=solid];
m2_194 -> m2_41  [key=0, style=bold, color=blue];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_15  [key=2, style=dotted];
m2_21 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=2, style=dotted];
m2_22 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_23 -> m2_20  [key=0, style=bold, color=blue];
m2_119 -> m2_120  [key=0, style=solid];
m2_120 -> m2_10  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_121 -> m2_11  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_122 -> m2_119  [key=0, style=bold, color=blue];
m2_106 -> m2_107  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_67  [key=2, style=dotted];
m2_107 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_24  [key=2, style=dotted];
m2_108 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_109 -> m2_106  [key=0, style=bold, color=blue];
m2_19 -> m2_193  [key=0, style=solid];
m2_193 -> m2_19  [key=0, style=bold, color=blue];
m2_127 -> m2_128  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=2, style=dotted];
m2_13 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_10  [key=2, style=dotted];
m2_29 -> m2_15  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_10  [key=2, style=dotted];
m2_36 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_10  [key=2, style=dotted];
m2_50 -> m2_15  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_14 -> m2_12  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m2_35 -> m2_36  [key=0, style=solid];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_51 -> m2_49  [key=0, style=bold, color=blue];
m2_68 -> m2_69  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_134 -> m2_135  [key=0, style=solid];
m2_137 -> m2_138  [key=0, style=solid];
m2_160 -> m2_161  [key=0, style=solid];
m2_163 -> m2_164  [key=0, style=solid];
m2_184 -> m2_185  [key=0, style=solid];
m2_187 -> m2_188  [key=0, style=solid];
m2_72 -> m2_10  [key=2, style=dotted];
m2_72 -> m2_15  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_93 -> m2_10  [key=2, style=dotted];
m2_93 -> m2_15  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_114 -> m2_10  [key=2, style=dotted];
m2_114 -> m2_15  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_138 -> m2_10  [key=2, style=dotted];
m2_138 -> m2_15  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_164 -> m2_10  [key=2, style=dotted];
m2_164 -> m2_15  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_188 -> m2_10  [key=2, style=dotted];
m2_188 -> m2_15  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_27 -> m2_25  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_19  [key=2, style=dotted];
m2_40 -> m2_38  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_48 -> m2_46  [key=0, style=bold, color=blue];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_41  [key=2, style=dotted];
m2_70 -> m2_68  [key=0, style=bold, color=blue];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_19  [key=2, style=dotted];
m2_73 -> m2_71  [key=0, style=bold, color=blue];
m2_91 -> m2_89  [key=0, style=bold, color=blue];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_41  [key=2, style=dotted];
m2_94 -> m2_92  [key=0, style=bold, color=blue];
m2_112 -> m2_110  [key=0, style=bold, color=blue];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_19  [key=2, style=dotted];
m2_115 -> m2_113  [key=0, style=bold, color=blue];
m2_136 -> m2_134  [key=0, style=bold, color=blue];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_41  [key=2, style=dotted];
m2_139 -> m2_137  [key=0, style=bold, color=blue];
m2_148 -> d11  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_151  [key=2, style=dotted];
m2_148 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_174 -> d11  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_176  [key=2, style=dotted];
m2_174 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_162 -> m2_160  [key=0, style=bold, color=blue];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_19  [key=2, style=dotted];
m2_165 -> m2_163  [key=0, style=bold, color=blue];
m2_186 -> m2_184  [key=0, style=bold, color=blue];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_41  [key=2, style=dotted];
m2_189 -> m2_187  [key=0, style=bold, color=blue];
m2_56 -> m2_57  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_166 -> m2_167  [key=0, style=solid];
m2_173 -> m2_174  [key=0, style=solid];
m2_190 -> m2_191  [key=0, style=solid];
m2_149 -> m2_147  [key=0, style=bold, color=blue];
m2_152 -> m2_153  [key=0, style=solid];
m2_175 -> m2_173  [key=0, style=bold, color=blue];
m2_177 -> m2_178  [key=0, style=solid];
m2_58 -> m2_56  [key=0, style=bold, color=blue];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=2, style=dotted];
m2_57 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_80 -> m2_78  [key=0, style=bold, color=blue];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=2, style=dotted];
m2_79 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_101 -> m2_99  [key=0, style=bold, color=blue];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [key=2, style=dotted];
m2_100 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_118 -> m2_116  [key=0, style=bold, color=blue];
m2_117 -> m2_118  [key=0, style=solid];
m2_125 -> m2_123  [key=0, style=bold, color=blue];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_126  [key=2, style=dotted];
m2_124 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_142 -> m2_140  [key=0, style=bold, color=blue];
m2_141 -> m2_142  [key=0, style=solid];
m2_168 -> m2_166  [key=0, style=bold, color=blue];
m2_167 -> m2_168  [key=0, style=solid];
m2_192 -> m2_190  [key=0, style=bold, color=blue];
m2_191 -> m2_192  [key=0, style=solid];
m2_61 -> m2_19  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_104 -> m2_19  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_153 -> m2_19  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_83 -> m2_41  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_128 -> m2_41  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_178 -> m2_41  [key=2, style=dotted];
m2_178 -> m2_179  [key=0, style=solid];
m2_154 -> m2_152  [key=0, style=bold, color=blue];
m2_179 -> m2_177  [key=0, style=bold, color=blue];
m2_60 -> m2_61  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_62 -> m2_60  [key=0, style=bold, color=blue];
m2_105 -> m2_103  [key=0, style=bold, color=blue];
m2_84 -> m2_82  [key=0, style=bold, color=blue];
m2_129 -> m2_127  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_10  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_76 -> m2_11  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_74  [key=0, style=bold, color=blue];
m2_85 -> m2_86  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_10  [key=2, style=dotted];
m2_86 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_24  [key=2, style=dotted];
m2_87 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_88 -> m2_85  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_10  [key=2, style=dotted];
m2_43 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_24  [key=2, style=dotted];
m2_44 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_45 -> m2_42  [key=0, style=bold, color=blue];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_67  [key=2, style=dotted];
m2_64 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_24  [key=2, style=dotted];
m2_65 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_66 -> m2_63  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_5  [key=2, style=dotted, color=green];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_4  [key=2, style=dotted];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_155 -> m2_156  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> d11  [key=2, style=dotted];
m2_156 -> m2_159  [key=2, style=dotted];
m2_156 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_24  [key=2, style=dotted];
m2_157 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_158 -> m2_155  [key=0, style=bold, color=blue];
m2_169 -> m2_170  [key=0, style=solid];
m2_170 -> m2_10  [key=2, style=dotted];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_171 -> m2_11  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_172 -> m2_169  [key=0, style=bold, color=blue];
m2_143 -> m2_144  [key=0, style=solid];
m2_144 -> m2_10  [key=2, style=dotted];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_145 -> m2_11  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_146 -> m2_143  [key=0, style=bold, color=blue];
m2_180 -> m2_181  [key=0, style=solid];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> d11  [key=2, style=dotted];
m2_181 -> m2_10  [key=2, style=dotted];
m2_181 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_24  [key=2, style=dotted];
m2_182 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_183 -> m2_180  [key=0, style=bold, color=blue];
m2_130 -> m2_131  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_10  [key=2, style=dotted];
m2_131 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_24  [key=2, style=dotted];
m2_132 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_133 -> m2_130  [key=0, style=bold, color=blue];
m2_195 -> m2_2  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_195 -> m2_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_24  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_143  [key=0, style=bold, color=blue];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_20  [key=2, style=dotted];
m4_147 -> m4_145  [key=0, style=bold, color=blue];
m4_147 -> m4_33  [key=2, style=dotted];
m4_147 -> m4_57  [key=2, style=dotted];
m4_147 -> m4_115  [key=2, style=dotted];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_99  [key=2, style=dotted];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_24  [key=2, style=dotted];
m4_137 -> m4_100  [key=2, style=dotted];
m4_137 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_138 -> m4_136  [key=0, style=bold, color=blue];
m4_138 -> m4_100  [key=2, style=dotted];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_17 -> m4_18  [key=0, style=solid];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_93  [key=0, style=bold, color=blue];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_20  [key=2, style=dotted];
m4_98 -> m4_184  [key=0, style=solid];
m4_99 -> m4_97  [key=0, style=bold, color=blue];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_20  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid, color=green];
m4_106 -> m4_99  [key=2, style=dotted, color=green];
m4_105 -> m4_106  [key=0, style=solid, color=green];
m4_105 -> m4_98  [key=2, style=dotted];
m4_105 -> m4_103  [key=0, style=bold, color=blue];
m4_107 -> m4_108  [key=0, style=solid, color=green];
m4_107 -> m4_57  [key=2, style=dotted, color=green];
m4_107 -> m4_113  [key=1, style=dashed, color=green, label=jobKey];
m4_107 -> m4_109  [key=1, style=dashed, color=green, label=jobKey];
m4_107 -> m4_121  [key=1, style=dashed, color=green, label=jobKey];
m4_107 -> m4_110  [key=1, style=dashed, color=green, label=jobKey];
m4_107 -> m4_128  [key=1, style=dashed, color=green, label=jobKey];
m4_107 -> m4_24  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid, color=green];
m4_108 -> m4_100  [key=2, style=dotted, color=green];
m4_108 -> m4_112  [key=1, style=dashed, color=green, label="lambda expression"];
m4_108 -> m4_106  [key=0, style=bold, color=blue];
m4_109 -> m4_110  [key=0, style=solid, color=green];
m4_109 -> m4_100  [key=2, style=dotted, color=green];
m4_109 -> m4_120  [key=1, style=dashed, color=green, label="lambda expression"];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_100  [key=2, style=dotted];
m4_110 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_110 -> m4_20  [key=2, style=dotted];
m4_111 -> m4_104  [key=0, style=bold, color=blue];
m4_111 -> m4_109  [key=0, style=bold, color=blue];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_159  [key=2, style=dotted];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_24  [key=2, style=dotted];
m4_155 -> m4_98  [key=2, style=dotted];
m4_156 -> m4_154  [key=0, style=bold, color=blue];
m4_156 -> m4_99  [key=2, style=dotted];
m4_156 -> m4_157  [key=0, style=solid];
m4_49 -> m4_50  [key=0, style=solid];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_20  [key=2, style=dotted];
m4_51 -> m4_49  [key=0, style=bold, color=blue];
m4_51 -> m4_53  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_116  [key=0, style=bold, color=blue];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_24  [key=2, style=dotted];
m4_120 -> m4_118  [key=0, style=bold, color=blue];
m4_120 -> m4_121  [key=0, style=solid, color=green];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=2, style=dotted];
m4_19 -> m4_17  [key=0, style=bold, color=blue];
m4_159 -> m4_157  [key=0, style=bold, color=blue];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_33  [key=2, style=dotted];
m4_73 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_20  [key=2, style=dotted];
m4_74 -> m4_67  [key=2, style=dotted];
m4_75 -> m4_73  [key=0, style=bold, color=blue];
m4_75 -> m4_72  [key=0, style=bold, color=blue];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_91  [key=0, style=bold, color=blue];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_98  [key=2, style=dotted];
m4_95 -> m4_99  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_24  [key=2, style=dotted];
m4_96 -> m4_100  [key=2, style=dotted];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_96 -> m4_94  [key=0, style=bold, color=blue];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_168  [key=2, style=dotted];
m4_166 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_24  [key=2, style=dotted];
m4_167 -> m4_163  [key=0, style=bold, color=blue];
m4_168 -> m4_166  [key=0, style=bold, color=blue];
m4_127 -> m4_128  [key=0, style=solid];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_20  [key=2, style=dotted];
m4_128 -> m4_33  [key=2, style=dotted];
m4_128 -> m4_115  [key=2, style=dotted];
m4_128 -> m4_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_129 -> m4_127  [key=0, style=bold, color=blue];
m4_112 -> m4_113  [key=0, style=solid, color=green];
m4_113 -> m4_114  [key=0, style=solid, color=green];
m4_113 -> m4_24  [key=2, style=dotted];
m4_113 -> m4_33  [key=2, style=dotted, color=green];
m4_113 -> m4_115  [key=2, style=dotted, color=green];
m4_113 -> m4_116  [key=1, style=dashed, color=green, label="lambda expression"];
m4_114 -> m4_112  [key=0, style=bold, color=blue];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_35  [key=0, style=bold, color=blue];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_20  [key=2, style=dotted];
m4_39 -> m4_37  [key=0, style=bold, color=blue];
m4_39 -> m4_40  [key=0, style=solid];
m4_180 -> m4_178  [key=0, style=bold, color=blue];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_67  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_24  [key=2, style=dotted];
m4_89 -> m4_94  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TimedOutByCheckedTime"];
m4_89 -> m4_86  [key=0, style=bold, color=blue];
m4_90 -> m4_88  [key=0, style=bold, color=blue];
m4_90 -> m4_91  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_24  [key=2, style=dotted];
m4_60 -> m4_58  [key=0, style=bold, color=blue];
m4_60 -> m4_33  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_62  [key=2, style=dotted];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_1 -> m4_16  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2 -> m4_17  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_8  [key=2, style=dotted];
m4_3 -> m4_18  [key=2, style=dotted];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_19  [key=2, style=dotted];
m4_16 -> m4_14  [key=0, style=bold, color=blue];
m4_76 -> m4_77  [key=0, style=solid, color=red];
m4_77 -> m4_78  [key=0, style=solid, color=red];
m4_77 -> m4_24  [key=2, style=dotted, color=red];
m4_77 -> m4_71  [key=2, style=dotted];
m4_78 -> m4_76  [key=0, style=bold, color=blue];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_20  [key=2, style=dotted];
m4_157 -> m4_100  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_157  [key=1, style=dashed, color=darkseagreen4, label=time];
m4_153 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label=time];
m4_153 -> m4_151  [key=0, style=bold, color=blue];
m4_158 -> m4_152  [key=0, style=bold, color=blue];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_20  [key=2, style=dotted];
m4_163 -> m4_164  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_22  [key=2, style=dotted];
m4_164 -> m4_29  [key=2, style=dotted];
m4_164 -> m4_23  [key=2, style=dotted];
m4_164 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_164 -> m4_20  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_98  [key=2, style=dotted];
m4_165 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m4_165 -> m4_163  [key=0, style=bold, color=blue];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_45  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_20  [key=2, style=dotted];
m4_44 -> m4_42  [key=0, style=bold, color=blue];
m4_45 -> m4_43  [key=0, style=bold, color=blue];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_83  [key=0, style=bold, color=blue];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_20  [key=2, style=dotted];
m4_87 -> m4_85  [key=0, style=bold, color=blue];
m4_87 -> m4_33  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_133  [key=0, style=bold, color=blue];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_20  [key=2, style=dotted];
m4_141 -> m4_139  [key=0, style=bold, color=blue];
m4_141 -> m4_33  [key=2, style=dotted];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_34  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_20  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_20  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_21  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_22  [key=2, style=dotted];
m4_7 -> m4_23  [key=2, style=dotted];
m4_7 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_22  [key=2, style=dotted];
m4_8 -> m4_23  [key=2, style=dotted];
m4_8 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> n9  [key=2, style=dotted];
m4_9 -> m4_25  [key=2, style=dotted];
m4_9 -> m4_26  [key=2, style=dotted];
m4_9 -> m4_27  [key=2, style=dotted];
m4_9 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_28  [key=2, style=dotted];
m4_10 -> m4_12  [key=2, style=dotted];
m4_10 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_22  [key=2, style=dotted];
m4_11 -> m4_23  [key=2, style=dotted];
m4_11 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_11 -> m4_9  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_22  [key=2, style=dotted];
m4_12 -> m4_29  [key=2, style=dotted];
m4_12 -> m4_23  [key=2, style=dotted];
m4_12 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_22  [key=2, style=dotted];
m4_13 -> m4_23  [key=2, style=dotted];
m4_13 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_22  [key=2, style=dotted];
m4_14 -> m4_23  [key=2, style=dotted];
m4_14 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_15 -> m4_0  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_71  [key=2, style=dotted];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_24  [key=2, style=dotted];
m4_185 -> m4_98  [key=0, style=bold, color=blue];
m4_186 -> m4_184  [key=0, style=bold, color=blue];
m4_186 -> m4_64  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_69  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_106  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_108  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_109  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_121  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_186 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m4_115 -> m4_116  [key=0, style=solid];
m4_116 -> m4_117  [key=0, style=solid, color=green];
m4_116 -> m4_20  [key=2, style=dotted];
m4_117 -> m4_115  [key=0, style=bold, color=blue];
m4_117 -> m4_118  [key=0, style=solid, color=green];
m4_117 -> m4_119  [key=2, style=dotted, color=green];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_37  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m4_70 -> m4_68  [key=0, style=bold, color=blue];
m4_72 -> m4_70  [key=0, style=bold, color=blue];
m4_72 -> m4_73  [key=0, style=solid];
m4_126 -> m4_124  [key=0, style=bold, color=blue];
m4_79 -> m4_80  [key=0, style=solid, color=red];
m4_80 -> m4_81  [key=0, style=solid, color=red];
m4_80 -> m4_20  [key=2, style=dotted, color=red];
m4_80 -> m4_33  [key=2, style=dotted];
m4_80 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_81 -> m4_79  [key=0, style=bold, color=blue];
m4_81 -> m4_67  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_101  [key=0, style=bold, color=blue];
m4_24 -> m4_187  [key=0, style=solid];
m4_24 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_24 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_24 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_24 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_24 -> m4_212  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_187 -> m4_113  [key=1, style=dashed, color=green, label=jobKey];
m4_187 -> m4_121  [key=1, style=dashed, color=green, label=jobKey];
m4_187 -> m4_128  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_193  [key=0, style=solid];
m4_190 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_201  [key=2, style=dotted];
m4_192 -> m4_202  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_203  [key=2, style=dotted];
m4_193 -> m4_202  [key=2, style=dotted];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_198  [key=2, style=dotted];
m4_188 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label=methodInfo];
m4_188 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label=time];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_204  [key=2, style=dotted];
m4_195 -> m4_205  [key=2, style=dotted];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_199  [key=2, style=dotted];
m4_189 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label=serializationMethods];
m4_189 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label=serializationMethods];
m4_189 -> m4_194  [key=1, style=dashed, color=darkseagreen4, label=serializationMethods];
m4_189 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_197  [key=0, style=solid];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_200  [key=2, style=dotted];
m4_191 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label=converter];
m4_196 -> m4_194  [key=0, style=solid];
m4_196 -> m4_206  [key=2, style=dotted];
m4_197 -> m4_24  [key=0, style=bold, color=blue];
m4_181 -> m4_182  [key=0, style=solid];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_210  [key=2, style=dotted];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_214  [key=2, style=dotted];
m4_207 -> m4_208  [key=0, style=solid];
m4_209 -> m4_207  [key=0, style=bold, color=blue];
m4_211 -> m4_212  [key=0, style=solid];
m4_213 -> m4_211  [key=0, style=bold, color=blue];
m4_68 -> m4_69  [key=0, style=solid, color=green];
m4_68 -> m4_20  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid, color=green];
m4_69 -> m4_71  [key=2, style=dotted, color=green];
m4_69 -> m4_67  [key=0, style=bold, color=blue];
m4_121 -> m4_122  [key=0, style=solid, color=green];
m4_121 -> m4_33  [key=2, style=dotted, color=green];
m4_121 -> m4_115  [key=2, style=dotted, color=green];
m4_121 -> m4_123  [key=1, style=dashed, color=green, label="lambda expression"];
m4_122 -> m4_120  [key=0, style=bold, color=blue];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_20  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_121  [key=0, style=bold, color=blue];
m4_40 -> m4_41  [key=0, style=solid];
m4_84 -> m4_71  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_82  [key=0, style=bold, color=blue];
m4_91 -> m4_71  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_124 -> m4_119  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_126  [key=2, style=dotted];
m4_131 -> m4_119  [key=2, style=dotted];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_126  [key=2, style=dotted];
m4_131 -> m4_24  [key=2, style=dotted];
m4_150 -> m4_119  [key=2, style=dotted];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_126  [key=2, style=dotted];
m4_150 -> m4_148  [key=0, style=bold, color=blue];
m4_173 -> m4_99  [key=2, style=dotted];
m4_173 -> m4_174  [key=0, style=solid];
m4_173 -> m4_24  [key=2, style=dotted];
m4_182 -> m4_99  [key=2, style=dotted];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_20  [key=2, style=dotted];
m4_31 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_34  [key=2, style=dotted];
m4_36 -> m4_33  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_38  [key=2, style=dotted];
m4_36 -> m4_34  [key=0, style=bold, color=blue];
m4_102 -> m4_33  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_62  [key=2, style=dotted];
m4_102 -> m4_100  [key=0, style=bold, color=blue];
m4_144 -> m4_33  [key=2, style=dotted];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_62  [key=2, style=dotted];
m4_144 -> m4_142  [key=0, style=bold, color=blue];
m4_170 -> m4_33  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_53  [key=2, style=dotted];
m4_170 -> m4_20  [key=2, style=dotted];
m4_55 -> m4_57  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_58  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_125 -> m4_123  [key=0, style=bold, color=blue];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_24  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_28  [key=0, style=bold, color=blue];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_24  [key=2, style=dotted];
m4_41 -> m4_39  [key=0, style=bold, color=blue];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_24  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_40  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_52  [key=0, style=bold, color=blue];
m4_83 -> m4_84  [key=0, style=solid, color=red];
m4_83 -> m4_24  [key=2, style=dotted, color=red];
m4_92 -> m4_90  [key=0, style=bold, color=blue];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_20  [key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_24  [key=2, style=dotted];
m4_132 -> m4_130  [key=0, style=bold, color=blue];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_24  [key=2, style=dotted];
m4_148 -> m4_146  [key=0, style=bold, color=blue];
m4_148 -> m4_149  [key=0, style=solid];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_24  [key=2, style=dotted];
m4_151 -> m4_149  [key=0, style=bold, color=blue];
m4_151 -> m4_152  [key=0, style=solid];
m4_160 -> m4_161  [key=0, style=solid];
m4_169 -> m4_170  [key=0, style=solid];
m4_172 -> m4_173  [key=0, style=solid];
m4_174 -> m4_172  [key=0, style=bold, color=blue];
m4_183 -> m4_181  [key=0, style=bold, color=blue];
m4_32 -> m4_30  [key=0, style=bold, color=blue];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_20  [key=2, style=dotted];
m4_61 -> m4_59  [key=0, style=bold, color=blue];
m4_61 -> m4_62  [key=0, style=solid];
m4_142 -> m4_140  [key=0, style=bold, color=blue];
m4_142 -> m4_143  [key=0, style=solid];
m4_171 -> m4_169  [key=0, style=bold, color=blue];
m4_56 -> m4_54  [key=0, style=bold, color=blue];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_20  [key=2, style=dotted];
m4_48 -> m4_46  [key=0, style=bold, color=blue];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_49  [key=2, style=dotted];
m4_47 -> m4_24  [key=2, style=dotted];
m4_52 -> m4_50  [key=0, style=bold, color=blue];
m4_52 -> m4_53  [key=0, style=solid];
m4_161 -> m4_34  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_24  [key=2, style=dotted];
m4_162 -> m4_160  [key=0, style=bold, color=blue];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_24  [key=2, style=dotted];
m4_23 -> m4_21  [key=0, style=bold, color=blue];
m4_175 -> m4_176  [key=0, style=solid];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_20  [key=2, style=dotted];
m4_176 -> m4_180  [key=2, style=dotted];
m4_176 -> m4_27  [key=2, style=dotted];
m4_177 -> m4_175  [key=0, style=bold, color=blue];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_98  [key=2, style=dotted];
m4_177 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_168  [key=2, style=dotted];
m4_178 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_179 -> m4_175  [key=0, style=bold, color=blue];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_24  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_63 -> m4_64  [key=0, style=solid, color=green];
m4_63 -> m4_61  [key=0, style=bold, color=blue];
m4_64 -> m4_65  [key=0, style=solid, color=green];
m4_64 -> m4_33  [key=2, style=dotted, color=green];
m4_64 -> m4_68  [key=1, style=dashed, color=green, label="lambda expression"];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_67  [key=2, style=dotted];
m4_65 -> m4_24  [key=2, style=dotted];
m4_66 -> m4_63  [key=0, style=bold, color=blue];
m4_66 -> m4_64  [key=0, style=bold, color=blue];
m4_67 -> m4_68  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_22  [key=2, style=dotted];
m4_134 -> m4_23  [key=2, style=dotted];
m4_134 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_134 -> m4_20  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_98  [key=2, style=dotted];
m4_135 -> m4_133  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_24  [key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_20  [key=2, style=dotted];
m4_100 -> m4_101  [key=0, style=solid];
m4_27 -> m4_25  [key=0, style=bold, color=blue];
m4_82 -> m4_83  [key=0, style=solid, color=red];
m4_82 -> m4_79  [key=0, style=bold, color=blue];
m4_57 -> m4_55  [key=0, style=bold, color=blue];
m4_33 -> m4_31  [key=0, style=bold, color=blue];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_24  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_83  [key=3, color=red, style=bold, label="Local variable HangFire.Redis.FetchedJobsWatcher watcher"];
m4_215 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_77  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_83  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_167  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_215 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m4_216 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_216 -> m4_212  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_217 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label=converter];
m5_8 -> m5_9  [key=0, style=solid, color=green];
m5_8 -> m5_10  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m5_8 -> m5_11  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m5_8 -> m5_12  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m5_8 -> m5_13  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m5_8 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m5_8 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m5_8 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m5_8 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m5_8 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m5_9 -> m5_10  [key=0, style=solid, color=green];
m5_9 -> m5_15  [key=2, style=dotted, color=green];
m5_10 -> m5_11  [key=0, style=solid, color=green];
m5_10 -> m5_15  [key=2, style=dotted, color=green];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_11 -> m5_16  [key=2, style=dotted, color=green];
m5_11 -> m5_17  [key=2, style=dotted, color=green];
m5_11 -> m5_15  [key=2, style=dotted, color=green];
m5_11 -> m5_18  [key=1, style=dashed, color=green, label="lambda expression"];
m5_12 -> m5_13  [key=0, style=solid, color=green];
m5_12 -> m5_15  [key=2, style=dotted, color=green];
m5_13 -> m5_14  [key=0, style=solid, color=green];
m5_13 -> m5_15  [key=2, style=dotted, color=green];
m5_14 -> m5_8  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_7  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=2, style=dotted];
m5_6 -> m5_0  [key=0, style=bold, color=blue];
m5_18 -> m5_19  [key=0, style=solid, color=green];
m5_19 -> m5_20  [key=0, style=solid, color=green];
m5_20 -> m5_18  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=2, style=dotted];
m6_17 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_18 -> m6_16  [key=0, style=bold, color=blue];
m6_33 -> m6_34  [key=0, style=solid];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_24  [key=2, style=dotted];
m6_34 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label=exception];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_23  [key=2, style=dotted];
m6_35 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_39  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_40  [key=2, style=dotted];
m6_38 -> m6_33  [key=0, style=bold, color=blue];
m6_15 -> m6_41  [key=0, style=solid];
m6_41 -> m6_15  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_7  [key=2, style=dotted];
m6_1 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=connection];
m6_2 -> m6_3  [key=0, style=solid, color=red];
m6_2 -> m6_8  [key=2, style=dotted];
m6_2 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_2 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_11  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid, color=red];
m6_3 -> m6_9  [key=2, style=dotted, color=red];
m6_3 -> m6_5  [key=1, style=dashed, color=red, label=state];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_10  [key=2, style=dotted];
m6_6 -> m6_0  [key=0, style=bold, color=blue];
m6_30 -> m6_31  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_14 -> m6_12  [key=0, style=bold, color=blue];
m6_20 -> m6_21  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=2, style=dotted];
m6_21 -> m6_24  [key=2, style=dotted];
m6_22 -> m6_20  [key=0, style=bold, color=blue];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_23  [key=2, style=dotted];
m6_32 -> m6_30  [key=0, style=bold, color=blue];
m6_25 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_19  [key=2, style=dotted];
m6_26 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=2, style=dotted];
m6_28 -> m6_25  [key=0, style=bold, color=blue];
m6_42 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts"];
m6_42 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts"];
m6_42 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts"];
m6_42 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts"];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_1 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_30  [key=0, style=bold, color=blue];
m9_27 -> m9_28  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=2, style=dotted];
m9_6 -> m9_4  [key=0, style=bold, color=blue];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=2, style=dotted];
m9_29 -> m9_27  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_19  [key=2, style=dotted];
m9_9 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label=connection];
m9_10 -> m9_11  [key=0, style=solid, color=red];
m9_10 -> m9_20  [key=2, style=dotted];
m9_10 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_10 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_24  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid, color=red];
m9_11 -> m9_21  [key=2, style=dotted, color=red];
m9_11 -> m9_14  [key=1, style=dashed, color=red, label=state];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_22  [key=2, style=dotted];
m9_12 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label=exception];
m9_12 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label=exception];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_23  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_7  [key=2, style=dotted];
m9_15 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label=context];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_26  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_25  [key=2, style=dotted];
m9_18 -> m9_8  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqTransactionType"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_2 -> m10_6  [key=0, style=solid];
m10_2 -> d10  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_8  [key=2, style=dotted];
m10_6 -> m10_0  [key=0, style=bold, color=blue];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m10_13 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_13 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_13 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_14 -> m10_15  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_33  [key=2, style=dotted];
m10_17 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_36  [key=2, style=dotted];
m10_21 -> m10_37  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m10_15 -> m10_16  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m10_16 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m10_16 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_34  [key=2, style=dotted];
m10_19 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_19 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_19 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_19 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_35  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_38  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_39  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_40  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label=message];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_29  [key=0, style=solid];
m10_23 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m10_23 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m10_24 -> m10_25  [key=0, style=solid];
m10_30 -> m10_16  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=0, style=solid];
m10_28 -> m10_32  [key=0, style=solid];
m10_32 -> m10_13  [key=0, style=bold, color=blue];
m10_35 -> m10_64  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_66  [key=2, style=dotted];
m10_64 -> m10_67  [key=2, style=dotted];
m10_65 -> m10_35  [key=0, style=bold, color=blue];
m10_34 -> m10_54  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_57  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_57 -> m10_58  [key=0, style=solid];
m10_56 -> m10_59  [key=0, style=solid];
m10_56 -> m10_61  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_62  [key=2, style=dotted];
m10_60 -> m10_59  [key=0, style=solid];
m10_60 -> m10_63  [key=2, style=dotted];
m10_59 -> m10_34  [key=0, style=bold, color=blue];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_35  [key=2, style=dotted];
m10_42 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label=messageQueue];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_49  [key=2, style=dotted];
m10_43 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label=message];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_52  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_50  [key=2, style=dotted];
m10_44 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_44 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_51  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_53  [key=2, style=dotted];
m10_48 -> m10_41  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_12  [key=2, style=dotted];
m10_11 -> m10_9  [key=0, style=bold, color=blue];
m10_68 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m10_68 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueue"];
m11_6 -> m11_7  [key=0, style=solid, color=green];
m11_3 -> m11_4  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_6  [key=2, style=dotted];
m11_4 -> m11_7  [key=2, style=dotted];
m11_4 -> m11_57  [key=2, style=dotted];
m11_4 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=from];
m11_5 -> m11_3  [key=0, style=bold, color=blue];
m11_5 -> m11_6  [key=0, style=solid, color=green];
m11_5 -> m11_57  [key=2, style=dotted];
m11_5 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m11_0 -> m11_1  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_59  [key=2, style=dotted];
m11_9 -> m11_60  [key=2, style=dotted];
m11_9 -> m11_61  [key=2, style=dotted];
m11_9 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label=pager];
m11_9 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label=pager];
m11_9 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label=pager];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_58  [key=2, style=dotted];
m11_8 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m11_8 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerSet"];
m11_8 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerSet"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_55  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_56  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_55  [key=2, style=dotted];
m11_13 -> m11_54  [key=0, style=solid];
m11_13 -> m11_55  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_55  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_61  [key=2, style=dotted];
m11_15 -> m11_63  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_55  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_61  [key=2, style=dotted];
m11_17 -> m11_63  [key=2, style=dotted];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_55  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_64  [key=2, style=dotted];
m11_19 -> m11_65  [key=2, style=dotted];
m11_19 -> m11_66  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_55  [key=2, style=dotted];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_55  [key=2, style=dotted];
m11_23 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_63  [key=2, style=dotted];
m11_23 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_55  [key=2, style=dotted];
m11_25 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_63  [key=2, style=dotted];
m11_25 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_55  [key=2, style=dotted];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_55  [key=2, style=dotted];
m11_29 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_63  [key=2, style=dotted];
m11_29 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_55  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_55  [key=2, style=dotted];
m11_32 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_61  [key=2, style=dotted];
m11_32 -> m11_63  [key=2, style=dotted];
m11_32 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_55  [key=2, style=dotted];
m11_34 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_67  [key=2, style=dotted];
m11_34 -> m11_66  [key=2, style=dotted];
m11_34 -> m11_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_55  [key=2, style=dotted];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_55  [key=2, style=dotted];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_55  [key=2, style=dotted];
m11_39 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_68  [key=2, style=dotted];
m11_39 -> m11_63  [key=2, style=dotted];
m11_39 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_55  [key=2, style=dotted];
m11_41 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_61  [key=2, style=dotted];
m11_41 -> m11_63  [key=2, style=dotted];
m11_41 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_55  [key=2, style=dotted];
m11_43 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_69  [key=2, style=dotted];
m11_43 -> m11_66  [key=2, style=dotted];
m11_43 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_55  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_55  [key=2, style=dotted];
m11_47 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> n10  [key=2, style=dotted];
m11_47 -> m11_63  [key=2, style=dotted];
m11_47 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_55  [key=2, style=dotted];
m11_49 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_63  [key=2, style=dotted];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_55  [key=2, style=dotted];
m11_51 -> m11_21  [key=0, style=solid];
m11_51 -> m11_55  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_55  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_71  [key=2, style=dotted];
m11_53 -> m11_65  [key=2, style=dotted];
m11_53 -> m11_66  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_62  [key=2, style=dotted];
m11_10 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label=processingJobs];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_14  [key=0, style=solid];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_21 -> m11_52  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_27 -> m11_31  [key=0, style=solid];
m11_27 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_27 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_38  [key=0, style=solid];
m11_36 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_36 -> m11_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_45 -> m11_51  [key=0, style=solid];
m11_45 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_54 -> m11_0  [key=0, style=bold, color=blue];
m11_72 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m11_72 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m12_31 -> m12_39  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_42  [key=0, style=solid];
m12_39 -> m12_44  [key=0, style=solid];
m12_40 -> m12_41  [key=0, style=solid];
m12_42 -> m12_43  [key=0, style=solid];
m12_44 -> m12_45  [key=0, style=solid];
m12_41 -> m12_46  [key=0, style=solid];
m12_43 -> m12_46  [key=0, style=solid];
m12_45 -> m12_46  [key=0, style=solid];
m12_47 -> m12_46  [key=0, style=solid];
m12_46 -> m12_31  [key=0, style=bold, color=blue];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m12_12 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m12_12 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_13 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_13 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_13 -> m12_24  [key=1, style=dashed, color=red, label=i];
m12_13 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_13 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_29  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_33  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_34  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_28  [key=0, style=solid];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_22  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_30  [key=2, style=dotted];
m12_22 -> m12_24  [key=1, style=dashed, color=red, label=nextTry];
m12_22 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m12_22 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m12_23 -> m12_24  [key=0, style=solid, color=red];
m12_23 -> m12_31  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid, color=red];
m12_24 -> m12_32  [key=2, style=dotted, color=red];
m12_24 -> m12_35  [key=1, style=dashed, color=red, label="lambda expression"];
m12_27 -> m12_14  [key=0, style=solid];
m12_27 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_16 -> m12_28  [key=0, style=solid];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_28  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_21 -> m12_28  [key=0, style=solid];
m12_28 -> m12_12  [key=0, style=bold, color=blue];
m12_48 -> m12_49  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_51  [key=2, style=dotted];
m12_50 -> m12_48  [key=0, style=bold, color=blue];
m12_35 -> m12_36  [key=0, style=solid];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_38  [key=2, style=dotted];
m12_37 -> m12_35  [key=0, style=bold, color=blue];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_57  [key=2, style=dotted];
m12_53 -> m12_58  [key=2, style=dotted];
m12_53 -> m12_59  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_60  [key=2, style=dotted];
m12_54 -> m12_61  [key=2, style=dotted];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_62  [key=2, style=dotted];
m12_55 -> m12_63  [key=2, style=dotted];
m12_56 -> m12_52  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ILongRunningProcess"];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_2 -> m12_8  [key=0, style=solid];
m12_2 -> d10  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_10  [key=2, style=dotted];
m12_4 -> m12_11  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_0  [key=0, style=bold, color=blue];
m12_64 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_24  [key=1, style=dashed, color=red, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_64 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m12_65 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_66 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_3 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ErrorPage"];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_2 -> m15_5  [key=0, style=solid];
m15_2 -> d10  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_5 -> m15_0  [key=0, style=bold, color=blue];
m15_7 -> m15_8  [key=0, style=solid];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_10  [key=2, style=dotted];
m15_8 -> m15_11  [key=2, style=dotted];
m15_8 -> m15_12  [key=2, style=dotted];
m15_8 -> m15_13  [key=2, style=dotted];
m15_9 -> m15_7  [key=0, style=bold, color=blue];
m15_14 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m15_14 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m15_14 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m16_8 -> m16_9  [key=0, style=solid];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> n0  [key=2, style=dotted];
m16_9 -> m16_12  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_13  [key=2, style=dotted];
m16_11 -> m16_8  [key=0, style=bold, color=blue];
m16_14 -> m16_15  [key=0, style=solid];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> n0  [key=2, style=dotted];
m16_15 -> m16_22  [key=2, style=dotted];
m16_15 -> m16_17  [key=1, style=dashed, color=darkseagreen4, label=state];
m16_15 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label=state];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_23  [key=2, style=dotted];
m16_16 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m16_16 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m16_16 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_24  [key=2, style=dotted];
m16_17 -> m16_13  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_25  [key=2, style=dotted];
m16_20 -> m16_13  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_13  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_13  [key=2, style=dotted];
m16_21 -> m16_14  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_1 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_2 -> m16_0  [key=0, style=bold, color=blue];
m16_4 -> m16_5  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> n0  [key=2, style=dotted];
m16_6 -> m16_4  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_7  [key=2, style=dotted];
m17_1 -> m17_8  [key=2, style=dotted];
m17_1 -> m17_9  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_10  [key=2, style=dotted];
m17_2 -> m17_5  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_11  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_12  [key=2, style=dotted];
m17_4 -> m17_0  [key=0, style=bold, color=blue];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_13  [key=2, style=dotted];
m17_5 -> m17_14  [key=2, style=dotted];
m17_5 -> m17_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_6 -> m17_0  [key=0, style=bold, color=blue];
m17_6 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m17_6 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m17_6 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m17_61 -> m17_62  [key=0, style=solid];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_53  [key=2, style=dotted];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_54  [key=2, style=dotted];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_49  [key=2, style=dotted];
m17_67 -> m17_68  [key=0, style=solid];
m17_67 -> m17_69  [key=2, style=dotted];
m17_67 -> m17_70  [key=2, style=dotted];
m17_67 -> m17_71  [key=2, style=dotted];
m17_62 -> m17_64  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_62 -> m17_67  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_47  [key=2, style=dotted];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_48  [key=2, style=dotted];
m17_68 -> m17_61  [key=0, style=bold, color=blue];
m17_29 -> m17_30  [key=0, style=solid];
m17_30 -> m17_18  [key=2, style=dotted];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_24  [key=2, style=dotted];
m17_32 -> m17_29  [key=0, style=bold, color=blue];
m17_37 -> m17_38  [key=0, style=solid];
m17_42 -> m17_43  [key=0, style=solid];
m17_42 -> m17_53  [key=2, style=dotted];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_54  [key=2, style=dotted];
m17_44 -> m17_55  [key=2, style=dotted];
m17_44 -> m17_45  [key=0, style=solid];
m17_44 -> m17_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_41 -> m17_42  [key=0, style=solid];
m17_41 -> m17_50  [key=2, style=dotted];
m17_41 -> n10  [key=2, style=dotted];
m17_41 -> m17_52  [key=2, style=dotted];
m17_45 -> m17_46  [key=0, style=solid];
m17_45 -> m17_56  [key=2, style=dotted];
m17_45 -> m17_24  [key=2, style=dotted];
m17_38 -> m17_41  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_38 -> m17_45  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_38 -> m17_39  [key=0, style=solid];
m17_38 -> m17_47  [key=2, style=dotted];
m17_38 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_40 -> m17_41  [key=0, style=solid];
m17_40 -> m17_49  [key=2, style=dotted];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_48  [key=2, style=dotted];
m17_46 -> m17_37  [key=0, style=bold, color=blue];
m17_72 -> m17_73  [key=0, style=solid];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_53  [key=2, style=dotted];
m17_78 -> m17_79  [key=0, style=solid];
m17_78 -> m17_54  [key=2, style=dotted];
m17_79 -> m17_55  [key=2, style=dotted];
m17_79 -> m17_80  [key=0, style=solid];
m17_79 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_76 -> m17_77  [key=0, style=solid];
m17_76 -> m17_50  [key=2, style=dotted];
m17_76 -> n10  [key=2, style=dotted];
m17_76 -> m17_52  [key=2, style=dotted];
m17_73 -> m17_76  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_73 -> m17_74  [key=0, style=solid];
m17_73 -> m17_47  [key=2, style=dotted];
m17_73 -> m17_75  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_75 -> m17_76  [key=0, style=solid];
m17_75 -> m17_49  [key=2, style=dotted];
m17_74 -> m17_75  [key=0, style=solid];
m17_74 -> m17_48  [key=2, style=dotted];
m17_80 -> m17_72  [key=0, style=bold, color=blue];
m17_53 -> m17_97  [key=0, style=solid];
m17_97 -> m17_98  [key=0, style=solid];
m17_97 -> m17_28  [key=2, style=dotted];
m17_98 -> m17_53  [key=0, style=bold, color=blue];
m17_81 -> m17_82  [key=0, style=solid];
m17_94 -> m17_95  [key=0, style=solid, color=green];
m17_95 -> m17_96  [key=0, style=solid, color=green];
m17_95 -> m17_18  [key=2, style=dotted, color=green];
m17_95 -> m17_60  [key=2, style=dotted, color=green];
m17_96 -> m17_94  [key=0, style=bold, color=blue];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_28  [key=2, style=dotted];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_36  [key=2, style=dotted];
m17_16 -> m17_18  [key=2, style=dotted];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_19  [key=2, style=dotted];
m17_58 -> m17_18  [key=2, style=dotted];
m17_58 -> m17_60  [key=2, style=dotted];
m17_58 -> m17_59  [key=0, style=solid];
m17_82 -> m17_18  [key=2, style=dotted];
m17_82 -> m17_60  [key=2, style=dotted];
m17_82 -> m17_83  [key=0, style=solid];
m17_15 -> m17_16  [key=0, style=solid];
m17_25 -> m17_26  [key=0, style=solid];
m17_27 -> m17_25  [key=0, style=bold, color=blue];
m17_33 -> m17_34  [key=0, style=solid];
m17_35 -> m17_33  [key=0, style=bold, color=blue];
m17_57 -> m17_58  [key=0, style=solid];
m17_17 -> m17_15  [key=0, style=bold, color=blue];
m17_59 -> m17_57  [key=0, style=bold, color=blue];
m17_83 -> m17_81  [key=0, style=bold, color=blue];
m17_88 -> m17_89  [key=0, style=solid];
m17_88 -> m17_50  [key=2, style=dotted];
m17_88 -> n10  [key=2, style=dotted];
m17_88 -> m17_52  [key=2, style=dotted];
m17_92 -> m17_93  [key=0, style=solid, color=green];
m17_92 -> m17_55  [key=2, style=dotted, color=green];
m17_92 -> m17_94  [key=1, style=dashed, color=green, label="lambda expression"];
m17_91 -> m17_92  [key=0, style=solid, color=green];
m17_91 -> m17_54  [key=2, style=dotted];
m17_90 -> m17_91  [key=0, style=solid];
m17_90 -> m17_53  [key=2, style=dotted];
m17_84 -> m17_85  [key=0, style=solid];
m17_89 -> m17_90  [key=0, style=solid];
m17_89 -> n10  [key=2, style=dotted];
m17_89 -> m17_52  [key=2, style=dotted];
m17_85 -> m17_89  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_85 -> m17_86  [key=0, style=solid];
m17_85 -> m17_47  [key=2, style=dotted];
m17_85 -> m17_87  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_85 -> m17_88  [key=1, style=dashed, color=darkseagreen4, label=redis];
m17_86 -> m17_87  [key=0, style=solid];
m17_86 -> m17_48  [key=2, style=dotted];
m17_87 -> m17_49  [key=2, style=dotted];
m17_87 -> m17_88  [key=0, style=solid];
m17_93 -> m17_84  [key=0, style=bold, color=blue];
m17_20 -> m17_21  [key=0, style=solid];
m17_21 -> m17_18  [key=2, style=dotted];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_24  [key=2, style=dotted];
m17_23 -> m17_20  [key=0, style=bold, color=blue];
m17_99 -> m17_92  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_99 -> m17_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [key=0, style=bold, color=blue];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_2  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m21_1 -> d39  [key=0, style=bold, color=blue];
m21_22 -> m21_23  [key=0, style=solid];
m21_23 -> m21_22  [key=0, style=bold, color=blue];
m21_26 -> m21_27  [key=0, style=solid];
m21_27 -> m21_26  [key=0, style=bold, color=blue];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_2  [key=0, style=bold, color=blue];
m21_18 -> m21_19  [key=0, style=solid];
m21_19 -> m21_18  [key=0, style=bold, color=blue];
m21_28 -> m21_29  [key=0, style=solid];
m21_29 -> m21_28  [key=0, style=bold, color=blue];
m21_8 -> m21_9  [key=0, style=solid];
m21_9 -> m21_8  [key=0, style=bold, color=blue];
m21_12 -> m21_13  [key=0, style=solid];
m21_13 -> m21_12  [key=0, style=bold, color=blue];
m21_30 -> m21_31  [key=0, style=solid];
m21_31 -> m21_30  [key=0, style=bold, color=blue];
m21_10 -> m21_11  [key=0, style=solid];
m21_11 -> m21_10  [key=0, style=bold, color=blue];
m21_20 -> m21_21  [key=0, style=solid];
m21_21 -> m21_20  [key=0, style=bold, color=blue];
m21_14 -> m21_15  [key=0, style=solid];
m21_15 -> m21_14  [key=0, style=bold, color=blue];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_4  [key=0, style=bold, color=blue];
m21_6 -> m21_7  [key=0, style=solid];
m21_7 -> m21_6  [key=0, style=bold, color=blue];
m21_16 -> m21_17  [key=0, style=solid];
m21_17 -> m21_16  [key=0, style=bold, color=blue];
m21_24 -> m21_25  [key=0, style=solid];
m21_25 -> m21_24  [key=0, style=bold, color=blue];
m22_25 -> m22_26  [key=0, style=solid];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_28  [key=2, style=dotted];
m22_27 -> m22_25  [key=0, style=bold, color=blue];
m22_33 -> m22_34  [key=0, style=solid];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_36  [key=2, style=dotted];
m22_35 -> m22_33  [key=0, style=bold, color=blue];
m22_21 -> m22_22  [key=0, style=solid];
m22_22 -> m22_23  [key=0, style=solid];
m22_22 -> m22_24  [key=2, style=dotted];
m22_23 -> m22_21  [key=0, style=bold, color=blue];
m22_20 -> m22_50  [key=0, style=solid];
m22_20 -> m22_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_20 -> m22_11  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
m22_50 -> m22_51  [key=0, style=solid];
m22_50 -> m22_52  [key=0, style=solid];
m22_50 -> m22_53  [key=2, style=dotted];
m22_51 -> m22_52  [key=0, style=solid];
m22_51 -> m22_54  [key=2, style=dotted];
m22_51 -> m22_55  [key=2, style=dotted];
m22_52 -> m22_20  [key=0, style=bold, color=blue];
m22_37 -> m22_38  [key=0, style=solid];
m22_38 -> m22_39  [key=0, style=solid];
m22_38 -> m22_29  [key=2, style=dotted];
m22_38 -> m22_40  [key=2, style=dotted];
m22_39 -> m22_37  [key=0, style=bold, color=blue];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_37  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime value"];
m22_30 -> m22_31  [key=0, style=solid];
m22_31 -> m22_32  [key=0, style=solid];
m22_31 -> m22_31  [key=1, style=dashed, color=darkseagreen4, label=elapsedTime];
m22_32 -> m22_29  [key=0, style=bold, color=blue];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m22_7 -> m22_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type jobType"];
m22_7 -> m22_11  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetQueue"];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_10  [key=0, style=solid];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_16  [key=2, style=dotted];
m22_10 -> m22_17  [key=2, style=dotted];
m22_10 -> m22_18  [key=2, style=dotted];
m22_9 -> m22_14  [key=0, style=solid];
m22_9 -> d10  [key=2, style=dotted];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_19  [key=2, style=dotted];
m22_11 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_20  [key=2, style=dotted];
m22_13 -> m22_14  [key=0, style=solid];
m22_14 -> m22_7  [key=0, style=bold, color=blue];
m22_45 -> m22_46  [key=0, style=solid];
m22_45 -> m22_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_45 -> m22_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? FromNullableStringTimestamp"];
m22_45 -> m22_41  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? FromNullableStringTimestamp"];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_48  [key=0, style=solid];
m22_46 -> m22_19  [key=2, style=dotted];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_41  [key=2, style=dotted];
m22_47 -> m22_49  [key=0, style=solid];
m22_49 -> m22_45  [key=0, style=bold, color=blue];
m22_41 -> m22_42  [key=0, style=solid, color=red];
m22_41 -> m22_33  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime FromStringTimestamp"];
m22_41 -> m22_45  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m22_42 -> m22_43  [key=0, style=solid, color=red];
m22_42 -> m22_44  [key=2, style=dotted, color=red];
m22_42 -> m22_33  [key=2, style=dotted, color=red];
m22_43 -> m22_41  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string TryToGetQueue"];
m22_0 -> m22_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string TryToGetQueue"];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_6  [key=2, style=dotted];
m22_1 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label=type];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_4  [key=0, style=solid];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_7  [key=2, style=dotted];
m22_3 -> m22_5  [key=0, style=solid];
m22_5 -> m22_0  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_8  [key=2, style=dotted];
m23_1 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label=connection];
m23_2 -> m23_3  [key=0, style=solid, color=red];
m23_2 -> m23_9  [key=2, style=dotted];
m23_2 -> m23_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_2 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_13  [key=2, style=dotted];
m23_3 -> m23_4  [key=0, style=solid, color=red];
m23_3 -> m23_10  [key=2, style=dotted, color=red];
m23_3 -> m23_6  [key=1, style=dashed, color=red, label=state];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_11  [key=2, style=dotted];
m23_4 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_12  [key=2, style=dotted];
m23_7 -> m23_0  [key=0, style=bold, color=blue];
m23_97 -> m23_98  [key=0, style=solid];
m23_98 -> m23_99  [key=0, style=solid];
m23_98 -> m23_46  [key=2, style=dotted];
m23_98 -> m23_24  [key=2, style=dotted];
m23_98 -> m23_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_99 -> m23_100  [key=0, style=solid];
m23_99 -> m23_61  [key=2, style=dotted];
m23_99 -> m23_101  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_100 -> m23_101  [key=0, style=solid];
m23_100 -> m23_46  [key=2, style=dotted];
m23_100 -> m23_105  [key=2, style=dotted];
m23_100 -> m23_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_100 -> m23_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_101 -> m23_102  [key=0, style=solid];
m23_101 -> m23_62  [key=2, style=dotted];
m23_102 -> m23_103  [key=0, style=solid];
m23_102 -> m23_23  [key=2, style=dotted];
m23_102 -> m23_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_103 -> m23_104  [key=0, style=solid];
m23_103 -> m23_106  [key=2, style=dotted];
m23_103 -> m23_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_104 -> m23_97  [key=0, style=bold, color=blue];
m23_41 -> m23_42  [key=0, style=solid];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_46  [key=2, style=dotted];
m23_42 -> m23_24  [key=2, style=dotted];
m23_42 -> m23_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_43 -> m23_44  [key=0, style=solid];
m23_43 -> m23_23  [key=2, style=dotted];
m23_43 -> m23_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_44 -> m23_45  [key=0, style=solid];
m23_44 -> m23_24  [key=2, style=dotted];
m23_44 -> m23_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_45 -> m23_41  [key=0, style=bold, color=blue];
m23_251 -> m23_252  [key=0, style=solid];
m23_252 -> m23_253  [key=0, style=solid];
m23_252 -> m23_128  [key=2, style=dotted];
m23_252 -> m23_254  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m23_252 -> m23_260  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m23_253 -> m23_254  [key=0, style=solid];
m23_253 -> m23_128  [key=2, style=dotted];
m23_253 -> m23_255  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m23_254 -> m23_255  [key=0, style=solid];
m23_254 -> m23_62  [key=2, style=dotted];
m23_260 -> m23_261  [key=0, style=solid];
m23_260 -> m23_36  [key=2, style=dotted];
m23_260 -> m23_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_255 -> m23_256  [key=0, style=solid];
m23_255 -> m23_62  [key=2, style=dotted];
m23_256 -> m23_257  [key=0, style=solid];
m23_256 -> m23_237  [key=2, style=dotted];
m23_256 -> m23_260  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_256 -> m23_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_256 -> m23_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_257 -> m23_258  [key=0, style=solid];
m23_257 -> m23_46  [key=2, style=dotted];
m23_257 -> m23_238  [key=2, style=dotted];
m23_257 -> m23_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_258 -> m23_259  [key=0, style=solid];
m23_258 -> m23_23  [key=2, style=dotted];
m23_258 -> m23_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_259 -> m23_260  [key=0, style=solid];
m23_259 -> m23_24  [key=2, style=dotted];
m23_259 -> m23_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_261 -> m23_251  [key=0, style=bold, color=blue];
m23_53 -> m23_54  [key=0, style=solid];
m23_54 -> m23_55  [key=0, style=solid];
m23_54 -> m23_61  [key=2, style=dotted];
m23_54 -> m23_59  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_55 -> m23_56  [key=0, style=solid];
m23_55 -> m23_62  [key=2, style=dotted];
m23_59 -> m23_60  [key=0, style=solid];
m23_59 -> m23_36  [key=2, style=dotted];
m23_59 -> m23_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_56 -> m23_57  [key=0, style=solid];
m23_56 -> m23_46  [key=2, style=dotted];
m23_56 -> m23_24  [key=2, style=dotted];
m23_56 -> m23_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_23  [key=2, style=dotted];
m23_57 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_58 -> m23_59  [key=0, style=solid];
m23_58 -> m23_24  [key=2, style=dotted];
m23_58 -> m23_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_60 -> m23_53  [key=0, style=bold, color=blue];
m23_23 -> m23_328  [key=0, style=solid];
m23_328 -> m23_329  [key=0, style=solid];
m23_328 -> m23_330  [key=2, style=dotted];
m23_329 -> m23_23  [key=0, style=bold, color=blue];
m23_18 -> m23_19  [key=0, style=solid];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_23  [key=2, style=dotted];
m23_19 -> m23_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_24  [key=2, style=dotted];
m23_20 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_25  [key=2, style=dotted];
m23_22 -> m23_18  [key=0, style=bold, color=blue];
m23_119 -> m23_120  [key=0, style=solid];
m23_120 -> m23_121  [key=0, style=solid];
m23_120 -> m23_128  [key=2, style=dotted];
m23_120 -> m23_122  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_120 -> m23_124  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_121 -> m23_122  [key=0, style=solid];
m23_121 -> m23_62  [key=2, style=dotted];
m23_122 -> m23_123  [key=0, style=solid];
m23_122 -> m23_46  [key=2, style=dotted];
m23_122 -> m23_84  [key=2, style=dotted];
m23_122 -> m23_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_124 -> m23_125  [key=0, style=solid];
m23_124 -> m23_46  [key=2, style=dotted];
m23_124 -> m23_84  [key=2, style=dotted];
m23_124 -> m23_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_123 -> m23_124  [key=0, style=solid];
m23_123 -> m23_46  [key=2, style=dotted];
m23_123 -> m23_84  [key=2, style=dotted];
m23_123 -> m23_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_125 -> m23_126  [key=0, style=solid];
m23_125 -> m23_23  [key=2, style=dotted];
m23_126 -> m23_127  [key=0, style=solid];
m23_126 -> m23_35  [key=2, style=dotted];
m23_127 -> m23_119  [key=0, style=bold, color=blue];
m23_164 -> m23_165  [key=0, style=solid];
m23_165 -> m23_166  [key=0, style=solid];
m23_165 -> m23_128  [key=2, style=dotted];
m23_165 -> m23_167  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_165 -> m23_171  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_166 -> m23_167  [key=0, style=solid];
m23_166 -> m23_62  [key=2, style=dotted];
m23_167 -> m23_168  [key=0, style=solid];
m23_167 -> m23_46  [key=2, style=dotted];
m23_167 -> m23_105  [key=2, style=dotted];
m23_167 -> m23_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_167 -> m23_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_171 -> m23_172  [key=0, style=solid];
m23_171 -> m23_36  [key=2, style=dotted];
m23_171 -> m23_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_168 -> m23_169  [key=0, style=solid];
m23_168 -> m23_23  [key=2, style=dotted];
m23_169 -> m23_170  [key=0, style=solid];
m23_169 -> m23_35  [key=2, style=dotted];
m23_170 -> m23_171  [key=0, style=solid];
m23_170 -> m23_36  [key=2, style=dotted];
m23_170 -> m23_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_172 -> m23_164  [key=0, style=bold, color=blue];
m23_228 -> m23_229  [key=0, style=solid];
m23_229 -> m23_230  [key=0, style=solid];
m23_229 -> m23_128  [key=2, style=dotted];
m23_229 -> m23_235  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_230 -> m23_231  [key=0, style=solid];
m23_230 -> m23_62  [key=2, style=dotted];
m23_235 -> m23_236  [key=0, style=solid];
m23_235 -> m23_36  [key=2, style=dotted];
m23_235 -> m23_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_231 -> m23_232  [key=0, style=solid];
m23_231 -> m23_237  [key=2, style=dotted];
m23_231 -> m23_235  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_231 -> m23_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_231 -> m23_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_232 -> m23_233  [key=0, style=solid];
m23_232 -> m23_46  [key=2, style=dotted];
m23_232 -> m23_238  [key=2, style=dotted];
m23_232 -> m23_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_233 -> m23_234  [key=0, style=solid];
m23_233 -> m23_23  [key=2, style=dotted];
m23_233 -> m23_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_234 -> m23_235  [key=0, style=solid];
m23_234 -> m23_24  [key=2, style=dotted];
m23_234 -> m23_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_236 -> m23_228  [key=0, style=bold, color=blue];
m23_185 -> m23_186  [key=0, style=solid];
m23_186 -> m23_187  [key=0, style=solid];
m23_186 -> m23_128  [key=2, style=dotted];
m23_186 -> m23_188  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m23_186 -> m23_193  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m23_187 -> m23_188  [key=0, style=solid];
m23_187 -> m23_128  [key=2, style=dotted];
m23_187 -> m23_189  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m23_187 -> m23_190  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m23_188 -> m23_189  [key=0, style=solid];
m23_188 -> m23_62  [key=2, style=dotted];
m23_193 -> m23_194  [key=0, style=solid];
m23_193 -> m23_36  [key=2, style=dotted];
m23_193 -> m23_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_189 -> m23_190  [key=0, style=solid];
m23_189 -> m23_62  [key=2, style=dotted];
m23_190 -> m23_191  [key=0, style=solid];
m23_190 -> m23_46  [key=2, style=dotted];
m23_190 -> m23_105  [key=2, style=dotted];
m23_190 -> m23_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_190 -> m23_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_191 -> m23_192  [key=0, style=solid];
m23_191 -> m23_23  [key=2, style=dotted];
m23_192 -> m23_193  [key=0, style=solid];
m23_192 -> m23_35  [key=2, style=dotted];
m23_194 -> m23_185  [key=0, style=bold, color=blue];
m23_73 -> m23_74  [key=0, style=solid];
m23_74 -> m23_75  [key=0, style=solid];
m23_74 -> m23_61  [key=2, style=dotted];
m23_74 -> m23_77  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m23_74 -> m23_78  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m23_75 -> m23_76  [key=0, style=solid];
m23_75 -> m23_61  [key=2, style=dotted];
m23_75 -> m23_79  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m23_77 -> m23_78  [key=0, style=solid];
m23_77 -> m23_46  [key=2, style=dotted];
m23_77 -> m23_84  [key=2, style=dotted];
m23_77 -> m23_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_78 -> m23_79  [key=0, style=solid];
m23_78 -> m23_62  [key=2, style=dotted];
m23_76 -> m23_77  [key=0, style=solid];
m23_76 -> m23_46  [key=2, style=dotted];
m23_76 -> m23_84  [key=2, style=dotted];
m23_76 -> m23_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_79 -> m23_80  [key=0, style=solid];
m23_79 -> m23_62  [key=2, style=dotted];
m23_80 -> m23_81  [key=0, style=solid];
m23_80 -> m23_46  [key=2, style=dotted];
m23_80 -> m23_24  [key=2, style=dotted];
m23_80 -> m23_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_81 -> m23_82  [key=0, style=solid];
m23_81 -> m23_23  [key=2, style=dotted];
m23_81 -> m23_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_82 -> m23_83  [key=0, style=solid];
m23_82 -> m23_24  [key=2, style=dotted];
m23_82 -> m23_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_83 -> m23_73  [key=0, style=bold, color=blue];
m23_30 -> m23_31  [key=0, style=solid];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_23  [key=2, style=dotted];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_35  [key=2, style=dotted];
m23_33 -> m23_34  [key=0, style=solid];
m23_33 -> m23_36  [key=2, style=dotted];
m23_33 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_34 -> m23_30  [key=0, style=bold, color=blue];
m23_324 -> m23_325  [key=0, style=solid];
m23_14 -> m23_15  [key=0, style=solid];
m23_15 -> m23_16  [key=0, style=solid];
m23_15 -> m23_17  [key=2, style=dotted];
m23_16 -> m23_14  [key=0, style=bold, color=blue];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_29  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid];
m23_28 -> m23_26  [key=0, style=bold, color=blue];
m23_37 -> m23_38  [key=0, style=solid];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_40  [key=2, style=dotted];
m23_39 -> m23_37  [key=0, style=bold, color=blue];
m23_47 -> m23_48  [key=0, style=solid];
m23_51 -> m23_52  [key=0, style=solid];
m23_51 -> m23_35  [key=2, style=dotted];
m23_50 -> m23_51  [key=0, style=solid];
m23_48 -> m23_49  [key=0, style=solid];
m23_48 -> m23_40  [key=2, style=dotted];
m23_49 -> m23_47  [key=0, style=bold, color=blue];
m23_52 -> m23_50  [key=0, style=bold, color=blue];
m23_63 -> m23_64  [key=0, style=solid];
m23_67 -> m23_68  [key=0, style=solid];
m23_67 -> m23_35  [key=2, style=dotted];
m23_66 -> m23_67  [key=0, style=solid];
m23_69 -> m23_70  [key=0, style=solid];
m23_64 -> m23_65  [key=0, style=solid];
m23_64 -> m23_40  [key=2, style=dotted];
m23_65 -> m23_63  [key=0, style=bold, color=blue];
m23_68 -> m23_66  [key=0, style=bold, color=blue];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_24  [key=2, style=dotted];
m23_70 -> m23_72  [key=2, style=dotted];
m23_71 -> m23_69  [key=0, style=bold, color=blue];
m23_85 -> m23_86  [key=0, style=solid];
m23_88 -> m23_89  [key=0, style=solid];
m23_91 -> m23_92  [key=0, style=solid];
m23_95 -> m23_96  [key=0, style=solid];
m23_95 -> m23_35  [key=2, style=dotted];
m23_94 -> m23_95  [key=0, style=solid];
m23_86 -> m23_87  [key=0, style=solid];
m23_86 -> m23_24  [key=2, style=dotted];
m23_86 -> m23_72  [key=2, style=dotted];
m23_87 -> m23_85  [key=0, style=bold, color=blue];
m23_89 -> m23_90  [key=0, style=solid];
m23_89 -> m23_24  [key=2, style=dotted];
m23_89 -> m23_72  [key=2, style=dotted];
m23_90 -> m23_88  [key=0, style=bold, color=blue];
m23_92 -> m23_93  [key=0, style=solid];
m23_92 -> m23_40  [key=2, style=dotted];
m23_93 -> m23_91  [key=0, style=bold, color=blue];
m23_96 -> m23_94  [key=0, style=bold, color=blue];
m23_107 -> m23_108  [key=0, style=solid];
m23_110 -> m23_111  [key=0, style=solid];
m23_113 -> m23_114  [key=0, style=solid];
m23_117 -> m23_118  [key=0, style=solid];
m23_117 -> m23_35  [key=2, style=dotted];
m23_116 -> m23_117  [key=0, style=solid];
m23_108 -> m23_109  [key=0, style=solid];
m23_108 -> m23_40  [key=2, style=dotted];
m23_109 -> m23_107  [key=0, style=bold, color=blue];
m23_111 -> m23_112  [key=0, style=solid];
m23_111 -> m23_24  [key=2, style=dotted];
m23_111 -> m23_72  [key=2, style=dotted];
m23_112 -> m23_110  [key=0, style=bold, color=blue];
m23_114 -> m23_115  [key=0, style=solid];
m23_115 -> m23_113  [key=0, style=bold, color=blue];
m23_118 -> m23_116  [key=0, style=bold, color=blue];
m23_129 -> m23_130  [key=0, style=solid];
m23_133 -> m23_134  [key=0, style=solid];
m23_136 -> m23_137  [key=0, style=solid];
m23_130 -> m23_131  [key=0, style=solid];
m23_130 -> m23_24  [key=2, style=dotted];
m23_130 -> m23_132  [key=2, style=dotted];
m23_131 -> m23_129  [key=0, style=bold, color=blue];
m23_134 -> m23_135  [key=0, style=solid];
m23_134 -> m23_40  [key=2, style=dotted];
m23_135 -> m23_133  [key=0, style=bold, color=blue];
m23_137 -> m23_138  [key=0, style=solid];
m23_137 -> m23_24  [key=2, style=dotted];
m23_137 -> m23_139  [key=2, style=dotted];
m23_138 -> m23_136  [key=0, style=bold, color=blue];
m23_152 -> m23_153  [key=0, style=solid];
m23_155 -> m23_156  [key=0, style=solid];
m23_158 -> m23_159  [key=0, style=solid];
m23_161 -> m23_162  [key=0, style=solid];
m23_153 -> m23_154  [key=0, style=solid];
m23_153 -> m23_24  [key=2, style=dotted];
m23_153 -> m23_132  [key=2, style=dotted];
m23_154 -> m23_152  [key=0, style=bold, color=blue];
m23_156 -> m23_157  [key=0, style=solid];
m23_156 -> m23_24  [key=2, style=dotted];
m23_156 -> m23_132  [key=2, style=dotted];
m23_157 -> m23_155  [key=0, style=bold, color=blue];
m23_159 -> m23_160  [key=0, style=solid];
m23_159 -> m23_24  [key=2, style=dotted];
m23_159 -> m23_139  [key=2, style=dotted];
m23_160 -> m23_158  [key=0, style=bold, color=blue];
m23_162 -> m23_163  [key=0, style=solid];
m23_162 -> m23_24  [key=2, style=dotted];
m23_162 -> m23_139  [key=2, style=dotted];
m23_163 -> m23_161  [key=0, style=bold, color=blue];
m23_173 -> m23_174  [key=0, style=solid];
m23_176 -> m23_177  [key=0, style=solid];
m23_179 -> m23_180  [key=0, style=solid];
m23_182 -> m23_183  [key=0, style=solid];
m23_174 -> m23_175  [key=0, style=solid];
m23_174 -> m23_24  [key=2, style=dotted];
m23_174 -> m23_132  [key=2, style=dotted];
m23_175 -> m23_173  [key=0, style=bold, color=blue];
m23_177 -> m23_178  [key=0, style=solid];
m23_178 -> m23_176  [key=0, style=bold, color=blue];
m23_180 -> m23_181  [key=0, style=solid];
m23_180 -> m23_40  [key=2, style=dotted];
m23_181 -> m23_179  [key=0, style=bold, color=blue];
m23_183 -> m23_184  [key=0, style=solid];
m23_183 -> m23_24  [key=2, style=dotted];
m23_183 -> m23_139  [key=2, style=dotted];
m23_184 -> m23_182  [key=0, style=bold, color=blue];
m23_195 -> m23_196  [key=0, style=solid];
m23_198 -> m23_199  [key=0, style=solid];
m23_201 -> m23_202  [key=0, style=solid];
m23_196 -> m23_197  [key=0, style=solid];
m23_196 -> m23_24  [key=2, style=dotted];
m23_196 -> m23_132  [key=2, style=dotted];
m23_197 -> m23_195  [key=0, style=bold, color=blue];
m23_199 -> m23_200  [key=0, style=solid];
m23_200 -> m23_198  [key=0, style=bold, color=blue];
m23_202 -> m23_203  [key=0, style=solid];
m23_202 -> m23_24  [key=2, style=dotted];
m23_202 -> m23_139  [key=2, style=dotted];
m23_202 -> m23_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_203 -> m23_201  [key=0, style=bold, color=blue];
m23_204 -> m23_205  [key=0, style=solid];
m23_205 -> m23_206  [key=0, style=solid];
m23_206 -> m23_204  [key=0, style=bold, color=blue];
m23_216 -> m23_217  [key=0, style=solid];
m23_220 -> m23_221  [key=0, style=solid];
m23_220 -> m23_35  [key=2, style=dotted];
m23_219 -> m23_220  [key=0, style=solid];
m23_222 -> m23_223  [key=0, style=solid];
m23_225 -> m23_226  [key=0, style=solid];
m23_217 -> m23_218  [key=0, style=solid];
m23_217 -> m23_24  [key=2, style=dotted];
m23_217 -> m23_132  [key=2, style=dotted];
m23_218 -> m23_216  [key=0, style=bold, color=blue];
m23_221 -> m23_219  [key=0, style=bold, color=blue];
m23_223 -> m23_224  [key=0, style=solid];
m23_223 -> m23_40  [key=2, style=dotted];
m23_224 -> m23_222  [key=0, style=bold, color=blue];
m23_226 -> m23_227  [key=0, style=solid];
m23_226 -> m23_24  [key=2, style=dotted];
m23_226 -> m23_139  [key=2, style=dotted];
m23_227 -> m23_225  [key=0, style=bold, color=blue];
m23_246 -> m23_247  [key=0, style=solid];
m23_246 -> m23_24  [key=2, style=dotted];
m23_246 -> m23_139  [key=2, style=dotted];
m23_246 -> m23_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_249 -> m23_250  [key=0, style=solid];
m23_239 -> m23_240  [key=0, style=solid];
m23_243 -> m23_244  [key=0, style=solid];
m23_243 -> m23_35  [key=2, style=dotted];
m23_242 -> m23_243  [key=0, style=solid];
m23_245 -> m23_246  [key=0, style=solid];
m23_240 -> m23_241  [key=0, style=solid];
m23_240 -> m23_40  [key=2, style=dotted];
m23_241 -> m23_239  [key=0, style=bold, color=blue];
m23_244 -> m23_242  [key=0, style=bold, color=blue];
m23_247 -> m23_245  [key=0, style=bold, color=blue];
m23_248 -> m23_249  [key=0, style=solid];
m23_250 -> m23_248  [key=0, style=bold, color=blue];
m23_269 -> m23_270  [key=0, style=solid];
m23_269 -> m23_24  [key=2, style=dotted];
m23_269 -> m23_139  [key=2, style=dotted];
m23_269 -> m23_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_272 -> m23_273  [key=0, style=solid];
m23_262 -> m23_263  [key=0, style=solid];
m23_266 -> m23_267  [key=0, style=solid];
m23_266 -> m23_35  [key=2, style=dotted];
m23_265 -> m23_266  [key=0, style=solid];
m23_268 -> m23_269  [key=0, style=solid];
m23_263 -> m23_264  [key=0, style=solid];
m23_263 -> m23_40  [key=2, style=dotted];
m23_264 -> m23_262  [key=0, style=bold, color=blue];
m23_267 -> m23_265  [key=0, style=bold, color=blue];
m23_270 -> m23_268  [key=0, style=bold, color=blue];
m23_271 -> m23_272  [key=0, style=solid];
m23_273 -> m23_271  [key=0, style=bold, color=blue];
m23_287 -> m23_288  [key=0, style=solid];
m23_287 -> m23_24  [key=2, style=dotted];
m23_287 -> m23_139  [key=2, style=dotted];
m23_287 -> m23_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_290 -> m23_291  [key=0, style=solid];
m23_283 -> m23_284  [key=0, style=solid];
m23_286 -> m23_287  [key=0, style=solid];
m23_292 -> m23_293  [key=0, style=solid];
m23_296 -> m23_297  [key=0, style=solid];
m23_296 -> m23_35  [key=2, style=dotted];
m23_295 -> m23_296  [key=0, style=solid];
m23_284 -> m23_285  [key=0, style=solid];
m23_284 -> m23_40  [key=2, style=dotted];
m23_285 -> m23_283  [key=0, style=bold, color=blue];
m23_288 -> m23_286  [key=0, style=bold, color=blue];
m23_289 -> m23_290  [key=0, style=solid];
m23_291 -> m23_289  [key=0, style=bold, color=blue];
m23_293 -> m23_294  [key=0, style=solid];
m23_294 -> m23_292  [key=0, style=bold, color=blue];
m23_297 -> m23_295  [key=0, style=bold, color=blue];
m23_309 -> m23_310  [key=0, style=solid];
m23_312 -> m23_313  [key=0, style=solid];
m23_315 -> m23_316  [key=0, style=solid];
m23_319 -> m23_320  [key=0, style=solid];
m23_319 -> m23_35  [key=2, style=dotted];
m23_318 -> m23_319  [key=0, style=solid];
m23_321 -> m23_322  [key=0, style=solid];
m23_310 -> m23_311  [key=0, style=solid];
m23_310 -> m23_40  [key=2, style=dotted];
m23_311 -> m23_309  [key=0, style=bold, color=blue];
m23_313 -> m23_314  [key=0, style=solid];
m23_313 -> m23_24  [key=2, style=dotted];
m23_313 -> m23_139  [key=2, style=dotted];
m23_314 -> m23_312  [key=0, style=bold, color=blue];
m23_316 -> m23_317  [key=0, style=solid];
m23_317 -> m23_315  [key=0, style=bold, color=blue];
m23_320 -> m23_318  [key=0, style=bold, color=blue];
m23_322 -> m23_323  [key=0, style=solid];
m23_322 -> m23_24  [key=2, style=dotted];
m23_322 -> m23_139  [key=2, style=dotted];
m23_322 -> m23_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_323 -> m23_321  [key=0, style=bold, color=blue];
m23_325 -> m23_326  [key=0, style=solid];
m23_326 -> m23_324  [key=0, style=bold, color=blue];
m23_207 -> m23_208  [key=0, style=solid];
m23_208 -> m23_209  [key=0, style=solid];
m23_208 -> m23_128  [key=2, style=dotted];
m23_208 -> m23_210  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_208 -> m23_214  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_209 -> m23_210  [key=0, style=solid];
m23_209 -> m23_62  [key=2, style=dotted];
m23_210 -> m23_211  [key=0, style=solid];
m23_210 -> m23_46  [key=2, style=dotted];
m23_210 -> m23_24  [key=2, style=dotted];
m23_210 -> m23_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_214 -> m23_215  [key=0, style=solid];
m23_214 -> m23_36  [key=2, style=dotted];
m23_214 -> m23_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_211 -> m23_212  [key=0, style=solid];
m23_211 -> m23_23  [key=2, style=dotted];
m23_211 -> m23_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_212 -> m23_213  [key=0, style=solid];
m23_212 -> m23_24  [key=2, style=dotted];
m23_212 -> m23_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_213 -> m23_214  [key=0, style=solid];
m23_213 -> m23_36  [key=2, style=dotted];
m23_213 -> m23_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_215 -> m23_207  [key=0, style=bold, color=blue];
m23_298 -> m23_299  [key=0, style=solid];
m23_299 -> m23_300  [key=0, style=solid];
m23_299 -> m23_128  [key=2, style=dotted];
m23_299 -> m23_301  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m23_299 -> m23_307  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m23_300 -> m23_301  [key=0, style=solid];
m23_300 -> m23_128  [key=2, style=dotted];
m23_300 -> m23_302  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m23_300 -> m23_304  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m23_301 -> m23_302  [key=0, style=solid];
m23_301 -> m23_62  [key=2, style=dotted];
m23_307 -> m23_308  [key=0, style=solid];
m23_307 -> m23_36  [key=2, style=dotted];
m23_307 -> m23_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_302 -> m23_303  [key=0, style=solid];
m23_302 -> m23_62  [key=2, style=dotted];
m23_304 -> m23_305  [key=0, style=solid];
m23_304 -> m23_46  [key=2, style=dotted];
m23_304 -> m23_105  [key=2, style=dotted];
m23_304 -> m23_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_304 -> m23_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_303 -> m23_304  [key=0, style=solid];
m23_303 -> m23_46  [key=2, style=dotted];
m23_303 -> m23_24  [key=2, style=dotted];
m23_303 -> m23_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_305 -> m23_306  [key=0, style=solid];
m23_305 -> m23_23  [key=2, style=dotted];
m23_305 -> m23_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_306 -> m23_307  [key=0, style=solid];
m23_306 -> m23_106  [key=2, style=dotted];
m23_306 -> m23_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_308 -> m23_298  [key=0, style=bold, color=blue];
m23_274 -> m23_275  [key=0, style=solid];
m23_275 -> m23_276  [key=0, style=solid];
m23_275 -> m23_128  [key=2, style=dotted];
m23_275 -> m23_279  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_276 -> m23_277  [key=0, style=solid];
m23_276 -> m23_62  [key=2, style=dotted];
m23_279 -> m23_280  [key=0, style=solid];
m23_279 -> m23_46  [key=2, style=dotted];
m23_279 -> m23_105  [key=2, style=dotted];
m23_279 -> m23_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_279 -> m23_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_277 -> m23_278  [key=0, style=solid];
m23_277 -> m23_237  [key=2, style=dotted];
m23_277 -> m23_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_277 -> m23_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_277 -> m23_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_278 -> m23_279  [key=0, style=solid];
m23_278 -> m23_46  [key=2, style=dotted];
m23_278 -> m23_238  [key=2, style=dotted];
m23_278 -> m23_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_280 -> m23_281  [key=0, style=solid];
m23_280 -> m23_23  [key=2, style=dotted];
m23_280 -> m23_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_281 -> m23_282  [key=0, style=solid];
m23_281 -> m23_106  [key=2, style=dotted];
m23_281 -> m23_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_282 -> m23_274  [key=0, style=bold, color=blue];
m23_17 -> m23_327  [key=0, style=solid];
m23_327 -> m23_17  [key=0, style=bold, color=blue];
m23_140 -> m23_141  [key=0, style=solid];
m23_141 -> m23_142  [key=0, style=solid];
m23_141 -> m23_128  [key=2, style=dotted];
m23_141 -> m23_143  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m23_141 -> m23_145  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m23_141 -> m23_148  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m23_142 -> m23_143  [key=0, style=solid];
m23_142 -> m23_128  [key=2, style=dotted];
m23_142 -> m23_144  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m23_142 -> m23_146  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m23_142 -> m23_147  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m23_143 -> m23_144  [key=0, style=solid];
m23_143 -> m23_62  [key=2, style=dotted];
m23_145 -> m23_146  [key=0, style=solid];
m23_145 -> m23_46  [key=2, style=dotted];
m23_145 -> m23_84  [key=2, style=dotted];
m23_145 -> m23_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_148 -> m23_149  [key=0, style=solid];
m23_148 -> m23_46  [key=2, style=dotted];
m23_148 -> m23_84  [key=2, style=dotted];
m23_148 -> m23_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_144 -> m23_145  [key=0, style=solid];
m23_144 -> m23_62  [key=2, style=dotted];
m23_146 -> m23_147  [key=0, style=solid];
m23_146 -> m23_46  [key=2, style=dotted];
m23_146 -> m23_84  [key=2, style=dotted];
m23_146 -> m23_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_147 -> m23_148  [key=0, style=solid];
m23_147 -> m23_46  [key=2, style=dotted];
m23_147 -> m23_84  [key=2, style=dotted];
m23_147 -> m23_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_149 -> m23_150  [key=0, style=solid];
m23_149 -> m23_23  [key=2, style=dotted];
m23_150 -> m23_151  [key=0, style=solid];
m23_150 -> m23_35  [key=2, style=dotted];
m23_151 -> m23_140  [key=0, style=bold, color=blue];
m23_331 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_212  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_220  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_230  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_232  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_234  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_254  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_257  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_258  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_276  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_278  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_280  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_296  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_301  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_302  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_305  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_306  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_319  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_331 -> m23_328  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m23_332 -> m23_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_333 -> m23_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_334 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_335 -> m23_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_336 -> m23_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_337 -> m23_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_338 -> m23_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_339 -> m23_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_339 -> m23_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_340 -> m23_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_341 -> m23_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_341 -> m23_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_342 -> m23_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_342 -> m23_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m23_343 -> m23_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m23_344 -> m23_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m27_18 -> m27_19  [key=0, style=solid];
m27_19 -> m27_10  [key=2, style=dotted];
m27_19 -> m27_20  [key=0, style=solid];
m27_20 -> m27_18  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=2, style=dotted];
m27_2 -> m27_0  [key=0, style=bold, color=blue];
m27_12 -> m27_13  [key=0, style=solid];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_3  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_13 -> m27_17  [key=2, style=dotted];
m27_13 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label=message];
m27_15 -> m27_16  [key=0, style=solid];
m27_16 -> m27_12  [key=0, style=bold, color=blue];
m27_4 -> m27_5  [key=0, style=solid, color=green];
m27_5 -> m27_6  [key=0, style=solid, color=green];
m27_5 -> m27_8  [key=0, style=solid, color=green];
m27_6 -> m27_7  [key=0, style=solid, color=green];
m27_6 -> m27_10  [key=2, style=dotted, color=green];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_11  [key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_11  [key=2, style=dotted];
m27_9 -> m27_4  [key=0, style=bold, color=blue];
m27_23 -> m27_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m27_23 -> m27_6  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m27_23 -> m27_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m27_23 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m27_23 -> m27_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m27_23 -> m27_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m27_23 -> m27_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m29_28 -> m29_42  [key=0, style=solid];
m29_28 -> m29_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m29_28 -> m29_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m29_28 -> m29_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m29_28 -> m29_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m29_28 -> m29_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.BackgroundJobServerOptions options"];
m29_28 -> m29_44  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess> GetProcesses"];
m29_28 -> m29_29  [key=0, style=solid, color=green];
m29_28 -> m29_7  [key=2, style=dotted, color=green];
m29_42 -> m29_43  [key=0, style=solid];
m29_42 -> m29_44  [key=0, style=solid];
m29_46 -> m29_47  [key=0, style=solid];
m29_46 -> m29_49  [key=0, style=solid];
m29_46 -> m29_46  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m29_47 -> m29_48  [key=0, style=solid];
m29_47 -> m29_55  [key=2, style=dotted];
m29_47 -> m29_56  [key=2, style=dotted];
m29_47 -> m29_57  [key=2, style=dotted];
m29_50 -> m29_51  [key=0, style=solid];
m29_50 -> m29_59  [key=2, style=dotted];
m29_50 -> m29_57  [key=2, style=dotted];
m29_51 -> m29_52  [key=0, style=solid];
m29_51 -> m29_60  [key=2, style=dotted];
m29_51 -> m29_57  [key=2, style=dotted];
m29_43 -> m29_54  [key=0, style=solid];
m29_43 -> d10  [key=2, style=dotted];
m29_44 -> m29_45  [key=0, style=solid];
m29_44 -> m29_27  [key=2, style=dotted];
m29_44 -> m29_47  [key=1, style=dashed, color=darkseagreen4, label=processes];
m29_44 -> m29_49  [key=1, style=dashed, color=darkseagreen4, label=processes];
m29_44 -> m29_50  [key=1, style=dashed, color=darkseagreen4, label=processes];
m29_44 -> m29_51  [key=1, style=dashed, color=darkseagreen4, label=processes];
m29_44 -> m29_52  [key=1, style=dashed, color=darkseagreen4, label=processes];
m29_44 -> m29_53  [key=1, style=dashed, color=darkseagreen4, label=processes];
m29_45 -> m29_46  [key=0, style=solid];
m29_45 -> m29_47  [key=1, style=dashed, color=darkseagreen4, label=i];
m29_45 -> m29_48  [key=1, style=dashed, color=darkseagreen4, label=i];
m29_49 -> m29_50  [key=0, style=solid];
m29_49 -> m29_58  [key=2, style=dotted];
m29_49 -> m29_57  [key=2, style=dotted];
m29_52 -> m29_53  [key=0, style=solid];
m29_52 -> m29_61  [key=2, style=dotted];
m29_52 -> m29_57  [key=2, style=dotted];
m29_53 -> m29_54  [key=0, style=solid];
m29_48 -> m29_46  [key=0, style=solid];
m29_48 -> m29_48  [key=1, style=dashed, color=darkseagreen4, label=i];
m29_54 -> m29_28  [key=0, style=bold, color=blue];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m29_8 -> m29_13  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>"];
m29_8 -> m29_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m29_8 -> m29_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m29_8 -> m29_18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>"];
m29_8 -> m29_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m29_8 -> m29_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m29_8 -> m29_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m29_8 -> m29_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m29_8 -> m29_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m29_9 -> m29_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> m29_3  [key=2, style=dotted];
m29_10 -> m29_8  [key=0, style=bold, color=blue];
m29_10 -> m29_25  [key=0, style=solid];
m29_10 -> d10  [key=2, style=dotted];
m29_27 -> m29_28  [key=0, style=solid, color=green];
m29_37 -> m29_38  [key=0, style=solid];
m29_38 -> m29_39  [key=0, style=solid];
m29_38 -> m29_41  [key=2, style=dotted];
m29_39 -> m29_40  [key=0, style=solid];
m29_39 -> m29_32  [key=2, style=dotted];
m29_40 -> m29_37  [key=0, style=bold, color=blue];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_4  [key=0, style=bold, color=blue];
m29_5 -> m29_7  [key=2, style=dotted];
m29_5 -> m29_6  [key=0, style=solid];
m29_14 -> m29_15  [key=0, style=solid];
m29_14 -> m29_25  [key=0, style=solid];
m29_14 -> d10  [key=2, style=dotted];
m29_15 -> m29_7  [key=2, style=dotted];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_27  [key=2, style=dotted];
m29_15 -> m29_17  [key=1, style=dashed, color=darkseagreen4, label=processes];
m29_15 -> m29_18  [key=1, style=dashed, color=darkseagreen4, label=processes];
m29_15 -> m29_24  [key=1, style=dashed, color=darkseagreen4, label=processes];
m29_16 -> m29_17  [key=0, style=solid];
m29_16 -> m29_18  [key=2, style=dotted];
m29_16 -> m29_28  [key=2, style=dotted];
m29_16 -> m29_29  [key=2, style=dotted];
m29_17 -> m29_14  [key=0, style=bold, color=blue];
m29_17 -> m29_18  [key=0, style=solid];
m29_17 -> m29_30  [key=2, style=dotted];
m29_17 -> m29_29  [key=2, style=dotted];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_0  [key=0, style=bold, color=blue];
m29_1 -> m29_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=2, style=dotted];
m29_18 -> m29_19  [key=0, style=solid];
m29_18 -> m29_29  [key=2, style=dotted];
m29_62 -> m29_63  [key=0, style=solid];
m29_63 -> m29_62  [key=0, style=bold, color=blue];
m29_19 -> m29_20  [key=0, style=solid];
m29_19 -> m29_31  [key=2, style=dotted];
m29_19 -> m29_24  [key=1, style=dashed, color=darkseagreen4, label=properties];
m29_20 -> m29_7  [key=2, style=dotted];
m29_20 -> m29_21  [key=0, style=solid];
m29_20 -> m29_22  [key=1, style=dashed, color=darkseagreen4, label=state];
m29_20 -> m29_23  [key=1, style=dashed, color=darkseagreen4, label=state];
m29_20 -> m29_32  [key=2, style=dotted];
m29_21 -> m29_22  [key=0, style=solid];
m29_21 -> m29_25  [key=2, style=dotted];
m29_21 -> m29_33  [key=2, style=dotted];
m29_22 -> m29_23  [key=0, style=solid];
m29_22 -> m29_26  [key=2, style=dotted];
m29_22 -> m29_18  [key=2, style=dotted];
m29_22 -> m29_34  [key=2, style=dotted];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_18  [key=2, style=dotted];
m29_23 -> m29_35  [key=2, style=dotted];
m29_24 -> m29_19  [key=0, style=bold, color=blue];
m29_24 -> m29_25  [key=0, style=solid];
m29_24 -> m29_36  [key=2, style=dotted];
m29_7 -> m29_6  [key=0, style=bold, color=blue];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
m29_2 -> m29_3  [key=0, style=solid];
m29_3 -> m29_2  [key=0, style=bold, color=blue];
m29_29 -> m29_30  [key=0, style=solid, color=green];
m29_29 -> m29_31  [key=2, style=dotted, color=green];
m29_30 -> m29_27  [key=0, style=bold, color=blue];
m29_25 -> m29_8  [key=0, style=bold, color=blue];
m29_64 -> m29_65  [key=0, style=solid];
m29_65 -> m29_64  [key=0, style=bold, color=blue];
m29_11 -> m29_12  [key=0, style=solid];
m29_11 -> m29_13  [key=0, style=solid];
m29_12 -> m29_7  [key=2, style=dotted];
m29_12 -> m29_13  [key=0, style=solid];
m29_12 -> m29_25  [key=0, style=solid];
m29_12 -> d10  [key=2, style=dotted];
m29_6 -> m29_4  [key=0, style=bold, color=blue];
m29_6 -> m29_7  [key=0, style=solid];
m29_13 -> m29_11  [key=0, style=bold, color=blue];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_15  [key=0, style=solid];
m29_66 -> m29_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m29_66 -> m29_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_78  [key=2, style=dotted];
m30_2 -> m30_3  [key=0, style=solid];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_79  [key=2, style=dotted];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_80  [key=2, style=dotted];
m30_4 -> m30_81  [key=2, style=dotted];
m30_4 -> m30_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_7  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_4 -> m30_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_8  [key=1, style=dashed, color=darkseagreen4, label=title];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_8  [key=0, style=solid];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_82  [key=2, style=dotted];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_16  [key=0, style=solid];
m30_17 -> m30_18  [key=0, style=solid];
m30_17 -> m30_21  [key=0, style=solid];
m30_19 -> m30_20  [key=0, style=solid];
m30_19 -> n10  [key=2, style=dotted];
m30_19 -> m30_86  [key=2, style=dotted];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_25  [key=0, style=solid];
m30_23 -> m30_24  [key=0, style=solid];
m30_23 -> m30_88  [key=2, style=dotted];
m30_23 -> m30_89  [key=2, style=dotted];
m30_26 -> m30_27  [key=0, style=solid];
m30_26 -> m30_36  [key=0, style=solid];
m30_28 -> m30_29  [key=0, style=solid];
m30_28 -> m30_35  [key=0, style=solid];
m30_28 -> m30_30  [key=1, style=dashed, color=darkseagreen4, label=property];
m30_37 -> m30_38  [key=0, style=solid];
m30_37 -> m30_77  [key=0, style=solid];
m30_40 -> m30_41  [key=0, style=solid];
m30_40 -> m30_77  [key=0, style=solid];
m30_40 -> m30_43  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_40 -> m30_49  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_40 -> m30_51  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_40 -> m30_53  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_40 -> m30_55  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_40 -> m30_57  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_40 -> m30_60  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_40 -> m30_61  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_40 -> m30_67  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_8  [key=1, style=dashed, color=darkseagreen4, label=title];
m30_9 -> m30_10  [key=0, style=solid];
m30_9 -> m30_83  [key=2, style=dotted];
m30_9 -> m30_80  [key=2, style=dotted];
m30_9 -> m30_84  [key=2, style=dotted];
m30_9 -> m30_85  [key=2, style=dotted];
m30_10 -> m30_11  [key=0, style=solid];
m30_10 -> m30_78  [key=2, style=dotted];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_78  [key=2, style=dotted];
m30_16 -> m30_17  [key=0, style=solid];
m30_16 -> m30_78  [key=2, style=dotted];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_78  [key=2, style=dotted];
m30_14 -> m30_15  [key=0, style=solid];
m30_14 -> m30_86  [key=2, style=dotted];
m30_15 -> m30_77  [key=0, style=solid];
m30_15 -> m30_78  [key=2, style=dotted];
m30_18 -> m30_19  [key=0, style=solid];
m30_18 -> m30_78  [key=2, style=dotted];
m30_20 -> m30_21  [key=0, style=solid];
m30_20 -> m30_78  [key=2, style=dotted];
m30_22 -> m30_23  [key=0, style=solid];
m30_22 -> m30_78  [key=2, style=dotted];
m30_25 -> m30_26  [key=0, style=solid];
m30_25 -> m30_78  [key=2, style=dotted];
m30_24 -> m30_25  [key=0, style=solid];
m30_24 -> m30_78  [key=2, style=dotted];
m30_27 -> m30_28  [key=0, style=solid];
m30_27 -> m30_78  [key=2, style=dotted];
m30_36 -> m30_37  [key=0, style=solid];
m30_36 -> m30_78  [key=2, style=dotted];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_78  [key=2, style=dotted];
m30_35 -> m30_36  [key=0, style=solid];
m30_35 -> m30_78  [key=2, style=dotted];
m30_30 -> m30_31  [key=0, style=solid];
m30_30 -> m30_86  [key=2, style=dotted];
m30_30 -> m30_30  [key=1, style=dashed, color=darkseagreen4, label=property];
m30_30 -> m30_33  [key=1, style=dashed, color=darkseagreen4, label=property];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_78  [key=2, style=dotted];
m30_33 -> m30_34  [key=0, style=solid];
m30_33 -> m30_86  [key=2, style=dotted];
m30_33 -> m30_33  [key=1, style=dashed, color=darkseagreen4, label=property];
m30_32 -> m30_33  [key=0, style=solid];
m30_32 -> m30_78  [key=2, style=dotted];
m30_34 -> m30_28  [key=0, style=solid];
m30_34 -> m30_78  [key=2, style=dotted];
m30_38 -> m30_39  [key=0, style=solid];
m30_38 -> m30_78  [key=2, style=dotted];
m30_39 -> m30_40  [key=0, style=solid];
m30_39 -> m30_42  [key=1, style=dashed, color=darkseagreen4, label=index];
m30_39 -> m30_45  [key=1, style=dashed, color=darkseagreen4, label=index];
m30_39 -> m30_76  [key=1, style=dashed, color=darkseagreen4, label=index];
m30_42 -> m30_43  [key=0, style=solid];
m30_42 -> m30_44  [key=0, style=solid];
m30_45 -> m30_46  [key=0, style=solid];
m30_45 -> m30_86  [key=2, style=dotted];
m30_76 -> m30_40  [key=0, style=solid];
m30_76 -> m30_76  [key=1, style=dashed, color=darkseagreen4, label=index];
m30_41 -> m30_42  [key=0, style=solid];
m30_41 -> m30_90  [key=2, style=dotted];
m30_41 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label=background];
m30_43 -> m30_44  [key=0, style=solid];
m30_43 -> m30_90  [key=2, style=dotted];
m30_43 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label=background];
m30_49 -> m30_50  [key=0, style=solid];
m30_49 -> m30_86  [key=2, style=dotted];
m30_51 -> m30_52  [key=0, style=solid];
m30_51 -> m30_92  [key=2, style=dotted];
m30_51 -> m30_86  [key=2, style=dotted];
m30_53 -> m30_54  [key=0, style=solid];
m30_53 -> m30_86  [key=2, style=dotted];
m30_55 -> m30_56  [key=0, style=solid];
m30_55 -> m30_59  [key=0, style=solid];
m30_55 -> m30_93  [key=2, style=dotted];
m30_57 -> m30_58  [key=0, style=solid];
m30_57 -> m30_86  [key=2, style=dotted];
m30_60 -> m30_61  [key=0, style=solid];
m30_60 -> m30_66  [key=0, style=solid];
m30_60 -> m30_94  [key=2, style=dotted];
m30_61 -> m30_62  [key=0, style=solid];
m30_61 -> m30_95  [key=2, style=dotted];
m30_61 -> m30_64  [key=1, style=dashed, color=darkseagreen4, label=rendered];
m30_67 -> m30_68  [key=0, style=solid];
m30_67 -> m30_74  [key=0, style=solid];
m30_67 -> m30_96  [key=2, style=dotted];
m30_67 -> m30_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_67 -> m30_69  [key=1, style=dashed, color=darkseagreen4, label=item];
m30_67 -> m30_72  [key=1, style=dashed, color=darkseagreen4, label=item];
m30_47 -> m30_48  [key=0, style=solid];
m30_47 -> m30_91  [key=2, style=dotted];
m30_47 -> m30_86  [key=2, style=dotted];
m30_44 -> m30_45  [key=0, style=solid];
m30_44 -> m30_78  [key=2, style=dotted];
m30_46 -> m30_47  [key=0, style=solid];
m30_46 -> m30_78  [key=2, style=dotted];
m30_48 -> m30_49  [key=0, style=solid];
m30_48 -> m30_78  [key=2, style=dotted];
m30_50 -> m30_51  [key=0, style=solid];
m30_50 -> m30_78  [key=2, style=dotted];
m30_52 -> m30_53  [key=0, style=solid];
m30_52 -> m30_78  [key=2, style=dotted];
m30_54 -> m30_55  [key=0, style=solid];
m30_54 -> m30_78  [key=2, style=dotted];
m30_56 -> m30_57  [key=0, style=solid];
m30_56 -> m30_78  [key=2, style=dotted];
m30_59 -> m30_60  [key=0, style=solid];
m30_59 -> m30_78  [key=2, style=dotted];
m30_58 -> m30_59  [key=0, style=solid];
m30_58 -> m30_78  [key=2, style=dotted];
m30_66 -> m30_67  [key=0, style=solid];
m30_66 -> m30_78  [key=2, style=dotted];
m30_62 -> m30_63  [key=0, style=solid];
m30_62 -> m30_75  [key=0, style=solid];
m30_64 -> m30_65  [key=0, style=solid];
m30_64 -> m30_89  [key=2, style=dotted];
m30_63 -> m30_64  [key=0, style=solid];
m30_63 -> m30_78  [key=2, style=dotted];
m30_75 -> m30_76  [key=0, style=solid];
m30_75 -> m30_78  [key=2, style=dotted];
m30_65 -> m30_75  [key=0, style=solid];
m30_65 -> m30_78  [key=2, style=dotted];
m30_68 -> m30_69  [key=0, style=solid];
m30_68 -> m30_78  [key=2, style=dotted];
m30_74 -> m30_75  [key=0, style=solid];
m30_74 -> m30_78  [key=2, style=dotted];
m30_69 -> m30_70  [key=0, style=solid];
m30_69 -> m30_89  [key=2, style=dotted];
m30_72 -> m30_73  [key=0, style=solid];
m30_72 -> m30_89  [key=2, style=dotted];
m30_70 -> m30_71  [key=0, style=solid];
m30_70 -> m30_78  [key=2, style=dotted];
m30_71 -> m30_72  [key=0, style=solid];
m30_71 -> m30_78  [key=2, style=dotted];
m30_73 -> m30_67  [key=0, style=solid];
m30_73 -> m30_78  [key=2, style=dotted];
m30_77 -> m30_0  [key=0, style=bold, color=blue];
m30_97 -> m30_98  [key=0, style=solid];
m30_98 -> m30_99  [key=0, style=solid];
m30_98 -> m30_98  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m30_99 -> m30_97  [key=0, style=bold, color=blue];
m30_100 -> m30_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m30_100 -> m30_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m31_183 -> m31_181  [key=0, style=bold, color=blue];
m31_145 -> m31_146  [key=0, style=solid];
m31_145 -> m31_132  [key=0, style=bold, color=blue];
m31_146 -> m31_147  [key=0, style=solid];
m31_146 -> m31_20  [key=2, style=dotted];
m31_147 -> m31_145  [key=0, style=bold, color=blue];
m31_199 -> m31_197  [key=0, style=bold, color=blue];
m31_136 -> m31_137  [key=0, style=solid];
m31_136 -> m31_46  [key=2, style=dotted];
m31_136 -> m31_48  [key=2, style=dotted];
m31_136 -> m31_47  [key=2, style=dotted];
m31_136 -> m31_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_137 -> m31_138  [key=0, style=solid];
m31_137 -> m31_24  [key=2, style=dotted];
m31_137 -> m31_25  [key=2, style=dotted];
m31_137 -> m31_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_138 -> m31_136  [key=0, style=bold, color=blue];
m31_138 -> m31_139  [key=0, style=solid];
m31_138 -> m31_146  [key=2, style=dotted];
m31_138 -> m31_140  [key=1, style=dashed, color=darkseagreen4, label=serializedEntry];
m31_201 -> m31_202  [key=0, style=solid];
m31_202 -> m31_11  [key=2, style=dotted];
m31_202 -> m31_203  [key=0, style=solid];
m31_202 -> m31_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_203 -> m31_201  [key=0, style=bold, color=blue];
m31_97 -> m31_98  [key=0, style=solid, color=green];
m31_97 -> m31_45  [key=2, style=dotted, color=green];
m31_97 -> m31_99  [key=1, style=dashed, color=green, label=state];
m31_97 -> m31_100  [key=1, style=dashed, color=green, label=state];
m31_97 -> m31_111  [key=1, style=dashed, color=green, label=state];
m31_98 -> m31_99  [key=0, style=solid];
m31_98 -> m31_20  [key=2, style=dotted];
m31_98 -> m31_46  [key=2, style=dotted];
m31_98 -> m31_48  [key=2, style=dotted];
m31_98 -> m31_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_99 -> m31_97  [key=0, style=bold, color=blue];
m31_99 -> m31_46  [key=2, style=dotted];
m31_99 -> m31_48  [key=2, style=dotted];
m31_99 -> m31_100  [key=0, style=solid];
m31_99 -> m31_47  [key=2, style=dotted];
m31_99 -> m31_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_64 -> m31_62  [key=0, style=bold, color=blue];
m31_64 -> m31_65  [key=0, style=solid];
m31_63 -> m31_64  [key=0, style=solid, color=green];
m31_63 -> m31_11  [key=2, style=dotted, color=green];
m31_63 -> m31_65  [key=1, style=dashed, color=green, label="lambda expression"];
m31_63 -> m31_61  [key=0, style=bold, color=blue];
m31_62 -> m31_63  [key=0, style=solid, color=green];
m31_62 -> m31_20  [key=2, style=dotted];
m31_204 -> m31_205  [key=0, style=solid];
m31_204 -> m31_206  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_204 -> m31_207  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_204 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_154 -> m31_155  [key=0, style=solid];
m31_154 -> m31_152  [key=0, style=bold, color=blue];
m31_155 -> m31_156  [key=0, style=solid];
m31_155 -> m31_24  [key=2, style=dotted];
m31_156 -> m31_154  [key=0, style=bold, color=blue];
m31_156 -> m31_157  [key=0, style=solid];
m31_156 -> m31_54  [key=2, style=dotted];
m31_80 -> m31_81  [key=0, style=solid];
m31_80 -> m31_20  [key=2, style=dotted];
m31_49 -> m31_50  [key=0, style=solid];
m31_50 -> m31_51  [key=0, style=solid];
m31_50 -> m31_20  [key=2, style=dotted];
m31_51 -> m31_49  [key=0, style=bold, color=blue];
m31_51 -> m31_52  [key=0, style=solid];
m31_106 -> m31_107  [key=0, style=solid];
m31_106 -> m31_104  [key=0, style=bold, color=blue];
m31_107 -> m31_108  [key=0, style=solid];
m31_107 -> m31_24  [key=2, style=dotted];
m31_108 -> m31_106  [key=0, style=bold, color=blue];
m31_108 -> m31_109  [key=0, style=solid];
m31_108 -> m31_54  [key=2, style=dotted];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_3  [key=2, style=dotted];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_1 -> m31_5  [key=2, style=dotted];
m31_2 -> m31_0  [key=0, style=bold, color=blue];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_6  [key=2, style=dotted];
m31_2 -> m31_7  [key=2, style=dotted];
m31_2 -> m31_9  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_2 -> m31_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_118 -> m31_119  [key=0, style=solid];
m31_118 -> d11  [key=2, style=dotted];
m31_118 -> m31_24  [key=2, style=dotted];
m31_119 -> m31_120  [key=0, style=solid];
m31_119 -> m31_24  [key=2, style=dotted];
m31_119 -> d11  [key=2, style=dotted];
m31_120 -> m31_118  [key=0, style=bold, color=blue];
m31_120 -> m31_25  [key=2, style=dotted];
m31_120 -> m31_121  [key=0, style=solid];
m31_120 -> m31_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_26  [key=2, style=dotted];
m31_17 -> m31_20  [key=1, style=dashed, color=darkseagreen4, label=jobEntryTtl];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_20  [key=2, style=dotted];
m31_18 -> m31_26  [key=2, style=dotted];
m31_18 -> m31_21  [key=1, style=dashed, color=darkseagreen4, label=stateEntryTtl];
m31_19 -> m31_17  [key=0, style=bold, color=blue];
m31_19 -> m31_20  [key=0, style=solid];
m31_19 -> m31_26  [key=2, style=dotted];
m31_19 -> m31_22  [key=1, style=dashed, color=darkseagreen4, label=historyEntryTtl];
m31_161 -> m31_162  [key=0, style=solid];
m31_161 -> m31_24  [key=2, style=dotted];
m31_242 -> m31_243  [key=0, style=solid];
m31_243 -> m31_11  [key=2, style=dotted];
m31_243 -> m31_244  [key=0, style=solid];
m31_243 -> m31_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_244 -> m31_242  [key=0, style=bold, color=blue];
m31_73 -> m31_74  [key=0, style=solid];
m31_73 -> m31_79  [key=2, style=dotted];
m31_73 -> m31_80  [key=2, style=dotted];
m31_74 -> m31_75  [key=0, style=solid];
m31_74 -> m31_20  [key=2, style=dotted];
m31_74 -> m31_50  [key=2, style=dotted];
m31_75 -> m31_73  [key=0, style=bold, color=blue];
m31_75 -> m31_76  [key=0, style=solid];
m31_75 -> m31_50  [key=2, style=dotted];
m31_166 -> m31_167  [key=0, style=solid];
m31_166 -> m31_25  [key=2, style=dotted];
m31_166 -> m31_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_167 -> m31_168  [key=0, style=solid];
m31_167 -> m31_24  [key=2, style=dotted];
m31_167 -> m31_170  [key=2, style=dotted];
m31_167 -> m31_28  [key=2, style=dotted];
m31_168 -> m31_166  [key=0, style=bold, color=blue];
m31_168 -> m31_50  [key=2, style=dotted];
m31_168 -> m31_146  [key=2, style=dotted];
m31_168 -> m31_169  [key=0, style=solid];
m31_127 -> m31_128  [key=0, style=solid];
m31_127 -> m31_125  [key=0, style=bold, color=blue];
m31_128 -> m31_129  [key=0, style=solid];
m31_128 -> m31_20  [key=2, style=dotted];
m31_129 -> m31_127  [key=0, style=bold, color=blue];
m31_129 -> m31_130  [key=0, style=solid, color=green];
m31_129 -> m31_129  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m31_112 -> m31_113  [key=0, style=solid];
m31_112 -> m31_110  [key=0, style=bold, color=blue];
m31_113 -> m31_114  [key=0, style=solid];
m31_113 -> m31_24  [key=2, style=dotted];
m31_114 -> m31_112  [key=0, style=bold, color=blue];
m31_114 -> m31_11  [key=2, style=dotted];
m31_114 -> m31_114  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess> GetRequiredProcesses"];
m31_114 -> m31_115  [key=0, style=solid];
m31_114 -> m31_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_37 -> m31_38  [key=0, style=solid, color=green];
m31_37 -> m31_41  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_37 -> m31_42  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_38 -> m31_39  [key=0, style=solid, color=green];
m31_38 -> m31_20  [key=2, style=dotted];
m31_38 -> m31_45  [key=2, style=dotted, color=green];
m31_38 -> m31_40  [key=1, style=dashed, color=green, label=state];
m31_38 -> m31_41  [key=1, style=dashed, color=green, label=state];
m31_38 -> m31_59  [key=1, style=dashed, color=green, label=state];
m31_39 -> m31_37  [key=0, style=bold, color=blue];
m31_39 -> m31_40  [key=0, style=solid];
m31_39 -> m31_46  [key=2, style=dotted];
m31_39 -> m31_47  [key=2, style=dotted];
m31_39 -> m31_48  [key=2, style=dotted];
m31_39 -> m31_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_254 -> m31_255  [key=0, style=solid];
m31_255 -> m31_11  [key=2, style=dotted];
m31_255 -> m31_256  [key=0, style=solid];
m31_255 -> m31_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_256 -> m31_254  [key=0, style=bold, color=blue];
m31_88 -> m31_89  [key=0, style=solid, color=green];
m31_89 -> m31_90  [key=0, style=solid];
m31_89 -> m31_24  [key=2, style=dotted];
m31_89 -> m31_87  [key=0, style=bold, color=blue];
m31_90 -> m31_88  [key=0, style=bold, color=blue];
m31_90 -> m31_91  [key=0, style=solid];
m31_58 -> m31_59  [key=0, style=solid];
m31_59 -> m31_60  [key=0, style=solid];
m31_59 -> m31_24  [key=2, style=dotted];
m31_59 -> m31_61  [key=2, style=dotted];
m31_60 -> m31_58  [key=0, style=bold, color=blue];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_8  [key=2, style=dotted];
m31_4 -> m31_0  [key=0, style=bold, color=blue];
m31_4 -> m31_5  [key=0, style=solid];
m31_79 -> m31_80  [key=0, style=solid];
m31_76 -> m31_77  [key=0, style=solid];
m31_76 -> m31_50  [key=2, style=dotted];
m31_77 -> m31_78  [key=0, style=solid];
m31_77 -> m31_24  [key=2, style=dotted];
m31_77 -> m31_65  [key=0, style=bold, color=blue];
m31_78 -> m31_76  [key=0, style=bold, color=blue];
m31_267 -> m31_268  [key=0, style=solid];
m31_268 -> m31_11  [key=2, style=dotted];
m31_268 -> m31_269  [key=0, style=solid];
m31_268 -> m31_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_269 -> m31_267  [key=0, style=bold, color=blue];
m31_43 -> m31_44  [key=0, style=solid];
m31_43 -> m31_50  [key=2, style=dotted];
m31_44 -> m31_45  [key=0, style=solid];
m31_44 -> m31_20  [key=2, style=dotted];
m31_44 -> m31_37  [key=0, style=bold, color=blue];
m31_45 -> m31_43  [key=0, style=bold, color=blue];
m31_85 -> m31_86  [key=0, style=solid];
m31_86 -> m31_87  [key=0, style=solid];
m31_86 -> m31_20  [key=2, style=dotted];
m31_86 -> m31_84  [key=0, style=bold, color=blue];
m31_87 -> m31_85  [key=0, style=bold, color=blue];
m31_87 -> m31_88  [key=0, style=solid, color=green];
m31_139 -> m31_140  [key=0, style=solid];
m31_139 -> m31_147  [key=2, style=dotted];
m31_140 -> m31_141  [key=0, style=solid];
m31_140 -> m31_20  [key=2, style=dotted];
m31_140 -> m31_144  [key=1, style=dashed, color=darkseagreen4, label=entry];
m31_140 -> m31_3  [key=2, style=dotted];
m31_140 -> m31_142  [key=1, style=dashed, color=darkseagreen4, label=entry];
m31_140 -> m31_143  [key=1, style=dashed, color=darkseagreen4, label=entry];
m31_141 -> m31_139  [key=0, style=bold, color=blue];
m31_141 -> m31_50  [key=2, style=dotted];
m31_141 -> m31_142  [key=0, style=solid];
m31_148 -> m31_149  [key=0, style=solid];
m31_184 -> m31_185  [key=0, style=solid];
m31_185 -> m31_186  [key=0, style=solid];
m31_185 -> m31_24  [key=2, style=dotted];
m31_185 -> m31_174  [key=2, style=dotted];
m31_186 -> m31_184  [key=0, style=bold, color=blue];
m31_115 -> m31_116  [key=0, style=solid];
m31_115 -> m31_113  [key=0, style=bold, color=blue];
m31_116 -> m31_117  [key=0, style=solid];
m31_116 -> m31_20  [key=2, style=dotted];
m31_116 -> m31_118  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_116 -> m31_119  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_116 -> m31_120  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_116 -> m31_121  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_116 -> m31_122  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_116 -> m31_123  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_117 -> m31_115  [key=0, style=bold, color=blue];
m31_117 -> m31_118  [key=0, style=solid];
m31_117 -> d11  [key=2, style=dotted];
m31_117 -> m31_24  [key=2, style=dotted];
m31_217 -> m31_215  [key=0, style=bold, color=blue];
m31_217 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=converter];
m31_216 -> m31_11  [key=2, style=dotted];
m31_216 -> m31_217  [key=0, style=solid];
m31_216 -> m31_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_216 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=T];
m31_216 -> m31_212  [key=1, style=dashed, color=darkseagreen4, label=T];
m31_215 -> m31_216  [key=0, style=solid];
m31_215 -> m31_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_35  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_95  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_161  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_167  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_215 -> m31_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m31_70 -> m31_71  [key=0, style=solid, color=green];
m31_70 -> m31_46  [key=2, style=dotted, color=green];
m31_70 -> m31_48  [key=2, style=dotted, color=green];
m31_70 -> m31_87  [key=1, style=dashed, color=green, label="lambda expression"];
m31_71 -> m31_72  [key=0, style=solid];
m31_71 -> m31_24  [key=2, style=dotted];
m31_71 -> m31_25  [key=2, style=dotted];
m31_71 -> m31_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_72 -> m31_70  [key=0, style=bold, color=blue];
m31_72 -> m31_73  [key=0, style=solid];
m31_72 -> m31_49  [key=2, style=dotted];
m31_72 -> m31_74  [key=1, style=dashed, color=darkseagreen4, label=stateHash];
m31_72 -> m31_75  [key=1, style=dashed, color=darkseagreen4, label=stateHash];
m31_72 -> m31_76  [key=1, style=dashed, color=darkseagreen4, label=stateHash];
m31_81 -> m31_79  [key=0, style=bold, color=blue];
m31_81 -> m31_82  [key=0, style=solid];
m31_103 -> m31_104  [key=0, style=solid];
m31_104 -> m31_105  [key=0, style=solid];
m31_104 -> m31_20  [key=2, style=dotted];
m31_105 -> m31_103  [key=0, style=bold, color=blue];
m31_105 -> m31_106  [key=0, style=solid];
m31_94 -> m31_95  [key=0, style=solid, color=green];
m31_94 -> m31_11  [key=2, style=dotted, color=green];
m31_94 -> m31_96  [key=1, style=dashed, color=green, label="lambda expression"];
m31_95 -> m31_96  [key=0, style=solid, color=red];
m31_95 -> m31_24  [key=2, style=dotted, color=red];
m31_95 -> m31_93  [key=0, style=bold, color=blue];
m31_96 -> m31_94  [key=0, style=bold, color=blue];
m31_96 -> m31_97  [key=0, style=solid, color=green];
m31_96 -> m31_100  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_96 -> m31_101  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_24 -> m31_187  [key=0, style=solid];
m31_24 -> m31_190  [key=1, style=dashed, color=darkseagreen4, label=bool];
m31_24 -> m31_192  [key=1, style=dashed, color=darkseagreen4, label=T];
m31_24 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=T];
m31_24 -> m31_193  [key=1, style=dashed, color=darkseagreen4, label=T];
m31_24 -> m31_212  [key=1, style=dashed, color=darkseagreen4, label=T];
m31_187 -> m31_188  [key=0, style=solid];
m31_187 -> m31_195  [key=1, style=dashed, color=darkseagreen4, label=type];
m31_190 -> m31_191  [key=0, style=solid];
m31_190 -> m31_193  [key=0, style=solid];
m31_190 -> m31_192  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_190 -> m31_194  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_192 -> m31_193  [key=0, style=solid];
m31_192 -> m31_201  [key=2, style=dotted];
m31_192 -> m31_202  [key=2, style=dotted];
m31_192 -> m31_25  [key=2, style=dotted];
m31_192 -> m31_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_193 -> m31_194  [key=0, style=solid];
m31_193 -> m31_203  [key=2, style=dotted];
m31_193 -> m31_202  [key=2, style=dotted];
m31_193 -> m31_50  [key=2, style=dotted];
m31_193 -> m31_196  [key=2, style=dotted];
m31_188 -> m31_189  [key=0, style=solid];
m31_188 -> m31_198  [key=2, style=dotted];
m31_188 -> m31_195  [key=1, style=dashed, color=darkseagreen4, label=methodInfo];
m31_188 -> m31_11  [key=2, style=dotted];
m31_188 -> m31_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_195 -> m31_196  [key=0, style=solid];
m31_195 -> m31_204  [key=2, style=dotted];
m31_195 -> m31_205  [key=2, style=dotted];
m31_195 -> m31_190  [key=0, style=bold, color=blue];
m31_189 -> m31_190  [key=0, style=solid];
m31_189 -> m31_199  [key=2, style=dotted];
m31_189 -> m31_192  [key=1, style=dashed, color=darkseagreen4, label=serializationMethods];
m31_189 -> m31_193  [key=1, style=dashed, color=darkseagreen4, label=serializationMethods];
m31_189 -> m31_194  [key=1, style=dashed, color=darkseagreen4, label=serializationMethods];
m31_189 -> m31_187  [key=0, style=bold, color=blue];
m31_194 -> m31_195  [key=0, style=solid];
m31_194 -> m31_197  [key=0, style=solid];
m31_194 -> m31_26  [key=2, style=dotted];
m31_194 -> m31_28  [key=2, style=dotted];
m31_191 -> m31_192  [key=0, style=solid];
m31_191 -> m31_200  [key=2, style=dotted];
m31_191 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=converter];
m31_191 -> m31_24  [key=2, style=dotted];
m31_196 -> m31_194  [key=0, style=solid];
m31_196 -> m31_206  [key=2, style=dotted];
m31_197 -> m31_24  [key=0, style=bold, color=blue];
m31_197 -> m31_198  [key=0, style=solid];
m31_9 -> m31_10  [key=0, style=solid];
m31_9 -> m31_63  [key=3, color=green, style=bold, label="Field variable Hangfire.BackgroundJobServerOptions _options"];
m31_9 -> m31_11  [key=2, style=dotted];
m31_9 -> m31_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_24  [key=2, style=dotted];
m31_10 -> m31_11  [key=0, style=solid];
m31_10 -> m31_12  [key=2, style=dotted];
m31_10 -> m31_13  [key=2, style=dotted];
m31_10 -> m31_8  [key=0, style=bold, color=blue];
m31_11 -> m31_9  [key=0, style=bold, color=blue];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_0  [key=2, style=dotted];
m31_15 -> m31_24  [key=2, style=dotted];
m31_16 -> m31_14  [key=0, style=bold, color=blue];
m31_16 -> m31_25  [key=2, style=dotted];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_208 -> m31_209  [key=0, style=solid];
m31_208 -> m31_210  [key=2, style=dotted];
m31_208 -> m31_50  [key=2, style=dotted];
m31_208 -> m31_196  [key=2, style=dotted];
m31_212 -> m31_213  [key=0, style=solid];
m31_212 -> m31_214  [key=2, style=dotted];
m31_212 -> d11  [key=2, style=dotted];
m31_207 -> m31_208  [key=0, style=solid];
m31_207 -> m31_26  [key=2, style=dotted];
m31_207 -> m31_209  [key=1, style=dashed, color=darkseagreen4, label=entryTtl];
m31_209 -> m31_207  [key=0, style=bold, color=blue];
m31_209 -> m31_210  [key=0, style=solid];
m31_209 -> m31_28  [key=2, style=dotted];
m31_209 -> m31_27  [key=2, style=dotted];
m31_211 -> m31_212  [key=0, style=solid];
m31_213 -> m31_211  [key=0, style=bold, color=blue];
m31_40 -> m31_41  [key=0, style=solid];
m31_40 -> m31_46  [key=2, style=dotted];
m31_40 -> m31_48  [key=2, style=dotted];
m31_40 -> m31_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_41 -> m31_42  [key=0, style=solid];
m31_41 -> m31_25  [key=2, style=dotted];
m31_41 -> m31_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_41 -> m31_24  [key=2, style=dotted];
m31_65 -> m31_66  [key=0, style=solid];
m31_65 -> m31_71  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_65 -> m31_72  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_65 -> m31_24  [key=2, style=dotted];
m31_67 -> m31_68  [key=0, style=solid, color=green];
m31_67 -> m31_45  [key=2, style=dotted, color=green];
m31_67 -> m31_69  [key=1, style=dashed, color=green, label=state];
m31_67 -> m31_70  [key=1, style=dashed, color=green, label=state];
m31_67 -> m31_71  [key=1, style=dashed, color=green, label=state];
m31_67 -> m31_91  [key=1, style=dashed, color=green, label=state];
m31_66 -> m31_67  [key=0, style=solid, color=green];
m31_66 -> m31_78  [key=2, style=dotted];
m31_66 -> m31_64  [key=0, style=bold, color=blue];
m31_68 -> m31_69  [key=0, style=solid];
m31_68 -> m31_46  [key=2, style=dotted];
m31_68 -> m31_47  [key=2, style=dotted];
m31_68 -> m31_48  [key=2, style=dotted];
m31_68 -> m31_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_68 -> m31_20  [key=2, style=dotted];
m31_69 -> m31_70  [key=0, style=solid, color=green];
m31_69 -> m31_46  [key=2, style=dotted];
m31_69 -> m31_48  [key=2, style=dotted];
m31_69 -> m31_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_69 -> m31_67  [key=0, style=bold, color=blue];
m31_91 -> m31_92  [key=0, style=solid];
m31_91 -> m31_61  [key=2, style=dotted];
m31_100 -> m31_101  [key=0, style=solid];
m31_100 -> m31_25  [key=2, style=dotted];
m31_100 -> m31_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_111 -> m31_112  [key=0, style=solid];
m31_111 -> m31_61  [key=2, style=dotted];
m31_111 -> m31_109  [key=0, style=bold, color=blue];
m31_132 -> m31_133  [key=0, style=solid, color=green];
m31_132 -> m31_137  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_132 -> m31_138  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_132 -> m31_130  [key=0, style=bold, color=blue];
m31_133 -> m31_134  [key=0, style=solid, color=green];
m31_133 -> m31_45  [key=2, style=dotted, color=green];
m31_133 -> m31_135  [key=1, style=dashed, color=green, label=state];
m31_133 -> m31_136  [key=1, style=dashed, color=green, label=state];
m31_133 -> m31_137  [key=1, style=dashed, color=green, label=state];
m31_133 -> m31_159  [key=1, style=dashed, color=green, label=state];
m31_134 -> m31_135  [key=0, style=solid, color=green];
m31_134 -> m31_46  [key=2, style=dotted];
m31_134 -> m31_48  [key=2, style=dotted];
m31_134 -> m31_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_134 -> m31_20  [key=2, style=dotted];
m31_135 -> m31_136  [key=0, style=solid, color=green];
m31_135 -> m31_46  [key=2, style=dotted, color=green];
m31_135 -> m31_48  [key=2, style=dotted, color=green];
m31_135 -> m31_152  [key=1, style=dashed, color=green, label="lambda expression"];
m31_135 -> m31_133  [key=0, style=bold, color=blue];
m31_159 -> m31_160  [key=0, style=solid];
m31_159 -> m31_161  [key=2, style=dotted];
m31_159 -> m31_157  [key=0, style=bold, color=blue];
m31_152 -> m31_153  [key=0, style=solid, color=green];
m31_152 -> m31_20  [key=2, style=dotted];
m31_153 -> m31_154  [key=0, style=solid, color=green];
m31_153 -> m31_151  [key=0, style=bold, color=blue];
m31_42 -> m31_43  [key=0, style=solid];
m31_42 -> m31_49  [key=2, style=dotted];
m31_42 -> m31_40  [key=0, style=bold, color=blue];
m31_55 -> m31_56  [key=0, style=solid];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_14  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_12 -> m31_15  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_12 -> m31_16  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_12 -> m31_17  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_12 -> m31_18  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_12 -> m31_19  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_84 -> m31_85  [key=0, style=solid];
m31_84 -> m31_82  [key=0, style=bold, color=blue];
m31_92 -> m31_90  [key=0, style=bold, color=blue];
m31_92 -> m31_93  [key=0, style=solid];
m31_92 -> m31_20  [key=2, style=dotted];
m31_102 -> m31_96  [key=0, style=bold, color=blue];
m31_102 -> m31_100  [key=0, style=bold, color=blue];
m31_101 -> m31_102  [key=0, style=solid];
m31_101 -> m31_103  [key=2, style=dotted];
m31_101 -> m31_50  [key=2, style=dotted];
m31_101 -> m31_24  [key=2, style=dotted];
m31_110 -> m31_111  [key=0, style=solid];
m31_110 -> m31_20  [key=2, style=dotted];
m31_149 -> m31_150  [key=0, style=solid];
m31_149 -> m31_24  [key=2, style=dotted];
m31_158 -> m31_159  [key=0, style=solid];
m31_158 -> m31_20  [key=2, style=dotted];
m31_160 -> m31_158  [key=0, style=bold, color=blue];
m31_160 -> m31_161  [key=0, style=solid];
m31_165 -> m31_166  [key=0, style=solid];
m31_165 -> m31_167  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_165 -> m31_168  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_165 -> m31_163  [key=0, style=bold, color=blue];
m31_178 -> m31_179  [key=0, style=solid];
m31_178 -> m31_180  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_178 -> m31_181  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_218 -> m31_219  [key=0, style=solid];
m31_218 -> m31_220  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_218 -> m31_221  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_218 -> m31_222  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_231 -> m31_232  [key=0, style=solid];
m31_231 -> m31_233  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_231 -> m31_234  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_231 -> m31_235  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_245 -> m31_246  [key=0, style=solid];
m31_245 -> m31_247  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_257 -> m31_258  [key=0, style=solid];
m31_257 -> m31_259  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_257 -> m31_260  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_270 -> m31_271  [key=0, style=solid];
m31_270 -> m31_272  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_270 -> m31_273  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_283 -> m31_284  [key=0, style=solid];
m31_283 -> m31_285  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_283 -> m31_286  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_296 -> m31_297  [key=0, style=solid];
m31_296 -> m31_298  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_296 -> m31_299  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_296 -> m31_300  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_296 -> m31_301  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_296 -> m31_302  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_311 -> m31_312  [key=0, style=solid];
m31_311 -> m31_313  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_311 -> m31_314  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_311 -> m31_315  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_311 -> m31_316  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_311 -> m31_317  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_311 -> m31_318  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_311 -> m31_319  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m31_53 -> m31_51  [key=0, style=bold, color=blue];
m31_53 -> m31_54  [key=0, style=solid];
m31_53 -> m31_24  [key=2, style=dotted];
m31_52 -> m31_53  [key=0, style=solid];
m31_52 -> m31_54  [key=2, style=dotted];
m31_57 -> m31_55  [key=0, style=bold, color=blue];
m31_56 -> m31_57  [key=0, style=solid];
m31_56 -> m31_20  [key=2, style=dotted];
m31_180 -> m31_25  [key=2, style=dotted];
m31_180 -> m31_181  [key=0, style=solid];
m31_180 -> m31_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_180 -> m31_178  [key=0, style=bold, color=blue];
m31_206 -> m31_25  [key=2, style=dotted];
m31_206 -> m31_207  [key=0, style=solid];
m31_206 -> m31_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_220 -> m31_25  [key=2, style=dotted];
m31_220 -> m31_221  [key=0, style=solid];
m31_220 -> m31_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_233 -> m31_25  [key=2, style=dotted];
m31_233 -> m31_234  [key=0, style=solid];
m31_233 -> m31_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_246 -> m31_25  [key=2, style=dotted];
m31_246 -> m31_247  [key=0, style=solid];
m31_246 -> m31_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_258 -> m31_25  [key=2, style=dotted];
m31_258 -> m31_259  [key=0, style=solid];
m31_258 -> m31_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_272 -> m31_25  [key=2, style=dotted];
m31_272 -> m31_273  [key=0, style=solid];
m31_272 -> m31_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_285 -> m31_25  [key=2, style=dotted];
m31_285 -> m31_286  [key=0, style=solid];
m31_285 -> m31_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_300 -> m31_25  [key=2, style=dotted];
m31_300 -> m31_301  [key=0, style=solid];
m31_300 -> m31_304  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_316 -> m31_25  [key=2, style=dotted];
m31_316 -> m31_317  [key=0, style=solid];
m31_316 -> m31_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_23 -> m31_12  [key=0, style=bold, color=blue];
m31_23 -> m31_21  [key=0, style=bold, color=blue];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_24  [key=2, style=dotted];
m31_83 -> m31_81  [key=0, style=bold, color=blue];
m31_83 -> m31_84  [key=0, style=solid];
m31_83 -> m31_24  [key=2, style=dotted];
m31_82 -> m31_83  [key=0, style=solid];
m31_82 -> m31_54  [key=2, style=dotted];
m31_109 -> m31_107  [key=0, style=bold, color=blue];
m31_109 -> m31_110  [key=0, style=solid];
m31_144 -> m31_145  [key=0, style=solid];
m31_144 -> m31_148  [key=2, style=dotted];
m31_144 -> m31_28  [key=2, style=dotted];
m31_144 -> m31_142  [key=0, style=bold, color=blue];
m31_151 -> m31_149  [key=0, style=bold, color=blue];
m31_151 -> m31_152  [key=0, style=solid];
m31_150 -> m31_151  [key=0, style=solid];
m31_150 -> m31_148  [key=0, style=bold, color=blue];
m31_157 -> m31_155  [key=0, style=bold, color=blue];
m31_157 -> m31_158  [key=0, style=solid];
m31_124 -> m31_116  [key=0, style=bold, color=blue];
m31_124 -> m31_125  [key=0, style=solid];
m31_121 -> m31_122  [key=0, style=solid];
m31_121 -> m31_26  [key=2, style=dotted];
m31_121 -> m31_28  [key=2, style=dotted];
m31_122 -> m31_123  [key=0, style=solid];
m31_122 -> m31_26  [key=2, style=dotted];
m31_122 -> m31_28  [key=2, style=dotted];
m31_122 -> m31_20  [key=2, style=dotted];
m31_123 -> m31_124  [key=0, style=solid];
m31_123 -> m31_26  [key=2, style=dotted];
m31_123 -> m31_28  [key=2, style=dotted];
m31_123 -> m31_121  [key=0, style=bold, color=blue];
m31_169 -> m31_165  [key=0, style=bold, color=blue];
m31_169 -> m31_170  [key=0, style=solid];
m31_182 -> m31_178  [key=0, style=bold, color=blue];
m31_182 -> m31_183  [key=0, style=solid];
m31_182 -> m31_20  [key=2, style=dotted];
m31_179 -> m31_180  [key=0, style=solid];
m31_179 -> m31_183  [key=2, style=dotted];
m31_179 -> m31_24  [key=2, style=dotted];
m31_181 -> m31_50  [key=2, style=dotted];
m31_181 -> m31_146  [key=2, style=dotted];
m31_181 -> m31_182  [key=0, style=solid];
m31_210 -> m31_204  [key=0, style=bold, color=blue];
m31_205 -> m31_206  [key=0, style=solid];
m31_205 -> m31_24  [key=2, style=dotted];
m31_223 -> m31_218  [key=0, style=bold, color=blue];
m31_219 -> m31_220  [key=0, style=solid];
m31_219 -> m31_24  [key=2, style=dotted];
m31_221 -> m31_50  [key=2, style=dotted];
m31_221 -> m31_222  [key=0, style=solid];
m31_221 -> m31_196  [key=2, style=dotted];
m31_222 -> m31_223  [key=0, style=solid];
m31_222 -> m31_26  [key=2, style=dotted];
m31_222 -> m31_28  [key=2, style=dotted];
m31_237 -> m31_231  [key=0, style=bold, color=blue];
m31_232 -> m31_233  [key=0, style=solid];
m31_232 -> m31_24  [key=2, style=dotted];
m31_234 -> m31_235  [key=0, style=solid];
m31_234 -> m31_26  [key=2, style=dotted];
m31_234 -> m31_236  [key=1, style=dashed, color=darkseagreen4, label=entryTtl];
m31_235 -> m31_50  [key=2, style=dotted];
m31_235 -> m31_236  [key=0, style=solid];
m31_235 -> m31_196  [key=2, style=dotted];
m31_248 -> m31_245  [key=0, style=bold, color=blue];
m31_247 -> m31_248  [key=0, style=solid];
m31_247 -> m31_249  [key=2, style=dotted];
m31_247 -> m31_28  [key=2, style=dotted];
m31_261 -> m31_257  [key=0, style=bold, color=blue];
m31_259 -> m31_260  [key=0, style=solid];
m31_259 -> m31_249  [key=2, style=dotted];
m31_259 -> m31_28  [key=2, style=dotted];
m31_260 -> m31_50  [key=2, style=dotted];
m31_260 -> m31_261  [key=0, style=solid];
m31_260 -> m31_262  [key=2, style=dotted];
m31_274 -> m31_270  [key=0, style=bold, color=blue];
m31_271 -> m31_272  [key=0, style=solid];
m31_271 -> m31_275  [key=2, style=dotted];
m31_273 -> m31_274  [key=0, style=solid];
m31_273 -> m31_249  [key=2, style=dotted];
m31_273 -> m31_80  [key=2, style=dotted];
m31_287 -> m31_283  [key=0, style=bold, color=blue];
m31_284 -> m31_285  [key=0, style=solid];
m31_284 -> m31_288  [key=2, style=dotted];
m31_286 -> m31_50  [key=2, style=dotted];
m31_286 -> m31_146  [key=2, style=dotted];
m31_286 -> m31_287  [key=0, style=solid];
m31_303 -> m31_296  [key=0, style=bold, color=blue];
m31_297 -> m31_298  [key=0, style=solid];
m31_297 -> m31_288  [key=2, style=dotted];
m31_298 -> m31_299  [key=0, style=solid];
m31_298 -> m31_288  [key=2, style=dotted];
m31_299 -> m31_300  [key=0, style=solid];
m31_299 -> m31_288  [key=2, style=dotted];
m31_301 -> m31_103  [key=2, style=dotted];
m31_301 -> m31_50  [key=2, style=dotted];
m31_301 -> m31_302  [key=0, style=solid];
m31_302 -> m31_50  [key=2, style=dotted];
m31_302 -> m31_146  [key=2, style=dotted];
m31_302 -> m31_303  [key=0, style=solid];
m31_320 -> m31_311  [key=0, style=bold, color=blue];
m31_312 -> m31_313  [key=0, style=solid];
m31_312 -> m31_288  [key=2, style=dotted];
m31_313 -> m31_314  [key=0, style=solid];
m31_313 -> m31_288  [key=2, style=dotted];
m31_314 -> m31_315  [key=0, style=solid];
m31_314 -> m31_288  [key=2, style=dotted];
m31_315 -> m31_316  [key=0, style=solid];
m31_315 -> m31_288  [key=2, style=dotted];
m31_317 -> m31_103  [key=2, style=dotted];
m31_317 -> m31_50  [key=2, style=dotted];
m31_317 -> m31_318  [key=0, style=solid];
m31_318 -> m31_50  [key=2, style=dotted];
m31_318 -> m31_146  [key=2, style=dotted];
m31_318 -> m31_319  [key=0, style=solid];
m31_319 -> m31_50  [key=2, style=dotted];
m31_319 -> m31_146  [key=2, style=dotted];
m31_319 -> m31_320  [key=0, style=solid];
m31_29 -> m31_30  [key=0, style=solid];
m31_29 -> m31_24  [key=2, style=dotted];
m31_125 -> m31_126  [key=0, style=solid];
m31_125 -> m31_24  [key=2, style=dotted];
m31_171 -> m31_172  [key=0, style=solid];
m31_171 -> m31_169  [key=0, style=bold, color=blue];
m31_224 -> m31_225  [key=0, style=solid];
m31_238 -> m31_239  [key=0, style=solid];
m31_250 -> m31_251  [key=0, style=solid];
m31_263 -> m31_264  [key=0, style=solid];
m31_276 -> m31_277  [key=0, style=solid];
m31_289 -> m31_290  [key=0, style=solid];
m31_304 -> m31_305  [key=0, style=solid];
m31_321 -> m31_322  [key=0, style=solid];
m31_22 -> m31_23  [key=0, style=solid];
m31_22 -> m31_27  [key=2, style=dotted];
m31_22 -> m31_28  [key=2, style=dotted];
m31_22 -> m31_24  [key=2, style=dotted];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_27  [key=2, style=dotted];
m31_20 -> m31_28  [key=2, style=dotted];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_27  [key=2, style=dotted];
m31_21 -> m31_28  [key=2, style=dotted];
m31_142 -> m31_50  [key=2, style=dotted];
m31_142 -> m31_143  [key=0, style=solid];
m31_143 -> m31_50  [key=2, style=dotted];
m31_143 -> m31_144  [key=0, style=solid];
m31_143 -> m31_24  [key=2, style=dotted];
m31_236 -> m31_237  [key=0, style=solid];
m31_236 -> m31_28  [key=2, style=dotted];
m31_236 -> m31_27  [key=2, style=dotted];
m31_31 -> m31_29  [key=0, style=bold, color=blue];
m31_31 -> m31_32  [key=0, style=solid];
m31_30 -> d11  [key=2, style=dotted];
m31_30 -> m31_31  [key=0, style=solid];
m31_30 -> m31_33  [key=2, style=dotted];
m31_30 -> m31_28  [key=0, style=bold, color=blue];
m31_126 -> m31_127  [key=0, style=solid];
m31_126 -> m31_128  [key=2, style=dotted];
m31_126 -> m31_124  [key=0, style=bold, color=blue];
m31_173 -> m31_171  [key=0, style=bold, color=blue];
m31_173 -> m31_174  [key=0, style=solid];
m31_173 -> m31_24  [key=2, style=dotted];
m31_172 -> m31_173  [key=0, style=solid];
m31_172 -> m31_174  [key=2, style=dotted];
m31_198 -> m31_199  [key=0, style=solid];
m31_198 -> m31_200  [key=2, style=dotted];
m31_226 -> m31_224  [key=0, style=bold, color=blue];
m31_225 -> m31_226  [key=0, style=solid];
m31_225 -> m31_227  [key=2, style=dotted];
m31_240 -> m31_238  [key=0, style=bold, color=blue];
m31_239 -> d11  [key=2, style=dotted];
m31_239 -> m31_240  [key=0, style=solid];
m31_239 -> m31_241  [key=2, style=dotted];
m31_252 -> m31_250  [key=0, style=bold, color=blue];
m31_251 -> m31_252  [key=0, style=solid];
m31_251 -> m31_253  [key=2, style=dotted];
m31_265 -> m31_263  [key=0, style=bold, color=blue];
m31_264 -> m31_265  [key=0, style=solid];
m31_264 -> m31_266  [key=2, style=dotted];
m31_278 -> m31_276  [key=0, style=bold, color=blue];
m31_277 -> m31_278  [key=0, style=solid];
m31_277 -> m31_279  [key=2, style=dotted];
m31_291 -> m31_289  [key=0, style=bold, color=blue];
m31_290 -> m31_291  [key=0, style=solid];
m31_290 -> m31_292  [key=2, style=dotted];
m31_306 -> m31_304  [key=0, style=bold, color=blue];
m31_305 -> m31_306  [key=0, style=solid];
m31_305 -> m31_307  [key=2, style=dotted];
m31_323 -> m31_321  [key=0, style=bold, color=blue];
m31_322 -> m31_323  [key=0, style=solid];
m31_322 -> m31_324  [key=2, style=dotted];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_7  [key=2, style=dotted];
m31_6 -> m31_4  [key=0, style=bold, color=blue];
m31_170 -> m31_171  [key=0, style=solid];
m31_170 -> m31_20  [key=2, style=dotted];
m31_48 -> m31_46  [key=0, style=bold, color=blue];
m31_175 -> m31_176  [key=0, style=solid];
m31_176 -> m31_177  [key=0, style=solid];
m31_176 -> m31_20  [key=2, style=dotted];
m31_176 -> m31_11  [key=2, style=dotted];
m31_176 -> m31_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_177 -> m31_175  [key=0, style=bold, color=blue];
m31_36 -> m31_34  [key=0, style=bold, color=blue];
m31_35 -> m31_36  [key=0, style=solid, color=red];
m31_35 -> m31_11  [key=2, style=dotted, color=green];
m31_35 -> m31_37  [key=1, style=dashed, color=green, label="lambda expression"];
m31_35 -> m31_24  [key=2, style=dotted, color=red];
m31_34 -> m31_35  [key=0, style=solid, color=red];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_20  [key=2, style=dotted];
m31_61 -> m31_62  [key=0, style=solid];
m31_162 -> m31_163  [key=0, style=solid];
m31_162 -> m31_160  [key=0, style=bold, color=blue];
m31_163 -> m31_11  [key=2, style=dotted];
m31_163 -> m31_164  [key=0, style=solid];
m31_163 -> m31_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_164 -> m31_162  [key=0, style=bold, color=blue];
m31_164 -> m31_165  [key=0, style=solid];
m31_164 -> m31_20  [key=2, style=dotted];
m31_130 -> m31_131  [key=0, style=solid, color=green];
m31_130 -> m31_11  [key=2, style=dotted, color=green];
m31_130 -> m31_132  [key=1, style=dashed, color=green, label="lambda expression"];
m31_131 -> m31_132  [key=0, style=solid];
m31_131 -> m31_24  [key=2, style=dotted];
m31_131 -> m31_129  [key=0, style=bold, color=blue];
m31_280 -> m31_281  [key=0, style=solid];
m31_281 -> m31_11  [key=2, style=dotted];
m31_281 -> m31_282  [key=0, style=solid];
m31_281 -> m31_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_282 -> m31_280  [key=0, style=bold, color=blue];
m31_93 -> m31_94  [key=0, style=solid, color=green];
m31_93 -> m31_91  [key=0, style=bold, color=blue];
m31_46 -> m31_47  [key=0, style=solid];
m31_33 -> m31_31  [key=0, style=bold, color=blue];
m31_174 -> m31_172  [key=0, style=bold, color=blue];
m31_8 -> m31_9  [key=0, style=solid];
m31_308 -> m31_309  [key=0, style=solid];
m31_309 -> m31_11  [key=2, style=dotted];
m31_309 -> m31_310  [key=0, style=solid];
m31_309 -> m31_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_310 -> m31_308  [key=0, style=bold, color=blue];
m31_27 -> m31_25  [key=0, style=bold, color=blue];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_325  [key=0, style=solid];
m31_25 -> m31_326  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.Redis.RedisWriteOnlyTransaction>"];
m31_325 -> m31_326  [key=0, style=solid];
m31_325 -> m31_329  [key=2, style=dotted];
m31_325 -> m31_330  [key=2, style=dotted];
m31_325 -> m31_327  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m31_326 -> m31_327  [key=0, style=solid];
m31_326 -> m31_331  [key=2, style=dotted];
m31_327 -> m31_328  [key=0, style=solid];
m31_327 -> m31_332  [key=2, style=dotted];
m31_328 -> m31_25  [key=0, style=bold, color=blue];
m31_333 -> m31_335  [key=1, style=dashed, color=darkseagreen4, label="System.Action<IRedisClient>"];
m31_333 -> m31_334  [key=0, style=solid];
m31_335 -> m31_331  [key=2, style=dotted];
m31_335 -> m31_336  [key=0, style=solid];
m31_334 -> m31_335  [key=0, style=solid];
m31_334 -> m31_337  [key=2, style=dotted];
m31_336 -> m31_333  [key=0, style=bold, color=blue];
m31_32 -> m31_33  [key=0, style=solid];
m31_32 -> m31_20  [key=2, style=dotted];
m31_293 -> m31_294  [key=0, style=solid];
m31_294 -> m31_11  [key=2, style=dotted];
m31_294 -> m31_295  [key=0, style=solid];
m31_294 -> m31_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_295 -> m31_293  [key=0, style=bold, color=blue];
m31_228 -> m31_229  [key=0, style=solid];
m31_229 -> m31_11  [key=2, style=dotted];
m31_229 -> m31_230  [key=0, style=solid];
m31_229 -> m31_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_230 -> m31_228  [key=0, style=bold, color=blue];
m31_47 -> m31_48  [key=0, style=solid];
m31_47 -> m31_24  [key=2, style=dotted];
m31_54 -> m31_52  [key=0, style=bold, color=blue];
m31_28 -> m31_29  [key=0, style=solid];
m31_338 -> m31_35  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_63  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_94  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_130  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_176  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_216  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_229  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_268  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_294  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_338 -> m31_309  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m31_339 -> m31_59  [key=1, style=dashed, color=darkseagreen4, label=state];
m31_340 -> m31_91  [key=1, style=dashed, color=darkseagreen4, label=state];
m31_341 -> m31_111  [key=1, style=dashed, color=darkseagreen4, label=state];
m31_342 -> m31_159  [key=1, style=dashed, color=darkseagreen4, label=state];
m32_8 -> m32_9  [key=0, style=solid];
m32_9 -> m32_10  [key=0, style=solid];
m32_10 -> m32_8  [key=0, style=bold, color=blue];
m32_11 -> m32_12  [key=0, style=solid];
m32_12 -> m32_13  [key=0, style=solid];
m32_12 -> m32_14  [key=2, style=dotted];
m32_13 -> m32_11  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m32_0 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=0, style=solid];
m32_2 -> m32_4  [key=0, style=solid];
m32_2 -> d10  [key=2, style=dotted];
m32_2 -> m32_6  [key=2, style=dotted];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_7  [key=2, style=dotted];
m32_4 -> m32_0  [key=0, style=bold, color=blue];
m32_15 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.OwinDashboardResponse"];
m32_15 -> m32_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.OwinDashboardResponse"];
m32_15 -> m32_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.OwinDashboardResponse"];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_7  [key=2, style=dotted];
m35_1 -> m35_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_1 -> m35_4  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_8  [key=2, style=dotted];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_10  [key=2, style=dotted];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_9  [key=2, style=dotted];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_11  [key=2, style=dotted];
m35_5 -> m35_12  [key=2, style=dotted];
m35_6 -> m35_0  [key=0, style=bold, color=blue];
m35_23 -> m35_24  [key=0, style=solid];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> m35_21  [key=2, style=dotted];
m35_25 -> m35_26  [key=0, style=solid];
m35_25 -> m35_28  [key=2, style=dotted];
m35_26 -> m35_27  [key=0, style=solid];
m35_26 -> m35_29  [key=2, style=dotted];
m35_26 -> m35_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_27 -> m35_23  [key=0, style=bold, color=blue];
m35_35 -> m35_36  [key=0, style=solid];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_21  [key=2, style=dotted];
m35_37 -> m35_38  [key=0, style=solid];
m35_37 -> m35_40  [key=2, style=dotted];
m35_38 -> m35_39  [key=0, style=solid];
m35_38 -> m35_29  [key=2, style=dotted];
m35_38 -> m35_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_39 -> m35_35  [key=0, style=bold, color=blue];
m35_45 -> m35_46  [key=0, style=solid];
m35_46 -> m35_47  [key=0, style=solid, color=red];
m35_46 -> m35_21  [key=2, style=dotted];
m35_46 -> m35_48  [key=1, style=dashed, color=darkseagreen4, label=handler];
m35_46 -> m35_53  [key=1, style=dashed, color=darkseagreen4, label=handler];
m35_47 -> m35_48  [key=0, style=solid, color=red];
m35_47 -> m35_11  [key=2, style=dotted, color=red];
m35_47 -> m35_50  [key=2, style=dotted, color=red];
m35_47 -> m35_53  [key=1, style=dashed, color=red, label=context];
m35_48 -> m35_49  [key=0, style=solid];
m35_48 -> m35_51  [key=2, style=dotted];
m35_48 -> m35_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_49 -> m35_45  [key=0, style=bold, color=blue];
m35_52 -> m35_53  [key=0, style=solid];
m35_13 -> m35_14  [key=0, style=solid];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_16  [key=2, style=dotted];
m35_15 -> m35_13  [key=0, style=bold, color=blue];
m35_30 -> m35_31  [key=0, style=solid];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_33  [key=2, style=dotted];
m35_31 -> m35_34  [key=2, style=dotted];
m35_32 -> m35_30  [key=0, style=bold, color=blue];
m35_41 -> m35_42  [key=0, style=solid];
m35_42 -> m35_43  [key=0, style=solid];
m35_42 -> m35_44  [key=2, style=dotted];
m35_43 -> m35_41  [key=0, style=bold, color=blue];
m35_53 -> m35_54  [key=0, style=solid];
m35_53 -> m35_28  [key=2, style=dotted];
m35_54 -> m35_52  [key=0, style=bold, color=blue];
m35_17 -> m35_18  [key=0, style=solid];
m35_18 -> m35_19  [key=0, style=solid];
m35_18 -> m35_21  [key=2, style=dotted];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_22  [key=2, style=dotted];
m35_20 -> m35_17  [key=0, style=bold, color=blue];
m35_55 -> m35_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_47  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_55 -> m35_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m35_56 -> m35_53  [key=1, style=dashed, color=darkseagreen4, label=handler];
m35_57 -> m35_53  [key=1, style=dashed, color=darkseagreen4, label=context];
m36_23 -> m36_24  [key=0, style=solid];
m36_24 -> m36_25  [key=0, style=solid];
m36_24 -> m36_22  [key=2, style=dotted];
m36_24 -> m36_9  [key=2, style=dotted];
m36_25 -> m36_23  [key=0, style=bold, color=blue];
m36_5 -> m36_6  [key=0, style=solid];
m36_6 -> m36_7  [key=0, style=solid];
m36_6 -> m36_8  [key=2, style=dotted];
m36_6 -> m36_9  [key=2, style=dotted];
m36_7 -> m36_5  [key=0, style=bold, color=blue];
m36_91 -> m36_92  [key=0, style=solid];
m36_91 -> m36_93  [key=1, style=dashed, color=darkseagreen4, label=Table];
m36_92 -> m36_93  [key=0, style=solid];
m36_92 -> m36_95  [key=2, style=dotted];
m36_93 -> m36_94  [key=0, style=solid];
m36_93 -> m36_96  [key=2, style=dotted];
m36_94 -> m36_91  [key=0, style=bold, color=blue];
m36_46 -> m36_47  [key=0, style=solid];
m36_47 -> m36_48  [key=0, style=solid];
m36_47 -> m36_50  [key=2, style=dotted];
m36_47 -> m36_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m36_47 -> m36_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m36_48 -> m36_49  [key=0, style=solid];
m36_48 -> m36_51  [key=2, style=dotted];
m36_49 -> m36_46  [key=0, style=bold, color=blue];
m36_87 -> m36_88  [key=0, style=solid];
m36_88 -> m36_89  [key=0, style=solid];
m36_88 -> m36_85  [key=2, style=dotted];
m36_88 -> m36_90  [key=2, style=dotted];
m36_89 -> m36_87  [key=0, style=bold, color=blue];
m36_77 -> m36_78  [key=0, style=solid];
m36_78 -> m36_79  [key=0, style=solid];
m36_78 -> m36_81  [key=0, style=solid];
m36_78 -> m36_76  [key=2, style=dotted];
m36_79 -> m36_80  [key=0, style=solid];
m36_80 -> m36_81  [key=0, style=solid];
m36_81 -> m36_77  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_3  [key=2, style=dotted];
m36_1 -> m36_4  [key=2, style=dotted];
m36_2 -> m36_0  [key=0, style=bold, color=blue];
m36_117 -> m36_118  [key=0, style=solid];
m36_117 -> m36_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m36_118 -> m36_119  [key=0, style=solid];
m36_118 -> m36_121  [key=2, style=dotted];
m36_119 -> m36_120  [key=0, style=solid];
m36_119 -> m36_122  [key=2, style=dotted];
m36_119 -> m36_123  [key=2, style=dotted];
m36_120 -> m36_117  [key=0, style=bold, color=blue];
m36_13 -> m36_14  [key=0, style=solid];
m36_14 -> m36_15  [key=0, style=solid];
m36_14 -> m36_8  [key=2, style=dotted];
m36_14 -> m36_9  [key=2, style=dotted];
m36_15 -> m36_13  [key=0, style=bold, color=blue];
m36_136 -> m36_137  [key=0, style=solid];
m36_136 -> m36_139  [key=1, style=dashed, color=darkseagreen4, label=Table];
m36_136 -> m36_140  [key=1, style=dashed, color=darkseagreen4, label=Table];
m36_137 -> m36_138  [key=0, style=solid];
m36_137 -> m36_107  [key=2, style=dotted];
m36_139 -> m36_140  [key=0, style=solid];
m36_139 -> m36_143  [key=0, style=solid];
m36_140 -> m36_141  [key=0, style=solid];
m36_138 -> m36_139  [key=0, style=solid];
m36_138 -> m36_140  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_138 -> m36_141  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_138 -> m36_142  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_141 -> m36_142  [key=0, style=solid];
m36_141 -> m36_107  [key=2, style=dotted];
m36_142 -> m36_139  [key=0, style=solid];
m36_142 -> m36_142  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_143 -> m36_136  [key=0, style=bold, color=blue];
m36_97 -> m36_98  [key=0, style=solid];
m36_98 -> m36_99  [key=0, style=solid];
m36_98 -> m36_105  [key=2, style=dotted];
m36_99 -> m36_100  [key=0, style=solid];
m36_99 -> m36_106  [key=2, style=dotted];
m36_99 -> m36_102  [key=1, style=dashed, color=darkseagreen4, label=args];
m36_100 -> m36_101  [key=0, style=solid];
m36_100 -> m36_107  [key=2, style=dotted];
m36_102 -> m36_103  [key=0, style=solid];
m36_102 -> m36_108  [key=2, style=dotted];
m36_102 -> m36_86  [key=2, style=dotted];
m36_102 -> m36_102  [key=1, style=dashed, color=darkseagreen4, label=pair];
m36_101 -> m36_102  [key=0, style=solid];
m36_101 -> m36_104  [key=0, style=solid];
m36_103 -> m36_101  [key=0, style=solid];
m36_103 -> m36_107  [key=2, style=dotted];
m36_103 -> m36_103  [key=1, style=dashed, color=darkseagreen4, label=pair];
m36_104 -> m36_97  [key=0, style=bold, color=blue];
m36_82 -> m36_83  [key=0, style=solid];
m36_83 -> m36_84  [key=0, style=solid];
m36_83 -> m36_85  [key=2, style=dotted];
m36_83 -> m36_86  [key=2, style=dotted];
m36_84 -> m36_82  [key=0, style=bold, color=blue];
m36_144 -> m36_145  [key=0, style=solid];
m36_145 -> m36_146  [key=0, style=solid];
m36_145 -> m36_147  [key=2, style=dotted];
m36_146 -> m36_144  [key=0, style=bold, color=blue];
m36_26 -> m36_27  [key=0, style=solid];
m36_27 -> m36_28  [key=0, style=solid];
m36_27 -> m36_34  [key=2, style=dotted];
m36_28 -> m36_29  [key=0, style=solid];
m36_28 -> m36_35  [key=2, style=dotted];
m36_28 -> m36_36  [key=2, style=dotted];
m36_28 -> m36_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m36_29 -> m36_30  [key=0, style=solid];
m36_29 -> m36_35  [key=2, style=dotted];
m36_29 -> n9  [key=2, style=dotted];
m36_29 -> m36_36  [key=2, style=dotted];
m36_29 -> m36_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m36_30 -> m36_31  [key=0, style=solid];
m36_30 -> m36_33  [key=0, style=solid];
m36_30 -> m36_38  [key=2, style=dotted];
m36_31 -> m36_32  [key=0, style=solid, color=red];
m36_32 -> m36_33  [key=0, style=solid, color=red];
m36_33 -> m36_26  [key=0, style=bold, color=blue];
m36_66 -> m36_67  [key=0, style=solid];
m36_67 -> m36_68  [key=0, style=solid];
m36_67 -> m36_70  [key=0, style=solid];
m36_67 -> m36_34  [key=2, style=dotted];
m36_67 -> m36_38  [key=2, style=dotted];
m36_68 -> m36_69  [key=0, style=solid];
m36_69 -> m36_70  [key=0, style=solid];
m36_70 -> m36_66  [key=0, style=bold, color=blue];
m36_113 -> m36_114  [key=0, style=solid];
m36_39 -> m36_40  [key=0, style=solid];
m36_42 -> m36_43  [key=0, style=solid];
m36_40 -> m36_41  [key=0, style=solid];
m36_41 -> m36_39  [key=0, style=bold, color=blue];
m36_43 -> m36_44  [key=0, style=solid];
m36_43 -> m36_45  [key=2, style=dotted];
m36_44 -> m36_42  [key=0, style=bold, color=blue];
m36_52 -> m36_53  [key=0, style=solid];
m36_55 -> m36_56  [key=0, style=solid];
m36_53 -> m36_54  [key=0, style=solid];
m36_54 -> m36_52  [key=0, style=bold, color=blue];
m36_56 -> m36_57  [key=0, style=solid];
m36_57 -> m36_55  [key=0, style=bold, color=blue];
m36_114 -> m36_115  [key=0, style=solid];
m36_114 -> m36_106  [key=2, style=dotted];
m36_114 -> m36_116  [key=2, style=dotted];
m36_115 -> m36_113  [key=0, style=bold, color=blue];
m36_71 -> m36_72  [key=0, style=solid];
m36_72 -> m36_73  [key=0, style=solid];
m36_72 -> m36_75  [key=0, style=solid];
m36_72 -> m36_76  [key=2, style=dotted];
m36_73 -> m36_74  [key=0, style=solid];
m36_74 -> m36_75  [key=0, style=solid];
m36_75 -> m36_71  [key=0, style=bold, color=blue];
m36_10 -> m36_11  [key=0, style=solid];
m36_11 -> m36_12  [key=0, style=solid];
m36_11 -> m36_8  [key=2, style=dotted];
m36_11 -> m36_9  [key=2, style=dotted];
m36_12 -> m36_10  [key=0, style=bold, color=blue];
m36_58 -> m36_59  [key=0, style=solid];
m36_59 -> m36_60  [key=0, style=solid];
m36_59 -> m36_8  [key=2, style=dotted];
m36_59 -> m36_9  [key=2, style=dotted];
m36_60 -> m36_58  [key=0, style=bold, color=blue];
m36_16 -> m36_17  [key=0, style=solid];
m36_17 -> m36_18  [key=0, style=solid];
m36_17 -> m36_8  [key=2, style=dotted];
m36_17 -> m36_9  [key=2, style=dotted];
m36_18 -> m36_16  [key=0, style=bold, color=blue];
m36_19 -> m36_20  [key=0, style=solid];
m36_20 -> m36_21  [key=0, style=solid];
m36_20 -> m36_22  [key=2, style=dotted];
m36_20 -> m36_9  [key=2, style=dotted];
m36_21 -> m36_19  [key=0, style=bold, color=blue];
m36_124 -> m36_125  [key=0, style=solid];
m36_124 -> m36_127  [key=1, style=dashed, color=darkseagreen4, label=Table];
m36_124 -> m36_128  [key=1, style=dashed, color=darkseagreen4, label=Table];
m36_125 -> m36_126  [key=0, style=solid];
m36_125 -> m36_107  [key=2, style=dotted];
m36_127 -> m36_128  [key=0, style=solid];
m36_127 -> m36_131  [key=0, style=solid];
m36_128 -> m36_129  [key=0, style=solid];
m36_126 -> m36_127  [key=0, style=solid];
m36_126 -> m36_128  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_126 -> m36_129  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_126 -> m36_130  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_129 -> m36_130  [key=0, style=solid];
m36_129 -> m36_107  [key=2, style=dotted];
m36_130 -> m36_127  [key=0, style=solid];
m36_130 -> m36_130  [key=1, style=dashed, color=darkseagreen4, label=i];
m36_131 -> m36_124  [key=0, style=bold, color=blue];
m36_109 -> m36_110  [key=0, style=solid];
m36_110 -> m36_111  [key=0, style=solid];
m36_110 -> m36_112  [key=2, style=dotted];
m36_110 -> m36_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m36_111 -> m36_109  [key=0, style=bold, color=blue];
m36_61 -> m36_62  [key=0, style=solid];
m36_62 -> m36_63  [key=0, style=solid];
m36_62 -> m36_65  [key=0, style=solid];
m36_62 -> m36_34  [key=2, style=dotted];
m36_62 -> m36_38  [key=2, style=dotted];
m36_63 -> m36_64  [key=0, style=solid];
m36_64 -> m36_65  [key=0, style=solid];
m36_65 -> m36_61  [key=0, style=bold, color=blue];
m36_132 -> m36_133  [key=0, style=solid];
m36_133 -> m36_134  [key=0, style=solid];
m36_133 -> m36_135  [key=2, style=dotted];
m36_134 -> m36_132  [key=0, style=bold, color=blue];
m36_148 -> m36_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_32  [key=1, style=dashed, color=red, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_129  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m36_148 -> m36_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m38_5 -> m38_6  [key=0, style=solid];
m38_26 -> m38_27  [key=0, style=solid];
m38_45 -> m38_43  [key=0, style=bold, color=blue];
m38_47 -> m38_48  [key=0, style=solid];
m38_47 -> m38_51  [key=0, style=solid];
m38_48 -> m38_49  [key=0, style=solid];
m38_48 -> m38_50  [key=2, style=dotted];
m38_49 -> m38_47  [key=0, style=bold, color=blue];
m38_49 -> m38_50  [key=0, style=solid];
m38_49 -> m38_56  [key=2, style=dotted];
m38_46 -> m38_47  [key=0, style=solid];
m38_50 -> m38_51  [key=0, style=solid];
m38_50 -> m38_57  [key=2, style=dotted];
m38_51 -> m38_52  [key=0, style=solid];
m38_51 -> m38_55  [key=0, style=solid];
m38_51 -> m38_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_13  [key=1, style=dashed, color=red, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_19  [key=1, style=dashed, color=red, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_51 -> m38_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m38_52 -> m38_53  [key=0, style=solid];
m38_52 -> m38_54  [key=0, style=solid];
m38_53 -> m38_54  [key=0, style=solid];
m38_53 -> m38_56  [key=2, style=dotted];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_57  [key=2, style=dotted];
m38_55 -> m38_46  [key=0, style=bold, color=blue];
m38_6 -> m38_7  [key=0, style=solid];
m38_35 -> m38_0  [key=3, color=darkorchid, style=bold, label="Field variable System.Collections.Generic.IEnumerable<string> _queues"];
m38_35 -> m38_36  [key=0, style=solid];
m38_43 -> m38_44  [key=0, style=solid];
m38_44 -> m38_45  [key=0, style=solid];
m38_44 -> m38_46  [key=2, style=dotted];
m38_12 -> m38_13  [key=0, style=solid, color=red];
m38_13 -> m38_14  [key=0, style=solid, color=red];
m38_13 -> m38_15  [key=0, style=solid, color=red];
m38_14 -> m38_13  [key=0, style=solid, color=red];
m38_14 -> m38_16  [key=2, style=dotted];
m38_14 -> m38_58  [key=0, style=solid];
m38_15 -> m38_12  [key=0, style=bold, color=blue];
m38_15 -> m38_18  [key=1, style=dashed, color=green, label="string[]"];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_19  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m38_15 -> m38_20  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m38_27 -> m38_28  [key=0, style=solid];
m38_27 -> m38_14  [key=2, style=dotted];
m38_28 -> m38_29  [key=0, style=solid];
m38_28 -> m38_30  [key=2, style=dotted];
m38_29 -> m38_27  [key=0, style=bold, color=blue];
m38_29 -> m38_17  [key=0, style=solid];
m38_29 -> m38_30  [key=0, style=solid];
m38_30 -> m38_31  [key=0, style=solid];
m38_30 -> m38_35  [key=2, style=dotted];
m38_0 -> m38_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m38_0 -> m38_6  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m38_0 -> m38_7  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m38_0 -> m38_1  [key=0, style=solid];
m38_0 -> m38_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>"];
m38_7 -> m38_8  [key=0, style=solid];
m38_7 -> m38_12  [key=2, style=dotted];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_13  [key=2, style=dotted];
m38_8 -> m38_10  [key=0, style=solid];
m38_9 -> m38_14  [key=2, style=dotted];
m38_9 -> m38_10  [key=0, style=solid];
m38_9 -> m38_8  [key=0, style=solid];
m38_9 -> m38_11  [key=2, style=dotted];
m38_3 -> m38_5  [key=0, style=solid];
m38_3 -> m38_4  [key=0, style=solid];
m38_3 -> m38_6  [key=2, style=dotted];
m38_1 -> m38_3  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_4 -> m38_10  [key=0, style=solid];
m38_4 -> d10  [key=2, style=dotted];
m38_4 -> m38_0  [key=0, style=bold, color=blue];
m38_2 -> m38_10  [key=0, style=solid];
m38_2 -> d10  [key=2, style=dotted];
m38_2 -> m38_4  [key=0, style=solid];
m38_2 -> m38_5  [key=2, style=dotted];
m38_10 -> m38_0  [key=0, style=bold, color=blue];
m38_10 -> m38_7  [key=0, style=bold, color=blue];
m38_18 -> m38_18  [key=1, style=dashed, color=green, label=queueIndex];
m38_18 -> m38_19  [key=0, style=solid, color=red];
m38_18 -> m38_12  [key=2, style=dotted];
m38_17 -> m38_18  [key=0, style=solid, color=green];
m38_17 -> m38_17  [key=3, color=darkorchid, style=bold, label="Local variable int queueIndex"];
m38_19 -> m38_20  [key=0, style=solid, color=red];
m38_19 -> m38_21  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m38_23 -> m38_24  [key=0, style=solid, color=green];
m38_22 -> m38_23  [key=0, style=solid, color=green];
m38_22 -> m38_26  [key=0, style=solid];
m38_22 -> m38_29  [key=0, style=solid];
m38_22 -> m38_34  [key=2, style=dotted];
m38_24 -> m38_25  [key=0, style=solid];
m38_24 -> m38_14  [key=2, style=dotted];
m38_24 -> m38_26  [key=2, style=dotted];
m38_16 -> m38_17  [key=0, style=solid];
m38_20 -> m38_20  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_32  [key=2, style=dotted];
m38_20 -> m38_19  [key=0, style=solid, color=red];
m38_20 -> m38_22  [key=2, style=dotted];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_33  [key=2, style=dotted];
m38_21 -> m38_17  [key=0, style=bold, color=blue];
m38_25 -> m38_29  [key=0, style=solid];
m38_25 -> m38_23  [key=0, style=bold, color=blue];
m38_31 -> m38_15  [key=0, style=bold, color=blue];
m38_31 -> m38_32  [key=0, style=solid];
m38_39 -> m38_40  [key=0, style=solid];
m38_39 -> m38_44  [key=2, style=dotted];
m38_40 -> m38_41  [key=0, style=solid];
m38_40 -> m38_42  [key=2, style=dotted];
m38_40 -> m38_45  [key=2, style=dotted];
m38_41 -> m38_39  [key=0, style=bold, color=blue];
m38_41 -> m38_36  [key=0, style=bold, color=blue];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_34  [key=2, style=dotted];
m38_33 -> m38_31  [key=0, style=bold, color=blue];
m38_33 -> m38_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Threading.CancellationToken cancellationToken"];
m38_33 -> m38_19  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
m38_33 -> m38_76  [key=0, style=solid];
m38_33 -> m38_77  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m38_33 -> m38_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_33 -> m38_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_33 -> m38_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_33 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_33 -> m38_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_33 -> m38_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_38  [key=2, style=dotted];
m38_36 -> m38_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_37 -> m38_35  [key=0, style=bold, color=blue];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_40  [key=1, style=dashed, color=darkseagreen4, label=body];
m38_37 -> m38_42  [key=2, style=dotted];
m38_100 -> m38_101  [key=0, style=solid];
m38_97 -> m38_98  [key=0, style=solid];
m38_98 -> m38_99  [key=0, style=solid];
m38_101 -> m38_102  [key=0, style=solid];
m38_99 -> m38_97  [key=0, style=bold, color=blue];
m38_102 -> m38_100  [key=0, style=bold, color=blue];
m38_38 -> m38_39  [key=0, style=solid];
m38_38 -> m38_43  [key=2, style=dotted];
m38_38 -> m38_40  [key=1, style=dashed, color=darkseagreen4, label=properties];
m38_59 -> m38_60  [key=0, style=solid];
m38_59 -> m38_61  [key=0, style=solid];
m38_61 -> m38_62  [key=0, style=solid];
m38_61 -> m38_63  [key=0, style=solid];
m38_62 -> m38_63  [key=0, style=solid];
m38_62 -> m38_72  [key=2, style=dotted];
m38_63 -> m38_64  [key=0, style=solid];
m38_63 -> m38_65  [key=0, style=solid];
m38_64 -> m38_65  [key=0, style=solid];
m38_64 -> m38_12  [key=2, style=dotted];
m38_65 -> m38_66  [key=0, style=solid];
m38_65 -> m38_73  [key=2, style=dotted];
m38_66 -> m38_67  [key=0, style=solid];
m38_66 -> m38_74  [key=2, style=dotted];
m38_67 -> m38_68  [key=0, style=solid];
m38_67 -> m38_43  [key=2, style=dotted];
m38_69 -> m38_70  [key=0, style=solid];
m38_69 -> m38_71  [key=0, style=solid];
m38_70 -> m38_69  [key=0, style=solid];
m38_70 -> m38_75  [key=2, style=dotted];
m38_58 -> m38_59  [key=0, style=solid];
m38_60 -> m38_71  [key=0, style=solid];
m38_68 -> m38_69  [key=0, style=solid];
m38_68 -> m38_44  [key=2, style=dotted];
m38_71 -> m38_14  [key=0, style=bold, color=blue];
m38_76 -> m38_77  [key=0, style=solid];
m38_76 -> m38_87  [key=3, color=darkorchid, style=bold, label="Local variable QueueingBasicConsumer consumer"];
m38_77 -> m38_77  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m38_77 -> m38_78  [key=0, style=solid];
m38_77 -> m38_32  [key=2, style=dotted];
m38_78 -> m38_79  [key=0, style=solid];
m38_78 -> m38_84  [key=0, style=solid];
m38_78 -> m38_93  [key=2, style=dotted];
m38_78 -> m38_86  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m38_78 -> m38_91  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m38_80 -> m38_81  [key=0, style=solid];
m38_80 -> m38_91  [key=0, style=solid];
m38_80 -> m38_93  [key=2, style=dotted];
m38_82 -> m38_83  [key=0, style=solid];
m38_82 -> m38_95  [key=2, style=dotted];
m38_82 -> m38_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_83 -> m38_91  [key=0, style=solid];
m38_83 -> m38_96  [key=2, style=dotted];
m38_88 -> m38_89  [key=0, style=solid];
m38_88 -> m38_95  [key=2, style=dotted];
m38_88 -> m38_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_89 -> m38_90  [key=0, style=solid];
m38_89 -> m38_96  [key=2, style=dotted];
m38_81 -> m38_82  [key=0, style=solid];
m38_81 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m38_81 -> m38_94  [key=2, style=dotted];
m38_81 -> m38_98  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m38_81 -> m38_91  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m38_87 -> m38_88  [key=0, style=solid];
m38_87 -> m38_89  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m38_87 -> m38_94  [key=2, style=dotted];
m38_87 -> m38_101  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m38_87 -> m38_90  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m38_91 -> m38_92  [key=0, style=solid];
m38_79 -> m38_80  [key=0, style=solid];
m38_84 -> m38_91  [key=0, style=solid];
m38_84 -> m38_85  [key=0, style=solid];
m38_86 -> m38_87  [key=0, style=solid];
m38_86 -> m38_91  [key=0, style=solid];
m38_90 -> m38_91  [key=0, style=solid];
m38_85 -> m38_86  [key=0, style=solid];
m38_92 -> m38_33  [key=0, style=bold, color=blue];
m38_103 -> m38_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_103 -> m38_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m38_104 -> m38_98  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m38_105 -> m38_101  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_2  [key=0, style=solid];
m39_2 -> m39_3  [key=0, style=solid, color=green];
m39_2 -> m39_4  [key=2, style=dotted];
m39_3 -> m39_3  [key=0, style=solid, color=green];
m39_3 -> m39_0  [key=0, style=bold, color=blue];
m39_5 -> m39_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m39_5 -> m39_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m39_5 -> m39_3  [key=1, style=dashed, color=green, label="HangFire.Server.ServerComponentRunnerOptions"];
m40_0 -> m40_1  [key=0, style=solid, color=green];
m40_0 -> m40_3  [key=1, style=dashed, color=green, label="string[]"];
m40_0 -> m40_5  [key=1, style=dashed, color=green, label="HangFire.JobStorage"];
m40_0 -> m40_7  [key=1, style=dashed, color=green, label="HangFire.Server.IJobPerformanceProcess"];
m40_0 -> m40_9  [key=1, style=dashed, color=green, label="HangFire.JobActivator"];
m40_0 -> m40_11  [key=1, style=dashed, color=green, label="HangFire.States.IStateMachineFactory"];
m40_0 -> m40_13  [key=1, style=dashed, color=green, label=string];
m40_0 -> m40_14  [key=1, style=dashed, color=green, label="string[]"];
m40_0 -> m40_15  [key=1, style=dashed, color=green, label="HangFire.JobStorage"];
m40_0 -> m40_16  [key=1, style=dashed, color=green, label="HangFire.Server.IJobPerformanceProcess"];
m40_0 -> m40_17  [key=1, style=dashed, color=green, label="HangFire.JobActivator"];
m40_0 -> m40_18  [key=1, style=dashed, color=green, label="HangFire.States.IStateMachineFactory"];
m40_1 -> m40_2  [key=0, style=solid, color=green];
m40_1 -> m40_3  [key=0, style=solid, color=green];
m40_2 -> m40_19  [key=0, style=solid, color=green];
m40_2 -> d10  [key=2, style=dotted, color=green];
m40_3 -> m40_4  [key=0, style=solid, color=green];
m40_3 -> m40_5  [key=0, style=solid, color=green];
m40_4 -> m40_19  [key=0, style=solid, color=green];
m40_4 -> d10  [key=2, style=dotted, color=green];
m40_5 -> m40_6  [key=0, style=solid, color=green];
m40_5 -> m40_7  [key=0, style=solid, color=green];
m40_6 -> m40_19  [key=0, style=solid, color=green];
m40_6 -> d10  [key=2, style=dotted, color=green];
m40_7 -> m40_8  [key=0, style=solid, color=green];
m40_7 -> m40_9  [key=0, style=solid, color=green];
m40_8 -> m40_19  [key=0, style=solid, color=green];
m40_8 -> d10  [key=2, style=dotted, color=green];
m40_9 -> m40_10  [key=0, style=solid, color=green];
m40_9 -> m40_11  [key=0, style=solid, color=green];
m40_10 -> m40_19  [key=0, style=solid, color=green];
m40_10 -> d10  [key=2, style=dotted, color=green];
m40_11 -> m40_12  [key=0, style=solid, color=green];
m40_11 -> m40_13  [key=0, style=solid, color=green];
m40_12 -> m40_19  [key=0, style=solid, color=green];
m40_12 -> d10  [key=2, style=dotted, color=green];
m40_13 -> m40_14  [key=0, style=solid, color=green];
m40_14 -> m40_15  [key=0, style=solid, color=green];
m40_15 -> m40_16  [key=0, style=solid, color=green];
m40_16 -> m40_17  [key=0, style=solid, color=green];
m40_17 -> m40_18  [key=0, style=solid, color=green];
m40_18 -> m40_19  [key=0, style=solid, color=green];
m40_19 -> m40_0  [key=0, style=bold, color=blue];
m40_23 -> m40_13  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m40_23 -> m40_14  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m40_23 -> m40_15  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m40_23 -> m40_16  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m40_23 -> m40_17  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m40_23 -> m40_18  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m41_0 -> m41_1  [key=0, style=solid, color=green];
m41_0 -> m41_2  [key=1, style=dashed, color=green, label="HangFire.SqlServer.PersistentJobQueueProviderCollection"];
m41_1 -> m41_2  [key=0, style=solid, color=green];
m41_2 -> m41_3  [key=0, style=solid, color=green];
m41_3 -> m41_0  [key=0, style=bold, color=blue];
m41_48 -> m41_385  [key=0, style=solid];
m41_48 -> m41_386  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_48 -> m41_387  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m41_387 -> m41_388  [key=0, style=solid];
m41_387 -> m41_367  [key=2, style=dotted];
m41_385 -> m41_385  [key=3, color=darkorchid, style=bold, label="Local variable string jobsSql"];
m41_385 -> m41_386  [key=0, style=solid];
m41_386 -> m41_387  [key=0, style=solid];
m41_386 -> m41_81  [key=2, style=dotted];
m41_386 -> m41_90  [key=2, style=dotted];
m41_388 -> m41_48  [key=0, style=bold, color=blue];
m41_234 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.StatisticsDto GetStatistics"];
m41_234 -> m41_235  [key=0, style=solid];
m41_235 -> m41_7  [key=2, style=dotted];
m41_235 -> m41_235  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.StatisticsDto "];
m41_235 -> m41_236  [key=0, style=solid];
m41_235 -> m41_237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_236 -> m41_234  [key=0, style=bold, color=blue];
m41_72 -> m41_73  [key=0, style=solid, color=green];
m41_72 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount"];
m41_73 -> m41_74  [key=0, style=solid, color=green];
m41_73 -> m41_7  [key=2, style=dotted, color=green];
m41_73 -> m41_75  [key=1, style=dashed, color=green, label="lambda expression"];
m41_74 -> m41_72  [key=0, style=bold, color=blue];
m41_7 -> m41_5  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_13  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_23  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_31  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_37  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_43  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_56  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_66  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_73  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_351  [key=0, style=solid];
m41_7 -> m41_354  [key=1, style=dashed, color=darkseagreen4, label="System.Func<SqlConnection, T>"];
m41_7 -> m41_95  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_106  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_117  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_162  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_172  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_182  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_189  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_195  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_223  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_229  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_7 -> m41_235  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m41_352 -> m41_353  [key=0, style=solid];
m41_352 -> m41_360  [key=2, style=dotted];
m41_352 -> m41_354  [key=1, style=dashed, color=darkseagreen4, label=connection];
m41_351 -> m41_352  [key=0, style=solid];
m41_351 -> m41_358  [key=2, style=dotted];
m41_351 -> m41_359  [key=2, style=dotted];
m41_351 -> m41_355  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m41_354 -> m41_355  [key=0, style=solid];
m41_354 -> m41_256  [key=2, style=dotted];
m41_354 -> m41_356  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_353 -> m41_354  [key=0, style=solid];
m41_353 -> m41_361  [key=2, style=dotted];
m41_356 -> m41_357  [key=0, style=solid];
m41_355 -> m41_356  [key=0, style=solid];
m41_355 -> m41_362  [key=2, style=dotted];
m41_357 -> m41_7  [key=0, style=bold, color=blue];
m41_194 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobDetailsDto JobDetails"];
m41_194 -> m41_195  [key=0, style=solid];
m41_194 -> m41_199  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_195 -> m41_7  [key=2, style=dotted];
m41_195 -> m41_195  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobDetailsDto "];
m41_195 -> m41_196  [key=0, style=solid];
m41_195 -> m41_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_196 -> m41_194  [key=0, style=bold, color=blue];
m41_36 -> m41_37  [key=0, style=solid, color=green];
m41_36 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn long ProcessingCount"];
m41_37 -> m41_38  [key=0, style=solid, color=green];
m41_37 -> m41_7  [key=2, style=dotted, color=green];
m41_37 -> m41_39  [key=1, style=dashed, color=green, label="lambda expression"];
m41_38 -> m41_36  [key=0, style=bold, color=blue];
m41_181 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m41_181 -> m41_182  [key=0, style=solid];
m41_182 -> m41_7  [key=2, style=dotted];
m41_182 -> m41_183  [key=0, style=solid];
m41_182 -> m41_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_183 -> m41_181  [key=0, style=bold, color=blue];
m41_105 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.SucceededJobDto> SucceededJobs"];
m41_105 -> m41_106  [key=0, style=solid];
m41_105 -> m41_109  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_106 -> m41_7  [key=2, style=dotted];
m41_106 -> m41_107  [key=0, style=solid];
m41_106 -> m41_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_107 -> m41_105  [key=0, style=bold, color=blue];
m41_94 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FailedJobDto> FailedJobs"];
m41_94 -> m41_95  [key=0, style=solid];
m41_94 -> m41_98  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_95 -> m41_7  [key=2, style=dotted];
m41_95 -> m41_96  [key=0, style=solid];
m41_95 -> m41_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_96 -> m41_94  [key=0, style=bold, color=blue];
m41_65 -> m41_66  [key=0, style=solid, color=green];
m41_65 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m41_66 -> m41_67  [key=0, style=solid, color=green];
m41_66 -> m41_7  [key=2, style=dotted, color=green];
m41_66 -> m41_68  [key=1, style=dashed, color=green, label="lambda expression"];
m41_67 -> m41_65  [key=0, style=bold, color=blue];
m41_22 -> m41_23  [key=0, style=solid, color=green];
m41_22 -> m41_26  [key=1, style=dashed, color=green, label=string];
m41_22 -> m41_27  [key=1, style=dashed, color=green, label=string];
m41_22 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn long FetchedCount"];
m41_23 -> m41_24  [key=0, style=solid, color=green];
m41_23 -> m41_7  [key=2, style=dotted, color=green];
m41_23 -> m41_25  [key=1, style=dashed, color=green, label="lambda expression"];
m41_23 -> m41_20  [key=3, color=green, style=bold, label="Local variable HangFire.SqlServer.IPersistentJobQueueMonitoringApi queueApi"];
m41_24 -> m41_22  [key=0, style=bold, color=blue];
m41_30 -> m41_31  [key=0, style=solid, color=green];
m41_30 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn long FailedCount"];
m41_31 -> m41_32  [key=0, style=solid, color=green];
m41_31 -> m41_7  [key=2, style=dotted, color=green];
m41_31 -> m41_33  [key=1, style=dashed, color=green, label="lambda expression"];
m41_32 -> m41_30  [key=0, style=bold, color=blue];
m41_389 -> m41_393  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m41_389 -> m41_390  [key=0, style=solid];
m41_389 -> m41_391  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>"];
m41_394 -> m41_93  [key=2, style=dotted];
m41_394 -> m41_391  [key=0, style=solid];
m41_394 -> m41_399  [key=2, style=dotted];
m41_394 -> m41_400  [key=2, style=dotted];
m41_393 -> m41_376  [key=2, style=dotted];
m41_393 -> m41_394  [key=0, style=solid];
m41_393 -> m41_398  [key=2, style=dotted];
m41_390 -> m41_394  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_390 -> m41_391  [key=0, style=solid];
m41_390 -> m41_397  [key=2, style=dotted];
m41_390 -> m41_395  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_391 -> m41_394  [key=1, style=dashed, color=darkseagreen4, label=job];
m41_391 -> m41_393  [key=1, style=dashed, color=darkseagreen4, label=job];
m41_391 -> m41_392  [key=0, style=solid];
m41_391 -> m41_395  [key=0, style=solid];
m41_392 -> m41_393  [key=0, style=solid];
m41_392 -> m41_383  [key=2, style=dotted];
m41_395 -> m41_401  [key=2, style=dotted];
m41_395 -> m41_396  [key=0, style=solid];
m41_396 -> m41_389  [key=0, style=bold, color=blue];
m41_266 -> m41_267  [key=0, style=solid];
m41_8 -> m41_9  [key=0, style=solid, color=green];
m41_9 -> m41_10  [key=0, style=solid, color=green];
m41_9 -> m41_11  [key=2, style=dotted, color=green];
m41_10 -> m41_8  [key=0, style=bold, color=blue];
m41_15 -> m41_16  [key=0, style=solid, color=green];
m41_16 -> m41_17  [key=0, style=solid, color=green];
m41_16 -> m41_20  [key=2, style=dotted, color=green];
m41_17 -> m41_18  [key=0, style=solid, color=green];
m41_17 -> m41_21  [key=2, style=dotted, color=green];
m41_18 -> m41_19  [key=0, style=solid, color=green];
m41_19 -> m41_15  [key=0, style=bold, color=blue];
m41_25 -> m41_26  [key=0, style=solid, color=green];
m41_26 -> m41_27  [key=0, style=solid, color=green];
m41_26 -> m41_20  [key=2, style=dotted, color=green];
m41_27 -> m41_28  [key=0, style=solid, color=green];
m41_27 -> m41_21  [key=2, style=dotted, color=green];
m41_28 -> m41_29  [key=0, style=solid, color=green];
m41_29 -> m41_25  [key=0, style=bold, color=blue];
m41_33 -> m41_34  [key=0, style=solid, color=green];
m41_34 -> m41_35  [key=0, style=solid, color=green];
m41_34 -> m41_11  [key=2, style=dotted, color=green];
m41_35 -> m41_33  [key=0, style=bold, color=blue];
m41_39 -> m41_40  [key=0, style=solid, color=green];
m41_40 -> m41_41  [key=0, style=solid, color=green];
m41_40 -> m41_11  [key=2, style=dotted, color=green];
m41_41 -> m41_39  [key=0, style=bold, color=blue];
m41_45 -> m41_46  [key=0, style=solid, color=green];
m41_46 -> m41_47  [key=0, style=solid, color=green];
m41_46 -> m41_48  [key=2, style=dotted, color=green];
m41_46 -> m41_49  [key=1, style=dashed, color=green, label="lambda expression"];
m41_47 -> m41_45  [key=0, style=bold, color=blue];
m41_49 -> m41_50  [key=0, style=solid, color=green];
m41_50 -> m41_51  [key=0, style=solid, color=green];
m41_50 -> m41_52  [key=2, style=dotted, color=green];
m41_50 -> m41_53  [key=2, style=dotted, color=green];
m41_50 -> m41_54  [key=2, style=dotted, color=green];
m41_51 -> m41_49  [key=0, style=bold, color=blue];
m41_58 -> m41_59  [key=0, style=solid, color=green];
m41_59 -> m41_60  [key=0, style=solid, color=green];
m41_59 -> m41_48  [key=2, style=dotted, color=green];
m41_59 -> m41_61  [key=1, style=dashed, color=green, label="lambda expression"];
m41_60 -> m41_58  [key=0, style=bold, color=blue];
m41_61 -> m41_62  [key=0, style=solid, color=green];
m41_62 -> m41_63  [key=0, style=solid, color=green];
m41_62 -> m41_64  [key=2, style=dotted, color=green];
m41_62 -> m41_54  [key=2, style=dotted, color=green];
m41_63 -> m41_61  [key=0, style=bold, color=blue];
m41_68 -> m41_69  [key=0, style=solid, color=green];
m41_69 -> m41_70  [key=0, style=solid, color=green];
m41_69 -> m41_71  [key=2, style=dotted, color=green];
m41_70 -> m41_68  [key=0, style=bold, color=blue];
m41_75 -> m41_76  [key=0, style=solid];
m41_76 -> m41_71  [key=2, style=dotted];
m41_76 -> m41_77  [key=0, style=solid];
m41_98 -> m41_48  [key=2, style=dotted];
m41_98 -> m41_99  [key=0, style=solid];
m41_98 -> m41_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_109 -> m41_48  [key=2, style=dotted];
m41_109 -> m41_110  [key=0, style=solid];
m41_109 -> m41_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_120 -> m41_48  [key=2, style=dotted];
m41_120 -> m41_121  [key=0, style=solid];
m41_120 -> m41_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_130 -> m41_131  [key=0, style=solid];
m41_130 -> m41_138  [key=2, style=dotted];
m41_130 -> m41_139  [key=2, style=dotted];
m41_130 -> m41_140  [key=2, style=dotted];
m41_130 -> m41_141  [key=2, style=dotted];
m41_130 -> m41_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_130 -> m41_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_130 -> m41_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_130 -> m41_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_130 -> m41_132  [key=1, style=dashed, color=darkseagreen4, label=tuples];
m41_135 -> m41_132  [key=0, style=solid];
m41_135 -> m41_145  [key=2, style=dotted];
m41_135 -> m41_146  [key=2, style=dotted];
m41_135 -> m41_93  [key=2, style=dotted];
m41_165 -> m41_20  [key=2, style=dotted];
m41_165 -> m41_166  [key=0, style=solid];
m41_167 -> m41_168  [key=0, style=solid];
m41_167 -> m41_170  [key=2, style=dotted];
m41_175 -> m41_20  [key=2, style=dotted];
m41_175 -> m41_176  [key=0, style=solid];
m41_177 -> m41_178  [key=0, style=solid];
m41_177 -> m41_180  [key=2, style=dotted];
m41_185 -> m41_186  [key=0, style=solid];
m41_185 -> m41_187  [key=2, style=dotted];
m41_192 -> m41_193  [key=0, style=solid];
m41_192 -> m41_187  [key=2, style=dotted];
m41_205 -> m41_206  [key=0, style=solid];
m41_205 -> m41_210  [key=2, style=dotted];
m41_205 -> m41_211  [key=2, style=dotted];
m41_226 -> m41_11  [key=2, style=dotted];
m41_226 -> m41_227  [key=0, style=solid];
m41_232 -> m41_11  [key=2, style=dotted];
m41_232 -> m41_233  [key=0, style=solid];
m41_251 -> m41_252  [key=0, style=solid];
m41_251 -> m41_258  [key=2, style=dotted];
m41_251 -> m41_259  [key=2, style=dotted];
m41_251 -> m41_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_112 -> m41_53  [key=2, style=dotted];
m41_112 -> m41_113  [key=0, style=solid];
m41_112 -> m41_114  [key=2, style=dotted];
m41_112 -> m41_115  [key=2, style=dotted];
m41_112 -> m41_104  [key=2, style=dotted];
m41_337 -> m41_338  [key=0, style=solid];
m41_337 -> m41_339  [key=2, style=dotted];
m41_77 -> m41_75  [key=0, style=bold, color=blue];
m41_82 -> m41_83  [key=0, style=solid];
m41_97 -> m41_98  [key=0, style=solid];
m41_99 -> m41_97  [key=0, style=bold, color=blue];
m41_100 -> m41_101  [key=0, style=solid];
m41_108 -> m41_109  [key=0, style=solid];
m41_110 -> m41_108  [key=0, style=bold, color=blue];
m41_111 -> m41_112  [key=0, style=solid];
m41_119 -> m41_120  [key=0, style=solid];
m41_121 -> m41_119  [key=0, style=bold, color=blue];
m41_122 -> m41_123  [key=0, style=solid];
m41_129 -> m41_130  [key=0, style=solid];
m41_129 -> m41_135  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_129 -> m41_148  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_131 -> m41_135  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_131 -> m41_132  [key=0, style=solid];
m41_131 -> m41_142  [key=2, style=dotted];
m41_131 -> m41_136  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_147 -> m41_148  [key=0, style=solid];
m41_151 -> m41_152  [key=0, style=solid];
m41_155 -> m41_156  [key=0, style=solid];
m41_158 -> m41_159  [key=0, style=solid];
m41_132 -> m41_135  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m41_132 -> m41_133  [key=0, style=solid];
m41_132 -> m41_136  [key=0, style=solid];
m41_132 -> m41_134  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m41_133 -> m41_135  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m41_133 -> m41_134  [key=0, style=solid];
m41_133 -> m41_143  [key=2, style=dotted];
m41_134 -> m41_135  [key=0, style=solid];
m41_134 -> m41_144  [key=2, style=dotted];
m41_164 -> m41_165  [key=0, style=solid];
m41_164 -> m41_167  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_166 -> m41_167  [key=0, style=solid];
m41_166 -> m41_169  [key=2, style=dotted];
m41_168 -> m41_164  [key=0, style=bold, color=blue];
m41_174 -> m41_175  [key=0, style=solid];
m41_174 -> m41_177  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_176 -> m41_177  [key=0, style=solid];
m41_176 -> m41_179  [key=2, style=dotted];
m41_178 -> m41_174  [key=0, style=bold, color=blue];
m41_184 -> m41_185  [key=0, style=solid];
m41_186 -> m41_184  [key=0, style=bold, color=blue];
m41_191 -> m41_192  [key=0, style=solid];
m41_193 -> m41_191  [key=0, style=bold, color=blue];
m41_197 -> m41_198  [key=0, style=solid];
m41_197 -> m41_199  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_200 -> m41_205  [key=1, style=dashed, color=darkseagreen4, label=job];
m41_200 -> m41_81  [key=2, style=dotted];
m41_200 -> m41_201  [key=0, style=solid];
m41_200 -> m41_208  [key=2, style=dotted];
m41_203 -> m41_205  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m41_203 -> m41_81  [key=2, style=dotted];
m41_203 -> m41_204  [key=0, style=solid];
m41_203 -> m41_209  [key=2, style=dotted];
m41_203 -> m41_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_203 -> m41_215  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_204 -> m41_205  [key=0, style=solid];
m41_204 -> m41_81  [key=2, style=dotted];
m41_204 -> m41_138  [key=2, style=dotted];
m41_204 -> m41_90  [key=2, style=dotted];
m41_204 -> m41_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_206 -> m41_197  [key=0, style=bold, color=blue];
m41_225 -> m41_226  [key=0, style=solid];
m41_227 -> m41_225  [key=0, style=bold, color=blue];
m41_231 -> m41_232  [key=0, style=solid];
m41_233 -> m41_231  [key=0, style=bold, color=blue];
m41_237 -> m41_251  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_237 -> m41_238  [key=0, style=solid];
m41_237 -> m41_240  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_237 -> m41_271  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_239 -> m41_251  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_239 -> m41_240  [key=0, style=solid];
m41_239 -> m41_254  [key=2, style=dotted];
m41_239 -> m41_243  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_239 -> m41_244  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_239 -> m41_245  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_239 -> m41_246  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_239 -> m41_247  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_239 -> m41_248  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_239 -> m41_249  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_239 -> m41_250  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_239 -> m41_252  [key=1, style=dashed, color=darkseagreen4, label=stats];
m41_250 -> m41_251  [key=0, style=solid];
m41_250 -> m41_81  [key=2, style=dotted];
m41_250 -> m41_257  [key=2, style=dotted];
m41_252 -> m41_253  [key=0, style=solid];
m41_270 -> m41_271  [key=0, style=solid];
m41_368 -> m41_369  [key=0, style=solid];
m41_199 -> m41_200  [key=0, style=solid];
m41_199 -> m41_203  [key=1, style=dashed, color=darkseagreen4, label=multi];
m41_199 -> m41_204  [key=1, style=dashed, color=darkseagreen4, label=multi];
m41_199 -> m41_207  [key=2, style=dotted];
m41_113 -> m41_111  [key=0, style=bold, color=blue];
m41_336 -> m41_337  [key=0, style=solid];
m41_338 -> m41_336  [key=0, style=bold, color=blue];
m41_340 -> m41_341  [key=0, style=solid];
m41_343 -> m41_344  [key=0, style=solid];
m41_83 -> m41_81  [key=2, style=dotted];
m41_83 -> m41_90  [key=2, style=dotted];
m41_83 -> m41_84  [key=0, style=solid];
m41_83 -> m41_85  [key=1, style=dashed, color=darkseagreen4, label=servers];
m41_86 -> m41_81  [key=2, style=dotted];
m41_86 -> m41_87  [key=0, style=solid];
m41_219 -> m41_81  [key=2, style=dotted];
m41_219 -> m41_220  [key=0, style=solid];
m41_219 -> m41_221  [key=2, style=dotted];
m41_247 -> m41_81  [key=2, style=dotted];
m41_247 -> m41_257  [key=2, style=dotted];
m41_247 -> m41_248  [key=0, style=solid];
m41_248 -> m41_81  [key=2, style=dotted];
m41_248 -> m41_249  [key=0, style=solid];
m41_248 -> m41_208  [key=2, style=dotted];
m41_249 -> m41_81  [key=2, style=dotted];
m41_249 -> m41_250  [key=0, style=solid];
m41_249 -> m41_208  [key=2, style=dotted];
m41_89 -> m41_82  [key=0, style=bold, color=blue];
m41_102 -> m41_100  [key=0, style=bold, color=blue];
m41_101 -> m41_104  [key=2, style=dotted];
m41_101 -> m41_102  [key=0, style=solid];
m41_101 -> m41_103  [key=2, style=dotted];
m41_124 -> m41_122  [key=0, style=bold, color=blue];
m41_123 -> m41_104  [key=2, style=dotted];
m41_123 -> m41_124  [key=0, style=solid];
m41_123 -> m41_125  [key=2, style=dotted];
m41_137 -> m41_129  [key=0, style=bold, color=blue];
m41_148 -> m41_150  [key=2, style=dotted];
m41_148 -> m41_149  [key=0, style=solid];
m41_136 -> m41_137  [key=0, style=solid];
m41_149 -> m41_147  [key=0, style=bold, color=blue];
m41_153 -> m41_151  [key=0, style=bold, color=blue];
m41_152 -> m41_153  [key=0, style=solid];
m41_152 -> m41_154  [key=2, style=dotted];
m41_157 -> m41_155  [key=0, style=bold, color=blue];
m41_156 -> m41_157  [key=0, style=solid];
m41_160 -> m41_158  [key=0, style=bold, color=blue];
m41_159 -> m41_160  [key=0, style=solid];
m41_87 -> m41_93  [key=2, style=dotted];
m41_87 -> m41_85  [key=0, style=solid];
m41_87 -> m41_92  [key=2, style=dotted];
m41_301 -> m41_302  [key=0, style=solid];
m41_301 -> m41_303  [key=2, style=dotted];
m41_301 -> m41_304  [key=2, style=dotted];
m41_198 -> m41_199  [key=0, style=solid];
m41_201 -> m41_203  [key=0, style=solid];
m41_201 -> m41_202  [key=0, style=solid];
m41_212 -> m41_213  [key=0, style=solid];
m41_215 -> m41_216  [key=0, style=solid];
m41_218 -> m41_219  [key=0, style=solid];
m41_202 -> m41_206  [key=0, style=solid];
m41_253 -> m41_237  [key=0, style=bold, color=blue];
m41_238 -> m41_239  [key=0, style=solid];
m41_238 -> m41_240  [key=1, style=dashed, color=darkseagreen4, label=sql];
m41_240 -> m41_250  [key=1, style=dashed, color=darkseagreen4, label=multi];
m41_240 -> m41_247  [key=1, style=dashed, color=darkseagreen4, label=multi];
m41_240 -> m41_248  [key=1, style=dashed, color=darkseagreen4, label=multi];
m41_240 -> m41_249  [key=1, style=dashed, color=darkseagreen4, label=multi];
m41_240 -> m41_241  [key=0, style=solid];
m41_240 -> m41_207  [key=2, style=dotted];
m41_271 -> m41_150  [key=2, style=dotted];
m41_271 -> m41_272  [key=0, style=solid];
m41_271 -> m41_273  [key=2, style=dotted];
m41_243 -> m41_256  [key=2, style=dotted];
m41_243 -> m41_244  [key=0, style=solid];
m41_244 -> m41_256  [key=2, style=dotted];
m41_244 -> m41_245  [key=0, style=solid];
m41_245 -> m41_256  [key=2, style=dotted];
m41_245 -> m41_246  [key=0, style=solid];
m41_246 -> m41_256  [key=2, style=dotted];
m41_246 -> m41_247  [key=0, style=solid];
m41_272 -> m41_270  [key=0, style=bold, color=blue];
m41_370 -> m41_368  [key=0, style=bold, color=blue];
m41_369 -> m41_104  [key=2, style=dotted];
m41_369 -> m41_370  [key=0, style=solid];
m41_369 -> m41_371  [key=2, style=dotted];
m41_333 -> m41_334  [key=0, style=solid];
m41_241 -> m41_209  [key=2, style=dotted];
m41_241 -> m41_242  [key=0, style=solid];
m41_241 -> m41_255  [key=2, style=dotted];
m41_241 -> m41_260  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_241 -> m41_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_241 -> m41_267  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m41_342 -> m41_340  [key=0, style=bold, color=blue];
m41_341 -> m41_342  [key=0, style=solid];
m41_345 -> m41_343  [key=0, style=bold, color=blue];
m41_344 -> m41_345  [key=0, style=solid];
m41_84 -> m41_87  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_84 -> m41_85  [key=0, style=solid];
m41_84 -> m41_91  [key=2, style=dotted];
m41_84 -> m41_88  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_85 -> m41_86  [key=0, style=solid];
m41_85 -> m41_87  [key=1, style=dashed, color=darkseagreen4, label=server];
m41_85 -> m41_88  [key=0, style=solid];
m41_220 -> m41_218  [key=0, style=bold, color=blue];
m41_88 -> m41_89  [key=0, style=solid];
m41_300 -> m41_301  [key=0, style=solid];
m41_302 -> m41_300  [key=0, style=bold, color=blue];
m41_305 -> m41_306  [key=0, style=solid];
m41_308 -> m41_309  [key=0, style=solid];
m41_214 -> m41_212  [key=0, style=bold, color=blue];
m41_213 -> m41_214  [key=0, style=solid];
m41_217 -> m41_215  [key=0, style=bold, color=blue];
m41_216 -> m41_217  [key=0, style=solid];
m41_242 -> m41_243  [key=0, style=solid];
m41_242 -> m41_244  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m41_242 -> m41_245  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m41_242 -> m41_246  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m41_242 -> m41_267  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_335 -> m41_333  [key=0, style=bold, color=blue];
m41_334 -> m41_303  [key=2, style=dotted];
m41_334 -> m41_335  [key=0, style=solid];
m41_260 -> m41_261  [key=0, style=solid];
m41_263 -> m41_264  [key=0, style=solid];
m41_267 -> m41_269  [key=2, style=dotted];
m41_267 -> m41_268  [key=0, style=solid];
m41_307 -> m41_305  [key=0, style=bold, color=blue];
m41_306 -> m41_307  [key=0, style=solid];
m41_310 -> m41_308  [key=0, style=bold, color=blue];
m41_309 -> m41_310  [key=0, style=solid];
m41_262 -> m41_260  [key=0, style=bold, color=blue];
m41_261 -> m41_262  [key=0, style=solid];
m41_265 -> m41_263  [key=0, style=bold, color=blue];
m41_264 -> m41_265  [key=0, style=solid];
m41_268 -> m41_266  [key=0, style=bold, color=blue];
m41_180 -> m41_402  [key=0, style=solid];
m41_180 -> m41_403  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_406 -> m41_405  [key=0, style=solid];
m41_406 -> m41_410  [key=2, style=dotted];
m41_406 -> m41_411  [key=2, style=dotted];
m41_406 -> m41_412  [key=2, style=dotted];
m41_406 -> m41_211  [key=2, style=dotted];
m41_406 -> m41_93  [key=2, style=dotted];
m41_404 -> m41_406  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_404 -> m41_405  [key=0, style=solid];
m41_404 -> m41_409  [key=2, style=dotted];
m41_404 -> m41_407  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_405 -> m41_406  [key=0, style=solid];
m41_405 -> m41_407  [key=0, style=solid];
m41_403 -> m41_81  [key=2, style=dotted];
m41_403 -> m41_404  [key=0, style=solid];
m41_403 -> m41_405  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m41_403 -> m41_90  [key=2, style=dotted];
m41_402 -> m41_403  [key=0, style=solid];
m41_402 -> m41_402  [key=3, color=darkorchid, style=bold, label="Local variable string fetchedJobsSql"];
m41_407 -> m41_408  [key=0, style=solid];
m41_407 -> m41_401  [key=2, style=dotted];
m41_408 -> m41_180  [key=0, style=bold, color=blue];
m41_171 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FetchedJobDto> FetchedJobs"];
m41_171 -> m41_172  [key=0, style=solid];
m41_171 -> m41_175  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_171 -> m41_176  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_172 -> m41_7  [key=2, style=dotted];
m41_172 -> m41_20  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.SqlServer.IPersistentJobQueueMonitoringApi queueApi"];
m41_172 -> m41_173  [key=0, style=solid];
m41_172 -> m41_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_172 -> m41_180  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FetchedJobDto> "];
m41_173 -> m41_171  [key=0, style=bold, color=blue];
m41_42 -> m41_43  [key=0, style=solid, color=green];
m41_42 -> m41_46  [key=1, style=dashed, color=green, label=int];
m41_42 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs"];
m41_43 -> m41_44  [key=0, style=solid, color=green];
m41_43 -> m41_7  [key=2, style=dotted, color=green];
m41_43 -> m41_45  [key=1, style=dashed, color=green, label="lambda expression"];
m41_44 -> m41_42  [key=0, style=bold, color=blue];
m41_20 -> m41_346  [key=0, style=solid];
m41_20 -> m41_347  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_346 -> m41_347  [key=0, style=solid];
m41_346 -> m41_350  [key=2, style=dotted];
m41_347 -> m41_348  [key=0, style=solid];
m41_347 -> m41_150  [key=2, style=dotted];
m41_348 -> m41_349  [key=0, style=solid];
m41_349 -> m41_20  [key=0, style=bold, color=blue];
m41_4 -> m41_5  [key=0, style=solid, color=green];
m41_4 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn long ScheduledCount"];
m41_5 -> m41_6  [key=0, style=solid, color=green];
m41_5 -> m41_7  [key=2, style=dotted, color=green];
m41_5 -> m41_8  [key=1, style=dashed, color=green, label="lambda expression"];
m41_6 -> m41_4  [key=0, style=bold, color=blue];
m41_55 -> m41_56  [key=0, style=solid, color=green];
m41_55 -> m41_59  [key=1, style=dashed, color=green, label=int];
m41_55 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ScheduledJobDto> ScheduledJobs"];
m41_56 -> m41_57  [key=0, style=solid, color=green];
m41_56 -> m41_7  [key=2, style=dotted, color=green];
m41_56 -> m41_58  [key=1, style=dashed, color=green, label="lambda expression"];
m41_57 -> m41_55  [key=0, style=bold, color=blue];
m41_228 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn long DeletedListCount"];
m41_228 -> m41_229  [key=0, style=solid];
m41_229 -> m41_7  [key=2, style=dotted];
m41_229 -> m41_230  [key=0, style=solid];
m41_229 -> m41_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_230 -> m41_228  [key=0, style=bold, color=blue];
m41_161 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.EnqueuedJobDto> EnqueuedJobs"];
m41_161 -> m41_162  [key=0, style=solid];
m41_161 -> m41_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_161 -> m41_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_162 -> m41_7  [key=2, style=dotted];
m41_162 -> m41_20  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.SqlServer.IPersistentJobQueueMonitoringApi queueApi"];
m41_162 -> m41_163  [key=0, style=solid];
m41_162 -> m41_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_162 -> m41_170  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.EnqueuedJobDto> "];
m41_163 -> m41_161  [key=0, style=bold, color=blue];
m41_78 -> m41_79  [key=0, style=solid];
m41_79 -> m41_79  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.ServerDto> "];
m41_79 -> m41_80  [key=0, style=solid];
m41_79 -> m41_81  [key=2, style=dotted];
m41_79 -> m41_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_80 -> m41_78  [key=0, style=bold, color=blue];
m41_222 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn long SucceededListCount"];
m41_222 -> m41_223  [key=0, style=solid];
m41_223 -> m41_7  [key=2, style=dotted];
m41_223 -> m41_224  [key=0, style=solid];
m41_223 -> m41_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_224 -> m41_222  [key=0, style=bold, color=blue];
m41_376 -> m41_195  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Common.Job DeserializeJob"];
m41_376 -> m41_377  [key=0, style=solid];
m41_376 -> m41_378  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_377 -> m41_378  [key=0, style=solid];
m41_377 -> m41_383  [key=2, style=dotted];
m41_377 -> m41_379  [key=1, style=dashed, color=darkseagreen4, label=data];
m41_378 -> m41_379  [key=0, style=solid];
m41_379 -> m41_382  [key=0, style=solid];
m41_379 -> m41_384  [key=2, style=dotted];
m41_381 -> m41_382  [key=0, style=solid];
m41_380 -> m41_381  [key=0, style=solid];
m41_382 -> m41_376  [key=0, style=bold, color=blue];
m41_11 -> m41_5  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m41_11 -> m41_31  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m41_11 -> m41_37  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m41_11 -> m41_372  [key=0, style=solid];
m41_11 -> m41_373  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_11 -> m41_223  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m41_11 -> m41_229  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m41_372 -> m41_372  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m41_372 -> m41_373  [key=0, style=solid];
m41_373 -> m41_374  [key=0, style=solid];
m41_373 -> m41_81  [key=2, style=dotted];
m41_373 -> m41_257  [key=2, style=dotted];
m41_374 -> m41_375  [key=0, style=solid];
m41_375 -> m41_11  [key=0, style=bold, color=blue];
m41_116 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.DeletedJobDto> DeletedJobs"];
m41_116 -> m41_117  [key=0, style=solid];
m41_116 -> m41_120  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_117 -> m41_7  [key=2, style=dotted];
m41_117 -> m41_118  [key=0, style=solid];
m41_117 -> m41_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_118 -> m41_116  [key=0, style=bold, color=blue];
m41_12 -> m41_13  [key=0, style=solid, color=green];
m41_12 -> m41_16  [key=1, style=dashed, color=green, label=string];
m41_12 -> m41_17  [key=1, style=dashed, color=green, label=string];
m41_12 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn long EnqueuedCount"];
m41_13 -> m41_14  [key=0, style=solid, color=green];
m41_13 -> m41_7  [key=2, style=dotted, color=green];
m41_13 -> m41_15  [key=1, style=dashed, color=green, label="lambda expression"];
m41_13 -> m41_20  [key=3, color=green, style=bold, label="Local variable HangFire.SqlServer.IPersistentJobQueueMonitoringApi queueApi"];
m41_14 -> m41_12  [key=0, style=bold, color=blue];
m41_188 -> m41_7  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs"];
m41_188 -> m41_189  [key=0, style=solid];
m41_189 -> m41_7  [key=2, style=dotted];
m41_189 -> m41_190  [key=0, style=solid];
m41_189 -> m41_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_190 -> m41_188  [key=0, style=bold, color=blue];
m41_170 -> m41_363  [key=0, style=solid];
m41_170 -> m41_364  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_365 -> m41_366  [key=0, style=solid];
m41_365 -> m41_367  [key=2, style=dotted];
m41_365 -> m41_368  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_364 -> m41_365  [key=0, style=solid];
m41_364 -> m41_81  [key=2, style=dotted];
m41_364 -> m41_90  [key=2, style=dotted];
m41_363 -> m41_364  [key=0, style=solid];
m41_363 -> m41_363  [key=3, color=darkorchid, style=bold, label="Local variable string enqueuedJobsSql"];
m41_366 -> m41_170  [key=0, style=bold, color=blue];
m41_71 -> m41_311  [key=0, style=solid];
m41_71 -> m41_318  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_71 -> m41_337  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_71 -> m41_320  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_71 -> m41_324  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m41_311 -> m41_312  [key=0, style=solid];
m41_311 -> m41_314  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m41_311 -> m41_315  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m41_311 -> m41_316  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m41_318 -> m41_319  [key=0, style=solid];
m41_318 -> m41_138  [key=2, style=dotted];
m41_318 -> m41_90  [key=2, style=dotted];
m41_318 -> m41_336  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_318 -> m41_320  [key=1, style=dashed, color=darkseagreen4, label=keys];
m41_318 -> m41_321  [key=1, style=dashed, color=darkseagreen4, label=keys];
m41_320 -> m41_321  [key=0, style=solid];
m41_320 -> m41_296  [key=2, style=dotted];
m41_320 -> m41_209  [key=2, style=dotted];
m41_320 -> m41_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_320 -> m41_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_320 -> m41_322  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m41_320 -> m41_323  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m41_320 -> m41_327  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m41_324 -> m41_325  [key=0, style=solid];
m41_324 -> n9  [key=2, style=dotted];
m41_324 -> m41_328  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_324 -> m41_330  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_330 -> m41_331  [key=0, style=solid];
m41_312 -> m41_313  [key=0, style=solid];
m41_312 -> m41_332  [key=2, style=dotted];
m41_312 -> m41_314  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m41_314 -> m41_315  [key=0, style=solid];
m41_314 -> m41_317  [key=0, style=solid];
m41_315 -> m41_93  [key=2, style=dotted];
m41_315 -> m41_316  [key=0, style=solid];
m41_316 -> m41_314  [key=0, style=solid];
m41_316 -> m41_316  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m41_316 -> m41_332  [key=2, style=dotted];
m41_317 -> m41_318  [key=0, style=solid];
m41_317 -> m41_138  [key=2, style=dotted];
m41_317 -> m41_90  [key=2, style=dotted];
m41_317 -> m41_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_317 -> m41_326  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m41_319 -> m41_320  [key=0, style=solid];
m41_319 -> m41_282  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m41_321 -> m41_324  [key=0, style=solid];
m41_321 -> m41_322  [key=0, style=solid];
m41_321 -> m41_323  [key=1, style=dashed, color=darkseagreen4, label=key];
m41_322 -> m41_321  [key=0, style=solid];
m41_322 -> m41_323  [key=0, style=solid];
m41_322 -> m41_269  [key=2, style=dotted];
m41_323 -> m41_321  [key=0, style=solid];
m41_323 -> m41_297  [key=2, style=dotted];
m41_327 -> m41_328  [key=0, style=solid];
m41_327 -> m41_299  [key=2, style=dotted];
m41_325 -> m41_327  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_325 -> m41_326  [key=0, style=solid];
m41_325 -> m41_328  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_325 -> m41_329  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_328 -> m41_329  [key=0, style=solid];
m41_328 -> m41_297  [key=2, style=dotted];
m41_326 -> m41_330  [key=0, style=solid];
m41_326 -> m41_327  [key=0, style=solid];
m41_326 -> m41_276  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m41_313 -> m41_314  [key=0, style=solid];
m41_313 -> m41_315  [key=1, style=dashed, color=darkseagreen4, label=dates];
m41_313 -> m41_317  [key=1, style=dashed, color=darkseagreen4, label=dates];
m41_313 -> m41_328  [key=1, style=dashed, color=darkseagreen4, label=dates];
m41_313 -> m41_91  [key=2, style=dotted];
m41_329 -> m41_326  [key=0, style=solid];
m41_329 -> m41_329  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_331 -> m41_71  [key=0, style=bold, color=blue];
m41_126 -> m41_127  [key=0, style=solid];
m41_127 -> m41_127  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> "];
m41_127 -> m41_128  [key=0, style=solid];
m41_127 -> m41_81  [key=2, style=dotted];
m41_127 -> m41_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_128 -> m41_126  [key=0, style=bold, color=blue];
m41_187 -> m41_274  [key=0, style=solid];
m41_187 -> m41_281  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_187 -> m41_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_187 -> m41_283  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_187 -> m41_287  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats"];
m41_281 -> m41_138  [key=2, style=dotted];
m41_281 -> m41_90  [key=2, style=dotted];
m41_281 -> m41_282  [key=0, style=solid];
m41_281 -> m41_300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_281 -> m41_283  [key=1, style=dashed, color=darkseagreen4, label=keys];
m41_281 -> m41_284  [key=1, style=dashed, color=darkseagreen4, label=keys];
m41_278 -> m41_93  [key=2, style=dotted];
m41_278 -> m41_279  [key=0, style=solid];
m41_274 -> m41_278  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m41_274 -> m41_275  [key=0, style=solid];
m41_274 -> m41_279  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m41_283 -> m41_296  [key=2, style=dotted];
m41_283 -> m41_209  [key=2, style=dotted];
m41_283 -> m41_284  [key=0, style=solid];
m41_283 -> m41_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_283 -> m41_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_283 -> m41_285  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m41_283 -> m41_286  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m41_283 -> m41_290  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m41_287 -> n9  [key=2, style=dotted];
m41_287 -> m41_288  [key=0, style=solid];
m41_287 -> m41_291  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_287 -> m41_293  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_282 -> m41_283  [key=0, style=solid];
m41_282 -> m41_282  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m41_275 -> m41_281  [key=1, style=dashed, color=darkseagreen4, label=dates];
m41_275 -> m41_278  [key=1, style=dashed, color=darkseagreen4, label=dates];
m41_275 -> m41_276  [key=0, style=solid];
m41_275 -> m41_91  [key=2, style=dotted];
m41_275 -> m41_289  [key=1, style=dashed, color=darkseagreen4, label=dates];
m41_275 -> m41_291  [key=1, style=dashed, color=darkseagreen4, label=dates];
m41_277 -> m41_281  [key=0, style=solid];
m41_277 -> m41_278  [key=0, style=solid];
m41_284 -> m41_287  [key=0, style=solid];
m41_284 -> m41_285  [key=0, style=solid];
m41_284 -> m41_286  [key=1, style=dashed, color=darkseagreen4, label=key];
m41_279 -> m41_279  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m41_279 -> m41_280  [key=0, style=solid];
m41_279 -> m41_295  [key=2, style=dotted];
m41_293 -> m41_294  [key=0, style=solid];
m41_285 -> m41_269  [key=2, style=dotted];
m41_285 -> m41_284  [key=0, style=solid];
m41_285 -> m41_286  [key=0, style=solid];
m41_286 -> m41_297  [key=2, style=dotted];
m41_286 -> m41_284  [key=0, style=solid];
m41_290 -> m41_299  [key=2, style=dotted];
m41_290 -> m41_291  [key=0, style=solid];
m41_288 -> m41_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_288 -> m41_289  [key=0, style=solid];
m41_288 -> m41_291  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_288 -> m41_292  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_291 -> m41_297  [key=2, style=dotted];
m41_291 -> m41_292  [key=0, style=solid];
m41_276 -> m41_277  [key=0, style=solid];
m41_276 -> m41_276  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m41_276 -> m41_280  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_289 -> m41_293  [key=0, style=solid];
m41_289 -> m41_290  [key=0, style=solid];
m41_289 -> m41_276  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m41_280 -> m41_277  [key=0, style=solid];
m41_280 -> m41_280  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_292 -> m41_289  [key=0, style=solid];
m41_292 -> m41_292  [key=1, style=dashed, color=darkseagreen4, label=i];
m41_294 -> m41_187  [key=0, style=bold, color=blue];
m41_413 -> m41_1  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_2  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_5  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_9  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_13  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_16  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_23  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_26  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_31  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_34  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_37  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_40  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_43  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_46  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_56  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_59  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_66  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_69  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_73  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_167  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_177  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_185  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_195  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_205  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_223  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_226  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_229  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_232  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_235  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_251  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_346  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_352  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_365  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_387  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_413 -> m41_406  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m41_414 -> m41_16  [key=1, style=dashed, color=green, label=string];
m41_414 -> m41_17  [key=1, style=dashed, color=green, label=string];
m41_415 -> m41_26  [key=1, style=dashed, color=green, label=string];
m41_415 -> m41_27  [key=1, style=dashed, color=green, label=string];
m41_416 -> m41_46  [key=1, style=dashed, color=green, label=int];
m41_417 -> m41_46  [key=1, style=dashed, color=green, label=int];
m41_418 -> m41_59  [key=1, style=dashed, color=green, label=int];
m41_419 -> m41_59  [key=1, style=dashed, color=green, label=int];
m41_420 -> m41_98  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_421 -> m41_98  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_422 -> m41_109  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_423 -> m41_109  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_424 -> m41_120  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_425 -> m41_120  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_427 -> m41_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_427 -> m41_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_430 -> m41_175  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_430 -> m41_176  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_437 -> m41_337  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_428 -> m41_166  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_429 -> m41_166  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_431 -> m41_176  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_432 -> m41_176  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_433 -> m41_199  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_426 -> m41_148  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_436 -> m41_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_435 -> m41_271  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m41_434 -> m41_267  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m42_0 -> m42_1  [key=0, style=solid, color=green];
m42_1 -> m42_2  [key=0, style=solid, color=green];
m42_2 -> m42_3  [key=0, style=solid, color=green];
m42_3 -> m42_4  [key=0, style=solid, color=green];
m42_3 -> m42_9  [key=2, style=dotted, color=green];
m42_4 -> m42_5  [key=0, style=solid, color=green];
m42_4 -> m42_10  [key=2, style=dotted, color=green];
m42_5 -> m42_6  [key=0, style=solid, color=green];
m42_5 -> m42_11  [key=2, style=dotted, color=green];
m42_6 -> m42_7  [key=0, style=solid, color=green];
m42_6 -> m42_12  [key=2, style=dotted, color=green];
m42_7 -> m42_8  [key=0, style=solid, color=green];
m42_7 -> m42_13  [key=2, style=dotted, color=green];
m42_8 -> m42_0  [key=0, style=bold, color=blue];
m42_14 -> m42_15  [key=0, style=solid, color=green];
m42_15 -> m42_16  [key=0, style=solid, color=green];
m42_15 -> m42_17  [key=2, style=dotted, color=green];
m42_16 -> m42_14  [key=0, style=bold, color=blue];
m42_18 -> m42_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m42_18 -> m42_2  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m42_18 -> m42_3  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m42_18 -> m42_4  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m42_18 -> m42_5  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m42_18 -> m42_6  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m42_18 -> m42_7  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m42_18 -> m42_15  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m43_82 -> m43_83  [key=0, style=solid];
m43_83 -> m43_84  [key=0, style=solid];
m43_83 -> m43_85  [key=2, style=dotted];
m43_84 -> m43_82  [key=0, style=bold, color=blue];
m43_98 -> m43_99  [key=0, style=solid];
m43_98 -> m43_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_99 -> m43_100  [key=0, style=solid];
m43_99 -> m43_23  [key=2, style=dotted];
m43_99 -> m43_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_100 -> m43_98  [key=0, style=bold, color=blue];
m43_85 -> m43_86  [key=0, style=solid];
m43_85 -> m43_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_85 -> m43_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_85 -> m43_82  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m43_85 -> m43_83  [key=3, color=darkorchid, style=bold, label="Parameter variable double score"];
m43_86 -> m43_87  [key=0, style=solid];
m43_86 -> m43_90  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m43_86 -> m43_86  [key=3, color=darkorchid, style=bold, label="Local variable string addSql"];
m43_87 -> m43_88  [key=0, style=solid];
m43_87 -> m43_23  [key=2, style=dotted];
m43_87 -> m43_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_88 -> m43_85  [key=0, style=bold, color=blue];
m43_64 -> m43_65  [key=0, style=solid];
m43_64 -> m43_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_65 -> m43_66  [key=0, style=solid];
m43_65 -> m43_23  [key=2, style=dotted];
m43_65 -> m43_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_66 -> m43_64  [key=0, style=bold, color=blue];
m43_44 -> m43_45  [key=0, style=solid];
m43_44 -> m43_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_44 -> m43_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_45 -> m43_46  [key=0, style=solid];
m43_45 -> m43_49  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m43_45 -> m43_45  [key=3, color=darkorchid, style=bold, label="Local variable string addStateSql"];
m43_46 -> m43_47  [key=0, style=solid];
m43_46 -> m43_23  [key=2, style=dotted];
m43_46 -> m43_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_47 -> m43_44  [key=0, style=bold, color=blue];
m43_35 -> m43_36  [key=0, style=solid];
m43_35 -> m43_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_35 -> m43_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_36 -> m43_37  [key=0, style=solid];
m43_36 -> m43_40  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m43_36 -> m43_36  [key=3, color=darkorchid, style=bold, label="Local variable string addAndSetStateSql"];
m43_37 -> m43_38  [key=0, style=solid];
m43_37 -> m43_23  [key=2, style=dotted];
m43_37 -> m43_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_38 -> m43_35  [key=0, style=bold, color=blue];
m43_110 -> m43_111  [key=0, style=solid];
m43_110 -> m43_112  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_110 -> m43_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_111 -> m43_112  [key=0, style=solid];
m43_111 -> m43_115  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m43_111 -> m43_111  [key=3, color=darkorchid, style=bold, label="Local variable string trimSql"];
m43_112 -> m43_113  [key=0, style=solid];
m43_112 -> m43_23  [key=2, style=dotted];
m43_112 -> m43_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_113 -> m43_110  [key=0, style=bold, color=blue];
m43_23 -> m43_117  [key=0, style=solid];
m43_23 -> m43_21  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_37  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_46  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_59  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_65  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_71  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_77  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_87  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_93  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_99  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_105  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_23 -> m43_112  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m43_117 -> m43_118  [key=0, style=solid];
m43_117 -> m43_119  [key=2, style=dotted];
m43_118 -> m43_23  [key=0, style=bold, color=blue];
m43_76 -> m43_77  [key=0, style=solid];
m43_76 -> m43_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_77 -> m43_78  [key=0, style=solid];
m43_77 -> m43_23  [key=2, style=dotted];
m43_77 -> m43_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_78 -> m43_76  [key=0, style=bold, color=blue];
m43_70 -> m43_71  [key=0, style=solid];
m43_70 -> m43_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_71 -> m43_72  [key=0, style=solid];
m43_71 -> m43_23  [key=2, style=dotted];
m43_71 -> m43_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_72 -> m43_70  [key=0, style=bold, color=blue];
m43_92 -> m43_93  [key=0, style=solid];
m43_92 -> m43_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_93 -> m43_94  [key=0, style=solid];
m43_93 -> m43_23  [key=2, style=dotted];
m43_93 -> m43_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_94 -> m43_92  [key=0, style=bold, color=blue];
m43_20 -> m43_21  [key=0, style=solid];
m43_20 -> m43_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_21 -> m43_22  [key=0, style=solid];
m43_21 -> m43_23  [key=2, style=dotted];
m43_21 -> m43_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_22 -> m43_20  [key=0, style=bold, color=blue];
m43_104 -> m43_105  [key=0, style=solid];
m43_104 -> m43_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_105 -> m43_106  [key=0, style=solid];
m43_105 -> m43_23  [key=2, style=dotted];
m43_105 -> m43_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_106 -> m43_104  [key=0, style=bold, color=blue];
m43_8 -> m43_9  [key=0, style=solid];
m43_9 -> m43_10  [key=0, style=solid];
m43_9 -> m43_15  [key=2, style=dotted];
m43_9 -> m43_16  [key=2, style=dotted];
m43_9 -> m43_13  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m43_10 -> m43_11  [key=0, style=solid];
m43_10 -> m43_17  [key=2, style=dotted];
m43_13 -> m43_14  [key=0, style=solid];
m43_13 -> m43_19  [key=2, style=dotted];
m43_11 -> m43_12  [key=0, style=solid];
m43_11 -> m43_13  [key=0, style=solid];
m43_12 -> m43_11  [key=0, style=solid];
m43_12 -> m43_18  [key=2, style=dotted];
m43_14 -> m43_8  [key=0, style=bold, color=blue];
m43_114 -> m43_115  [key=0, style=solid];
m43_25 -> m43_26  [key=0, style=solid];
m43_25 -> m43_27  [key=2, style=dotted];
m43_25 -> m43_28  [key=2, style=dotted];
m43_24 -> m43_25  [key=0, style=solid];
m43_26 -> m43_24  [key=0, style=bold, color=blue];
m43_33 -> m43_34  [key=0, style=solid];
m43_33 -> m43_28  [key=2, style=dotted];
m43_32 -> m43_33  [key=0, style=solid];
m43_34 -> m43_32  [key=0, style=bold, color=blue];
m43_40 -> m43_41  [key=0, style=solid];
m43_40 -> m43_42  [key=2, style=dotted];
m43_40 -> m43_43  [key=2, style=dotted];
m43_40 -> m43_28  [key=2, style=dotted];
m43_39 -> m43_40  [key=0, style=solid];
m43_41 -> m43_39  [key=0, style=bold, color=blue];
m43_49 -> m43_50  [key=0, style=solid];
m43_49 -> m43_42  [key=2, style=dotted];
m43_49 -> m43_43  [key=2, style=dotted];
m43_49 -> m43_28  [key=2, style=dotted];
m43_48 -> m43_49  [key=0, style=solid];
m43_50 -> m43_48  [key=0, style=bold, color=blue];
m43_56 -> m43_57  [key=0, style=solid];
m43_56 -> m43_28  [key=2, style=dotted];
m43_55 -> m43_56  [key=0, style=solid];
m43_57 -> m43_55  [key=0, style=bold, color=blue];
m43_62 -> m43_63  [key=0, style=solid];
m43_62 -> m43_28  [key=2, style=dotted];
m43_61 -> m43_62  [key=0, style=solid];
m43_63 -> m43_61  [key=0, style=bold, color=blue];
m43_68 -> m43_69  [key=0, style=solid];
m43_68 -> m43_27  [key=2, style=dotted];
m43_68 -> m43_28  [key=2, style=dotted];
m43_67 -> m43_68  [key=0, style=solid];
m43_69 -> m43_67  [key=0, style=bold, color=blue];
m43_74 -> m43_75  [key=0, style=solid];
m43_74 -> m43_28  [key=2, style=dotted];
m43_73 -> m43_74  [key=0, style=solid];
m43_75 -> m43_73  [key=0, style=bold, color=blue];
m43_80 -> m43_81  [key=0, style=solid];
m43_80 -> m43_27  [key=2, style=dotted];
m43_80 -> m43_28  [key=2, style=dotted];
m43_79 -> m43_80  [key=0, style=solid];
m43_81 -> m43_79  [key=0, style=bold, color=blue];
m43_90 -> m43_91  [key=0, style=solid];
m43_90 -> m43_28  [key=2, style=dotted];
m43_89 -> m43_90  [key=0, style=solid];
m43_91 -> m43_89  [key=0, style=bold, color=blue];
m43_96 -> m43_97  [key=0, style=solid];
m43_96 -> m43_28  [key=2, style=dotted];
m43_95 -> m43_96  [key=0, style=solid];
m43_97 -> m43_95  [key=0, style=bold, color=blue];
m43_102 -> m43_103  [key=0, style=solid];
m43_102 -> m43_28  [key=2, style=dotted];
m43_101 -> m43_102  [key=0, style=solid];
m43_103 -> m43_101  [key=0, style=bold, color=blue];
m43_108 -> m43_109  [key=0, style=solid];
m43_108 -> m43_28  [key=2, style=dotted];
m43_107 -> m43_108  [key=0, style=solid];
m43_109 -> m43_107  [key=0, style=bold, color=blue];
m43_115 -> m43_116  [key=0, style=solid];
m43_115 -> m43_28  [key=2, style=dotted];
m43_116 -> m43_114  [key=0, style=bold, color=blue];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_3  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_3  [key=0, style=solid];
m43_3 -> m43_4  [key=0, style=solid];
m43_2 -> m43_4  [key=0, style=solid];
m43_2 -> d10  [key=2, style=dotted];
m43_4 -> m43_0  [key=0, style=bold, color=blue];
m43_51 -> m43_52  [key=0, style=solid];
m43_51 -> m43_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_51 -> m43_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_52 -> m43_53  [key=0, style=solid];
m43_52 -> m43_56  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m43_52 -> m43_52  [key=3, color=darkorchid, style=bold, label="Local variable string enqueueJobSql"];
m43_53 -> m43_54  [key=0, style=solid];
m43_53 -> m43_23  [key=2, style=dotted];
m43_53 -> m43_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_54 -> m43_51  [key=0, style=bold, color=blue];
m43_58 -> m43_59  [key=0, style=solid];
m43_58 -> m43_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_59 -> m43_60  [key=0, style=solid];
m43_59 -> m43_23  [key=2, style=dotted];
m43_59 -> m43_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_60 -> m43_58  [key=0, style=bold, color=blue];
m43_29 -> m43_30  [key=0, style=solid];
m43_29 -> m43_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_30 -> m43_31  [key=0, style=solid];
m43_30 -> m43_23  [key=2, style=dotted];
m43_30 -> m43_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m43_31 -> m43_29  [key=0, style=bold, color=blue];
m43_6 -> m43_7  [key=0, style=solid];
m43_7 -> m43_6  [key=0, style=bold, color=blue];
m43_120 -> m43_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_120 -> m43_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m43_121 -> m43_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_122 -> m43_25  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m43_123 -> m43_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_124 -> m43_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_125 -> m43_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m43_126 -> m43_40  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m43_127 -> m43_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_128 -> m43_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m43_129 -> m43_49  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m43_130 -> m43_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_131 -> m43_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_132 -> m43_56  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m43_133 -> m43_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_134 -> m43_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_135 -> m43_68  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m43_136 -> m43_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_137 -> m43_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_138 -> m43_80  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m43_139 -> m43_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_140 -> m43_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_141 -> m43_90  [key=1, style=dashed, color=darkseagreen4, label=double];
m43_142 -> m43_90  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m43_143 -> m43_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_144 -> m43_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_145 -> m43_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_146 -> m43_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_147 -> m43_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_148 -> m43_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_149 -> m43_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_150 -> m43_115  [key=1, style=dashed, color=darkseagreen4, label=int];
m43_151 -> m43_115  [key=1, style=dashed, color=darkseagreen4, label=int];
m43_152 -> m43_115  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m44_0 -> m44_1  [key=0, style=solid, color=red];
m44_1 -> m44_2  [key=0, style=solid, color=red];
m44_1 -> n9  [key=2, style=dotted, color=red];
m44_2 -> m44_0  [key=0, style=bold, color=blue];
m45_1 -> d39  [key=0, style=bold, color=blue];
m45_22 -> m45_23  [key=0, style=solid];
m45_23 -> m45_22  [key=0, style=bold, color=blue];
m45_26 -> m45_27  [key=0, style=solid];
m45_27 -> m45_26  [key=0, style=bold, color=blue];
m45_2 -> m45_3  [key=0, style=solid];
m45_3 -> m45_2  [key=0, style=bold, color=blue];
m45_20 -> m45_21  [key=0, style=solid];
m45_21 -> m45_20  [key=0, style=bold, color=blue];
m45_18 -> m45_19  [key=0, style=solid];
m45_19 -> m45_18  [key=0, style=bold, color=blue];
m45_28 -> m45_29  [key=0, style=solid];
m45_29 -> m45_28  [key=0, style=bold, color=blue];
m45_32 -> m45_33  [key=0, style=solid];
m45_33 -> m45_32  [key=0, style=bold, color=blue];
m45_34 -> m45_35  [key=0, style=solid];
m45_35 -> m45_34  [key=0, style=bold, color=blue];
m45_8 -> m45_9  [key=0, style=solid];
m45_9 -> m45_8  [key=0, style=bold, color=blue];
m45_12 -> m45_13  [key=0, style=solid];
m45_13 -> m45_12  [key=0, style=bold, color=blue];
m45_36 -> m45_37  [key=0, style=solid];
m45_37 -> m45_36  [key=0, style=bold, color=blue];
m45_10 -> m45_11  [key=0, style=solid];
m45_11 -> m45_10  [key=0, style=bold, color=blue];
m45_4 -> m45_5  [key=0, style=solid];
m45_5 -> m45_4  [key=0, style=bold, color=blue];
m45_14 -> m45_15  [key=0, style=solid];
m45_15 -> m45_14  [key=0, style=bold, color=blue];
m45_30 -> m45_31  [key=0, style=solid];
m45_31 -> m45_30  [key=0, style=bold, color=blue];
m45_6 -> m45_7  [key=0, style=solid];
m45_7 -> m45_6  [key=0, style=bold, color=blue];
m45_16 -> m45_17  [key=0, style=solid];
m45_17 -> m45_16  [key=0, style=bold, color=blue];
m45_24 -> m45_25  [key=0, style=solid];
m45_25 -> m45_24  [key=0, style=bold, color=blue];
m46_4 -> m46_5  [key=0, style=solid];
m46_4 -> m46_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_7  [key=0, style=solid];
m46_5 -> m46_25  [key=2, style=dotted];
m46_16 -> m46_17  [key=0, style=solid];
m46_16 -> m46_28  [key=2, style=dotted];
m46_16 -> m46_19  [key=1, style=dashed, color=darkseagreen4, label=objectName];
m46_6 -> m46_24  [key=0, style=solid];
m46_7 -> m46_8  [key=0, style=solid];
m46_7 -> m46_26  [key=2, style=dotted];
m46_8 -> m46_9  [key=0, style=solid];
m46_9 -> m46_10  [key=0, style=solid];
m46_10 -> m46_11  [key=0, style=solid];
m46_10 -> m46_10  [key=1, style=dashed, color=darkseagreen4, label=aPropId];
m46_11 -> m46_12  [key=0, style=solid];
m46_11 -> m46_27  [key=2, style=dotted];
m46_12 -> m46_13  [key=0, style=solid];
m46_13 -> m46_14  [key=0, style=solid];
m46_13 -> m46_13  [key=1, style=dashed, color=darkseagreen4, label=aPropVar];
m46_14 -> m46_15  [key=0, style=solid];
m46_15 -> m46_16  [key=0, style=solid];
m46_15 -> m46_15  [key=1, style=dashed, color=darkseagreen4, label=status];
m46_15 -> m46_19  [key=1, style=dashed, color=darkseagreen4, label=props];
m46_19 -> m46_20  [key=0, style=solid];
m46_19 -> m46_29  [key=2, style=dotted];
m46_19 -> m46_19  [key=1, style=dashed, color=darkseagreen4, label=props];
m46_19 -> m46_22  [key=1, style=dashed, color=darkseagreen4, label=props];
m46_17 -> m46_18  [key=0, style=solid];
m46_18 -> m46_19  [key=0, style=solid];
m46_20 -> m46_21  [key=0, style=solid];
m46_20 -> m46_22  [key=0, style=solid];
m46_22 -> m46_23  [key=0, style=solid];
m46_21 -> m46_23  [key=0, style=solid];
m46_23 -> m46_24  [key=0, style=solid];
m46_24 -> m46_4  [key=0, style=bold, color=blue];
m46_29 -> m46_30  [key=0, style=solid];
m46_30 -> m46_29  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_3  [key=2, style=dotted];
m46_2 -> m46_0  [key=0, style=bold, color=blue];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_0  [key=0, style=bold, color=blue];
m47_2 -> m47_3  [key=0, style=solid];
m47_3 -> m47_2  [key=0, style=bold, color=blue];
m48_6 -> m48_7  [key=0, style=solid];
m48_7 -> m48_8  [key=0, style=solid];
m48_7 -> m48_9  [key=2, style=dotted];
m48_8 -> m48_6  [key=0, style=bold, color=blue];
m48_0 -> m48_1  [key=0, style=solid];
m48_0 -> m48_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> m48_4  [key=2, style=dotted];
m48_2 -> m48_3  [key=0, style=solid];
m48_2 -> m48_5  [key=2, style=dotted];
m48_3 -> m48_0  [key=0, style=bold, color=blue];
m49_6 -> m49_7  [key=0, style=solid];
m49_7 -> m49_8  [key=0, style=solid];
m49_7 -> m49_4  [key=2, style=dotted];
m49_7 -> m49_9  [key=1, style=dashed, color=darkseagreen4, label=state];
m49_8 -> m49_9  [key=0, style=solid];
m49_8 -> m49_11  [key=2, style=dotted];
m49_9 -> m49_10  [key=0, style=solid];
m49_9 -> n10  [key=2, style=dotted];
m49_9 -> m49_5  [key=2, style=dotted];
m49_10 -> m49_6  [key=0, style=bold, color=blue];
m49_0 -> m49_1  [key=0, style=solid];
m49_1 -> m49_2  [key=0, style=solid];
m49_1 -> m49_4  [key=2, style=dotted];
m49_2 -> m49_3  [key=0, style=solid];
m49_2 -> m49_5  [key=2, style=dotted];
m49_3 -> m49_0  [key=0, style=bold, color=blue];
m49_13 -> m49_14  [key=0, style=solid];
m49_14 -> m49_15  [key=0, style=solid, color=red];
m49_14 -> m49_4  [key=2, style=dotted];
m49_15 -> m49_16  [key=0, style=solid, color=red];
m49_15 -> m49_17  [key=2, style=dotted, color=red];
m49_16 -> m49_13  [key=0, style=bold, color=blue];
m51_5 -> m51_6  [key=0, style=solid, color=green];
m51_6 -> m51_7  [key=0, style=solid, color=green];
m51_6 -> m51_8  [key=2, style=dotted, color=green];
m51_7 -> m51_5  [key=0, style=bold, color=blue];
m51_0 -> m51_1  [key=0, style=solid];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_3  [key=2, style=dotted];
m51_1 -> m51_4  [key=2, style=dotted];
m51_2 -> m51_0  [key=0, style=bold, color=blue];
m52_4 -> m52_5  [key=0, style=solid, color=green];
m52_9 -> m52_8  [key=0, style=solid, color=green];
m52_9 -> m52_11  [key=2, style=dotted, color=green];
m52_3 -> m52_0  [key=0, style=bold, color=blue];
m52_11 -> m52_12  [key=0, style=solid, color=red];
m52_11 -> m52_4  [key=2, style=dotted, color=red];
m52_11 -> m52_14  [key=1, style=dashed, color=red, label="lambda expression"];
m52_0 -> m52_1  [key=0, style=solid, color=green];
m52_1 -> m52_2  [key=0, style=solid, color=green];
m52_1 -> m52_4  [key=2, style=dotted, color=red];
m52_1 -> m52_6  [key=1, style=dashed, color=red, label="lambda expression"];
m52_1 -> m52_3  [key=2, style=dotted, color=green];
m52_2 -> m52_3  [key=0, style=solid, color=red];
m52_2 -> m52_5  [key=2, style=dotted, color=red];
m52_2 -> m52_0  [key=0, style=bold, color=blue];
m52_5 -> m52_6  [key=0, style=solid, color=green];
m52_5 -> m52_4  [key=2, style=dotted, color=green];
m52_6 -> m52_4  [key=0, style=bold, color=blue];
m52_6 -> m52_7  [key=0, style=solid, color=red];
m52_6 -> m52_9  [key=0, style=solid, color=green];
m52_10 -> m52_11  [key=0, style=solid, color=red];
m52_12 -> m52_13  [key=0, style=solid, color=red];
m52_12 -> m52_5  [key=2, style=dotted, color=red];
m52_13 -> m52_10  [key=0, style=bold, color=blue];
m52_23 -> m52_39  [key=0, style=solid, color=red];
m52_23 -> m52_30  [key=0, style=solid, color=green];
m52_39 -> m52_40  [key=0, style=solid, color=red];
m52_39 -> m52_9  [key=2, style=dotted, color=red];
m52_30 -> m52_40  [key=0, style=solid, color=green];
m52_30 -> m52_11  [key=2, style=dotted, color=green];
m52_30 -> m52_28  [key=0, style=bold, color=blue];
m52_40 -> m52_23  [key=0, style=bold, color=blue];
m52_17 -> m52_18  [key=0, style=solid];
m52_18 -> m52_19  [key=0, style=solid, color=red];
m52_18 -> m52_23  [key=2, style=dotted];
m52_18 -> m52_20  [key=1, style=dashed, color=red, label=context];
m52_18 -> m52_21  [key=1, style=dashed, color=darkseagreen4, label=context];
m52_19 -> m52_20  [key=0, style=solid, color=red];
m52_19 -> m52_24  [key=2, style=dotted, color=red];
m52_20 -> m52_21  [key=0, style=solid, color=red];
m52_20 -> m52_24  [key=2, style=dotted, color=red];
m52_21 -> m52_22  [key=0, style=solid];
m52_21 -> m52_5  [key=2, style=dotted];
m52_22 -> m52_17  [key=0, style=bold, color=blue];
m52_25 -> m52_26  [key=0, style=solid];
m52_26 -> m52_27  [key=0, style=solid];
m52_26 -> m52_4  [key=2, style=dotted];
m52_26 -> m52_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_26 -> m52_14  [key=1, style=dashed, color=green, label="lambda expression"];
m52_27 -> m52_25  [key=0, style=bold, color=blue];
m52_32 -> m52_33  [key=0, style=solid];
m52_32 -> m52_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerContextFacts"];
m52_32 -> m52_30  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerContextFacts"];
m52_32 -> m52_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerContextFacts"];
m52_33 -> m52_34  [key=0, style=solid];
m52_33 -> m52_23  [key=2, style=dotted];
m52_33 -> m52_35  [key=1, style=dashed, color=red, label=context];
m52_33 -> m52_36  [key=1, style=dashed, color=red, label=context];
m52_33 -> m52_37  [key=1, style=dashed, color=darkseagreen4, label=context];
m52_34 -> m52_35  [key=0, style=solid, color=red];
m52_34 -> m52_31  [key=2, style=dotted];
m52_34 -> m52_36  [key=1, style=dashed, color=red, label=contextCopy];
m52_34 -> m52_37  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m52_35 -> m52_36  [key=0, style=solid, color=red];
m52_35 -> m52_24  [key=2, style=dotted, color=red];
m52_36 -> m52_37  [key=0, style=solid, color=red];
m52_36 -> m52_24  [key=2, style=dotted, color=red];
m52_37 -> m52_38  [key=0, style=solid];
m52_37 -> m52_5  [key=2, style=dotted];
m52_38 -> m52_32  [key=0, style=bold, color=blue];
m52_28 -> m52_29  [key=0, style=solid];
m52_7 -> m52_8  [key=0, style=solid, color=red];
m52_7 -> m52_9  [key=2, style=dotted, color=red];
m52_8 -> m52_6  [key=0, style=bold, color=blue];
m52_14 -> m52_15  [key=0, style=solid, color=red];
m52_14 -> m52_29  [key=0, style=solid, color=green];
m52_15 -> m52_16  [key=0, style=solid, color=red];
m52_15 -> m52_9  [key=2, style=dotted, color=red];
m52_16 -> m52_14  [key=0, style=bold, color=blue];
m52_29 -> m52_30  [key=0, style=solid];
m52_29 -> m52_31  [key=2, style=dotted];
m52_29 -> m52_16  [key=0, style=solid, color=green];
m53_0 -> m53_1  [key=0, style=solid, color=green];
m53_1 -> m53_2  [key=0, style=solid, color=green];
m53_1 -> m53_5  [key=2, style=dotted, color=green];
m53_2 -> m53_3  [key=0, style=solid, color=green];
m53_3 -> m53_4  [key=0, style=solid, color=green];
m53_3 -> m53_6  [key=2, style=dotted, color=green];
m53_4 -> m53_0  [key=0, style=bold, color=blue];
m53_7 -> m53_8  [key=0, style=solid, color=green];
m53_8 -> m53_9  [key=0, style=solid, color=green];
m53_8 -> m53_10  [key=2, style=dotted, color=green];
m53_9 -> m53_7  [key=0, style=bold, color=blue];
m53_11 -> m53_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.WorkerContextMock"];
m53_11 -> m53_2  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.WorkerContextMock"];
m53_11 -> m53_3  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.WorkerContextMock"];
m53_11 -> m53_8  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.WorkerContextMock"];
m54_21 -> m54_22  [key=0, style=solid];
m54_21 -> m54_24  [key=1, style=dashed, color=darkseagreen4, label=object];
m54_21 -> m54_25  [key=1, style=dashed, color=darkseagreen4, label=object];
m54_22 -> m54_23  [key=0, style=solid, color=red];
m54_22 -> m54_24  [key=0, style=solid];
m54_24 -> m54_25  [key=0, style=solid];
m54_25 -> m54_26  [key=0, style=solid];
m54_25 -> m54_27  [key=2, style=dotted];
m54_25 -> m54_28  [key=2, style=dotted];
m54_25 -> m54_29  [key=2, style=dotted];
m54_25 -> m54_30  [key=2, style=dotted];
m54_23 -> m54_26  [key=0, style=solid, color=red];
m54_26 -> m54_21  [key=0, style=bold, color=blue];
m54_11 -> m54_12  [key=0, style=solid, color=red];
m54_11 -> m54_13  [key=2, style=dotted, color=red];
m54_10 -> m54_12  [key=0, style=solid, color=red];
m54_10 -> m54_13  [key=2, style=dotted, color=red];
m54_10 -> m54_5  [key=2, style=dotted, color=red];
m54_29 -> m54_39  [key=0, style=solid];
m54_39 -> m54_40  [key=0, style=solid];
m54_39 -> m54_19  [key=2, style=dotted];
m54_39 -> m54_41  [key=2, style=dotted];
m54_40 -> m54_29  [key=0, style=bold, color=blue];
m54_14 -> m54_15  [key=0, style=solid];
m54_14 -> m54_17  [key=1, style=dashed, color=red, label=string];
m54_15 -> m54_16  [key=0, style=solid];
m54_15 -> m54_17  [key=0, style=solid, color=red];
m54_15 -> m54_19  [key=2, style=dotted];
m54_17 -> m54_18  [key=0, style=solid, color=red];
m54_17 -> m54_20  [key=2, style=dotted, color=red];
m54_16 -> m54_18  [key=0, style=solid];
m54_18 -> m54_14  [key=0, style=bold, color=blue];
m54_5 -> m54_7  [key=0, style=solid];
m54_5 -> m54_6  [key=0, style=solid, color=green];
m54_7 -> m54_8  [key=0, style=solid, color=green];
m54_7 -> m54_11  [key=2, style=dotted];
m54_8 -> m54_9  [key=0, style=solid, color=green];
m54_8 -> m54_0  [key=2, style=dotted];
m54_9 -> m54_10  [key=0, style=solid, color=red];
m54_9 -> m54_11  [key=0, style=solid, color=red];
m54_9 -> m54_3  [key=0, style=bold, color=blue];
m54_12 -> m54_5  [key=0, style=bold, color=blue];
m54_31 -> m54_32  [key=0, style=solid];
m54_32 -> m54_33  [key=0, style=solid];
m54_32 -> m54_34  [key=2, style=dotted];
m54_33 -> m54_31  [key=0, style=bold, color=blue];
m54_35 -> m54_36  [key=0, style=solid, color=red];
m54_35 -> m54_37  [key=1, style=dashed, color=red, label="HangFire.Web.RazorPage"];
m54_36 -> m54_37  [key=0, style=solid, color=red];
m54_36 -> m54_0  [key=2, style=dotted, color=red];
m54_37 -> m54_38  [key=0, style=solid, color=red];
m54_37 -> m54_34  [key=2, style=dotted, color=red];
m54_37 -> m54_13  [key=2, style=dotted, color=red];
m54_38 -> m54_35  [key=0, style=bold, color=blue];
m54_2 -> m54_3  [key=0, style=solid, color=red];
m54_2 -> m54_0  [key=0, style=bold, color=blue];
m54_3 -> m54_4  [key=0, style=solid, color=green];
m54_3 -> m54_5  [key=2, style=dotted, color=red];
m54_3 -> m54_6  [key=2, style=dotted, color=red];
m54_3 -> m54_8  [key=1, style=dashed, color=green, label="Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>"];
m54_3 -> m54_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>"];
m54_4 -> m54_2  [key=0, style=bold, color=blue];
m54_4 -> m54_5  [key=0, style=solid, color=green];
m54_4 -> m54_6  [key=0, style=solid, color=green];
m54_0 -> m54_1  [key=0, style=solid];
m54_0 -> m54_3  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage> UseMsmqQueues"];
m54_1 -> m54_0  [key=0, style=bold, color=blue];
m54_1 -> m54_3  [key=2, style=dotted];
m54_1 -> m54_2  [key=0, style=solid];
m54_6 -> m54_7  [key=0, style=solid];
m54_6 -> m54_10  [key=2, style=dotted];
m54_42 -> m54_3  [key=1, style=dashed, color=red, label="HangFire.Web.RazorPage"];
m54_42 -> m54_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.RazorPage"];
m54_42 -> m54_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.RazorPage"];
m54_42 -> m54_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.RazorPage"];
m54_42 -> m54_10  [key=1, style=dashed, color=red, label="HangFire.Web.RazorPage"];
m54_42 -> m54_11  [key=1, style=dashed, color=red, label="HangFire.Web.RazorPage"];
m54_42 -> m54_17  [key=1, style=dashed, color=red, label="HangFire.Web.RazorPage"];
m54_42 -> m54_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.RazorPage"];
m54_42 -> m54_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.RazorPage"];
m54_42 -> m54_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.RazorPage"];
m55_26 -> m55_27  [key=0, style=solid];
m55_26 -> m55_23  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan delay"];
m55_26 -> m55_1  [key=3, color=red, style=bold, label="Parameter variable object args"];
m55_26 -> m55_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m55_27 -> m55_28  [key=0, style=solid];
m55_27 -> m55_29  [key=2, style=dotted];
m55_28 -> m55_26  [key=0, style=bold, color=blue];
m55_6 -> m55_10  [key=0, style=solid, color=red];
m55_6 -> m55_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m55_6 -> m55_15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m55_6 -> m55_3  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m55_6 -> m55_1  [key=3, color=red, style=bold, label="Parameter variable object args"];
m55_6 -> m55_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m55_6 -> m55_8  [key=1, style=dashed, color=green, label=i];
m55_10 -> m55_11  [key=0, style=solid, color=red];
m55_10 -> m55_12  [key=0, style=solid, color=red];
m55_10 -> m55_7  [key=0, style=solid];
m55_10 -> m55_10  [key=1, style=dashed, color=darkseagreen4, label=i];
m55_13 -> m55_14  [key=0, style=solid];
m55_13 -> m55_19  [key=2, style=dotted];
m55_15 -> m55_16  [key=0, style=solid];
m55_15 -> m55_21  [key=2, style=dotted];
m55_15 -> m55_22  [key=2, style=dotted];
m55_11 -> m55_16  [key=0, style=solid];
m55_11 -> d10  [key=2, style=dotted];
m55_11 -> m55_12  [key=0, style=solid];
m55_11 -> m55_19  [key=2, style=dotted];
m55_12 -> m55_13  [key=0, style=solid];
m55_12 -> m55_18  [key=2, style=dotted];
m55_12 -> m55_15  [key=1, style=dashed, color=darkseagreen4, label=client];
m55_12 -> m55_0  [key=0, style=bold, color=blue];
m55_14 -> m55_15  [key=0, style=solid];
m55_14 -> m55_20  [key=2, style=dotted];
m55_16 -> m55_6  [key=0, style=bold, color=blue];
m55_0 -> m55_1  [key=0, style=solid, color=green];
m55_0 -> m55_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m55_0 -> m55_8  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m55_0 -> m55_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m55_0 -> m55_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m55_1 -> m55_2  [key=0, style=solid, color=green];
m55_1 -> m55_3  [key=2, style=dotted, color=red];
m55_2 -> m55_0  [key=0, style=bold, color=blue];
m55_2 -> m55_12  [key=0, style=solid, color=green];
m55_2 -> d10  [key=2, style=dotted, color=green];
m55_30 -> m55_31  [key=0, style=solid, color=green];
m55_30 -> m55_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m55_31 -> m55_32  [key=0, style=solid, color=green];
m55_31 -> m55_29  [key=2, style=dotted];
m55_32 -> m55_30  [key=0, style=bold, color=blue];
m55_3 -> m55_4  [key=0, style=solid, color=green];
m55_3 -> m55_1  [key=3, color=red, style=bold, label="Parameter variable object args"];
m55_3 -> m55_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m55_3 -> m55_5  [key=0, style=solid, color=green];
m55_4 -> m55_5  [key=0, style=solid, color=red];
m55_4 -> m55_6  [key=2, style=dotted, color=red];
m55_4 -> m55_12  [key=0, style=solid, color=green];
m55_4 -> m55_14  [key=2, style=dotted, color=green];
m55_5 -> m55_3  [key=0, style=bold, color=blue];
m55_5 -> m55_6  [key=0, style=solid];
m55_5 -> m55_15  [key=2, style=dotted];
m55_5 -> m55_9  [key=1, style=dashed, color=darkseagreen4, label=workerRunners];
m55_5 -> m55_11  [key=1, style=dashed, color=darkseagreen4, label=workerRunners];
m55_21 -> m55_39  [key=0, style=solid];
m55_21 -> m55_22  [key=0, style=solid, color=green];
m55_21 -> m55_24  [key=2, style=dotted, color=green];
m55_39 -> m55_40  [key=0, style=solid];
m55_39 -> m55_41  [key=2, style=dotted];
m55_39 -> m55_42  [key=2, style=dotted];
m55_40 -> m55_21  [key=0, style=bold, color=blue];
m55_29 -> m55_33  [key=0, style=solid];
m55_29 -> m55_34  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m55_29 -> m55_35  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m55_29 -> m55_26  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m55_29 -> m55_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m55_29 -> m55_1  [key=3, color=red, style=bold, label="Parameter variable object args"];
m55_33 -> m55_34  [key=0, style=solid, color=green];
m55_33 -> m55_18  [key=2, style=dotted];
m55_33 -> m55_35  [key=1, style=dashed, color=darkseagreen4, label=client];
m55_33 -> m55_36  [key=2, style=dotted, color=green];
m55_33 -> m55_37  [key=2, style=dotted, color=green];
m55_34 -> m55_35  [key=0, style=solid];
m55_34 -> m55_37  [key=2, style=dotted];
m55_34 -> m55_38  [key=2, style=dotted];
m55_34 -> m55_17  [key=0, style=bold, color=blue];
m55_35 -> m55_36  [key=0, style=solid];
m55_35 -> m55_21  [key=2, style=dotted];
m55_35 -> m55_22  [key=2, style=dotted];
m55_36 -> m55_29  [key=0, style=bold, color=blue];
m55_20 -> m55_21  [key=0, style=solid, color=green];
m55_20 -> m55_22  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m55_23 -> m55_24  [key=0, style=solid];
m55_23 -> m55_26  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m55_23 -> m55_20  [key=0, style=bold, color=blue];
m55_24 -> m55_25  [key=0, style=solid];
m55_24 -> m55_26  [key=2, style=dotted];
m55_25 -> m55_23  [key=0, style=bold, color=blue];
m55_38 -> m55_21  [key=1, style=dashed, color=green, label="HangFire.Server.WorkerManager"];
m55_38 -> m55_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerManager"];
m55_38 -> m55_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerManager"];
m55_38 -> m55_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerManager"];
m55_17 -> m55_8  [key=3, color=green, style=bold, label="Parameter variable HangFire.Server.WorkerContext context"];
m55_17 -> m55_33  [key=0, style=solid, color=green];
m55_7 -> m55_8  [key=0, style=solid, color=green];
m55_7 -> m55_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m55_7 -> m55_7  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m55_7 -> m55_11  [key=0, style=solid];
m55_8 -> m55_9  [key=0, style=solid, color=green];
m55_8 -> m55_6  [key=2, style=dotted, color=red];
m55_8 -> m55_16  [key=2, style=dotted, color=green];
m55_9 -> m55_7  [key=0, style=bold, color=blue];
m55_9 -> m55_17  [key=2, style=dotted];
m55_9 -> m55_10  [key=0, style=solid];
m55_9 -> m55_18  [key=2, style=dotted];
m55_22 -> m55_22  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m55_22 -> m55_23  [key=0, style=solid, color=green];
m55_22 -> m55_25  [key=2, style=dotted, color=green];
m56_145 -> m56_146  [key=0, style=solid];
m56_146 -> m56_147  [key=0, style=solid];
m56_146 -> m56_20  [key=2, style=dotted];
m56_147 -> m56_145  [key=0, style=bold, color=blue];
m56_136 -> m56_137  [key=0, style=solid];
m56_137 -> m56_138  [key=0, style=solid];
m56_137 -> m56_24  [key=2, style=dotted];
m56_138 -> m56_136  [key=0, style=bold, color=blue];
m56_47 -> m56_48  [key=0, style=solid, color=red];
m56_47 -> m56_24  [key=2, style=dotted, color=red];
m56_48 -> m56_49  [key=0, style=solid, color=green];
m56_48 -> m56_52  [key=2, style=dotted, color=green];
m56_48 -> m56_53  [key=2, style=dotted, color=green];
m56_48 -> m56_46  [key=0, style=bold, color=blue];
m56_49 -> m56_50  [key=0, style=solid, color=red];
m56_49 -> m56_54  [key=2, style=dotted];
m56_49 -> m56_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_50 -> m56_51  [key=0, style=solid, color=red];
m56_50 -> m56_54  [key=2, style=dotted];
m56_50 -> m56_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_50 -> m56_20  [key=2, style=dotted, color=red];
m56_51 -> m56_47  [key=0, style=bold, color=blue];
m56_51 -> m56_49  [key=0, style=bold, color=blue];
m56_70 -> m56_71  [key=0, style=solid, color=red];
m56_97 -> m56_98  [key=0, style=solid];
m56_98 -> m56_99  [key=0, style=solid];
m56_98 -> m56_20  [key=2, style=dotted];
m56_99 -> m56_97  [key=0, style=bold, color=blue];
m56_154 -> m56_155  [key=0, style=solid];
m56_155 -> m56_156  [key=0, style=solid];
m56_155 -> m56_24  [key=2, style=dotted];
m56_156 -> m56_154  [key=0, style=bold, color=blue];
m56_0 -> m56_1  [key=0, style=solid, color=red];
m56_1 -> m56_2  [key=0, style=solid, color=red];
m56_1 -> m56_6  [key=2, style=dotted, color=green];
m56_1 -> m56_7  [key=2, style=dotted, color=green];
m56_1 -> m56_8  [key=2, style=dotted, color=green];
m56_1 -> m56_5  [key=2, style=dotted, color=red];
m56_1 -> m56_10  [key=2, style=dotted, color=green];
m56_2 -> m56_3  [key=0, style=solid, color=red];
m56_2 -> m56_11  [key=2, style=dotted];
m56_2 -> m56_6  [key=2, style=dotted];
m56_2 -> m56_7  [key=2, style=dotted];
m56_2 -> m56_9  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_2 -> m56_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_3 -> m56_4  [key=0, style=solid, color=red];
m56_3 -> m56_12  [key=2, style=dotted, color=green];
m56_3 -> m56_8  [key=2, style=dotted, color=red];
m56_4 -> m56_5  [key=0, style=solid];
m56_4 -> m56_13  [key=2, style=dotted];
m56_4 -> m56_14  [key=2, style=dotted];
m56_4 -> m56_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_4 -> m56_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_4 -> m56_0  [key=0, style=bold, color=blue];
m56_5 -> m56_0  [key=0, style=bold, color=blue];
m56_23 -> m56_24  [key=0, style=solid, color=green];
m56_23 -> m56_21  [key=0, style=bold, color=blue];
m56_24 -> m56_25  [key=0, style=solid, color=green];
m56_24 -> m56_18  [key=2, style=dotted, color=green];
m56_24 -> m56_26  [key=1, style=dashed, color=green, label="lambda expression"];
m56_24 -> m56_187  [key=0, style=solid];
m56_24 -> m56_190  [key=1, style=dashed, color=darkseagreen4, label=bool];
m56_24 -> m56_192  [key=1, style=dashed, color=darkseagreen4, label=T];
m56_24 -> m56_208  [key=1, style=dashed, color=darkseagreen4, label=T];
m56_24 -> m56_193  [key=1, style=dashed, color=darkseagreen4, label=T];
m56_24 -> m56_212  [key=1, style=dashed, color=darkseagreen4, label=T];
m56_25 -> m56_23  [key=0, style=bold, color=blue];
m56_25 -> m56_26  [key=0, style=solid];
m56_106 -> m56_107  [key=0, style=solid];
m56_107 -> m56_108  [key=0, style=solid];
m56_107 -> m56_24  [key=2, style=dotted];
m56_108 -> m56_106  [key=0, style=bold, color=blue];
m56_118 -> m56_119  [key=0, style=solid];
m56_119 -> m56_120  [key=0, style=solid];
m56_119 -> m56_24  [key=2, style=dotted];
m56_120 -> m56_118  [key=0, style=bold, color=blue];
m56_30 -> m56_31  [key=0, style=solid, color=green];
m56_30 -> m56_28  [key=0, style=bold, color=blue];
m56_31 -> m56_32  [key=0, style=solid, color=red];
m56_31 -> m56_18  [key=2, style=dotted, color=green];
m56_31 -> m56_35  [key=1, style=dashed, color=green, label="lambda expression"];
m56_32 -> m56_33  [key=0, style=solid, color=red];
m56_32 -> m56_34  [key=2, style=dotted];
m56_32 -> m56_20  [key=2, style=dotted, color=red];
m56_33 -> m56_30  [key=0, style=bold, color=blue];
m56_33 -> m56_31  [key=0, style=bold, color=blue];
m56_17 -> m56_18  [key=0, style=solid];
m56_17 -> m56_15  [key=0, style=bold, color=blue];
m56_18 -> m56_19  [key=0, style=solid];
m56_18 -> m56_20  [key=2, style=dotted];
m56_19 -> m56_17  [key=0, style=bold, color=blue];
m56_73 -> m56_74  [key=0, style=solid];
m56_73 -> m56_71  [key=0, style=bold, color=blue];
m56_74 -> m56_75  [key=0, style=solid];
m56_74 -> m56_20  [key=2, style=dotted];
m56_75 -> m56_73  [key=0, style=bold, color=blue];
m56_75 -> m56_52  [key=2, style=dotted];
m56_75 -> m56_53  [key=2, style=dotted];
m56_75 -> m56_76  [key=0, style=solid];
m56_166 -> m56_167  [key=0, style=solid];
m56_167 -> m56_168  [key=0, style=solid];
m56_167 -> m56_24  [key=2, style=dotted];
m56_168 -> m56_166  [key=0, style=bold, color=blue];
m56_127 -> m56_128  [key=0, style=solid];
m56_128 -> m56_129  [key=0, style=solid];
m56_128 -> m56_20  [key=2, style=dotted];
m56_129 -> m56_127  [key=0, style=bold, color=blue];
m56_112 -> m56_113  [key=0, style=solid];
m56_113 -> m56_114  [key=0, style=solid];
m56_113 -> m56_24  [key=2, style=dotted];
m56_114 -> m56_112  [key=0, style=bold, color=blue];
m56_37 -> m56_38  [key=0, style=solid];
m56_37 -> m56_35  [key=0, style=bold, color=blue];
m56_38 -> m56_39  [key=0, style=solid, color=green];
m56_38 -> m56_20  [key=2, style=dotted];
m56_39 -> m56_37  [key=0, style=bold, color=blue];
m56_39 -> m56_40  [key=0, style=solid, color=green];
m56_39 -> m56_29  [key=2, style=dotted, color=green];
m56_39 -> m56_41  [key=1, style=dashed, color=green, label=manager];
m56_53 -> m56_54  [key=0, style=solid, color=red];
m56_53 -> m56_24  [key=2, style=dotted, color=red];
m56_88 -> m56_89  [key=0, style=solid];
m56_89 -> m56_90  [key=0, style=solid];
m56_89 -> m56_24  [key=2, style=dotted];
m56_90 -> m56_88  [key=0, style=bold, color=blue];
m56_58 -> m56_59  [key=0, style=solid, color=red];
m56_59 -> m56_60  [key=0, style=solid, color=red];
m56_59 -> m56_24  [key=2, style=dotted, color=red];
m56_60 -> m56_58  [key=0, style=bold, color=blue];
m56_60 -> m56_61  [key=0, style=solid];
m56_76 -> m56_77  [key=0, style=solid, color=red];
m56_76 -> m56_54  [key=2, style=dotted];
m56_76 -> m56_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_77 -> m56_78  [key=0, style=solid, color=red];
m56_77 -> m56_24  [key=2, style=dotted, color=red];
m56_77 -> m56_54  [key=2, style=dotted];
m56_77 -> m56_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_78 -> m56_76  [key=0, style=bold, color=blue];
m56_78 -> m56_74  [key=0, style=bold, color=blue];
m56_43 -> m56_44  [key=0, style=solid, color=red];
m56_43 -> m56_38  [key=0, style=bold, color=blue];
m56_44 -> m56_45  [key=0, style=solid, color=red];
m56_44 -> m56_20  [key=2, style=dotted, color=red];
m56_45 -> m56_43  [key=0, style=bold, color=blue];
m56_85 -> m56_86  [key=0, style=solid];
m56_85 -> m56_83  [key=0, style=bold, color=blue];
m56_86 -> m56_87  [key=0, style=solid];
m56_86 -> m56_20  [key=2, style=dotted];
m56_86 -> m56_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_3  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_31  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_36  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_39  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_40  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_48  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_63  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_86 -> m56_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m56_87 -> m56_85  [key=0, style=bold, color=blue];
m56_139 -> m56_140  [key=0, style=solid];
m56_140 -> m56_141  [key=0, style=solid];
m56_140 -> m56_20  [key=2, style=dotted];
m56_141 -> m56_139  [key=0, style=bold, color=blue];
m56_184 -> m56_185  [key=0, style=solid];
m56_185 -> m56_186  [key=0, style=solid];
m56_185 -> m56_24  [key=2, style=dotted];
m56_186 -> m56_184  [key=0, style=bold, color=blue];
m56_115 -> m56_116  [key=0, style=solid];
m56_116 -> m56_117  [key=0, style=solid];
m56_116 -> m56_20  [key=2, style=dotted];
m56_117 -> m56_115  [key=0, style=bold, color=blue];
m56_71 -> m56_72  [key=0, style=solid, color=red];
m56_71 -> m56_24  [key=2, style=dotted, color=red];
m56_72 -> m56_70  [key=0, style=bold, color=blue];
m56_72 -> m56_73  [key=0, style=solid];
m56_79 -> m56_80  [key=0, style=solid];
m56_80 -> m56_81  [key=0, style=solid];
m56_80 -> m56_20  [key=2, style=dotted];
m56_80 -> m56_82  [key=2, style=dotted];
m56_81 -> m56_79  [key=0, style=bold, color=blue];
m56_103 -> m56_104  [key=0, style=solid];
m56_104 -> m56_105  [key=0, style=solid];
m56_104 -> m56_20  [key=2, style=dotted];
m56_105 -> m56_103  [key=0, style=bold, color=blue];
m56_82 -> m56_83  [key=0, style=solid, color=red];
m56_94 -> m56_95  [key=0, style=solid];
m56_95 -> m56_96  [key=0, style=solid];
m56_95 -> m56_24  [key=2, style=dotted];
m56_96 -> m56_94  [key=0, style=bold, color=blue];
m56_187 -> m56_188  [key=0, style=solid];
m56_187 -> m56_195  [key=1, style=dashed, color=darkseagreen4, label=type];
m56_190 -> m56_191  [key=0, style=solid];
m56_190 -> m56_193  [key=0, style=solid];
m56_192 -> m56_193  [key=0, style=solid];
m56_192 -> m56_201  [key=2, style=dotted];
m56_192 -> m56_202  [key=2, style=dotted];
m56_193 -> m56_194  [key=0, style=solid];
m56_193 -> m56_203  [key=2, style=dotted];
m56_193 -> m56_202  [key=2, style=dotted];
m56_188 -> m56_189  [key=0, style=solid];
m56_188 -> m56_198  [key=2, style=dotted];
m56_188 -> m56_195  [key=1, style=dashed, color=darkseagreen4, label=methodInfo];
m56_195 -> m56_196  [key=0, style=solid];
m56_195 -> m56_204  [key=2, style=dotted];
m56_195 -> m56_205  [key=2, style=dotted];
m56_189 -> m56_190  [key=0, style=solid];
m56_189 -> m56_199  [key=2, style=dotted];
m56_189 -> m56_192  [key=1, style=dashed, color=darkseagreen4, label=serializationMethods];
m56_189 -> m56_193  [key=1, style=dashed, color=darkseagreen4, label=serializationMethods];
m56_189 -> m56_194  [key=1, style=dashed, color=darkseagreen4, label=serializationMethods];
m56_194 -> m56_195  [key=0, style=solid];
m56_194 -> m56_197  [key=0, style=solid];
m56_191 -> m56_192  [key=0, style=solid];
m56_191 -> m56_200  [key=2, style=dotted];
m56_191 -> m56_208  [key=1, style=dashed, color=darkseagreen4, label=converter];
m56_196 -> m56_194  [key=0, style=solid];
m56_196 -> m56_206  [key=2, style=dotted];
m56_197 -> m56_24  [key=0, style=bold, color=blue];
m56_83 -> m56_84  [key=0, style=solid, color=red];
m56_83 -> m56_24  [key=2, style=dotted, color=red];
m56_9 -> m56_10  [key=0, style=solid];
m56_14 -> m56_15  [key=0, style=solid];
m56_10 -> m56_11  [key=0, style=solid];
m56_10 -> m56_12  [key=2, style=dotted];
m56_10 -> m56_13  [key=2, style=dotted];
m56_11 -> m56_9  [key=0, style=bold, color=blue];
m56_15 -> m56_16  [key=0, style=solid];
m56_15 -> m56_0  [key=2, style=dotted];
m56_16 -> m56_14  [key=0, style=bold, color=blue];
m56_16 -> m56_18  [key=2, style=dotted];
m56_16 -> m56_17  [key=0, style=solid];
m56_16 -> m56_19  [key=2, style=dotted];
m56_208 -> m56_209  [key=0, style=solid];
m56_208 -> m56_210  [key=2, style=dotted];
m56_212 -> m56_213  [key=0, style=solid];
m56_212 -> m56_214  [key=2, style=dotted];
m56_207 -> m56_208  [key=0, style=solid];
m56_209 -> m56_207  [key=0, style=bold, color=blue];
m56_211 -> m56_212  [key=0, style=solid];
m56_213 -> m56_211  [key=0, style=bold, color=blue];
m56_26 -> m56_27  [key=0, style=solid, color=green];
m56_26 -> m56_20  [key=2, style=dotted];
m56_27 -> m56_28  [key=0, style=solid, color=green];
m56_27 -> m56_29  [key=2, style=dotted, color=green];
m56_27 -> m56_25  [key=0, style=bold, color=blue];
m56_28 -> m56_26  [key=0, style=bold, color=blue];
m56_28 -> m56_29  [key=0, style=solid, color=red];
m56_35 -> m56_36  [key=0, style=solid, color=green];
m56_35 -> m56_24  [key=2, style=dotted];
m56_36 -> m56_37  [key=0, style=solid, color=green];
m56_36 -> m56_29  [key=2, style=dotted, color=green];
m56_36 -> m56_34  [key=0, style=bold, color=blue];
m56_21 -> m56_22  [key=0, style=solid];
m56_20 -> m56_21  [key=0, style=solid];
m56_55 -> m56_56  [key=0, style=solid, color=red];
m56_67 -> m56_68  [key=0, style=solid, color=red];
m56_22 -> m56_20  [key=0, style=bold, color=blue];
m56_22 -> m56_23  [key=0, style=solid];
m56_22 -> m56_24  [key=2, style=dotted];
m56_57 -> m56_55  [key=0, style=bold, color=blue];
m56_56 -> m56_57  [key=0, style=solid, color=red];
m56_56 -> m56_58  [key=2, style=dotted];
m56_56 -> m56_20  [key=2, style=dotted, color=red];
m56_69 -> m56_67  [key=0, style=bold, color=blue];
m56_68 -> m56_69  [key=0, style=solid, color=red];
m56_68 -> m56_70  [key=2, style=dotted];
m56_68 -> m56_20  [key=2, style=dotted, color=red];
m56_61 -> m56_59  [key=0, style=bold, color=blue];
m56_61 -> m56_62  [key=0, style=solid, color=red];
m56_84 -> m56_85  [key=0, style=solid];
m56_84 -> m56_82  [key=2, style=dotted];
m56_62 -> m56_63  [key=0, style=solid, color=red];
m56_62 -> m56_20  [key=2, style=dotted, color=red];
m56_63 -> m56_64  [key=0, style=solid, color=green];
m56_63 -> m56_52  [key=2, style=dotted, color=green];
m56_63 -> m56_53  [key=2, style=dotted, color=green];
m56_63 -> m56_61  [key=0, style=bold, color=blue];
m56_64 -> m56_65  [key=0, style=solid, color=red];
m56_64 -> m56_54  [key=2, style=dotted];
m56_64 -> m56_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_65 -> m56_66  [key=0, style=solid, color=red];
m56_65 -> m56_54  [key=2, style=dotted];
m56_65 -> m56_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_65 -> m56_24  [key=2, style=dotted, color=red];
m56_66 -> m56_62  [key=0, style=bold, color=blue];
m56_66 -> m56_64  [key=0, style=bold, color=blue];
m56_121 -> m56_122  [key=0, style=solid];
m56_122 -> m56_123  [key=0, style=solid];
m56_122 -> m56_20  [key=2, style=dotted];
m56_123 -> m56_121  [key=0, style=bold, color=blue];
m56_175 -> m56_176  [key=0, style=solid];
m56_176 -> m56_177  [key=0, style=solid];
m56_176 -> m56_20  [key=2, style=dotted];
m56_177 -> m56_175  [key=0, style=bold, color=blue];
m56_34 -> m56_35  [key=0, style=solid];
m56_130 -> m56_131  [key=0, style=solid];
m56_131 -> m56_132  [key=0, style=solid];
m56_131 -> m56_24  [key=2, style=dotted];
m56_132 -> m56_130  [key=0, style=bold, color=blue];
m56_124 -> m56_125  [key=0, style=solid];
m56_125 -> m56_126  [key=0, style=solid];
m56_125 -> m56_24  [key=2, style=dotted];
m56_126 -> m56_124  [key=0, style=bold, color=blue];
m56_46 -> m56_47  [key=0, style=solid, color=red];
m56_178 -> m56_179  [key=0, style=solid];
m56_179 -> m56_180  [key=0, style=solid];
m56_179 -> m56_24  [key=2, style=dotted];
m56_180 -> m56_178  [key=0, style=bold, color=blue];
m56_169 -> m56_170  [key=0, style=solid];
m56_170 -> m56_171  [key=0, style=solid];
m56_170 -> m56_20  [key=2, style=dotted];
m56_171 -> m56_169  [key=0, style=bold, color=blue];
m56_100 -> m56_101  [key=0, style=solid];
m56_101 -> m56_102  [key=0, style=solid];
m56_101 -> m56_24  [key=2, style=dotted];
m56_102 -> m56_100  [key=0, style=bold, color=blue];
m56_40 -> m56_41  [key=0, style=solid, color=red];
m56_40 -> m56_44  [key=2, style=dotted, color=green];
m56_41 -> m56_42  [key=0, style=solid, color=red];
m56_41 -> m56_45  [key=2, style=dotted];
m56_41 -> m56_24  [key=2, style=dotted, color=red];
m56_42 -> m56_43  [key=0, style=solid];
m56_42 -> m56_46  [key=2, style=dotted];
m56_42 -> m56_40  [key=0, style=bold, color=blue];
m56_52 -> m56_53  [key=0, style=solid, color=red];
m56_91 -> m56_92  [key=0, style=solid];
m56_92 -> m56_93  [key=0, style=solid];
m56_92 -> m56_20  [key=2, style=dotted];
m56_93 -> m56_91  [key=0, style=bold, color=blue];
m56_151 -> m56_152  [key=0, style=solid];
m56_152 -> m56_153  [key=0, style=solid];
m56_152 -> m56_20  [key=2, style=dotted];
m56_153 -> m56_151  [key=0, style=bold, color=blue];
m56_54 -> m56_52  [key=0, style=bold, color=blue];
m56_157 -> m56_158  [key=0, style=solid];
m56_158 -> m56_159  [key=0, style=solid];
m56_158 -> m56_20  [key=2, style=dotted];
m56_159 -> m56_157  [key=0, style=bold, color=blue];
m56_109 -> m56_110  [key=0, style=solid];
m56_110 -> m56_111  [key=0, style=solid];
m56_110 -> m56_20  [key=2, style=dotted];
m56_111 -> m56_109  [key=0, style=bold, color=blue];
m56_172 -> m56_173  [key=0, style=solid];
m56_173 -> m56_174  [key=0, style=solid];
m56_173 -> m56_24  [key=2, style=dotted];
m56_174 -> m56_172  [key=0, style=bold, color=blue];
m56_163 -> m56_164  [key=0, style=solid];
m56_164 -> m56_165  [key=0, style=solid];
m56_164 -> m56_20  [key=2, style=dotted];
m56_165 -> m56_163  [key=0, style=bold, color=blue];
m56_142 -> m56_143  [key=0, style=solid];
m56_143 -> m56_144  [key=0, style=solid];
m56_143 -> m56_24  [key=2, style=dotted];
m56_144 -> m56_142  [key=0, style=bold, color=blue];
m56_148 -> m56_149  [key=0, style=solid];
m56_149 -> m56_150  [key=0, style=solid];
m56_149 -> m56_24  [key=2, style=dotted];
m56_150 -> m56_148  [key=0, style=bold, color=blue];
m56_181 -> m56_182  [key=0, style=solid];
m56_182 -> m56_183  [key=0, style=solid];
m56_182 -> m56_20  [key=2, style=dotted];
m56_183 -> m56_181  [key=0, style=bold, color=blue];
m56_133 -> m56_134  [key=0, style=solid];
m56_134 -> m56_135  [key=0, style=solid];
m56_134 -> m56_20  [key=2, style=dotted];
m56_135 -> m56_133  [key=0, style=bold, color=blue];
m56_29 -> m56_30  [key=0, style=solid, color=red];
m56_29 -> m56_24  [key=2, style=dotted, color=red];
m56_160 -> m56_161  [key=0, style=solid];
m56_161 -> m56_162  [key=0, style=solid];
m56_161 -> m56_24  [key=2, style=dotted];
m56_162 -> m56_160  [key=0, style=bold, color=blue];
m56_215 -> m56_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_29  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_41  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_47  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_53  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_59  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_65  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_71  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_77  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_83  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_161  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_167  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_215 -> m56_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Common.JobArgumentFacts"];
m56_216 -> m56_208  [key=1, style=dashed, color=darkseagreen4, label=T];
m56_216 -> m56_212  [key=1, style=dashed, color=darkseagreen4, label=T];
m56_217 -> m56_208  [key=1, style=dashed, color=darkseagreen4, label=converter];
m57_0 -> m57_1  [key=0, style=solid];
m57_1 -> m57_2  [key=0, style=solid];
m57_1 -> m57_78  [key=2, style=dotted];
m57_2 -> m57_3  [key=0, style=solid];
m57_3 -> m57_4  [key=0, style=solid];
m57_3 -> m57_79  [key=2, style=dotted];
m57_4 -> m57_5  [key=0, style=solid];
m57_4 -> m57_80  [key=2, style=dotted];
m57_4 -> m57_81  [key=2, style=dotted];
m57_4 -> m57_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_7  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_11  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_4 -> m57_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m57_5 -> m57_6  [key=0, style=solid];
m57_5 -> m57_8  [key=1, style=dashed, color=darkseagreen4, label=title];
m57_6 -> m57_7  [key=0, style=solid];
m57_6 -> m57_8  [key=0, style=solid];
m57_7 -> m57_8  [key=0, style=solid];
m57_7 -> m57_82  [key=2, style=dotted];
m57_11 -> m57_12  [key=0, style=solid];
m57_11 -> m57_16  [key=0, style=solid];
m57_17 -> m57_18  [key=0, style=solid];
m57_17 -> m57_21  [key=0, style=solid];
m57_19 -> m57_20  [key=0, style=solid];
m57_19 -> n10  [key=2, style=dotted];
m57_19 -> m57_86  [key=2, style=dotted];
m57_21 -> m57_22  [key=0, style=solid];
m57_21 -> m57_25  [key=0, style=solid];
m57_23 -> m57_24  [key=0, style=solid];
m57_23 -> m57_88  [key=2, style=dotted];
m57_23 -> m57_89  [key=2, style=dotted];
m57_26 -> m57_27  [key=0, style=solid];
m57_26 -> m57_36  [key=0, style=solid];
m57_28 -> m57_29  [key=0, style=solid];
m57_28 -> m57_35  [key=0, style=solid];
m57_28 -> m57_30  [key=1, style=dashed, color=darkseagreen4, label=property];
m57_37 -> m57_38  [key=0, style=solid];
m57_37 -> m57_77  [key=0, style=solid];
m57_40 -> m57_41  [key=0, style=solid];
m57_40 -> m57_77  [key=0, style=solid];
m57_40 -> m57_43  [key=1, style=dashed, color=darkseagreen4, label=entry];
m57_40 -> m57_49  [key=1, style=dashed, color=darkseagreen4, label=entry];
m57_40 -> m57_51  [key=1, style=dashed, color=darkseagreen4, label=entry];
m57_40 -> m57_53  [key=1, style=dashed, color=darkseagreen4, label=entry];
m57_40 -> m57_55  [key=1, style=dashed, color=darkseagreen4, label=entry];
m57_40 -> m57_57  [key=1, style=dashed, color=darkseagreen4, label=entry];
m57_40 -> m57_60  [key=1, style=dashed, color=darkseagreen4, label=entry];
m57_40 -> m57_61  [key=1, style=dashed, color=darkseagreen4, label=entry];
m57_40 -> m57_67  [key=1, style=dashed, color=darkseagreen4, label=entry];
m57_8 -> m57_9  [key=0, style=solid];
m57_8 -> m57_8  [key=1, style=dashed, color=darkseagreen4, label=title];
m57_9 -> m57_10  [key=0, style=solid];
m57_9 -> m57_83  [key=2, style=dotted];
m57_9 -> m57_80  [key=2, style=dotted];
m57_9 -> m57_84  [key=2, style=dotted];
m57_9 -> m57_85  [key=2, style=dotted];
m57_10 -> m57_11  [key=0, style=solid];
m57_10 -> m57_78  [key=2, style=dotted];
m57_12 -> m57_13  [key=0, style=solid];
m57_12 -> m57_78  [key=2, style=dotted];
m57_16 -> m57_17  [key=0, style=solid];
m57_16 -> m57_78  [key=2, style=dotted];
m57_13 -> m57_14  [key=0, style=solid];
m57_13 -> m57_78  [key=2, style=dotted];
m57_14 -> m57_15  [key=0, style=solid];
m57_14 -> m57_86  [key=2, style=dotted];
m57_15 -> m57_77  [key=0, style=solid];
m57_15 -> m57_78  [key=2, style=dotted];
m57_18 -> m57_19  [key=0, style=solid];
m57_18 -> m57_78  [key=2, style=dotted];
m57_20 -> m57_21  [key=0, style=solid];
m57_20 -> m57_78  [key=2, style=dotted];
m57_22 -> m57_23  [key=0, style=solid];
m57_22 -> m57_78  [key=2, style=dotted];
m57_25 -> m57_26  [key=0, style=solid];
m57_25 -> m57_78  [key=2, style=dotted];
m57_24 -> m57_25  [key=0, style=solid];
m57_24 -> m57_78  [key=2, style=dotted];
m57_27 -> m57_28  [key=0, style=solid];
m57_27 -> m57_78  [key=2, style=dotted];
m57_36 -> m57_37  [key=0, style=solid];
m57_36 -> m57_78  [key=2, style=dotted];
m57_29 -> m57_30  [key=0, style=solid];
m57_29 -> m57_78  [key=2, style=dotted];
m57_35 -> m57_36  [key=0, style=solid];
m57_35 -> m57_78  [key=2, style=dotted];
m57_30 -> m57_31  [key=0, style=solid];
m57_30 -> m57_86  [key=2, style=dotted];
m57_30 -> m57_30  [key=1, style=dashed, color=darkseagreen4, label=property];
m57_30 -> m57_33  [key=1, style=dashed, color=darkseagreen4, label=property];
m57_31 -> m57_32  [key=0, style=solid];
m57_31 -> m57_78  [key=2, style=dotted];
m57_33 -> m57_34  [key=0, style=solid];
m57_33 -> m57_86  [key=2, style=dotted];
m57_33 -> m57_33  [key=1, style=dashed, color=darkseagreen4, label=property];
m57_32 -> m57_33  [key=0, style=solid];
m57_32 -> m57_78  [key=2, style=dotted];
m57_34 -> m57_28  [key=0, style=solid];
m57_34 -> m57_78  [key=2, style=dotted];
m57_38 -> m57_39  [key=0, style=solid];
m57_38 -> m57_78  [key=2, style=dotted];
m57_39 -> m57_40  [key=0, style=solid];
m57_39 -> m57_42  [key=1, style=dashed, color=darkseagreen4, label=index];
m57_39 -> m57_45  [key=1, style=dashed, color=darkseagreen4, label=index];
m57_39 -> m57_76  [key=1, style=dashed, color=darkseagreen4, label=index];
m57_42 -> m57_43  [key=0, style=solid];
m57_42 -> m57_44  [key=0, style=solid];
m57_45 -> m57_46  [key=0, style=solid];
m57_45 -> m57_86  [key=2, style=dotted];
m57_76 -> m57_40  [key=0, style=solid];
m57_76 -> m57_76  [key=1, style=dashed, color=darkseagreen4, label=index];
m57_41 -> m57_42  [key=0, style=solid];
m57_41 -> m57_90  [key=2, style=dotted];
m57_41 -> m57_47  [key=1, style=dashed, color=darkseagreen4, label=background];
m57_43 -> m57_44  [key=0, style=solid];
m57_43 -> m57_90  [key=2, style=dotted];
m57_43 -> m57_47  [key=1, style=dashed, color=darkseagreen4, label=background];
m57_49 -> m57_50  [key=0, style=solid];
m57_49 -> m57_86  [key=2, style=dotted];
m57_51 -> m57_52  [key=0, style=solid];
m57_51 -> m57_92  [key=2, style=dotted];
m57_51 -> m57_86  [key=2, style=dotted];
m57_53 -> m57_54  [key=0, style=solid];
m57_53 -> m57_86  [key=2, style=dotted];
m57_55 -> m57_56  [key=0, style=solid];
m57_55 -> m57_59  [key=0, style=solid];
m57_55 -> m57_93  [key=2, style=dotted];
m57_57 -> m57_58  [key=0, style=solid];
m57_57 -> m57_86  [key=2, style=dotted];
m57_60 -> m57_61  [key=0, style=solid];
m57_60 -> m57_66  [key=0, style=solid];
m57_60 -> m57_94  [key=2, style=dotted];
m57_61 -> m57_62  [key=0, style=solid];
m57_61 -> m57_95  [key=2, style=dotted];
m57_61 -> m57_64  [key=1, style=dashed, color=darkseagreen4, label=rendered];
m57_67 -> m57_68  [key=0, style=solid];
m57_67 -> m57_74  [key=0, style=solid];
m57_67 -> m57_96  [key=2, style=dotted];
m57_67 -> m57_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m57_67 -> m57_69  [key=1, style=dashed, color=darkseagreen4, label=item];
m57_67 -> m57_72  [key=1, style=dashed, color=darkseagreen4, label=item];
m57_47 -> m57_48  [key=0, style=solid];
m57_47 -> m57_91  [key=2, style=dotted];
m57_47 -> m57_86  [key=2, style=dotted];
m57_44 -> m57_45  [key=0, style=solid];
m57_44 -> m57_78  [key=2, style=dotted];
m57_46 -> m57_47  [key=0, style=solid];
m57_46 -> m57_78  [key=2, style=dotted];
m57_48 -> m57_49  [key=0, style=solid];
m57_48 -> m57_78  [key=2, style=dotted];
m57_50 -> m57_51  [key=0, style=solid];
m57_50 -> m57_78  [key=2, style=dotted];
m57_52 -> m57_53  [key=0, style=solid];
m57_52 -> m57_78  [key=2, style=dotted];
m57_54 -> m57_55  [key=0, style=solid];
m57_54 -> m57_78  [key=2, style=dotted];
m57_56 -> m57_57  [key=0, style=solid];
m57_56 -> m57_78  [key=2, style=dotted];
m57_59 -> m57_60  [key=0, style=solid];
m57_59 -> m57_78  [key=2, style=dotted];
m57_58 -> m57_59  [key=0, style=solid];
m57_58 -> m57_78  [key=2, style=dotted];
m57_66 -> m57_67  [key=0, style=solid];
m57_66 -> m57_78  [key=2, style=dotted];
m57_62 -> m57_63  [key=0, style=solid];
m57_62 -> m57_75  [key=0, style=solid];
m57_64 -> m57_65  [key=0, style=solid];
m57_64 -> m57_89  [key=2, style=dotted];
m57_63 -> m57_64  [key=0, style=solid];
m57_63 -> m57_78  [key=2, style=dotted];
m57_75 -> m57_76  [key=0, style=solid];
m57_75 -> m57_78  [key=2, style=dotted];
m57_65 -> m57_75  [key=0, style=solid];
m57_65 -> m57_78  [key=2, style=dotted];
m57_68 -> m57_69  [key=0, style=solid];
m57_68 -> m57_78  [key=2, style=dotted];
m57_74 -> m57_75  [key=0, style=solid];
m57_74 -> m57_78  [key=2, style=dotted];
m57_69 -> m57_70  [key=0, style=solid];
m57_69 -> m57_89  [key=2, style=dotted];
m57_72 -> m57_73  [key=0, style=solid];
m57_72 -> m57_89  [key=2, style=dotted];
m57_70 -> m57_71  [key=0, style=solid];
m57_70 -> m57_78  [key=2, style=dotted];
m57_71 -> m57_72  [key=0, style=solid];
m57_71 -> m57_78  [key=2, style=dotted];
m57_73 -> m57_67  [key=0, style=solid];
m57_73 -> m57_78  [key=2, style=dotted];
m57_77 -> m57_0  [key=0, style=bold, color=blue];
m57_97 -> m57_98  [key=0, style=solid];
m57_98 -> m57_99  [key=0, style=solid];
m57_98 -> m57_98  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m57_99 -> m57_97  [key=0, style=bold, color=blue];
m57_100 -> m57_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m57_100 -> m57_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
}
