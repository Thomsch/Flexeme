digraph  {
n121 [label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", span=""];
n0 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14"];
n1 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", label="_runner1 = new Mock<IServerComponentRunner>()", span="16-16"];
n2 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", label="_runner2 = new Mock<IServerComponentRunner>()", span="17-17"];
n5 [cluster="Mock<IServerComponentRunner>.cstr", label="Entry Mock<IServerComponentRunner>.cstr", span=""];
n3 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", label="_runners = new List<IServerComponentRunner>\r\n            {\r\n                _runner1.Object,\r\n                _runner2.Object\r\n            }", span="19-23"];
n4 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14"];
n6 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n7 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27"];
n8 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", label="Assert.Throws<ArgumentNullException>(() => new ServerComponentRunnerCollection(null))", span="29-29"];
n9 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27"];
n10 [cluster="Unk.>", label="Entry Unk.>", span=""];
n11 [cluster="lambda expression", label="Entry lambda expression", span="29-29"];
n12 [cluster="lambda expression", label="new ServerComponentRunnerCollection(null)", span="29-29"];
n13 [cluster="lambda expression", label="Exit lambda expression", span="29-29"];
n14 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
n15 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33"];
n16 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", label="var collection = CreateCollection()", span="35-35"];
n17 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", label="collection.Start()", span="37-37"];
n21 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="149-149"];
n18 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", label="_runner1.Verify(x => x.Start())", span="39-39"];
n22 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
n19 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", label="_runner2.Verify(x => x.Start())", span="40-40"];
n23 [cluster="Unk.Verify", label="Entry Unk.Verify", span=""];
n24 [cluster="lambda expression", label="Entry lambda expression", span="39-39"];
n20 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33"];
n28 [cluster="lambda expression", label="Entry lambda expression", span="40-40"];
n25 [cluster="lambda expression", label="x.Start()", span="39-39"];
n26 [cluster="lambda expression", label="Exit lambda expression", span="39-39"];
n27 [cluster="Unk.Start", label="Entry Unk.Start", span=""];
n29 [cluster="lambda expression", label="x.Start()", span="40-40"];
n30 [cluster="lambda expression", label="Exit lambda expression", span="40-40"];
n31 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44"];
n32 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", label="var collection = CreateCollection()", span="46-46"];
n33 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", label="collection.Stop()", span="48-48"];
n34 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", label="_runner1.Verify(x => x.Stop())", span="50-50"];
n37 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
n35 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", label="_runner2.Verify(x => x.Stop())", span="51-51"];
n38 [cluster="lambda expression", label="Entry lambda expression", span="50-50"];
n36 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44"];
n42 [cluster="lambda expression", label="Entry lambda expression", span="51-51"];
n39 [cluster="lambda expression", label="x.Stop()", span="50-50"];
n40 [cluster="lambda expression", label="Exit lambda expression", span="50-50"];
n41 [cluster="Unk.Stop", label="Entry Unk.Stop", span=""];
n43 [cluster="lambda expression", label="x.Stop()", span="51-51"];
n44 [cluster="lambda expression", label="Exit lambda expression", span="51-51"];
n45 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55"];
n46 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", label="var collection = CreateCollection()", span="57-57"];
n47 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", label="collection.Dispose()", span="59-59"];
n48 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", label="_runner1.Verify(x => x.Dispose())", span="61-61"];
n51 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
n49 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", label="_runner2.Verify(x => x.Dispose())", span="62-62"];
n52 [cluster="lambda expression", label="Entry lambda expression", span="61-61"];
n50 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55"];
n56 [cluster="lambda expression", label="Entry lambda expression", span="62-62"];
n53 [cluster="lambda expression", label="x.Dispose()", span="61-61"];
n54 [cluster="lambda expression", label="Exit lambda expression", span="61-61"];
n55 [cluster="Unk.Dispose", label="Entry Unk.Dispose", span=""];
n57 [cluster="lambda expression", label="x.Dispose()", span="62-62"];
n58 [cluster="lambda expression", label="Exit lambda expression", span="62-62"];
n59 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66"];
n60 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", label="var collection = CreateCollection()", span="68-68"];
n61 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", label="collection.Dispose()", span="70-70"];
n62 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", label="_runner1.Verify(x => x.Stop())", span="72-72"];
n63 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", label="_runner2.Verify(x => x.Stop())", span="73-73"];
n65 [cluster="lambda expression", label="Entry lambda expression", span="72-72"];
n64 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66"];
n68 [cluster="lambda expression", label="Entry lambda expression", span="73-73"];
n66 [cluster="lambda expression", label="x.Stop()", span="72-72"];
n67 [cluster="lambda expression", label="Exit lambda expression", span="72-72"];
n69 [cluster="lambda expression", label="x.Stop()", span="73-73"];
n70 [cluster="lambda expression", label="Exit lambda expression", span="73-73"];
n71 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77"];
n72 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", label="var collection = CreateCollection()", span="79-79"];
n73 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", label="Assert.Equal(2, collection.Count)", span="81-81"];
n74 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77"];
n75 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n76 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85"];
n77 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", label="var collection = CreateCollection()", span="87-87"];
n78 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", label="collection.Add(new Mock<IServerComponentRunner>().Object)", span="89-89"];
n79 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", label="Assert.Equal(3, collection.Count)", span="91-91"];
n81 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n80 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85"];
n82 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95"];
n83 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", label="var collection = CreateCollection()", span="97-97"];
n84 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", label="collection.Clear()", span="99-99"];
n85 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", label="Assert.Equal(0, collection.Count)", span="101-101"];
n87 [cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", label="Entry HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77"];
n86 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95"];
n88 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105"];
n89 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", label="var element = new Mock<IServerComponentRunner>()", span="107-107"];
n90 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", label="var collection = CreateCollection()", span="108-108"];
n91 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", label="Assert.False(collection.Contains(element.Object))", span="110-110"];
n92 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", label="collection.Add(element.Object)", span="112-112"];
n93 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", label="Assert.True(collection.Contains(element.Object))", span="114-114"];
n95 [cluster="Unk.Contains", label="Entry Unk.Contains", span=""];
n96 [cluster="Unk.False", label="Entry Unk.False", span=""];
n94 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105"];
n97 [cluster="Unk.True", label="Entry Unk.True", span=""];
n98 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118"];
n99 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", label="var runner = new Mock<IServerComponentRunner>()", span="120-120"];
n100 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", label="var collection = CreateCollection()", span="121-121"];
n101 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", label="collection.Add(runner.Object)", span="122-122"];
n102 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", label="collection.Remove(runner.Object)", span="124-124"];
n103 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", label="Assert.False(collection.Contains(runner.Object))", span="126-126"];
n105 [cluster="Unk.Remove", label="Entry Unk.Remove", span=""];
n104 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118"];
n106 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130"];
n107 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", label="var collection = CreateCollection()", span="132-132"];
n108 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", label="Assert.False(collection.IsReadOnly)", span="134-134"];
n109 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130"];
n110 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", span="138-138"];
n111 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", label="var collection = CreateCollection()", span="140-140"];
n112 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", label="var array = new IServerComponentRunner[3]", span="141-141"];
n113 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", label="collection.CopyTo(array, 1)", span="143-143"];
n114 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", color=red, community=0, label="0: Assert.Same(_runner1.Object, array[1])", span="145-145"];
n115 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", color=red, community=0, label="0: Assert.Same(_runner2.Object, array[2])", span="146-146"];
n117 [cluster="HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", label="Entry HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", span="87-87"];
n118 [cluster="Unk.Same", label="Entry Unk.Same", span=""];
n116 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", span="138-138"];
n119 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", label="return new ServerComponentRunnerCollection(_runners);", span="151-151"];
n120 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="149-149"];
m0_49 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_MovesJobStateToEnqueued()", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_MovesJobStateToEnqueued()", span="53-53"];
m0_50 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_MovesJobStateToEnqueued()", file="DelayedJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="55-55"];
m0_51 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_MovesJobStateToEnqueued()", file="DelayedJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="57-57"];
m0_52 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_MovesJobStateToEnqueued()", file="DelayedJobSchedulerFacts.cs", label="_stateChanger.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName }))))", span="59-62"];
m0_53 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_MovesJobStateToEnqueued()", file="DelayedJobSchedulerFacts.cs", label="_connection.Verify(x => x.Dispose())", span="64-64"];
m0_54 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_MovesJobStateToEnqueued()", file="DelayedJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_MovesJobStateToEnqueued()", span="53-53"];
m0_12 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m0_18 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="DelayedJobSchedulerFacts.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m0_55 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.CreateScheduler()", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.CreateScheduler()", span="107-107"];
m0_115 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.CreateScheduler()", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: return new DelayedJobScheduler(Timeout.InfiniteTimeSpan, _stateChanger.Object);", span="109-109"];
m0_116 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.CreateScheduler()", file="DelayedJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.CreateScheduler()", span="107-107"];
m0_13 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="DelayedJobSchedulerFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m0_40 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", span="44-44"];
m0_41 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", file="DelayedJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new DelayedJobScheduler(Timeout.InfiniteTimeSpan, null))", span="46-47"];
m0_42 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''stateChanger'', exception.ParamName)", span="49-49"];
m0_43 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", file="DelayedJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", span="44-44"];
m0_31 [cluster="Unk.>", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.>", span=""];
m0_85 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", span="82-82"];
m0_86 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="DelayedJobSchedulerFacts.cs", label="_stateChanger\r\n                .Setup(x => x.ChangeState(It.IsAny<StateChangeContext>()))\r\n                .Returns<IState>(null)", span="84-86"];
m0_87 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="DelayedJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="88-88"];
m0_88 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="DelayedJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="90-90"];
m0_89 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="DelayedJobSchedulerFacts.cs", label="_transaction.Verify(x => x.RemoveFromSet(''schedule'', JobId))", span="92-92"];
m0_90 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="DelayedJobSchedulerFacts.cs", label="_transaction.Verify(x => x.Commit())", span="93-93"];
m0_91 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="DelayedJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", span="82-82"];
m0_36 [cluster="Unk.GetFirstByLowestScoreFromSet", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m0_23 [cluster="Unk.GetConnection", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.GetConnection", span=""];
m0_61 [cluster="Unk.ChangeState", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.ChangeState", span=""];
m0_65 [cluster="Unk.SequenceEqual", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.SequenceEqual", span=""];
m0_15 [cluster="Unk.Setup", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m0_117 [cluster="DelayedJobScheduler.cstr", file="DelayedJobSchedulerFacts.cs", label="Entry DelayedJobScheduler.cstr", span=""];
m0_69 [cluster="Unk.Dispose", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Dispose", span=""];
m0_32 [cluster="Unk.AcquireDistributedLock", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.AcquireDistributedLock", span=""];
m0_19 [cluster="Mock<IDisposable>.cstr", file="DelayedJobSchedulerFacts.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m0_103 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_ActsWithinADistributedLock()", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_ActsWithinADistributedLock()", span="97-97"];
m0_104 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_ActsWithinADistributedLock()", file="DelayedJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="99-99"];
m0_105 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_ActsWithinADistributedLock()", file="DelayedJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="101-101"];
m0_106 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_ActsWithinADistributedLock()", file="DelayedJobSchedulerFacts.cs", label="_connection.Verify(x => x.AcquireDistributedLock(It.IsAny<string>(), It.IsAny<TimeSpan>()))", span="103-103"];
m0_107 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_ActsWithinADistributedLock()", file="DelayedJobSchedulerFacts.cs", label="_distributedLock.Verify(x => x.Dispose())", span="104-104"];
m0_108 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_ActsWithinADistributedLock()", file="DelayedJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_ActsWithinADistributedLock()", span="97-97"];
m0_17 [cluster="Mock<IBackgroundJobStateChanger>.cstr", file="DelayedJobSchedulerFacts.cs", label="Entry Mock<IBackgroundJobStateChanger>.cstr", span=""];
m0_112 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="104-104"];
m0_20 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="28-28"];
m0_24 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="32-32"];
m0_28 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="36-36"];
m0_33 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="39-40"];
m0_21 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.GetConnection()", span="28-28"];
m0_22 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="28-28"];
m0_25 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.CreateWriteTransaction()", span="32-32"];
m0_26 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="32-32"];
m0_29 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AcquireDistributedLock(''locks:schedulepoller'', It.IsAny<TimeSpan>())", span="36-36"];
m0_30 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="36-36"];
m0_34 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="39-40"];
m0_35 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="39-40"];
m0_37 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="40-40"];
m0_38 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="time > 0", span="40-40"];
m0_39 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="40-40"];
m0_45 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="47-47"];
m0_46 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="new DelayedJobScheduler(Timeout.InfiniteTimeSpan, null)", span="47-47"];
m0_47 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="47-47"];
m0_58 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="59-62"];
m0_66 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="64-64"];
m0_59 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName })))", span="59-62"];
m0_60 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="59-62"];
m0_62 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="59-62"];
m0_63 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName })", span="60-62"];
m0_64 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="59-62"];
m0_67 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Dispose()", span="64-64"];
m0_68 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="64-64"];
m0_76 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="70-71"];
m0_82 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="77-77"];
m0_77 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="70-71"];
m0_78 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="70-71"];
m0_79 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="71-71"];
m0_80 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="time > 0", span="71-71"];
m0_81 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="71-71"];
m0_83 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.ChangeState(It.IsAny<StateChangeContext>())", span="77-77"];
m0_84 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="77-77"];
m0_92 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="85-85"];
m0_95 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="92-92"];
m0_99 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="93-93"];
m0_93 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.ChangeState(It.IsAny<StateChangeContext>())", span="85-85"];
m0_94 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="85-85"];
m0_96 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.RemoveFromSet(''schedule'', JobId)", span="92-92"];
m0_97 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="92-92"];
m0_100 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Commit()", span="93-93"];
m0_101 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="93-93"];
m0_109 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="103-103"];
m0_110 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AcquireDistributedLock(It.IsAny<string>(), It.IsAny<TimeSpan>())", span="103-103"];
m0_111 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="103-103"];
m0_113 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Dispose()", span="104-104"];
m0_114 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="104-104"];
m0_0 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", span="22-22"];
m0_1 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_context = new BackgroundProcessContextMock()", span="24-24"];
m0_2 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_context.CancellationTokenSource.Cancel()", span="25-25"];
m0_3 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="27-27"];
m0_4 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="28-28"];
m0_5 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_stateChanger = new Mock<IBackgroundJobStateChanger>()", span="30-30"];
m0_6 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="31-31"];
m0_7 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="32-32"];
m0_8 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_distributedLock = new Mock<IDisposable>()", span="34-34"];
m0_9 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_connection\r\n                .Setup(x => x.AcquireDistributedLock(''locks:schedulepoller'', It.IsAny<TimeSpan>()))\r\n                .Returns(_distributedLock.Object)", span="35-37"];
m0_10 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="39-40"];
m0_11 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", file="DelayedJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.DelayedJobSchedulerFacts()", span="22-22"];
m0_48 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
m0_57 [cluster="Unk.Verify", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m0_102 [cluster="Unk.Commit", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Commit", span=""];
m0_70 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_DoesNotCallStateChanger_IfThereAreNoJobsToEnqueue()", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_DoesNotCallStateChanger_IfThereAreNoJobsToEnqueue()", span="68-68"];
m0_71 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_DoesNotCallStateChanger_IfThereAreNoJobsToEnqueue()", file="DelayedJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="70-71"];
m0_72 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_DoesNotCallStateChanger_IfThereAreNoJobsToEnqueue()", file="DelayedJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="72-72"];
m0_73 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_DoesNotCallStateChanger_IfThereAreNoJobsToEnqueue()", file="DelayedJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="74-74"];
m0_74 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_DoesNotCallStateChanger_IfThereAreNoJobsToEnqueue()", file="DelayedJobSchedulerFacts.cs", label="_stateChanger.Verify(\r\n                x => x.ChangeState(It.IsAny<StateChangeContext>()),\r\n                Times.Never)", span="76-78"];
m0_75 [cluster="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_DoesNotCallStateChanger_IfThereAreNoJobsToEnqueue()", file="DelayedJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts.Execute_DoesNotCallStateChanger_IfThereAreNoJobsToEnqueue()", span="68-68"];
m0_27 [cluster="Unk.CreateWriteTransaction", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m0_98 [cluster="Unk.RemoveFromSet", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.RemoveFromSet", span=""];
m0_16 [cluster="Unk.Returns", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m0_56 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113"];
m0_14 [cluster="Mock<IStorageConnection>.cstr", file="DelayedJobSchedulerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m0_118 [file="DelayedJobSchedulerFacts.cs", label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", span=""];
m1_0 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="DistributedLockTimeoutException.cs", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m1_1 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="DistributedLockTimeoutException.cs", label="Exit Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m2_45 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55"];
m2_46 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="var collection = CreateCollection()", span="57-57"];
m2_47 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="collection.Dispose()", span="59-59"];
m2_48 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="_runner1.Verify(x => x.Dispose())", span="61-61"];
m2_49 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="_runner2.Verify(x => x.Dispose())", span="62-62"];
m2_50 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55"];
m2_98 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118"];
m2_99 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ExpirationManager.cs", label="var runner = new Mock<IServerComponentRunner>()", span="120-120"];
m2_100 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ExpirationManager.cs", label="var collection = CreateCollection()", span="121-121"];
m2_101 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ExpirationManager.cs", label="collection.Add(runner.Object)", span="122-122"];
m2_102 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ExpirationManager.cs", label="collection.Remove(runner.Object)", span="124-124"];
m2_103 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ExpirationManager.cs", label="Assert.False(collection.Contains(runner.Object))", span="126-126"];
m2_104 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118"];
m2_75 [cluster="Unk.Equal", file="ExpirationManager.cs", label="Entry Unk.Equal", span=""];
m2_41 [cluster="Unk.Stop", file="ExpirationManager.cs", label="Entry Unk.Stop", span=""];
m2_82 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95"];
m2_83 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ExpirationManager.cs", label="var collection = CreateCollection()", span="97-97"];
m2_84 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ExpirationManager.cs", label="collection.Clear()", span="99-99"];
m2_85 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ExpirationManager.cs", label="Assert.Equal(0, collection.Count)", span="101-101"];
m2_86 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95"];
m2_7 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27"];
m2_8 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ExpirationManager.cs", label="Assert.Throws<ArgumentNullException>(() => new ServerComponentRunnerCollection(null))", span="29-29"];
m2_9 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27"];
m2_5 [cluster="Mock<IServerComponentRunner>.cstr", file="ExpirationManager.cs", label="Entry Mock<IServerComponentRunner>.cstr", span=""];
m2_88 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105"];
m2_89 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ExpirationManager.cs", label="var element = new Mock<IServerComponentRunner>()", span="107-107"];
m2_90 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ExpirationManager.cs", label="var collection = CreateCollection()", span="108-108"];
m2_91 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ExpirationManager.cs", label="Assert.False(collection.Contains(element.Object))", span="110-110"];
m2_92 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ExpirationManager.cs", label="collection.Add(element.Object)", span="112-112"];
m2_93 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ExpirationManager.cs", label="Assert.True(collection.Contains(element.Object))", span="114-114"];
m2_94 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105"];
m2_37 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="ExpirationManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
m2_10 [cluster="Unk.>", file="ExpirationManager.cs", label="Entry Unk.>", span=""];
m2_96 [cluster="Unk.False", file="ExpirationManager.cs", label="Entry Unk.False", span=""];
m2_21 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="129-129"];
m2_106 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ExpirationManager.cs", label="return new ServerComponentRunnerCollection(_runners);", span="131-131"];
m2_107 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="129-129"];
m2_0 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14"];
m2_1 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ExpirationManager.cs", label="_runner1 = new Mock<IServerComponentRunner>()", span="16-16"];
m2_2 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ExpirationManager.cs", label="_runner2 = new Mock<IServerComponentRunner>()", span="17-17"];
m2_3 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ExpirationManager.cs", label="_runners = new List<IServerComponentRunner>\r\n            {\r\n                _runner1.Object,\r\n                _runner2.Object\r\n            }", span="19-23"];
m2_4 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14"];
m2_76 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85"];
m2_77 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", color=red, community=0, file="ExpirationManager.cs", label="0: var collection = CreateCollection()", span="87-87"];
m2_78 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", color=red, community=0, file="ExpirationManager.cs", label="0: collection.Add(new Mock<IServerComponentRunner>().Object)", span="89-89"];
m2_79 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ExpirationManager.cs", label="Assert.Equal(3, collection.Count)", span="91-91"];
m2_80 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85"];
m2_81 [cluster="Unk.Add", file="ExpirationManager.cs", label="Entry Unk.Add", span=""];
m2_22 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ExpirationManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m2_87 [cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="ExpirationManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77"];
m2_15 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33"];
m2_16 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="var collection = CreateCollection()", span="35-35"];
m2_17 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="collection.Start()", span="37-37"];
m2_18 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="_runner1.Verify(x => x.Start())", span="39-39"];
m2_19 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="_runner2.Verify(x => x.Start())", span="40-40"];
m2_20 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33"];
m2_55 [cluster="Unk.Dispose", file="ExpirationManager.cs", label="Entry Unk.Dispose", span=""];
m2_105 [cluster="Unk.Remove", file="ExpirationManager.cs", label="Entry Unk.Remove", span=""];
m2_68 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="73-73"];
m2_11 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="29-29"];
m2_12 [cluster="lambda expression", file="ExpirationManager.cs", label="new ServerComponentRunnerCollection(null)", span="29-29"];
m2_13 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="29-29"];
m2_24 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="39-39"];
m2_28 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="40-40"];
m2_25 [cluster="lambda expression", file="ExpirationManager.cs", label="x.Start()", span="39-39"];
m2_26 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="39-39"];
m2_29 [cluster="lambda expression", file="ExpirationManager.cs", label="x.Start()", span="40-40"];
m2_30 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="40-40"];
m2_38 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="50-50"];
m2_42 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="51-51"];
m2_39 [cluster="lambda expression", file="ExpirationManager.cs", label="x.Stop()", span="50-50"];
m2_40 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="50-50"];
m2_43 [cluster="lambda expression", file="ExpirationManager.cs", label="x.Stop()", span="51-51"];
m2_44 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="51-51"];
m2_52 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="61-61"];
m2_56 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="62-62"];
m2_53 [cluster="lambda expression", file="ExpirationManager.cs", label="x.Dispose()", span="61-61"];
m2_54 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="61-61"];
m2_57 [cluster="lambda expression", file="ExpirationManager.cs", label="x.Dispose()", span="62-62"];
m2_58 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="62-62"];
m2_65 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="72-72"];
m2_66 [cluster="lambda expression", file="ExpirationManager.cs", label="x.Stop()", span="72-72"];
m2_67 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="72-72"];
m2_69 [cluster="lambda expression", color=red, community=0, file="ExpirationManager.cs", label="0: x.Stop()", span="73-73"];
m2_70 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="73-73"];
m2_95 [cluster="Unk.Contains", file="ExpirationManager.cs", label="Entry Unk.Contains", span=""];
m2_14 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ExpirationManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m2_27 [cluster="Unk.Start", file="ExpirationManager.cs", label="Entry Unk.Start", span=""];
m2_31 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44"];
m2_32 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="var collection = CreateCollection()", span="46-46"];
m2_33 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="collection.Stop()", span="48-48"];
m2_34 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="_runner1.Verify(x => x.Stop())", span="50-50"];
m2_35 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="_runner2.Verify(x => x.Stop())", span="51-51"];
m2_36 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44"];
m2_97 [cluster="Unk.True", file="ExpirationManager.cs", label="Entry Unk.True", span=""];
m2_51 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ExpirationManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m2_71 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77"];
m2_72 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", color=red, community=0, file="ExpirationManager.cs", label="0: var collection = CreateCollection()", span="79-79"];
m2_73 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", color=red, community=0, file="ExpirationManager.cs", label="0: Assert.Equal(2, collection.Count)", span="81-81"];
m2_74 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77"];
m2_59 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66"];
m2_60 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="var collection = CreateCollection()", span="68-68"];
m2_61 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="collection.Dispose()", span="70-70"];
m2_62 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="_runner1.Verify(x => x.Stop())", span="72-72"];
m2_63 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", color=red, community=0, file="ExpirationManager.cs", label="0: _runner2.Verify(x => x.Stop())", span="73-73"];
m2_64 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ExpirationManager.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66"];
m2_23 [cluster="Unk.Verify", file="ExpirationManager.cs", label="Entry Unk.Verify", span=""];
m2_108 [file="ExpirationManager.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", span=""];
m4_180 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", span="229-229"];
m4_181 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="231-231"];
m4_182 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="InvocationDataFacts.cs", label="Assert.Same(_component.Object, runner.Component)", span="233-233"];
m4_183 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", span="229-229"];
m4_197 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", span="252-252"];
m4_198 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", file="InvocationDataFacts.cs", label="Disposed = true", span="254-254"];
m4_199 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", span="252-252"];
m4_38 [cluster="System.TimeSpan.FromMilliseconds(double)", file="InvocationDataFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m4_11 [cluster="Unk.Equal", file="InvocationDataFacts.cs", label="Entry Unk.Equal", span=""];
m4_51 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", span="67-67"];
m4_52 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="69-69"];
m4_53 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="InvocationDataFacts.cs", label="runner.Start()", span="71-71"];
m4_54 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="InvocationDataFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="72-72"];
m4_55 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="InvocationDataFacts.cs", label="_component.Verify(\r\n                x => x.Execute(It.IsNotNull<CancellationToken>()),\r\n                Times.AtLeast(2))", span="74-76"];
m4_56 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", span="67-67"];
m4_131 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m4_132 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="165-165"];
m4_133 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="InvocationDataFacts.cs", label="runner.Start()", span="166-166"];
m4_134 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="InvocationDataFacts.cs", label="runner.Stop()", span="167-167"];
m4_135 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="InvocationDataFacts.cs", label="Assert.DoesNotThrow(runner.Dispose)", span="169-169"];
m4_136 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m4_0 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", span="13-13"];
m4_1 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", file="InvocationDataFacts.cs", label="_component = new Mock<IServerComponent>()", span="15-15"];
m4_2 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", file="InvocationDataFacts.cs", label="_options = new ServerComponentRunnerOptions\r\n            {\r\n                ShutdownTimeout = TimeSpan.Zero // Letting tests to timeout\r\n            }", span="16-19"];
m4_3 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", span="13-13"];
m4_27 [cluster="Unk.DoesNotThrow", file="InvocationDataFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m4_137 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m4_138 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="_options.MinimumLogVerbosity = true", span="176-176"];
m4_139 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="_options.MaxRetryAttempts = 0", span="177-177"];
m4_140 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="var component = new DisposableComponent()", span="179-179"];
m4_141 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="var runner = new ServerComponentRunner(component, _options)", span="180-180"];
m4_146 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="Assert.True(component.Disposed)", span="190-190"];
m4_142 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="runner.Start()", span="182-182"];
m4_144 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="runner.Dispose()", span="186-186"];
m4_143 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="Thread.Sleep(100)", span="183-183"];
m4_145 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="Thread.Sleep(500)", span="187-187"];
m4_147 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m4_100 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m4_101 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="int timesExecuted = 0", span="124-124"];
m4_102 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="126-126"];
m4_103 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Yield(); })", span="127-128"];
m4_104 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="runner.Start()", span="130-130"];
m4_105 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="runner.Stop()", span="131-131"];
m4_108 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="runner.Start()", span="136-136"];
m4_106 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="132-132"];
m4_107 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="timesExecuted = 0", span="133-133"];
m4_110 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="Assert.True(timesExecuted > 0)", span="140-140"];
m4_109 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="137-137"];
m4_111 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m4_150 [cluster="System.Threading.Thread.Sleep(int)", file="InvocationDataFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m4_37 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", span="236-236"];
m4_185 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="InvocationDataFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => Thread.Yield())", span="238-239"];
m4_186 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="InvocationDataFacts.cs", label="return new ServerComponentRunner(_component.Object, _options);", span="240-240"];
m4_187 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", span="236-236"];
m4_10 [cluster="Unk.>", file="InvocationDataFacts.cs", label="Entry Unk.>", span=""];
m4_83 [cluster="HangFire.Server.ServerComponentRunner.Stop()", file="InvocationDataFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.Stop()", span="70-70"];
m4_166 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", span="214-214"];
m4_167 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="216-216"];
m4_168 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="InvocationDataFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="217-217"];
m4_169 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="InvocationDataFacts.cs", label="runner.Start()", span="218-218"];
m4_171 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="InvocationDataFacts.cs", label="runner.Dispose()", span="221-221"];
m4_170 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="InvocationDataFacts.cs", label="Thread.Sleep(5000)", span="220-220"];
m4_172 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="InvocationDataFacts.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.AtLeast(2))", span="223-225"];
m4_173 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", span="214-214"];
m4_120 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m4_121 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="146-146"];
m4_122 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="InvocationDataFacts.cs", label="runner.Start()", span="147-147"];
m4_123 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="InvocationDataFacts.cs", label="runner.Stop()", span="148-148"];
m4_124 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="InvocationDataFacts.cs", label="Assert.DoesNotThrow(runner.Stop)", span="150-150"];
m4_125 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m4_62 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m4_63 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="82-82"];
m4_64 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="runner.Dispose()", span="83-83"];
m4_65 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="Assert.Throws<ObjectDisposedException>(() => runner.Start())", span="85-85"];
m4_66 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m4_39 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="InvocationDataFacts.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m4_92 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m4_93 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="114-114"];
m4_94 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="runner.Dispose()", span="115-115"];
m4_95 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="Assert.Throws<ObjectDisposedException>(() => runner.Stop())", span="117-117"];
m4_96 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m4_126 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m4_127 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="156-156"];
m4_128 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="InvocationDataFacts.cs", label="runner.Start()", span="157-157"];
m4_129 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="InvocationDataFacts.cs", label="Assert.DoesNotThrow(runner.Dispose)", span="159-159"];
m4_130 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m4_23 [cluster="ServerComponentRunner.cstr", file="InvocationDataFacts.cs", label="Entry ServerComponentRunner.cstr", span=""];
m4_16 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m4_17 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="InvocationDataFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerComponentRunner(_component.Object, null))", span="34-35"];
m4_18 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="InvocationDataFacts.cs", label="Assert.Equal(''options'', exception.ParamName)", span="37-37"];
m4_19 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m4_40 [cluster="HangFire.Server.ServerComponentRunner.Dispose()", file="InvocationDataFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.Dispose()", span="84-84"];
m4_81 [cluster="Unk.Setup", file="InvocationDataFacts.cs", label="Entry Unk.Setup", span=""];
m4_57 [cluster="HangFire.Server.ServerComponentRunner.Start()", file="InvocationDataFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.Start()", span="61-61"];
m4_31 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", span="47-47"];
m4_32 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="49-49"];
m4_33 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="InvocationDataFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="50-50"];
m4_34 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="InvocationDataFacts.cs", label="runner.Dispose()", span="52-52"];
m4_35 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="InvocationDataFacts.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="54-54"];
m4_36 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", span="47-47"];
m4_46 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", span="58-58"];
m4_47 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="60-60"];
m4_48 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="InvocationDataFacts.cs", label="runner.Dispose()", span="61-61"];
m4_49 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="InvocationDataFacts.cs", label="Assert.DoesNotThrow(runner.Dispose)", span="63-63"];
m4_50 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", span="58-58"];
m4_149 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="InvocationDataFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m4_91 [cluster="System.Threading.Thread.Yield()", file="InvocationDataFacts.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m4_4 [cluster="Mock<IServerComponent>.cstr", file="InvocationDataFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m4_191 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="239-239"];
m4_12 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="26-26"];
m4_13 [cluster="lambda expression", file="InvocationDataFacts.cs", label="new ServerComponentRunner(null)", span="26-26"];
m4_14 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="26-26"];
m4_20 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="35-35"];
m4_21 [cluster="lambda expression", file="InvocationDataFacts.cs", label="new ServerComponentRunner(_component.Object, null)", span="35-35"];
m4_22 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="35-35"];
m4_28 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="43-43"];
m4_29 [cluster="lambda expression", file="InvocationDataFacts.cs", label="new ServerComponentRunner(_component.Object)", span="43-43"];
m4_30 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="43-43"];
m4_42 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="54-54"];
m4_43 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="54-54"];
m4_44 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="54-54"];
m4_59 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="75-75"];
m4_60 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Execute(It.IsNotNull<CancellationToken>())", span="75-75"];
m4_61 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="75-75"];
m4_68 [cluster="lambda expression", file="InvocationDataFacts.cs", label="runner.Start()", span="85-85"];
m4_67 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="85-85"];
m4_69 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="85-85"];
m4_84 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="95-95"];
m4_87 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="96-96"];
m4_88 [cluster="lambda expression", file="InvocationDataFacts.cs", label="timesExecuted++", span="96-96"];
m4_85 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="95-95"];
m4_86 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="95-95"];
m4_89 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Thread.Yield()", span="96-96"];
m4_90 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="96-96"];
m4_98 [cluster="lambda expression", file="InvocationDataFacts.cs", label="runner.Stop()", span="117-117"];
m4_97 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="117-117"];
m4_99 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="117-117"];
m4_113 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="127-127"];
m4_116 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="128-128"];
m4_117 [cluster="lambda expression", file="InvocationDataFacts.cs", label="timesExecuted++", span="128-128"];
m4_114 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="127-127"];
m4_115 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="127-127"];
m4_118 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Thread.Yield()", span="128-128"];
m4_119 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="128-128"];
m4_160 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="200-200"];
m4_163 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="209-209"];
m4_161 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="200-200"];
m4_162 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="200-200"];
m4_164 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="209-209"];
m4_165 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="209-209"];
m4_174 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="217-217"];
m4_177 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="223-224"];
m4_175 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="217-217"];
m4_176 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="217-217"];
m4_178 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="223-224"];
m4_179 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="223-224"];
m4_188 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="238-238"];
m4_189 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="238-238"];
m4_190 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="238-238"];
m4_192 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Thread.Yield()", span="239-239"];
m4_193 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="239-239"];
m4_6 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m4_7 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="InvocationDataFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerComponentRunner(null))", span="25-26"];
m4_8 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="InvocationDataFacts.cs", label="Assert.Equal(''component'', exception.ParamName)", span="28-28"];
m4_9 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m4_58 [cluster="Unk.AtLeast", file="InvocationDataFacts.cs", label="Entry Unk.AtLeast", span=""];
m4_24 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m4_25 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="InvocationDataFacts.cs", label="Assert.DoesNotThrow(() => new ServerComponentRunner(_component.Object))", span="43-43"];
m4_26 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m4_194 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="247-247"];
m4_195 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="InvocationDataFacts.cs", label="Thread.Yield()", span="249-249"];
m4_196 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="247-247"];
m4_148 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.DisposableComponent()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.DisposableComponent()", span="243-243"];
m4_112 [cluster="Unk.True", file="InvocationDataFacts.cs", label="Entry Unk.True", span=""];
m4_45 [cluster="Unk.Execute", file="InvocationDataFacts.cs", label="Entry Unk.Execute", span=""];
m4_70 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m4_71 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="int timesExecuted = 0", span="92-92"];
m4_72 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="94-94"];
m4_73 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Yield(); })", span="95-96"];
m4_74 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="runner.Start()", span="98-98"];
m4_75 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="runner.Stop()", span="101-101"];
m4_76 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="102-102"];
m4_77 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="timesExecuted = 0", span="103-103"];
m4_78 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="105-105"];
m4_79 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="Assert.Equal(0, timesExecuted)", span="108-108"];
m4_80 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m4_82 [cluster="Unk.Callback", file="InvocationDataFacts.cs", label="Entry Unk.Callback", span=""];
m4_5 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="InvocationDataFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m4_15 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="InvocationDataFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m4_41 [cluster="Unk.Verify", file="InvocationDataFacts.cs", label="Entry Unk.Verify", span=""];
m4_151 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="InvocationDataFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", span="194-194"];
m4_152 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="InvocationDataFacts.cs", label="_options.MaxRetryAttempts = 0", span="197-197"];
m4_153 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="InvocationDataFacts.cs", label="var runner = CreateRunner()", span="199-199"];
m4_154 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="InvocationDataFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="200-200"];
m4_155 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="InvocationDataFacts.cs", label="runner.Start()", span="202-202"];
m4_157 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="InvocationDataFacts.cs", label="runner.Dispose()", span="206-206"];
m4_156 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="InvocationDataFacts.cs", label="Thread.Sleep(500)", span="203-203"];
m4_158 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="InvocationDataFacts.cs", label="_component.Verify(\r\n                x => x.Execute(It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="208-210"];
m4_159 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="InvocationDataFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", span="194-194"];
m4_200 [file="InvocationDataFacts.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", span=""];
m4_201 [file="InvocationDataFacts.cs", label=runner, span=""];
m4_202 [file="InvocationDataFacts.cs", label=timesExecuted, span=""];
m4_203 [file="InvocationDataFacts.cs", label=runner, span=""];
m4_204 [file="InvocationDataFacts.cs", label=timesExecuted, span=""];
m4_205 [file="InvocationDataFacts.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent", span=""];
m5_2 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="LibLog.cs", label="Entry HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="36-36"];
m5_3 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="LibLog.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", span="38-41"];
m5_4 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="LibLog.cs", label="Exit HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="36-36"];
m5_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LibLog.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_12 [cluster="HangFire.Storage.IWriteableStoredValues.Increment(string)", file="LibLog.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Increment(string)", span="6-6"];
m5_7 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="LibLog.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m5_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="LibLog.cs", label="context.Transaction.Jobs.Expire(context.JobId, JobExpirationTimeout)", span="49-49"];
m5_9 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="LibLog.cs", label="context.Transaction.Values.Increment(''stats:succeeded'')", span="50-50"];
m5_10 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="LibLog.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m5_0 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="LibLog.cs", label="Entry HangFire.States.SucceededState.SucceededState(string)", span="29-29"];
m5_1 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="LibLog.cs", label="Exit HangFire.States.SucceededState.SucceededState(string)", span="29-29"];
m5_11 [cluster="HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="LibLog.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="7-7"];
m5_18 [cluster="HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="LibLog.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="8-8"];
m5_17 [cluster="HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="LibLog.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="7-7"];
m5_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="LibLog.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="53-53"];
m5_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="LibLog.cs", label="context.Transaction.Values.Decrement(''stats:succeeded'')", span="55-55"];
m5_15 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="LibLog.cs", label="context.Transaction.Jobs.Persist(context.JobId)", span="56-56"];
m5_16 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="LibLog.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="53-53"];
m5_6 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="LibLog.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m6_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobScheduler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_34 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m6_74 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45"];
m6_89 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_33 [cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobScheduler.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m6_106 [cluster="System.DateTime.AddSeconds(double)", file="RecurringJobScheduler.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m6_40 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m6_41 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="return GetType().Name;", span="152-152"];
m6_42 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m6_83 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobScheduler.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m6_90 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m6_43 [cluster="object.GetType()", file="RecurringJobScheduler.cs", label="Entry object.GetType()", span="0-0"];
m6_92 [cluster="string.Equals(string)", file="RecurringJobScheduler.cs", label="Entry string.Equals(string)", span="0-0"];
m6_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m6_1 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m6_38 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="280-280"];
m6_77 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobScheduler.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m6_82 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m6_85 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m6_16 [cluster="Unk.nameof", file="RecurringJobScheduler.cs", label="Entry Unk.nameof", span=""];
m6_32 [cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22"];
m6_2 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m6_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m6_79 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_88 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m6_81 [cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime)", span="25-25"];
m6_73 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m6_37 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m6_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="161-161"];
m6_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var cron = recurringJob[''Cron'']", span="163-163"];
m6_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="168-170"];
m6_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var lastInstant = GetLastInstant(recurringJob, nowInstant)", span="175-175"];
m6_54 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="180-180"];
m6_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="state.Queue = recurringJob[''Queue'']", span="182-182"];
m6_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var context = new CreateContext(storage, connection, job, state)", span="185-185"];
m6_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="context.Parameters[''RecurringJobId''] = recurringJobId", span="186-186"];
m6_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Logger.Debug($''Recurring job '{recurringJobId}' execution at '{nowInstant.NowInstant}' has been canceled.'')", span="193-193"];
m6_64 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="!recurringJob.ContainsKey(''CreatedAt'')", span="201-201"];
m6_67 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="connection.SetRangeInHash(\r\n                    $''recurring-job:{recurringJobId}'',\r\n                    changedFields)", span="208-210"];
m6_71 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Logger.ErrorException(\r\n                    $''Recurring job '{recurringJobId}' was not triggered: {ex.Message}.'',\r\n                    ex)", span="222-224"];
m6_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var job = serializedJob.Deserialize()", span="162-162"];
m6_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="164-164"];
m6_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var nowInstant = _instantFactory(cronSchedule, timeZone)", span="172-172"];
m6_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var changedFields = new Dictionary<string, string>()", span="173-173"];
m6_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="nowInstant.GetNextInstants(lastInstant).Any()", span="177-177"];
m6_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(nowInstant.NowInstant))", span="196-196"];
m6_65 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''CreatedAt'', JobHelper.SerializeDateTime(nowInstant.NowInstant))", span="203-203"];
m6_66 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''NextExecution'', nowInstant.NextInstant.HasValue ? JobHelper.SerializeDateTime(nowInstant.NextInstant.Value) : null)", span="206-206"];
m6_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="197-197"];
m6_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="179-179"];
m6_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var backgroundJob = _factory.Create(context)", span="188-188"];
m6_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var jobId = backgroundJob?.Id", span="189-189"];
m6_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="String.IsNullOrEmpty(jobId)", span="191-191"];
m6_68 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label=Exception, span="216-216"];
m6_69 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="!ex.GetType().Name.Equals(''TimeZoneNotFoundException'')", span="219-219"];
m6_70 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="throw;", span="219-219"];
m6_72 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m6_84 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobScheduler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m6_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="factory == null", span="100-100"];
m6_6 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(nameof(factory));", span="100-100"];
m6_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="instantFactory == null", span="101-101"];
m6_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(nameof(instantFactory));", span="101-101"];
m6_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throttler == null", span="102-102"];
m6_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(nameof(throttler));", span="102-102"];
m6_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_factory = factory", span="104-104"];
m6_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_instantFactory = instantFactory", span="105-105"];
m6_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_throttler = throttler", span="106-106"];
m6_14 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m6_105 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m6_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m6_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="context == null", span="112-112"];
m6_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(nameof(context));", span="112-112"];
m6_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Throttle(context.CancellationToken)", span="114-114"];
m6_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: var connection = context.Storage.GetConnection()", span="116-116"];
m6_27 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="133-133"];
m6_30 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Delay(context.CancellationToken)", span="146-146"];
m6_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RecurringJobScheduler.cs", label="0: connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="117-117"];
m6_23 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="119-119"];
m6_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        $''recurring-job:{recurringJobId}'')", span="123-124"];
m6_24 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=recurringJobIds, span="121-121"];
m6_29 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Logger.WarnException(\r\n                            $''Recurring job '{recurringJobId}' can not be scheduled due to job load exception.'',\r\n                            ex)", span="137-139"];
m6_26 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="recurringJob == null", span="126-126"];
m6_28 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=JobLoadException, span="135-135"];
m6_31 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m6_39 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m6_91 [cluster="System.Exception.GetType()", file="RecurringJobScheduler.cs", label="Entry System.Exception.GetType()", span="0-0"];
m6_87 [cluster="Hangfire.Logging.ILog.Debug(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.Debug(string)", span="116-116"];
m6_35 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m6_36 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m6_93 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="161-161"];
m6_76 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_75 [cluster="NCrontab.CrontabSchedule.Parse(string)", file="RecurringJobScheduler.cs", label="Entry NCrontab.CrontabSchedule.Parse(string)", span="93-93"];
m6_78 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="RecurringJobScheduler.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m6_80 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", span="229-229"];
m6_94 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: DateTime lastInstant", span="231-231"];
m6_95 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: recurringJob.ContainsKey(''LastExecution'')", span="233-233"];
m6_96 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: lastInstant = JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])", span="235-235"];
m6_97 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: recurringJob.ContainsKey(''CreatedAt'')", span="237-237"];
m6_98 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: lastInstant = JobHelper.DeserializeDateTime(recurringJob[''CreatedAt''])", span="239-239"];
m6_99 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: recurringJob.ContainsKey(''NextExecution'')", span="241-241"];
m6_100 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: lastInstant = JobHelper.DeserializeDateTime(recurringJob[''NextExecution''])", span="243-243"];
m6_102 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: lastInstant = instant.NowInstant.AddSeconds(-1)", span="248-248"];
m6_101 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: lastInstant = lastInstant.AddSeconds(-1)", span="244-244"];
m6_103 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="return lastInstant;", span="251-251"];
m6_104 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", span="229-229"];
m6_86 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m6_107 [file="RecurringJobScheduler.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m7_73 [cluster="Unk.Map", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Map", span=""];
m7_49 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="51-51"];
m7_257 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", span="298-298"];
m7_259 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''NextExecution''] = JobHelper.SerializeDateTime(nextExecution)", span="302-302"];
m7_260 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob.Remove(''CreatedAt'')", span="303-303"];
m7_261 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob.Remove(''LastExecution'')", span="304-304"];
m7_262 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="306-306"];
m7_263 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="309-309"];
m7_264 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="RecurringJobSchedulerFacts.cs", label="_instant.Verify(x => x.GetNextInstants(\r\n                It.Is<DateTime>(time => time < nextExecution)))", span="312-313"];
m7_258 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="RecurringJobSchedulerFacts.cs", label="var nextExecution = DateTime.UtcNow.AddHours(-10)", span="301-301"];
m7_265 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", span="298-298"];
m7_72 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="70-70"];
m7_111 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="118-118"];
m7_112 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="121-121"];
m7_113 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="124-124"];
m7_115 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == _backgroundJobMock.Id)))", span="129-132"];
m7_116 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="134-138"];
m7_117 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="140-144"];
m7_114 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="var jobKey = $''recurring-job:{RecurringJobId}''", span="127-127"];
m7_118 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="118-118"];
m7_192 [cluster="Hangfire.Core.Tests.PlatformHelper.IsRunningOnWindows()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.PlatformHelper.IsRunningOnWindows()", span="10-10"];
m7_41 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="37-37"];
m7_166 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m7_213 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="236-236"];
m7_214 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="238-238"];
m7_215 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="239-239"];
m7_216 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="241-241"];
m7_217 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="_factory.Verify(x => x.Create(It.IsAny<CreateContext>()), Times.Never)", span="243-243"];
m7_218 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="236-236"];
m7_88 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Hangfire.JobStorage", span=""];
m7_89 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label=IAppBuilder, span=""];
m7_90 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="100-100"];
m7_91 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_factory.Verify(x => x.Create(It.IsNotNull<CreateContext>()))", span="102-102"];
m7_92 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="96-96"];
m7_54 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(''recurring-jobs'')", span="53-53"];
m7_35 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, params Hangfire.Server.IBackgroundProcess[])", file="RecurringJobSchedulerFacts.cs", label="throw new InvalidOperationException(\r\n                    ''Current OWIN environment does not contain an instance of the `CancellationToken` class neither under `host.OnAppDisposing`, nor `server.OnDispose` key.\r\n''\r\n                    + ''Please use another OWIN host or create an instance of the `BackgroundJobServer` class manually.'');", span="305-307"];
m7_59 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="56-56"];
m7_60 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m7_62 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsAny<CreateContext>())", span="62-62"];
m7_64 [cluster="Unk.Create", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Create", span=""];
m7_66 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(null, _instantFactory, _throttler.Object))", span="68-70"];
m7_68 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="66-66"];
m7_69 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="builder.Map(pathMatch, subApp => subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes))", span="405-407"];
m7_70 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="70-70"];
m7_61 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="62-62"];
m7_63 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="62-62"];
m7_65 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="66-66"];
m7_67 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''factory'', exception.ParamName)", span="72-72"];
m7_71 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new RecurringJobScheduler(null, _instantFactory, _throttler.Object)", span="70-70"];
m7_9 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob = new Dictionary<string, string>\r\n            {\r\n                { ''Cron'', ''* * * * *'' },\r\n                { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) },\r\n                { ''TimeZoneId'', timeZone1.Id }\r\n            }", span="43-48"];
m7_10 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="50-50"];
m7_11 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="51-51"];
m7_78 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="80-80"];
m7_183 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="31-31"];
m7_126 [cluster="Unk.ContainsKey", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.ContainsKey", span=""];
m7_19 [cluster="Mock<IThrottler>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IThrottler>.cstr", span=""];
m7_20 [cluster="Mock<IScheduleInstant>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IScheduleInstant>.cstr", span=""];
m7_22 [cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m7_24 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233"];
m7_26 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m7_28 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m7_30 [cluster="Mock<IBackgroundJobFactory>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IBackgroundJobFactory>.cstr", span=""];
m7_37 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.NowInstant", span="36-36"];
m7_21 [cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m7_23 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_25 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70"];
m7_27 [cluster="Mock<IStorageConnection>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m7_29 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", span="9-9"];
m7_36 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="36-36"];
m7_31 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="35-35"];
m7_33 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="35-35"];
m7_32 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(It.IsAny<DateTime>())", span="35-35"];
m7_34 [cluster="Unk.>", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.>", span=""];
m7_38 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="36-36"];
m7_39 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="37-37"];
m7_18 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="252-252"];
m7_159 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="165-165"];
m7_161 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="168-168"];
m7_162 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="169-169"];
m7_163 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="171-171"];
m7_164 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="_instant.Verify(x => x.GetNextInstants(time))", span="173-173"];
m7_160 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var time = DateTime.UtcNow", span="167-167"];
m7_165 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="165-165"];
m7_170 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="177-177"];
m7_171 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="179-180"];
m7_172 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="181-181"];
m7_173 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="184-184"];
m7_174 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="177-177"];
m7_46 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="46-46"];
m7_47 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="46-46"];
m7_48 [cluster="System.Console.WriteLine()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m7_5 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.NowInstant).Returns(DateTime.UtcNow)", span="36-36"];
m7_6 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.NextInstant).Returns(_instant.Object.NowInstant)", span="37-37"];
m7_7 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="var timeZone1 = TimeZoneInfo.Local", span="39-39"];
m7_193 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m7_245 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", span="280-280"];
m7_246 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob.Remove(''CreatedAt'')", span="283-283"];
m7_247 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="284-284"];
m7_248 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="287-287"];
m7_249 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(\r\n                x => x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt''))),\r\n                Times.Once)", span="290-294"];
m7_250 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", span="280-280"];
m7_0 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", span="151-151"];
m7_1 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", file="RecurringJobSchedulerFacts.cs", label="return builder.UseHangfireServer(new BackgroundJobServerOptions());", span="153-153"];
m7_2 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", span="151-151"];
m7_3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34"];
m7_4 [cluster="IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions)", file="RecurringJobSchedulerFacts.cs", label="Entry IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions)", span="198-198"];
m7_8 [cluster="IAppBuilder.UseHangfireServer(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, params Hangfire.Server.IBackgroundProcess[])", file="RecurringJobSchedulerFacts.cs", label="Entry IAppBuilder.UseHangfireServer(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, params Hangfire.Server.IBackgroundProcess[])", span="281-281"];
m7_12 [cluster="IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Entry IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="252-252"];
m7_13 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, params Hangfire.Server.IBackgroundProcess[])", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, params Hangfire.Server.IBackgroundProcess[])", span="225-225"];
m7_14 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, params Hangfire.Server.IBackgroundProcess[])", file="RecurringJobSchedulerFacts.cs", label="return builder.UseHangfireServer(JobStorage.Current, options, additionalProcesses);", span="230-230"];
m7_15 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, params Hangfire.Server.IBackgroundProcess[])", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, params Hangfire.Server.IBackgroundProcess[])", span="225-225"];
m7_16 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="252-252"];
m7_17 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="return builder.UseHangfireServer(storage, options, new IBackgroundProcess[0]);", span="257-257"];
m7_133 [cluster="Unk.SerializeDateTime", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SerializeDateTime", span=""];
m7_233 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", span="262-262"];
m7_234 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''CreatedAt''] = JobHelper.SerializeDateTime(DateTime.UtcNow)", span="265-265"];
m7_235 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="266-266"];
m7_236 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="269-269"];
m7_237 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(\r\n                x => x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt''))),\r\n                Times.Never)", span="272-276"];
m7_238 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", span="262-262"];
m7_184 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="201-201"];
m7_186 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (timeZoneInfo.Id != timeZoneId) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="205-209"];
m7_188 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="212-212"];
m7_189 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="213-213"];
m7_190 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="216-216"];
m7_185 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var timeZoneId = PlatformHelper.IsRunningOnWindows() ? ''Hawaiian Standard Time'' : ''Pacific/Honolulu''", span="203-203"];
m7_187 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var timeZone = TimeZoneInfo.FindSystemTimeZoneById(timeZoneId)", span="211-211"];
m7_191 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="201-201"];
m7_94 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m7_269 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="313-313"];
m7_75 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_factory.Object, null, _throttler.Object))", span="78-80"];
m7_74 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="76-76"];
m7_76 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''instantFactory'', exception.ParamName)", span="82-82"];
m7_83 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''throttler'', exception.ParamName)", span="92-92"];
m7_82 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_factory.Object, _instantFactory, null))", span="88-90"];
m7_84 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="86-86"];
m7_43 [cluster="Unk.>", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.>", span=""];
m7_79 [cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", span="412-412"];
m7_86 [cluster="Unk.Use", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Use", span=""];
m7_120 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == _backgroundJobMock.Id))", span="129-132"];
m7_124 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == _backgroundJobMock.Id", span="132-132"];
m7_128 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="134-138"];
m7_131 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="137-138"];
m7_135 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="140-144"];
m7_138 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="143-144"];
m7_154 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                $''recurring-job:{RecurringJobId}'',\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant.Value)))", span="157-161"];
m7_157 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant.Value)", span="160-161"];
m7_197 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="return _instant.Object;", span="208-208"];
m7_210 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="return _instant.Object;", span="226-226"];
m7_42 [cluster="OwinContext.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry OwinContext.cstr", span=""];
m7_44 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m7_45 [cluster="Unk.Register", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Register", span=""];
m7_53 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m7_57 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", span="367-367"];
m7_80 [cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", file="RecurringJobSchedulerFacts.cs", label="return middleware => builder.Use(middleware(builder.Properties));", span="414-414"];
m7_85 [cluster="Unk.middleware", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.middleware", span=""];
m7_87 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Hangfire.DashboardOptions", span=""];
m7_96 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="102-102"];
m7_105 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="113-114"];
m7_119 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="129-132"];
m7_121 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="129-132"];
m7_123 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="131-132"];
m7_125 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="131-132"];
m7_127 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="134-138"];
m7_129 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="134-138"];
m7_130 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="136-138"];
m7_132 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="136-138"];
m7_134 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="140-144"];
m7_136 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="140-144"];
m7_137 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="142-144"];
m7_139 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="142-144"];
m7_147 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="150-150"];
m7_150 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="155-155"];
m7_153 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="157-161"];
m7_155 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="157-161"];
m7_156 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="159-161"];
m7_158 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="159-161"];
m7_167 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="173-173"];
m7_175 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="179-179"];
m7_195 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="timeZoneInfo.Id != timeZoneId", span="207-207"];
m7_198 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="205-209"];
m7_208 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="!timeZoneInfo.Equals(TimeZoneInfo.Utc)", span="225-225"];
m7_211 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="223-227"];
m7_219 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="243-243"];
m7_230 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="258-258"];
m7_239 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="273-275"];
m7_251 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="291-293"];
m7_266 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="312-313"];
m7_40 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="74-74"];
m7_51 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", file="RecurringJobSchedulerFacts.cs", label="return builder.UseHangfireDashboard(pathMatch, new DashboardOptions());", span="348-348"];
m7_50 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="344-344"];
m7_55 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", span="367-367"];
m7_58 [cluster="IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Entry IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="392-392"];
m7_97 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsNotNull<CreateContext>())", span="102-102"];
m7_106 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(\r\n                It.Is<CreateContext>(cc => ((EnqueuedState)cc.InitialState).Queue == ''critical''))", span="113-114"];
m7_148 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(It.IsAny<DateTime>())", span="150-150"];
m7_151 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsAny<CreateContext>())", span="155-155"];
m7_176 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(It.IsAny<string>())", span="179-179"];
m7_220 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsAny<CreateContext>())", span="243-243"];
m7_240 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt'')))", span="273-275"];
m7_252 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt'')))", span="291-293"];
m7_267 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(\r\n                It.Is<DateTime>(time => time < nextExecution))", span="312-313"];
m7_98 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="102-102"];
m7_107 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="113-114"];
m7_243 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''CreatedAt'')", span="275-275"];
m7_255 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''CreatedAt'')", span="293-293"];
m7_149 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="150-150"];
m7_152 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="155-155"];
m7_168 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(time)", span="173-173"];
m7_169 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="173-173"];
m7_177 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="179-179"];
m7_194 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="205-209"];
m7_196 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="throw new InvalidOperationException(''Invalid timezone'');", span="207-207"];
m7_207 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="223-227"];
m7_209 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="throw new InvalidOperationException(''Invalid timezone'');", span="225-225"];
m7_221 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="243-243"];
m7_231 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(createdAt)", span="258-258"];
m7_232 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="258-258"];
m7_241 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="273-275"];
m7_253 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="291-293"];
m7_270 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="time < nextExecution", span="313-313"];
m7_268 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="312-313"];
m7_108 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="114-114"];
m7_242 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="275-275"];
m7_254 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="293-293"];
m7_244 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="275-275"];
m7_256 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="293-293"];
m7_271 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="313-313"];
m7_109 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="((EnqueuedState)cc.InitialState).Queue == ''critical''", span="114-114"];
m7_110 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="114-114"];
m7_52 [cluster="Unk.GetConnection", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetConnection", span=""];
m7_178 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="188-188"];
m7_179 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="191-192"];
m7_180 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="194-194"];
m7_181 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="197-197"];
m7_182 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="188-188"];
m7_81 [cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", span="412-412"];
m7_122 [cluster="Unk.SetRangeInHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m7_56 [cluster="Unk.GetAllItemsFromSet", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m7_77 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="76-76"];
m7_140 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="148-148"];
m7_141 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime>())).Returns(Enumerable.Empty<DateTime>)", span="150-150"];
m7_142 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="151-151"];
m7_143 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="153-153"];
m7_144 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_factory.Verify(x => x.Create(It.IsAny<CreateContext>()), Times.Never)", span="155-155"];
m7_145 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                $''recurring-job:{RecurringJobId}'',\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant.Value))))", span="157-161"];
m7_146 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="148-148"];
m7_200 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="220-220"];
m7_201 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (!timeZoneInfo.Equals(TimeZoneInfo.Utc)) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="223-227"];
m7_202 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob.Remove(''TimeZoneId'')", span="228-228"];
m7_203 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="229-229"];
m7_204 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="232-232"];
m7_205 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="220-220"];
m7_212 [cluster="System.TimeZoneInfo.Equals(System.TimeZoneInfo)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeZoneInfo.Equals(System.TimeZoneInfo)", span="0-0"];
m7_199 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m7_99 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="106-106"];
m7_100 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''Queue''] = ''critical''", span="108-108"];
m7_101 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="109-109"];
m7_102 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="111-111"];
m7_103 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_factory.Verify(x => x.Create(\r\n                It.Is<CreateContext>(cc => ((EnqueuedState)cc.InitialState).Queue == ''critical'')))", span="113-114"];
m7_104 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="106-106"];
m7_229 [cluster="System.DateTime.AddHours(double)", file="RecurringJobSchedulerFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m7_206 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m7_95 [cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m7_93 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="316-316"];
m7_272 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="0: return new RecurringJobScheduler(\r\n                _factory.Object,\r\n                _instantFactory,\r\n                _throttler.Object);", span="318-321"];
m7_273 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="316-316"];
m7_222 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", span="247-247"];
m7_224 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''CreatedAt''] = JobHelper.SerializeDateTime(createdAt)", span="251-251"];
m7_225 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="252-252"];
m7_226 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="255-255"];
m7_227 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="RecurringJobSchedulerFacts.cs", label="_instant.Verify(x => x.GetNextInstants(createdAt), Times.Once)", span="258-258"];
m7_223 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="RecurringJobSchedulerFacts.cs", label="var createdAt = DateTime.UtcNow.AddHours(-3)", span="250-250"];
m7_228 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", span="247-247"];
m7_274 [file="RecurringJobSchedulerFacts.cs", label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span=""];
m7_275 [file="RecurringJobSchedulerFacts.cs", label=jobKey, span=""];
m7_277 [file="RecurringJobSchedulerFacts.cs", label=timeZoneId, span=""];
m7_279 [file="RecurringJobSchedulerFacts.cs", label=nextExecution, span=""];
m7_276 [file="RecurringJobSchedulerFacts.cs", label=time, span=""];
m7_278 [file="RecurringJobSchedulerFacts.cs", label=createdAt, span=""];
m8_134 [cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m8_137 [cluster="Hangfire.Storage.JobStorageConnection.GetRecurringJobs(int, int)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRecurringJobs(int, int)", span="44-44"];
m8_0 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", span="57-57"];
m8_1 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="61-61"];
m8_142 [cluster="string.IsNullOrWhiteSpace(string)", file="RecurringJobsPage.generated.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m8_149 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="70-70"];
m8_148 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m8_140 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m8_131 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m8_147 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58"];
m8_143 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobsPage.generated.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m8_130 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m8_132 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m8_144 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="101-101"];
m8_133 [cluster="int.TryParse(string, out int)", file="RecurringJobsPage.generated.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m8_135 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m8_138 [cluster="Hangfire.Storage.IStorageConnection.GetRecurringJobs()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.GetRecurringJobs()", span="55-55"];
m8_146 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobsPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m8_145 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="146-146"];
m8_141 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="76-76"];
m8_4 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: int from, perPage", span="77-77"];
m8_3 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="List<RecurringJobDto> recurringJobs", span="75-75"];
m8_5 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: int.TryParse(Query(''from''), out from)", span="79-79"];
m8_6 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="int.TryParse(Query(''count''), out perPage)", span="80-80"];
m8_11 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="pager = new Pager(from, perPage, storageConnection.GetRecurringJobCount())", span="89-89"];
m8_18 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                '')", span="124-124"];
m8_17 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="recurringJobs.Count == 0", span="118-118"];
m8_19 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_NoJobs)", span="129-129"];
m8_25 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-play-circle\''></span>\r\n                        '')", span="168-169"];
m8_24 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Triggering)", span="163-163"];
m8_26 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_TriggerNow)", span="174-174"];
m8_27 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''\r\n                    </button>\r\n\r\n                    <button class=\''js-jobs-lis'' +\r\n''t-command btn btn-sm btn-default\''\r\n                            data-url=\'''')", span="179-180"];
m8_28 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Url.To(''/recurring/remove''))", span="185-185"];
m8_33 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-remove\''></span>\r\n                        '')", span="210-211"];
m8_32 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_DeleteConfirm)", span="205-205"];
m8_34 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Delete)", span="216-216"];
m8_37 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                        '')", span="232-232"];
m8_36 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="pager != null", span="226-226"];
m8_38 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral('' '')", span="234-234"];
m8_41 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(@''                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="254-263"];
m8_40 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="244-244"];
m8_42 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Id)", span="268-268"];
m8_55 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="333-334"];
m8_54 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Created)", span="328-328"];
m8_56 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label=recurringJobs, span="339-339"];
m8_57 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                <tr class=\''js-jobs-list-row hover\''>\r\n            '' +\r\n''                        <td>\r\n                                        <input typ'' +\r\n''e=\''checkbox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="345-347"];
m8_58 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.Id)", span="352-352"];
m8_121 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n'')", span="780-781"];
m8_122 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="pager != null", span="786-786"];
m8_59 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''\'' />\r\n                                    </td>\r\n                                '' +\r\n''    <td class=\''min-width\''>'')", span="357-358"];
m8_60 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.Id)", span="363-363"];
m8_61 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''</td>\r\n                                    <td class=\''min-width\''>\r\n              '' +\r\n''                          '')", span="368-369"];
m8_62 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="373-373"];
m8_66 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                            <code title=\'''')", span="405-405"];
m8_65 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="cronDescription != null", span="399-399"];
m8_67 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(cronDescription)", span="410-410"];
m8_74 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\''>\r\n'')", span="457-458"];
m8_70 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</code>\r\n'')", span="425-425"];
m8_73 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</code>\r\n'')", span="447-447"];
m8_75 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="!String.IsNullOrWhiteSpace(job.TimeZoneId)", span="463-463"];
m8_76 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                            <span title=\'''')", span="469-469"];
m8_77 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(TimeZoneInfo.FindSystemTimeZoneById(job.TimeZoneId).DisplayName)", span="474-474"];
m8_83 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''word-break\''>\r\n'')", span="513-514"];
m8_80 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</span>\r\n'')", span="489-489"];
m8_82 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral('' UTC\r\n'')", span="503-503"];
m8_84 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="job.Job != null", span="519-519"];
m8_85 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                            '')", span="525-525"];
m8_86 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral('' '')", span="527-527"];
m8_92 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="569-570"];
m8_88 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="537-537"];
m8_91 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</em>\r\n'')", span="559-559"];
m8_93 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="job.NextExecution != null", span="575-575"];
m8_98 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="618-619"];
m8_94 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.RelativeTime(job.NextExecution.Value))", span="583-583"];
m8_97 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</em>\r\n'')", span="608-608"];
m8_99 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="job.LastExecution != null", span="624-624"];
m8_103 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''\''>\r\n                                                    <span class=\''label label-'' +\r\n''default label-hover\'' style=\'''')", span="642-643"];
m8_102 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Url.JobDetails(job.LastJobId))", span="637-637"];
m8_104 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write($''background-color: {JobHistoryRenderer.GetForegroundStateColor(job.LastJobState)};'')", span="648-648"];
m8_107 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''\r\n                                                    </span>\r\n                  '' +\r\n''                              </a>\r\n'')", span="663-664"];
m8_106 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.RelativeTime(job.LastExecution.Value))", span="658-658"];
m8_116 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="730-731"];
m8_112 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n                                                </em>\r\n'')", span="697-697"];
m8_115 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</em>\r\n'')", span="720-720"];
m8_117 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="job.CreatedAt != null", span="736-736"];
m8_120 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                                    </td>\r\n                                </tr>\r'' +\r\n''\n'')", span="769-770"];
m8_118 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.RelativeTime(job.CreatedAt.Value))", span="744-744"];
m8_119 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <em>N/A</em>\r\n'')", span="759-759"];
m8_123 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''                    '')", span="792-792"];
m8_124 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral('' '')", span="794-794"];
m8_2 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Layout = new LayoutPage(Strings.RecurringJobsPage_Title)", span="74-74"];
m8_8 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="var connection = Storage.GetConnection()", span="84-84"];
m8_14 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-12\''>\r\n        <h1 class=\''page-header\'''' +\r\n''>'')", span="102-103"];
m8_15 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Title)", span="108-108"];
m8_16 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</h1>\r\n\r\n'')", span="113-113"];
m8_20 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="134-134"];
m8_21 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="146-148"];
m8_22 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Url.To(''/recurring/trigger''))", span="153-153"];
m8_23 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="158-158"];
m8_29 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="190-190"];
m8_30 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Deleting)", span="195-195"];
m8_31 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                            data-confirm=\'''')", span="200-200"];
m8_35 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n                    </button>\r\n\r\n'')", span="221-221"];
m8_39 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.PerPageSelector(pager))", span="239-239"];
m8_43 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="273-273"];
m8_44 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Table_Cron)", span="278-278"];
m8_45 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="283-283"];
m8_46 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Table_TimeZone)", span="288-288"];
m8_47 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th>'')", span="293-293"];
m8_48 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Job)", span="298-298"];
m8_49 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="303-303"];
m8_50 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Table_NextExecution)", span="308-308"];
m8_51 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="313-313"];
m8_52 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Table_LastExecution)", span="318-318"];
m8_53 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="323-323"];
m8_64 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="394-394"];
m8_68 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''>'')", span="415-415"];
m8_69 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.Cron)", span="420-420"];
m8_71 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <code>'')", span="437-437"];
m8_72 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.Cron)", span="442-442"];
m8_78 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\'' data-container=\''body\''>'')", span="479-479"];
m8_79 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.TimeZoneId)", span="484-484"];
m8_81 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            '')", span="501-501"];
m8_87 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.JobName(job.Job))", span="532-532"];
m8_89 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <em>'')", span="549-549"];
m8_90 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.LoadException.InnerException.Message)", span="554-554"];
m8_95 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <em>'')", span="598-598"];
m8_96 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_NotAvailable)", span="603-603"];
m8_101 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                                <a href=\'''')", span="632-632"];
m8_105 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                                        '')", span="653-653"];
m8_108 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                                <em>\r\n                           '' +\r\n''                         '')", span="676-677"];
m8_109 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Canceled)", span="682-682"];
m8_110 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral('' '')", span="687-687"];
m8_111 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.RelativeTime(job.LastExecution.Value))", span="692-692"];
m8_113 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <em>'')", span="710-710"];
m8_114 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_NotAvailable)", span="715-715"];
m8_125 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.Paginator(pager))", span="799-799"];
m8_126 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="804-804"];
m8_127 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''            </div>\r\n'')", span="814-814"];
m8_128 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''    </div>\r\n</div>    '')", span="824-824"];
m8_7 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Pager pager = null", span="82-82"];
m8_9 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="var storageConnection = connection as JobStorageConnection", span="86-86"];
m8_10 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="storageConnection != null", span="87-87"];
m8_12 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="recurringJobs = storageConnection.GetRecurringJobs(pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1)", span="90-90"];
m8_13 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="recurringJobs = connection.GetRecurringJobs()", span="94-94"];
m8_100 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="!String.IsNullOrEmpty(job.LastJobId)", span="626-626"];
m8_63 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="string cronDescription = null", span="379-379"];
m8_129 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", span="57-57"];
m8_139 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m8_136 [cluster="Hangfire.Storage.JobStorageConnection.GetRecurringJobCount()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRecurringJobCount()", span="38-38"];
m8_150 [file="RecurringJobsPage.generated.cs", label="Hangfire.Dashboard.Pages.RecurringJobsPage", span=""];
n121 -> n1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n16  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n18  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n19  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n60  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n72  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n90  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n100  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n107  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n111  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n114  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n115  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n121 -> n119  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n5  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n6  [key=2, style=dotted];
n4 -> n0  [color=blue, key=0, style=bold];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=2, style=dotted];
n8 -> n11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n9 -> n7  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=2, style=dotted];
n13 -> n11  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n21  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n22  [key=2, style=dotted];
n21 -> n119  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n23  [key=2, style=dotted];
n18 -> n24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n23  [key=2, style=dotted];
n19 -> n28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n24 -> n25  [key=0, style=solid];
n20 -> n15  [color=blue, key=0, style=bold];
n28 -> n29  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=2, style=dotted];
n26 -> n24  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n29 -> n27  [key=2, style=dotted];
n30 -> n28  [color=blue, key=0, style=bold];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n21  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n37  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n23  [key=2, style=dotted];
n34 -> n38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n35 -> n36  [key=0, style=solid];
n35 -> n23  [key=2, style=dotted];
n35 -> n42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n38 -> n39  [key=0, style=solid];
n36 -> n31  [color=blue, key=0, style=bold];
n42 -> n43  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=2, style=dotted];
n40 -> n38  [color=blue, key=0, style=bold];
n43 -> n44  [key=0, style=solid];
n43 -> n41  [key=2, style=dotted];
n44 -> n42  [color=blue, key=0, style=bold];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n21  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n51  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n23  [key=2, style=dotted];
n48 -> n52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n49 -> n50  [key=0, style=solid];
n49 -> n23  [key=2, style=dotted];
n49 -> n56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n52 -> n53  [key=0, style=solid];
n50 -> n45  [color=blue, key=0, style=bold];
n56 -> n57  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n55  [key=2, style=dotted];
n54 -> n52  [color=blue, key=0, style=bold];
n57 -> n58  [key=0, style=solid];
n57 -> n55  [key=2, style=dotted];
n58 -> n56  [color=blue, key=0, style=bold];
n59 -> n60  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n21  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n51  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n23  [key=2, style=dotted];
n62 -> n65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n63 -> n64  [key=0, style=solid];
n63 -> n23  [key=2, style=dotted];
n63 -> n68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n65 -> n66  [key=0, style=solid];
n64 -> n59  [color=blue, key=0, style=bold];
n68 -> n69  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n41  [key=2, style=dotted];
n67 -> n65  [color=blue, key=0, style=bold];
n69 -> n70  [key=0, style=solid];
n69 -> n41  [key=2, style=dotted];
n70 -> n68  [color=blue, key=0, style=bold];
n71 -> n72  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n72 -> n21  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n75  [key=2, style=dotted];
n74 -> n71  [color=blue, key=0, style=bold];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n21  [key=2, style=dotted];
n77 -> n79  [color=darkseagreen4, key=1, label=collection, style=dashed];
n78 -> n79  [key=0, style=solid];
n78 -> n5  [key=2, style=dotted];
n78 -> n81  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n75  [key=2, style=dotted];
n80 -> n76  [color=blue, key=0, style=bold];
n82 -> n83  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n21  [key=2, style=dotted];
n83 -> n85  [color=darkseagreen4, key=1, label=collection, style=dashed];
n84 -> n85  [key=0, style=solid];
n84 -> n87  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n75  [key=2, style=dotted];
n86 -> n82  [color=blue, key=0, style=bold];
n88 -> n89  [key=0, style=solid];
n89 -> n90  [key=0, style=solid];
n89 -> n5  [key=2, style=dotted];
n89 -> n91  [color=darkseagreen4, key=1, label=element, style=dashed];
n89 -> n92  [color=darkseagreen4, key=1, label=element, style=dashed];
n89 -> n93  [color=darkseagreen4, key=1, label=element, style=dashed];
n90 -> n91  [key=0, style=solid];
n90 -> n21  [key=2, style=dotted];
n90 -> n92  [color=darkseagreen4, key=1, label=collection, style=dashed];
n90 -> n93  [color=darkseagreen4, key=1, label=collection, style=dashed];
n91 -> n92  [key=0, style=solid];
n91 -> n95  [key=2, style=dotted];
n91 -> n96  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n81  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [key=2, style=dotted];
n93 -> n97  [key=2, style=dotted];
n94 -> n88  [color=blue, key=0, style=bold];
n98 -> n99  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n5  [key=2, style=dotted];
n99 -> n101  [color=darkseagreen4, key=1, label=runner, style=dashed];
n99 -> n102  [color=darkseagreen4, key=1, label=runner, style=dashed];
n99 -> n103  [color=darkseagreen4, key=1, label=runner, style=dashed];
n100 -> n101  [key=0, style=solid];
n100 -> n21  [key=2, style=dotted];
n100 -> n102  [color=darkseagreen4, key=1, label=collection, style=dashed];
n100 -> n103  [color=darkseagreen4, key=1, label=collection, style=dashed];
n101 -> n102  [key=0, style=solid];
n101 -> n81  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n102 -> n105  [key=2, style=dotted];
n103 -> n104  [key=0, style=solid];
n103 -> n95  [key=2, style=dotted];
n103 -> n96  [key=2, style=dotted];
n104 -> n98  [color=blue, key=0, style=bold];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n21  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n96  [key=2, style=dotted];
n109 -> n106  [color=blue, key=0, style=bold];
n110 -> n111  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n21  [key=2, style=dotted];
n111 -> n113  [color=darkseagreen4, key=1, label=collection, style=dashed];
n112 -> n113  [key=0, style=solid];
n112 -> n114  [color=red, key=1, label=array, style=dashed];
n112 -> n115  [color=red, key=1, label=array, style=dashed];
n113 -> n114  [color=red, key=0, style=solid];
n113 -> n117  [key=2, style=dotted];
n114 -> n115  [color=red, key=0, style=solid];
n114 -> n118  [color=red, key=2, style=dotted];
n115 -> n116  [color=red, key=0, style=solid];
n115 -> n118  [color=red, key=2, style=dotted];
n116 -> n110  [color=blue, key=0, style=bold];
n119 -> n120  [key=0, style=solid];
n119 -> n14  [key=2, style=dotted];
n120 -> n21  [color=blue, key=0, style=bold];
m0_49 -> m0_50  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_55  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_56  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_57  [key=2, style=dotted];
m0_52 -> m0_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_57  [key=2, style=dotted];
m0_53 -> m0_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_49  [color=blue, key=0, style=bold];
m0_55 -> m0_115  [color=green, key=0, style=solid];
m0_115 -> m0_116  [color=green, key=0, style=solid];
m0_115 -> m0_117  [color=green, key=2, style=dotted];
m0_116 -> m0_55  [color=blue, key=0, style=bold];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_31  [key=2, style=dotted];
m0_41 -> m0_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> n75  [key=2, style=dotted];
m0_43 -> m0_40  [color=blue, key=0, style=bold];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_15  [key=2, style=dotted];
m0_86 -> m0_31  [key=2, style=dotted];
m0_86 -> m0_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_55  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_56  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_57  [key=2, style=dotted];
m0_89 -> m0_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_57  [key=2, style=dotted];
m0_90 -> m0_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_91 -> m0_85  [color=blue, key=0, style=bold];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_55  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_56  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_57  [key=2, style=dotted];
m0_106 -> m0_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_57  [key=2, style=dotted];
m0_107 -> m0_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_108 -> m0_103  [color=blue, key=0, style=bold];
m0_112 -> m0_113  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_22 -> m0_20  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=2, style=dotted];
m0_26 -> m0_24  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_29 -> m0_32  [key=2, style=dotted];
m0_30 -> m0_28  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_31  [key=2, style=dotted];
m0_34 -> m0_36  [key=2, style=dotted];
m0_34 -> m0_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_35 -> m0_33  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_37  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=2, style=dotted];
m0_47 -> m0_45  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_31  [key=2, style=dotted];
m0_59 -> m0_61  [key=2, style=dotted];
m0_59 -> m0_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_60 -> m0_58  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [key=2, style=dotted];
m0_64 -> m0_62  [color=blue, key=0, style=bold];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=2, style=dotted];
m0_68 -> m0_66  [color=blue, key=0, style=bold];
m0_76 -> m0_77  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_31  [key=2, style=dotted];
m0_77 -> m0_36  [key=2, style=dotted];
m0_77 -> m0_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_78 -> m0_76  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_79  [color=blue, key=0, style=bold];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_31  [key=2, style=dotted];
m0_83 -> m0_61  [key=2, style=dotted];
m0_84 -> m0_82  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_31  [key=2, style=dotted];
m0_93 -> m0_61  [key=2, style=dotted];
m0_94 -> m0_92  [color=blue, key=0, style=bold];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_98  [key=2, style=dotted];
m0_97 -> m0_95  [color=blue, key=0, style=bold];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=2, style=dotted];
m0_101 -> m0_99  [color=blue, key=0, style=bold];
m0_109 -> m0_110  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_31  [key=2, style=dotted];
m0_110 -> m0_32  [key=2, style=dotted];
m0_111 -> m0_109  [color=blue, key=0, style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_69  [key=2, style=dotted];
m0_114 -> m0_112  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_12  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_15  [key=2, style=dotted];
m0_4 -> m0_16  [key=2, style=dotted];
m0_4 -> m0_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_17  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_18  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_16  [key=2, style=dotted];
m0_7 -> m0_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_19  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_15  [key=2, style=dotted];
m0_9 -> m0_16  [key=2, style=dotted];
m0_9 -> m0_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_15  [key=2, style=dotted];
m0_10 -> m0_16  [key=2, style=dotted];
m0_10 -> m0_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_11 -> m0_0  [color=blue, key=0, style=bold];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_15  [key=2, style=dotted];
m0_71 -> m0_16  [key=2, style=dotted];
m0_71 -> m0_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_55  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_56  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_57  [key=2, style=dotted];
m0_74 -> m0_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_75 -> m0_70  [color=blue, key=0, style=bold];
m0_118 -> m0_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_105  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_107  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m0_118 -> m0_115  [color=green, key=1, label="Hangfire.Core.Tests.Server.DelayedJobSchedulerFacts", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_21  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_51  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_23  [key=2, style=dotted];
m2_48 -> m2_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_23  [key=2, style=dotted];
m2_49 -> m2_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_50 -> m2_45  [color=blue, key=0, style=bold];
m2_98 -> m2_99  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_5  [key=2, style=dotted];
m2_99 -> m2_101  [color=darkseagreen4, key=1, label=runner, style=dashed];
m2_99 -> m2_102  [color=darkseagreen4, key=1, label=runner, style=dashed];
m2_99 -> m2_103  [color=darkseagreen4, key=1, label=runner, style=dashed];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_21  [key=2, style=dotted];
m2_100 -> m2_102  [color=darkseagreen4, key=1, label=collection, style=dashed];
m2_100 -> m2_103  [color=darkseagreen4, key=1, label=collection, style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_81  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_105  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_95  [key=2, style=dotted];
m2_103 -> m2_96  [key=2, style=dotted];
m2_104 -> m2_98  [color=blue, key=0, style=bold];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_21  [key=2, style=dotted];
m2_83 -> m2_85  [color=darkseagreen4, key=1, label=collection, style=dashed];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_87  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_75  [key=2, style=dotted];
m2_86 -> m2_82  [color=blue, key=0, style=bold];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=2, style=dotted];
m2_8 -> m2_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_9 -> m2_7  [color=blue, key=0, style=bold];
m2_88 -> m2_89  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_5  [key=2, style=dotted];
m2_89 -> m2_91  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_89 -> m2_92  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_89 -> m2_93  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_21  [key=2, style=dotted];
m2_90 -> m2_92  [color=darkseagreen4, key=1, label=collection, style=dashed];
m2_90 -> m2_93  [color=darkseagreen4, key=1, label=collection, style=dashed];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_95  [key=2, style=dotted];
m2_91 -> m2_96  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_81  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_95  [key=2, style=dotted];
m2_93 -> m2_97  [key=2, style=dotted];
m2_94 -> m2_88  [color=blue, key=0, style=bold];
m2_21 -> m2_106  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_14  [key=2, style=dotted];
m2_107 -> m2_21  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> n6  [key=2, style=dotted];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_76 -> m2_77  [color=red, key=0, style=solid];
m2_77 -> m2_78  [color=red, key=0, style=solid];
m2_77 -> m2_21  [color=red, key=2, style=dotted];
m2_77 -> m2_79  [color=red, key=1, label=collection, style=dashed];
m2_78 -> m2_79  [color=red, key=0, style=solid];
m2_78 -> m2_5  [color=red, key=2, style=dotted];
m2_78 -> m2_81  [color=red, key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_75  [key=2, style=dotted];
m2_80 -> m2_76  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_21  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_22  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_23  [key=2, style=dotted];
m2_18 -> m2_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_23  [key=2, style=dotted];
m2_19 -> m2_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_20 -> m2_15  [color=blue, key=0, style=bold];
m2_68 -> m2_69  [color=red, key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_13 -> m2_11  [color=blue, key=0, style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_26 -> m2_24  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_27  [key=2, style=dotted];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m2_38 -> m2_39  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_40 -> m2_38  [color=blue, key=0, style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_41  [key=2, style=dotted];
m2_44 -> m2_42  [color=blue, key=0, style=bold];
m2_52 -> m2_53  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_55  [key=2, style=dotted];
m2_54 -> m2_52  [color=blue, key=0, style=bold];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_55  [key=2, style=dotted];
m2_58 -> m2_56  [color=blue, key=0, style=bold];
m2_65 -> m2_66  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_41  [key=2, style=dotted];
m2_67 -> m2_65  [color=blue, key=0, style=bold];
m2_69 -> m2_70  [color=red, key=0, style=solid];
m2_69 -> m2_41  [color=red, key=2, style=dotted];
m2_70 -> m2_68  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_21  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_37  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_23  [key=2, style=dotted];
m2_34 -> m2_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_23  [key=2, style=dotted];
m2_35 -> m2_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_36 -> m2_31  [color=blue, key=0, style=bold];
m2_71 -> m2_72  [color=red, key=0, style=solid];
m2_72 -> m2_73  [color=red, key=0, style=solid];
m2_72 -> m2_21  [color=red, key=2, style=dotted];
m2_73 -> m2_74  [color=red, key=0, style=solid];
m2_73 -> m2_75  [color=red, key=2, style=dotted];
m2_74 -> m2_71  [color=blue, key=0, style=bold];
m2_59 -> m2_60  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_21  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_51  [key=2, style=dotted];
m2_62 -> m2_63  [color=red, key=0, style=solid];
m2_62 -> m2_23  [key=2, style=dotted];
m2_62 -> m2_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_63 -> m2_64  [color=red, key=0, style=solid];
m2_63 -> m2_23  [color=red, key=2, style=dotted];
m2_63 -> m2_68  [color=red, key=1, label="lambda expression", style=dashed];
m2_64 -> m2_59  [color=blue, key=0, style=bold];
m2_108 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_16  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_18  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_19  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_60  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_63  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_72  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_77  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_90  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_100  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m2_108 -> m2_106  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_180 -> m4_181  [key=0, style=solid];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_37  [key=2, style=dotted];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> n118  [key=2, style=dotted];
m4_183 -> m4_180  [color=blue, key=0, style=bold];
m4_197 -> m4_198  [key=0, style=solid];
m4_198 -> m4_199  [key=0, style=solid];
m4_199 -> m4_197  [color=blue, key=0, style=bold];
m4_51 -> m4_52  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_37  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_57  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_38  [key=2, style=dotted];
m4_54 -> m4_39  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_58  [key=2, style=dotted];
m4_55 -> m4_41  [key=2, style=dotted];
m4_55 -> m4_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_56 -> m4_51  [color=blue, key=0, style=bold];
m4_131 -> m4_132  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_37  [key=2, style=dotted];
m4_132 -> m4_134  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_132 -> m4_135  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_57  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_83  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_27  [key=2, style=dotted];
m4_136 -> m4_131  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_137 -> m4_138  [key=0, style=solid];
m4_138 -> m4_139  [key=0, style=solid];
m4_139 -> m4_140  [key=0, style=solid];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_148  [key=2, style=dotted];
m4_140 -> m4_146  [color=darkseagreen4, key=1, label=component, style=dashed];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_149  [key=2, style=dotted];
m4_141 -> m4_144  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_112  [key=2, style=dotted];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_57  [key=2, style=dotted];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_40  [key=2, style=dotted];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_150  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_150  [key=2, style=dotted];
m4_147 -> m4_137  [color=blue, key=0, style=bold];
m4_100 -> m4_101  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_103  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_37  [key=2, style=dotted];
m4_102 -> m4_104  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_102 -> m4_105  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_102 -> m4_108  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_81  [key=2, style=dotted];
m4_103 -> m4_82  [key=2, style=dotted];
m4_103 -> m4_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_103 -> m4_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_103 -> m4_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_57  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_83  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_57  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_38  [key=2, style=dotted];
m4_106 -> m4_39  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_110  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_38  [key=2, style=dotted];
m4_109 -> m4_39  [key=2, style=dotted];
m4_111 -> m4_100  [color=blue, key=0, style=bold];
m4_37 -> m4_185  [key=0, style=solid];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_81  [key=2, style=dotted];
m4_185 -> m4_82  [key=2, style=dotted];
m4_185 -> m4_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_185 -> m4_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_23  [key=2, style=dotted];
m4_187 -> m4_37  [color=blue, key=0, style=bold];
m4_166 -> m4_167  [key=0, style=solid];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_37  [key=2, style=dotted];
m4_167 -> m4_169  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_167 -> m4_171  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_81  [key=2, style=dotted];
m4_168 -> m4_10  [key=2, style=dotted];
m4_168 -> m4_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_57  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_40  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_150  [key=2, style=dotted];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_58  [key=2, style=dotted];
m4_172 -> m4_41  [key=2, style=dotted];
m4_172 -> m4_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_173 -> m4_166  [color=blue, key=0, style=bold];
m4_120 -> m4_121  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_37  [key=2, style=dotted];
m4_121 -> m4_123  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_121 -> m4_124  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_57  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_83  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_27  [key=2, style=dotted];
m4_125 -> m4_120  [color=blue, key=0, style=bold];
m4_62 -> m4_63  [key=0, style=solid];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_37  [key=2, style=dotted];
m4_63 -> m4_65  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_63 -> m4_68  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_40  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_10  [key=2, style=dotted];
m4_65 -> m4_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_66 -> m4_62  [color=blue, key=0, style=bold];
m4_92 -> m4_93  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_37  [key=2, style=dotted];
m4_93 -> m4_95  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_93 -> m4_98  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_40  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_10  [key=2, style=dotted];
m4_95 -> m4_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_96 -> m4_92  [color=blue, key=0, style=bold];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_73  [color=darkorchid, key=3, label="Parameter variable T2 arg2", style=bold];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_37  [key=2, style=dotted];
m4_127 -> m4_129  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_57  [key=2, style=dotted];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_27  [key=2, style=dotted];
m4_130 -> m4_126  [color=blue, key=0, style=bold];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_10  [key=2, style=dotted];
m4_17 -> m4_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_11  [key=2, style=dotted];
m4_19 -> m4_16  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_37  [key=2, style=dotted];
m4_32 -> m4_34  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_38  [key=2, style=dotted];
m4_33 -> m4_39  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_40  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_41  [key=2, style=dotted];
m4_35 -> m4_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_36 -> m4_31  [color=blue, key=0, style=bold];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_37  [key=2, style=dotted];
m4_47 -> m4_49  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_40  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_27  [key=2, style=dotted];
m4_50 -> m4_46  [color=blue, key=0, style=bold];
m4_191 -> m4_192  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_12  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_23  [key=2, style=dotted];
m4_30 -> m4_28  [color=blue, key=0, style=bold];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_10  [key=2, style=dotted];
m4_43 -> m4_45  [key=2, style=dotted];
m4_44 -> m4_42  [color=blue, key=0, style=bold];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_10  [key=2, style=dotted];
m4_60 -> m4_45  [key=2, style=dotted];
m4_61 -> m4_59  [color=blue, key=0, style=bold];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_57  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_69 -> m4_67  [color=blue, key=0, style=bold];
m4_84 -> m4_85  [key=0, style=solid];
m4_87 -> m4_88  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_10  [key=2, style=dotted];
m4_85 -> m4_45  [key=2, style=dotted];
m4_86 -> m4_84  [color=blue, key=0, style=bold];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_91  [key=2, style=dotted];
m4_90 -> m4_87  [color=blue, key=0, style=bold];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_83  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_99 -> m4_97  [color=blue, key=0, style=bold];
m4_113 -> m4_114  [key=0, style=solid];
m4_116 -> m4_117  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_10  [key=2, style=dotted];
m4_114 -> m4_45  [key=2, style=dotted];
m4_115 -> m4_113  [color=blue, key=0, style=bold];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_91  [key=2, style=dotted];
m4_119 -> m4_116  [color=blue, key=0, style=bold];
m4_160 -> m4_161  [key=0, style=solid];
m4_163 -> m4_164  [key=0, style=solid];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_10  [key=2, style=dotted];
m4_161 -> m4_45  [key=2, style=dotted];
m4_162 -> m4_160  [color=blue, key=0, style=bold];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_10  [key=2, style=dotted];
m4_164 -> m4_45  [key=2, style=dotted];
m4_165 -> m4_163  [color=blue, key=0, style=bold];
m4_174 -> m4_175  [key=0, style=solid];
m4_177 -> m4_178  [key=0, style=solid];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_10  [key=2, style=dotted];
m4_175 -> m4_45  [key=2, style=dotted];
m4_176 -> m4_174  [color=blue, key=0, style=bold];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_10  [key=2, style=dotted];
m4_178 -> m4_45  [key=2, style=dotted];
m4_179 -> m4_177  [color=blue, key=0, style=bold];
m4_188 -> m4_189  [key=0, style=solid];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_10  [key=2, style=dotted];
m4_189 -> m4_45  [key=2, style=dotted];
m4_190 -> m4_188  [color=blue, key=0, style=bold];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_91  [key=2, style=dotted];
m4_193 -> m4_191  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_10  [key=2, style=dotted];
m4_7 -> m4_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_11  [key=2, style=dotted];
m4_9 -> m4_6  [color=blue, key=0, style=bold];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=2, style=dotted];
m4_25 -> m4_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_26 -> m4_24  [color=blue, key=0, style=bold];
m4_194 -> m4_195  [key=0, style=solid];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_91  [key=2, style=dotted];
m4_196 -> m4_194  [color=blue, key=0, style=bold];
m4_70 -> m4_71  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_73  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_37  [key=2, style=dotted];
m4_72 -> m4_74  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_72 -> m4_75  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_81  [key=2, style=dotted];
m4_73 -> m4_82  [key=2, style=dotted];
m4_73 -> m4_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_73 -> m4_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_73 -> m4_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_57  [key=2, style=dotted];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_83  [key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_38  [key=2, style=dotted];
m4_76 -> m4_39  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_79  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_38  [key=2, style=dotted];
m4_78 -> m4_39  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_11  [key=2, style=dotted];
m4_80 -> m4_70  [color=blue, key=0, style=bold];
m4_151 -> m4_152  [key=0, style=solid];
m4_152 -> m4_153  [key=0, style=solid];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_37  [key=2, style=dotted];
m4_153 -> m4_155  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_153 -> m4_157  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_81  [key=2, style=dotted];
m4_154 -> m4_10  [key=2, style=dotted];
m4_154 -> m4_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_57  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_40  [key=2, style=dotted];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_150  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_41  [key=2, style=dotted];
m4_158 -> m4_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_159 -> m4_151  [color=blue, key=0, style=bold];
m4_200 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_17  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_55  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_72  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_73  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_93  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_127  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_138  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_139  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_152  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_154  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_167  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_181  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_185  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_200 -> m4_186  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m4_201 -> m4_68  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_202 -> m4_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_203 -> m4_98  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_204 -> m4_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m4_205 -> m4_198  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent", style=dashed];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=2, style=dotted];
m5_3 -> m5_6  [key=2, style=dotted];
m5_4 -> m5_2  [color=blue, key=0, style=bold];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_11  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_12  [key=2, style=dotted];
m5_10 -> m5_7  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_17  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_18  [key=2, style=dotted];
m5_16 -> m5_13  [color=blue, key=0, style=bold];
m6_40 -> m6_41  [key=0, style=solid];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_43  [key=2, style=dotted];
m6_42 -> m6_40  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [color=blue, key=0, style=bold];
m6_37 -> m6_44  [key=0, style=solid];
m6_37 -> m6_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_56  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m6_37 -> m6_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_37 -> m6_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_37 -> m6_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_67  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m6_37 -> m6_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_73  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_76  [key=2, style=dotted];
m6_48 -> m6_77  [key=2, style=dotted];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_80  [key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_56  [key=0, style=solid];
m6_54 -> m6_76  [key=2, style=dotted];
m6_54 -> m6_84  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_85  [key=2, style=dotted];
m6_56 -> m6_58  [color=darkseagreen4, key=1, label=context, style=dashed];
m6_57 -> m6_58  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_87  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_66  [key=0, style=solid];
m6_64 -> m6_76  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_72  [key=0, style=solid];
m6_67 -> m6_90  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_93  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_74  [key=2, style=dotted];
m6_45 -> m6_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_75  [key=2, style=dotted];
m6_47 -> m6_49  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_78  [key=2, style=dotted];
m6_49 -> m6_51  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m6_49 -> m6_52  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m6_49 -> m6_61  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m6_49 -> m6_62  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m6_49 -> m6_65  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m6_49 -> m6_66  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_79  [key=2, style=dotted];
m6_50 -> m6_62  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m6_50 -> m6_63  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m6_50 -> m6_65  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m6_50 -> m6_66  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m6_50 -> m6_67  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_64  [key=0, style=solid];
m6_52 -> m6_81  [key=2, style=dotted];
m6_52 -> m6_82  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_88  [key=2, style=dotted];
m6_62 -> m6_89  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_88  [key=2, style=dotted];
m6_65 -> m6_89  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_88  [key=2, style=dotted];
m6_66 -> m6_89  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_89  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_83  [key=2, style=dotted];
m6_53 -> m6_55  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_53 -> m6_56  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_86  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_62  [key=0, style=solid];
m6_60 -> m6_84  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_71  [key=0, style=solid];
m6_69 -> m6_91  [key=2, style=dotted];
m6_69 -> m6_92  [key=2, style=dotted];
m6_70 -> m6_72  [key=0, style=solid];
m6_72 -> m6_37  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m6_4 -> m6_7  [color=darkseagreen4, key=1, label="System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m6_4 -> m6_8  [color=darkseagreen4, key=1, label="System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m6_4 -> m6_9  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m6_4 -> m6_10  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m6_4 -> m6_11  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m6_4 -> m6_12  [color=darkseagreen4, key=1, label="System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m6_4 -> m6_13  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=0, style=solid];
m6_6 -> m6_14  [key=0, style=solid];
m6_6 -> m6_15  [key=2, style=dotted];
m6_6 -> m6_16  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=0, style=solid];
m6_8 -> m6_14  [key=0, style=solid];
m6_8 -> m6_15  [key=2, style=dotted];
m6_8 -> m6_16  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=0, style=solid];
m6_10 -> m6_14  [key=0, style=solid];
m6_10 -> m6_15  [key=2, style=dotted];
m6_10 -> m6_16  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_4  [color=blue, key=0, style=bold];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m6_17 -> m6_20  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m6_17 -> m6_21  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m6_17 -> m6_27  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m6_17 -> m6_30  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_20  [key=0, style=solid];
m6_19 -> m6_31  [key=0, style=solid];
m6_19 -> m6_15  [key=2, style=dotted];
m6_19 -> m6_16  [key=2, style=dotted];
m6_20 -> m6_21  [color=green, key=0, style=solid];
m6_20 -> m6_32  [key=2, style=dotted];
m6_21 -> m6_22  [color=green, key=0, style=solid];
m6_21 -> m6_33  [color=green, key=2, style=dotted];
m6_21 -> m6_23  [color=green, key=1, label=connection, style=dashed];
m6_21 -> m6_25  [color=green, key=1, label=connection, style=dashed];
m6_21 -> m6_27  [color=green, key=1, label=connection, style=dashed];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_24  [key=0, style=solid];
m6_27 -> m6_37  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_39  [key=2, style=dotted];
m6_22 -> m6_23  [color=red, key=0, style=solid];
m6_22 -> m6_34  [color=red, key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_35  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_36  [key=2, style=dotted];
m6_25 -> m6_27  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_30  [key=0, style=solid];
m6_24 -> m6_27  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m6_24 -> m6_29  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m6_29 -> m6_24  [key=0, style=solid];
m6_29 -> m6_38  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_24  [key=0, style=solid];
m6_28 -> m6_29  [key=0, style=solid];
m6_31 -> m6_17  [color=blue, key=0, style=bold];
m6_80 -> m6_94  [color=green, key=0, style=solid];
m6_80 -> m6_95  [color=green, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_80 -> m6_96  [color=green, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_80 -> m6_97  [color=green, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_80 -> m6_98  [color=green, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_80 -> m6_99  [color=green, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_80 -> m6_100  [color=green, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_80 -> m6_102  [color=green, key=1, label="Hangfire.Server.IScheduleInstant", style=dashed];
m6_80 -> m6_49  [color=darkorchid, key=3, label="Parameter variable Hangfire.Server.IScheduleInstant instant", style=bold];
m6_94 -> m6_95  [color=green, key=0, style=solid];
m6_95 -> m6_96  [color=green, key=0, style=solid];
m6_95 -> m6_97  [color=green, key=0, style=solid];
m6_95 -> m6_76  [color=green, key=2, style=dotted];
m6_96 -> m6_103  [color=green, key=0, style=solid];
m6_96 -> m6_105  [color=green, key=2, style=dotted];
m6_97 -> m6_98  [color=green, key=0, style=solid];
m6_97 -> m6_99  [color=green, key=0, style=solid];
m6_97 -> m6_76  [color=green, key=2, style=dotted];
m6_98 -> m6_103  [color=green, key=0, style=solid];
m6_98 -> m6_105  [color=green, key=2, style=dotted];
m6_99 -> m6_100  [color=green, key=0, style=solid];
m6_99 -> m6_102  [color=green, key=0, style=solid];
m6_99 -> m6_76  [color=green, key=2, style=dotted];
m6_100 -> m6_101  [color=green, key=0, style=solid];
m6_100 -> m6_105  [color=green, key=2, style=dotted];
m6_102 -> m6_103  [color=green, key=0, style=solid];
m6_102 -> m6_106  [color=green, key=2, style=dotted];
m6_101 -> m6_103  [color=green, key=0, style=solid];
m6_101 -> m6_106  [color=green, key=2, style=dotted];
m6_101 -> m6_101  [color=green, key=1, label=lastInstant, style=dashed];
m6_103 -> m6_104  [key=0, style=solid];
m6_104 -> m6_80  [color=blue, key=0, style=bold];
m6_107 -> m6_11  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_107 -> m6_12  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_107 -> m6_13  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_107 -> m6_20  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_107 -> m6_27  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_107 -> m6_30  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_107 -> m6_41  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_107 -> m6_49  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_107 -> m6_58  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m7_49 -> m7_54  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireDashboard", style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_257 -> m7_258  [key=0, style=solid];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_166  [key=2, style=dotted];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_206  [key=2, style=dotted];
m7_261 -> m7_262  [key=0, style=solid];
m7_261 -> m7_206  [key=2, style=dotted];
m7_262 -> m7_93  [key=2, style=dotted];
m7_262 -> m7_263  [key=0, style=solid];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_94  [key=2, style=dotted];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_95  [key=2, style=dotted];
m7_264 -> m7_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_264  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m7_258 -> m7_229  [key=2, style=dotted];
m7_258 -> m7_267  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m7_258 -> m7_270  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m7_265 -> m7_257  [color=blue, key=0, style=bold];
m7_72 -> m7_70  [color=blue, key=0, style=bold];
m7_111 -> m7_112  [key=0, style=solid];
m7_112 -> m7_93  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_94  [key=2, style=dotted];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_95  [key=2, style=dotted];
m7_115 -> m7_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_95  [key=2, style=dotted];
m7_116 -> m7_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_95  [key=2, style=dotted];
m7_117 -> m7_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_120  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m7_114 -> m7_116  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m7_114 -> m7_128  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m7_114 -> m7_117  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m7_114 -> m7_135  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m7_118 -> m7_111  [color=blue, key=0, style=bold];
m7_41 -> m7_39  [color=blue, key=0, style=bold];
m7_213 -> m7_214  [key=0, style=solid];
m7_214 -> m7_215  [key=0, style=solid];
m7_215 -> m7_93  [key=2, style=dotted];
m7_215 -> m7_216  [key=0, style=solid];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_94  [key=2, style=dotted];
m7_217 -> m7_218  [key=0, style=solid];
m7_217 -> m7_95  [key=2, style=dotted];
m7_217 -> m7_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_218 -> m7_213  [color=blue, key=0, style=bold];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_75  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m7_89 -> m7_93  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_83  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_94  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_95  [key=2, style=dotted];
m7_91 -> m7_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_92 -> m7_88  [color=blue, key=0, style=bold];
m7_54 -> m7_58  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireDashboard", style=bold];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_56  [key=2, style=dotted];
m7_35 -> m7_38  [key=0, style=solid];
m7_35 -> m7_44  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_59 -> m7_64  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m7_59 -> m7_66  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m7_59 -> m7_68  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_59 -> m7_69  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_59 -> m7_75  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m7_59 -> m7_70  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_59 -> m7_57  [color=blue, key=0, style=bold];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_62  [key=0, style=solid];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_64  [key=0, style=solid];
m7_62 -> m7_34  [key=2, style=dotted];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_66  [key=0, style=solid];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_68  [key=0, style=solid];
m7_66 -> m7_34  [key=2, style=dotted];
m7_66 -> m7_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_72  [key=2, style=dotted];
m7_68 -> m7_65  [color=blue, key=0, style=bold];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_73  [key=2, style=dotted];
m7_69 -> m7_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_70 -> m7_71  [key=0, style=solid];
m7_61 -> m7_71  [key=0, style=solid];
m7_61 -> m7_39  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_63 -> m7_71  [key=0, style=solid];
m7_63 -> m7_39  [key=2, style=dotted];
m7_63 -> m7_61  [color=blue, key=0, style=bold];
m7_65 -> m7_71  [key=0, style=solid];
m7_65 -> m7_39  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_67 -> m7_71  [key=0, style=solid];
m7_67 -> m7_39  [key=2, style=dotted];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> n75  [key=2, style=dotted];
m7_71 -> m7_59  [color=blue, key=0, style=bold];
m7_71 -> m7_73  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_23  [key=2, style=dotted];
m7_9 -> m7_24  [key=2, style=dotted];
m7_9 -> m7_25  [key=2, style=dotted];
m7_9 -> m7_26  [key=2, style=dotted];
m7_9 -> m7_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [key=2, style=dotted];
m7_10 -> m7_27  [key=2, style=dotted];
m7_11 -> m7_9  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_21  [key=2, style=dotted];
m7_11 -> m7_22  [key=2, style=dotted];
m7_11 -> m7_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_78 -> m7_79  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m7_19 -> m7_24  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m7_19 -> m7_26  [color=darkseagreen4, key=1, label="params Hangfire.Server.IBackgroundProcess[]", style=dashed];
m7_19 -> m7_28  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m7_19 -> m7_30  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_19 -> m7_37  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_24  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_26  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_40  [key=2, style=dotted];
m7_28 -> m7_36  [color=darkseagreen4, key=1, label=server, style=dashed];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_42  [key=2, style=dotted];
m7_30 -> m7_33  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_37 -> m7_38  [key=0, style=solid];
m7_21 -> m7_38  [key=0, style=solid];
m7_21 -> m7_39  [key=2, style=dotted];
m7_23 -> m7_38  [key=0, style=solid];
m7_23 -> m7_39  [key=2, style=dotted];
m7_25 -> m7_38  [key=0, style=solid];
m7_25 -> m7_39  [key=2, style=dotted];
m7_27 -> m7_38  [key=0, style=solid];
m7_27 -> m7_39  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_41  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_45  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_43  [key=2, style=dotted];
m7_31 -> m7_34  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_31 -> m7_36  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_43  [key=2, style=dotted];
m7_33 -> m7_36  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_33 -> m7_31  [color=blue, key=0, style=bold];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=0, style=solid];
m7_32 -> m7_35  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_36  [key=0, style=solid];
m7_38 -> m7_19  [color=blue, key=0, style=bold];
m7_38 -> m7_36  [color=blue, key=0, style=bold];
m7_39 -> m7_40  [key=0, style=solid];
m7_18 -> m7_16  [color=blue, key=0, style=bold];
m7_159 -> m7_160  [key=0, style=solid];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_166  [key=2, style=dotted];
m7_162 -> m7_93  [key=2, style=dotted];
m7_162 -> m7_163  [key=0, style=solid];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_94  [key=2, style=dotted];
m7_164 -> m7_165  [key=0, style=solid];
m7_164 -> m7_95  [key=2, style=dotted];
m7_164 -> m7_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> m7_164  [color=darkseagreen4, key=1, label=time, style=dashed];
m7_160 -> m7_168  [color=darkseagreen4, key=1, label=time, style=dashed];
m7_165 -> m7_159  [color=blue, key=0, style=bold];
m7_170 -> m7_171  [key=0, style=solid];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_21  [key=2, style=dotted];
m7_171 -> m7_28  [key=2, style=dotted];
m7_171 -> m7_22  [key=2, style=dotted];
m7_171 -> m7_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_172 -> m7_93  [key=2, style=dotted];
m7_172 -> m7_173  [key=0, style=solid];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_94  [key=2, style=dotted];
m7_174 -> m7_170  [color=blue, key=0, style=bold];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_49  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireDashboard", style=bold];
m7_46 -> m7_48  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_49  [key=2, style=dotted];
m7_47 -> m7_45  [color=blue, key=0, style=bold];
m7_48 -> m7_46  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_8  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireServer", style=bold];
m7_5 -> m7_21  [key=2, style=dotted];
m7_5 -> m7_22  [key=2, style=dotted];
m7_5 -> m7_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_3  [key=2, style=dotted];
m7_6 -> m7_8  [key=2, style=dotted];
m7_6 -> m7_21  [key=2, style=dotted];
m7_6 -> m7_22  [key=2, style=dotted];
m7_6 -> m7_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_7 -> m7_5  [color=blue, key=0, style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [color=darkseagreen4, key=1, label=timeZone1, style=dashed];
m7_245 -> m7_246  [key=0, style=solid];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_206  [key=2, style=dotted];
m7_247 -> m7_93  [key=2, style=dotted];
m7_247 -> m7_248  [key=0, style=solid];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_94  [key=2, style=dotted];
m7_249 -> m7_250  [key=0, style=solid];
m7_249 -> m7_95  [key=2, style=dotted];
m7_249 -> m7_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_250 -> m7_245  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_4  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireServer", style=bold];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_18  [key=2, style=dotted];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_19  [key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_20  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_21  [key=2, style=dotted];
m7_4 -> m7_22  [key=2, style=dotted];
m7_4 -> m7_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_4 -> m7_12  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireServer", style=bold];
m7_8 -> m7_9  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_21  [key=2, style=dotted];
m7_12 -> m7_28  [key=2, style=dotted];
m7_12 -> m7_22  [key=2, style=dotted];
m7_12 -> m7_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_12 -> m7_8  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireServer", style=bold];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_21  [key=2, style=dotted];
m7_13 -> m7_22  [key=2, style=dotted];
m7_13 -> m7_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_13 -> m7_8  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireServer", style=bold];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_29  [key=2, style=dotted];
m7_14 -> m7_8  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_30  [key=2, style=dotted];
m7_15 -> m7_13  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_21  [key=2, style=dotted];
m7_16 -> m7_22  [key=2, style=dotted];
m7_16 -> m7_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_17 -> m7_0  [color=blue, key=0, style=bold];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_8  [key=2, style=dotted];
m7_233 -> m7_234  [key=0, style=solid];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_166  [key=2, style=dotted];
m7_235 -> m7_93  [key=2, style=dotted];
m7_235 -> m7_236  [key=0, style=solid];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_94  [key=2, style=dotted];
m7_237 -> m7_238  [key=0, style=solid];
m7_237 -> m7_95  [key=2, style=dotted];
m7_237 -> m7_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_238 -> m7_233  [color=blue, key=0, style=bold];
m7_184 -> m7_185  [key=0, style=solid];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_195  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m7_188 -> m7_189  [key=0, style=solid];
m7_189 -> m7_93  [key=2, style=dotted];
m7_189 -> m7_190  [key=0, style=solid];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_94  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_192  [key=2, style=dotted];
m7_185 -> m7_195  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m7_185 -> m7_187  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_193  [key=2, style=dotted];
m7_191 -> m7_184  [color=blue, key=0, style=bold];
m7_269 -> m7_270  [key=0, style=solid];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_77  [key=2, style=dotted];
m7_75 -> m7_78  [key=2, style=dotted];
m7_75 -> m7_34  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_76 -> m7_74  [color=blue, key=0, style=bold];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> n75  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_85  [key=2, style=dotted];
m7_83 -> m7_86  [key=2, style=dotted];
m7_83 -> n75  [key=2, style=dotted];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_34  [key=2, style=dotted];
m7_82 -> m7_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_84 -> m7_82  [color=blue, key=0, style=bold];
m7_84 -> m7_81  [color=blue, key=0, style=bold];
m7_43 -> m7_44  [key=0, style=solid];
m7_79 -> m7_73  [key=2, style=dotted];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_83  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_86 -> m7_73  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_34  [key=2, style=dotted];
m7_120 -> m7_122  [key=2, style=dotted];
m7_120 -> m7_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_126  [key=2, style=dotted];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_34  [key=2, style=dotted];
m7_128 -> m7_122  [key=2, style=dotted];
m7_128 -> m7_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_126  [key=2, style=dotted];
m7_131 -> m7_133  [key=2, style=dotted];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_34  [key=2, style=dotted];
m7_135 -> m7_122  [key=2, style=dotted];
m7_135 -> m7_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_126  [key=2, style=dotted];
m7_138 -> m7_133  [key=2, style=dotted];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_34  [key=2, style=dotted];
m7_154 -> m7_122  [key=2, style=dotted];
m7_154 -> m7_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_126  [key=2, style=dotted];
m7_157 -> m7_133  [key=2, style=dotted];
m7_197 -> m7_198  [key=0, style=solid];
m7_210 -> m7_211  [key=0, style=solid];
m7_42 -> m7_43  [key=0, style=solid];
m7_44 -> m7_42  [color=blue, key=0, style=bold];
m7_45 -> m7_46  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_55  [color=blue, key=0, style=bold];
m7_80 -> m7_78  [color=blue, key=0, style=bold];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_83  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>", style=dashed];
m7_85 -> m7_86  [key=0, style=solid];
m7_87 -> m7_85  [color=blue, key=0, style=bold];
m7_87 -> m7_75  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m7_96 -> m7_97  [key=0, style=solid];
m7_105 -> m7_106  [key=0, style=solid];
m7_119 -> m7_120  [key=0, style=solid];
m7_121 -> m7_119  [color=blue, key=0, style=bold];
m7_123 -> m7_124  [key=0, style=solid];
m7_125 -> m7_123  [color=blue, key=0, style=bold];
m7_127 -> m7_128  [key=0, style=solid];
m7_129 -> m7_127  [color=blue, key=0, style=bold];
m7_130 -> m7_131  [key=0, style=solid];
m7_132 -> m7_130  [color=blue, key=0, style=bold];
m7_134 -> m7_135  [key=0, style=solid];
m7_136 -> m7_134  [color=blue, key=0, style=bold];
m7_137 -> m7_138  [key=0, style=solid];
m7_139 -> m7_137  [color=blue, key=0, style=bold];
m7_147 -> m7_148  [key=0, style=solid];
m7_150 -> m7_151  [key=0, style=solid];
m7_153 -> m7_154  [key=0, style=solid];
m7_155 -> m7_153  [color=blue, key=0, style=bold];
m7_156 -> m7_157  [key=0, style=solid];
m7_158 -> m7_156  [color=blue, key=0, style=bold];
m7_167 -> m7_168  [key=0, style=solid];
m7_175 -> m7_176  [key=0, style=solid];
m7_195 -> m7_197  [key=0, style=solid];
m7_195 -> m7_196  [key=0, style=solid];
m7_198 -> m7_194  [color=blue, key=0, style=bold];
m7_208 -> m7_210  [key=0, style=solid];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_212  [key=2, style=dotted];
m7_211 -> m7_207  [color=blue, key=0, style=bold];
m7_219 -> m7_220  [key=0, style=solid];
m7_230 -> m7_231  [key=0, style=solid];
m7_239 -> m7_240  [key=0, style=solid];
m7_251 -> m7_252  [key=0, style=solid];
m7_266 -> m7_267  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_51 -> m7_49  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_53  [key=2, style=dotted];
m7_51 -> m7_54  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_52  [key=2, style=dotted];
m7_55 -> m7_53  [color=blue, key=0, style=bold];
m7_55 -> m7_56  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_60  [key=2, style=dotted];
m7_97 -> m7_34  [key=2, style=dotted];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_64  [key=2, style=dotted];
m7_106 -> m7_34  [key=2, style=dotted];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_64  [key=2, style=dotted];
m7_106 -> m7_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_148 -> m7_34  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_35  [key=2, style=dotted];
m7_151 -> m7_34  [key=2, style=dotted];
m7_151 -> m7_152  [key=0, style=solid];
m7_151 -> m7_64  [key=2, style=dotted];
m7_176 -> m7_34  [key=2, style=dotted];
m7_176 -> m7_177  [key=0, style=solid];
m7_176 -> m7_56  [key=2, style=dotted];
m7_220 -> m7_34  [key=2, style=dotted];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_64  [key=2, style=dotted];
m7_240 -> m7_34  [key=2, style=dotted];
m7_240 -> m7_122  [key=2, style=dotted];
m7_240 -> m7_241  [key=0, style=solid];
m7_240 -> m7_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_252 -> m7_34  [key=2, style=dotted];
m7_252 -> m7_122  [key=2, style=dotted];
m7_252 -> m7_253  [key=0, style=solid];
m7_252 -> m7_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_267 -> m7_34  [key=2, style=dotted];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_35  [key=2, style=dotted];
m7_267 -> m7_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_98 -> m7_96  [color=blue, key=0, style=bold];
m7_107 -> m7_105  [color=blue, key=0, style=bold];
m7_243 -> m7_126  [key=2, style=dotted];
m7_243 -> m7_244  [key=0, style=solid];
m7_255 -> m7_126  [key=2, style=dotted];
m7_255 -> m7_256  [key=0, style=solid];
m7_149 -> m7_147  [color=blue, key=0, style=bold];
m7_152 -> m7_150  [color=blue, key=0, style=bold];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_35  [key=2, style=dotted];
m7_169 -> m7_167  [color=blue, key=0, style=bold];
m7_177 -> m7_175  [color=blue, key=0, style=bold];
m7_194 -> m7_195  [key=0, style=solid];
m7_196 -> m7_198  [key=0, style=solid];
m7_196 -> m7_199  [key=2, style=dotted];
m7_207 -> m7_208  [key=0, style=solid];
m7_209 -> m7_211  [key=0, style=solid];
m7_209 -> m7_199  [key=2, style=dotted];
m7_221 -> m7_219  [color=blue, key=0, style=bold];
m7_231 -> m7_232  [key=0, style=solid];
m7_231 -> m7_35  [key=2, style=dotted];
m7_232 -> m7_230  [color=blue, key=0, style=bold];
m7_241 -> m7_239  [color=blue, key=0, style=bold];
m7_253 -> m7_251  [color=blue, key=0, style=bold];
m7_270 -> m7_271  [key=0, style=solid];
m7_268 -> m7_266  [color=blue, key=0, style=bold];
m7_108 -> m7_109  [key=0, style=solid];
m7_242 -> m7_243  [key=0, style=solid];
m7_254 -> m7_255  [key=0, style=solid];
m7_244 -> m7_242  [color=blue, key=0, style=bold];
m7_256 -> m7_254  [color=blue, key=0, style=bold];
m7_271 -> m7_269  [color=blue, key=0, style=bold];
m7_109 -> m7_110  [key=0, style=solid];
m7_110 -> m7_108  [color=blue, key=0, style=bold];
m7_52 -> m7_50  [color=blue, key=0, style=bold];
m7_178 -> m7_179  [key=0, style=solid];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_183  [key=2, style=dotted];
m7_179 -> m7_26  [key=2, style=dotted];
m7_180 -> m7_93  [key=2, style=dotted];
m7_180 -> m7_181  [key=0, style=solid];
m7_181 -> m7_182  [key=0, style=solid];
m7_181 -> m7_94  [key=2, style=dotted];
m7_182 -> m7_178  [color=blue, key=0, style=bold];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_79  [color=blue, key=0, style=bold];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_58  [key=2, style=dotted];
m7_77 -> m7_74  [color=blue, key=0, style=bold];
m7_140 -> m7_141  [key=0, style=solid];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_21  [key=2, style=dotted];
m7_141 -> m7_22  [key=2, style=dotted];
m7_141 -> m7_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_142 -> m7_93  [key=2, style=dotted];
m7_142 -> m7_143  [key=0, style=solid];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_94  [key=2, style=dotted];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_95  [key=2, style=dotted];
m7_144 -> m7_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_145 -> m7_146  [key=0, style=solid];
m7_145 -> m7_95  [key=2, style=dotted];
m7_145 -> m7_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_146 -> m7_140  [color=blue, key=0, style=bold];
m7_200 -> m7_201  [key=0, style=solid];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_208  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_206  [key=2, style=dotted];
m7_203 -> m7_93  [key=2, style=dotted];
m7_203 -> m7_204  [key=0, style=solid];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_94  [key=2, style=dotted];
m7_205 -> m7_200  [color=blue, key=0, style=bold];
m7_99 -> m7_100  [key=0, style=solid];
m7_100 -> m7_101  [key=0, style=solid];
m7_101 -> m7_93  [key=2, style=dotted];
m7_101 -> m7_102  [key=0, style=solid];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_94  [key=2, style=dotted];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_95  [key=2, style=dotted];
m7_103 -> m7_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_104 -> m7_99  [color=blue, key=0, style=bold];
m7_93 -> m7_272  [color=green, key=0, style=solid];
m7_272 -> m7_273  [color=green, key=0, style=solid];
m7_272 -> m7_73  [color=green, key=2, style=dotted];
m7_273 -> m7_93  [color=blue, key=0, style=bold];
m7_222 -> m7_223  [key=0, style=solid];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_166  [key=2, style=dotted];
m7_225 -> m7_93  [key=2, style=dotted];
m7_225 -> m7_226  [key=0, style=solid];
m7_226 -> m7_227  [key=0, style=solid];
m7_226 -> m7_94  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_95  [key=2, style=dotted];
m7_227 -> m7_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_227  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m7_223 -> m7_229  [key=2, style=dotted];
m7_223 -> m7_231  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m7_228 -> m7_222  [color=blue, key=0, style=bold];
m7_274 -> m7_272  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_16  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_100  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_113  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_120  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_124  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_128  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_141  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_142  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_143  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_144  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_145  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_161  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_162  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_163  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_172  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_180  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_181  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_186  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_197  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_189  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_190  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_201  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_210  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_202  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_203  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_204  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_214  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_216  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_217  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_224  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_225  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_226  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_227  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_234  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_235  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_236  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_237  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_246  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_247  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_248  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_249  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_259  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_260  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_261  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_262  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_263  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_274 -> m7_264  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m7_275 -> m7_120  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m7_275 -> m7_128  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m7_275 -> m7_135  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m7_277 -> m7_195  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m7_279 -> m7_267  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m7_279 -> m7_270  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m7_276 -> m7_168  [color=darkseagreen4, key=1, label=time, style=dashed];
m7_278 -> m7_231  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [color=blue, key=0, style=bold];
m8_1 -> m8_130  [key=2, style=dotted];
m8_1 -> m8_2  [key=0, style=solid];
m8_4 -> m8_5  [color=green, key=0, style=solid];
m8_3 -> m8_4  [color=green, key=0, style=solid];
m8_5 -> m8_6  [color=green, key=0, style=solid];
m8_5 -> m8_132  [color=green, key=2, style=dotted];
m8_5 -> m8_133  [color=green, key=2, style=dotted];
m8_5 -> m8_11  [color=green, key=1, label=from, style=dashed];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_132  [key=2, style=dotted];
m8_6 -> m8_133  [key=2, style=dotted];
m8_6 -> m8_11  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_135  [key=2, style=dotted];
m8_11 -> m8_136  [key=2, style=dotted];
m8_11 -> m8_36  [color=darkseagreen4, key=1, label=pager, style=dashed];
m8_11 -> m8_39  [color=darkseagreen4, key=1, label=pager, style=dashed];
m8_11 -> m8_122  [color=darkseagreen4, key=1, label=pager, style=dashed];
m8_11 -> m8_125  [color=darkseagreen4, key=1, label=pager, style=dashed];
m8_18 -> m8_19  [color=green, key=0, style=solid];
m8_18 -> m8_130  [color=green, key=2, style=dotted];
m8_17 -> m8_18  [color=green, key=0, style=solid];
m8_17 -> m8_21  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_139  [key=2, style=dotted];
m8_25 -> m8_26  [color=green, key=0, style=solid];
m8_25 -> m8_130  [color=green, key=2, style=dotted];
m8_24 -> m8_25  [color=green, key=0, style=solid];
m8_24 -> m8_139  [key=2, style=dotted];
m8_26 -> m8_27  [color=green, key=0, style=solid];
m8_26 -> m8_139  [key=2, style=dotted];
m8_27 -> m8_28  [color=green, key=0, style=solid];
m8_27 -> m8_130  [color=green, key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_140  [key=2, style=dotted];
m8_28 -> m8_139  [key=2, style=dotted];
m8_33 -> m8_34  [color=green, key=0, style=solid];
m8_33 -> m8_130  [color=green, key=2, style=dotted];
m8_32 -> m8_33  [color=green, key=0, style=solid];
m8_32 -> m8_139  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_139  [key=2, style=dotted];
m8_37 -> m8_38  [color=green, key=0, style=solid];
m8_37 -> m8_130  [color=green, key=2, style=dotted];
m8_36 -> m8_37  [color=green, key=0, style=solid];
m8_36 -> m8_41  [color=green, key=0, style=solid];
m8_38 -> m8_130  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_41 -> m8_42  [color=green, key=0, style=solid];
m8_41 -> m8_130  [color=green, key=2, style=dotted];
m8_40 -> m8_41  [color=green, key=0, style=solid];
m8_40 -> m8_130  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_139  [key=2, style=dotted];
m8_55 -> m8_56  [color=green, key=0, style=solid];
m8_55 -> m8_130  [color=green, key=2, style=dotted];
m8_54 -> m8_55  [color=green, key=0, style=solid];
m8_54 -> m8_139  [key=2, style=dotted];
m8_56 -> m8_57  [color=green, key=0, style=solid];
m8_56 -> m8_121  [color=green, key=0, style=solid];
m8_56 -> m8_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_69  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_75  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_77  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_84  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_87  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_90  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_93  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_94  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_99  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_102  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_106  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_111  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_117  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_56 -> m8_118  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_57 -> m8_58  [color=green, key=0, style=solid];
m8_57 -> m8_130  [color=green, key=2, style=dotted];
m8_58 -> m8_59  [color=green, key=0, style=solid];
m8_58 -> m8_139  [key=2, style=dotted];
m8_121 -> m8_122  [color=green, key=0, style=solid];
m8_121 -> m8_130  [color=green, key=2, style=dotted];
m8_122 -> m8_123  [color=green, key=0, style=solid];
m8_122 -> m8_127  [key=0, style=solid];
m8_59 -> m8_60  [color=green, key=0, style=solid];
m8_59 -> m8_130  [color=green, key=2, style=dotted];
m8_60 -> m8_61  [color=green, key=0, style=solid];
m8_60 -> m8_139  [key=2, style=dotted];
m8_61 -> m8_62  [color=green, key=0, style=solid];
m8_61 -> m8_130  [color=green, key=2, style=dotted];
m8_62 -> m8_130  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_66 -> m8_67  [color=green, key=0, style=solid];
m8_66 -> m8_130  [color=green, key=2, style=dotted];
m8_65 -> m8_66  [color=green, key=0, style=solid];
m8_65 -> m8_71  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_139  [key=2, style=dotted];
m8_74 -> m8_75  [color=green, key=0, style=solid];
m8_74 -> m8_130  [color=green, key=2, style=dotted];
m8_70 -> m8_74  [color=green, key=0, style=solid];
m8_70 -> m8_130  [key=2, style=dotted];
m8_73 -> m8_74  [color=green, key=0, style=solid];
m8_73 -> m8_130  [key=2, style=dotted];
m8_75 -> m8_76  [color=green, key=0, style=solid];
m8_75 -> m8_81  [key=0, style=solid];
m8_75 -> m8_142  [key=2, style=dotted];
m8_76 -> m8_77  [color=green, key=0, style=solid];
m8_76 -> m8_130  [color=green, key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_143  [key=2, style=dotted];
m8_77 -> m8_139  [key=2, style=dotted];
m8_83 -> m8_84  [color=green, key=0, style=solid];
m8_83 -> m8_130  [color=green, key=2, style=dotted];
m8_80 -> m8_83  [color=green, key=0, style=solid];
m8_80 -> m8_130  [key=2, style=dotted];
m8_82 -> m8_83  [color=green, key=0, style=solid];
m8_82 -> m8_130  [key=2, style=dotted];
m8_84 -> m8_85  [color=green, key=0, style=solid];
m8_84 -> m8_89  [key=0, style=solid];
m8_85 -> m8_86  [color=green, key=0, style=solid];
m8_85 -> m8_130  [color=green, key=2, style=dotted];
m8_86 -> m8_130  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_92 -> m8_93  [color=green, key=0, style=solid];
m8_92 -> m8_130  [color=green, key=2, style=dotted];
m8_88 -> m8_92  [color=green, key=0, style=solid];
m8_88 -> m8_130  [key=2, style=dotted];
m8_91 -> m8_92  [color=green, key=0, style=solid];
m8_91 -> m8_130  [key=2, style=dotted];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_95  [key=0, style=solid];
m8_98 -> m8_99  [color=green, key=0, style=solid];
m8_98 -> m8_130  [color=green, key=2, style=dotted];
m8_94 -> m8_98  [color=green, key=0, style=solid];
m8_94 -> m8_145  [key=2, style=dotted];
m8_94 -> m8_139  [key=2, style=dotted];
m8_97 -> m8_98  [color=green, key=0, style=solid];
m8_97 -> m8_130  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_113  [key=0, style=solid];
m8_103 -> m8_104  [color=green, key=0, style=solid];
m8_103 -> m8_130  [color=green, key=2, style=dotted];
m8_102 -> m8_103  [color=green, key=0, style=solid];
m8_102 -> m8_147  [key=2, style=dotted];
m8_102 -> m8_139  [key=2, style=dotted];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_148  [key=2, style=dotted];
m8_104 -> m8_139  [key=2, style=dotted];
m8_107 -> m8_116  [color=green, key=0, style=solid];
m8_107 -> m8_130  [color=green, key=2, style=dotted];
m8_106 -> m8_107  [color=green, key=0, style=solid];
m8_106 -> m8_145  [key=2, style=dotted];
m8_106 -> m8_139  [key=2, style=dotted];
m8_116 -> m8_117  [color=green, key=0, style=solid];
m8_116 -> m8_130  [color=green, key=2, style=dotted];
m8_112 -> m8_116  [color=green, key=0, style=solid];
m8_112 -> m8_130  [key=2, style=dotted];
m8_115 -> m8_116  [color=green, key=0, style=solid];
m8_115 -> m8_130  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_119  [key=0, style=solid];
m8_120 -> m8_56  [color=green, key=0, style=solid];
m8_120 -> m8_130  [color=green, key=2, style=dotted];
m8_118 -> m8_120  [color=green, key=0, style=solid];
m8_118 -> m8_145  [key=2, style=dotted];
m8_118 -> m8_139  [key=2, style=dotted];
m8_119 -> m8_120  [color=green, key=0, style=solid];
m8_119 -> m8_130  [key=2, style=dotted];
m8_123 -> m8_124  [color=green, key=0, style=solid];
m8_123 -> m8_130  [color=green, key=2, style=dotted];
m8_124 -> m8_130  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_131  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_134  [key=2, style=dotted];
m8_8 -> m8_13  [color=darkseagreen4, key=1, label=connection, style=dashed];
m8_14 -> m8_130  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_139  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_130  [key=2, style=dotted];
m8_20 -> m8_130  [key=2, style=dotted];
m8_20 -> m8_128  [key=0, style=solid];
m8_21 -> m8_130  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_140  [key=2, style=dotted];
m8_22 -> m8_139  [key=2, style=dotted];
m8_23 -> m8_130  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_29 -> m8_130  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_139  [key=2, style=dotted];
m8_31 -> m8_130  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_35 -> m8_130  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_141  [key=2, style=dotted];
m8_39 -> m8_139  [key=2, style=dotted];
m8_43 -> m8_130  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_139  [key=2, style=dotted];
m8_45 -> m8_130  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_139  [key=2, style=dotted];
m8_47 -> m8_130  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_139  [key=2, style=dotted];
m8_49 -> m8_130  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_139  [key=2, style=dotted];
m8_51 -> m8_130  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_139  [key=2, style=dotted];
m8_53 -> m8_130  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_64 -> m8_130  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_68 -> m8_130  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_139  [key=2, style=dotted];
m8_71 -> m8_130  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_139  [key=2, style=dotted];
m8_78 -> m8_130  [key=2, style=dotted];
m8_78 -> m8_79  [key=0, style=solid];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_139  [key=2, style=dotted];
m8_81 -> m8_130  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_144  [key=2, style=dotted];
m8_87 -> m8_139  [key=2, style=dotted];
m8_89 -> m8_130  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_139  [key=2, style=dotted];
m8_95 -> m8_130  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_139  [key=2, style=dotted];
m8_101 -> m8_130  [key=2, style=dotted];
m8_101 -> m8_102  [key=0, style=solid];
m8_105 -> m8_130  [key=2, style=dotted];
m8_105 -> m8_106  [key=0, style=solid];
m8_108 -> m8_130  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_139  [key=2, style=dotted];
m8_110 -> m8_130  [key=2, style=dotted];
m8_110 -> m8_111  [key=0, style=solid];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_145  [key=2, style=dotted];
m8_111 -> m8_139  [key=2, style=dotted];
m8_113 -> m8_130  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_139  [key=2, style=dotted];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_149  [key=2, style=dotted];
m8_125 -> m8_139  [key=2, style=dotted];
m8_126 -> m8_130  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_127 -> m8_130  [key=2, style=dotted];
m8_127 -> m8_128  [key=0, style=solid];
m8_128 -> m8_130  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_7 -> m8_36  [color=darkseagreen4, key=1, label=pager, style=dashed];
m8_7 -> m8_122  [color=darkseagreen4, key=1, label=pager, style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_39  [color=darkseagreen4, key=1, label=pager, style=dashed];
m8_7 -> m8_125  [color=darkseagreen4, key=1, label=pager, style=dashed];
m8_7 -> m8_7  [color=darkorchid, key=3, label="Local variable Hangfire.Dashboard.Pager pager", style=bold];
m8_9 -> m8_11  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_12  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=0, style=solid];
m8_12 -> m8_17  [color=darkseagreen4, key=1, label=recurringJobs, style=dashed];
m8_12 -> m8_56  [color=darkseagreen4, key=1, label=recurringJobs, style=dashed];
m8_12 -> m8_14  [key=0, style=solid];
m8_12 -> m8_137  [key=2, style=dotted];
m8_13 -> m8_17  [color=darkseagreen4, key=1, label=recurringJobs, style=dashed];
m8_13 -> m8_56  [color=darkseagreen4, key=1, label=recurringJobs, style=dashed];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_138  [key=2, style=dotted];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_108  [key=0, style=solid];
m8_100 -> m8_146  [key=2, style=dotted];
m8_63 -> m8_65  [color=darkseagreen4, key=1, label=cronDescription, style=dashed];
m8_63 -> m8_67  [color=darkseagreen4, key=1, label=cronDescription, style=dashed];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_7  [color=darkorchid, key=3, label="Local variable string cronDescription", style=bold];
m8_129 -> m8_0  [color=blue, key=0, style=bold];
m8_150 -> m8_5  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_18  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_25  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_27  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_33  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_37  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_41  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_55  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_57  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_121  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_59  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_61  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_66  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_74  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_76  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_83  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_85  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_92  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_98  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_103  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_107  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_116  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_120  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_123  [color=green, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_14  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_39  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_45  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_46  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_51  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_53  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_58  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_67  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_72  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_77  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_78  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_79  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_81  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_82  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_86  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_87  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_88  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_89  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_90  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_91  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_94  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_95  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_96  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_97  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_101  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_102  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_104  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_105  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_106  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_108  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_109  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_110  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_111  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_112  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_113  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_114  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_115  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_118  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_119  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_124  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_125  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_126  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_127  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_150 -> m8_128  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
}
