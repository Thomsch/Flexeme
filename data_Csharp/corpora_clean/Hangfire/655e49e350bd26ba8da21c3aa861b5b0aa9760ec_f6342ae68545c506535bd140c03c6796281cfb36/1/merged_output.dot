digraph  {
n3 [label="HangFire.Web.Pages.Paginator", span=""];
n0 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
n1 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", label="_pager = pager", span="8-8"];
n2 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", label="Exit HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
d69 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="5: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should be able to set a job parameter in the client filter'', ((string[])(null)))", span="150-150"];
d22 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
d68 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="Entry HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148"];
d70 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="8: this.ScenarioSetup(scenarioInfo)", span="152-152"];
d47 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
d216 [label="HangFire.Tests.ClientFiltersFeature", span=""];
d71 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="0: this.FeatureBackground()", span="154-154"];
d72 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="8: TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="156-158"];
d30 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72"];
d73 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="0: table3.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="159-161"];
d49 [cluster="TechTalk.SpecFlow.Table.cstr", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
d74 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="8: table3.AddRow(new string[] {\r\n                        ''UICulture'',\r\n                        ''ru-RU''})", span="162-164"];
d75 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="0: testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table3, ''Given '')", span="166-167"];
d50 [cluster="Unk.AddRow", label="Entry Unk.AddRow", span=""];
d76 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="3: testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="169-169"];
d33 [cluster="Unk.Given", label="Entry Unk.Given", span=""];
d77 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="5: testRunner.Then(''it should have all of the above parameters encoded as JSON string'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="171-171"];
d48 [cluster="Unk.When", label="Entry Unk.When", span=""];
d78 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, label="3: this.ScenarioCleanup()", span="173-173"];
d51 [cluster="Unk.Then", label="Entry Unk.Then", span=""];
d79 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="Exit HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148"];
d26 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67"];
d81 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, label="8: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name, an exception should be thrown'', ((string[])(null)))", span="182-182"];
d80 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180"];
d82 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, label="8: this.ScenarioSetup(scenarioInfo)", span="184-184"];
d83 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, label="8: this.FeatureBackground()", span="186-186"];
d84 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, label="8: TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="188-190"];
d85 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, label="3: table4.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-US''})", span="191-193"];
d86 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, label="5: testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table4, ''Given '')", span="195-196"];
d87 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, label="3: testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
d88 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, label="5: testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
d89 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, label="3: this.ScenarioCleanup()", span="202-202"];
d90 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180"];
d92 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter should be able to read the parameters that were set by one of the p'' +\r\n                    ''revious filters'', ((string[])(null)))", span="212-213"];
d91 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210"];
d93 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="8: this.ScenarioSetup(scenarioInfo)", span="215-215"];
d94 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="0: this.FeatureBackground()", span="217-217"];
d95 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="2: TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="219-221"];
d96 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="3: table5.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-GB''})", span="222-224"];
d97 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="5: testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table5, ''Given '')", span="226-227"];
d98 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="3: testRunner.And(''the client filter \'second\' that reads all of the above parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="229-229"];
d99 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="5: testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="231-231"];
d52 [cluster="Unk.And", label="Entry Unk.And", span=""];
d100 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="1: testRunner.Then(''the \'second\' client filter got the actual values of the parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="233-233"];
d101 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, label="8: this.ScenarioCleanup()", span="235-235"];
d102 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210"];
d104 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0, label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name in the GetParameter method call, a'' +\r\n                    ''n exception should be thrown'', ((string[])(null)))", span="245-246"];
d103 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243"];
d105 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0, label="4: this.ScenarioSetup(scenarioInfo)", span="248-248"];
d106 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0, label="0: this.FeatureBackground()", span="250-250"];
d107 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0, label="2: TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="252-254"];
d108 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0, label="3: table6.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-GB''})", span="255-257"];
d109 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0, label="5: testRunner.Given(''the client filter \'first\' that gets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table6, ''Given '')", span="259-260"];
d110 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0, label="3: testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="262-262"];
d111 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0, label="5: testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="264-264"];
d112 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0, label="3: this.ScenarioCleanup()", span="266-266"];
d113 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243"];
d115 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0, label="8: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should not be able to set parameters after the job was created'', ((string[])(null)))", span="275-275"];
d114 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="Entry HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273"];
d116 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0, label="8: this.ScenarioSetup(scenarioInfo)", span="277-277"];
d117 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0, label="8: this.FeatureBackground()", span="279-279"];
d118 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0, label="8: TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="281-283"];
d119 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0, label="8: table7.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="284-286"];
d120 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0, label="5: testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreated met'' +\r\n                    ''hod:'', ((string)(null)), table7, ''Given '')", span="288-289"];
d121 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0, label="3: testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="291-291"];
d122 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0, label="5: testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="293-293"];
d123 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0, label="3: this.ScenarioCleanup()", span="295-295"];
d124 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="Exit HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273"];
d134 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0, label="0: TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="320-321"];
d133 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.Then(''the storage should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="318-318"];
d135 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0, label="3: table8.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="322-323"];
d136 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0, label="4: table8.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="324-325"];
d137 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0, label="3: table8.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="326-327"];
d138 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0, label="5: testRunner.And(''only the following client filter methods should be executed:'', ((string)(null)), table8, ''And '')", span="329-329"];
d139 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="this.ScenarioCleanup()", span="331-331"];
d148 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0, label="0: TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="352-353"];
d147 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="350-350"];
d149 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0, label="1: table9.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="354-355"];
d150 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0, label="4: table9.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="356-357"];
d151 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0, label="0: table9.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="358-359"];
d152 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0, label="7: testRunner.Then(''only the following client filter methods should be executed:'', ((string)(null)), table9, ''Then '')", span="361-361"];
d153 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="this.ScenarioCleanup()", span="363-363"];
d163 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="3: TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="386-387"];
d162 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="384-384"];
d164 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="5: table10.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="388-389"];
d165 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="3: table10.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="390-391"];
d166 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="5: table10.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="392-393"];
d167 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="0: table10.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="394-395"];
d168 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="6: table10.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="396-397"];
d169 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="0: testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table10, ''Then '')", span="399-399"];
d170 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="401-401"];
d192 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0, label="3: TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="453-454"];
d191 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="451-451"];
d193 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0, label="5: table11.AddRow(new string[] {\r\n                        ''first''})", span="455-456"];
d194 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0, label="3: table11.AddRow(new string[] {\r\n                        ''second''})", span="457-458"];
d195 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0, label="5: testRunner.Then(''the client exception filters should be executed in the following order:'', ((string)(null)), table11, ''Then '')", span="460-460"];
d196 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="462-462"];
d208 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="0: TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="491-492"];
d207 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="489-489"];
d209 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="5: table12.AddRow(new string[] {\r\n                        ''first''})", span="493-494"];
d210 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="3: table12.AddRow(new string[] {\r\n                        ''second''})", span="495-496"];
d211 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="5: table12.AddRow(new string[] {\r\n                        ''third''})", span="497-498"];
d212 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0, label="0: testRunner.Then(''the following client exception filters should be executed:'', ((string)(null)), table12, ''Then '')", span="500-500"];
d213 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="502-502"];
d24 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
d36 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="this.ScenarioSetup(scenarioInfo)", span="88-88"];
d55 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.ScenarioSetup(scenarioInfo)", span="118-118"];
d127 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="this.ScenarioSetup(scenarioInfo)", span="306-306"];
d143 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="this.ScenarioSetup(scenarioInfo)", span="342-342"];
d157 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.ScenarioSetup(scenarioInfo)", span="374-374"];
d175 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="this.ScenarioSetup(scenarioInfo)", span="416-416"];
d186 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.ScenarioSetup(scenarioInfo)", span="441-441"];
d201 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.ScenarioSetup(scenarioInfo)", span="477-477"];
d23 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64"];
d35 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filters should be executed when I create a job'', ((string[])(null)))", span="86-86"];
d54 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple client filters should be executed depending on their order'', ((string[])(null)))", span="116-116"];
d126 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter cancels the creation of the job, it should not be created'', ((string[])(null)))", span="304-304"];
d142 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter\'s OnCreated could be skipped if there was an exception'', ((string[])(null)))", span="340-340"];
d156 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client filter handles an exception, it should not be thrown outside'', ((string[])(null)))", span="372-372"];
d174 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters should be executed when there was an exception while cre'' +\r\n                    ''ating a job'', ((string[])(null)))", span="413-414"];
d185 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple exception filters should be executed depending on their order'', ((string[])(null)))", span="439-439"];
d200 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client exception filter handles an exception, it should not be thrown outs'' +\r\n                    ''ide'', ((string[])(null)))", span="474-475"];
d37 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="this.FeatureBackground()", span="90-90"];
d45 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="this.ScenarioCleanup()", span="107-107"];
d56 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.FeatureBackground()", span="120-120"];
d66 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.ScenarioCleanup()", span="141-141"];
d128 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="this.FeatureBackground()", span="308-308"];
d144 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="this.FeatureBackground()", span="344-344"];
d158 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.FeatureBackground()", span="376-376"];
d171 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.ScenarioCleanup()", span="403-403"];
d176 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="this.FeatureBackground()", span="418-418"];
d182 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="this.ScenarioCleanup()", span="430-430"];
d187 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.FeatureBackground()", span="443-443"];
d197 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.ScenarioCleanup()", span="464-464"];
d202 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.FeatureBackground()", span="479-479"];
d214 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.ScenarioCleanup()", span="504-504"];
d32 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72"];
d31 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-76"];
d40 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="96-97"];
d60 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="128-129"];
d41 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="table1.AddRow(new string[] {\r\n                        ''test::OnCreating''})", span="98-99"];
d42 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="table1.AddRow(new string[] {\r\n                        ''test::OnCreated''})", span="100-101"];
d61 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="table2.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="130-131"];
d62 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="table2.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="132-133"];
d63 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="table2.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="134-135"];
d64 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="table2.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="136-137"];
d38 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="testRunner.Given(''the client filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="92-92"];
d57 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="122-122"];
d129 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="310-310"];
d145 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="346-346"];
d159 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="378-378"];
d177 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="420-420"];
d188 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="445-445"];
d203 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="481-481"];
d39 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="94-94"];
d59 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="126-126"];
d132 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="316-316"];
d178 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="422-422"];
d190 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="449-449"];
d206 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="487-487"];
d43 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table1, ''Then '')", span="103-103"];
d65 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table2, ''Then '')", span="139-139"];
d180 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="testRunner.Then(''the client exception filter should be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="426-426"];
d28 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67"];
d27 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", label="testRunner.CollectScenarioErrors()", span="69-69"];
d44 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="testRunner.And(''the storage should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="105-105"];
d58 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.And(''the client filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="124-124"];
d130 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="312-312"];
d131 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="314-314"];
d146 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="testRunner.And(''the client filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="348-348"];
d160 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="380-380"];
d161 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="382-382"];
d179 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="424-424"];
d181 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="428-428"];
d189 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="447-447"];
d204 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="483-483"];
d205 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="485-485"];
d140 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302"];
d154 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338"];
d25 [cluster="Unk.OnScenarioStart", label="Entry Unk.OnScenarioStart", span=""];
d34 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84"];
d53 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114"];
d125 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302"];
d141 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338"];
d155 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370"];
d173 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411"];
d184 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437"];
d199 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472"];
d46 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84"];
d67 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114"];
d172 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370"];
d183 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411"];
d198 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437"];
d215 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472"];
d29 [cluster="Unk.CollectScenarioErrors", label="Entry Unk.CollectScenarioErrors", span=""];
m0_22 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ClientJobDescriptor.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_30 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="100-102"];
m0_24 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92"];
m0_25 [cluster="System.InvalidOperationException.InvalidOperationException(string)", color=red, community=0, file="ClientJobDescriptor.cs", label="7: Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m0_27 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="96-98"];
m0_26 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=red, community=0, file="ClientJobDescriptor.cs", label="7: throw new ArgumentNullException(''name'');", span="94-94"];
m0_28 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=green, community=0, file="ClientJobDescriptor.cs", label="7: Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92"];
m0_29 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", color=green, community=0, file="ClientJobDescriptor.cs", label="7: Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_0 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19"];
m0_1 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Debug.Assert(redis != null)", span="26-26"];
m0_2 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Debug.Assert(jobId != null)", span="27-27"];
m0_3 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Debug.Assert(type != null)", span="28-28"];
m0_4 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Debug.Assert(arguments != null)", span="29-29"];
m0_5 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Debug.Assert(state != null)", span="30-30"];
m0_6 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="_stateMachine = new StateMachine(redis)", span="32-32"];
m0_7 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="JobId = jobId", span="34-34"];
m0_8 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Type = type", span="35-35"];
m0_9 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="State = state", span="36-36"];
m0_10 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="_jobParameters[''Type''] = type.AssemblyQualifiedName", span="38-38"];
m0_11 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="_jobParameters[''Args''] = JobHelper.ToJson(arguments)", span="39-39"];
m0_12 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19"];
m0_21 [cluster="string.IsNullOrEmpty(string)", file="ClientJobDescriptor.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_16 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70"];
m0_17 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0, file="ClientJobDescriptor.cs", label="7: String.IsNullOrWhiteSpace(name)", span="74-74"];
m0_19 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0, file="ClientJobDescriptor.cs", label="7: _jobWasCreated", span="76-76"];
m0_18 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0, file="ClientJobDescriptor.cs", label="7: throw new ArgumentNullException(''name'');", span="74-74"];
m0_20 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0, file="ClientJobDescriptor.cs", label="7: Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70"];
m0_34 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="105-105"];
m0_31 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="101-101"];
m0_32 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs", label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="103-103"];
m0_35 [cluster="HangFire.Client.ClientJobDescriptor.Create()", color=green, community=0, file="ClientJobDescriptor.cs", label="7: HangFire.Client.ClientJobDescriptor", span=""];
m0_36 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs", label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="108-108"];
m0_33 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="101-101"];
m0_15 [cluster="HangFire.JobHelper.ToJson(object)", file="ClientJobDescriptor.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="39-39"];
m0_23 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_13 [cluster="System.Diagnostics.Debug.Assert(bool)", file="ClientJobDescriptor.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m0_14 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="ClientJobDescriptor.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32"];
m1_29 [cluster="Unk.CollectScenarioErrors", file="JobClient.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m1_86 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", span="202-202"];
m1_87 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty id should cause an exception'', ((string[])(null)))", span="204-204"];
m1_88 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="206-206"];
m1_89 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="208-208"];
m1_90 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with an empty id'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="210-210"];
m1_91 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="212-212"];
m1_92 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="214-214"];
m1_93 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", span="202-202"];
m1_21 [cluster="Unk.OnScenarioEnd", file="JobClient.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m1_30 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="71-71"];
m1_31 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m1_32 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="71-71"];
m1_94 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", span="220-220"];
m1_95 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty type should cause an exception'', ((string[])(null)))", span="222-222"];
m1_96 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="224-224"];
m1_97 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="226-226"];
m1_98 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with null type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="228-228"];
m1_99 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="230-230"];
m1_100 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="232-232"];
m1_101 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", span="220-220"];
m1_5 [cluster="Unk.GetTestRunner", file="JobClient.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m1_18 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="56-56"];
m1_19 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m1_20 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="56-56"];
m1_34 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", span="82-82"];
m1_35 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The client creates should create a job in the storage'', ((string[])(null)))", span="84-84"];
m1_36 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="86-86"];
m1_37 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="88-88"];
m1_38 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="90-90"];
m1_39 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs", label="testRunner.Then(''the storage should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="92-92"];
m1_40 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="94-94"];
m1_41 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", span="82-82"];
m1_13 [cluster="Unk.OnFeatureEnd", file="JobClient.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m1_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobClient.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m1_0 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m1_1 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m1_2 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobClient'', ''\r\n  A a user, I expect that my jobs are created and the initial state\r\n  is appli'' +\r\n                    ''ed to them.'', ProgrammingLanguage.CSharp, ((string[])(null)))", span="33-34"];
m1_3 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m1_4 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m1_43 [cluster="Unk.When", file="JobClient.feature.cs", label="Entry Unk.When", span=""];
m1_56 [cluster="Unk.AddRow", file="JobClient.feature.cs", label="Entry Unk.AddRow", span=""];
m1_45 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", span="101-101"];
m1_46 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job should contain the \'Type\' parameter that is equal to the assembly qualifi'' +\r\n                    ''ed type name'', ((string[])(null)))", span="103-104"];
m1_47 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="106-106"];
m1_48 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="108-108"];
m1_49 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="110-110"];
m1_50 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="112-114"];
m1_51 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="table1.AddRow(new string[] {\r\n                        ''Type'',\r\n                        ''<Assembly qualified name of \'HangFire.Tests.TestJob\' type>''})", span="115-117"];
m1_52 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="testRunner.Then(''it should have the following parameters:'', ((string)(null)), table1, ''Then '')", span="119-119"];
m1_53 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="121-121"];
m1_54 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", span="101-101"];
m1_78 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", span="184-184"];
m1_79 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The specified state should be applied to the job'', ((string[])(null)))", span="186-186"];
m1_80 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="188-188"];
m1_81 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="190-190"];
m1_82 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="192-192"];
m1_83 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="testRunner.Then(''the given state should be applied to it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="194-194"];
m1_84 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="196-196"];
m1_85 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", span="184-184"];
m1_9 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="39-39"];
m1_10 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m1_11 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs", label="testRunner = null", span="42-42"];
m1_12 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="39-39"];
m1_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m1_57 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", span="128-128"];
m1_58 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''If the arguments were not provided, the \'Args\' parameter should contain the empty'' +\r\n                    '' JSON value'', ((string[])(null)))", span="130-131"];
m1_59 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="133-133"];
m1_60 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="135-135"];
m1_61 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="testRunner.When(''I create an argumentless job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137"];
m1_62 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="139-141"];
m1_63 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="table2.AddRow(new string[] {\r\n                        ''Args'',\r\n                        ''{}''})", span="142-144"];
m1_64 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="testRunner.Then(''it should have the following parameters:'', ((string)(null)), table2, ''Then '')", span="146-146"];
m1_65 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="148-148"];
m1_66 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", span="128-128"];
m1_67 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", span="155-155"];
m1_68 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Arguments should be converted to a JSON string and contained in the \'Args\' parame'' +\r\n                    ''ter'', ((string[])(null)))", span="157-158"];
m1_69 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="160-160"];
m1_70 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="162-162"];
m1_71 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="164-166"];
m1_72 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''5''})", span="167-169"];
m1_73 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="table3.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Deleted''})", span="170-172"];
m1_74 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with the following arguments:'', ((string)(null)), table3, ''When '')", span="174-174"];
m1_75 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="testRunner.Then(''the job should contain all of the above arguments in the JSON format'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="176-176"];
m1_76 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="178-178"];
m1_77 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", span="155-155"];
m1_44 [cluster="Unk.Then", file="JobClient.feature.cs", label="Entry Unk.Then", span=""];
m1_14 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="46-46"];
m1_15 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobClient''))", span="48-49"];
m1_16 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="HangFire.Tests.Client.JobClientFeature.FeatureSetup(null)", span="51-51"];
m1_17 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="46-46"];
m1_22 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m1_23 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m1_24 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m1_33 [cluster="Unk.Given", file="JobClient.feature.cs", label="Entry Unk.Given", span=""];
m1_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m1_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m1_102 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", span="239-239"];
m1_103 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with the type, that is not derived from the \'BackgroundJob\' should'' +\r\n                    '' cause an exception'', ((string[])(null)))", span="241-242"];
m1_104 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="244-244"];
m1_105 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="246-246"];
m1_106 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with the incorrect type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="248-248"];
m1_107 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="250-250"];
m1_108 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="252-252"];
m1_109 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", span="239-239"];
m1_26 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="66-66"];
m1_27 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m1_28 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="66-66"];
m1_8 [cluster="Unk.OnFeatureStart", file="JobClient.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m1_110 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", span="258-258"];
m1_111 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty state should cause an exception'', ((string[])(null)))", span="260-260"];
m1_112 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="262-262"];
m1_113 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="264-264"];
m1_114 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with an empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="266-266"];
m1_115 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="268-268"];
m1_116 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="270-270"];
m1_117 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", span="258-258"];
m1_118 [file="JobClient.feature.cs", label="HangFire.Tests.Client.JobClientFeature", span=""];
m2_26 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="73-73"];
m2_27 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_stateMock = new Mock<JobState>(''SomeReason'')", span="75-75"];
m2_28 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_stateMock.Setup(x => x.StateName).Returns(''Test'')", span="76-76"];
m2_29 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="77-77"];
m2_30 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_client.CreateJob(\r\n                    JobSteps.DefaultJobId,\r\n                    typeof(TestJob),\r\n                    _stateMock.Object,\r\n                    _arguments)", span="81-85"];
m2_31 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label=Exception, span="87-87"];
m2_32 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_exception = ex", span="89-89"];
m2_33 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="73-73"];
m2_0 [cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenAClient()", span="28-28"];
m2_1 [cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs", label="_client = new JobClient(\r\n                RedisFactory.BasicManager,\r\n                new JobCreator(_clientFilters, _exceptionFilters))", span="30-32"];
m2_2 [cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenAClient()", span="28-28"];
m2_9 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JobClientSteps.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_19 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60"];
m2_20 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs", label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults))", span="62-62"];
m2_21 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60"];
m2_76 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClientSteps.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="98-98"];
m2_116 [cluster="Unk.Apply", file="JobClientSteps.cs", label="Entry Unk.Apply", span=""];
m2_95 [cluster="Unk.GetAllEntriesFromHash", file="JobClientSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m2_50 [cluster="Unk.ToDictionary", file="JobClientSteps.cs", label="Entry Unk.ToDictionary", span=""];
m2_86 [cluster="Unk.IsTrue", file="JobClientSteps.cs", label="Entry Unk.IsTrue", span=""];
m2_22 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobClientSteps.cs", label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="12-12"];
m2_34 [cluster="Mock<JobState>.cstr", file="JobClientSteps.cs", label="Entry Mock<JobState>.cstr", span=""];
m2_66 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120"];
m2_67 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", color=red, community=0, file="JobClientSteps.cs", label="4: _client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, null)", span="124-124"];
m2_68 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs", label=Exception, span="126-126"];
m2_69 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs", label="_exception = ex", span="128-128"];
m2_70 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120"];
m2_136 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="229-229"];
m2_137 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs", label="Assert.AreNotEqual(0, _exceptionFilterResults.Count)", span="231-231"];
m2_138 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="229-229"];
m2_108 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobClientSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_128 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="217-217"];
m2_129 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="Assert.AreEqual(table.RowCount, _clientFilterResults.Count)", span="219-219"];
m2_131 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="i < table.RowCount", span="221-221"];
m2_132 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="var method = table.Rows[i][''Method'']", span="223-223"];
m2_130 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="var i = 0", span="221-221"];
m2_133 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="Assert.AreEqual(method, _clientFilterResults[i])", span="224-224"];
m2_134 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="i++", span="221-221"];
m2_135 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="217-217"];
m2_106 [cluster="Unk.>", file="JobClientSteps.cs", label="Entry Unk.>", span=""];
m2_13 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="48-48"];
m2_14 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, false, true))", span="50-50"];
m2_15 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="48-48"];
m2_46 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94"];
m2_47 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs", label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="96-96"];
m2_48 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs", label="When(''I create a job'')", span="97-97"];
m2_49 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94"];
m2_139 [cluster="Unk.AreNotEqual", file="JobClientSteps.cs", label="Entry Unk.AreNotEqual", span=""];
m2_10 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="42-42"];
m2_11 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs", label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, true))", span="44-44"];
m2_12 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="42-42"];
m2_5 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", span="36-36"];
m2_6 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs", label="_clientFilters.Add(new TestFilter(name, _clientFilterResults))", span="38-38"];
m2_7 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", span="36-36"];
m2_90 [cluster="Unk.IsFalse", file="JobClientSteps.cs", label="Entry Unk.IsFalse", span=""];
m2_107 [cluster="Unk.AreEqual", file="JobClientSteps.cs", label="Entry Unk.AreEqual", span=""];
m2_58 [cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101"];
m2_59 [cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs", label="_clientFilters.Add(new TestFilter(''buggy'', _clientFilterResults, true))", span="103-103"];
m2_60 [cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101"];
m2_71 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133"];
m2_72 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", color=red, community=0, file="JobClientSteps.cs", label="7: _client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), null, null)", span="137-137"];
m2_73 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs", label=Exception, span="139-139"];
m2_74 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs", label="_exception = ex", span="141-141"];
m2_75 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133"];
m2_91 [cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="171-171"];
m2_92 [cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs", label="var job = Redis.Client.GetAllEntriesFromHash(''hangfire:job:'' + JobSteps.DefaultJobId)", span="173-173"];
m2_93 [cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, job)", span="174-174"];
m2_94 [cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="171-171"];
m2_151 [cluster="Unk.IsNull", file="JobClientSteps.cs", label="Entry Unk.IsNull", span=""];
m2_77 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146"];
m2_78 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", color=red, community=0, file="JobClientSteps.cs", label="9: _client.CreateJob(JobSteps.DefaultJobId, typeof(JobClientSteps), null, null)", span="150-150"];
m2_79 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs", label=Exception, span="152-152"];
m2_80 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs", label="_exception = ex", span="154-154"];
m2_81 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146"];
m2_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClientSteps.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="31-31"];
m2_109 [cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194"];
m2_110 [cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs", label="_stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId),\r\n                Times.Once)", span="196-198"];
m2_111 [cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194"];
m2_45 [cluster="Unk.GetProperties", file="JobClientSteps.cs", label="Entry Unk.GetProperties", span=""];
m2_97 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178"];
m2_98 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="180-182"];
m2_99 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="183-183"];
m2_100 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Assert.AreEqual(_arguments.Count, args.Count)", span="185-185"];
m2_102 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="188-188"];
m2_101 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label=_arguments, span="186-186"];
m2_103 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="189-189"];
m2_104 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178"];
m2_16 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54"];
m2_17 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs", label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, true, false, false))", span="56-56"];
m2_18 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54"];
m2_37 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClientSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_124 [cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="209-209"];
m2_125 [cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs", label="Assert.IsNotNull(_exception)", span="211-211"];
m2_126 [cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs", label="Assert.IsInstanceOfType(_exception, typeof(CreateJobFailedException))", span="212-212"];
m2_127 [cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="209-209"];
m2_35 [cluster="Unk.Setup", file="JobClientSteps.cs", label="Entry Unk.Setup", span=""];
m2_123 [cluster="Unk.IsInstanceOfType", file="JobClientSteps.cs", label="Entry Unk.IsInstanceOfType", span=""];
m2_87 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165"];
m2_88 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="167-167"];
m2_89 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165"];
m2_122 [cluster="System.Type.GetType(string, bool)", file="JobClientSteps.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m2_23 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66"];
m2_24 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults, true))", span="68-68"];
m2_25 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66"];
m2_82 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159"];
m2_83 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs", label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="161-161"];
m2_84 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159"];
m2_113 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="197-197"];
m2_39 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="76-76"];
m2_42 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="77-77"];
m2_40 [cluster="lambda expression", file="JobClientSteps.cs", label="x.StateName", span="76-76"];
m2_41 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="76-76"];
m2_43 [cluster="lambda expression", file="JobClientSteps.cs", label="x.GetProperties()", span="77-77"];
m2_44 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="77-77"];
m2_52 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="96-96"];
m2_55 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="96-96"];
m2_53 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Name'']", span="96-96"];
m2_54 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="96-96"];
m2_56 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Value'']", span="96-96"];
m2_57 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="96-96"];
m2_114 [cluster="lambda expression", file="JobClientSteps.cs", label="x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="197-197"];
m2_115 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="197-197"];
m2_121 [cluster="Unk.IsNotNull", file="JobClientSteps.cs", label="Entry Unk.IsNotNull", span=""];
m2_117 [cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="202-202"];
m2_118 [cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs", label="Assert.IsNotNull(_exception)", span="204-204"];
m2_119 [cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="205-205"];
m2_120 [cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="202-202"];
m2_140 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="236-236"];
m2_141 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="Assert.AreEqual(table.RowCount, _exceptionFilterResults.Count)", span="238-238"];
m2_143 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="i < table.RowCount", span="240-240"];
m2_144 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="var filter = table.Rows[i][''Filter'']", span="242-242"];
m2_142 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="var i = 0", span="240-240"];
m2_145 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="Assert.AreEqual(filter, _exceptionFilterResults[i])", span="243-243"];
m2_146 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="i++", span="240-240"];
m2_147 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="236-236"];
m2_112 [cluster="Unk.Verify", file="JobClientSteps.cs", label="Entry Unk.Verify", span=""];
m2_105 [cluster="Unk.GetValueFromHash", file="JobClientSteps.cs", label="Entry Unk.GetValueFromHash", span=""];
m2_8 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="JobClientSteps.cs", label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m2_148 [cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="248-248"];
m2_149 [cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs", label="Assert.IsNull(_exception)", span="250-250"];
m2_150 [cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="248-248"];
m2_96 [cluster="Unk.ContainsFollowingItems", file="JobClientSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m2_36 [cluster="Unk.Returns", file="JobClientSteps.cs", label="Entry Unk.Returns", span=""];
m2_38 [cluster="Unk.CreateJob", file="JobClientSteps.cs", label="Entry Unk.CreateJob", span=""];
m2_61 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107"];
m2_62 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", color=red, community=0, file="JobClientSteps.cs", label="6: _client.CreateJob(null, typeof(TestJob), new Mock<JobState>(''1'').Object, null)", span="111-111"];
m2_63 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs", label=Exception, span="113-113"];
m2_64 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs", label="_exception = ex", span="115-115"];
m2_65 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107"];
m2_4 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobClientSteps.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m2_85 [cluster="Unk.ContainsKey", file="JobClientSteps.cs", label="Entry Unk.ContainsKey", span=""];
m2_152 [file="JobClientSteps.cs", label="HangFire.Tests.JobClientSteps", span=""];
m3_20 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobHelper.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobHelper.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_35 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelper.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m3_23 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="95-95"];
m3_24 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label="String.IsNullOrWhiteSpace(name)", span="97-97"];
m3_28 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label="var serializedValue = JobHelper.ToJson(value)", span="104-104"];
m3_29 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label="!_parameters.ContainsKey(name)", span="106-106"];
m3_30 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label="_parameters.Add(name, serializedValue)", span="108-108"];
m3_31 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label="_parameters[name] = serializedValue", span="112-112"];
m3_25 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label="throw new ArgumentNullException(''name'');", span="97-97"];
m3_26 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label=_jobWasCreated, span="99-99"];
m3_27 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="101-101"];
m3_32 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs", label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="95-95"];
m3_0 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobHelper.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m3_1 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobHelper.cs", label="Items = context.Items", span="40-40"];
m3_2 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobHelper.cs", label="_jobWasCreated = context._jobWasCreated", span="41-41"];
m3_3 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobHelper.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m3_43 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobHelper.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m3_38 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="128-128"];
m3_39 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs", label="String.IsNullOrWhiteSpace(name)", span="130-130"];
m3_41 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs", label="return _parameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_parameters[name])\r\n                : default(T);", span="132-134"];
m3_40 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs", label="throw new ArgumentNullException(''name'');", span="130-130"];
m3_42 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs", label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="128-128"];
m3_33 [cluster="string.IsNullOrWhiteSpace(string)", file="JobHelper.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m3_48 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m3_4 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="44-44"];
m3_5 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="connection == null", span="50-50"];
m3_7 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="jobMethod == null", span="51-51"];
m3_9 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="arguments == null", span="52-52"];
m3_11 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="initialState == null", span="53-53"];
m3_13 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="Connection = connection", span="55-55"];
m3_14 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="JobMethod = jobMethod", span="56-56"];
m3_15 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="Arguments = arguments", span="57-57"];
m3_16 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="InitialState = initialState", span="58-58"];
m3_18 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="_stateMachine = new StateMachine(connection)", span="61-61"];
m3_6 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="throw new ArgumentNullException(''connection'');", span="50-50"];
m3_8 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="throw new ArgumentNullException(''jobMethod'');", span="51-51"];
m3_10 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="throw new ArgumentNullException(''arguments'');", span="52-52"];
m3_12 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="throw new ArgumentNullException(''initialState'');", span="53-53"];
m3_17 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="Items = new Dictionary<string, object>()", span="59-59"];
m3_19 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="44-44"];
m3_36 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobHelper.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_37 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobHelper.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_44 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobHelper.cs", label="Entry HangFire.Client.CreateContext.CreateJob()", span="137-137"];
m3_45 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobHelper.cs", label="JobId = _stateMachine.CreateInState(JobMethod, Arguments, _parameters, InitialState)", span="139-139"];
m3_46 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobHelper.cs", label="_jobWasCreated = true", span="140-140"];
m3_47 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobHelper.cs", label="Exit HangFire.Client.CreateContext.CreateJob()", span="137-137"];
m3_22 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m3_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobHelper.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m3_49 [file="JobHelper.cs", label="HangFire.Client.CreateContext", span=""];
m4_72 [cluster="Unk.OnClientException", file="JobStorage.cs", label="Entry Unk.OnClientException", span=""];
m4_12 [cluster="System.Collections.Generic.List<T>.List()", file="JobStorage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_11 [cluster="Mock<IStateMachineFactory>.cstr", file="JobStorage.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m4_10 [cluster="Mock<IState>.cstr", file="JobStorage.cs", label="Entry Mock<IState>.cstr", span=""];
m4_17 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m4_327 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m4_25 [cluster="Unk.Equal", file="JobStorage.cs", label="Entry Unk.Equal", span=""];
m4_185 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m4_186 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="var outerFilter = new Mock<IClientFilter>()", span="183-183"];
m4_187 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="var innerFilter = new Mock<IClientFilter>()", span="184-184"];
m4_188 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="_filters.Add(outerFilter.Object)", span="186-186"];
m4_193 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198"];
m4_189 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="_filters.Add(innerFilter.Object)", span="187-187"];
m4_190 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190"];
m4_191 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="var process = CreateProcess()", span="192-192"];
m4_192 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="process.Run(_context.Object)", span="195-195"];
m4_194 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m4_13 [cluster="Mock<CreateContext>.cstr", file="JobStorage.cs", label="Entry Mock<CreateContext>.cstr", span=""];
m4_164 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m4_165 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs", label="var filter = new Mock<IClientFilter>()", span="163-163"];
m4_166 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs", label="_filters.Add(filter.Object)", span="164-164"];
m4_167 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167"];
m4_171 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176"];
m4_168 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs", label="var process = CreateProcess()", span="169-169"];
m4_169 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs", label="process.Run(_context.Object)", span="172-172"];
m4_170 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175"];
m4_172 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m4_298 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m4_299 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="var outerFilter = new Mock<IClientFilter>()", span="288-288"];
m4_300 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="var innerFilter = new Mock<IClientFilter>()", span="289-289"];
m4_301 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="_filters.Add(outerFilter.Object)", span="291-291"];
m4_307 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305"];
m4_302 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="_filters.Add(innerFilter.Object)", span="292-292"];
m4_304 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297"];
m4_303 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294"];
m4_305 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="var process = CreateProcess()", span="299-299"];
m4_306 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302"];
m4_308 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m4_106 [cluster="Unk.DoesNotThrow", file="JobStorage.cs", label="Entry Unk.DoesNotThrow", span=""];
m4_35 [cluster="Unk.Run", file="JobStorage.cs", label="Entry Unk.Run", span=""];
m4_97 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m4_98 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104"];
m4_99 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="105-105"];
m4_100 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs", label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107"];
m4_101 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs", label="_filters.Add(filter.Object)", span="109-109"];
m4_102 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs", label="var process = CreateProcess()", span="111-111"];
m4_103 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114"];
m4_104 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m4_237 [cluster="System.InvalidOperationException.InvalidOperationException()", file="JobStorage.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m4_24 [cluster="Unk.>", file="JobStorage.cs", label="Entry Unk.>", span=""];
m4_61 [cluster="Mock<IClientExceptionFilter>.cstr", file="JobStorage.cs", label="Entry Mock<IClientExceptionFilter>.cstr", span=""];
m4_23 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m4_328 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobStorage.cs", label="return new JobCreationProcess(_filters);", span="314-314"];
m4_329 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m4_140 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m4_141 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="var outerFilter = new Mock<IClientFilter>()", span="140-140"];
m4_142 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="var innerFilter = new Mock<IClientFilter>()", span="141-141"];
m4_143 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="_filters.Add(outerFilter.Object)", span="143-143"];
m4_145 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146"];
m4_148 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149"];
m4_144 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="_filters.Add(innerFilter.Object)", span="144-144"];
m4_146 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147"];
m4_147 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148"];
m4_149 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="var process = CreateProcess()", span="151-151"];
m4_150 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="process.Run(_context.Object)", span="154-154"];
m4_151 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m4_139 [cluster="Unk.OnCreated", file="JobStorage.cs", label="Entry Unk.OnCreated", span=""];
m4_274 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m4_275 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs", label="var filter = new Mock<IClientFilter>()", span="269-269"];
m4_276 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs", label="_filters.Add(filter.Object)", span="270-270"];
m4_279 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs", label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276"];
m4_277 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs", label="var exception = new InvalidOperationException()", span="272-272"];
m4_278 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273"];
m4_280 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs", label="var process = CreateProcess()", span="278-278"];
m4_281 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281"];
m4_282 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m4_53 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m4_54 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="63-63"];
m4_55 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs", label="_filters.Add(filter.Object)", span="64-64"];
m4_59 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs", label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73"];
m4_56 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66"];
m4_57 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs", label="var process = CreateProcess()", span="67-67"];
m4_58 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70"];
m4_60 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m4_228 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m4_229 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs", label="var filter = new Mock<IClientFilter>()", span="226-226"];
m4_230 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs", label="_filters.Add(filter.Object)", span="227-227"];
m4_235 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=red, community=0, file="JobStorage.cs", label="4: filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240"];
m4_231 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs", label="var exception = new InvalidOperationException()", span="229-229"];
m4_232 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230"];
m4_233 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs", label="var process = CreateProcess()", span="232-232"];
m4_234 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236"];
m4_236 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m4_251 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m4_252 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="var outerFilter = new Mock<IClientFilter>()", span="247-247"];
m4_253 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="var innerFilter = new Mock<IClientFilter>()", span="248-248"];
m4_254 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="_filters.Add(outerFilter.Object)", span="250-250"];
m4_260 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262"];
m4_255 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", color=green, community=0, file="JobStorage.cs", label="4: _filters.Add(innerFilter.Object)", span="251-251"];
m4_256 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="var exception = new InvalidOperationException()", span="253-253"];
m4_257 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254"];
m4_258 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="var process = CreateProcess()", span="256-256"];
m4_259 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260"];
m4_261 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m4_62 [cluster="Unk.Add", file="JobStorage.cs", label="Entry Unk.Add", span=""];
m4_84 [cluster="Unk.InSequence", file="JobStorage.cs", label="Entry Unk.InSequence", span=""];
m4_0 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17"];
m4_1 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="JobStorage.cs", label="4: var connection = new Mock<IStorageConnection>()", span="19-19"];
m4_2 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="JobStorage.cs", label="6: var job = Job.FromExpression(() => TestMethod())", span="20-20"];
m4_6 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs", label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26"];
m4_3 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="JobStorage.cs", label="5: var state = new Mock<IState>()", span="21-21"];
m4_4 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="JobStorage.cs", label="8: var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22"];
m4_5 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs", label="_filters = new List<object>()", span="24-24"];
m4_7 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17"];
m4_207 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m4_208 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs", label="var filter = new Mock<IClientFilter>()", span="205-205"];
m4_209 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs", label="_filters.Add(filter.Object)", span="206-206"];
m4_210 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209"];
m4_214 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219"];
m4_211 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs", label="var process = CreateProcess()", span="211-211"];
m4_212 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215"];
m4_213 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218"];
m4_215 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m4_29 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobStorage.cs", label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45"];
m4_46 [cluster="Unk.Setup", file="JobStorage.cs", label="Entry Unk.Setup", span=""];
m4_238 [cluster="Unk.Throws", file="JobStorage.cs", label="Entry Unk.Throws", span=""];
m4_73 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m4_74 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80"];
m4_75 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81"];
m4_77 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84"];
m4_78 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="_filters.Add(filter1.Object)", span="86-86"];
m4_76 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83"];
m4_79 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="_filters.Add(filter2.Object)", span="87-87"];
m4_80 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89"];
m4_81 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="var process = CreateProcess()", span="91-91"];
m4_82 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95"];
m4_83 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m4_330 [cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobStorage.cs", label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m4_324 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="305-305"];
m4_14 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="20-20"];
m4_15 [cluster="lambda expression", color=green, community=0, file="JobStorage.cs", label="6: TestMethod()", span="20-20"];
m4_16 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="20-20"];
m4_27 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(null)", span="35-35"];
m4_26 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="35-35"];
m4_28 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="35-35"];
m4_37 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="47-47"];
m4_38 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="47-47"];
m4_39 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="47-47"];
m4_47 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="53-53"];
m4_51 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(_context.Object)", span="57-57"];
m4_50 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="57-57"];
m4_48 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="53-53"];
m4_49 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="53-53"];
m4_52 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="57-57"];
m4_63 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="66-66"];
m4_67 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(_context.Object)", span="70-70"];
m4_66 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="70-70"];
m4_69 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="72-73"];
m4_64 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="66-66"];
m4_65 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="66-66"];
m4_68 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="70-70"];
m4_70 [cluster="lambda expression", file="JobStorage.cs", label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73"];
m4_71 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="72-73"];
m4_85 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="83-83"];
m4_88 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="84-84"];
m4_91 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="89-89"];
m4_95 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(_context.Object)", span="95-95"];
m4_94 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="95-95"];
m4_86 [cluster="lambda expression", file="JobStorage.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83"];
m4_87 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="83-83"];
m4_89 [cluster="lambda expression", file="JobStorage.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84"];
m4_90 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="84-84"];
m4_92 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="89-89"];
m4_93 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="89-89"];
m4_96 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="95-95"];
m4_107 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="104-104"];
m4_110 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="106-106"];
m4_113 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="107-107"];
m4_117 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(_context.Object)", span="114-114"];
m4_116 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="114-114"];
m4_108 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="104-104"];
m4_109 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="104-104"];
m4_111 [cluster="lambda expression", file="JobStorage.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106"];
m4_112 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="106-106"];
m4_114 [cluster="lambda expression", file="JobStorage.cs", label="x.ExceptionHandled = true", span="107-107"];
m4_115 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="107-107"];
m4_118 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="114-114"];
m4_129 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="124-124"];
m4_133 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="125-125"];
m4_136 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="126-126"];
m4_130 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124"];
m4_131 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="124-124"];
m4_134 [cluster="lambda expression", color=red, community=0, file="JobStorage.cs", label="0: x.CreateJob()", span="125-125"];
m4_135 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="125-125"];
m4_137 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126"];
m4_138 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="126-126"];
m4_152 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="146-146"];
m4_155 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="147-147"];
m4_158 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="148-148"];
m4_161 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="149-149"];
m4_153 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146"];
m4_154 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="146-146"];
m4_156 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147"];
m4_157 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="147-147"];
m4_159 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148"];
m4_160 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="148-148"];
m4_162 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149"];
m4_163 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="149-149"];
m4_173 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="166-166"];
m4_176 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="167-167"];
m4_179 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="175-175"];
m4_182 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="176-176"];
m4_174 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166"];
m4_175 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="166-166"];
m4_177 [cluster="lambda expression", file="JobStorage.cs", label="x.Canceled = true", span="167-167"];
m4_178 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="167-167"];
m4_180 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="175-175"];
m4_181 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="175-175"];
m4_183 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176"];
m4_184 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="176-176"];
m4_195 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="189-189"];
m4_198 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="190-190"];
m4_201 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="198-198"];
m4_196 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189"];
m4_197 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="189-189"];
m4_199 [cluster="lambda expression", file="JobStorage.cs", label="context.Canceled = true", span="190-190"];
m4_200 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="190-190"];
m4_202 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198"];
m4_203 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="198-198"];
m4_204 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="198-198"];
m4_205 [cluster="lambda expression", file="JobStorage.cs", label="context.Canceled", span="198-198"];
m4_206 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="198-198"];
m4_216 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="208-208"];
m4_220 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(_context.Object)", span="215-215"];
m4_219 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="215-215"];
m4_222 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="218-218"];
m4_225 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="219-219"];
m4_217 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208"];
m4_218 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="208-208"];
m4_221 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="215-215"];
m4_223 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="218-218"];
m4_224 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="218-218"];
m4_226 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219"];
m4_227 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="219-219"];
m4_246 [cluster="lambda expression", color=red, community=0, file="JobStorage.cs", label="4: x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240"];
m4_249 [cluster="lambda expression", color=red, community=0, file="JobStorage.cs", label="4: context.Exception == exception", span="240-240"];
m4_239 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="230-230"];
m4_243 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(_context.Object)", span="236-236"];
m4_242 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="236-236"];
m4_245 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="239-240"];
m4_240 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="230-230"];
m4_241 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="230-230"];
m4_244 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="236-236"];
m4_247 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="239-240"];
m4_248 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="240-240"];
m4_250 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="240-240"];
m4_269 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262"];
m4_272 [cluster="lambda expression", file="JobStorage.cs", label="context.Exception == exception", span="262-262"];
m4_262 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="254-254"];
m4_266 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(_context.Object)", span="260-260"];
m4_265 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="260-260"];
m4_268 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="262-262"];
m4_263 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="254-254"];
m4_264 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="254-254"];
m4_267 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="260-260"];
m4_270 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="262-262"];
m4_271 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="262-262"];
m4_273 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="262-262"];
m4_287 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275"];
m4_290 [cluster="lambda expression", file="JobStorage.cs", label="context.Exception == exception", span="275-275"];
m4_283 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="273-273"];
m4_286 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="275-275"];
m4_292 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="276-276"];
m4_296 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(_context.Object)", span="281-281"];
m4_295 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="281-281"];
m4_284 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="273-273"];
m4_285 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="273-273"];
m4_288 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="275-275"];
m4_289 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="275-275"];
m4_291 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="275-275"];
m4_293 [cluster="lambda expression", file="JobStorage.cs", label="x.ExceptionHandled = true", span="276-276"];
m4_294 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="276-276"];
m4_297 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="281-281"];
m4_309 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="294-294"];
m4_312 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="296-296"];
m4_315 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="297-297"];
m4_319 [cluster="lambda expression", file="JobStorage.cs", label="process.Run(_context.Object)", span="302-302"];
m4_318 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="302-302"];
m4_321 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="305-305"];
m4_310 [cluster="lambda expression", file="JobStorage.cs", label="x.CreateJob()", span="294-294"];
m4_311 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="294-294"];
m4_313 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296"];
m4_314 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="296-296"];
m4_316 [cluster="lambda expression", file="JobStorage.cs", label="x.ExceptionHandled = true", span="297-297"];
m4_317 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="297-297"];
m4_320 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="302-302"];
m4_322 [cluster="lambda expression", file="JobStorage.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305"];
m4_323 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="305-305"];
m4_325 [cluster="lambda expression", file="JobStorage.cs", label="context.Exception != null", span="305-305"];
m4_326 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="305-305"];
m4_36 [cluster="Unk.Verify", file="JobStorage.cs", label="Entry Unk.Verify", span=""];
m4_30 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41"];
m4_31 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs", label="var process = CreateProcess()", span="43-43"];
m4_32 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs", label="process.Run(_context.Object)", span="45-45"];
m4_33 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs", label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47"];
m4_34 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41"];
m4_41 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51"];
m4_42 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53"];
m4_43 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs", label="var process = CreateProcess()", span="54-54"];
m4_44 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57"];
m4_45 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51"];
m4_132 [cluster="Unk.OnCreating", file="JobStorage.cs", label="Entry Unk.OnCreating", span=""];
m4_18 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m4_19 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs", label="var process = CreateProcess()", span="32-32"];
m4_20 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35"];
m4_21 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs", label="Assert.Equal(''context'', exception.ParamName)", span="37-37"];
m4_22 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m4_105 [cluster="Unk.Callback", file="JobStorage.cs", label="Entry Unk.Callback", span=""];
m4_119 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m4_120 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs", label="var filter = new Mock<IClientFilter>()", span="121-121"];
m4_121 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs", label="_filters.Add(filter.Object)", span="122-122"];
m4_122 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs", label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124"];
m4_124 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs", label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126"];
m4_123 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", color=red, community=0, file="JobStorage.cs", label="3: _context.Setup(x => x.CreateJob()).InSequence()", span="125-125"];
m4_125 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs", label="var process = CreateProcess()", span="128-128"];
m4_126 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs", label="process.Run(_context.Object)", span="131-131"];
m4_127 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m4_40 [cluster="Unk.CreateJob", file="JobStorage.cs", label="Entry Unk.CreateJob", span=""];
m4_128 [cluster="Mock<IClientFilter>.cstr", file="JobStorage.cs", label="Entry Mock<IClientFilter>.cstr", span=""];
m4_8 [cluster="Mock<IStorageConnection>.cstr", file="JobStorage.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m4_9 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobStorage.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m4_331 [file="JobStorage.cs", label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", span=""];
m4_332 [file="JobStorage.cs", label=process, span=""];
m4_333 [file="JobStorage.cs", label=process, span=""];
m4_334 [file="JobStorage.cs", label=process, span=""];
m4_335 [file="JobStorage.cs", label=process, span=""];
m4_336 [file="JobStorage.cs", label=process, span=""];
m4_337 [file="JobStorage.cs", label=process, span=""];
m4_338 [file="JobStorage.cs", label=process, span=""];
m4_339 [file="JobStorage.cs", label=exception, span=""];
m4_340 [file="JobStorage.cs", label=process, span=""];
m4_341 [file="JobStorage.cs", label=exception, span=""];
m4_342 [file="JobStorage.cs", label=exception, span=""];
m4_343 [file="JobStorage.cs", label=process, span=""];
m4_344 [file="JobStorage.cs", label=process, span=""];
m5_11 [cluster="System.Math.Min(int, int)", file="TestFilter.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m5_0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m5_1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="34-34"];
m5_2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="35-35"];
m5_3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="ShutdownTimeout = BackgroundProcessingServer.DefaultShutdownTimeout", span="36-36"];
m5_4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="SchedulePollingInterval = DelayedJobScheduler.DefaultPollingDelay", span="37-37"];
m5_5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="HeartbeatInterval = ServerHeartbeat.DefaultHeartbeatInterval", span="38-38"];
m5_6 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="39-39"];
m5_7 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="ServerCheckInterval = ServerWatchdog.DefaultCheckInterval", span="40-40"];
m5_8 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="FilterProvider = null", span="42-42"];
m5_9 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="Activator = null", span="43-43"];
m5_10 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs", label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m5_12 [file="TestFilter.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
n3 -> n1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.Paginator", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [color=blue, key=0, style=bold];
d69 -> d70  [color=green, key=0, style=solid];
d69 -> d47  [color=green, key=2, style=dotted];
d22 -> d69  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d81  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d92  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d104  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d115  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d23  [key=0, style=solid];
d22 -> d35  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d54  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d126  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d142  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d156  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d174  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d185  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d22 -> d200  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
d68 -> d69  [color=green, key=0, style=solid];
d70 -> d71  [color=green, key=0, style=solid];
d70 -> d22  [color=green, key=2, style=dotted];
d216 -> d70  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d71  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d78  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d82  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d83  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d89  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d93  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d94  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d101  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d105  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d106  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d112  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d116  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d117  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d123  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d36  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d45  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d55  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d56  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d127  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d128  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d139  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d143  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d144  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d153  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d157  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d158  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d171  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d175  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d176  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d182  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d186  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d187  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d197  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d201  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d202  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d216 -> d214  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
d71 -> d72  [color=green, key=0, style=solid];
d71 -> d30  [color=green, key=2, style=dotted];
d72 -> d73  [color=green, key=0, style=solid];
d72 -> d49  [color=green, key=2, style=dotted];
d72 -> d74  [color=green, key=1, label=table3, style=dashed];
d72 -> d75  [color=green, key=1, label=table3, style=dashed];
d30 -> d31  [key=0, style=solid];
d73 -> d74  [color=green, key=0, style=solid];
d73 -> d50  [color=green, key=2, style=dotted];
d74 -> d75  [color=green, key=0, style=solid];
d74 -> d50  [color=green, key=2, style=dotted];
d75 -> d76  [color=green, key=0, style=solid];
d75 -> d33  [color=green, key=2, style=dotted];
d76 -> d77  [color=green, key=0, style=solid];
d76 -> d48  [color=green, key=2, style=dotted];
d77 -> d78  [color=green, key=0, style=solid];
d77 -> d51  [color=green, key=2, style=dotted];
d78 -> d79  [color=green, key=0, style=solid];
d78 -> d26  [color=green, key=2, style=dotted];
d79 -> d68  [color=blue, key=0, style=bold];
d26 -> d27  [key=0, style=solid];
d81 -> d82  [color=green, key=0, style=solid];
d81 -> d47  [color=green, key=2, style=dotted];
d80 -> d81  [color=green, key=0, style=solid];
d82 -> d83  [color=green, key=0, style=solid];
d82 -> d22  [color=green, key=2, style=dotted];
d83 -> d84  [color=green, key=0, style=solid];
d83 -> d30  [color=green, key=2, style=dotted];
d84 -> d85  [color=green, key=0, style=solid];
d84 -> d49  [color=green, key=2, style=dotted];
d84 -> d86  [color=green, key=1, label=table4, style=dashed];
d85 -> d86  [color=green, key=0, style=solid];
d85 -> d50  [color=green, key=2, style=dotted];
d86 -> d87  [color=green, key=0, style=solid];
d86 -> d33  [color=green, key=2, style=dotted];
d87 -> d88  [color=green, key=0, style=solid];
d87 -> d48  [color=green, key=2, style=dotted];
d88 -> d89  [color=green, key=0, style=solid];
d88 -> d51  [color=green, key=2, style=dotted];
d89 -> d90  [color=green, key=0, style=solid];
d89 -> d26  [color=green, key=2, style=dotted];
d90 -> d80  [color=blue, key=0, style=bold];
d92 -> d93  [color=green, key=0, style=solid];
d92 -> d47  [color=green, key=2, style=dotted];
d91 -> d92  [color=green, key=0, style=solid];
d93 -> d94  [color=green, key=0, style=solid];
d93 -> d22  [color=green, key=2, style=dotted];
d94 -> d95  [color=green, key=0, style=solid];
d94 -> d30  [color=green, key=2, style=dotted];
d95 -> d96  [color=green, key=0, style=solid];
d95 -> d49  [color=green, key=2, style=dotted];
d95 -> d97  [color=green, key=1, label=table5, style=dashed];
d96 -> d97  [color=green, key=0, style=solid];
d96 -> d50  [color=green, key=2, style=dotted];
d97 -> d98  [color=green, key=0, style=solid];
d97 -> d33  [color=green, key=2, style=dotted];
d98 -> d99  [color=green, key=0, style=solid];
d98 -> d52  [color=green, key=2, style=dotted];
d99 -> d100  [color=green, key=0, style=solid];
d99 -> d48  [color=green, key=2, style=dotted];
d100 -> d101  [color=green, key=0, style=solid];
d100 -> d51  [color=green, key=2, style=dotted];
d101 -> d102  [color=green, key=0, style=solid];
d101 -> d26  [color=green, key=2, style=dotted];
d102 -> d91  [color=blue, key=0, style=bold];
d104 -> d105  [color=green, key=0, style=solid];
d104 -> d47  [color=green, key=2, style=dotted];
d103 -> d104  [color=green, key=0, style=solid];
d105 -> d106  [color=green, key=0, style=solid];
d105 -> d22  [color=green, key=2, style=dotted];
d106 -> d107  [color=green, key=0, style=solid];
d106 -> d30  [color=green, key=2, style=dotted];
d107 -> d108  [color=green, key=0, style=solid];
d107 -> d49  [color=green, key=2, style=dotted];
d107 -> d109  [color=green, key=1, label=table6, style=dashed];
d108 -> d109  [color=green, key=0, style=solid];
d108 -> d50  [color=green, key=2, style=dotted];
d109 -> d110  [color=green, key=0, style=solid];
d109 -> d33  [color=green, key=2, style=dotted];
d110 -> d111  [color=green, key=0, style=solid];
d110 -> d48  [color=green, key=2, style=dotted];
d111 -> d112  [color=green, key=0, style=solid];
d111 -> d51  [color=green, key=2, style=dotted];
d112 -> d113  [color=green, key=0, style=solid];
d112 -> d26  [color=green, key=2, style=dotted];
d113 -> d103  [color=blue, key=0, style=bold];
d115 -> d116  [color=green, key=0, style=solid];
d115 -> d47  [color=green, key=2, style=dotted];
d114 -> d115  [color=green, key=0, style=solid];
d116 -> d117  [color=green, key=0, style=solid];
d116 -> d22  [color=green, key=2, style=dotted];
d117 -> d118  [color=green, key=0, style=solid];
d117 -> d30  [color=green, key=2, style=dotted];
d118 -> d119  [color=green, key=0, style=solid];
d118 -> d49  [color=green, key=2, style=dotted];
d118 -> d120  [color=green, key=1, label=table7, style=dashed];
d119 -> d120  [color=green, key=0, style=solid];
d119 -> d50  [color=green, key=2, style=dotted];
d120 -> d121  [color=green, key=0, style=solid];
d120 -> d33  [color=green, key=2, style=dotted];
d121 -> d122  [color=green, key=0, style=solid];
d121 -> d48  [color=green, key=2, style=dotted];
d122 -> d123  [color=green, key=0, style=solid];
d122 -> d51  [color=green, key=2, style=dotted];
d123 -> d124  [color=green, key=0, style=solid];
d123 -> d26  [color=green, key=2, style=dotted];
d124 -> d114  [color=blue, key=0, style=bold];
d134 -> d135  [color=green, key=0, style=solid];
d134 -> d49  [color=green, key=2, style=dotted];
d134 -> d136  [color=green, key=1, label=table8, style=dashed];
d134 -> d137  [color=green, key=1, label=table8, style=dashed];
d134 -> d138  [color=green, key=1, label=table8, style=dashed];
d133 -> d134  [color=green, key=0, style=solid];
d133 -> d51  [key=2, style=dotted];
d135 -> d136  [color=green, key=0, style=solid];
d135 -> d50  [color=green, key=2, style=dotted];
d136 -> d137  [color=green, key=0, style=solid];
d136 -> d50  [color=green, key=2, style=dotted];
d137 -> d138  [color=green, key=0, style=solid];
d137 -> d50  [color=green, key=2, style=dotted];
d138 -> d139  [color=green, key=0, style=solid];
d138 -> d52  [color=green, key=2, style=dotted];
d139 -> d26  [key=2, style=dotted];
d139 -> d140  [key=0, style=solid];
d148 -> d149  [color=green, key=0, style=solid];
d148 -> d49  [color=green, key=2, style=dotted];
d148 -> d150  [color=green, key=1, label=table9, style=dashed];
d148 -> d151  [color=green, key=1, label=table9, style=dashed];
d148 -> d152  [color=green, key=1, label=table9, style=dashed];
d147 -> d148  [color=green, key=0, style=solid];
d147 -> d48  [key=2, style=dotted];
d149 -> d150  [color=green, key=0, style=solid];
d149 -> d50  [color=green, key=2, style=dotted];
d150 -> d151  [color=green, key=0, style=solid];
d150 -> d50  [color=green, key=2, style=dotted];
d151 -> d152  [color=green, key=0, style=solid];
d151 -> d50  [color=green, key=2, style=dotted];
d152 -> d153  [color=green, key=0, style=solid];
d152 -> d51  [color=green, key=2, style=dotted];
d153 -> d26  [key=2, style=dotted];
d153 -> d154  [key=0, style=solid];
d163 -> d164  [color=green, key=0, style=solid];
d163 -> d49  [color=green, key=2, style=dotted];
d163 -> d165  [color=green, key=1, label=table10, style=dashed];
d163 -> d166  [color=green, key=1, label=table10, style=dashed];
d163 -> d167  [color=green, key=1, label=table10, style=dashed];
d163 -> d168  [color=green, key=1, label=table10, style=dashed];
d163 -> d169  [color=green, key=1, label=table10, style=dashed];
d162 -> d163  [color=green, key=0, style=solid];
d162 -> d48  [key=2, style=dotted];
d164 -> d165  [color=green, key=0, style=solid];
d164 -> d50  [color=green, key=2, style=dotted];
d165 -> d166  [color=green, key=0, style=solid];
d165 -> d50  [color=green, key=2, style=dotted];
d166 -> d167  [color=green, key=0, style=solid];
d166 -> d50  [color=green, key=2, style=dotted];
d167 -> d168  [color=green, key=0, style=solid];
d167 -> d50  [color=green, key=2, style=dotted];
d168 -> d169  [color=green, key=0, style=solid];
d168 -> d50  [color=green, key=2, style=dotted];
d169 -> d170  [color=green, key=0, style=solid];
d169 -> d51  [color=green, key=2, style=dotted];
d170 -> d52  [key=2, style=dotted];
d170 -> d171  [key=0, style=solid];
d192 -> d193  [color=green, key=0, style=solid];
d192 -> d49  [color=green, key=2, style=dotted];
d192 -> d194  [color=green, key=1, label=table11, style=dashed];
d192 -> d195  [color=green, key=1, label=table11, style=dashed];
d191 -> d192  [color=green, key=0, style=solid];
d191 -> d52  [key=2, style=dotted];
d193 -> d194  [color=green, key=0, style=solid];
d193 -> d50  [color=green, key=2, style=dotted];
d194 -> d195  [color=green, key=0, style=solid];
d194 -> d50  [color=green, key=2, style=dotted];
d195 -> d196  [color=green, key=0, style=solid];
d195 -> d51  [color=green, key=2, style=dotted];
d196 -> d52  [key=2, style=dotted];
d196 -> d197  [key=0, style=solid];
d208 -> d209  [color=green, key=0, style=solid];
d208 -> d49  [color=green, key=2, style=dotted];
d208 -> d210  [color=green, key=1, label=table12, style=dashed];
d208 -> d211  [color=green, key=1, label=table12, style=dashed];
d208 -> d212  [color=green, key=1, label=table12, style=dashed];
d207 -> d208  [color=green, key=0, style=solid];
d207 -> d52  [key=2, style=dotted];
d209 -> d210  [color=green, key=0, style=solid];
d209 -> d50  [color=green, key=2, style=dotted];
d210 -> d211  [color=green, key=0, style=solid];
d210 -> d50  [color=green, key=2, style=dotted];
d211 -> d212  [color=green, key=0, style=solid];
d211 -> d50  [color=green, key=2, style=dotted];
d212 -> d213  [color=green, key=0, style=solid];
d212 -> d51  [color=green, key=2, style=dotted];
d213 -> d52  [key=2, style=dotted];
d213 -> d214  [key=0, style=solid];
d24 -> d22  [color=blue, key=0, style=bold];
d36 -> d22  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d55 -> d22  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d127 -> d22  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d143 -> d22  [key=2, style=dotted];
d143 -> d144  [key=0, style=solid];
d157 -> d22  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d175 -> d22  [key=2, style=dotted];
d175 -> d176  [key=0, style=solid];
d186 -> d22  [key=2, style=dotted];
d186 -> d187  [key=0, style=solid];
d201 -> d22  [key=2, style=dotted];
d201 -> d202  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d23 -> d25  [key=2, style=dotted];
d35 -> d47  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d54 -> d47  [key=2, style=dotted];
d54 -> d55  [key=0, style=solid];
d126 -> d47  [key=2, style=dotted];
d126 -> d127  [key=0, style=solid];
d142 -> d47  [key=2, style=dotted];
d142 -> d143  [key=0, style=solid];
d156 -> d47  [key=2, style=dotted];
d156 -> d157  [key=0, style=solid];
d174 -> d47  [key=2, style=dotted];
d174 -> d175  [key=0, style=solid];
d185 -> d47  [key=2, style=dotted];
d185 -> d186  [key=0, style=solid];
d200 -> d47  [key=2, style=dotted];
d200 -> d201  [key=0, style=solid];
d37 -> d30  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d45 -> d26  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d56 -> d30  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d66 -> d26  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d128 -> d30  [key=2, style=dotted];
d128 -> d129  [key=0, style=solid];
d144 -> d30  [key=2, style=dotted];
d144 -> d145  [key=0, style=solid];
d158 -> d30  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d171 -> d26  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d176 -> d30  [key=2, style=dotted];
d176 -> d177  [key=0, style=solid];
d182 -> d26  [key=2, style=dotted];
d182 -> d183  [key=0, style=solid];
d187 -> d30  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d197 -> d26  [key=2, style=dotted];
d197 -> d198  [key=0, style=solid];
d202 -> d30  [key=2, style=dotted];
d202 -> d203  [key=0, style=solid];
d214 -> d26  [key=2, style=dotted];
d214 -> d215  [key=0, style=solid];
d32 -> d30  [color=blue, key=0, style=bold];
d31 -> d33  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d40 -> d49  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d42  [color=darkseagreen4, key=1, label=table1, style=dashed];
d40 -> d43  [color=darkseagreen4, key=1, label=table1, style=dashed];
d60 -> d49  [key=2, style=dotted];
d60 -> d61  [key=0, style=solid];
d60 -> d62  [color=darkseagreen4, key=1, label=table2, style=dashed];
d60 -> d63  [color=darkseagreen4, key=1, label=table2, style=dashed];
d60 -> d64  [color=darkseagreen4, key=1, label=table2, style=dashed];
d60 -> d65  [color=darkseagreen4, key=1, label=table2, style=dashed];
d41 -> d50  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d42 -> d50  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d61 -> d50  [key=2, style=dotted];
d61 -> d62  [key=0, style=solid];
d62 -> d50  [key=2, style=dotted];
d62 -> d63  [key=0, style=solid];
d63 -> d50  [key=2, style=dotted];
d63 -> d64  [key=0, style=solid];
d64 -> d50  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d38 -> d33  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d57 -> d33  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d129 -> d33  [key=2, style=dotted];
d129 -> d130  [key=0, style=solid];
d145 -> d33  [key=2, style=dotted];
d145 -> d146  [key=0, style=solid];
d159 -> d33  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d177 -> d33  [key=2, style=dotted];
d177 -> d178  [key=0, style=solid];
d188 -> d33  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d203 -> d33  [key=2, style=dotted];
d203 -> d204  [key=0, style=solid];
d39 -> d48  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d59 -> d48  [key=2, style=dotted];
d59 -> d60  [key=0, style=solid];
d132 -> d48  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d178 -> d48  [key=2, style=dotted];
d178 -> d179  [key=0, style=solid];
d190 -> d48  [key=2, style=dotted];
d190 -> d191  [key=0, style=solid];
d206 -> d48  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d43 -> d51  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d65 -> d51  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d180 -> d51  [key=2, style=dotted];
d180 -> d181  [key=0, style=solid];
d28 -> d26  [color=blue, key=0, style=bold];
d27 -> d28  [key=0, style=solid];
d27 -> d29  [key=2, style=dotted];
d44 -> d52  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d58 -> d52  [key=2, style=dotted];
d58 -> d59  [key=0, style=solid];
d130 -> d52  [key=2, style=dotted];
d130 -> d131  [key=0, style=solid];
d131 -> d52  [key=2, style=dotted];
d131 -> d132  [key=0, style=solid];
d146 -> d52  [key=2, style=dotted];
d146 -> d147  [key=0, style=solid];
d160 -> d52  [key=2, style=dotted];
d160 -> d161  [key=0, style=solid];
d161 -> d52  [key=2, style=dotted];
d161 -> d162  [key=0, style=solid];
d179 -> d52  [key=2, style=dotted];
d179 -> d180  [key=0, style=solid];
d181 -> d52  [key=2, style=dotted];
d181 -> d182  [key=0, style=solid];
d189 -> d52  [key=2, style=dotted];
d189 -> d190  [key=0, style=solid];
d204 -> d52  [key=2, style=dotted];
d204 -> d205  [key=0, style=solid];
d205 -> d52  [key=2, style=dotted];
d205 -> d206  [key=0, style=solid];
d140 -> d125  [color=blue, key=0, style=bold];
d154 -> d141  [color=blue, key=0, style=bold];
d34 -> d35  [key=0, style=solid];
d53 -> d54  [key=0, style=solid];
d125 -> d126  [key=0, style=solid];
d141 -> d142  [key=0, style=solid];
d155 -> d156  [key=0, style=solid];
d173 -> d174  [key=0, style=solid];
d184 -> d185  [key=0, style=solid];
d199 -> d200  [key=0, style=solid];
d46 -> d34  [color=blue, key=0, style=bold];
d67 -> d53  [color=blue, key=0, style=bold];
d172 -> d155  [color=blue, key=0, style=bold];
d183 -> d173  [color=blue, key=0, style=bold];
d198 -> d184  [color=blue, key=0, style=bold];
d215 -> d199  [color=blue, key=0, style=bold];
m0_30 -> m0_28  [key=0, style=solid];
m0_30 -> m0_29  [key=2, style=dotted];
m0_30 -> m0_30  [key=2, style=dotted];
m0_24 -> m0_25  [color=red, key=0, style=solid];
m0_24 -> m0_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_24 -> m0_28  [color=green, key=0, style=solid];
m0_24 -> m0_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_25 -> m0_26  [color=red, key=0, style=solid];
m0_25 -> m0_27  [color=red, key=0, style=solid];
m0_25 -> m0_21  [color=red, key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_27 -> m0_30  [key=2, style=dotted];
m0_27 -> m0_27  [color=darkorchid, key=3, label="Property variable bool IsFinal", style=bold];
m0_26 -> m0_28  [color=red, key=0, style=solid];
m0_26 -> m0_22  [color=red, key=2, style=dotted];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_28 -> m0_30  [color=green, key=0, style=solid];
m0_28 -> m0_23  [color=green, key=2, style=dotted];
m0_28 -> m0_24  [color=blue, key=0, style=bold];
m0_29 -> m0_28  [color=green, key=0, style=solid];
m0_29 -> m0_22  [color=green, key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m0_0 -> m0_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_9  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m0_0 -> m0_10  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_13  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_13  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_14  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_15  [key=2, style=dotted];
m0_12 -> m0_0  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_17 -> m0_19  [color=green, key=0, style=solid];
m0_17 -> m0_21  [color=red, key=2, style=dotted];
m0_17 -> m0_23  [color=green, key=2, style=dotted];
m0_19 -> m0_20  [color=green, key=0, style=solid];
m0_19 -> m0_15  [key=2, style=dotted];
m0_19 -> m0_23  [key=2, style=dotted];
m0_19 -> m0_19  [color=green, key=0, style=solid];
m0_18 -> m0_20  [color=green, key=0, style=solid];
m0_18 -> m0_22  [color=green, key=2, style=dotted];
m0_20 -> m0_20  [color=green, key=0, style=solid];
m0_20 -> m0_25  [color=green, key=2, style=dotted];
m0_20 -> m0_16  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [color=green, key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_35 -> m0_36  [color=green, key=0, style=solid];
m0_35 -> m0_6  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_7  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_8  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_9  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_10  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_11  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_19  [color=green, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_27  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_32  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_35  [color=green, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_35 -> m0_30  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_36 -> m0_33  [key=0, style=solid];
m0_36 -> m0_34  [key=2, style=dotted];
m0_33 -> m0_31  [color=blue, key=0, style=bold];
m0_33 -> m0_34  [color=blue, key=0, style=bold];
m1_86 -> m1_87  [key=0, style=solid];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_42  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_22  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_30  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_43  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_44  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_26  [key=2, style=dotted];
m1_93 -> m1_86  [color=blue, key=0, style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=2, style=dotted];
m1_32 -> m1_30  [color=blue, key=0, style=bold];
m1_94 -> m1_95  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_42  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_22  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_30  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_43  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_44  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_26  [key=2, style=dotted];
m1_101 -> m1_94  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_42  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_22  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_30  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_43  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_44  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_26  [key=2, style=dotted];
m1_41 -> m1_34  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_16  [color=darkorchid, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_42  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_22  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_30  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_43  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_55  [key=2, style=dotted];
m1_50 -> m1_52  [color=darkseagreen4, key=1, label=table1, style=dashed];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_56  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_44  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_26  [key=2, style=dotted];
m1_54 -> m1_45  [color=blue, key=0, style=bold];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_42  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_22  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_30  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_43  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_44  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_26  [key=2, style=dotted];
m1_85 -> m1_78  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_13  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_9  [color=blue, key=0, style=bold];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_42  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_22  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_30  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_43  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_55  [key=2, style=dotted];
m1_62 -> m1_64  [color=darkseagreen4, key=1, label=table2, style=dashed];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_56  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_44  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_26  [key=2, style=dotted];
m1_66 -> m1_57  [color=blue, key=0, style=bold];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_42  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_22  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_30  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_55  [key=2, style=dotted];
m1_71 -> m1_73  [color=darkseagreen4, key=1, label=table3, style=dashed];
m1_71 -> m1_74  [color=darkseagreen4, key=1, label=table3, style=dashed];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_56  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_56  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_43  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_44  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_26  [key=2, style=dotted];
m1_77 -> m1_67  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_0  [key=2, style=dotted];
m1_17 -> m1_14  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_35  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_46  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_58  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_68  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_79  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_87  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_95  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_103  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_111  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> d25  [key=2, style=dotted];
m1_24 -> m1_22  [color=blue, key=0, style=bold];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_42  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_22  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_30  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_43  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_44  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_26  [key=2, style=dotted];
m1_109 -> m1_102  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_28 -> m1_26  [color=blue, key=0, style=bold];
m1_110 -> m1_111  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_42  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_22  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_30  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_43  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_44  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_26  [key=2, style=dotted];
m1_117 -> m1_110  [color=blue, key=0, style=bold];
m1_118 -> m1_36  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_37  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_40  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_47  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_48  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_53  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_59  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_60  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_65  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_69  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_70  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_76  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_80  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_81  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_84  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_88  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_89  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_92  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_96  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_97  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_100  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_104  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_105  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_108  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_112  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_113  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m1_118 -> m1_116  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_34  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_35  [key=2, style=dotted];
m2_28 -> m2_36  [key=2, style=dotted];
m2_28 -> m2_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_35  [key=2, style=dotted];
m2_29 -> m2_37  [key=2, style=dotted];
m2_29 -> m2_36  [key=2, style=dotted];
m2_29 -> m2_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [key=0, style=solid];
m2_30 -> m2_38  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_26  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=2, style=dotted];
m2_20 -> m2_9  [key=2, style=dotted];
m2_21 -> m2_19  [color=blue, key=0, style=bold];
m2_66 -> m2_67  [color=red, key=0, style=solid];
m2_67 -> m2_68  [color=red, key=0, style=solid];
m2_67 -> m2_70  [color=red, key=0, style=solid];
m2_67 -> m2_34  [color=red, key=2, style=dotted];
m2_67 -> m2_38  [color=red, key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_70 -> m2_66  [color=blue, key=0, style=bold];
m2_136 -> m2_137  [key=0, style=solid];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [key=2, style=dotted];
m2_138 -> m2_136  [color=blue, key=0, style=bold];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_131  [color=darkseagreen4, key=1, label=Table, style=dashed];
m2_128 -> m2_132  [color=darkseagreen4, key=1, label=Table, style=dashed];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_107  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_135  [key=0, style=solid];
m2_131 -> m2_131  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m2_132 -> m2_133  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_132  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_130 -> m2_133  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_130 -> m2_134  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_107  [key=2, style=dotted];
m2_134 -> m2_131  [key=0, style=solid];
m2_134 -> m2_134  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_135 -> m2_128  [color=blue, key=0, style=bold];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_8  [key=2, style=dotted];
m2_14 -> m2_9  [key=2, style=dotted];
m2_15 -> m2_13  [color=blue, key=0, style=bold];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=2, style=dotted];
m2_47 -> m2_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_47 -> m2_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> d48  [key=2, style=dotted];
m2_49 -> m2_46  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_8  [key=2, style=dotted];
m2_11 -> m2_9  [key=2, style=dotted];
m2_12 -> m2_10  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_9  [key=2, style=dotted];
m2_7 -> m2_5  [color=blue, key=0, style=bold];
m2_58 -> m2_59  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_8  [key=2, style=dotted];
m2_59 -> m2_9  [key=2, style=dotted];
m2_60 -> m2_58  [color=blue, key=0, style=bold];
m2_71 -> m2_72  [color=red, key=0, style=solid];
m2_72 -> m2_73  [color=red, key=0, style=solid];
m2_72 -> m2_75  [color=red, key=0, style=solid];
m2_72 -> m2_76  [color=red, key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_71  [color=blue, key=0, style=bold];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [color=darkseagreen4, key=1, label=Table, style=dashed];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_95  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_96  [key=2, style=dotted];
m2_94 -> m2_91  [color=blue, key=0, style=bold];
m2_77 -> m2_78  [color=red, key=0, style=solid];
m2_78 -> m2_79  [color=red, key=0, style=solid];
m2_78 -> m2_81  [color=red, key=0, style=solid];
m2_78 -> m2_76  [color=red, key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_81 -> m2_77  [color=blue, key=0, style=bold];
m2_109 -> m2_110  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [key=2, style=dotted];
m2_110 -> m2_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_111 -> m2_109  [color=blue, key=0, style=bold];
m2_97 -> m2_98  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_105  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_106  [key=2, style=dotted];
m2_99 -> m2_102  [color=darkseagreen4, key=1, label=args, style=dashed];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_107  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_108  [key=2, style=dotted];
m2_102 -> m2_86  [key=2, style=dotted];
m2_102 -> m2_102  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_104  [key=0, style=solid];
m2_103 -> m2_101  [key=0, style=solid];
m2_103 -> m2_107  [key=2, style=dotted];
m2_103 -> m2_103  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_104 -> m2_97  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_8  [key=2, style=dotted];
m2_17 -> m2_9  [key=2, style=dotted];
m2_18 -> m2_16  [color=blue, key=0, style=bold];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_121  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_123  [key=2, style=dotted];
m2_127 -> m2_124  [color=blue, key=0, style=bold];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_85  [key=2, style=dotted];
m2_88 -> m2_90  [key=2, style=dotted];
m2_89 -> m2_87  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_22  [key=2, style=dotted];
m2_24 -> m2_9  [key=2, style=dotted];
m2_25 -> m2_23  [color=blue, key=0, style=bold];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [key=2, style=dotted];
m2_83 -> m2_86  [key=2, style=dotted];
m2_84 -> m2_82  [color=blue, key=0, style=bold];
m2_113 -> m2_114  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_39  [color=blue, key=0, style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=2, style=dotted];
m2_44 -> m2_42  [color=blue, key=0, style=bold];
m2_52 -> m2_53  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_52  [color=blue, key=0, style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_55  [color=blue, key=0, style=bold];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_106  [key=2, style=dotted];
m2_114 -> m2_116  [key=2, style=dotted];
m2_115 -> m2_113  [color=blue, key=0, style=bold];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_121  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_122  [key=2, style=dotted];
m2_119 -> m2_123  [key=2, style=dotted];
m2_120 -> m2_117  [color=blue, key=0, style=bold];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_143  [color=darkseagreen4, key=1, label=Table, style=dashed];
m2_140 -> m2_144  [color=darkseagreen4, key=1, label=Table, style=dashed];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_107  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_147  [key=0, style=solid];
m2_143 -> m2_131  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m2_144 -> m2_145  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_144  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_142 -> m2_145  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_142 -> m2_146  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_107  [key=2, style=dotted];
m2_146 -> m2_143  [key=0, style=solid];
m2_146 -> m2_146  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_147 -> m2_140  [color=blue, key=0, style=bold];
m2_148 -> m2_149  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_151  [key=2, style=dotted];
m2_150 -> m2_148  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [color=red, key=0, style=solid];
m2_62 -> m2_63  [color=red, key=0, style=solid];
m2_62 -> m2_65  [color=red, key=0, style=solid];
m2_62 -> m2_34  [color=red, key=2, style=dotted];
m2_62 -> m2_38  [color=red, key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_61  [color=blue, key=0, style=bold];
m2_152 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_6  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_11  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_14  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_17  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_20  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_24  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_27  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_28  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_29  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_30  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_32  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_47  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_59  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_62  [color=red, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_64  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_67  [color=red, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_69  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_72  [color=red, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_74  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_78  [color=red, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_80  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_100  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_101  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_103  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_110  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_118  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_119  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_125  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_126  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_129  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_133  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_137  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_141  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_145  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m2_152 -> m2_149  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_28  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_23 -> m3_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_23 -> m3_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_23 -> m3_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=0, style=solid];
m3_24 -> m3_33  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_35  [key=2, style=dotted];
m3_28 -> m3_30  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m3_28 -> m3_31  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=0, style=solid];
m3_29 -> m3_36  [key=2, style=dotted];
m3_30 -> m3_32  [key=0, style=solid];
m3_30 -> m3_37  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_25 -> m3_32  [key=0, style=solid];
m3_25 -> m3_20  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=0, style=solid];
m3_27 -> m3_32  [key=0, style=solid];
m3_27 -> m3_34  [key=2, style=dotted];
m3_32 -> m3_23  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=0, style=solid];
m3_39 -> m3_33  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_36  [key=2, style=dotted];
m3_41 -> m3_43  [key=2, style=dotted];
m3_40 -> m3_42  [key=0, style=solid];
m3_40 -> m3_20  [key=2, style=dotted];
m3_42 -> m3_38  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_7  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m3_4 -> m3_9  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_4 -> m3_11  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m3_4 -> m3_13  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m3_4 -> m3_14  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m3_4 -> m3_15  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_4 -> m3_16  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m3_4 -> m3_18  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_22  [key=2, style=dotted];
m3_6 -> m3_19  [key=0, style=solid];
m3_6 -> m3_20  [key=2, style=dotted];
m3_8 -> m3_19  [key=0, style=solid];
m3_8 -> m3_20  [key=2, style=dotted];
m3_10 -> m3_19  [key=0, style=solid];
m3_10 -> m3_20  [key=2, style=dotted];
m3_12 -> m3_19  [key=0, style=solid];
m3_12 -> m3_20  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_21  [key=2, style=dotted];
m3_19 -> m3_4  [color=blue, key=0, style=bold];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_48  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_44  [color=blue, key=0, style=bold];
m3_49 -> m3_1  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_2  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_13  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_14  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_15  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_16  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_17  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_18  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_29  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_30  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_31  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_41  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_45  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_49 -> m3_46  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m4_17 -> m4_327  [key=0, style=solid];
m4_327 -> m4_17  [color=blue, key=0, style=bold];
m4_185 -> m4_186  [key=0, style=solid];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_128  [key=2, style=dotted];
m4_186 -> m4_188  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m4_186 -> m4_193  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_128  [key=2, style=dotted];
m4_187 -> m4_189  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m4_187 -> m4_190  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_62  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_36  [key=2, style=dotted];
m4_193 -> m4_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_62  [key=2, style=dotted];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_46  [key=2, style=dotted];
m4_190 -> m4_105  [key=2, style=dotted];
m4_190 -> m4_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_190 -> m4_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_23  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_35  [key=2, style=dotted];
m4_194 -> m4_185  [color=blue, key=0, style=bold];
m4_164 -> m4_165  [key=0, style=solid];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_128  [key=2, style=dotted];
m4_165 -> m4_167  [color=darkseagreen4, key=1, label=filter, style=dashed];
m4_165 -> m4_171  [color=darkseagreen4, key=1, label=filter, style=dashed];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_62  [key=2, style=dotted];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_46  [key=2, style=dotted];
m4_167 -> m4_105  [key=2, style=dotted];
m4_167 -> m4_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_167 -> m4_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_36  [key=2, style=dotted];
m4_171 -> m4_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_23  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_35  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_36  [key=2, style=dotted];
m4_170 -> m4_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_172 -> m4_164  [color=blue, key=0, style=bold];
m4_298 -> m4_299  [key=0, style=solid];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_128  [key=2, style=dotted];
m4_299 -> m4_301  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m4_299 -> m4_307  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> m4_128  [key=2, style=dotted];
m4_300 -> m4_302  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m4_300 -> m4_304  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_62  [key=2, style=dotted];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_36  [key=2, style=dotted];
m4_307 -> m4_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_62  [key=2, style=dotted];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_46  [key=2, style=dotted];
m4_304 -> m4_105  [key=2, style=dotted];
m4_304 -> m4_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_304 -> m4_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_46  [key=2, style=dotted];
m4_303 -> m4_24  [key=2, style=dotted];
m4_303 -> m4_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_23  [key=2, style=dotted];
m4_305 -> m4_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_106  [key=2, style=dotted];
m4_306 -> m4_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_308 -> m4_298  [color=blue, key=0, style=bold];
m4_97 -> m4_98  [key=0, style=solid];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_46  [key=2, style=dotted];
m4_98 -> m4_24  [key=2, style=dotted];
m4_98 -> m4_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_61  [key=2, style=dotted];
m4_99 -> m4_101  [color=darkseagreen4, key=1, label=filter, style=dashed];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_46  [key=2, style=dotted];
m4_100 -> m4_105  [key=2, style=dotted];
m4_100 -> m4_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_100 -> m4_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_62  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_23  [key=2, style=dotted];
m4_102 -> m4_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_106  [key=2, style=dotted];
m4_103 -> m4_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_104 -> m4_97  [color=blue, key=0, style=bold];
m4_23 -> m4_328  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_330  [key=2, style=dotted];
m4_329 -> m4_23  [color=blue, key=0, style=bold];
m4_140 -> m4_141  [key=0, style=solid];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_128  [key=2, style=dotted];
m4_141 -> m4_143  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m4_141 -> m4_145  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m4_141 -> m4_148  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_128  [key=2, style=dotted];
m4_142 -> m4_144  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m4_142 -> m4_146  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m4_142 -> m4_147  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_62  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_46  [key=2, style=dotted];
m4_145 -> m4_84  [key=2, style=dotted];
m4_145 -> m4_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_46  [key=2, style=dotted];
m4_148 -> m4_84  [key=2, style=dotted];
m4_148 -> m4_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_62  [key=2, style=dotted];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_46  [key=2, style=dotted];
m4_146 -> m4_84  [key=2, style=dotted];
m4_146 -> m4_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_46  [key=2, style=dotted];
m4_147 -> m4_84  [key=2, style=dotted];
m4_147 -> m4_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_23  [key=2, style=dotted];
m4_149 -> m4_214  [color=green, key=3, label="Local variable HangFire.Common.States.StateApplyingContext context", style=bold];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_35  [key=2, style=dotted];
m4_151 -> m4_140  [color=blue, key=0, style=bold];
m4_274 -> m4_275  [key=0, style=solid];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_128  [key=2, style=dotted];
m4_275 -> m4_279  [color=darkseagreen4, key=1, label=filter, style=dashed];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_62  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_46  [key=2, style=dotted];
m4_279 -> m4_105  [key=2, style=dotted];
m4_279 -> m4_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_279 -> m4_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_237  [key=2, style=dotted];
m4_277 -> m4_279  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_277 -> m4_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_277 -> m4_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_46  [key=2, style=dotted];
m4_278 -> m4_238  [key=2, style=dotted];
m4_278 -> m4_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_23  [key=2, style=dotted];
m4_280 -> m4_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_106  [key=2, style=dotted];
m4_281 -> m4_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_282 -> m4_274  [color=blue, key=0, style=bold];
m4_53 -> m4_54  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_61  [key=2, style=dotted];
m4_54 -> m4_59  [color=darkseagreen4, key=1, label=filter, style=dashed];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_62  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_36  [key=2, style=dotted];
m4_59 -> m4_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_46  [key=2, style=dotted];
m4_56 -> m4_24  [key=2, style=dotted];
m4_56 -> m4_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_23  [key=2, style=dotted];
m4_57 -> m4_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_24  [key=2, style=dotted];
m4_58 -> m4_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_60 -> m4_53  [color=blue, key=0, style=bold];
m4_228 -> m4_229  [key=0, style=solid];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_128  [key=2, style=dotted];
m4_229 -> m4_235  [color=red, key=1, label=filter, style=dashed];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_62  [key=2, style=dotted];
m4_235 -> m4_236  [color=red, key=0, style=solid];
m4_235 -> m4_36  [color=red, key=2, style=dotted];
m4_235 -> m4_245  [color=red, key=1, label="lambda expression", style=dashed];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_237  [key=2, style=dotted];
m4_231 -> m4_235  [color=red, key=1, label=exception, style=dashed];
m4_231 -> m4_246  [color=red, key=1, label=exception, style=dashed];
m4_231 -> m4_249  [color=red, key=1, label=exception, style=dashed];
m4_231 -> m4_272  [color=green, key=1, label=exception, style=dashed];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_46  [key=2, style=dotted];
m4_232 -> m4_238  [key=2, style=dotted];
m4_232 -> m4_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_23  [key=2, style=dotted];
m4_233 -> m4_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_234 -> m4_235  [color=red, key=0, style=solid];
m4_234 -> m4_24  [key=2, style=dotted];
m4_234 -> m4_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_236 -> m4_228  [color=blue, key=0, style=bold];
m4_251 -> m4_252  [key=0, style=solid];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_128  [key=2, style=dotted];
m4_252 -> m4_254  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m4_252 -> m4_260  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_128  [key=2, style=dotted];
m4_253 -> m4_255  [color=green, key=1, label=innerFilter, style=dashed];
m4_254 -> m4_255  [color=green, key=0, style=solid];
m4_254 -> m4_62  [key=2, style=dotted];
m4_260 -> m4_261  [key=0, style=solid];
m4_260 -> m4_36  [key=2, style=dotted];
m4_260 -> m4_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_255 -> m4_256  [color=green, key=0, style=solid];
m4_255 -> m4_62  [color=green, key=2, style=dotted];
m4_256 -> m4_257  [key=0, style=solid];
m4_256 -> m4_237  [key=2, style=dotted];
m4_256 -> m4_260  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_256 -> m4_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_256 -> m4_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_256 -> m4_290  [color=green, key=1, label=exception, style=dashed];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_46  [key=2, style=dotted];
m4_257 -> m4_238  [key=2, style=dotted];
m4_257 -> m4_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_23  [key=2, style=dotted];
m4_258 -> m4_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_24  [key=2, style=dotted];
m4_259 -> m4_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_261 -> m4_251  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_8  [color=green, key=2, style=dotted];
m4_1 -> m4_6  [color=green, key=1, label=connection, style=dashed];
m4_1 -> m4_1  [color=green, key=3, label="Field variable string NewState", style=bold];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_9  [color=green, key=2, style=dotted];
m4_2 -> m4_14  [color=green, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_6  [color=green, key=1, label=job, style=dashed];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_13  [key=2, style=dotted];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_10  [color=green, key=2, style=dotted];
m4_3 -> m4_6  [color=green, key=1, label=state, style=dashed];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_11  [color=green, key=2, style=dotted];
m4_4 -> m4_6  [color=green, key=1, label=stateMachineFactory, style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_12  [key=2, style=dotted];
m4_7 -> m4_0  [color=blue, key=0, style=bold];
m4_207 -> m4_208  [key=0, style=solid];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_128  [key=2, style=dotted];
m4_208 -> m4_210  [color=darkseagreen4, key=1, label=filter, style=dashed];
m4_208 -> m4_214  [color=darkseagreen4, key=1, label=filter, style=dashed];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_62  [key=2, style=dotted];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_46  [key=2, style=dotted];
m4_210 -> m4_24  [key=2, style=dotted];
m4_210 -> m4_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_36  [key=2, style=dotted];
m4_214 -> m4_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_23  [key=2, style=dotted];
m4_211 -> m4_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_24  [key=2, style=dotted];
m4_212 -> m4_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_36  [key=2, style=dotted];
m4_213 -> m4_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_215 -> m4_207  [color=blue, key=0, style=bold];
m4_73 -> m4_74  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_61  [key=2, style=dotted];
m4_74 -> m4_77  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m4_74 -> m4_78  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_61  [key=2, style=dotted];
m4_75 -> m4_79  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_46  [key=2, style=dotted];
m4_77 -> m4_84  [key=2, style=dotted];
m4_77 -> m4_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_62  [key=2, style=dotted];
m4_78 -> m4_214  [color=green, key=3, label="Local variable HangFire.Common.States.StateApplyingContext context", style=bold];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_46  [key=2, style=dotted];
m4_76 -> m4_84  [key=2, style=dotted];
m4_76 -> m4_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_62  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_46  [key=2, style=dotted];
m4_80 -> m4_24  [key=2, style=dotted];
m4_80 -> m4_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_23  [key=2, style=dotted];
m4_81 -> m4_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_24  [key=2, style=dotted];
m4_82 -> m4_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_83 -> m4_73  [color=blue, key=0, style=bold];
m4_324 -> m4_325  [key=0, style=solid];
m4_14 -> m4_15  [color=green, key=0, style=solid];
m4_15 -> m4_16  [color=green, key=0, style=solid];
m4_15 -> m4_17  [color=green, key=2, style=dotted];
m4_16 -> m4_14  [color=blue, key=0, style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_28 -> m4_26  [color=blue, key=0, style=bold];
m4_37 -> m4_38  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_40  [key=2, style=dotted];
m4_39 -> m4_37  [color=blue, key=0, style=bold];
m4_47 -> m4_48  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_35  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_40  [key=2, style=dotted];
m4_49 -> m4_47  [color=blue, key=0, style=bold];
m4_52 -> m4_50  [color=blue, key=0, style=bold];
m4_63 -> m4_64  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_35  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_40  [key=2, style=dotted];
m4_65 -> m4_63  [color=blue, key=0, style=bold];
m4_68 -> m4_66  [color=blue, key=0, style=bold];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_24  [key=2, style=dotted];
m4_70 -> m4_72  [key=2, style=dotted];
m4_71 -> m4_69  [color=blue, key=0, style=bold];
m4_85 -> m4_86  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_35  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_24  [key=2, style=dotted];
m4_86 -> m4_72  [key=2, style=dotted];
m4_87 -> m4_85  [color=blue, key=0, style=bold];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_24  [key=2, style=dotted];
m4_89 -> m4_72  [key=2, style=dotted];
m4_90 -> m4_88  [color=blue, key=0, style=bold];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_40  [key=2, style=dotted];
m4_93 -> m4_91  [color=blue, key=0, style=bold];
m4_96 -> m4_94  [color=blue, key=0, style=bold];
m4_107 -> m4_108  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_113 -> m4_114  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_35  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_40  [key=2, style=dotted];
m4_109 -> m4_107  [color=blue, key=0, style=bold];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_24  [key=2, style=dotted];
m4_111 -> m4_72  [key=2, style=dotted];
m4_112 -> m4_110  [color=blue, key=0, style=bold];
m4_114 -> m4_115  [key=0, style=solid];
m4_115 -> m4_113  [color=blue, key=0, style=bold];
m4_118 -> m4_116  [color=blue, key=0, style=bold];
m4_129 -> m4_130  [key=0, style=solid];
m4_133 -> m4_134  [color=red, key=0, style=solid];
m4_133 -> m4_180  [color=green, key=0, style=solid];
m4_136 -> m4_137  [key=0, style=solid];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_24  [key=2, style=dotted];
m4_130 -> m4_132  [key=2, style=dotted];
m4_131 -> m4_129  [color=blue, key=0, style=bold];
m4_134 -> m4_135  [color=red, key=0, style=solid];
m4_134 -> m4_40  [color=red, key=2, style=dotted];
m4_135 -> m4_133  [color=blue, key=0, style=bold];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_24  [key=2, style=dotted];
m4_137 -> m4_139  [key=2, style=dotted];
m4_138 -> m4_136  [color=blue, key=0, style=bold];
m4_152 -> m4_153  [key=0, style=solid];
m4_155 -> m4_156  [key=0, style=solid];
m4_158 -> m4_159  [key=0, style=solid];
m4_161 -> m4_162  [key=0, style=solid];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_24  [key=2, style=dotted];
m4_153 -> m4_132  [key=2, style=dotted];
m4_154 -> m4_152  [color=blue, key=0, style=bold];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_24  [key=2, style=dotted];
m4_156 -> m4_132  [key=2, style=dotted];
m4_157 -> m4_155  [color=blue, key=0, style=bold];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_24  [key=2, style=dotted];
m4_159 -> m4_139  [key=2, style=dotted];
m4_160 -> m4_158  [color=blue, key=0, style=bold];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_24  [key=2, style=dotted];
m4_162 -> m4_139  [key=2, style=dotted];
m4_163 -> m4_161  [color=blue, key=0, style=bold];
m4_173 -> m4_174  [key=0, style=solid];
m4_176 -> m4_177  [key=0, style=solid];
m4_179 -> m4_180  [color=red, key=0, style=solid];
m4_179 -> m4_223  [color=green, key=0, style=solid];
m4_182 -> m4_183  [key=0, style=solid];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_24  [key=2, style=dotted];
m4_174 -> m4_132  [key=2, style=dotted];
m4_175 -> m4_173  [color=blue, key=0, style=bold];
m4_177 -> m4_178  [key=0, style=solid];
m4_178 -> m4_176  [color=blue, key=0, style=bold];
m4_180 -> m4_181  [color=red, key=0, style=solid];
m4_180 -> m4_40  [key=2, style=dotted];
m4_180 -> m4_135  [color=green, key=0, style=solid];
m4_181 -> m4_179  [color=blue, key=0, style=bold];
m4_183 -> m4_184  [key=0, style=solid];
m4_183 -> m4_24  [key=2, style=dotted];
m4_183 -> m4_139  [key=2, style=dotted];
m4_184 -> m4_182  [color=blue, key=0, style=bold];
m4_195 -> m4_196  [key=0, style=solid];
m4_198 -> m4_199  [key=0, style=solid];
m4_201 -> m4_202  [key=0, style=solid];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_24  [key=2, style=dotted];
m4_196 -> m4_132  [key=2, style=dotted];
m4_197 -> m4_195  [color=blue, key=0, style=bold];
m4_199 -> m4_200  [key=0, style=solid];
m4_200 -> m4_198  [color=blue, key=0, style=bold];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_24  [key=2, style=dotted];
m4_202 -> m4_139  [key=2, style=dotted];
m4_202 -> m4_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_203 -> m4_201  [color=blue, key=0, style=bold];
m4_204 -> m4_205  [key=0, style=solid];
m4_205 -> m4_206  [key=0, style=solid];
m4_206 -> m4_204  [color=blue, key=0, style=bold];
m4_216 -> m4_217  [key=0, style=solid];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_35  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_222 -> m4_223  [color=red, key=0, style=solid];
m4_222 -> m4_240  [color=green, key=0, style=solid];
m4_225 -> m4_226  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_24  [key=2, style=dotted];
m4_217 -> m4_132  [key=2, style=dotted];
m4_218 -> m4_216  [color=blue, key=0, style=bold];
m4_221 -> m4_219  [color=blue, key=0, style=bold];
m4_223 -> m4_224  [color=red, key=0, style=solid];
m4_223 -> m4_40  [key=2, style=dotted];
m4_223 -> m4_181  [color=green, key=0, style=solid];
m4_224 -> m4_222  [color=blue, key=0, style=bold];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_24  [key=2, style=dotted];
m4_226 -> m4_139  [key=2, style=dotted];
m4_227 -> m4_225  [color=blue, key=0, style=bold];
m4_246 -> m4_247  [color=red, key=0, style=solid];
m4_246 -> m4_24  [color=red, key=2, style=dotted];
m4_246 -> m4_139  [color=red, key=2, style=dotted];
m4_246 -> m4_248  [color=red, key=1, label="lambda expression", style=dashed];
m4_249 -> m4_250  [color=red, key=0, style=solid];
m4_239 -> m4_240  [color=red, key=0, style=solid];
m4_239 -> m4_263  [color=green, key=0, style=solid];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_35  [key=2, style=dotted];
m4_242 -> m4_243  [key=0, style=solid];
m4_245 -> m4_246  [color=red, key=0, style=solid];
m4_240 -> m4_241  [color=red, key=0, style=solid];
m4_240 -> m4_40  [key=2, style=dotted];
m4_240 -> m4_224  [color=green, key=0, style=solid];
m4_241 -> m4_239  [color=blue, key=0, style=bold];
m4_244 -> m4_242  [color=blue, key=0, style=bold];
m4_247 -> m4_245  [color=blue, key=0, style=bold];
m4_248 -> m4_249  [color=red, key=0, style=solid];
m4_248 -> m4_272  [color=green, key=0, style=solid];
m4_250 -> m4_248  [color=blue, key=0, style=bold];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_24  [key=2, style=dotted];
m4_269 -> m4_139  [key=2, style=dotted];
m4_269 -> m4_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_272 -> m4_273  [color=red, key=0, style=solid];
m4_272 -> m4_250  [color=green, key=0, style=solid];
m4_262 -> m4_263  [color=red, key=0, style=solid];
m4_262 -> m4_284  [color=green, key=0, style=solid];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_35  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_268 -> m4_269  [key=0, style=solid];
m4_263 -> m4_264  [color=red, key=0, style=solid];
m4_263 -> m4_40  [key=2, style=dotted];
m4_263 -> m4_241  [color=green, key=0, style=solid];
m4_264 -> m4_262  [color=blue, key=0, style=bold];
m4_267 -> m4_265  [color=blue, key=0, style=bold];
m4_270 -> m4_268  [color=blue, key=0, style=bold];
m4_271 -> m4_272  [color=red, key=0, style=solid];
m4_271 -> m4_290  [color=green, key=0, style=solid];
m4_273 -> m4_271  [color=blue, key=0, style=bold];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_24  [key=2, style=dotted];
m4_287 -> m4_139  [key=2, style=dotted];
m4_287 -> m4_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_290 -> m4_291  [color=red, key=0, style=solid];
m4_290 -> m4_273  [color=green, key=0, style=solid];
m4_283 -> m4_284  [color=red, key=0, style=solid];
m4_283 -> m4_310  [color=green, key=0, style=solid];
m4_286 -> m4_287  [key=0, style=solid];
m4_292 -> m4_293  [key=0, style=solid];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_35  [key=2, style=dotted];
m4_295 -> m4_296  [key=0, style=solid];
m4_284 -> m4_285  [color=red, key=0, style=solid];
m4_284 -> m4_40  [key=2, style=dotted];
m4_284 -> m4_264  [color=green, key=0, style=solid];
m4_285 -> m4_283  [color=blue, key=0, style=bold];
m4_288 -> m4_286  [color=blue, key=0, style=bold];
m4_289 -> m4_290  [color=red, key=0, style=solid];
m4_291 -> m4_289  [color=blue, key=0, style=bold];
m4_293 -> m4_294  [key=0, style=solid];
m4_294 -> m4_292  [color=blue, key=0, style=bold];
m4_297 -> m4_295  [color=blue, key=0, style=bold];
m4_309 -> m4_310  [color=red, key=0, style=solid];
m4_312 -> m4_313  [key=0, style=solid];
m4_315 -> m4_316  [key=0, style=solid];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_35  [key=2, style=dotted];
m4_318 -> m4_319  [key=0, style=solid];
m4_321 -> m4_322  [key=0, style=solid];
m4_310 -> m4_311  [color=red, key=0, style=solid];
m4_310 -> m4_40  [key=2, style=dotted];
m4_310 -> m4_285  [color=green, key=0, style=solid];
m4_311 -> m4_309  [color=blue, key=0, style=bold];
m4_313 -> m4_314  [key=0, style=solid];
m4_313 -> m4_24  [key=2, style=dotted];
m4_313 -> m4_139  [key=2, style=dotted];
m4_314 -> m4_312  [color=blue, key=0, style=bold];
m4_316 -> m4_317  [key=0, style=solid];
m4_317 -> m4_315  [color=blue, key=0, style=bold];
m4_320 -> m4_318  [color=blue, key=0, style=bold];
m4_322 -> m4_323  [key=0, style=solid];
m4_322 -> m4_24  [key=2, style=dotted];
m4_322 -> m4_139  [key=2, style=dotted];
m4_322 -> m4_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_323 -> m4_321  [color=blue, key=0, style=bold];
m4_325 -> m4_326  [key=0, style=solid];
m4_326 -> m4_324  [color=blue, key=0, style=bold];
m4_30 -> m4_31  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_23  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_35  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_36  [key=2, style=dotted];
m4_33 -> m4_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_34 -> m4_30  [color=blue, key=0, style=bold];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_46  [key=2, style=dotted];
m4_42 -> m4_24  [key=2, style=dotted];
m4_42 -> m4_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_23  [key=2, style=dotted];
m4_43 -> m4_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_24  [key=2, style=dotted];
m4_44 -> m4_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_44 -> m4_214  [color=green, key=3, label="Local variable HangFire.Common.States.StateApplyingContext context", style=bold];
m4_45 -> m4_41  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_23  [key=2, style=dotted];
m4_19 -> m4_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_24  [key=2, style=dotted];
m4_20 -> m4_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_25  [key=2, style=dotted];
m4_22 -> m4_18  [color=blue, key=0, style=bold];
m4_119 -> m4_120  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_128  [key=2, style=dotted];
m4_120 -> m4_122  [color=darkseagreen4, key=1, label=filter, style=dashed];
m4_120 -> m4_124  [color=darkseagreen4, key=1, label=filter, style=dashed];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_62  [key=2, style=dotted];
m4_122 -> m4_123  [color=red, key=0, style=solid];
m4_122 -> m4_46  [key=2, style=dotted];
m4_122 -> m4_84  [key=2, style=dotted];
m4_122 -> m4_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_122 -> m4_214  [color=green, key=3, label="Local variable HangFire.Common.States.StateApplyingContext context", style=bold];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_46  [key=2, style=dotted];
m4_124 -> m4_84  [key=2, style=dotted];
m4_124 -> m4_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_123 -> m4_124  [color=red, key=0, style=solid];
m4_123 -> m4_46  [color=red, key=2, style=dotted];
m4_123 -> m4_84  [color=red, key=2, style=dotted];
m4_123 -> m4_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_23  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_35  [key=2, style=dotted];
m4_127 -> m4_119  [color=blue, key=0, style=bold];
m4_331 -> m4_2  [color=green, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_15  [color=green, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_33  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_42  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_44  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_80  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_121  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_123  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_126  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_143  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_144  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_149  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_150  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_166  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_168  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_169  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_170  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_189  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_191  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_209  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_211  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_212  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_220  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_213  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_230  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_232  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_233  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_234  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_243  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_254  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_255  [color=green, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_257  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_258  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_259  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_266  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_276  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_278  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_280  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_281  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_296  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_301  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_302  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_303  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_305  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_306  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_319  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_331 -> m4_328  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m4_332 -> m4_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_333 -> m4_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_334 -> m4_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_335 -> m4_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_336 -> m4_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_337 -> m4_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_338 -> m4_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_339 -> m4_246  [color=red, key=1, label=exception, style=dashed];
m4_339 -> m4_249  [color=red, key=1, label=exception, style=dashed];
m4_339 -> m4_272  [color=green, key=1, label=exception, style=dashed];
m4_340 -> m4_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_341 -> m4_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_341 -> m4_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_341 -> m4_290  [color=green, key=1, label=exception, style=dashed];
m4_342 -> m4_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_342 -> m4_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_343 -> m4_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_344 -> m4_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_11  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_0  [color=blue, key=0, style=bold];
m5_12 -> m5_1  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_12 -> m5_2  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_12 -> m5_3  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_12 -> m5_4  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_12 -> m5_5  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_12 -> m5_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_12 -> m5_7  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_12 -> m5_8  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_12 -> m5_9  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
}
