digraph  {
m0_8 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m0_37 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="89-89"];
m0_38 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="x == null && y == null", span="92-92"];
m0_40 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="x == null", span="96-96"];
m0_42 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="y == null", span="100-100"];
m0_44 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="x.Order < y.Order", span="107-107"];
m0_46 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="x.Order > y.Order", span="111-111"];
m0_48 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="x.Scope < y.Scope", span="118-118"];
m0_50 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="x.Scope > y.Scope", span="122-122"];
m0_39 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="return 0;", span="94-94"];
m0_41 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="return -1;", span="98-98"];
m0_43 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="return 1;", span="102-102"];
m0_45 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="return -1;", span="109-109"];
m0_47 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="return 1;", span="113-113"];
m0_49 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="return -1;", span="120-120"];
m0_51 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="return 1;", span="124-124"];
m0_52 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="return 0;", span="127-127"];
m0_53 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="89-89"];
m0_2 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
m0_3 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
m0_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m0_0 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34"];
m0_1 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34"];
m0_4 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48"];
m0_5 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="BackgroundJobServerOptions.cs", label="IEnumerable<JobFilter> combinedFilters =\r\n                Items.SelectMany(fp => fp.GetFilters(job))\r\n                    .OrderBy(filter => filter, _filterComparer)", span="50-52"];
m0_6 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="BackgroundJobServerOptions.cs", label="return RemoveDuplicates(combinedFilters.Reverse()).Reverse();", span="55-55"];
m0_7 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48"];
m0_31 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m0_11 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="58-58"];
m0_19 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="BackgroundJobServerOptions.cs", label="var visitedTypes = new HashSet<Type>()", span="61-61"];
m0_24 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="BackgroundJobServerOptions.cs", label="yield return filter;", span="70-70"];
m0_20 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="BackgroundJobServerOptions.cs", label=filters, span="63-63"];
m0_23 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="BackgroundJobServerOptions.cs", label="!visitedTypes.Contains(filterInstanceType) || AllowMultiple(filterInstance)", span="68-68"];
m0_25 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="BackgroundJobServerOptions.cs", label="visitedTypes.Add(filterInstanceType)", span="71-71"];
m0_21 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="BackgroundJobServerOptions.cs", label="var filterInstance = filter.Instance", span="65-65"];
m0_22 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="BackgroundJobServerOptions.cs", label="var filterInstanceType = filterInstance.GetType()", span="66-66"];
m0_26 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="58-58"];
m0_15 [cluster="Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", span="32-32"];
m0_28 [cluster="object.GetType()", file="BackgroundJobServerOptions.cs", label="Entry object.GetType()", span="0-0"];
m0_29 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m0_16 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="52-52"];
m0_13 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="fp.GetFilters(job)", span="51-51"];
m0_12 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="51-51"];
m0_14 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="51-51"];
m0_17 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label=filter, span="52-52"];
m0_18 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="52-52"];
m0_30 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="76-76"];
m0_32 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="BackgroundJobServerOptions.cs", label="var mvcFilter = filterInstance as IJobFilter", span="78-78"];
m0_33 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="BackgroundJobServerOptions.cs", label="mvcFilter == null", span="79-79"];
m0_35 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="BackgroundJobServerOptions.cs", label="return mvcFilter.AllowMultiple;", span="84-84"];
m0_34 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="BackgroundJobServerOptions.cs", label="return true;", span="81-81"];
m0_36 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="76-76"];
m0_9 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0"];
m0_27 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m0_54 [file="BackgroundJobServerOptions.cs", label="Hangfire.Common.JobFilterProviderCollection", span=""];
m0_55 [file="BackgroundJobServerOptions.cs", label="Hangfire.Common.Job", span=""];
m2_39 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", file="CountersAggregator.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", span="54-54"];
m2_40 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", file="CountersAggregator.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", span="54-54"];
m2_23 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="CountersAggregator.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="40-40"];
m2_0 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="CountersAggregator.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="18-18"];
m2_1 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="CountersAggregator.cs", label="var methodInfo = typeof(SucceededStateHandlerFacts)\r\n                .GetMethod(''TestMethod'')", span="20-21"];
m2_2 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="CountersAggregator.cs", label="var jobMethod = new JobMethod(typeof(SucceededStateHandlerFacts), methodInfo)", span="22-22"];
m2_3 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="CountersAggregator.cs", label="var stateContext = new StateContext(JobId, jobMethod)", span="23-23"];
m2_4 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="CountersAggregator.cs", label="var stateMock = new Mock<JobState>()", span="24-24"];
m2_5 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="CountersAggregator.cs", label="_context = new StateApplyingContext(stateContext, _transactionMock.Object, stateMock.Object)", span="26-26"];
m2_6 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="CountersAggregator.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="18-18"];
m2_8 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="CountersAggregator.cs", label="Entry HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48"];
m2_34 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="CountersAggregator.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="46-46"];
m2_29 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="CountersAggregator.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", span="46-46"];
m2_30 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="CountersAggregator.cs", label="var handler = new SucceededState.Handler()", span="48-48"];
m2_31 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="CountersAggregator.cs", label="handler.Unapply(_context)", span="49-49"];
m2_32 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="CountersAggregator.cs", label="_transactionMock.Verify(x => x.DecrementCounter(''stats:succeeded''), Times.Once)", span="51-51"];
m2_33 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="CountersAggregator.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", span="46-46"];
m2_17 [cluster="Unk.Equal", file="CountersAggregator.cs", label="Entry Unk.Equal", span=""];
m2_18 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="CountersAggregator.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", span="37-37"];
m2_19 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="CountersAggregator.cs", label="var handler = new SucceededState.Handler()", span="39-39"];
m2_20 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="CountersAggregator.cs", label="handler.Apply(_context)", span="40-40"];
m2_21 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="CountersAggregator.cs", label="_transactionMock.Verify(x => x.IncrementCounter(''stats:succeeded''), Times.Once)", span="42-42"];
m2_22 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="CountersAggregator.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", span="37-37"];
m2_11 [cluster="StateApplyingContext.cstr", file="CountersAggregator.cs", label="Entry StateApplyingContext.cstr", span=""];
m2_38 [cluster="Unk.DecrementCounter", file="CountersAggregator.cs", label="Entry Unk.DecrementCounter", span=""];
m2_28 [cluster="Unk.IncrementCounter", file="CountersAggregator.cs", label="Entry Unk.IncrementCounter", span=""];
m2_24 [cluster="Unk.Verify", file="CountersAggregator.cs", label="Entry Unk.Verify", span=""];
m2_9 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="CountersAggregator.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m2_35 [cluster="lambda expression", file="CountersAggregator.cs", label="Entry lambda expression", span="51-51"];
m2_25 [cluster="lambda expression", file="CountersAggregator.cs", label="Entry lambda expression", span="42-42"];
m2_26 [cluster="lambda expression", file="CountersAggregator.cs", label="x.IncrementCounter(''stats:succeeded'')", span="42-42"];
m2_27 [cluster="lambda expression", file="CountersAggregator.cs", label="Exit lambda expression", span="42-42"];
m2_36 [cluster="lambda expression", file="CountersAggregator.cs", label="x.DecrementCounter(''stats:succeeded'')", span="51-51"];
m2_37 [cluster="lambda expression", file="CountersAggregator.cs", label="Exit lambda expression", span="51-51"];
m2_10 [cluster="Mock<JobState>.cstr", file="CountersAggregator.cs", label="Entry Mock<JobState>.cstr", span=""];
m2_7 [cluster="System.Type.GetMethod(string)", file="CountersAggregator.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m2_16 [cluster="HangFire.States.SucceededState.Handler.Handler()", file="CountersAggregator.cs", label="Entry HangFire.States.SucceededState.Handler.Handler()", span="38-38"];
m2_12 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="CountersAggregator.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", span="30-30"];
m2_13 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="CountersAggregator.cs", label="var handler = new SucceededState.Handler()", span="32-32"];
m2_14 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="CountersAggregator.cs", label="Assert.Equal(SucceededState.Name, handler.StateName)", span="33-33"];
m2_15 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="CountersAggregator.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", span="30-30"];
m2_41 [file="CountersAggregator.cs", label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", span=""];
m4_0 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="DefaultJobCreationProcessFacts.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="22-22"];
m4_1 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="DefaultJobCreationProcessFacts.cs", label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="22-22"];
m4_2 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="DefaultJobCreationProcessFacts.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="26-26"];
m4_3 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="DefaultJobCreationProcessFacts.cs", label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="26-26"];
m5_16 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51"];
m5_17 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="53-53"];
m5_18 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51"];
m5_58 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_190 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m5_191 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                from,\r\n                from + perPage - 1)", span="290-293"];
m5_192 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''EnqueuedAt'', ''State'' },\r\n                (method, job, state) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="295-305"];
m5_193 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m5_239 [cluster="Dictionary<string, string>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry Dictionary<string, string>.cstr", span=""];
m5_426 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="91-91"];
m5_208 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="394-394"];
m5_256 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var endDate = DateTime.UtcNow", span="397-397"];
m5_263 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="405-405"];
m5_264 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="406-406"];
m5_257 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var dates = new List<DateTime>()", span="398-398"];
m5_265 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var result = new Dictionary<DateTime, long>()", span="408-408"];
m5_260 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="dates.Add(endDate)", span="401-401"];
m5_273 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="return result;", span="420-420"];
m5_261 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="endDate = endDate.AddHours(-1)", span="402-402"];
m5_259 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i < 24", span="399-399"];
m5_269 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="412-412"];
m5_258 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var i = 0", span="399-399"];
m5_267 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i < dates.Count", span="409-409"];
m5_271 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="result.Add(dates[i], value)", span="417-417"];
m5_266 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var i = 0", span="409-409"];
m5_262 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i++", span="399-399"];
m5_268 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="long value", span="411-411"];
m5_270 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="value = 0", span="414-414"];
m5_272 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i++", span="409-409"];
m5_274 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="394-394"];
m5_204 [cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m5_92 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="423-423"];
m5_285 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var endDate = DateTime.UtcNow.Date", span="426-426"];
m5_292 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="437-437"];
m5_293 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="439-439"];
m5_287 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var dates = new List<DateTime>()", span="428-428"];
m5_291 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="436-436"];
m5_294 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var result = new Dictionary<DateTime, long>()", span="441-441"];
m5_302 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="return result;", span="452-452"];
m5_286 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var startDate = endDate.AddDays(-7)", span="427-427"];
m5_288 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="startDate <= endDate", span="430-430"];
m5_289 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="dates.Add(endDate)", span="432-432"];
m5_290 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="endDate = endDate.AddDays(-1)", span="433-433"];
m5_298 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="445-445"];
m5_300 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="result.Add(dates[i], value)", span="449-449"];
m5_296 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i < stringDates.Count", span="442-442"];
m5_295 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var i = 0", span="442-442"];
m5_297 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="long value", span="444-444"];
m5_299 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="value = 0", span="447-447"];
m5_301 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i++", span="442-442"];
m5_303 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="423-423"];
m5_129 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m5_278 [cluster="Unk.TryParse", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.TryParse", span=""];
m5_37 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7"];
m5_85 [cluster="KeyValuePair<string, ScheduleDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry KeyValuePair<string, ScheduleDto>.cstr", span=""];
m5_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m5_38 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56"];
m5_128 [cluster="int.Parse(string)", file="DefaultJobPerformanceProcess.cs", label="Entry int.Parse(string)", span="0-0"];
m5_209 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334"];
m5_210 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="DefaultJobPerformanceProcess.cs", label="return GetHourlyTimelineStats(_redis, ''failed'');", span="336-336"];
m5_211 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334"];
m5_359 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="516-516"];
m5_361 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="520-520"];
m5_362 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="var pipeline = _redis.CreatePipeline()", span="522-522"];
m5_360 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="var stats = new StatisticsDto()", span="518-518"];
m5_369 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label=queues, span="548-548"];
m5_363 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:servers''),\r\n                    x => stats.Servers = x)", span="524-526"];
m5_364 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:queues''),\r\n                    x => stats.Queues = x)", span="528-530"];
m5_365 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                    x => stats.Scheduled = x)", span="532-534"];
m5_366 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:processing''),\r\n                    x => stats.Processing = x)", span="536-538"];
m5_367 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetValue(''hangfire:stats:succeeded''),\r\n                    x => stats.Succeeded = long.Parse(x ?? ''0''))", span="540-542"];
m5_368 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:failed''),\r\n                    x => stats.Failed = x)", span="544-546"];
m5_371 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                        x => stats.Enqueued += x)", span="551-553"];
m5_372 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="556-556"];
m5_373 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="return stats;", span="559-559"];
m5_370 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="var queueName = queue", span="550-550"];
m5_374 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="516-516"];
m5_31 [cluster="Unk.GetJobsWithProperties", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m5_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m5_350 [cluster="KeyValuePair<string, T>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m5_60 [cluster="Unk.CreatePipeline", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.CreatePipeline", span=""];
m5_78 [cluster="Unk.GetValueFromHash", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetValueFromHash", span=""];
m5_331 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m5_212 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339"];
m5_213 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var job = _redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="341-341"];
m5_217 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var historyList = _redis.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId))", span="347-348"];
m5_232 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="return new JobDetailsDto\r\n            {\r\n                Method = TryToGetMethod(job[''Type''], job[''Method''], job[''ParameterTypes'']),\r\n                Arguments = job.ContainsKey(''Arguments'') ? JobHelper.FromJson<string[]>(job[''Arguments'']) : null,\r\n                OldFormatArguments =\r\n                    job.ContainsKey(''Args'') ? JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']) : null,\r\n                State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                CreatedAt =\r\n                    job.ContainsKey(''CreatedAt'') ? JobHelper.FromStringTimestamp(job[''CreatedAt'']) : (DateTime?) null,\r\n                Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                History = stateHistory\r\n            };", span="380-391"];
m5_214 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="job.Count == 0", span="342-342"];
m5_228 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="!job.ContainsKey(''Method'')", span="377-377"];
m5_229 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="job.Add(''Method'', null)", span="377-377"];
m5_230 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="!job.ContainsKey(''ParameterTypes'')", span="378-378"];
m5_231 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="job.Add(''ParameterTypes'', null)", span="378-378"];
m5_216 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var hiddenProperties = new[]\r\n            { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''Args'', ''State'', ''CreatedAt'' }", span="344-345"];
m5_218 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var history = historyList\r\n                .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                .ToList()", span="350-352"];
m5_219 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var stateHistory = new List<StateHistoryDto>(history.Count)", span="354-354"];
m5_215 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="return null;", span="342-342"];
m5_220 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label=history, span="355-355"];
m5_227 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="stateHistory.Add(dto)", span="373-373"];
m5_221 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var dto = new StateHistoryDto\r\n                {\r\n                    StateName = entry[''State''],\r\n                    Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                    CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                }", span="357-362"];
m5_222 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var stateData = new Dictionary<string, string>(entry)", span="367-367"];
m5_226 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="dto.Data = stateData", span="372-372"];
m5_223 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="stateData.Remove(''State'')", span="368-368"];
m5_224 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="stateData.Remove(''Reason'')", span="369-369"];
m5_225 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="stateData.Remove(''CreatedAt'')", span="370-370"];
m5_233 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339"];
m5_237 [cluster="Unk.ContainsKey", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ContainsKey", span=""];
m5_352 [cluster="Unk.selector", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.selector", span=""];
m5_356 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="511-511"];
m5_357 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="DefaultJobPerformanceProcess.cs", label="return _redis.GetListCount(''hangfire:succeeded'');", span="513-513"];
m5_358 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="511-511"];
m5_336 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_375 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2"];
m5_57 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m5_127 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5"];
m5_235 [cluster="List<StateHistoryDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry List<StateHistoryDto>.cstr", span=""];
m5_244 [cluster="Unk.Where", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Where", span=""];
m5_304 [cluster="System.DateTime.AddDays(double)", file="DefaultJobPerformanceProcess.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m5_351 [cluster="Unk.TrueForAll", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.TrueForAll", span=""];
m5_88 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="562-562"];
m5_421 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="DefaultJobPerformanceProcess.cs", label="return JobMethod.Deserialize(new InvocationData\r\n                {\r\n                    Type = type,\r\n                    Method = method,\r\n                    ParameterTypes = parameterTypes\r\n                });", span="567-572"];
m5_423 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="DefaultJobPerformanceProcess.cs", label="return null;", span="576-576"];
m5_422 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="DefaultJobPerformanceProcess.cs", label=Exception, span="574-574"];
m5_424 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="562-562"];
m5_6 [cluster="Unk.Dispose", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Dispose", span=""];
m5_241 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6"];
m5_332 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="479-479"];
m5_34 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="78-85"];
m5_40 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="85-85"];
m5_35 [cluster="lambda expression", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="1: new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }", span="78-85"];
m5_36 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="78-85"];
m5_390 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="533-533"];
m5_396 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="537-537"];
m5_410 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="545-545"];
m5_42 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="85-85"];
m5_41 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.Value.StartedAt", span="85-85"];
m5_125 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }", span="181-188"];
m5_136 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                }", span="203-211"];
m5_145 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="226-231"];
m5_187 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="268-273"];
m5_195 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="300-305"];
m5_202 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                }", span="320-326"];
m5_83 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="126-134"];
m5_135 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="203-211"];
m5_144 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="226-231"];
m5_186 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="268-273"];
m5_194 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="300-305"];
m5_201 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="320-326"];
m5_246 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="389-389"];
m5_250 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="389-389"];
m5_253 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="389-389"];
m5_389 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="533-533"];
m5_391 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="533-533"];
m5_395 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="537-537"];
m5_397 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="537-537"];
m5_409 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="545-545"];
m5_411 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="545-545"];
m5_124 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="181-188"];
m5_126 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="181-188"];
m5_137 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="203-211"];
m5_146 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="226-231"];
m5_188 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="268-273"];
m5_196 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="300-305"];
m5_203 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="320-326"];
m5_82 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="126-134"];
m5_84 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="126-134"];
m5_338 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="484-484"];
m5_328 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray())", span="476-478"];
m5_175 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="253-253"];
m5_181 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="257-257"];
m5_416 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="552-552"];
m5_80 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="states.Add(job.Key, x)", span="119-119"];
m5_66 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="110-112"];
m5_71 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="113-113"];
m5_75 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="116-118"];
m5_79 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="119-119"];
m5_309 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="437-437"];
m5_122 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="queues.Add(name, x)", span="175-175"];
m5_111 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="167-169"];
m5_114 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="170-170"];
m5_117 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="173-174"];
m5_121 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="175-175"];
m5_169 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="248-249"];
m5_168 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="248-249"];
m5_171 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="250-250"];
m5_174 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="253-253"];
m5_177 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="254-254"];
m5_180 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="257-257"];
m5_183 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="258-258"];
m5_348 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State))", span="503-507"];
m5_281 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="405-405"];
m5_247 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="!hiddenProperties.Contains(x.Key)", span="389-389"];
m5_118 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name))", span="173-174"];
m5_248 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="389-389"];
m5_252 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="389-389"];
m5_251 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.Key", span="389-389"];
m5_255 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="389-389"];
m5_254 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.Value", span="389-389"];
m5_381 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Servers = x", span="526-526"];
m5_387 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Queues = x", span="530-530"];
m5_393 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Scheduled = x", span="534-534"];
m5_399 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Processing = x", span="538-538"];
m5_406 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="542-542"];
m5_413 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Failed = x", span="546-546"];
m5_419 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Enqueued += x", span="553-553"];
m5_376 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="525-525"];
m5_380 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="526-526"];
m5_383 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="529-529"];
m5_386 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="530-530"];
m5_392 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="534-534"];
m5_398 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="538-538"];
m5_401 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="541-541"];
m5_405 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="542-542"];
m5_412 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="546-546"];
m5_415 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="552-552"];
m5_418 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="553-553"];
m5_115 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="servers.Add(name, x)", span="170-170"];
m5_72 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="jobs.Add(job.Key, x)", span="113-113"];
m5_345 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="493-502"];
m5_337 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="484-484"];
m5_339 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="484-484"];
m5_327 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="476-478"];
m5_329 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="476-478"];
m5_176 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="253-253"];
m5_182 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="257-257"];
m5_417 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="552-552"];
m5_67 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' })", span="110-112"];
m5_76 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State'')", span="116-118"];
m5_81 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="119-119"];
m5_68 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="110-112"];
m5_73 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="113-113"];
m5_77 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="116-118"];
m5_308 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="437-437"];
m5_310 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="437-437"];
m5_112 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="167-169"];
m5_123 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="175-175"];
m5_113 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="167-169"];
m5_116 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="170-170"];
m5_119 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="173-174"];
m5_170 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="248-249"];
m5_173 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="250-250"];
m5_172 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="firstJobIds = x", span="250-250"];
m5_179 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="254-254"];
m5_178 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="length = x", span="254-254"];
m5_185 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="258-258"];
m5_184 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="dequeued = x", span="258-258"];
m5_333 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="!jobs.ContainsKey(id)", span="479-479"];
m5_334 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="jobs.Add(id, x)", span="479-479"];
m5_341 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="!states.ContainsKey(id)", span="485-485"];
m5_342 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="states.Add(id, x)", span="485-485"];
m5_340 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="485-485"];
m5_344 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="493-502"];
m5_347 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="503-507"];
m5_349 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="503-507"];
m5_353 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="505-505"];
m5_280 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="405-405"];
m5_282 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="405-405"];
m5_382 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="526-526"];
m5_388 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="530-530"];
m5_394 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="534-534"];
m5_400 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="538-538"];
m5_407 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="542-542"];
m5_414 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="546-546"];
m5_420 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="553-553"];
m5_378 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="525-525"];
m5_377 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSetCount(''hangfire:servers'')", span="525-525"];
m5_385 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="529-529"];
m5_384 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSetCount(''hangfire:queues'')", span="529-529"];
m5_403 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="541-541"];
m5_402 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="541-541"];
m5_346 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="493-502"];
m5_305 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="436-436"];
m5_335 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="479-479"];
m5_343 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="485-485"];
m5_355 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="505-505"];
m5_354 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="y == null", span="505-505"];
m5_306 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.ToString(''yyyy-MM-dd'')", span="436-436"];
m5_307 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="436-436"];
m5_29 [cluster="Unk.GetRangeFromSortedSet", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m5_166 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m5_167 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_65 [cluster="Unk.ToList", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ToList", span=""];
m5_69 [cluster="Unk.Format", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Format", span=""];
m5_61 [cluster="Unk.QueueCommand", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.QueueCommand", span=""];
m5_0 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31"];
m5_1 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="DefaultJobPerformanceProcess.cs", label="_redis = redis", span="33-33"];
m5_2 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31"];
m5_130 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191"];
m5_131 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="var failedJobIds = _redis.GetRangeFromSortedSetDesc(\r\n                ''hangfire:failed'',\r\n                from,\r\n                from + count - 1)", span="193-196"];
m5_132 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                failedJobIds,\r\n                null,\r\n                new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                (method, job, state) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                });", span="198-211"];
m5_133 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191"];
m5_283 [cluster="System.DateTime.ToString(string)", file="DefaultJobPerformanceProcess.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m5_86 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m5_164 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m5_277 [cluster="Unk.ElementAt", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ElementAt", span=""];
m5_96 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148"];
m5_97 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="150-150"];
m5_102 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="var pipeline = _redis.CreatePipeline()", span="160-160"];
m5_98 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="serverNames.Count == 0", span="152-152"];
m5_103 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label=serverNames, span="162-162"];
m5_108 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="return serverNames.Select(x => new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }).ToList();", span="181-188"];
m5_101 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="var queues = new Dictionary<string, List<string>>()", span="158-158"];
m5_105 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                        x => servers.Add(name, x))", span="166-170"];
m5_106 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name)),\r\n                        x => queues.Add(name, x))", span="172-175"];
m5_107 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="178-178"];
m5_100 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="var servers = new Dictionary<string, List<string>>()", span="157-157"];
m5_99 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="return new List<ServerDto>();", span="154-154"];
m5_104 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="var name = serverName", span="164-164"];
m5_109 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148"];
m5_143 [cluster="Unk.GetRangeFromList", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetRangeFromList", span=""];
m5_139 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214"];
m5_140 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="var succeededJobIds = _redis.GetRangeFromList(\r\n                ''hangfire:succeeded'',\r\n                from,\r\n                from + count - 1)", span="216-219"];
m5_141 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                succeededJobIds,\r\n                null,\r\n                new[] { ''SucceededAt'', ''State'' },\r\n                (method, job, state) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="221-231"];
m5_142 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214"];
m5_89 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138"];
m5_90 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="return GetTimelineStats(_redis, ''succeeded'');", span="140-140"];
m5_91 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138"];
m5_62 [cluster="Unk.Flush", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Flush", span=""];
m5_408 [cluster="Unk.Parse", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Parse", span=""];
m5_74 [cluster="Unk.Add", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Add", span=""];
m5_39 [cluster="string.Equals(string, System.StringComparison)", file="DefaultJobPerformanceProcess.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m5_19 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56"];
m5_20 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="DefaultJobPerformanceProcess.cs", label="return _redis.GetSortedSetCount(''hangfire:failed'');", span="58-58"];
m5_21 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56"];
m5_275 [cluster="System.DateTime.AddHours(double)", file="DefaultJobPerformanceProcess.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m5_25 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66"];
m5_27 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="0: return new JobList<ProcessingJobDto>(GetJobsWithProperties(_redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                (method, job, state) => new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }).OrderBy(x => x.Value.StartedAt).ToList());", span="74-85"];
m5_26 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="var jobIds = _redis.GetRangeFromSortedSet(\r\n                ''hangfire:processing'',\r\n                from,\r\n                from + count - 1)", span="69-72"];
m5_28 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66"];
m5_10 [cluster="Unk.GetSortedSetCount", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetSortedSetCount", span=""];
m5_147 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7"];
m5_22 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61"];
m5_23 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="DefaultJobPerformanceProcess.cs", label="return _redis.GetSortedSetCount(''hangfire:processing'');", span="63-63"];
m5_24 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61"];
m5_330 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m5_240 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m5_242 [cluster="Unk.TryToGetMethod", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.TryToGetMethod", span=""];
m5_326 [cluster="JobList<T>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry JobList<T>.cstr", span=""];
m5_279 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_205 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329"];
m5_206 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="DefaultJobPerformanceProcess.cs", label="return GetHourlyTimelineStats(_redis, ''succeeded'');", span="331-331"];
m5_207 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329"];
m5_165 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="455-455"];
m5_312 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="462-462"];
m5_311 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="jobIds.Count == 0", span="462-462"];
m5_316 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="var pipeline = redis.CreatePipeline()", span="469-469"];
m5_313 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="464-464"];
m5_314 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="465-465"];
m5_315 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="properties = properties ?? new string[0]", span="467-467"];
m5_317 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label=jobIds, span="471-471"];
m5_320 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="stateProperties != null", span="481-481"];
m5_321 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="483-485"];
m5_323 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="492-508"];
m5_318 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="var id = jobId", span="473-473"];
m5_319 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="475-479"];
m5_322 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="489-489"];
m5_324 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="455-455"];
m5_284 [cluster="string.Format(string, object, object)", file="DefaultJobPerformanceProcess.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_234 [cluster="Unk.GetAllEntriesFromHash", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m5_245 [cluster="Unk.ToDictionary", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ToDictionary", span=""];
m5_238 [cluster="Unk.FromStringTimestamp", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.FromStringTimestamp", span=""];
m5_325 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m5_379 [cluster="Unk.GetSetCount", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetSetCount", span=""];
m5_87 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m5_14 [cluster="string.Format(string, object)", file="DefaultJobPerformanceProcess.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_93 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143"];
m5_94 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="return GetTimelineStats(_redis, ''failed'');", span="145-145"];
m5_95 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143"];
m5_189 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m5_138 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m5_243 [cluster="Unk.>", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.>", span=""];
m5_148 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234"];
m5_149 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="236-236"];
m5_155 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="var pipeline = _redis.CreatePipeline()", span="245-245"];
m5_160 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="var jobs = GetJobsWithProperties(\r\n                    _redis,\r\n                    firstJobIds,\r\n                    null,\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (method, job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="263-273"];
m5_150 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="237-237"];
m5_151 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label=queues, span="239-239"];
m5_154 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="long dequeued = 0", span="243-243"];
m5_156 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                        x => firstJobIds = x)", span="247-250"];
m5_157 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                        x => length = x)", span="252-254"];
m5_158 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                        x => dequeued = x)", span="256-258"];
m5_159 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="260-260"];
m5_161 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue,\r\n                    FirstJobs = jobs,\r\n                    Length = length,\r\n                    Dequeued = dequeued\r\n                })", span="275-281"];
m5_162 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="return result;", span="284-284"];
m5_152 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="IList<string> firstJobIds = null", span="241-241"];
m5_153 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="long length = 0", span="242-242"];
m5_163 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234"];
m5_15 [cluster="Unk.GetListCount", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetListCount", span=""];
m5_63 [cluster="JobList<ScheduleDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry JobList<ScheduleDto>.cstr", span=""];
m5_43 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88"];
m5_44 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="var scheduledJobs = _redis.GetRangeWithScoresFromSortedSet(\r\n                ''hangfire:schedule'',\r\n                from,\r\n                from + count - 1)", span="90-93"];
m5_49 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="var pipeline = _redis.CreatePipeline()", span="103-103"];
m5_46 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return new JobList<ScheduleDto>(new List<KeyValuePair<string, ScheduleDto>>());", span="97-97"];
m5_45 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="scheduledJobs.Count == 0", span="95-95"];
m5_50 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label=scheduledJobs, span="105-105"];
m5_55 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return new JobList<ScheduleDto>(scheduledJobs\r\n                .Select(job => new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }))\r\n                .ToList());", span="125-135"];
m5_48 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="var states = new Dictionary<string, string>()", span="101-101"];
m5_52 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' }),\r\n                        x => jobs.Add(job.Key, x))", span="109-113"];
m5_53 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State''),\r\n                        x => states.Add(job.Key, x))", span="115-119"];
m5_54 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="122-122"];
m5_47 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="var jobs = new Dictionary<string, List<string>>()", span="100-100"];
m5_51 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="var job = scheduledJob", span="107-107"];
m5_56 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88"];
m5_197 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308"];
m5_198 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                from, from + perPage - 1)", span="311-313"];
m5_199 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                new[] { ''State'', ''CreatedAt'', ''Fetched'' },\r\n                null,\r\n                (method, job, state) => new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                });", span="315-326"];
m5_200 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308"];
m5_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_30 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6"];
m5_11 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46"];
m5_12 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="48-48"];
m5_13 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46"];
m5_276 [cluster="Unk.GetValuesMap", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetValuesMap", span=""];
m5_7 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41"];
m5_8 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="0: return _redis.GetSortedSetCount(''hangfire:schedule'');", span="43-43"];
m5_9 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41"];
m5_120 [cluster="Unk.GetAllItemsFromList", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m5_249 [cluster="Unk.Contains", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Contains", span=""];
m5_64 [cluster="Unk.Select", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Select", span=""];
m5_3 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36"];
m5_4 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="DefaultJobPerformanceProcess.cs", label="_redis.Dispose()", span="38-38"];
m5_5 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36"];
m5_236 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="5-5"];
m5_110 [cluster="Unk.GetAllItemsFromSet", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m5_134 [cluster="Unk.GetRangeFromSortedSetDesc", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m5_404 [cluster="Unk.GetValue", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetValue", span=""];
m5_70 [cluster="Unk.GetValuesFromHash", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetValuesFromHash", span=""];
m5_425 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m5_427 [file="DefaultJobPerformanceProcess.cs", label="HangFire.Redis.RedisMonitoringApi", span=""];
m5_432 [file="DefaultJobPerformanceProcess.cs", label=servers, span=""];
m5_433 [file="DefaultJobPerformanceProcess.cs", label=queues, span=""];
m5_429 [file="DefaultJobPerformanceProcess.cs", label=jobs, span=""];
m5_430 [file="DefaultJobPerformanceProcess.cs", label=states, span=""];
m5_439 [file="DefaultJobPerformanceProcess.cs", label=id, span=""];
m5_441 [file="DefaultJobPerformanceProcess.cs", label="string[]", span=""];
m5_438 [file="DefaultJobPerformanceProcess.cs", label="string[]", span=""];
m5_434 [file="DefaultJobPerformanceProcess.cs", label=queue, span=""];
m5_445 [file="DefaultJobPerformanceProcess.cs", label=queueName, span=""];
m5_428 [file="DefaultJobPerformanceProcess.cs", label=job, span=""];
m5_437 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_431 [file="DefaultJobPerformanceProcess.cs", label=name, span=""];
m5_443 [file="DefaultJobPerformanceProcess.cs", label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m5_436 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_435 [file="DefaultJobPerformanceProcess.cs", label=hiddenProperties, span=""];
m5_444 [file="DefaultJobPerformanceProcess.cs", label=stats, span=""];
m5_440 [file="DefaultJobPerformanceProcess.cs", label=jobs, span=""];
m5_442 [file="DefaultJobPerformanceProcess.cs", label=states, span=""];
m6_446 [cluster="Mock<T>.cstr", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Mock<T>.cstr", span=""];
m6_19 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_45 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", span="34-34"];
m6_12 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m6_93 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="102-102"];
m6_94 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="105-105"];
m6_95 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="106-106"];
m6_96 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="108-110"];
m6_97 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="DefaultJobPerformanceProcessFacts.cs", label="var result = process.Run(_context, _performer.Object)", span="113-113"];
m6_98 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Equal(''Returned value'', result)", span="116-116"];
m6_99 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="102-102"];
m6_37 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", span="40-40"];
m6_38 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new DefaultJobPerformanceProcess(null))", span="42-43"];
m6_39 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Equal(''activator'', exception.ParamName)", span="45-45"];
m6_40 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", span="40-40"];
m6_41 [cluster="Unk.Equal", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Equal", span=""];
m6_13 [cluster="Mock<IStorageConnection>.cstr", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m6_51 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", span="483-483"];
m6_439 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", color=green, community=0, file="DefaultJobPerformanceProcessFacts.cs", label="2: return new DefaultJobPerformanceProcess(_activator.Object, _filterProvider.Object);", span="485-485"];
m6_440 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", span="483-483"];
m6_161 [cluster="Unk.DoesNotThrow", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m6_55 [cluster="Unk.Run", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Run", span=""];
m6_398 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="429-429"];
m6_399 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<OperationCanceledException>()", span="432-434"];
m6_400 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="436-436"];
m6_401 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="437-437"];
m6_402 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="440-441"];
m6_403 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Verify(\r\n                x => x.OnServerException(It.IsAny<ServerExceptionContext>()),\r\n                Times.Never)", span="444-446"];
m6_404 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="429-429"];
m6_89 [cluster="Unk.OnPerformed", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.OnPerformed", span=""];
m6_283 [cluster="System.InvalidOperationException.InvalidOperationException()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m6_56 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="60-60"];
m6_57 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="62-62"];
m6_58 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(_context, null))", span="64-65"];
m6_59 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Equal(''performer'', exception.ParamName)", span="67-67"];
m6_60 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="60-60"];
m6_192 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="219-219"];
m6_193 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="222-222"];
m6_194 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="223-223"];
m6_199 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="230-230"];
m6_200 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="233-233"];
m6_195 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="outerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="225-225"];
m6_198 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="outerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="228-228"];
m6_196 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="226-226"];
m6_197 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="227-227"];
m6_201 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="219-219"];
m6_0 [cluster="HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="DefaultJobPerformanceProcessFacts.cs", label="Entry HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", span="21-21"];
m6_9 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", color=green, community=0, file="DefaultJobPerformanceProcessFacts.cs", label="1: _filterProvider = new Mock<IJobFilterProvider>()", span="34-34"];
m6_8 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="DefaultJobPerformanceProcessFacts.cs", label="_filters = new List<object>()", span="33-33"];
m6_10 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", color=green, community=1, file="DefaultJobPerformanceProcessFacts.cs", label="0: _filterProvider.Setup(x => x.GetFilters(It.IsNotNull<Job>())).Returns(\r\n                _filters.Select(f => new JobFilter(f, JobFilterScope.Type, null)))", span="35-36"];
m6_5 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="DefaultJobPerformanceProcessFacts.cs", label="_context = new PerformContext(\r\n                workerContext.Object, connection.Object, jobId, job, DateTime.UtcNow, new Mock<IJobCancellationToken>().Object)", span="28-29"];
m6_6 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer = new Mock<IJobPerformer>()", span="30-30"];
m6_7 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="DefaultJobPerformanceProcessFacts.cs", label="_activator = new Mock<JobActivator>()", span="31-31"];
m6_1 [cluster="HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="DefaultJobPerformanceProcessFacts.cs", label="Exit HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", span="21-21"];
m6_2 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="DefaultJobPerformanceProcessFacts.cs", label="var connection = new Mock<IStorageConnection>()", span="24-24"];
m6_3 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="DefaultJobPerformanceProcessFacts.cs", label="string jobId = ''someId''", span="25-25"];
m6_4 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="DefaultJobPerformanceProcessFacts.cs", label="var job = Job.FromExpression(() => Method())", span="26-26"];
m6_11 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", span="20-20"];
m6_31 [cluster="Unk.>", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.>", span=""];
m6_131 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="155-155"];
m6_132 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter1 = CreateFilter<IServerExceptionFilter>()", span="158-158"];
m6_133 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter2 = CreateFilter<IServerExceptionFilter>()", span="159-159"];
m6_136 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="164-166"];
m6_137 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="168-168"];
m6_138 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="171-172"];
m6_135 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DefaultJobPerformanceProcessFacts.cs", label="filter1.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="162-162"];
m6_134 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DefaultJobPerformanceProcessFacts.cs", label="filter2.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="161-161"];
m6_139 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="155-155"];
m6_318 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="348-348"];
m6_319 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="351-351"];
m6_321 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="354-356"];
m6_323 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="361-361"];
m6_324 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="364-364"];
m6_322 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="358-359"];
m6_320 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="var exception = new InvalidOperationException()", span="353-353"];
m6_325 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="348-348"];
m6_414 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="450-450"];
m6_415 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="453-453"];
m6_417 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="457-457"];
m6_418 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="460-461"];
m6_416 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<OperationCanceledException>()", span="454-455"];
m6_419 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="450-450"];
m6_426 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="465-465"];
m6_427 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="468-468"];
m6_429 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="472-472"];
m6_430 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="475-476"];
m6_428 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<OperationCanceledException>()", span="469-470"];
m6_431 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="465-465"];
m6_82 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="488-488"];
m6_443 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="DefaultJobPerformanceProcessFacts.cs", label="_filters.Add(filter.Object)", span="492-492"];
m6_442 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = new Mock<T>()", span="491-491"];
m6_444 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="DefaultJobPerformanceProcessFacts.cs", label="return filter;", span="494-494"];
m6_445 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="488-488"];
m6_65 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="71-71"];
m6_66 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="73-73"];
m6_67 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="75-75"];
m6_68 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()), \r\n                Times.Once)", span="77-79"];
m6_69 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="71-71"];
m6_114 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="135-135"];
m6_115 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="138-138"];
m6_116 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="140-142"];
m6_117 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="144-144"];
m6_118 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="147-148"];
m6_119 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Verify(x => x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>()))", span="150-151"];
m6_120 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="135-135"];
m6_174 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="196-196"];
m6_175 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="199-199"];
m6_177 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer.Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .InSequence()", span="204-205"];
m6_179 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="210-210"];
m6_180 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="213-213"];
m6_176 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerforming(It.IsNotNull<PerformingContext>()))\r\n                .InSequence()", span="201-202"];
m6_178 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.IsNotNull<PerformedContext>()))\r\n                .InSequence()", span="207-208"];
m6_181 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="196-196"];
m6_275 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="305-305"];
m6_276 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="308-308"];
m6_278 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="311-313"];
m6_279 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="315-315"];
m6_280 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="318-319"];
m6_277 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="var exception = new InvalidOperationException()", span="310-310"];
m6_281 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception)))", span="322-323"];
m6_282 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="305-305"];
m6_130 [cluster="Unk.OnServerException", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.OnServerException", span=""];
m6_153 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="178-178"];
m6_154 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="181-183"];
m6_155 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="185-185"];
m6_157 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="189-189"];
m6_158 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="192-192"];
m6_156 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>()))\r\n                .Callback((ServerExceptionContext x) => x.ExceptionHandled = true)", span="186-187"];
m6_159 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="178-178"];
m6_441 [cluster="DefaultJobPerformanceProcess.cstr", file="DefaultJobPerformanceProcessFacts.cs", label="Entry DefaultJobPerformanceProcess.cstr", span=""];
m6_103 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="120-120"];
m6_104 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="123-125"];
m6_105 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="127-127"];
m6_106 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="130-131"];
m6_107 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="120-120"];
m6_75 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="83-83"];
m6_76 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="86-86"];
m6_77 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="87-87"];
m6_78 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="89-91"];
m6_79 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="94-94"];
m6_80 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Verify(\r\n                x => x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value'')))", span="97-98"];
m6_81 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="83-83"];
m6_341 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="368-368"];
m6_342 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="DefaultJobPerformanceProcessFacts.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="371-371"];
m6_343 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="DefaultJobPerformanceProcessFacts.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="372-372"];
m6_344 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="374-376"];
m6_346 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="381-381"];
m6_347 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="384-384"];
m6_345 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="DefaultJobPerformanceProcessFacts.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="378-379"];
m6_348 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="DefaultJobPerformanceProcessFacts.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null)))", span="387-387"];
m6_349 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="368-368"];
m6_185 [cluster="Unk.OnPerforming", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.OnPerforming", span=""];
m6_20 [cluster="Mock<IJobFilterProvider>.cstr", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Mock<IJobFilterProvider>.cstr", span=""];
m6_140 [cluster="Unk.InSequence", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.InSequence", span=""];
m6_447 [cluster="Unk.Add", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Add", span=""];
m6_17 [cluster="Mock<IJobPerformer>.cstr", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Mock<IJobPerformer>.cstr", span=""];
m6_234 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="261-261"];
m6_235 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="DefaultJobPerformanceProcessFacts.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="264-264"];
m6_236 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="DefaultJobPerformanceProcessFacts.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="265-265"];
m6_238 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="270-270"];
m6_239 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="273-273"];
m6_237 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="DefaultJobPerformanceProcessFacts.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext context) => context.Canceled = true)", span="267-268"];
m6_240 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="DefaultJobPerformanceProcessFacts.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled)))", span="276-276"];
m6_241 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="261-261"];
m6_21 [cluster="Unk.Setup", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Setup", span=""];
m6_27 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", span="479-479"];
m6_438 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", span="479-479"];
m6_284 [cluster="Unk.Throws", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Throws", span=""];
m6_74 [cluster="Unk.Perform", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Perform", span=""];
m6_46 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="49-49"];
m6_47 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="51-51"];
m6_48 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null, _performer.Object))", span="53-54"];
m6_49 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="56-56"];
m6_50 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="49-49"];
m6_214 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="239-239"];
m6_215 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="242-242"];
m6_217 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="247-247"];
m6_218 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="250-250"];
m6_219 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="253-255"];
m6_216 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext x) => x.Canceled = true)", span="244-245"];
m6_220 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="257-257"];
m6_221 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="239-239"];
m6_24 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="26-26"];
m6_28 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="35-35"];
m6_33 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="36-36"];
m6_29 [cluster="lambda expression", color=green, community=0, file="DefaultJobPerformanceProcessFacts.cs", label="2: x.GetFilters(It.IsNotNull<Job>())", span="35-35"];
m6_30 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="35-35"];
m6_34 [cluster="lambda expression", color=green, community=0, file="DefaultJobPerformanceProcessFacts.cs", label="0: new JobFilter(f, JobFilterScope.Type, null)", span="36-36"];
m6_35 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="36-36"];
m6_53 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(null, _performer.Object)", span="54-54"];
m6_62 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, null)", span="65-65"];
m6_112 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="131-131"];
m6_125 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="148-148"];
m6_151 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="172-172"];
m6_172 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="192-192"];
m6_267 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="292-292"];
m6_289 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="319-319"];
m6_310 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="342-342"];
m6_339 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="364-364"];
m6_360 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="384-384"];
m6_379 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="402-402"];
m6_396 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="423-423"];
m6_409 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="441-441"];
m6_424 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="461-461"];
m6_436 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="476-476"];
m6_72 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="78-78"];
m6_84 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="90-90"];
m6_87 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value''))", span="98-98"];
m6_101 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="109-109"];
m6_109 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="124-124"];
m6_122 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="141-141"];
m6_128 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>())", span="150-151"];
m6_142 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="161-161"];
m6_145 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="162-162"];
m6_148 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="165-165"];
m6_163 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="182-182"];
m6_166 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="186-186"];
m6_183 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsNotNull<PerformingContext>())", span="201-201"];
m6_187 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="204-204"];
m6_190 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsNotNull<PerformedContext>())", span="207-207"];
m6_203 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="225-225"];
m6_206 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="226-226"];
m6_209 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="227-227"];
m6_212 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="228-228"];
m6_223 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="244-244"];
m6_229 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="254-254"];
m6_232 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="257-257"];
m6_243 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="267-267"];
m6_249 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled))", span="276-276"];
m6_264 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="285-285"];
m6_270 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="298-298"];
m6_273 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="301-301"];
m6_292 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception))", span="322-323"];
m6_286 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="312-312"];
m6_313 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="344-344"];
m6_307 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="335-335"];
m6_330 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="358-358"];
m6_327 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="355-355"];
m6_351 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="375-375"];
m6_354 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="378-378"];
m6_363 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null))", span="387-387"];
m6_376 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="395-395"];
m6_390 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="412-412"];
m6_393 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="416-416"];
m6_406 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="433-433"];
m6_412 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="445-445"];
m6_421 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="454-454"];
m6_433 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="469-469"];
m6_52 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="54-54"];
m6_54 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="54-54"];
m6_61 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="65-65"];
m6_63 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="65-65"];
m6_71 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="78-78"];
m6_83 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="90-90"];
m6_100 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="109-109"];
m6_108 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="124-124"];
m6_111 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="131-131"];
m6_113 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="131-131"];
m6_121 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="141-141"];
m6_124 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="148-148"];
m6_126 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="148-148"];
m6_147 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="165-165"];
m6_150 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="172-172"];
m6_152 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="172-172"];
m6_162 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="182-182"];
m6_171 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="192-192"];
m6_173 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="192-192"];
m6_186 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="204-204"];
m6_228 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="254-254"];
m6_266 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="292-292"];
m6_268 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="292-292"];
m6_269 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="298-298"];
m6_285 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="312-312"];
m6_288 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="319-319"];
m6_290 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="319-319"];
m6_306 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="335-335"];
m6_309 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="342-342"];
m6_311 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="342-342"];
m6_326 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="355-355"];
m6_338 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="364-364"];
m6_340 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="364-364"];
m6_350 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="375-375"];
m6_359 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="384-384"];
m6_361 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="384-384"];
m6_378 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="401-402"];
m6_380 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="401-402"];
m6_392 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="416-416"];
m6_395 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="422-423"];
m6_397 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="422-423"];
m6_405 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="433-433"];
m6_408 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="441-441"];
m6_410 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="441-441"];
m6_423 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="461-461"];
m6_425 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="461-461"];
m6_435 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="476-476"];
m6_437 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="476-476"];
m6_144 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="162-162"];
m6_141 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="161-161"];
m6_165 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="186-186"];
m6_168 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="187-187"];
m6_182 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="201-201"];
m6_189 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="207-207"];
m6_202 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="225-225"];
m6_211 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="228-228"];
m6_205 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="226-226"];
m6_208 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="227-227"];
m6_222 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="244-244"];
m6_225 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="245-245"];
m6_242 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="267-267"];
m6_245 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="268-268"];
m6_263 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="285-285"];
m6_329 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="358-358"];
m6_335 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="359-359"];
m6_353 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="378-378"];
m6_356 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="379-379"];
m6_375 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="395-395"];
m6_389 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="412-412"];
m6_420 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="454-454"];
m6_432 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="469-469"];
m6_42 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="43-43"];
m6_73 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="78-78"];
m6_85 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="90-90"];
m6_86 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="98-98"];
m6_88 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="98-98"];
m6_90 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="98-98"];
m6_102 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="109-109"];
m6_110 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="124-124"];
m6_123 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="141-141"];
m6_127 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="150-151"];
m6_129 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="150-151"];
m6_143 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="161-161"];
m6_146 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="162-162"];
m6_149 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="165-165"];
m6_164 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="182-182"];
m6_167 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="186-186"];
m6_184 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="201-201"];
m6_188 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="204-204"];
m6_191 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="207-207"];
m6_204 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="225-225"];
m6_207 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="226-226"];
m6_210 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="227-227"];
m6_213 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="228-228"];
m6_224 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="244-244"];
m6_230 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="254-254"];
m6_231 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="257-257"];
m6_233 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="257-257"];
m6_244 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="267-267"];
m6_248 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="276-276"];
m6_250 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="276-276"];
m6_251 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="276-276"];
m6_265 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="285-285"];
m6_271 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="298-298"];
m6_272 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="301-301"];
m6_274 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="301-301"];
m6_291 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="322-323"];
m6_293 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="322-323"];
m6_294 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="323-323"];
m6_287 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="312-312"];
m6_312 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="344-344"];
m6_314 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="344-344"];
m6_315 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="344-344"];
m6_308 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="335-335"];
m6_331 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="358-358"];
m6_332 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="358-358"];
m6_328 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="355-355"];
m6_352 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="375-375"];
m6_355 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="378-378"];
m6_362 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="387-387"];
m6_364 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="387-387"];
m6_365 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="387-387"];
m6_377 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="395-395"];
m6_391 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="412-412"];
m6_394 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="416-416"];
m6_407 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="433-433"];
m6_411 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="445-445"];
m6_413 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="445-445"];
m6_422 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="454-454"];
m6_434 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="469-469"];
m6_295 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="context.Exception == exception", span="323-323"];
m6_316 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="context.Exception == exception", span="344-344"];
m6_333 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="context.Exception == exception", span="358-358"];
m6_170 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="187-187"];
m6_169 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.ExceptionHandled = true", span="187-187"];
m6_227 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="245-245"];
m6_226 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.Canceled = true", span="245-245"];
m6_247 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="268-268"];
m6_246 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="context.Canceled = true", span="268-268"];
m6_337 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="359-359"];
m6_336 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.ExceptionHandled = true", span="359-359"];
m6_358 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="379-379"];
m6_357 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="x.ExceptionHandled = true", span="379-379"];
m6_44 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="43-43"];
m6_43 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="new DefaultJobPerformanceProcess(null)", span="43-43"];
m6_92 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="98-98"];
m6_91 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="(string)context.Result == ''Returned value''", span="98-98"];
m6_253 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="276-276"];
m6_252 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="context.Canceled", span="276-276"];
m6_296 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="323-323"];
m6_317 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="344-344"];
m6_334 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="358-358"];
m6_367 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="387-387"];
m6_366 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="context.Exception != null", span="387-387"];
m6_25 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Method()", span="26-26"];
m6_26 [cluster="lambda expression", file="DefaultJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="26-26"];
m6_22 [cluster="Unk.Select", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Select", span=""];
m6_381 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="408-408"];
m6_382 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="411-411"];
m6_384 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<ArgumentNullException>()", span="415-417"];
m6_385 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="419-419"];
m6_386 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(() =>\r\n                process.Run(_context, _performer.Object))", span="422-423"];
m6_383 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="412-413"];
m6_387 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="425-425"];
m6_388 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="408-408"];
m6_368 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="391-391"];
m6_369 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="394-394"];
m6_371 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="398-398"];
m6_372 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(() => \r\n                process.Run(_context, _performer.Object))", span="401-402"];
m6_370 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="395-396"];
m6_373 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="404-404"];
m6_374 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="391-391"];
m6_18 [cluster="Mock<JobActivator>.cstr", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m6_70 [cluster="Unk.Verify", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Verify", span=""];
m6_16 [cluster="Mock<IJobCancellationToken>.cstr", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m6_160 [cluster="Unk.Callback", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Callback", span=""];
m6_254 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="280-280"];
m6_255 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="DefaultJobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="283-283"];
m6_257 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="288-288"];
m6_258 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="DefaultJobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context, _performer.Object))", span="291-292"];
m6_260 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="297-299"];
m6_256 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<InvalidOperationException>()", span="285-286"];
m6_259 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="295-295"];
m6_261 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="DefaultJobPerformanceProcessFacts.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="301-301"];
m6_262 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="280-280"];
m6_23 [cluster="Unk.Returns", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.Returns", span=""];
m6_36 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m6_64 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="50-50"];
m6_297 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="327-327"];
m6_298 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="330-330"];
m6_299 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="331-331"];
m6_301 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="334-336"];
m6_302 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="338-338"];
m6_303 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="341-342"];
m6_304 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))", span="344-344"];
m6_300 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="var exception = new InvalidOperationException()", span="333-333"];
m6_305 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="327-327"];
m6_14 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m6_15 [cluster="PerformContext.cstr", file="DefaultJobPerformanceProcessFacts.cs", label="Entry PerformContext.cstr", span=""];
m6_32 [cluster="Unk.GetFilters", file="DefaultJobPerformanceProcessFacts.cs", label="Entry Unk.GetFilters", span=""];
m6_448 [file="DefaultJobPerformanceProcessFacts.cs", label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", span=""];
m6_449 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_450 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_451 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_452 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_453 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_454 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_455 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_456 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_458 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_461 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_462 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_463 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_464 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_465 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_466 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_467 [file="DefaultJobPerformanceProcessFacts.cs", label=process, span=""];
m6_457 [file="DefaultJobPerformanceProcessFacts.cs", label=exception, span=""];
m6_459 [file="DefaultJobPerformanceProcessFacts.cs", label=exception, span=""];
m6_460 [file="DefaultJobPerformanceProcessFacts.cs", label=exception, span=""];
m7_26 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", span="56-56"];
m7_27 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="var filterInfo = GetFilters(context.Job)", span="58-58"];
m7_29 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="context.TraversedStates", span="61-61"];
m7_30 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="transaction.AddJobState(context.JobId, state)", span="63-63"];
m7_31 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="_handlers.GetHandlers(context.OldStateName)", span="66-66"];
m7_32 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="handler.Unapply(context, transaction)", span="68-68"];
m7_34 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="filter.OnStateUnapplied(context, transaction)", span="73-73"];
m7_35 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="transaction.SetJobState(context.JobId, context.NewState)", span="76-76"];
m7_36 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="_handlers.GetHandlers(context.NewState.Name)", span="78-78"];
m7_37 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="handler.Apply(context, transaction)", span="80-80"];
m7_39 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="filter.OnStateApplied(context, transaction)", span="85-85"];
m7_40 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="context.NewState.IsFinal", span="88-88"];
m7_41 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="transaction.ExpireJob(context.JobId, context.JobExpirationTimeout)", span="90-90"];
m7_42 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="transaction.PersistJob(context.JobId)", span="94-94"];
m7_28 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="var filters = filterInfo.ApplyStateFilters", span="59-59"];
m7_33 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label=filters, span="71-71"];
m7_38 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label=filters, span="83-83"];
m7_43 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultStateChangeProcess.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", span="56-56"];
m7_5 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, Hangfire.Common.IJobFilterProvider)", color=green, community=0, file="DefaultStateChangeProcess.cs", label="1: filterProvider == null", span="38-38"];
m7_46 [cluster="Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="25-25"];
m7_0 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", span="32-32"];
m7_1 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", color=red, community=0, file="DefaultStateChangeProcess.cs", label="1: handlers == null", span="34-34"];
m7_3 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, Hangfire.Common.IJobFilterProvider)", color=green, community=0, file="DefaultStateChangeProcess.cs", label="1: handlers == null", span="37-37"];
m7_2 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, Hangfire.Common.IJobFilterProvider)", color=red, community=0, file="DefaultStateChangeProcess.cs", label="1: Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, Hangfire.Common.IJobFilterProvider)", span="33-33"];
m7_4 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, Hangfire.Common.IJobFilterProvider)", color=green, community=0, file="DefaultStateChangeProcess.cs", label="1: throw new ArgumentNullException(''handlers'');", span="37-37"];
m7_48 [cluster="Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="28-28"];
m7_25 [cluster="Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", span="30-30"];
m7_49 [cluster="Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="24-24"];
m7_56 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultStateChangeProcess.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m7_45 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", color=green, community=0, file="DefaultStateChangeProcess.cs", label="2: return new JobFilterInfo(_filterProvider.GetFilters(job));", span="97-97"];
m7_51 [cluster="Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="26-26"];
m7_44 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="29-29"];
m7_15 [cluster="lambda expression", file="DefaultStateChangeProcess.cs", label="Entry lambda expression", span="44-44"];
m7_12 [cluster="lambda expression", color=red, community=0, file="DefaultStateChangeProcess.cs", label="0: filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="44-44"];
m7_11 [cluster="lambda expression", file="DefaultStateChangeProcess.cs", label="Entry lambda expression", span="44-44"];
m7_13 [cluster="lambda expression", file="DefaultStateChangeProcess.cs", label="Exit lambda expression", span="44-44"];
m7_16 [cluster="lambda expression", color=red, community=0, file="DefaultStateChangeProcess.cs", label="0: new JobFilter(f, JobFilterScope.Type, null)", span="44-44"];
m7_17 [cluster="lambda expression", file="DefaultStateChangeProcess.cs", label="Exit lambda expression", span="44-44"];
m7_14 [cluster="Unk.Select", file="DefaultStateChangeProcess.cs", label="Entry Unk.Select", span=""];
m7_19 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="47-47"];
m7_20 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="var filterInfo = GetFilters(context.Job)", span="49-49"];
m7_22 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="filter.OnStateElection(context)", span="52-52"];
m7_21 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="filterInfo.ElectStateFilters", span="50-50"];
m7_23 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="47-47"];
m7_47 [cluster="Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="36-36"];
m7_52 [cluster="Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="27-27"];
m7_6 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="DefaultStateChangeProcess.cs", label="1: Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m7_7 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="DefaultStateChangeProcess.cs", label="1: filters == null", span="42-42"];
m7_8 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="DefaultStateChangeProcess.cs", label="1: throw new ArgumentNullException(''filters'');", span="42-42"];
m7_9 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="DefaultStateChangeProcess.cs", label="1: _getFiltersThunk = md => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="44-44"];
m7_55 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
m7_18 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m7_10 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="DefaultStateChangeProcess.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m7_24 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", span="98-98"];
m7_53 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", color=red, community=0, file="DefaultStateChangeProcess.cs", label="2: return new JobFilterInfo(_getFiltersThunk(job));", span="100-100"];
m7_54 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", file="DefaultStateChangeProcess.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", span="98-98"];
m7_50 [cluster="Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="29-29"];
m7_57 [file="DefaultStateChangeProcess.cs", label="Hangfire.States.DefaultStateChangeProcess", span=""];
m7_58 [file="DefaultStateChangeProcess.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m8_25 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="59-59"];
m8_26 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DefaultStateChangeProcessFacts.cs", label="Assert.IsNotNull(filterContext)", span="61-61"];
m8_28 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DefaultStateChangeProcessFacts.cs", label="filterContext.Canceled = true", span="65-65"];
m8_27 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DefaultStateChangeProcessFacts.cs", label=_cancelsTheCreation, span="63-63"];
m8_29 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DefaultStateChangeProcessFacts.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnPerforming''))", span="68-68"];
m8_30 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DefaultStateChangeProcessFacts.cs", label=_throwException, span="70-70"];
m8_31 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DefaultStateChangeProcessFacts.cs", label="throw new Exception();", span="72-72"];
m8_32 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DefaultStateChangeProcessFacts.cs", label="Exit HangFire.Tests.TestFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="59-59"];
m8_17 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DefaultStateChangeProcessFacts.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m8_0 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m8_1 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="DefaultStateChangeProcessFacts.cs", label="_name = name", span="22-22"];
m8_2 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="DefaultStateChangeProcessFacts.cs", label="_results = results", span="23-23"];
m8_3 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="DefaultStateChangeProcessFacts.cs", label="_throwException = throwException", span="24-24"];
m8_4 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="DefaultStateChangeProcessFacts.cs", label="_cancelsTheCreation = cancelsTheCreation", span="25-25"];
m8_5 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="DefaultStateChangeProcessFacts.cs", label="_handlesException = handlesException", span="26-26"];
m8_6 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="DefaultStateChangeProcessFacts.cs", label="Exit HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m8_16 [cluster="string.Format(string, object, object)", file="DefaultStateChangeProcessFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m8_33 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Tests.TestFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="76-76"];
m8_34 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="DefaultStateChangeProcessFacts.cs", label="Assert.IsNotNull(filterContext)", span="78-78"];
m8_35 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="DefaultStateChangeProcessFacts.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnPerformed'')\r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="80-81"];
m8_37 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="DefaultStateChangeProcessFacts.cs", label="filterContext.ExceptionHandled = true", span="85-85"];
m8_36 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="DefaultStateChangeProcessFacts.cs", label=_handlesException, span="83-83"];
m8_38 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="DefaultStateChangeProcessFacts.cs", label="Exit HangFire.Tests.TestFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="76-76"];
m8_18 [cluster="System.Exception.Exception()", file="DefaultStateChangeProcessFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m8_19 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Filters.CreatedContext)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Tests.TestFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m8_20 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Filters.CreatedContext)", file="DefaultStateChangeProcessFacts.cs", label="Assert.IsNotNull(filterContext)", span="48-48"];
m8_21 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Filters.CreatedContext)", file="DefaultStateChangeProcessFacts.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreated'') \r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="50-51"];
m8_23 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Filters.CreatedContext)", file="DefaultStateChangeProcessFacts.cs", label="filterContext.ExceptionHandled = true", span="55-55"];
m8_22 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Filters.CreatedContext)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs", label="1: _handlesException", span="53-53"];
m8_24 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Filters.CreatedContext)", file="DefaultStateChangeProcessFacts.cs", label="Exit HangFire.Tests.TestFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m8_15 [cluster="Unk.IsNotNull", file="DefaultStateChangeProcessFacts.cs", label="Entry Unk.IsNotNull", span=""];
m8_7 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m8_8 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", file="DefaultStateChangeProcessFacts.cs", label="Assert.IsNotNull(filterContext)", span="31-31"];
m8_10 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", file="DefaultStateChangeProcessFacts.cs", label="filterContext.Canceled = true", span="35-35"];
m8_9 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", file="DefaultStateChangeProcessFacts.cs", label=_cancelsTheCreation, span="33-33"];
m8_11 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", file="DefaultStateChangeProcessFacts.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="38-38"];
m8_12 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", file="DefaultStateChangeProcessFacts.cs", label=_throwException, span="40-40"];
m8_13 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", file="DefaultStateChangeProcessFacts.cs", label="throw new Exception();", span="42-42"];
m8_14 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", file="DefaultStateChangeProcessFacts.cs", label="Exit HangFire.Tests.TestFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m8_39 [file="DefaultStateChangeProcessFacts.cs", label="HangFire.Tests.TestFilter", span=""];
m9_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ExpirationManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_35 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m9_36 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="ExpirationManager.cs", label="return new SqlServerConnection(this, CreateAndOpenConnection());", span="71-71"];
m9_37 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m9_34 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="19-19"];
m9_26 [cluster="object.GetType()", file="ExpirationManager.cs", label="Entry object.GetType()", span="0-0"];
m9_28 [cluster="string.Replace(string, string)", file="ExpirationManager.cs", label="Entry string.Replace(string, string)", span="0-0"];
m9_24 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m9_53 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="ExpirationManager.cs", label="var connection = CreateAndOpenConnection()", span="91-91"];
m9_54 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="ExpirationManager.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="93-93"];
m9_55 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="ExpirationManager.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="94-94"];
m9_56 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m9_45 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ExpirationManager.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m9_57 [cluster="Unk.>", file="ExpirationManager.cs", label="Entry Unk.>", span=""];
m9_52 [cluster="Unk.Open", file="ExpirationManager.cs", label="Entry Unk.Open", span=""];
m9_51 [cluster="SqlConnection.cstr", file="ExpirationManager.cs", label="Entry SqlConnection.cstr", span=""];
m9_27 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m9_59 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="ExpirationManager.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="100-100"];
m9_61 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="ExpirationManager.cs", label="return reader.ReadToEnd();", span="103-103"];
m9_60 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="ExpirationManager.cs", label="var reader = new StreamReader(stream)", span="101-101"];
m9_62 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m9_63 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="ExpirationManager.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m9_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m9_32 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ExpirationManager.cs", label="return new SqlServerMonitoringApi(CreateAndOpenConnection());", span="66-66"];
m9_33 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m9_44 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="ExpirationManager.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m9_2 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30"];
m9_10 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="PrepareSchemaIfNecessary()", span="40-40"];
m9_7 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="_options = options", span="35-35"];
m9_8 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="_connectionString = connectionString", span="36-36"];
m9_9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="options.PrepareSchemaIfNecessary", span="38-38"];
m9_5 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="options == null", span="33-33"];
m9_4 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="throw new ArgumentNullException(''connectionString'');", span="32-32"];
m9_6 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="throw new ArgumentNullException(''options'');", span="33-33"];
m9_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="connectionString == null", span="32-32"];
m9_11 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30"];
m9_39 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m9_40 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="ExpirationManager.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="76-76"];
m9_41 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="ExpirationManager.cs", label="yield return new ServerWatchdog(this);", span="77-77"];
m9_42 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="ExpirationManager.cs", label="yield return new ExpirationManager(this);", span="78-78"];
m9_43 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m9_64 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="ExpirationManager.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m9_58 [cluster="Unk.Single", file="ExpirationManager.cs", label="Entry Unk.Single", span=""];
m9_38 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", span="16-16"];
m9_30 [cluster="Unk.Execute", file="ExpirationManager.cs", label="Entry Unk.Execute", span=""];
m9_29 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m9_47 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ExpirationManager.cs", label="var connection = new SqlConnection(_connectionString)", span="83-83"];
m9_48 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ExpirationManager.cs", label="connection.Open()", span="84-84"];
m9_49 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ExpirationManager.cs", label="return connection;", span="86-86"];
m9_50 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m9_65 [cluster="System.IO.StreamReader.ReadToEnd()", file="ExpirationManager.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m9_23 [cluster="Unk.Debug", file="ExpirationManager.cs", label="Entry Unk.Debug", span=""];
m9_46 [cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="27-27"];
m9_13 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m9_21 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", color=green, community=0, file="ExpirationManager.cs", label="0: Log.Debug(''HangFire SQL objects installed.'')", span="61-61"];
m9_20 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="ExpirationManager.cs", label="connection.Execute(script)", span="58-58"];
m9_18 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="ExpirationManager.cs", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="54-54"];
m9_19 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="ExpirationManager.cs", label="var connection = CreateAndOpenConnection()", span="56-56"];
m9_16 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="ExpirationManager.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="50-50"];
m9_14 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="ExpirationManager.cs", label="Log.Debug(''Start installing HangFire SQL objects...'')", span="46-46"];
m9_17 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="ExpirationManager.cs", label="var script = GetStringResource(GetType().Assembly, ''HangFire.SqlServer.Install.sql'')", span="53-53"];
m9_15 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="ExpirationManager.cs", label="!IsSqlEditionSupported(_connectionString)", span="48-48"];
m9_22 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m9_25 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="ExpirationManager.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m9_66 [file="ExpirationManager.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m10_0 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", file="IPersistentJobQueueProvider.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22"];
m10_1 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", file="IPersistentJobQueueProvider.cs", label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22"];
m10_2 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="IPersistentJobQueueProvider.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="23-23"];
m10_3 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="IPersistentJobQueueProvider.cs", label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="23-23"];
m12_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m12_40 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="94-94"];
m12_41 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x == null && y == null", span="97-97"];
m12_43 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x == null", span="101-101"];
m12_45 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="y == null", span="105-105"];
m12_47 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Order < y.Order", span="112-112"];
m12_49 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Order > y.Order", span="116-116"];
m12_51 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Scope < y.Scope", span="123-123"];
m12_53 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Scope > y.Scope", span="127-127"];
m12_42 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 0;", span="99-99"];
m12_44 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return -1;", span="103-103"];
m12_46 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 1;", span="107-107"];
m12_48 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return -1;", span="114-114"];
m12_50 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 1;", span="118-118"];
m12_52 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return -1;", span="125-125"];
m12_54 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 1;", span="129-129"];
m12_55 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 0;", span="132-132"];
m12_56 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="94-94"];
m12_2 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
m12_3 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
m12_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m12_0 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34"];
m12_1 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34"];
m12_4 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48"];
m12_5 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", color=red, community=0, file="JobFilterProviderCollection.cs", label="2: job == null", span="50-50"];
m12_7 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="IEnumerable<JobFilter> combinedFilters =\r\n                Items.SelectMany(fp => fp.GetFilters(job))\r\n                    .OrderBy(filter => filter, _filterComparer)", span="55-57"];
m12_6 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", color=red, community=0, file="JobFilterProviderCollection.cs", label="0: return Enumerable.Empty<JobFilter>();", span="52-52"];
m12_8 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="return RemoveDuplicates(combinedFilters.Reverse()).Reverse();", span="60-60"];
m12_9 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48"];
m12_34 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m12_14 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="63-63"];
m12_22 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="var visitedTypes = new HashSet<Type>()", span="66-66"];
m12_27 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="yield return filter;", span="75-75"];
m12_23 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label=filters, span="68-68"];
m12_26 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="!visitedTypes.Contains(filterInstanceType) || AllowMultiple(filterInstance)", span="73-73"];
m12_28 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="visitedTypes.Add(filterInstanceType)", span="76-76"];
m12_24 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="var filterInstance = filter.Instance", span="70-70"];
m12_25 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="var filterInstanceType = filterInstance.GetType()", span="71-71"];
m12_29 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="63-63"];
m12_18 [cluster="Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", span="32-32"];
m12_31 [cluster="object.GetType()", file="JobFilterProviderCollection.cs", label="Entry object.GetType()", span="0-0"];
m12_32 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m12_19 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Entry lambda expression", span="57-57"];
m12_16 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="fp.GetFilters(job)", span="56-56"];
m12_15 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Entry lambda expression", span="56-56"];
m12_17 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Exit lambda expression", span="56-56"];
m12_20 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label=filter, span="57-57"];
m12_21 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Exit lambda expression", span="57-57"];
m12_33 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="81-81"];
m12_35 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="var mvcFilter = filterInstance as IJobFilter", span="83-83"];
m12_36 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="mvcFilter == null", span="84-84"];
m12_38 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="return mvcFilter.AllowMultiple;", span="89-89"];
m12_37 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="return true;", span="86-86"];
m12_39 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="81-81"];
m12_10 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobFilterProviderCollection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m12_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0"];
m12_30 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m12_57 [file="JobFilterProviderCollection.cs", label="Hangfire.Common.JobFilterProviderCollection", span=""];
m12_58 [file="JobFilterProviderCollection.cs", label="Hangfire.Common.Job", span=""];
m13_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="MsmqJobQueueProvider.cs", label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", span=""];
m13_4 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="MsmqJobQueueProvider.cs", label="0: throw new ArgumentNullException(''connectionString'');", span="32-32"];
m13_35 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m13_36 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="MsmqJobQueueProvider.cs", label="return new SqlServerConnection(this, CreateAndOpenConnection());", span="71-71"];
m13_37 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="MsmqJobQueueProvider.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m13_34 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="19-19"];
m13_5 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="MsmqJobQueueProvider.cs", label="options == null", span="33-33"];
m13_0 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26"];
m13_1 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs", label="_jobQueue = new MsmqJobQueue(pathPattern, transactionType)", span="28-28"];
m13_2 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30"];
m13_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="MsmqJobQueueProvider.cs", label="0: connectionString == null", span="32-32"];
m13_26 [cluster="object.GetType()", file="MsmqJobQueueProvider.cs", label="Entry object.GetType()", span="0-0"];
m13_28 [cluster="string.Replace(string, string)", file="MsmqJobQueueProvider.cs", label="Entry string.Replace(string, string)", span="0-0"];
m13_24 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m13_53 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="MsmqJobQueueProvider.cs", label="var connection = CreateAndOpenConnection()", span="91-91"];
m13_54 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="MsmqJobQueueProvider.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="93-93"];
m13_55 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="MsmqJobQueueProvider.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="94-94"];
m13_56 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="MsmqJobQueueProvider.cs", label="Exit HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m13_45 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="MsmqJobQueueProvider.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m13_57 [cluster="Unk.>", file="MsmqJobQueueProvider.cs", label="Entry Unk.>", span=""];
m13_52 [cluster="Unk.Open", file="MsmqJobQueueProvider.cs", label="Entry Unk.Open", span=""];
m13_51 [cluster="SqlConnection.cstr", file="MsmqJobQueueProvider.cs", label="Entry SqlConnection.cstr", span=""];
m13_27 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m13_59 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="MsmqJobQueueProvider.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="100-100"];
m13_61 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="MsmqJobQueueProvider.cs", label="return reader.ReadToEnd();", span="103-103"];
m13_60 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="MsmqJobQueueProvider.cs", label="var reader = new StreamReader(stream)", span="101-101"];
m13_62 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="MsmqJobQueueProvider.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m13_63 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="MsmqJobQueueProvider.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m13_6 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="MsmqJobQueueProvider.cs", label="throw new ArgumentNullException(''options'');", span="33-33"];
m13_7 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="MsmqJobQueueProvider.cs", label="_options = options", span="35-35"];
m13_8 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="MsmqJobQueueProvider.cs", label="_connectionString = connectionString", span="36-36"];
m13_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m13_32 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="MsmqJobQueueProvider.cs", label="return new SqlServerMonitoringApi(CreateAndOpenConnection());", span="66-66"];
m13_33 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="MsmqJobQueueProvider.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m13_44 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="MsmqJobQueueProvider.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m13_9 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m13_10 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs", label="return _monitoringApi;", span="39-39"];
m13_11 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m13_39 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m13_40 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="MsmqJobQueueProvider.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="76-76"];
m13_41 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="MsmqJobQueueProvider.cs", label="yield return new ServerWatchdog(this);", span="77-77"];
m13_42 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="MsmqJobQueueProvider.cs", label="yield return new ExpirationManager(this);", span="78-78"];
m13_43 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="MsmqJobQueueProvider.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m13_64 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="MsmqJobQueueProvider.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m13_58 [cluster="Unk.Single", file="MsmqJobQueueProvider.cs", label="Entry Unk.Single", span=""];
m13_38 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", span="16-16"];
m13_30 [cluster="Unk.Execute", file="MsmqJobQueueProvider.cs", label="Entry Unk.Execute", span=""];
m13_29 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m13_47 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="MsmqJobQueueProvider.cs", label="var connection = new SqlConnection(_connectionString)", span="83-83"];
m13_48 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="MsmqJobQueueProvider.cs", label="connection.Open()", span="84-84"];
m13_49 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="MsmqJobQueueProvider.cs", label="return connection;", span="86-86"];
m13_50 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="MsmqJobQueueProvider.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m13_65 [cluster="System.IO.StreamReader.ReadToEnd()", file="MsmqJobQueueProvider.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m13_23 [cluster="Unk.Debug", file="MsmqJobQueueProvider.cs", label="Entry Unk.Debug", span=""];
m13_46 [cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="27-27"];
m13_13 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="Entry HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m13_15 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="!IsSqlEditionSupported(_connectionString)", span="48-48"];
m13_17 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="var script = GetStringResource(GetType().Assembly, ''HangFire.SqlServer.Install.sql'')", span="53-53"];
m13_19 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="var connection = CreateAndOpenConnection()", span="56-56"];
m13_14 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="Log.Debug(''Start installing HangFire SQL objects...'')", span="46-46"];
m13_16 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="50-50"];
m13_18 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="54-54"];
m13_20 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="connection.Execute(script)", span="58-58"];
m13_21 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="Log.Debug(''HangFire SQL objects installed.'')", span="61-61"];
m13_22 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="MsmqJobQueueProvider.cs", label="Exit HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m13_25 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="MsmqJobQueueProvider.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m13_66 [file="MsmqJobQueueProvider.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m14_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RabbitMqJobQueueProvider.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m14_12 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22"];
m14_13 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="return _jobQueue;", span="24-24"];
m14_14 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22"];
m14_0 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m14_1 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="queues == null", span="15-15"];
m14_3 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="configureAction == null", span="16-16"];
m14_5 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18"];
m14_6 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="_monitoringApi = new RabbitMqMonitoringApi(configureAction, queues.ToArray())", span="19-19"];
m14_2 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="throw new ArgumentNullException(''queues'');", span="15-15"];
m14_4 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="throw new ArgumentNullException(''configureAction'');", span="16-16"];
m14_7 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m14_10 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", span="15-15"];
m14_9 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21"];
m14_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RabbitMqJobQueueProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m14_15 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="27-27"];
m14_16 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="return _monitoringApi;", span="29-29"];
m14_17 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="27-27"];
m14_18 [file="RabbitMqJobQueueProvider.cs", label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span=""];
m15_16 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobScheduler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m15_33 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m15_65 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m15_79 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m15_32 [cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobScheduler.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m15_81 [cluster="string.Format(string, object, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m15_41 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="99-99"];
m15_42 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="return ''Recurring Job Scheduler'';", span="101-101"];
m15_43 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="99-99"];
m15_74 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobScheduler.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m15_75 [cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", span="160-160"];
m15_83 [cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var context = new CreateContext(connection, job, state)", span="162-162"];
m15_84 [cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var stateMachine = stateMachineFactory.Create(connection)", span="163-163"];
m15_85 [cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="return _creationProcess.Run(context, stateMachine);", span="165-165"];
m15_86 [cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", span="160-160"];
m15_69 [cluster="Unk._instantFactory", file="RecurringJobScheduler.cs", label="Entry Unk._instantFactory", span=""];
m15_72 [cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25"];
m15_80 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m15_36 [cluster="string.Format(string, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_88 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="RecurringJobScheduler.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m15_67 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m15_2 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="44-44"];
m15_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RecurringJobScheduler.cs", label="1: stateMachineFactory == null", span="50-50"];
m15_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="creationProcess == null", span="51-51"];
m15_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="instantFactory == null", span="52-52"];
m15_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throttler == null", span="53-53"];
m15_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RecurringJobScheduler.cs", label="0: _stateMachineFactory = stateMachineFactory", span="55-55"];
m15_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_creationProcess = creationProcess", span="56-56"];
m15_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_instantFactory = instantFactory", span="57-57"];
m15_14 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_throttler = throttler", span="58-58"];
m15_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RecurringJobScheduler.cs", label="0: throw new ArgumentNullException(''stateMachineFactory'');", span="50-50"];
m15_6 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''creationProcess'');", span="51-51"];
m15_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''instantFactory'');", span="52-52"];
m15_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''throttler'');", span="53-53"];
m15_15 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="44-44"];
m15_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="39-39"];
m15_1 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="39-39"];
m15_39 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="278-278"];
m15_35 [cluster="System.Func<T, TResult>.Invoke(T)", file="RecurringJobScheduler.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m15_68 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobScheduler.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m15_73 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m15_66 [cluster="Unk.Parse", file="RecurringJobScheduler.cs", label="Entry Unk.Parse", span=""];
m15_31 [cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22"];
m15_71 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m15_78 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m15_64 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m15_38 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", span="104-104"];
m15_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="110-110"];
m15_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var cron = recurringJob[''Cron'']", span="112-112"];
m15_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                : TimeZoneInfo.Utc", span="117-119"];
m15_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="123-125"];
m15_54 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var jobId = CreateBackgroundJob(connection, job, state, stateMachineFactory)", span="132-132"];
m15_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="136-139"];
m15_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="148-150"];
m15_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="154-156"];
m15_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var job = serializedJob.Deserialize()", span="111-111"];
m15_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="113-113"];
m15_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var instant = _instantFactory(cronSchedule, timeZone)", span="121-121"];
m15_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="instant.GetNextInstants(lastExecutionTime).Any()", span="129-129"];
m15_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="142-142"];
m15_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="146-146"];
m15_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var changedFields = new Dictionary<string, string>()", span="127-127"];
m15_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="143-143"];
m15_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="131-131"];
m15_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="String.IsNullOrEmpty(jobId)", span="134-134"];
m15_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label=TimeZoneNotFoundException, span="152-152"];
m15_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", span="104-104"];
m15_76 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobScheduler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m15_70 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m15_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="61-61"];
m15_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Throttle(context.CancellationToken)", span="63-63"];
m15_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var connection = context.Storage.GetConnection()", span="65-65"];
m15_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RecurringJobScheduler.cs", label="1: var stateMachineFactory = _stateMachineFactory(context.Storage)", span="69-69"];
m15_29 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Delay(context.CancellationToken)", span="95-95"];
m15_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="66-66"];
m15_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="68-68"];
m15_24 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="73-74"];
m15_26 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="TryScheduleJob(connection, recurringJobId, recurringJob, stateMachineFactory)", span="83-83"];
m15_23 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=recurringJobIds, span="71-71"];
m15_28 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="87-91"];
m15_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="recurringJob == null", span="76-76"];
m15_27 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=JobLoadException, span="85-85"];
m15_30 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="61-61"];
m15_40 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m15_34 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m15_37 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m15_89 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32"];
m15_77 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m15_82 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159"];
m15_87 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="36-36"];
m15_90 [file="RecurringJobScheduler.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m16_76 [cluster="RecurringJobScheduler.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry RecurringJobScheduler.cstr", span=""];
m16_16 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11"];
m16_33 [cluster="Mock<IStateMachineFactory>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m16_120 [cluster="Unk.SetRangeInHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m16_17 [cluster="Mock<IThrottler>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IThrottler>.cstr", span=""];
m16_157 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="168-168"];
m16_158 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var time = DateTime.UtcNow", span="170-170"];
m16_159 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="171-171"];
m16_162 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="_instant.Verify(x => x.GetNextInstants(time))", span="176-176"];
m16_160 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="172-172"];
m16_161 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="174-174"];
m16_163 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="168-168"];
m16_63 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m16_72 [cluster="Unk.Equal", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Equal", span=""];
m16_168 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="180-180"];
m16_169 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="182-183"];
m16_170 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="184-184"];
m16_171 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="186-186"];
m16_172 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="180-180"];
m16_62 [cluster="string.Format(string, object)", file="RecurringJobSchedulerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_27 [cluster="Mock<IJobCreationProcess>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m16_109 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="119-119"];
m16_110 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="122-122"];
m16_111 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="125-125"];
m16_112 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="var jobKey = String.Format(''recurring-job:{0}'', RecurringJobId)", span="128-128"];
m16_113 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id'')))", span="130-133"];
m16_114 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="135-139"];
m16_115 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="141-145"];
m16_116 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="119-119"];
m16_67 [cluster="Unk.Run", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Run", span=""];
m16_138 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="149-149"];
m16_139 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(Enumerable.Empty<DateTime>)", span="151-151"];
m16_140 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="152-152"];
m16_141 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="154-154"];
m16_142 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_process.Verify(\r\n                x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IJobCreator>()),\r\n                Times.Never)", span="156-158"];
m16_143 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant))))", span="160-164"];
m16_144 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="149-149"];
m16_173 [cluster="Unk.DoesNotThrow", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m16_84 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="89-89"];
m16_85 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", color=red, community=0, file="RecurringJobSchedulerFacts.cs", label="2: var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_process.Object, _stateMachineFactory, null, _throttler.Object))", span="91-93"];
m16_86 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''instantFactory'', exception.ParamName)", span="95-95"];
m16_87 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="89-89"];
m16_103 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="248-248"];
m16_233 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", color=red, community=0, file="RecurringJobSchedulerFacts.cs", label="0: return new RecurringJobScheduler(\r\n                _process.Object,\r\n                _stateMachineFactory,\r\n                _instantFactory,\r\n                _throttler.Object);", span="250-254"];
m16_234 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="248-248"];
m16_208 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="222-222"];
m16_209 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (!timeZoneInfo.Equals(TimeZoneInfo.Utc)) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="225-229"];
m16_210 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob.Remove(''TimeZoneId'')", span="230-230"];
m16_211 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="231-231"];
m16_212 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="234-234"];
m16_213 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="222-222"];
m16_38 [cluster="Unk.>", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.>", span=""];
m16_220 [cluster="System.TimeZoneInfo.Equals(System.TimeZoneInfo)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeZoneInfo.Equals(System.TimeZoneInfo)", span="0-0"];
m16_198 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m16_23 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m16_0 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="27-27"];
m16_1 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_context = new BackgroundProcessContextMock()", span="29-29"];
m16_2 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="1: _stateMachineFactory = storage =>\r\n            {\r\n                var factory = new Mock<IStateMachineFactory>();\r\n                factory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                    .Returns(new Mock<IStateMachine>().Object);\r\n                return factory.Object;\r\n            }", span="30-36"];
m16_3 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="1: _throttler = new Mock<IThrottler>()", span="38-38"];
m16_4 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instant = new Mock<IScheduleInstant>()", span="41-41"];
m16_5 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(new[] { _instant.Object.NowInstant })", span="42-42"];
m16_6 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="var timeZone1 = TimeZoneInfo.Local", span="44-44"];
m16_7 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory = (schedule, timeZone) => _instant.Object", span="46-46"];
m16_8 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob = new Dictionary<string, string>\r\n            {\r\n                { ''Cron'', ''* * * * *'' },\r\n                { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) },\r\n                { ''TimeZoneId'', timeZone1.Id }\r\n            }", span="48-53"];
m16_9 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="55-55"];
m16_10 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="56-56"];
m16_11 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(''recurring-jobs''))\r\n                .Returns(new HashSet<string> { RecurringJobId })", span="58-59"];
m16_12 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId)))\r\n                .Returns(_recurringJob)", span="61-62"];
m16_13 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_process = new Mock<IJobCreationProcess>()", span="64-64"];
m16_14 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IJobCreator>())).Returns(''job-id'')", span="65-65"];
m16_15 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="27-27"];
m16_18 [cluster="Mock<IScheduleInstant>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IScheduleInstant>.cstr", span=""];
m16_54 [cluster="Unk.GetConnection", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetConnection", span=""];
m16_197 [cluster="System.Type.GetType(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m16_204 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m16_131 [cluster="Unk.SerializeDateTime", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SerializeDateTime", span=""];
m16_21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m16_164 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m16_19 [cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m16_224 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="238-238"];
m16_225 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="240-240"];
m16_226 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="241-241"];
m16_227 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="243-243"];
m16_228 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="_process.Verify(x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IJobCreator>()), Times.Never)", span="245-245"];
m16_229 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="238-238"];
m16_98 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="109-109"];
m16_99 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="111-111"];
m16_100 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="113-113"];
m16_101 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>(), It.IsNotNull<IJobCreator>()))", span="115-115"];
m16_102 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="109-109"];
m16_189 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="203-203"];
m16_190 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var timeZoneId = Type.GetType(''Mono.Runtime'') != null ? ''Pacific/Honolulu'' : ''Hawaiian Standard Time''", span="205-205"];
m16_191 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (timeZoneInfo.Id != timeZoneId) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="207-211"];
m16_192 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var timeZone = TimeZoneInfo.FindSystemTimeZoneById(timeZoneId)", span="213-213"];
m16_193 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="214-214"];
m16_194 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="215-215"];
m16_195 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="218-218"];
m16_196 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="203-203"];
m16_24 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m16_104 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="61-61"];
m16_230 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="245-245"];
m16_40 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="42-42"];
m16_47 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="51-51"];
m16_51 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="56-56"];
m16_55 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="58-58"];
m16_59 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="61-61"];
m16_64 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="65-65"];
m16_28 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="30-36"];
m16_29 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="2: var factory = new Mock<IStateMachineFactory>()", span="32-32"];
m16_30 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="2: factory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                    .Returns(new Mock<IStateMachine>().Object)", span="33-34"];
m16_31 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="2: return factory.Object;", span="35-35"];
m16_35 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="33-33"];
m16_32 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="30-36"];
m16_36 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="2: x.Create(It.IsNotNull<IStorageConnection>())", span="33-33"];
m16_37 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="33-33"];
m16_41 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(It.IsAny<DateTime?>())", span="42-42"];
m16_42 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="42-42"];
m16_44 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="46-46"];
m16_45 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="_instant.Object", span="46-46"];
m16_46 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="46-46"];
m16_48 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="51-51"];
m16_49 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="51-51"];
m16_52 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetConnection()", span="56-56"];
m16_53 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="56-56"];
m16_56 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(''recurring-jobs'')", span="58-58"];
m16_57 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="58-58"];
m16_60 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId))", span="61-61"];
m16_61 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="61-61"];
m16_65 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IJobCreator>())", span="65-65"];
m16_66 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="65-65"];
m16_73 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="73-73"];
m16_74 [cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs", label="2: new RecurringJobScheduler(null, _stateMachineFactory, _instantFactory, _throttler.Object)", span="73-73"];
m16_75 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="73-73"];
m16_81 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="83-83"];
m16_82 [cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs", label="0: new RecurringJobScheduler(_process.Object, null, _instantFactory, _throttler.Object)", span="83-83"];
m16_83 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="83-83"];
m16_88 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="93-93"];
m16_89 [cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs", label="0: new RecurringJobScheduler(_process.Object, _stateMachineFactory, null, _throttler.Object)", span="93-93"];
m16_90 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="93-93"];
m16_95 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="103-103"];
m16_96 [cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs", label="0: new RecurringJobScheduler(_process.Object, _stateMachineFactory, _instantFactory, null)", span="103-103"];
m16_97 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="103-103"];
m16_106 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="115-115"];
m16_107 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Run(It.IsNotNull<CreateContext>(), It.IsNotNull<IJobCreator>())", span="115-115"];
m16_108 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="115-115"];
m16_118 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''))", span="130-133"];
m16_126 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="135-139"];
m16_133 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="141-145"];
m16_117 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="130-133"];
m16_125 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="135-139"];
m16_132 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="141-145"];
m16_119 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="130-133"];
m16_121 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="132-133"];
m16_122 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''", span="133-133"];
m16_123 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="132-133"];
m16_127 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="135-139"];
m16_128 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="137-139"];
m16_129 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="138-139"];
m16_130 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="137-139"];
m16_134 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="141-145"];
m16_135 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="143-145"];
m16_136 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="144-145"];
m16_137 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="143-145"];
m16_145 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="151-151"];
m16_148 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="157-157"];
m16_151 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="160-164"];
m16_146 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(It.IsAny<DateTime?>())", span="151-151"];
m16_147 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="151-151"];
m16_149 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IJobCreator>())", span="157-157"];
m16_150 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="157-157"];
m16_152 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)))", span="160-164"];
m16_153 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="160-164"];
m16_154 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="162-164"];
m16_155 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)", span="163-164"];
m16_156 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="162-164"];
m16_166 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(time)", span="176-176"];
m16_165 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="176-176"];
m16_167 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="176-176"];
m16_174 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="182-182"];
m16_178 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="186-186"];
m16_177 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="186-186"];
m16_175 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(It.IsAny<string>())", span="182-182"];
m16_176 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="182-182"];
m16_179 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="186-186"];
m16_187 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="199-199"];
m16_186 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="199-199"];
m16_188 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="199-199"];
m16_200 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="timeZoneInfo.Id != timeZoneId", span="209-209"];
m16_206 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="218-218"];
m16_205 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="218-218"];
m16_199 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="207-211"];
m16_201 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="throw new InvalidOperationException(''Invalid timezone'');", span="209-209"];
m16_202 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="return _instant.Object;", span="210-210"];
m16_203 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="207-211"];
m16_207 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="218-218"];
m16_216 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="!timeZoneInfo.Equals(TimeZoneInfo.Utc)", span="227-227"];
m16_222 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="234-234"];
m16_221 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="234-234"];
m16_215 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="225-229"];
m16_217 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="throw new InvalidOperationException(''Invalid timezone'');", span="227-227"];
m16_218 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="return _instant.Object;", span="228-228"];
m16_219 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="225-229"];
m16_223 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="234-234"];
m16_231 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IJobCreator>())", span="245-245"];
m16_232 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="245-245"];
m16_43 [cluster="Unk.GetNextInstants", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetNextInstants", span=""];
m16_77 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="79-79"];
m16_78 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_process.Object, null, _instantFactory, _throttler.Object))", span="81-83"];
m16_79 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="1: Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="85-85"];
m16_69 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="RecurringJobSchedulerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(null, _process.Object, _instantFactory, _throttler.Object))", span="71-73"];
m16_70 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="RecurringJobSchedulerFacts.cs", label="1: Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="75-75"];
m16_80 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="79-79"];
m16_105 [cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m16_58 [cluster="Unk.GetAllItemsFromSet", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m16_68 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="69-69"];
m16_71 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="69-69"];
m16_34 [cluster="Mock<IStateMachine>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m16_39 [cluster="Unk.Create", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Create", span=""];
m16_185 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m16_20 [cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m16_91 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="99-99"];
m16_92 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", color=red, community=0, file="RecurringJobSchedulerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_process.Object, _stateMachineFactory, _instantFactory, null))", span="101-103"];
m16_93 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''throttler'', exception.ParamName)", span="105-105"];
m16_94 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="99-99"];
m16_180 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="190-190"];
m16_181 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="193-194"];
m16_182 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="196-196"];
m16_183 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="199-199"];
m16_184 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="190-190"];
m16_214 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m16_25 [cluster="Mock<IStorageConnection>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m16_50 [cluster="System.Console.WriteLine()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m16_22 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m16_124 [cluster="Unk.ContainsKey", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.ContainsKey", span=""];
m16_26 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m16_235 [file="RecurringJobSchedulerFacts.cs", label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span=""];
m16_236 [file="RecurringJobSchedulerFacts.cs", label=jobKey, span=""];
m16_237 [file="RecurringJobSchedulerFacts.cs", label=time, span=""];
m16_238 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m16_239 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m16_240 [file="RecurringJobSchedulerFacts.cs", label=timeZoneId, span=""];
m16_241 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m16_242 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m17_0 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="SchedulePoller.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="18-18"];
m17_1 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="SchedulePoller.cs", label="Exit HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="18-18"];
m18_82 [cluster="System.Console.WriteLine(string, object)", file="SchedulePollerFacts.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m18_0 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Entry ConsoleSample.Program.Main()", span="13-13"];
m18_1 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="LogManager.LogFactory = new ConsoleLogFactory()", span="15-15"];
m18_2 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="SchedulePollerFacts.cs", label="2: JobStorage.Current = \r\n                new SqlServerStorage(@''Server=.\sqlexpress;Database=HangFire.SqlServer.Tests;Trusted_Connection=True;'')", span="17-18"];
m18_3 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="GlobalJobFilters.Filters.Add(new RetryAttribute())", span="21-21"];
m18_4 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var server = new BackgroundJobServer(25, ''critical'', ''default'')", span="23-23"];
m18_5 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var count = 1", span="25-25"];
m18_10 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="server.Start()", span="38-38"];
m18_6 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label=true, span="27-27"];
m18_44 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var number = count++", span="97-97"];
m18_7 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var command = Console.ReadLine()", span="29-29"];
m18_55 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="133-133"];
m18_8 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="31-31"];
m18_9 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="SchedulePollerFacts.cs", label="2: command.Equals(''start'', StringComparison.OrdinalIgnoreCase)", span="36-36"];
m18_11 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="41-41"];
m18_12 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var workCount = int.Parse(command.Substring(4))", span="45-45"];
m18_21 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="59-59"];
m18_22 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var workCount = int.Parse(command.Substring(7))", span="63-63"];
m18_30 [cluster="ConsoleSample.Program.Main()", color=red, community=0, file="SchedulePollerFacts.cs", label="2: command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="76-76"];
m18_31 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var workCount = int.Parse(command.Substring(6))", span="78-78"];
m18_36 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="85-85"];
m18_37 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var workCount = int.Parse(command.Substring(5))", span="87-87"];
m18_42 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="94-94"];
m18_43 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var seconds = int.Parse(command.Substring(2))", span="96-96"];
m18_46 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="101-101"];
m18_49 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="107-107"];
m18_50 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var workCount = int.Parse(command.Substring(5))", span="111-111"];
m18_13 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var i = 0", span="46-46"];
m18_14 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="i < workCount", span="46-46"];
m18_15 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var number = i", span="48-48"];
m18_17 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="i++", span="46-46"];
m18_18 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="51-51"];
m18_16 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="49-49"];
m18_19 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label=Exception, span="53-53"];
m18_20 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Console.WriteLine(ex.Message)", span="55-55"];
m18_23 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var i = 0", span="64-64"];
m18_24 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="i < workCount", span="64-64"];
m18_26 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="i++", span="64-64"];
m18_25 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="66-66"];
m18_27 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="68-68"];
m18_28 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label=Exception, span="70-70"];
m18_29 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Console.WriteLine(ex.Message)", span="72-72"];
m18_32 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var i = 0", span="79-79"];
m18_33 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="i < workCount", span="79-79"];
m18_35 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="i++", span="79-79"];
m18_34 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="SchedulePollerFacts.cs", label="2: BackgroundJob.Enqueue<Services>(x => x.Error())", span="81-81"];
m18_38 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="var i = 0", span="88-88"];
m18_39 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="i < workCount", span="88-88"];
m18_41 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="i++", span="88-88"];
m18_40 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="90-90"];
m18_45 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="98-98"];
m18_47 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Recurring())", span="103-103"];
m18_48 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Console.WriteLine(''Recurring job added'')", span="104-104"];
m18_51 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="112-122"];
m18_52 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="123-123"];
m18_53 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label=Exception, span="125-125"];
m18_54 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Console.WriteLine(ex.Message)", span="127-127"];
m18_56 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Console.ReadLine()", span="134-134"];
m18_57 [cluster="ConsoleSample.Program.Main()", file="SchedulePollerFacts.cs", label="Exit ConsoleSample.Program.Main()", span="13-13"];
m18_61 [cluster="HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", file="SchedulePollerFacts.cs", label="Entry HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", span="56-56"];
m18_108 [cluster="ConsoleSample.Services.EmptyCritical()", file="SchedulePollerFacts.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="17-17"];
m18_60 [cluster="HangFire.Filters.RetryAttribute.RetryAttribute()", file="SchedulePollerFacts.cs", label="Entry HangFire.Filters.RetryAttribute.RetryAttribute()", span="28-28"];
m18_86 [cluster="ConsoleSample.Services.Error()", file="SchedulePollerFacts.cs", label="Entry ConsoleSample.Services.Error()", span="22-22"];
m18_73 [cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="SchedulePollerFacts.cs", label="Entry HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="139-139"];
m18_69 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="SchedulePollerFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="100-100"];
m18_68 [cluster="int.Parse(string)", file="SchedulePollerFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m18_72 [cluster="System.TimeSpan.FromSeconds(double)", file="SchedulePollerFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m18_62 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="SchedulePollerFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41"];
m18_78 [cluster="ConsoleSample.Services.Random(int)", file="SchedulePollerFacts.cs", label="Entry ConsoleSample.Services.Random(int)", span="35-35"];
m18_91 [cluster="System.Guid.ToString()", file="SchedulePollerFacts.cs", label="Entry System.Guid.ToString()", span="0-0"];
m18_66 [cluster="string.StartsWith(string, System.StringComparison)", file="SchedulePollerFacts.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m18_92 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="SchedulePollerFacts.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="52-52"];
m18_63 [cluster="System.Console.ReadLine()", file="SchedulePollerFacts.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m18_99 [cluster="ConsoleSample.Services.Recurring()", file="SchedulePollerFacts.cs", label="Entry ConsoleSample.Services.Recurring()", span="29-29"];
m18_105 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="116-116"];
m18_76 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Random(number)", span="49-49"];
m18_75 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="49-49"];
m18_79 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="66-66"];
m18_83 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="81-81"];
m18_87 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="90-90"];
m18_94 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Random(number)", span="98-98"];
m18_93 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="98-98"];
m18_96 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="103-103"];
m18_100 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="112-122"];
m18_77 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="49-49"];
m18_80 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="66-66"];
m18_81 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="66-66"];
m18_84 [cluster="lambda expression", color=green, community=0, file="SchedulePollerFacts.cs", label="1: x.Error()", span="81-81"];
m18_85 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="81-81"];
m18_88 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="90-90"];
m18_89 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="90-90"];
m18_95 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="98-98"];
m18_97 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Recurring()", span="103-103"];
m18_98 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="103-103"];
m18_101 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="i % 2 == 0", span="114-114"];
m18_102 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="116-116"];
m18_103 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="120-120"];
m18_104 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="112-122"];
m18_109 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="120-120"];
m18_106 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.EmptyCritical()", span="116-116"];
m18_107 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="116-116"];
m18_110 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.EmptyDefault()", span="120-120"];
m18_111 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="120-120"];
m18_64 [cluster="string.Equals(string, System.StringComparison)", file="SchedulePollerFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m18_74 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="SchedulePollerFacts.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m18_90 [cluster="System.Guid.NewGuid()", file="SchedulePollerFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m18_65 [cluster="HangFire.BackgroundJobServer.Start()", file="SchedulePollerFacts.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="98-98"];
m18_59 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SchedulePollerFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25"];
m18_71 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SchedulePollerFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79"];
m18_70 [cluster="System.Console.WriteLine(string)", file="SchedulePollerFacts.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m18_58 [cluster="ConsoleLogFactory.cstr", file="SchedulePollerFacts.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m18_112 [cluster="ConsoleSample.Services.EmptyDefault()", file="SchedulePollerFacts.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="12-12"];
m18_67 [cluster="string.Substring(int)", file="SchedulePollerFacts.cs", label="Entry string.Substring(int)", span="0-0"];
m18_113 [file="SchedulePollerFacts.cs", label=number, span=""];
m18_114 [file="SchedulePollerFacts.cs", label=number, span=""];
m19_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerHeartbeat.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m19_5 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="String.IsNullOrEmpty(jobId)", span="30-30"];
m19_7 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="JobId = jobId", span="32-32"];
m19_14 [cluster="string.IsNullOrEmpty(string)", file="ServerHeartbeat.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m19_15 [cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", file="ServerHeartbeat.cs", label="Entry Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="40-40"];
m19_16 [cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", file="ServerHeartbeat.cs", label="Exit Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="40-40"];
m19_0 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", span="25-25"];
m19_1 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", color=green, community=0, file="ServerHeartbeat.cs", label="2: connection == null", span="28-28"];
m19_2 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", color=green, community=0, file="ServerHeartbeat.cs", label="2: throw new ArgumentNullException(''connection'');", span="28-28"];
m19_3 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", color=green, community=0, file="ServerHeartbeat.cs", label="1: stateMachine == null", span="29-29"];
m19_4 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="throw new ArgumentNullException(''stateMachine'');", span="29-29"];
m19_6 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="throw new ArgumentNullException(''jobId'');", span="30-30"];
m19_8 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="Job = job", span="33-33"];
m19_9 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="CreatedAt = createdAt", span="34-34"];
m19_10 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="Connection = connection", span="36-36"];
m19_11 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="StateMachine = stateMachine", span="37-37"];
m19_12 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="ServerHeartbeat.cs", label="Exit Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", span="25-25"];
m19_17 [file="ServerHeartbeat.cs", label="Hangfire.States.StateContext", span=""];
m20_24 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="ServerWatchdog.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m20_20 [cluster="Unk.GetType", file="ServerWatchdog.cs", label="Entry Unk.GetType", span=""];
m20_17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerWatchdog.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m20_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ServerWatchdog.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m20_9 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", color=green, community=0, file="ServerWatchdog.cs", label="0: return state;", span="27-27"];
m20_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerWatchdog.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m20_10 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", color=green, community=0, file="ServerWatchdog.cs", label="1: var jobType = redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Type'')", span="30-32"];
m20_11 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="ServerWatchdog.cs", label="var type = Type.GetType(jobType)", span="33-33"];
m20_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerWatchdog.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m20_6 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ServerWatchdog.cs", label="context.Transaction.RemoveFromSet(''processing'', context.JobId)", span="19-19"];
m20_15 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="ServerWatchdog.cs", label="return state;", span="45-45"];
m20_5 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ServerWatchdog.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="17-17"];
m20_7 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ServerWatchdog.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="17-17"];
m20_14 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="ServerWatchdog.cs", label="return new ScheduledState(\r\n                    ''Scheduled as a recurring job.'',\r\n                    DateTime.UtcNow.AddSeconds(recurringAttribute.Seconds));", span="40-42"];
m20_12 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="ServerWatchdog.cs", label="var recurringAttribute = type.GetCustomAttributes(true).OfType<RecurringAttribute>().SingleOrDefault()", span="36-36"];
m20_13 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="ServerWatchdog.cs", label="recurringAttribute != null", span="38-38"];
m20_16 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="ServerWatchdog.cs", label="Exit HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="20-20"];
m20_19 [cluster="Unk.GetValueFromHash", file="ServerWatchdog.cs", label="Entry Unk.GetValueFromHash", span=""];
m20_21 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ServerWatchdog.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m20_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="ServerWatchdog.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m20_25 [cluster="System.DateTime.AddSeconds(double)", file="ServerWatchdog.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m20_22 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ServerWatchdog.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m20_18 [cluster="string.Format(string, object)", file="ServerWatchdog.cs", label="Entry string.Format(string, object)", span="0-0"];
m20_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="ServerWatchdog.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m20_1 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="ServerWatchdog.cs", label="context.Transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="11-14"];
m20_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="ServerWatchdog.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m21_5 [cluster="Unk.GetTestRunner", file="SqlServerConnection.cs", label="Entry Unk.GetTestRunner", span=""];
m21_25 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="50-52"];
m21_29 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m21_61 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="115-115"];
m21_62 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="117-119"];
m21_63 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", color=red, community=0, file="SqlServerConnection.cs", label="0: Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="115-115"];
m21_64 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: Entry lambda expression", span="117-119"];
m21_65 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="117-119"];
m21_66 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: Exit lambda expression", span="117-119"];
m21_67 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="122-122"];
m21_68 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerConnection.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="124-126"];
m21_69 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="122-122"];
m21_85 [cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="SqlServerConnection.cs", label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="192-192"];
m21_86 [cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="SqlServerConnection.cs", label="testRunner.Then(''the job should be disposed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="194-194"];
m21_87 [cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="SqlServerConnection.cs", label="this.ScenarioCleanup()", span="196-196"];
m21_21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="48-48"];
m21_101 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="169-169"];
m21_102 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerConnection.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="171-173"];
m21_103 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="169-169"];
m21_41 [cluster="Unk.Then", file="SqlServerConnection.cs", label="Entry Unk.Then", span=""];
m21_88 [cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", span="184-184"];
m21_89 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=green, community=0, file="SqlServerConnection.cs", label="2: HangFire.Tests.Server.JobManagerFeature", span=""];
m21_90 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=green, community=0, file="SqlServerConnection.cs", label="0: QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="157-159"];
m21_91 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="148-148"];
m21_148 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m21_51 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="92-101"];
m21_70 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="124-126"];
m21_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="SqlServerConnection.cs", label="2: var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="31-33"];
m21_10 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="SqlServerConnection.cs", label="1: _connection.EnlistTransaction(Transaction.Current)", span="35-35"];
m21_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=0, file="SqlServerConnection.cs", label="1: _commandQueue", span="37-37"];
m21_12 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerConnection.cs", label="command(_connection)", span="39-39"];
m21_81 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="136-136"];
m21_82 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: Entry lambda expression", span="138-140"];
m21_83 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="1: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="138-140"];
m21_84 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="138-140"];
m21_36 [cluster="HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", file="SqlServerConnection.cs", label="this.ScenarioCleanup()", span="87-87"];
m21_38 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", color=green, community=0, file="SqlServerConnection.cs", label="0: Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m21_37 [cluster="HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", span="75-75"];
m21_39 [cluster="Unk.Given", file="SqlServerConnection.cs", label="Entry Unk.Given", span=""];
m21_40 [cluster="Unk.When", file="SqlServerConnection.cs", label="Entry Unk.When", span=""];
m21_113 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="183-183"];
m21_114 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=green, community=0, file="SqlServerConnection.cs", label="1: string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="185-188"];
m21_115 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=green, community=0, file="SqlServerConnection.cs", label="0: QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="190-192"];
m21_116 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="183-183"];
m21_24 [cluster="HangFire.Tests.Server.JobManagerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.Server.JobManagerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m21_146 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerConnection.cs", label="_commandQueue.Enqueue(action)", span="248-248"];
m21_147 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="246-246"];
m21_52 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.StateName,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(stateData)\r\n                })", span="92-101"];
m21_53 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="92-101"];
m21_54 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="104-104"];
m21_55 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=green, community=0, file="SqlServerConnection.cs", label="0: string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="106-108"];
m21_56 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=green, community=0, file="SqlServerConnection.cs", label="0: QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="110-112"];
m21_57 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="SqlServerConnection.cs", label="0: Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="104-104"];
m21_58 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: Entry lambda expression", span="110-112"];
m21_59 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="110-112"];
m21_60 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="110-112"];
m21_18 [cluster="HangFire.Tests.Server.JobManagerFeature.ScenarioTearDown()", file="SqlServerConnection.cs", label="Entry HangFire.Tests.Server.JobManagerFeature.ScenarioTearDown()", span="56-56"];
m21_0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="18-18"];
m21_1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerConnection.cs", label="1: connection == null", span="20-20"];
m21_2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerConnection.cs", label="1: throw new ArgumentNullException(''connection'');", span="20-20"];
m21_3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerConnection.cs", label="1: _connection = connection", span="22-22"];
m21_4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="18-18"];
m21_16 [cluster="HangFire.Tests.Server.JobManagerFeature.TestInitialize()", color=red, community=0, file="SqlServerConnection.cs", label="2: HangFire.Tests.Server.JobManagerFeature.FeatureSetup(null)", span="51-51"];
m21_79 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", color=red, community=0, file="SqlServerConnection.cs", label="0: this.ScenarioCleanup()", span="177-177"];
m21_80 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", color=green, community=0, file="SqlServerConnection.cs", label="0: Exit HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", span="160-160"];
m21_73 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="SqlServerConnection.cs", label="this.ScenarioSetup(scenarioInfo)", span="165-165"];
m21_74 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", color=red, community=0, file="SqlServerConnection.cs", label="0: testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="167-167"];
m21_75 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="SqlServerConnection.cs", label="testRunner.And(''its state is Processing'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="169-169"];
m21_19 [cluster="HangFire.Tests.Server.JobManagerFeature.ScenarioTearDown()", color=red, community=0, file="SqlServerConnection.cs", label="1: testRunner.OnScenarioEnd()", span="58-58"];
m21_13 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerConnection.cs", label="transaction.Complete()", span="42-42"];
m21_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="SqlServerConnection.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m21_28 [cluster="HangFire.Tests.Server.JobManagerFeature.ScenarioCleanup()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.Server.JobManagerFeature.ScenarioCleanup()", span="66-66"];
m21_20 [cluster="HangFire.Tests.Server.JobManagerFeature.ScenarioTearDown()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.Server.JobManagerFeature.ScenarioTearDown()", span="56-56"];
m21_95 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="162-162"];
m21_96 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerConnection.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="164-166"];
m21_97 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="162-162"];
m21_22 [cluster="HangFire.Tests.Server.JobManagerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.Server.JobManagerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m21_23 [cluster="HangFire.Tests.Server.JobManagerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=red, community=0, file="SqlServerConnection.cs", label="0: testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m21_107 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="176-176"];
m21_108 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", color=green, community=0, file="SqlServerConnection.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="178-180"];
m21_109 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="176-176"];
m21_8 [cluster="Unk.OnFeatureStart", file="SqlServerConnection.cs", label="Entry Unk.OnFeatureStart", span=""];
m21_14 [cluster="HangFire.Tests.Server.JobManagerFeature.TestInitialize()", file="SqlServerConnection.cs", label="Entry HangFire.Tests.Server.JobManagerFeature.TestInitialize()", span="46-46"];
m21_15 [cluster="HangFire.Tests.Server.JobManagerFeature.TestInitialize()", color=red, community=0, file="SqlServerConnection.cs", label="2: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Job manager''))", span="48-49"];
m21_17 [cluster="HangFire.Tests.Server.JobManagerFeature.TestInitialize()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.Server.JobManagerFeature.TestInitialize()", span="46-46"];
m21_140 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="239-239"];
m21_141 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerConnection.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="241-243"];
m21_142 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="239-239"];
m21_143 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="241-243"];
m21_33 [cluster="HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", color=red, community=0, file="SqlServerConnection.cs", label="0: testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m21_34 [cluster="HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", color=green, community=0, file="SqlServerConnection.cs", label="0: testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="83-83"];
m21_35 [cluster="HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", file="SqlServerConnection.cs", label="testRunner.Then(''the job should be performed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="85-85"];
m21_43 [cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="SqlServerConnection.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Successfully performed job should have the Succeeded state'', ((string[])(null)))", span="96-96"];
m21_76 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", color=red, community=0, file="SqlServerConnection.cs", label="0: testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="171-171"];
m21_77 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", color=red, community=0, file="SqlServerConnection.cs", label="0: testRunner.Then(''the job should not be performed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="173-173"];
m21_78 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", color=red, community=0, file="SqlServerConnection.cs", label="0: testRunner.But(''it should be removed from the dequeued list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="175-175"];
m21_93 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="2: x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="157-159"];
m21_92 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="157-159"];
m21_94 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="157-159"];
m21_110 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="178-180"];
m21_111 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="178-180"];
m21_112 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="178-180"];
m21_118 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="190-192"];
m21_117 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="190-192"];
m21_119 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="190-192"];
m21_128 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="212-212"];
m21_125 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="206-214"];
m21_126 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: var affectedRows = x.Execute(updateSql, new { key })", span="208-208"];
m21_127 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="1: affectedRows == 0", span="210-210"];
m21_129 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="206-214"];
m21_138 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="2: x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="234-234"];
m21_135 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="228-236"];
m21_136 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="1: var affectedRows = x.Execute(updateSql, new { key })", span="230-230"];
m21_137 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="1: affectedRows == 0", span="232-232"];
m21_139 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="228-236"];
m21_26 [cluster="HangFire.Tests.Server.JobManagerFeature.ScenarioCleanup()", file="SqlServerConnection.cs", label="Entry HangFire.Tests.Server.JobManagerFeature.ScenarioCleanup()", span="66-66"];
m21_71 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="SqlServerConnection.cs", label="Entry HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", span="160-160"];
m21_99 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="164-166"];
m21_105 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="171-173"];
m21_144 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="241-243"];
m21_42 [cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="SqlServerConnection.cs", label="Entry HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", span="94-94"];
m21_44 [cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="SqlServerConnection.cs", label="this.ScenarioSetup(scenarioInfo)", span="98-98"];
m21_98 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="164-166"];
m21_104 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="171-173"];
m21_27 [cluster="HangFire.Tests.Server.JobManagerFeature.ScenarioCleanup()", color=red, community=0, file="SqlServerConnection.cs", label="1: testRunner.CollectScenarioErrors()", span="68-68"];
m21_72 [cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", color=red, community=0, file="SqlServerConnection.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Worker should processes only jobs in the Enqueued state, but it should remove the'' +\r\n                    '' job from the dequeued list anyway'', ((string[])(null)))", span="162-163"];
m21_100 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="164-166"];
m21_106 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="171-173"];
m21_145 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="241-243"];
m21_130 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="217-217"];
m21_131 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", color=green, community=0, file="SqlServerConnection.cs", label="1: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="219-224"];
m21_132 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerConnection.cs", label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="225-226"];
m21_133 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="228-236"];
m21_134 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="217-217"];
m21_30 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="55-55"];
m21_31 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="57-59"];
m21_32 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="55-55"];
m21_45 [cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", color=red, community=0, file="SqlServerConnection.cs", label="0: testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="100-100"];
m21_46 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="84-84"];
m21_47 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerConnection.cs", label="var stateData = state.GetData(method)", span="86-86"];
m21_48 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=green, community=0, file="SqlServerConnection.cs", label="0: string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="88-90"];
m21_49 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=green, community=0, file="SqlServerConnection.cs", label="0: QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.StateName,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(stateData)\r\n                }))", span="92-101"];
m21_50 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="84-84"];
m21_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SqlServerConnection.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m21_120 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="195-195"];
m21_121 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", color=green, community=0, file="SqlServerConnection.cs", label="1: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="197-202"];
m21_122 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", color=green, community=0, file="SqlServerConnection.cs", label="1: string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="203-204"];
m21_123 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="206-214"];
m21_124 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="195-195"];
m21_149 [file="SqlServerConnection.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m21_152 [file="SqlServerConnection.cs", label=string, span=""];
m21_157 [file="SqlServerConnection.cs", label=string, span=""];
m21_158 [file="SqlServerConnection.cs", label="HangFire.Common.States.JobState", span=""];
m21_159 [file="SqlServerConnection.cs", label=stateData, span=""];
m21_160 [file="SqlServerConnection.cs", label=addStateSql, span=""];
m21_161 [file="SqlServerConnection.cs", label=string, span=""];
m21_162 [file="SqlServerConnection.cs", label=string, span=""];
m21_163 [file="SqlServerConnection.cs", label=enqueueJobSql, span=""];
m21_164 [file="SqlServerConnection.cs", label=string, span=""];
m21_167 [file="SqlServerConnection.cs", label=string, span=""];
m21_168 [file="SqlServerConnection.cs", label=string, span=""];
m21_169 [file="SqlServerConnection.cs", label="System.TimeSpan", span=""];
m21_170 [file="SqlServerConnection.cs", label=string, span=""];
m21_171 [file="SqlServerConnection.cs", label=string, span=""];
m21_172 [file="SqlServerConnection.cs", label=double, span=""];
m21_173 [file="SqlServerConnection.cs", label=addSql, span=""];
m21_178 [file="SqlServerConnection.cs", label=string, span=""];
m21_179 [file="SqlServerConnection.cs", label=string, span=""];
m21_180 [file="SqlServerConnection.cs", label=int, span=""];
m21_181 [file="SqlServerConnection.cs", label=int, span=""];
m21_182 [file="SqlServerConnection.cs", label=trimSql, span=""];
m21_183 [file="SqlServerConnection.cs", label=string, span=""];
m21_184 [file="SqlServerConnection.cs", label=updateSql, span=""];
m21_186 [file="SqlServerConnection.cs", label=string, span=""];
m21_187 [file="SqlServerConnection.cs", label=updateSql, span=""];
m21_188 [file="SqlServerConnection.cs", label=insertSql, span=""];
m21_153 [file="SqlServerConnection.cs", label=string, span=""];
m21_154 [file="SqlServerConnection.cs", label="HangFire.Common.States.JobState", span=""];
m21_155 [file="SqlServerConnection.cs", label=stateData, span=""];
m21_156 [file="SqlServerConnection.cs", label=addAndSetStateSql, span=""];
m21_185 [file="SqlServerConnection.cs", label=insertSql, span=""];
m21_150 [file="SqlServerConnection.cs", label=string, span=""];
m21_151 [file="SqlServerConnection.cs", label="System.TimeSpan", span=""];
m21_165 [file="SqlServerConnection.cs", label=string, span=""];
m21_166 [file="SqlServerConnection.cs", label="System.TimeSpan", span=""];
m21_174 [file="SqlServerConnection.cs", label=string, span=""];
m21_175 [file="SqlServerConnection.cs", label=string, span=""];
m21_176 [file="SqlServerConnection.cs", label=string, span=""];
m21_177 [file="SqlServerConnection.cs", label=string, span=""];
m21_189 [file="SqlServerConnection.cs", label=string, span=""];
m21_190 [file="SqlServerConnection.cs", label="System.TimeSpan", span=""];
m22_30 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label=_completed, span="79-79"];
m22_20 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: throw new ArgumentNullException(''stateDescriptors'');", span="47-47"];
m22_113 [cluster="Unk.EnqueueItemOnList", file="SqlServerDistributedLock.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m22_99 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerDistributedLock.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m22_52 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="SqlServerDistributedLock.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8"];
m22_108 [cluster="Unk.SetRangeInHash", file="SqlServerDistributedLock.cs", label="Entry Unk.SetRangeInHash", span=""];
m22_28 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: _stateAppliedFilters = stateAppliedFilters", span="54-54"];
m22_53 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="Entry HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="129-129"];
m22_82 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="var transaction = _redis.CreateTransaction()", span="132-132"];
m22_83 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="AppendHistory(transaction, jobId, state, appendToJob)", span="134-134"];
m22_84 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="transaction.Commit()", span="135-135"];
m22_85 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="Exit HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="129-129"];
m22_25 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="SqlServerDistributedLock.cs", label="_redis = redis", span="51-51"];
m22_75 [cluster="Unk.Apply", file="SqlServerDistributedLock.cs", label="Entry Unk.Apply", span=""];
m22_48 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerDistributedLock.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m22_31 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="return;", span="79-79"];
m22_45 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: return ApplyState(jobId, currentState, state);", span="89-89"];
m22_35 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=0, file="SqlServerDistributedLock.cs", label="2: parameters.Add(''@LockOwner'', LockOwner)", span="85-85"];
m22_42 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="SqlServerDistributedLock.cs", label="Hangfire.SqlServer.SqlServerDistributedLock", span=""];
m22_40 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=2, file="SqlServerDistributedLock.cs", label="2: throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                        ''Could not release a lock on the resource '{0}': Server returned the '{1}' error.'', \r\n                        _resource,\r\n                        releaseResult));", span="97-101"];
m22_34 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=0, file="SqlServerDistributedLock.cs", label="2: parameters.Add(''@Resource'', _resource)", span="84-84"];
m22_44 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="SqlServerDistributedLock.cs", label="AppendHistory(jobId, oldState, false)", span="85-85"];
m22_33 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=0, file="SqlServerDistributedLock.cs", label="2: var parameters = new DynamicParameters()", span="83-83"];
m22_32 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="_completed = true", span="81-81"];
m22_38 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=0, file="SqlServerDistributedLock.cs", label="2: var releaseResult = parameters.Get<int>(''@Result'')", span="93-93"];
m22_41 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="77-77"];
m22_36 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=0, file="SqlServerDistributedLock.cs", label="2: parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="86-86"];
m22_43 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="SqlServerDistributedLock.cs", label="oldState != state", span="83-83"];
m22_37 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=2, file="SqlServerDistributedLock.cs", label="2: _connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="88-91"];
m22_39 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=0, file="SqlServerDistributedLock.cs", label="2: releaseResult < 0", span="95-95"];
m22_46 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="SqlServerDistributedLock.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m22_26 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: _stateDescriptors = stateDescriptors", span="52-52"];
m22_104 [cluster="Unk.SetEntryInHash", file="SqlServerDistributedLock.cs", label="Entry Unk.SetEntryInHash", span=""];
m22_47 [cluster="string.Format(string, object)", file="SqlServerDistributedLock.cs", label="Entry string.Format(string, object)", span="0-0"];
m22_0 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", span="42-42"];
m22_1 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="String.IsNullOrEmpty(resource)", span="44-44"];
m22_3 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", color=red, community=0, file="SqlServerDistributedLock.cs", label="2: connection == null", span="45-45"];
m22_5 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="_resource = resource", span="47-47"];
m22_6 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", color=red, community=0, file="SqlServerDistributedLock.cs", label="2: _connection = connection", span="48-48"];
m22_12 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockTimeout'', timeout.TotalMilliseconds)", span="55-55"];
m22_14 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", color=red, community=2, file="SqlServerDistributedLock.cs", label="2: connection.Execute(\r\n                @''sp_getapplock'', \r\n                parameters, \r\n                commandType: CommandType.StoredProcedure)", span="58-61"];
m22_2 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="throw new ArgumentNullException(''resource'');", span="44-44"];
m22_4 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", color=red, community=0, file="SqlServerDistributedLock.cs", label="2: throw new ArgumentNullException(''connection'');", span="45-45"];
m22_7 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="var parameters = new DynamicParameters()", span="50-50"];
m22_8 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Resource'', _resource)", span="51-51"];
m22_9 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@DbPrincipal'', ''public'')", span="52-52"];
m22_10 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockMode'', LockMode)", span="53-53"];
m22_11 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="54-54"];
m22_13 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="56-56"];
m22_15 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, System.TimeSpan, IDbConnection)", file="SqlServerDistributedLock.cs", label="var lockResult = parameters.Get<int>(''@Result'')", span="63-63"];
m22_16 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="SqlServerDistributedLock.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", span="40-40"];
m22_17 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: redis == null", span="46-46"];
m22_18 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: throw new ArgumentNullException(''redis'');", span="46-46"];
m22_112 [cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerDistributedLock.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="39-39"];
m22_100 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerDistributedLock.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62"];
m22_81 [cluster="Unk.RemoveEntry", file="SqlServerDistributedLock.cs", label="Entry Unk.RemoveEntry", span=""];
m22_73 [cluster="Unk.OnStateUnapplied", file="SqlServerDistributedLock.cs", label="Entry Unk.OnStateUnapplied", span=""];
m22_60 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", color=green, community=0, file="SqlServerDistributedLock.cs", label="1: transaction.QueueCommand(x => x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId)))", span="107-108"];
m22_56 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: var transaction = _redis.CreateTransaction()", span="98-98"];
m22_55 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="SqlServerDistributedLock.cs", label="Entry HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", span="93-93"];
m22_57 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", color=green, community=0, file="SqlServerDistributedLock.cs", label="1: currentState != String.Empty", span="100-100"];
m22_59 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: _stateDescriptors[currentState].Unapply(transaction, jobId)", span="104-104"];
m22_62 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", color=green, community=0, file="SqlServerDistributedLock.cs", label="1: filter.OnStateUnapplied(transaction, jobId, currentState)", span="112-112"];
m22_63 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="SqlServerDistributedLock.cs", label="AppendHistory(transaction, jobId, newState, true)", span="116-116"];
m22_64 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="SqlServerDistributedLock.cs", label="newState.Apply(transaction, jobId)", span="118-118"];
m22_66 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="SqlServerDistributedLock.cs", label="filter.OnStateApplied(transaction, jobId, newState)", span="122-122"];
m22_67 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="SqlServerDistributedLock.cs", label="return transaction.Commit();", span="125-125"];
m22_58 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: _stateDescriptors.ContainsKey(currentState)", span="102-102"];
m22_61 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", color=green, community=0, file="SqlServerDistributedLock.cs", label="1: _stateAppliedFilters", span="110-110"];
m22_65 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="SqlServerDistributedLock.cs", label=_stateAppliedFilters, span="120-120"];
m22_68 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="SqlServerDistributedLock.cs", label="Exit HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", span="93-93"];
m22_24 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: throw new ArgumentNullException(''stateAppliedFilters'');", span="49-49"];
m22_19 [cluster="string.IsNullOrEmpty(string)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: Entry string.IsNullOrEmpty(string)", span="0-0"];
m22_21 [cluster="DynamicParameters.cstr", file="SqlServerDistributedLock.cs", label="Entry DynamicParameters.cstr", span=""];
m22_23 [cluster="Unk.Execute", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: Entry Unk.Execute", span=""];
m22_27 [cluster="Unk.Format", file="SqlServerDistributedLock.cs", label="Entry Unk.Format", span=""];
m22_22 [cluster="Unk.Add", file="SqlServerDistributedLock.cs", label="Entry Unk.Add", span=""];
m22_29 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="77-77"];
m22_76 [cluster="Unk.OnStateApplied", file="SqlServerDistributedLock.cs", label="Entry Unk.OnStateApplied", span=""];
m22_86 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="Entry HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="139-139"];
m22_91 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="transaction.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName))", span="149-152"];
m22_92 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties))", span="154-156"];
m22_95 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties)))", span="162-164"];
m22_90 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label=appendToJob, span="147-147"];
m22_87 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="var properties = new Dictionary<string, string>(state.GetProperties())", span="142-142"];
m22_93 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="properties.Add(''Reason'', state.Reason)", span="159-159"];
m22_94 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="160-160"];
m22_89 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="properties.Add(''State'', state.StateName)", span="145-145"];
m22_88 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="var now = DateTime.UtcNow", span="143-143"];
m22_96 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerDistributedLock.cs", label="Exit HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="139-139"];
m22_97 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="SqlServerDistributedLock.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m22_71 [cluster="Unk.Unapply", file="SqlServerDistributedLock.cs", label="Entry Unk.Unapply", span=""];
m22_70 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerDistributedLock.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m22_109 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="Entry lambda expression", span="162-164"];
m22_78 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="Entry lambda expression", span="107-108"];
m22_79 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId))", span="107-108"];
m22_80 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="Exit lambda expression", span="107-108"];
m22_102 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName)", span="149-152"];
m22_106 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties)", span="154-156"];
m22_110 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties))", span="162-164"];
m22_101 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="Entry lambda expression", span="149-152"];
m22_105 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="Entry lambda expression", span="154-156"];
m22_103 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="Exit lambda expression", span="149-152"];
m22_107 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="Exit lambda expression", span="154-156"];
m22_111 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="Exit lambda expression", span="162-164"];
m22_51 [cluster="Unk.Contains", file="SqlServerDistributedLock.cs", label="Entry Unk.Contains", span=""];
m22_50 [cluster="Unk.GetValueFromHash", file="SqlServerDistributedLock.cs", label="Entry Unk.GetValueFromHash", span=""];
m22_77 [cluster="Unk.Commit", file="SqlServerDistributedLock.cs", label="Entry Unk.Commit", span=""];
m22_72 [cluster="Unk.QueueCommand", file="SqlServerDistributedLock.cs", label="Entry Unk.QueueCommand", span=""];
m22_74 [cluster="Unk.AppendHistory", file="SqlServerDistributedLock.cs", label="Entry Unk.AppendHistory", span=""];
m22_54 [cluster="Unk.ApplyState", file="SqlServerDistributedLock.cs", label="Entry Unk.ApplyState", span=""];
m22_49 [cluster="Unk.AcquireLock", file="SqlServerDistributedLock.cs", label="Entry Unk.AcquireLock", span=""];
m22_69 [cluster="Unk.CreateTransaction", file="SqlServerDistributedLock.cs", label="Entry Unk.CreateTransaction", span=""];
m22_98 [cluster="HangFire.States.JobState.GetProperties()", file="SqlServerDistributedLock.cs", label="Entry HangFire.States.JobState.GetProperties()", span="18-18"];
m22_114 [file="SqlServerDistributedLock.cs", label="HangFire.States.StateMachine", span=""];
m22_115 [file="SqlServerDistributedLock.cs", label=string, span=""];
m22_116 [file="SqlServerDistributedLock.cs", label=string, span=""];
m22_117 [file="SqlServerDistributedLock.cs", label="HangFire.States.JobState", span=""];
m22_118 [file="SqlServerDistributedLock.cs", label=properties, span=""];
m23_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerFetchedJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m23_18 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="61-61"];
m23_19 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", color=red, community=2, file="SqlServerFetchedJob.cs", label="1: _connection.Execute(\r\n                ''update HangFire.JobQueue set FetchedAt = null where Id = @id'',\r\n                new { id = Id })", span="63-65"];
m23_20 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="_requeued = true", span="67-67"];
m23_21 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="61-61"];
m23_0 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31"];
m23_1 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=red, community=0, file="SqlServerFetchedJob.cs", label="0: connection == null", span="37-37"];
m23_3 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="jobId == null", span="38-38"];
m23_5 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="queue == null", span="39-39"];
m23_7 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=red, community=0, file="SqlServerFetchedJob.cs", label="0: _connection = connection", span="41-41"];
m23_8 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="Id = id", span="43-43"];
m23_9 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="JobId = jobId", span="44-44"];
m23_10 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="Queue = queue", span="45-45"];
m23_2 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=red, community=0, file="SqlServerFetchedJob.cs", label="0: throw new ArgumentNullException(''connection'');", span="37-37"];
m23_4 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''jobId'');", span="38-38"];
m23_6 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''queue'');", span="39-39"];
m23_11 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31"];
m23_17 [cluster="Unk.Execute", file="SqlServerFetchedJob.cs", label="Entry Unk.Execute", span=""];
m23_22 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70"];
m23_23 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label=_disposed, span="72-72"];
m23_24 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="return;", span="72-72"];
m23_25 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="!_removedFromQueue && !_requeued", span="74-74"];
m23_26 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="Requeue()", span="76-76"];
m23_27 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="_disposed = true", span="79-79"];
m23_28 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70"];
m23_13 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52"];
m23_14 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", color=red, community=2, file="SqlServerFetchedJob.cs", label="1: _connection.Execute(\r\n                ''delete from HangFire.JobQueue where Id = @id'',\r\n                new { id = Id })", span="54-56"];
m23_15 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="_removedFromQueue = true", span="58-58"];
m23_16 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52"];
m23_29 [file="SqlServerFetchedJob.cs", label="Hangfire.SqlServer.SqlServerFetchedJob", span=""];
m24_10 [cluster="Mock<IStateMachine>.cstr", file="SqlServerJobQueue.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m24_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerJobQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m24_16 [cluster="lambda expression", file="SqlServerJobQueue.cs", label="Entry lambda expression", span="21-21"];
m24_19 [cluster="StateContext.cstr", color=green, community=0, file="SqlServerJobQueue.cs", label="1: Entry StateContext.cstr", span=""];
m24_17 [cluster="lambda expression", file="SqlServerJobQueue.cs", label="new StateContext(JobIdValue, JobValue, CreatedAtValue, ConnectionValue.Object, StateMachineValue.Object)", span="21-21"];
m24_20 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SqlServerJobQueue.cs", label="2: Hangfire.Core.Tests.StateContextMock", span=""];
m24_21 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="state == null", span="38-38"];
m24_23 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="args == null", span="39-39"];
m24_25 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="41-41"];
m24_26 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="43-45"];
m24_27 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="var jobParameters = CreateJobParameters(jobType, args)", span="50-50"];
m24_28 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="var context = new CreateContext(\r\n                    new ClientJobDescriptor(_redis, jobId, jobParameters, state))", span="52-53"];
m24_30 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="return jobId;", span="57-57"];
m24_18 [cluster="lambda expression", file="SqlServerJobQueue.cs", label="Exit lambda expression", span="21-21"];
m24_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="throw new ArgumentNullException(''state'');", span="38-38"];
m24_24 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="throw new ArgumentNullException(''args'');", span="39-39"];
m24_32 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="throw new CreateJobFailedException(''Job creation was failed. See the inner exception for details.'', ex);", span="61-61"];
m24_29 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="_jobCreator.CreateJob(context)", span="55-55"];
m24_31 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label=Exception, span="59-59"];
m24_33 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m24_37 [cluster="string.Format(string, object, object)", file="SqlServerJobQueue.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m24_75 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="SqlServerJobQueue.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m24_43 [cluster="HangFire.Client.JobClient.Dispose()", file="SqlServerJobQueue.cs", label="Entry HangFire.Client.JobClient.Dispose()", span="65-65"];
m24_44 [cluster="HangFire.Client.JobClient.Dispose()", color=green, community=0, file="SqlServerJobQueue.cs", label="0: _redis.Dispose()", span="67-67"];
m24_45 [cluster="HangFire.Client.JobClient.Dispose()", file="SqlServerJobQueue.cs", label="Exit HangFire.Client.JobClient.Dispose()", span="65-65"];
m24_38 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m24_47 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="var job = new Dictionary<string, string>()", span="73-73"];
m24_48 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="job[''Type''] = jobType.AssemblyQualifiedName", span="74-74"];
m24_49 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="75-75"];
m24_52 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="return job;", span="79-79"];
m24_50 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="job[''State''] = String.Empty", span="76-76"];
m24_51 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="77-77"];
m24_53 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m24_35 [cluster="System.Type.IsAssignableFrom(System.Type)", file="SqlServerJobQueue.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m24_73 [cluster="object.GetType()", file="SqlServerJobQueue.cs", label="Entry object.GetType()", span="0-0"];
m24_55 [cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerJobQueue.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="39-39"];
m24_56 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerJobQueue.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62"];
m24_11 [cluster="Unk.GetClient", file="SqlServerJobQueue.cs", label="Entry Unk.GetClient", span=""];
m24_71 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="SqlServerJobQueue.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m24_15 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m24_2 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerJobQueue.cs", label="JobValue = Job.FromExpression(() => Console.WriteLine())", span="15-15"];
m24_4 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerJobQueue.cs", label="ConnectionValue = new Mock<IStorageConnection>()", span="17-17"];
m24_6 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerJobQueue.cs", label="_context = new Lazy<StateContext>(\r\n                () => new StateContext(JobIdValue, JobValue, CreatedAtValue, ConnectionValue.Object, StateMachineValue.Object))", span="20-21"];
m24_7 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerJobQueue.cs", label="Exit Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12"];
m24_8 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerJobQueue.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m24_3 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerJobQueue.cs", label="CreatedAtValue = DateTime.UtcNow", span="16-16"];
m24_5 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerJobQueue.cs", label="StateMachineValue = new Mock<IStateMachine>()", span="18-18"];
m24_9 [cluster="Mock<IStorageConnection>.cstr", file="SqlServerJobQueue.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m24_74 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="SqlServerJobQueue.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m24_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerJobQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m24_76 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="SqlServerJobQueue.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m24_72 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="SqlServerJobQueue.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m24_34 [cluster="string.IsNullOrEmpty(string)", file="SqlServerJobQueue.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m24_46 [cluster="Unk.Dispose", file="SqlServerJobQueue.cs", label="Entry Unk.Dispose", span=""];
m24_41 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="SqlServerJobQueue.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m24_42 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="SqlServerJobQueue.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22"];
m24_65 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="SqlServerJobQueue.cs", label="1: value = converter.ConvertToInvariantString(propertyValue)", span="97-97"];
m24_61 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="var propertyValue = descriptor.GetValue(obj)", span="89-89"];
m24_64 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="96-96"];
m24_66 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: Exception", span="99-99"];
m24_68 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="result.Add(descriptor.Name, value)", span="110-110"];
m24_67 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="101-106"];
m24_60 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="TypeDescriptor.GetProperties(obj)", span="87-87"];
m24_62 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="string value = null", span="90-90"];
m24_63 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="propertyValue != null", span="92-92"];
m24_57 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="var result = new Dictionary<string, string>()", span="84-84"];
m24_58 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="obj == null", span="85-85"];
m24_69 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="return result;", span="113-113"];
m24_59 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="return result;", span="85-85"];
m24_70 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="SqlServerJobQueue.cs", label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m24_12 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="SqlServerJobQueue.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m24_13 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="SqlServerJobQueue.cs", label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30"];
m24_14 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="SqlServerJobQueue.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m24_40 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerJobQueue.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m24_36 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerJobQueue.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m24_0 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerJobQueue.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12"];
m24_1 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerJobQueue.cs", label="JobIdValue = ''job-id''", span="14-14"];
m24_39 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="SqlServerJobQueue.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m24_78 [file="SqlServerJobQueue.cs", label="HangFire.Client.JobClient", span=""];
m25_281 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="412-412"];
m25_282 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="var serializedHistory = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="414-415"];
m25_285 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="i < table.RowCount", span="418-418"];
m25_286 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(table.Rows[i][''State''], history[i][''State''])", span="420-420"];
m25_283 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="var history = serializedHistory.Select(JobHelper.FromJson<Dictionary<string, string>>).ToList()", span="416-416"];
m25_284 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="var i = 0", span="418-418"];
m25_287 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="i++", span="418-418"];
m25_288 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="412-412"];
m25_174 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="273-273"];
m25_175 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SqlServerJobQueueMonitoringApi.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="275-275"];
m25_176 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SqlServerJobQueueMonitoringApi.cs", label="var timestamp = JobHelper.FromTimestamp((long)score)", span="276-276"];
m25_177 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="278-278"];
m25_178 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.AddSeconds(1))", span="279-279"];
m25_179 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="273-273"];
m25_158 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="248-248"];
m25_159 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="250-250"];
m25_160 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="251-251"];
m25_161 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="248-248"];
m25_112 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="167-167"];
m25_113 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="var stateMachine = new StateMachine(\r\n                Redis.Client, _descriptors, _stateChangingFilters, _stateAppliedFilters)", span="170-171"];
m25_114 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _stateMocks[state].Object, allowedState)", span="172-172"];
m25_115 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="167-167"];
m25_183 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="283-283"];
m25_184 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="285-285"];
m25_185 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SqlServerJobQueueMonitoringApi.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="286-286"];
m25_186 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SqlServerJobQueueMonitoringApi.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="287-287"];
m25_187 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="289-289"];
m25_188 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="290-290"];
m25_189 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="283-283"];
m25_119 [cluster="Unk.AreEqual", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.AreEqual", span=""];
m25_173 [cluster="Unk.IsFalse", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.IsFalse", span=""];
m25_100 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", span="40-40"];
m25_71 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="102-102"];
m25_72 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="Given(String.Format(''a '{0}' state'', state))", span="104-104"];
m25_73 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="_stateChangingFilters.Add(\r\n                new TestStateChangingFilter(name, _stateChangingResults, _stateMocks[state].Object))", span="106-107"];
m25_74 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="102-102"];
m25_157 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m25_230 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", span="342-342"];
m25_231 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="SqlServerJobQueueMonitoringApi.cs", label="_stateMocks[state].Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), It.IsAny<string>()),\r\n                Times.Never)", span="344-346"];
m25_232 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", span="342-342"];
m25_111 [cluster="Unk.ChangeState", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.ChangeState", span=""];
m25_95 [cluster="Unk.Unapply", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.Unapply", span=""];
m25_124 [cluster="Unk.ForEach", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.ForEach", span=""];
m25_215 [cluster="Unk.IsNotNull", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.IsNotNull", span=""];
m25_47 [cluster="Unk.Given", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.Given", span=""];
m25_190 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="294-294"];
m25_191 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="296-296"];
m25_192 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="294-294"];
m25_270 [cluster="Unk.ContainsKey", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.ContainsKey", span=""];
m25_254 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="365-365"];
m25_255 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="367-368"];
m25_256 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsNotNull(entry)", span="369-369"];
m25_257 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="371-371"];
m25_258 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsNotNull(history, entry)", span="372-372"];
m25_260 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(history.ContainsKey(property.Key))", span="376-376"];
m25_261 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(property.Value, history[property.Key])", span="377-377"];
m25_259 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SqlServerJobQueueMonitoringApi.cs", label=_stateProperties, span="374-374"];
m25_262 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="365-365"];
m25_156 [cluster="HangFire.States.JobState.GetProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.States.JobState.GetProperties()", span="18-18"];
m25_142 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="217-217"];
m25_143 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="219-224"];
m25_144 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n            })", span="226-232"];
m25_145 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="217-217"];
m25_141 [cluster="Unk.PopItemFromList", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.PopItemFromList", span=""];
m25_101 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m25_75 [cluster="TestStateChangingFilter.cstr", file="SqlServerJobQueueMonitoringApi.cs", label="Entry TestStateChangingFilter.cstr", span=""];
m25_29 [cluster="Mock<JobState>.cstr", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Mock<JobState>.cstr", span=""];
m25_17 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m25_263 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m25_116 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="176-176"];
m25_117 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(name, _state.StateName)", span="178-178"];
m25_118 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="176-176"];
m25_66 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="96-96"];
m25_67 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", color=red, community=0, file="SqlServerJobQueueMonitoringApi.cs", label="2: _stateChangingFilters.Add(new TestStateChangingFilter(name, _stateChangingResults))", span="98-98"];
m25_68 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="96-96"];
m25_10 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="49-49"];
m25_11 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="SqlServerJobQueueMonitoringApi.cs", label="_state = new ProcessingState(''SomeReason'', ''TestServer'')", span="51-51"];
m25_12 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="49-49"];
m25_22 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m25_18 [cluster="System.DateTime.AddDays(double)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m25_64 [cluster="Mock<JobStateDescriptor>.cstr", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Mock<JobStateDescriptor>.cstr", span=""];
m25_40 [cluster="Unk.GetProperties", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.GetProperties", span=""];
m25_236 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="350-350"];
m25_237 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="SqlServerJobQueueMonitoringApi.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId)))", span="352-353"];
m25_238 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="350-350"];
m25_269 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="382-382"];
m25_264 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="382-382"];
m25_265 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="384-385"];
m25_266 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SqlServerJobQueueMonitoringApi.cs", label=_stateProperties, span="387-387"];
m25_267 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(stateEntry.ContainsKey(property.Key))", span="389-389"];
m25_268 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(property.Value, stateEntry[property.Key])", span="390-390"];
m25_79 [cluster="HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", span="13-13"];
m25_80 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="117-117"];
m25_81 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="var transaction = Redis.Client.CreateTransaction()", span="119-119"];
m25_82 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="_state.Apply(transaction, JobSteps.DefaultJobId)", span="121-121"];
m25_83 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="transaction.Commit()", span="122-122"];
m25_84 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="117-117"];
m25_271 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="395-395"];
m25_272 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(table.RowCount, _stateChangingResults.Count)", span="397-397"];
m25_274 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="i < table.RowCount", span="399-399"];
m25_275 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(table.Rows[i][''Filter''], _stateChangingResults[i])", span="401-401"];
m25_273 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="var i = 0", span="399-399"];
m25_276 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="i++", span="399-399"];
m25_277 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="395-395"];
m25_251 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="360-360"];
m25_34 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="70-70"];
m25_37 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="71-71"];
m25_35 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="x.StateName", span="70-70"];
m25_36 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="70-70"];
m25_38 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="x.GetProperties()", span="71-71"];
m25_39 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="71-71"];
m25_49 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="81-81"];
m25_52 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="81-81"];
m25_55 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="82-82"];
m25_50 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="x[''Name'']", span="81-81"];
m25_51 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="81-81"];
m25_53 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="x[''Value'']", span="81-81"];
m25_54 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="81-81"];
m25_56 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="x.GetProperties()", span="82-82"];
m25_57 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="82-82"];
m25_125 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="191-197"];
m25_126 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="193-193"];
m25_127 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl)", span="194-196"];
m25_128 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="191-197"];
m25_146 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="226-232"];
m25_147 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="228-228"];
m25_148 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl)", span="229-231"];
m25_149 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="226-232"];
m25_221 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="337-337"];
m25_222 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId))", span="337-337"];
m25_223 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="337-337"];
m25_224 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="337-337"];
m25_227 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="337-337"];
m25_225 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="y != null", span="337-337"];
m25_226 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="337-337"];
m25_228 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="y == JobSteps.DefaultJobId", span="337-337"];
m25_229 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="337-337"];
m25_233 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="345-345"];
m25_234 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="x.Apply(It.IsAny<IRedisTransaction>(), It.IsAny<string>())", span="345-345"];
m25_235 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="345-345"];
m25_239 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="353-353"];
m25_240 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="x.Unapply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId))", span="353-353"];
m25_241 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="353-353"];
m25_242 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="353-353"];
m25_245 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Entry lambda expression", span="353-353"];
m25_243 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="y != null", span="353-353"];
m25_244 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="353-353"];
m25_246 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="y == JobSteps.DefaultJobId", span="353-353"];
m25_247 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="353-353"];
m25_252 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="x.Unapply(It.IsAny<IRedisTransaction>(), It.IsAny<string>())", span="360-360"];
m25_253 [cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs", label="Exit lambda expression", span="360-360"];
m25_196 [cluster="Unk.SetContainsItem", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.SetContainsItem", span=""];
m25_58 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", span="86-86"];
m25_59 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SqlServerJobQueueMonitoringApi.cs", label="Given(''a job'')", span="88-88"];
m25_60 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SqlServerJobQueueMonitoringApi.cs", label="Given(''its state is Old'')", span="89-89"];
m25_61 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SqlServerJobQueueMonitoringApi.cs", label="_oldStateDescriptorMock = new Mock<JobStateDescriptor>()", span="91-91"];
m25_62 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", color=red, community=0, file="SqlServerJobQueueMonitoringApi.cs", label="0: _descriptors.Add(''Old'', _oldStateDescriptorMock.Object)", span="92-92"];
m25_63 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", span="86-86"];
m25_87 [cluster="Unk.Commit", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.Commit", span=""];
m25_291 [cluster="Unk.ToList", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.ToList", span=""];
m25_170 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="267-267"];
m25_171 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="269-269"];
m25_172 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="267-267"];
m25_31 [cluster="Unk.Returns", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.Returns", span=""];
m25_33 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m25_85 [cluster="Unk.CreateTransaction", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.CreateTransaction", span=""];
m25_102 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="150-150"];
m25_103 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="SqlServerJobQueueMonitoringApi.cs", label="When(String.Format(\r\n                ''I change the state of the '{0}' job to the '{1}''',\r\n                JobSteps.DefaultJobId,\r\n                state))", span="152-155"];
m25_104 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="150-150"];
m25_129 [cluster="Unk.GetTimeToLive", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.GetTimeToLive", span=""];
m25_70 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m25_9 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10"];
m25_76 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="111-111"];
m25_77 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="SqlServerJobQueueMonitoringApi.cs", label="_stateAppliedFilters.Add(new TestStateAppliedFilter(name, _stateAppliedResults))", span="113-113"];
m25_78 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="111-111"];
m25_181 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57"];
m25_86 [cluster="Unk.Apply", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.Apply", span=""];
m25_41 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="77-77"];
m25_42 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Given(String.Format(''a '{0}' state'', state))", span="79-79"];
m25_43 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SqlServerJobQueueMonitoringApi.cs", label="_stateProperties = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="81-81"];
m25_44 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SqlServerJobQueueMonitoringApi.cs", label="_stateMocks[state].Setup(x => x.GetProperties()).Returns(_stateProperties)", span="82-82"];
m25_45 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="77-77"];
m25_248 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="357-357"];
m25_249 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="SqlServerJobQueueMonitoringApi.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.IsAny<IRedisTransaction>(), It.IsAny<string>()),\r\n                Times.Never)", span="359-361"];
m25_250 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="357-357"];
m25_214 [cluster="Unk.RemoveStartFromList", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.RemoveStartFromList", span=""];
m25_197 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="306-306"];
m25_198 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="SqlServerJobQueueMonitoringApi.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="308-308"];
m25_199 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(state, job[''State''])", span="309-309"];
m25_200 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="306-306"];
m25_131 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="201-201"];
m25_132 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="203-205"];
m25_133 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="201-201"];
m25_278 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="406-406"];
m25_279 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(0, _stateChangingResults.Count)", span="408-408"];
m25_280 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="406-406"];
m25_8 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m25_23 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="67-67"];
m25_24 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SqlServerJobQueueMonitoringApi.cs", label="var mock = new Mock<JobState>(''SomeReason'')", span="69-69"];
m25_25 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SqlServerJobQueueMonitoringApi.cs", label="mock.Setup(x => x.StateName).Returns(state)", span="70-70"];
m25_27 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", color=red, community=0, file="SqlServerJobQueueMonitoringApi.cs", label="2: _stateMocks.Add(state, mock)", span="73-73"];
m25_26 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SqlServerJobQueueMonitoringApi.cs", label="mock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="71-71"];
m25_28 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAState(string)", span="67-67"];
m25_65 [cluster="Unk.Add", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.Add", span=""];
m25_13 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string)", span="10-10"];
m25_30 [cluster="Unk.Setup", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.Setup", span=""];
m25_14 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="55-55"];
m25_15 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", color=red, community=0, file="SqlServerJobQueueMonitoringApi.cs", label="1: _state = new ScheduledState(''SomeReason'', DateTime.UtcNow.AddDays(1))", span="57-57"];
m25_16 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="55-55"];
m25_217 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="334-334"];
m25_218 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="SqlServerJobQueueMonitoringApi.cs", label="_stateMocks[state].Verify(\r\n                x => x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId)), \r\n                Times.Once)", span="336-338"];
m25_219 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="334-334"];
m25_94 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m25_193 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="300-300"];
m25_194 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="302-302"];
m25_195 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="300-300"];
m25_167 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="261-261"];
m25_168 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="263-263"];
m25_169 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="261-261"];
m25_162 [cluster="Unk.GetSortedSetCount", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.GetSortedSetCount", span=""];
m25_220 [cluster="Unk.Verify", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.Verify", span=""];
m25_136 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="209-209"];
m25_137 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="211-211"];
m25_138 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="212-213"];
m25_139 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="209-209"];
m25_164 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="255-255"];
m25_165 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="257-257"];
m25_166 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="255-255"];
m25_205 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="313-313"];
m25_202 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="313-313"];
m25_203 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="315-316"];
m25_204 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="DictionaryAssert.ContainsFollowingItems(table, stateEntry)", span="317-317"];
m25_163 [cluster="Unk.SortedSetContainsItem", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m25_105 [cluster="string.Format(string, object, object)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m25_182 [cluster="System.DateTime.AddSeconds(double)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m25_134 [cluster="string.Format(string, params object[])", file="SqlServerJobQueueMonitoringApi.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m25_120 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="182-182"];
m25_121 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="184-189"];
m25_122 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n                })", span="191-197"];
m25_123 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="182-182"];
m25_48 [cluster="Unk.ToDictionary", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.ToDictionary", span=""];
m25_130 [cluster="Unk.IsTrue", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.IsTrue", span=""];
m25_201 [cluster="Unk.GetAllEntriesFromHash", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m25_4 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="42-42"];
m25_5 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="SqlServerJobQueueMonitoringApi.cs", label="_failedException = new InvalidOperationException(''Hello'')", span="44-44"];
m25_6 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="SqlServerJobQueueMonitoringApi.cs", label="_state = new FailedState(''SomeReason'', _failedException)", span="45-45"];
m25_7 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="42-42"];
m25_213 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="321-321"];
m25_207 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="321-321"];
m25_208 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="323-324"];
m25_212 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="DictionaryAssert.ContainsFollowingItems(table, history)", span="330-330"];
m25_209 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsNotNull(entry)", span="325-325"];
m25_210 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="327-327"];
m25_211 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.IsNotNull(history, entry)", span="328-328"];
m25_46 [cluster="string.Format(string, object)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry string.Format(string, object)", span="0-0"];
m25_216 [cluster="Unk.>", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.>", span=""];
m25_180 [cluster="Unk.GetItemScoreInSortedSet", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m25_140 [cluster="Unk.GetListCount", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.GetListCount", span=""];
m25_19 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", span="61-61"];
m25_20 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="SqlServerJobQueueMonitoringApi.cs", label="_state = new EnqueuedState(''SomeReason'', ''test'')", span="63-63"];
m25_21 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", span="61-61"];
m25_0 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="36-36"];
m25_1 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", color=red, community=0, file="SqlServerJobQueueMonitoringApi.cs", label="2: _state = new SucceededState(''Some reason'')", span="38-38"];
m25_2 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="36-36"];
m25_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m25_106 [cluster="Unk.When", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.When", span=""];
m25_150 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="236-236"];
m25_151 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="238-238"];
m25_152 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="236-236"];
m25_3 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12"];
m25_153 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="242-242"];
m25_154 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="DictionaryAssert.ContainsFollowingItems(table, _state.GetProperties())", span="244-244"];
m25_155 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="242-242"];
m25_289 [cluster="Unk.GetAllItemsFromList", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m25_107 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="159-159"];
m25_108 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="var stateMachine = new StateMachine(\r\n                Redis.Client, _descriptors, _stateChangingFilters, _stateAppliedFilters)", span="161-162"];
m25_109 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="stateMachine.ChangeState(jobId, _stateMocks[state].Object)", span="163-163"];
m25_110 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="159-159"];
m25_290 [cluster="Unk.Select", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.Select", span=""];
m25_96 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="142-142"];
m25_97 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="SqlServerJobQueueMonitoringApi.cs", label="var stateMachine = new StateMachine(\r\n                Redis.Client, _descriptors, _stateChangingFilters, _stateAppliedFilters)", span="144-145"];
m25_98 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="SqlServerJobQueueMonitoringApi.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="146-146"];
m25_99 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="142-142"];
m25_135 [cluster="Unk.GetValue", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.GetValue", span=""];
m25_88 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="127-127"];
m25_89 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="var transaction = Redis.Client.CreateTransaction()", span="129-129"];
m25_90 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="StateMachine.Descriptors.ContainsKey(_state.StateName)", span="131-131"];
m25_91 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="StateMachine.Descriptors[_state.StateName]\r\n                        .Unapply(transaction, JobSteps.DefaultJobId)", span="133-134"];
m25_92 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="transaction.Commit()", span="137-137"];
m25_93 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="127-127"];
m25_206 [cluster="Unk.ContainsFollowingItems", file="SqlServerJobQueueMonitoringApi.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m25_69 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.States.JobState)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.States.JobState)", span="14-14"];
m25_292 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="425-425"];
m25_293 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(table.RowCount, _stateAppliedResults.Count)", span="427-427"];
m25_295 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="i < table.RowCount", span="429-429"];
m25_296 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Assert.AreEqual(table.Rows[i][''Method''], _stateAppliedResults[i])", span="431-431"];
m25_294 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="var i = 0", span="429-429"];
m25_297 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="i++", span="429-429"];
m25_298 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SqlServerJobQueueMonitoringApi.cs", label="Exit HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="425-425"];
m25_299 [file="SqlServerJobQueueMonitoringApi.cs", label="HangFire.Tests.States.StateSteps", span=""];
m26_10 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: return new SqlServerJobQueue(_storage, _options);", span="40-40"];
m26_11 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", color=red, community=0, file="SqlServerJobQueueProvider.cs", label="0: Exit Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", span="38-38"];
m26_12 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="32-32"];
m26_5 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: _storage = storage", span="32-32"];
m26_16 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerJobQueueProvider.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="30-30"];
m26_9 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(IDbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(IDbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", span="32-32"];
m26_13 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(IDbConnection)", file="SqlServerJobQueueProvider.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(IDbConnection)", span="28-28"];
m26_14 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi()", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: Hangfire.SqlServer.SqlServerJobQueueProvider", span=""];
m26_15 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi()", file="SqlServerJobQueueProvider.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi()", span="43-43"];
m26_6 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="_options = options", span="33-33"];
m26_7 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=red, community=0, file="SqlServerJobQueueProvider.cs", label="0: Exit Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27"];
m26_8 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue(IDbConnection)", file="SqlServerJobQueueProvider.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue(IDbConnection)", span="34-34"];
m26_0 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27"];
m26_1 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: storage == null", span="29-29"];
m26_3 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="options == null", span="30-30"];
m26_2 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: throw new ArgumentNullException(''storage'');", span="29-29"];
m26_4 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="throw new ArgumentNullException(''options'');", span="30-30"];
m28_0 [cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="SqlServerStorage.cs", label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20"];
m28_1 [cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="SqlServerStorage.cs", label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20"];
m29_101 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="351-351"];
m29_256 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SqlServerWriteOnlyTransaction.cs", label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="353-353"];
m29_257 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="351-351"];
m29_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m29_105 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="183-183"];
m29_106 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="185-185"];
m29_108 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="188-190"];
m29_107 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireSetLock()", span="187-187"];
m29_109 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="183-183"];
m29_49 [cluster="Hangfire.States.IState.SerializeData()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.States.IState.SerializeData()", span="27-27"];
m29_10 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52"];
m29_11 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="2: var transaction = CreateTransaction(_isolationLevel)", span="54-54"];
m29_12 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _connection.EnlistTransaction(Transaction.Current)", span="56-56"];
m29_17 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="2: transaction.Complete()", span="71-71"];
m29_13 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="_lockedResources.Count > 0", span="58-58"];
m29_14 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=2, file="SqlServerWriteOnlyTransaction.cs", label="1: _connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }))", span="60-63"];
m29_15 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label=_commandQueue, span="66-66"];
m29_16 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: command(_connection)", span="68-68"];
m29_18 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52"];
m29_69 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135"];
m29_70 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="137-139"];
m29_71 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135"];
m29_229 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319"];
m29_230 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="321-321"];
m29_234 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="327-327"];
m29_231 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="321-321"];
m29_232 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="323-324"];
m29_233 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireSetLock()", span="326-326"];
m29_235 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319"];
m29_63 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m29_239 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330"];
m29_240 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="332-332"];
m29_244 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="338-338"];
m29_241 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="332-332"];
m29_242 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="334-335"];
m29_243 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireListLock()", span="337-337"];
m29_245 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330"];
m29_81 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149"];
m29_82 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="151-153"];
m29_83 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149"];
m29_254 [cluster="string.Format(string, params object[])", file="SqlServerWriteOnlyTransaction.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m29_255 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361"];
m29_260 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SqlServerWriteOnlyTransaction.cs", label="_lockedResources.Add(resource)", span="363-363"];
m29_261 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361"];
m29_199 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286"];
m29_200 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="288-288"];
m29_204 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="294-294"];
m29_201 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="288-288"];
m29_202 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="290-291"];
m29_203 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireSetLock()", span="293-293"];
m29_205 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286"];
m29_0 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39"];
m29_1 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: connection == null", span="44-44"];
m29_3 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: queueProviders == null", span="45-45"];
m29_5 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _connection = connection", span="47-47"];
m29_6 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _isolationLevel = isolationLevel", span="48-48"];
m29_7 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _queueProviders = queueProviders", span="49-49"];
m29_2 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: throw new ArgumentNullException(''connection'');", span="44-44"];
m29_4 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: throw new ArgumentNullException(''queueProviders'');", span="45-45"];
m29_8 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39"];
m29_145 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356"];
m29_258 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SqlServerWriteOnlyTransaction.cs", label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="358-358"];
m29_259 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356"];
m29_251 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m29_42 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89"];
m29_43 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="91-94"];
m29_44 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="96-106"];
m29_45 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89"];
m29_209 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297"];
m29_210 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="299-299"];
m29_214 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="305-305"];
m29_211 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="299-299"];
m29_212 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="301-302"];
m29_213 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireListLock()", span="304-304"];
m29_215 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297"];
m29_51 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109"];
m29_52 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="111-113"];
m29_53 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="115-124"];
m29_54 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109"];
m29_68 [cluster="Hangfire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", span="24-24"];
m29_87 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156"];
m29_88 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="158-160"];
m29_89 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156"];
m29_179 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265"];
m29_180 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="267-267"];
m29_184 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="272-272"];
m29_181 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="267-267"];
m29_182 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="269-269"];
m29_183 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireSetLock()", span="271-271"];
m29_185 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265"];
m29_93 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163"];
m29_94 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="AddToSet(key, value, 0.0)", span="165-165"];
m29_95 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163"];
m29_31 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="341-341"];
m29_249 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="_commandQueue.Enqueue(action)", span="343-343"];
m29_250 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="341-341"];
m29_58 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127"];
m29_59 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="2: var provider = _queueProviders.GetProvider(queue)", span="129-129"];
m29_61 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(_ => persistentQueue.Enqueue(queue, jobId))", span="132-132"];
m29_60 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: var persistentQueue = provider.GetJobQueue(_connection)", span="130-130"];
m29_62 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127"];
m29_75 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142"];
m29_76 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="144-146"];
m29_77 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142"];
m29_20 [cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.EnlistTransaction", span=""];
m29_23 [cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m29_136 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224"];
m29_137 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="226-226"];
m29_139 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="keyValuePairs == null", span="227-227"];
m29_143 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="237-239"];
m29_138 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="226-226"];
m29_140 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="227-227"];
m29_141 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="229-234"];
m29_142 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireHashLock()", span="236-236"];
m29_144 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224"];
m29_265 [cluster="TransactionScope.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionScope.cstr", span=""];
m29_96 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168"];
m29_97 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="170-175"];
m29_99 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="178-180"];
m29_98 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireSetLock()", span="177-177"];
m29_100 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168"];
m29_153 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242"];
m29_154 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="244-244"];
m29_158 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(query, new { key }))", span="249-249"];
m29_155 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="244-244"];
m29_156 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="246-246"];
m29_157 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireHashLock()", span="248-248"];
m29_159 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242"];
m29_24 [cluster="Unk.Complete", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Complete", span=""];
m29_35 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m29_36 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82"];
m29_37 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="84-86"];
m29_38 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82"];
m29_19 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366"];
m29_263 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", color=red, community=2, file="SqlServerWriteOnlyTransaction.cs", label="0: return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value })\r\n                : new TransactionScope();", span="368-371"];
m29_264 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366"];
m29_189 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275"];
m29_190 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="277-277"];
m29_194 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="283-283"];
m29_191 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="277-277"];
m29_192 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="279-280"];
m29_193 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireHashLock()", span="282-282"];
m29_195 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275"];
m29_50 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m29_266 [cluster="TransactionOptions.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionOptions.cstr", span=""];
m29_28 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75"];
m29_29 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="77-79"];
m29_30 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75"];
m29_246 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="338-338"];
m29_25 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="63-63"];
m29_26 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="new { resource = x }", span="63-63"];
m29_27 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="63-63"];
m29_33 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="77-79"];
m29_32 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="77-79"];
m29_34 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="77-79"];
m29_40 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="84-86"];
m29_39 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="84-86"];
m29_41 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="84-86"];
m29_47 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="96-106"];
m29_46 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="96-106"];
m29_48 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="96-106"];
m29_56 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="115-124"];
m29_55 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="115-124"];
m29_57 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="115-124"];
m29_66 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="persistentQueue.Enqueue(queue, jobId)", span="132-132"];
m29_65 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="132-132"];
m29_67 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="132-132"];
m29_73 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="137-139"];
m29_72 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="137-139"];
m29_74 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="137-139"];
m29_79 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="144-146"];
m29_78 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="144-146"];
m29_80 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="144-146"];
m29_85 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="151-153"];
m29_84 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="151-153"];
m29_86 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="151-153"];
m29_91 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="158-160"];
m29_90 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="158-160"];
m29_92 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="158-160"];
m29_103 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="178-180"];
m29_102 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="178-180"];
m29_104 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="178-180"];
m29_111 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                query,\r\n                new { key, value })", span="188-190"];
m29_110 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="188-190"];
m29_112 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="188-190"];
m29_119 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="196-198"];
m29_118 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="196-198"];
m29_120 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="196-198"];
m29_126 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="204-206"];
m29_125 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="204-206"];
m29_127 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="204-206"];
m29_134 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="219-221"];
m29_133 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="219-221"];
m29_135 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="219-221"];
m29_148 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="237-239"];
m29_151 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="new { key = key, field = y.Key, value = y.Value }", span="239-239"];
m29_147 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="237-239"];
m29_149 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="237-239"];
m29_150 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="239-239"];
m29_152 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="239-239"];
m29_161 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(query, new { key })", span="249-249"];
m29_160 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="249-249"];
m29_162 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="249-249"];
m29_173 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="262-262"];
m29_177 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="new { key = key, value = value }", span="262-262"];
m29_172 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="262-262"];
m29_174 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="262-262"];
m29_176 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="262-262"];
m29_178 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="262-262"];
m29_187 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(query, new { key = key })", span="272-272"];
m29_186 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="272-272"];
m29_188 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="272-272"];
m29_197 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="283-283"];
m29_196 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="283-283"];
m29_198 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="283-283"];
m29_207 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="294-294"];
m29_206 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="294-294"];
m29_208 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="294-294"];
m29_217 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="305-305"];
m29_216 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="305-305"];
m29_218 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="305-305"];
m29_227 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(query, new { key = key })", span="316-316"];
m29_226 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="316-316"];
m29_228 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="316-316"];
m29_237 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(query, new { key = key })", span="327-327"];
m29_236 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="327-327"];
m29_238 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="327-327"];
m29_247 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(query, new { key = key })", span="338-338"];
m29_248 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="338-338"];
m29_163 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252"];
m29_164 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="254-254"];
m29_166 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="items == null", span="255-255"];
m29_170 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="262-262"];
m29_165 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="254-254"];
m29_167 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''items'');", span="255-255"];
m29_168 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="257-259"];
m29_169 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireSetLock()", span="261-261"];
m29_171 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252"];
m29_21 [cluster="Unk.Select", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Select", span=""];
m29_262 [cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0"];
m29_175 [cluster="Unk.ToList", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.ToList", span=""];
m29_22 [cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Execute", span=""];
m29_64 [cluster="Unk.GetJobQueue", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.GetJobQueue", span=""];
m29_146 [cluster="Unk.QueueCommand", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.QueueCommand", span=""];
m29_121 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201"];
m29_122 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireListLock()", span="203-203"];
m29_123 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="204-206"];
m29_124 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201"];
m29_117 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346"];
m29_252 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SqlServerWriteOnlyTransaction.cs", label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="348-348"];
m29_253 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346"];
m29_219 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308"];
m29_220 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="key == null", span="310-310"];
m29_224 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="316-316"];
m29_221 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''key'');", span="310-310"];
m29_222 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="312-313"];
m29_223 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireHashLock()", span="315-315"];
m29_225 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308"];
m29_113 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193"];
m29_114 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireListLock()", span="195-195"];
m29_115 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="196-198"];
m29_116 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193"];
m29_128 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209"];
m29_129 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="211-216"];
m29_131 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="219-221"];
m29_130 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="AcquireListLock()", span="218-218"];
m29_132 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209"];
m29_267 [file="SqlServerWriteOnlyTransaction.cs", label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m29_268 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_269 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m29_270 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_271 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_272 [file="SqlServerWriteOnlyTransaction.cs", label="Hangfire.States.IState", span=""];
m29_273 [file="SqlServerWriteOnlyTransaction.cs", label=addAndSetStateSql, span=""];
m29_274 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_275 [file="SqlServerWriteOnlyTransaction.cs", label="Hangfire.States.IState", span=""];
m29_276 [file="SqlServerWriteOnlyTransaction.cs", label=addStateSql, span=""];
m29_277 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_278 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_279 [file="SqlServerWriteOnlyTransaction.cs", label=persistentQueue, span=""];
m29_280 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_281 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_282 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m29_283 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_284 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_285 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m29_286 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_287 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_288 [file="SqlServerWriteOnlyTransaction.cs", label=double, span=""];
m29_289 [file="SqlServerWriteOnlyTransaction.cs", label=addSql, span=""];
m29_290 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_291 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_292 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m29_293 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_294 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_295 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_296 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_297 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_298 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m29_299 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m29_300 [file="SqlServerWriteOnlyTransaction.cs", label=trimSql, span=""];
m29_301 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_302 [file="SqlServerWriteOnlyTransaction.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span=""];
m29_303 [file="SqlServerWriteOnlyTransaction.cs", label=sql, span=""];
m29_304 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_305 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m29_306 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_307 [file="SqlServerWriteOnlyTransaction.cs", label="System.Collections.Generic.IList<string>", span=""];
m29_308 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m29_309 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_310 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m29_311 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_312 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m29_313 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m29_314 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_315 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m29_316 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m29_317 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_318 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m29_319 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m29_320 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_321 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m29_322 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_323 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m29_324 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m29_325 [file="SqlServerWriteOnlyTransaction.cs", label=query, span=""];
m30_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachineFactory.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m30_12 [cluster="Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", span="27-27"];
m30_21 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="33-33"];
m30_20 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="StateMachineFactory.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", span="32-32"];
m30_11 [cluster="Hangfire.States.StateHandlerCollection.StateHandlerCollection()", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
m30_13 [cluster="Hangfire.JobStorage.GetStateHandlers()", file="StateMachineFactory.cs", label="Entry Hangfire.JobStorage.GetStateHandlers()", span="63-63"];
m30_0 [cluster="lambda expression", file="StateMachineFactory.cs", label="Entry lambda expression", span="23-23"];
m30_1 [cluster="lambda expression", file="StateMachineFactory.cs", label="new StateMachineFactory(storage)", span="23-23"];
m30_2 [cluster="lambda expression", file="StateMachineFactory.cs", label="Exit lambda expression", span="23-23"];
m30_3 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="27-27"];
m30_4 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="storage == null", span="29-29"];
m30_8 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="_handlers.AddRange(storage.GetStateHandlers())", span="33-33"];
m30_5 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''storage'');", span="29-29"];
m30_6 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="_handlers = new StateHandlerCollection()", span="31-31"];
m30_7 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="_handlers.AddRange(GlobalStateHandlers.Handlers)", span="32-32"];
m30_9 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="Exit Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="27-27"];
m30_14 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="36-36"];
m30_15 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="connection == null", span="38-38"];
m30_18 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="return new StateMachine(connection, process);", span="41-41"];
m30_16 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''connection'');", span="38-38"];
m30_17 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", color=red, community=0, file="StateMachineFactory.cs", label="1: var process = new DefaultStateChangeProcess(_handlers)", span="40-40"];
m30_19 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Exit Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="36-36"];
m30_22 [file="StateMachineFactory.cs", label="Hangfire.States.StateMachineFactory", span=""];
m33_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="WorkerContext.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m33_10 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="WorkerContext.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m33_11 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="WorkerContext.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m33_13 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="WorkerContext.cs", label="0: _results.Add(String.Format(''{0}::{1}'', _name, ''OnStateUnapplied''))", span="31-31"];
m33_12 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="WorkerContext.cs", label="Assert.NotNull(context)", span="29-29"];
m33_14 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="WorkerContext.cs", label="Exit HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m33_0 [cluster="Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", file="WorkerContext.cs", label="Entry Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", span="22-22"];
m33_1 [cluster="Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", file="WorkerContext.cs", label="Exit Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", span="22-22"];
m33_2 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string[], int)", file="WorkerContext.cs", label="Entry Hangfire.Server.WorkerContext.WorkerContext(string[], int)", span="27-27"];
m33_3 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string[], int)", file="WorkerContext.cs", label="queues == null", span="29-29"];
m33_9 [cluster="string.Format(string, object, object)", file="WorkerContext.cs", label="Hangfire.Server.WorkerContext", span=""];
m33_5 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="WorkerContext.cs", label="0: Assert.NotNull(context)", span="22-22"];
m33_6 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="WorkerContext.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="24-24"];
m33_4 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="WorkerContext.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20"];
m33_7 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="WorkerContext.cs", label="Exit HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20"];
m33_15 [file="WorkerContext.cs", label="HangFire.Tests.TestStateChangedFilter", span=""];
m34_0 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="WorkerFacts.cs", label="Entry HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="26-26"];
m34_1 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="WorkerFacts.cs", label="return new Dictionary<string, string>();", span="28-28"];
m34_2 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="WorkerFacts.cs", label="Exit HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="26-26"];
m34_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WorkerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_40  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m0_37 -> m0_42  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m0_37 -> m0_44  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m0_37 -> m0_46  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m0_37 -> m0_48  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m0_37 -> m0_50  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m0_37 -> m0_39  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m0_37 -> m0_41  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m0_37 -> m0_43  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [key=0, style=solid];
m0_39 -> m0_53  [key=0, style=solid];
m0_41 -> m0_53  [key=0, style=solid];
m0_43 -> m0_53  [key=0, style=solid];
m0_45 -> m0_53  [key=0, style=solid];
m0_47 -> m0_53  [key=0, style=solid];
m0_49 -> m0_53  [key=0, style=solid];
m0_51 -> m0_53  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_37  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_15  [color=darkorchid, key=3, label="Property variable System.DateTime EnqueueAt", style=bold];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_8  [key=2, style=dotted];
m0_5 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_5 -> m0_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_4  [color=blue, key=0, style=bold];
m0_11 -> m0_19  [key=0, style=solid];
m0_11 -> m0_24  [color=crimson, key=0, style=bold];
m0_11 -> m0_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>", style=dashed];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_27  [key=2, style=dotted];
m0_19 -> m0_23  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m0_19 -> m0_25  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_26  [key=0, style=solid];
m0_20 -> m0_24  [color=darkseagreen4, key=1, label=filter, style=dashed];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_20  [key=0, style=solid];
m0_23 -> m0_29  [key=2, style=dotted];
m0_23 -> m0_30  [key=2, style=dotted];
m0_25 -> m0_20  [key=0, style=solid];
m0_25 -> m0_31  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [color=darkseagreen4, key=1, label=filterInstance, style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_28  [key=2, style=dotted];
m0_22 -> m0_25  [color=darkseagreen4, key=1, label=filterInstanceType, style=dashed];
m0_26 -> m0_11  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_14 -> m0_12  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_16  [color=blue, key=0, style=bold];
m0_30 -> m0_32  [key=0, style=solid];
m0_30 -> m0_21  [color=darkorchid, key=3, label="Parameter variable object filterInstance", style=bold];
m0_30 -> m0_34  [color=darkorchid, key=3, label="method methodReturn bool AllowMultiple", style=bold];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_35  [color=darkseagreen4, key=1, label=mvcFilter, style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_34 -> m0_36  [key=0, style=solid];
m0_36 -> m0_30  [color=blue, key=0, style=bold];
m0_54 -> m0_5  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilterProviderCollection", style=dashed];
m0_55 -> m0_13  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_39  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_5  [color=darkseagreen4, key=1, label=stateContext, style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_11  [key=2, style=dotted];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_16  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_34  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_24  [key=2, style=dotted];
m2_32 -> m2_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_33 -> m2_29  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_16  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_23  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_24  [key=2, style=dotted];
m2_21 -> m2_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_22 -> m2_18  [color=blue, key=0, style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=2, style=dotted];
m2_27 -> m2_25  [color=blue, key=0, style=bold];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [key=2, style=dotted];
m2_37 -> m2_35  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_17  [key=2, style=dotted];
m2_15 -> m2_12  [color=blue, key=0, style=bold];
m2_41 -> m2_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m2_41 -> m2_20  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m2_41 -> m2_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m2_41 -> m2_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m2_41 -> m2_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [color=blue, key=0, style=bold];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_14  [key=2, style=dotted];
m5_17 -> m5_15  [key=2, style=dotted];
m5_18 -> m5_16  [color=blue, key=0, style=bold];
m5_190 -> m5_191  [key=0, style=solid];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_14  [key=2, style=dotted];
m5_191 -> m5_143  [key=2, style=dotted];
m5_192 -> m5_31  [key=2, style=dotted];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_193 -> m5_190  [color=blue, key=0, style=bold];
m5_208 -> m5_256  [key=0, style=solid];
m5_208 -> m5_263  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_208 -> m5_281  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_208 -> m5_264  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_256 -> m5_257  [key=0, style=solid];
m5_256 -> m5_260  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_256 -> m5_261  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_263 -> m5_64  [key=2, style=dotted];
m5_263 -> m5_65  [key=2, style=dotted];
m5_263 -> m5_264  [key=0, style=solid];
m5_263 -> m5_280  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_276  [key=2, style=dotted];
m5_264 -> m5_269  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_257 -> m5_58  [key=2, style=dotted];
m5_257 -> m5_263  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_260  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_257 -> m5_267  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_257 -> m5_271  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_265 -> m5_59  [key=2, style=dotted];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_271  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_265 -> m5_273  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_260 -> m5_167  [key=2, style=dotted];
m5_260 -> m5_261  [key=0, style=solid];
m5_273 -> m5_274  [key=0, style=solid];
m5_261 -> m5_261  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_275  [key=2, style=dotted];
m5_259 -> m5_263  [key=0, style=solid];
m5_259 -> m5_260  [key=0, style=solid];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_271  [key=0, style=solid];
m5_269 -> m5_277  [key=2, style=dotted];
m5_269 -> m5_278  [key=2, style=dotted];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_262  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_267 -> m5_273  [key=0, style=solid];
m5_267 -> m5_268  [key=0, style=solid];
m5_271 -> m5_272  [key=0, style=solid];
m5_271 -> m5_279  [key=2, style=dotted];
m5_266 -> m5_269  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_271  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_266 -> m5_272  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_262 -> m5_259  [key=0, style=solid];
m5_262 -> m5_262  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_268 -> m5_269  [key=0, style=solid];
m5_270 -> m5_271  [key=0, style=solid];
m5_272 -> m5_267  [key=0, style=solid];
m5_272 -> m5_272  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_274 -> m5_208  [color=blue, key=0, style=bold];
m5_92 -> m5_285  [key=0, style=solid];
m5_92 -> m5_292  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_92 -> m5_309  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_92 -> m5_293  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_288  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_285 -> m5_289  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_285 -> m5_290  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_292 -> m5_64  [key=2, style=dotted];
m5_292 -> m5_65  [key=2, style=dotted];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_293 -> m5_294  [key=0, style=solid];
m5_293 -> m5_276  [key=2, style=dotted];
m5_293 -> m5_298  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_287 -> m5_58  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_289  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_287 -> m5_291  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_287 -> m5_300  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_291 -> m5_64  [key=2, style=dotted];
m5_291 -> m5_65  [key=2, style=dotted];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_291 -> m5_296  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m5_294 -> m5_59  [key=2, style=dotted];
m5_294 -> m5_295  [key=0, style=solid];
m5_294 -> m5_300  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_294 -> m5_302  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_302 -> m5_303  [key=0, style=solid];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_304  [key=2, style=dotted];
m5_286 -> m5_288  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m5_288 -> m5_291  [key=0, style=solid];
m5_288 -> m5_289  [key=0, style=solid];
m5_289 -> m5_167  [key=2, style=dotted];
m5_289 -> m5_290  [key=0, style=solid];
m5_290 -> m5_288  [key=0, style=solid];
m5_290 -> m5_290  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_290 -> m5_304  [key=2, style=dotted];
m5_298 -> m5_299  [key=0, style=solid];
m5_298 -> m5_300  [key=0, style=solid];
m5_298 -> m5_277  [key=2, style=dotted];
m5_298 -> m5_278  [key=2, style=dotted];
m5_300 -> m5_301  [key=0, style=solid];
m5_300 -> m5_279  [key=2, style=dotted];
m5_296 -> m5_302  [key=0, style=solid];
m5_296 -> m5_297  [key=0, style=solid];
m5_295 -> m5_298  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_295 -> m5_300  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_301  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_297 -> m5_298  [key=0, style=solid];
m5_299 -> m5_300  [key=0, style=solid];
m5_301 -> m5_296  [key=0, style=solid];
m5_301 -> m5_301  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_303 -> m5_92  [color=blue, key=0, style=bold];
m5_209 -> m5_210  [key=0, style=solid];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_208  [key=2, style=dotted];
m5_211 -> m5_209  [color=blue, key=0, style=bold];
m5_359 -> m5_360  [key=0, style=solid];
m5_361 -> m5_362  [key=0, style=solid];
m5_361 -> m5_110  [key=2, style=dotted];
m5_361 -> m5_369  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_60  [key=2, style=dotted];
m5_362 -> m5_364  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_362 -> m5_365  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_362 -> m5_366  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_362 -> m5_367  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_362 -> m5_368  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_362 -> m5_371  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_362 -> m5_372  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_360 -> m5_361  [key=0, style=solid];
m5_360 -> m5_375  [key=2, style=dotted];
m5_360 -> m5_363  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_381  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_364  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_387  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_365  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_393  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_366  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_399  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_367  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_406  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_368  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_413  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_371  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_419  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_360 -> m5_373  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_369 -> m5_370  [key=0, style=solid];
m5_369 -> m5_372  [key=0, style=solid];
m5_363 -> m5_364  [key=0, style=solid];
m5_363 -> m5_61  [key=2, style=dotted];
m5_363 -> m5_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_363 -> m5_380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_364 -> m5_365  [key=0, style=solid];
m5_364 -> m5_61  [key=2, style=dotted];
m5_364 -> m5_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_364 -> m5_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_365 -> m5_366  [key=0, style=solid];
m5_365 -> m5_61  [key=2, style=dotted];
m5_365 -> m5_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_365 -> m5_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_366 -> m5_367  [key=0, style=solid];
m5_366 -> m5_61  [key=2, style=dotted];
m5_366 -> m5_395  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_366 -> m5_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_367 -> m5_368  [key=0, style=solid];
m5_367 -> m5_61  [key=2, style=dotted];
m5_367 -> m5_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_367 -> m5_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_368 -> m5_369  [key=0, style=solid];
m5_368 -> m5_61  [key=2, style=dotted];
m5_368 -> m5_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_368 -> m5_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_371 -> m5_369  [key=0, style=solid];
m5_371 -> m5_61  [key=2, style=dotted];
m5_371 -> m5_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_371 -> m5_418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_372 -> m5_373  [key=0, style=solid];
m5_372 -> m5_62  [key=2, style=dotted];
m5_373 -> m5_374  [key=0, style=solid];
m5_370 -> m5_371  [key=0, style=solid];
m5_370 -> m5_416  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m5_374 -> m5_359  [color=blue, key=0, style=bold];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_14  [key=2, style=dotted];
m5_213 -> m5_234  [key=2, style=dotted];
m5_213 -> m5_228  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_213 -> m5_229  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_213 -> m5_230  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_213 -> m5_231  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_213 -> m5_232  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_14  [key=2, style=dotted];
m5_217 -> m5_120  [key=2, style=dotted];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_241  [key=2, style=dotted];
m5_232 -> m5_242  [key=2, style=dotted];
m5_232 -> m5_237  [key=2, style=dotted];
m5_232 -> m5_243  [key=2, style=dotted];
m5_232 -> m5_238  [key=2, style=dotted];
m5_232 -> m5_244  [key=2, style=dotted];
m5_232 -> m5_245  [key=2, style=dotted];
m5_232 -> m5_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_232 -> m5_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_232 -> m5_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_216  [key=0, style=solid];
m5_228 -> m5_229  [key=0, style=solid];
m5_228 -> m5_230  [key=0, style=solid];
m5_228 -> m5_237  [key=2, style=dotted];
m5_229 -> m5_230  [key=0, style=solid];
m5_229 -> m5_74  [key=2, style=dotted];
m5_230 -> m5_232  [key=0, style=solid];
m5_230 -> m5_231  [key=0, style=solid];
m5_230 -> m5_237  [key=2, style=dotted];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_74  [key=2, style=dotted];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_232  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m5_216 -> m5_247  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m5_218 -> m5_219  [key=0, style=solid];
m5_218 -> m5_64  [key=2, style=dotted];
m5_218 -> m5_65  [key=2, style=dotted];
m5_218 -> m5_220  [color=darkseagreen4, key=1, label=history, style=dashed];
m5_219 -> m5_232  [color=darkseagreen4, key=1, label=stateHistory, style=dashed];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_235  [key=2, style=dotted];
m5_219 -> m5_227  [color=darkseagreen4, key=1, label=stateHistory, style=dashed];
m5_215 -> m5_233  [key=0, style=solid];
m5_220 -> m5_228  [key=0, style=solid];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_222  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_227 -> m5_167  [key=2, style=dotted];
m5_227 -> m5_220  [key=0, style=solid];
m5_221 -> m5_237  [key=2, style=dotted];
m5_221 -> m5_238  [key=2, style=dotted];
m5_221 -> m5_227  [color=darkseagreen4, key=1, label=dto, style=dashed];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_236  [key=2, style=dotted];
m5_221 -> m5_226  [color=darkseagreen4, key=1, label=dto, style=dashed];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_239  [key=2, style=dotted];
m5_222 -> m5_224  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m5_222 -> m5_225  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m5_222 -> m5_226  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m5_226 -> m5_227  [key=0, style=solid];
m5_223 -> m5_224  [key=0, style=solid];
m5_223 -> m5_240  [key=2, style=dotted];
m5_224 -> m5_225  [key=0, style=solid];
m5_224 -> m5_240  [key=2, style=dotted];
m5_225 -> m5_226  [key=0, style=solid];
m5_225 -> m5_240  [key=2, style=dotted];
m5_233 -> m5_212  [color=blue, key=0, style=bold];
m5_356 -> m5_357  [key=0, style=solid];
m5_357 -> m5_358  [key=0, style=solid];
m5_357 -> m5_15  [key=2, style=dotted];
m5_358 -> m5_356  [color=blue, key=0, style=bold];
m5_88 -> m5_421  [key=0, style=solid];
m5_421 -> m5_424  [key=0, style=solid];
m5_421 -> m5_425  [key=2, style=dotted];
m5_421 -> m5_426  [key=2, style=dotted];
m5_423 -> m5_424  [key=0, style=solid];
m5_422 -> m5_423  [key=0, style=solid];
m5_424 -> m5_88  [color=blue, key=0, style=bold];
m5_332 -> m5_333  [key=0, style=solid];
m5_332 -> m5_334  [color=darkseagreen4, key=1, label="?", style=dashed];
m5_34 -> m5_35  [color=green, key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_35 -> m5_36  [color=green, key=0, style=solid];
m5_35 -> m5_37  [color=green, key=2, style=dotted];
m5_35 -> m5_38  [color=green, key=2, style=dotted];
m5_35 -> m5_39  [color=green, key=2, style=dotted];
m5_36 -> m5_34  [color=blue, key=0, style=bold];
m5_390 -> m5_10  [key=2, style=dotted];
m5_390 -> m5_391  [key=0, style=solid];
m5_396 -> m5_10  [key=2, style=dotted];
m5_396 -> m5_397  [key=0, style=solid];
m5_410 -> m5_10  [key=2, style=dotted];
m5_410 -> m5_411  [key=0, style=solid];
m5_42 -> m5_40  [color=blue, key=0, style=bold];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>", style=dashed];
m5_125 -> m5_38  [key=2, style=dotted];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_127  [key=2, style=dotted];
m5_125 -> m5_128  [key=2, style=dotted];
m5_125 -> m5_129  [key=2, style=dotted];
m5_136 -> m5_38  [key=2, style=dotted];
m5_136 -> m5_39  [key=2, style=dotted];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_138  [key=2, style=dotted];
m5_145 -> m5_38  [key=2, style=dotted];
m5_145 -> m5_39  [key=2, style=dotted];
m5_145 -> m5_146  [key=0, style=solid];
m5_145 -> m5_147  [key=2, style=dotted];
m5_187 -> m5_38  [key=2, style=dotted];
m5_187 -> m5_39  [key=2, style=dotted];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_189  [key=2, style=dotted];
m5_195 -> m5_38  [key=2, style=dotted];
m5_195 -> m5_39  [key=2, style=dotted];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_189  [key=2, style=dotted];
m5_202 -> m5_38  [key=2, style=dotted];
m5_202 -> m5_203  [key=0, style=solid];
m5_202 -> m5_204  [key=2, style=dotted];
m5_83 -> m5_39  [key=2, style=dotted];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_85  [key=2, style=dotted];
m5_83 -> m5_86  [key=2, style=dotted];
m5_83 -> m5_87  [key=2, style=dotted];
m5_83 -> m5_88  [key=2, style=dotted];
m5_135 -> m5_136  [key=0, style=solid];
m5_144 -> m5_145  [key=0, style=solid];
m5_186 -> m5_187  [key=0, style=solid];
m5_194 -> m5_195  [key=0, style=solid];
m5_201 -> m5_202  [key=0, style=solid];
m5_246 -> m5_247  [key=0, style=solid];
m5_250 -> m5_251  [key=0, style=solid];
m5_253 -> m5_254  [key=0, style=solid];
m5_389 -> m5_390  [key=0, style=solid];
m5_391 -> m5_389  [color=blue, key=0, style=bold];
m5_395 -> m5_396  [key=0, style=solid];
m5_397 -> m5_395  [color=blue, key=0, style=bold];
m5_409 -> m5_410  [key=0, style=solid];
m5_411 -> m5_409  [color=blue, key=0, style=bold];
m5_124 -> m5_125  [key=0, style=solid];
m5_126 -> m5_124  [color=blue, key=0, style=bold];
m5_137 -> m5_135  [color=blue, key=0, style=bold];
m5_146 -> m5_144  [color=blue, key=0, style=bold];
m5_188 -> m5_186  [color=blue, key=0, style=bold];
m5_196 -> m5_194  [color=blue, key=0, style=bold];
m5_203 -> m5_201  [color=blue, key=0, style=bold];
m5_82 -> m5_83  [key=0, style=solid];
m5_84 -> m5_82  [color=blue, key=0, style=bold];
m5_338 -> m5_14  [key=2, style=dotted];
m5_338 -> m5_339  [key=0, style=solid];
m5_338 -> m5_70  [key=2, style=dotted];
m5_328 -> m5_14  [key=2, style=dotted];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_330  [key=2, style=dotted];
m5_328 -> m5_331  [key=2, style=dotted];
m5_328 -> m5_70  [key=2, style=dotted];
m5_175 -> m5_15  [key=2, style=dotted];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_69  [key=2, style=dotted];
m5_181 -> m5_15  [key=2, style=dotted];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_69  [key=2, style=dotted];
m5_416 -> m5_15  [key=2, style=dotted];
m5_416 -> m5_417  [key=0, style=solid];
m5_416 -> m5_69  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_74  [key=2, style=dotted];
m5_66 -> m5_67  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_309 -> m5_310  [key=0, style=solid];
m5_309 -> m5_69  [key=2, style=dotted];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_74  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_114 -> m5_115  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_169 -> m5_143  [key=2, style=dotted];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_69  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_171 -> m5_172  [key=0, style=solid];
m5_174 -> m5_175  [key=0, style=solid];
m5_177 -> m5_178  [key=0, style=solid];
m5_180 -> m5_181  [key=0, style=solid];
m5_183 -> m5_184  [key=0, style=solid];
m5_348 -> m5_349  [key=0, style=solid];
m5_348 -> m5_350  [key=2, style=dotted];
m5_348 -> m5_351  [key=2, style=dotted];
m5_348 -> m5_352  [key=2, style=dotted];
m5_348 -> m5_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_281 -> m5_282  [key=0, style=solid];
m5_281 -> m5_283  [key=2, style=dotted];
m5_281 -> m5_284  [key=2, style=dotted];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_249  [key=2, style=dotted];
m5_118 -> m5_120  [key=2, style=dotted];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_69  [key=2, style=dotted];
m5_248 -> m5_246  [color=blue, key=0, style=bold];
m5_252 -> m5_250  [color=blue, key=0, style=bold];
m5_251 -> m5_252  [key=0, style=solid];
m5_255 -> m5_253  [color=blue, key=0, style=bold];
m5_254 -> m5_255  [key=0, style=solid];
m5_381 -> m5_382  [key=0, style=solid];
m5_387 -> m5_388  [key=0, style=solid];
m5_393 -> m5_394  [key=0, style=solid];
m5_399 -> m5_400  [key=0, style=solid];
m5_406 -> m5_407  [key=0, style=solid];
m5_406 -> m5_408  [key=2, style=dotted];
m5_413 -> m5_414  [key=0, style=solid];
m5_419 -> m5_420  [key=0, style=solid];
m5_376 -> m5_377  [key=0, style=solid];
m5_380 -> m5_381  [key=0, style=solid];
m5_383 -> m5_384  [key=0, style=solid];
m5_386 -> m5_387  [key=0, style=solid];
m5_392 -> m5_393  [key=0, style=solid];
m5_398 -> m5_399  [key=0, style=solid];
m5_401 -> m5_402  [key=0, style=solid];
m5_405 -> m5_406  [key=0, style=solid];
m5_412 -> m5_413  [key=0, style=solid];
m5_415 -> m5_416  [key=0, style=solid];
m5_418 -> m5_419  [key=0, style=solid];
m5_115 -> m5_74  [key=2, style=dotted];
m5_115 -> m5_116  [key=0, style=solid];
m5_72 -> m5_74  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_345 -> m5_88  [key=2, style=dotted];
m5_345 -> m5_346  [key=0, style=solid];
m5_345 -> m5_336  [key=2, style=dotted];
m5_337 -> m5_338  [key=0, style=solid];
m5_339 -> m5_337  [color=blue, key=0, style=bold];
m5_327 -> m5_328  [key=0, style=solid];
m5_329 -> m5_327  [color=blue, key=0, style=bold];
m5_176 -> m5_174  [color=blue, key=0, style=bold];
m5_182 -> m5_180  [color=blue, key=0, style=bold];
m5_417 -> m5_415  [color=blue, key=0, style=bold];
m5_67 -> m5_70  [key=2, style=dotted];
m5_67 -> m5_69  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_76 -> m5_69  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [key=2, style=dotted];
m5_81 -> m5_79  [color=blue, key=0, style=bold];
m5_68 -> m5_66  [color=blue, key=0, style=bold];
m5_73 -> m5_71  [color=blue, key=0, style=bold];
m5_77 -> m5_75  [color=blue, key=0, style=bold];
m5_308 -> m5_309  [key=0, style=solid];
m5_310 -> m5_308  [color=blue, key=0, style=bold];
m5_112 -> m5_70  [key=2, style=dotted];
m5_112 -> m5_69  [key=2, style=dotted];
m5_112 -> m5_113  [key=0, style=solid];
m5_123 -> m5_121  [color=blue, key=0, style=bold];
m5_113 -> m5_111  [color=blue, key=0, style=bold];
m5_116 -> m5_114  [color=blue, key=0, style=bold];
m5_119 -> m5_117  [color=blue, key=0, style=bold];
m5_170 -> m5_168  [color=blue, key=0, style=bold];
m5_173 -> m5_171  [color=blue, key=0, style=bold];
m5_172 -> m5_173  [key=0, style=solid];
m5_179 -> m5_177  [color=blue, key=0, style=bold];
m5_178 -> m5_179  [key=0, style=solid];
m5_185 -> m5_183  [color=blue, key=0, style=bold];
m5_184 -> m5_185  [key=0, style=solid];
m5_333 -> m5_334  [key=0, style=solid];
m5_333 -> m5_335  [key=0, style=solid];
m5_333 -> m5_336  [key=2, style=dotted];
m5_334 -> m5_74  [key=2, style=dotted];
m5_334 -> m5_335  [key=0, style=solid];
m5_341 -> m5_342  [key=0, style=solid];
m5_341 -> m5_343  [key=0, style=solid];
m5_341 -> m5_336  [key=2, style=dotted];
m5_342 -> m5_74  [key=2, style=dotted];
m5_342 -> m5_343  [key=0, style=solid];
m5_340 -> m5_341  [key=0, style=solid];
m5_340 -> m5_342  [color=darkseagreen4, key=1, label="?", style=dashed];
m5_344 -> m5_345  [key=0, style=solid];
m5_347 -> m5_348  [key=0, style=solid];
m5_349 -> m5_347  [color=blue, key=0, style=bold];
m5_353 -> m5_354  [key=0, style=solid];
m5_280 -> m5_281  [key=0, style=solid];
m5_282 -> m5_280  [color=blue, key=0, style=bold];
m5_382 -> m5_380  [color=blue, key=0, style=bold];
m5_388 -> m5_386  [color=blue, key=0, style=bold];
m5_394 -> m5_392  [color=blue, key=0, style=bold];
m5_400 -> m5_398  [color=blue, key=0, style=bold];
m5_407 -> m5_405  [color=blue, key=0, style=bold];
m5_414 -> m5_412  [color=blue, key=0, style=bold];
m5_420 -> m5_418  [color=blue, key=0, style=bold];
m5_378 -> m5_376  [color=blue, key=0, style=bold];
m5_377 -> m5_378  [key=0, style=solid];
m5_377 -> m5_379  [key=2, style=dotted];
m5_385 -> m5_383  [color=blue, key=0, style=bold];
m5_384 -> m5_385  [key=0, style=solid];
m5_384 -> m5_379  [key=2, style=dotted];
m5_403 -> m5_401  [color=blue, key=0, style=bold];
m5_402 -> m5_403  [key=0, style=solid];
m5_402 -> m5_404  [key=2, style=dotted];
m5_346 -> m5_344  [color=blue, key=0, style=bold];
m5_305 -> m5_306  [key=0, style=solid];
m5_335 -> m5_332  [color=blue, key=0, style=bold];
m5_343 -> m5_340  [color=blue, key=0, style=bold];
m5_355 -> m5_353  [color=blue, key=0, style=bold];
m5_354 -> m5_355  [key=0, style=solid];
m5_306 -> m5_283  [key=2, style=dotted];
m5_306 -> m5_307  [key=0, style=solid];
m5_307 -> m5_305  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_130 -> m5_131  [key=0, style=solid];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_134  [key=2, style=dotted];
m5_132 -> m5_31  [key=2, style=dotted];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_133 -> m5_130  [color=blue, key=0, style=bold];
m5_96 -> m5_97  [key=0, style=solid];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_110  [key=2, style=dotted];
m5_97 -> m5_103  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m5_97 -> m5_108  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_60  [key=2, style=dotted];
m5_102 -> m5_105  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_102 -> m5_106  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_102 -> m5_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_100  [key=0, style=solid];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_107  [key=0, style=solid];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_64  [key=2, style=dotted];
m5_108 -> m5_65  [key=2, style=dotted];
m5_108 -> m5_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_125  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_101 -> m5_108  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_101 -> m5_59  [key=2, style=dotted];
m5_101 -> m5_106  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_101 -> m5_122  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_61  [key=2, style=dotted];
m5_105 -> m5_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_105 -> m5_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_106 -> m5_103  [key=0, style=solid];
m5_106 -> m5_61  [key=2, style=dotted];
m5_106 -> m5_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_106 -> m5_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_62  [key=2, style=dotted];
m5_100 -> m5_125  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_100 -> m5_108  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_105  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_100 -> m5_59  [key=2, style=dotted];
m5_100 -> m5_115  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_99 -> m5_58  [key=2, style=dotted];
m5_99 -> m5_109  [key=0, style=solid];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_106  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_104 -> m5_112  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_104 -> m5_115  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_104 -> m5_118  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_104 -> m5_122  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_109 -> m5_96  [color=blue, key=0, style=bold];
m5_139 -> m5_140  [key=0, style=solid];
m5_140 -> m5_141  [key=0, style=solid];
m5_140 -> m5_143  [key=2, style=dotted];
m5_141 -> m5_31  [key=2, style=dotted];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_142 -> m5_139  [color=blue, key=0, style=bold];
m5_89 -> m5_90  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_92  [key=2, style=dotted];
m5_91 -> m5_89  [color=blue, key=0, style=bold];
m5_19 -> m5_20  [key=0, style=solid];
m5_20 -> m5_10  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_19  [color=blue, key=0, style=bold];
m5_25 -> m5_26  [key=0, style=solid];
m5_27 -> m5_28  [color=green, key=0, style=solid];
m5_27 -> m5_30  [color=green, key=2, style=dotted];
m5_27 -> m5_31  [color=green, key=2, style=dotted];
m5_27 -> m5_32  [color=green, key=2, style=dotted];
m5_27 -> m5_33  [color=green, key=2, style=dotted];
m5_27 -> m5_34  [color=green, key=1, label="lambda expression", style=dashed];
m5_27 -> m5_40  [color=green, key=1, label="lambda expression", style=dashed];
m5_26 -> m5_27  [color=green, key=0, style=solid];
m5_26 -> m5_29  [key=2, style=dotted];
m5_28 -> m5_25  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_10  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_205 -> m5_206  [key=0, style=solid];
m5_206 -> m5_207  [key=0, style=solid];
m5_206 -> m5_208  [key=2, style=dotted];
m5_207 -> m5_205  [color=blue, key=0, style=bold];
m5_165 -> m5_311  [key=0, style=solid];
m5_165 -> m5_313  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m5_165 -> m5_314  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m5_165 -> m5_315  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_165 -> m5_316  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_165 -> m5_317  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m5_165 -> m5_320  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_165 -> m5_321  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_165 -> m5_338  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_165 -> m5_323  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m5_165 -> m5_348  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m5_312 -> m5_30  [key=2, style=dotted];
m5_312 -> m5_324  [key=0, style=solid];
m5_312 -> m5_58  [key=2, style=dotted];
m5_311 -> m5_312  [key=0, style=solid];
m5_311 -> m5_313  [key=0, style=solid];
m5_316 -> m5_60  [key=2, style=dotted];
m5_316 -> m5_317  [key=0, style=solid];
m5_316 -> m5_319  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_316 -> m5_321  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_316 -> m5_322  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_313 -> m5_314  [key=0, style=solid];
m5_313 -> m5_325  [key=2, style=dotted];
m5_313 -> m5_319  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_313 -> m5_333  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_313 -> m5_334  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_313 -> m5_323  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_313 -> m5_345  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_314 -> m5_315  [key=0, style=solid];
m5_314 -> m5_325  [key=2, style=dotted];
m5_314 -> m5_321  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_314 -> m5_341  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_314 -> m5_342  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_314 -> m5_323  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_314 -> m5_345  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_315 -> m5_328  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_315 -> m5_316  [key=0, style=solid];
m5_315 -> m5_315  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_315 -> m5_319  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_315 -> m5_323  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_315 -> m5_345  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_317 -> m5_318  [key=0, style=solid];
m5_317 -> m5_322  [key=0, style=solid];
m5_320 -> m5_317  [key=0, style=solid];
m5_320 -> m5_321  [key=0, style=solid];
m5_321 -> m5_61  [key=2, style=dotted];
m5_321 -> m5_317  [key=0, style=solid];
m5_321 -> m5_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_321 -> m5_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_323 -> m5_324  [key=0, style=solid];
m5_323 -> m5_64  [key=2, style=dotted];
m5_323 -> m5_65  [key=2, style=dotted];
m5_323 -> m5_326  [key=2, style=dotted];
m5_323 -> m5_344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_323 -> m5_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_318 -> m5_338  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_318 -> m5_328  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_318 -> m5_321  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_318 -> m5_334  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_318 -> m5_341  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_318 -> m5_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_319 -> m5_61  [key=2, style=dotted];
m5_319 -> m5_320  [key=0, style=solid];
m5_319 -> m5_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_319 -> m5_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_322 -> m5_62  [key=2, style=dotted];
m5_322 -> m5_323  [key=0, style=solid];
m5_324 -> m5_165  [color=blue, key=0, style=bold];
m5_93 -> m5_94  [key=0, style=solid];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_92  [key=2, style=dotted];
m5_95 -> m5_93  [color=blue, key=0, style=bold];
m5_148 -> m5_149  [key=0, style=solid];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_110  [key=2, style=dotted];
m5_149 -> m5_151  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_60  [key=2, style=dotted];
m5_155 -> m5_157  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_155 -> m5_158  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_155 -> m5_159  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_165  [key=2, style=dotted];
m5_160 -> m5_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_164  [key=2, style=dotted];
m5_150 -> m5_161  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_150 -> m5_162  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_162  [key=0, style=solid];
m5_151 -> m5_156  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_151 -> m5_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_151 -> m5_157  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_151 -> m5_175  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_151 -> m5_158  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_151 -> m5_181  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_151 -> m5_161  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_154 -> m5_155  [key=0, style=solid];
m5_156 -> m5_160  [color=darkseagreen4, key=1, label=firstJobIds, style=dashed];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_61  [key=2, style=dotted];
m5_156 -> m5_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_156 -> m5_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_61  [key=2, style=dotted];
m5_157 -> m5_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_157 -> m5_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_157 -> m5_161  [color=darkseagreen4, key=1, label=length, style=dashed];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_61  [key=2, style=dotted];
m5_158 -> m5_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_158 -> m5_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_158 -> m5_161  [color=darkseagreen4, key=1, label=dequeued, style=dashed];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_62  [key=2, style=dotted];
m5_161 -> m5_151  [key=0, style=solid];
m5_161 -> m5_166  [key=2, style=dotted];
m5_161 -> m5_167  [key=2, style=dotted];
m5_162 -> m5_163  [key=0, style=solid];
m5_152 -> m5_153  [key=0, style=solid];
m5_153 -> m5_154  [key=0, style=solid];
m5_163 -> m5_148  [color=blue, key=0, style=bold];
m5_43 -> m5_44  [key=0, style=solid];
m5_44 -> m5_44  [color=darkorchid, key=3, label="Local variable System.Func<Hangfire.Server.PerformedContext> continuation", style=bold];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_57  [key=2, style=dotted];
m5_44 -> m5_50  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m5_44 -> m5_55  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_60  [key=2, style=dotted];
m5_49 -> m5_52  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_49 -> m5_53  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_49 -> m5_54  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_46 -> m5_30  [key=2, style=dotted];
m5_46 -> m5_56  [key=0, style=solid];
m5_46 -> m5_58  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_47  [key=0, style=solid];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_54  [key=0, style=solid];
m5_55 -> m5_55  [color=darkorchid, key=3, label="Local variable bool wasError", style=bold];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_63  [key=2, style=dotted];
m5_55 -> m5_64  [key=2, style=dotted];
m5_55 -> m5_65  [key=2, style=dotted];
m5_55 -> m5_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_83  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_48 -> m5_55  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_48 -> m5_59  [key=2, style=dotted];
m5_48 -> m5_53  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_48 -> m5_80  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_61  [key=2, style=dotted];
m5_52 -> m5_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_52 -> m5_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_53 -> m5_50  [key=0, style=solid];
m5_53 -> m5_61  [key=2, style=dotted];
m5_53 -> m5_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_53 -> m5_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_62  [key=2, style=dotted];
m5_47 -> m5_83  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_47 -> m5_55  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_52  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_47 -> m5_59  [key=2, style=dotted];
m5_47 -> m5_72  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_51 -> m5_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_51 -> m5_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_51 -> m5_76  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_51 -> m5_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_56 -> m5_43  [color=blue, key=0, style=bold];
m5_197 -> m5_198  [key=0, style=solid];
m5_198 -> m5_199  [key=0, style=solid];
m5_198 -> m5_14  [key=2, style=dotted];
m5_198 -> m5_143  [key=2, style=dotted];
m5_199 -> m5_31  [key=2, style=dotted];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_200 -> m5_197  [color=blue, key=0, style=bold];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_12 -> m5_15  [key=2, style=dotted];
m5_13 -> m5_11  [color=blue, key=0, style=bold];
m5_7 -> m5_8  [color=green, key=0, style=solid];
m5_8 -> m5_9  [color=green, key=0, style=solid];
m5_8 -> m5_10  [color=green, key=2, style=dotted];
m5_9 -> m5_7  [color=blue, key=0, style=bold];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [key=2, style=dotted];
m5_5 -> m5_3  [color=blue, key=0, style=bold];
m5_427 -> m5_8  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_27  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_12  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_17  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_44  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_49  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_90  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_94  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_97  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_102  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_131  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_132  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_140  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_141  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_149  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_155  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_160  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_191  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_192  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_198  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_199  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_206  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_210  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_213  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_217  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_232  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_357  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_361  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_427 -> m5_362  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_432 -> m5_125  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_432 -> m5_115  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_433 -> m5_125  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_433 -> m5_122  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_429 -> m5_83  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_429 -> m5_72  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_430 -> m5_83  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_430 -> m5_80  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_439 -> m5_338  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_439 -> m5_328  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_439 -> m5_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_439 -> m5_334  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_439 -> m5_341  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_439 -> m5_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_441 -> m5_338  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_438 -> m5_328  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_438 -> m5_345  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_434 -> m5_175  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_434 -> m5_181  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_434 -> m5_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_445 -> m5_416  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m5_428 -> m5_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_428 -> m5_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_428 -> m5_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_428 -> m5_76  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_437 -> m5_309  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_431 -> m5_122  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_431 -> m5_118  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_431 -> m5_115  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_431 -> m5_112  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_443 -> m5_348  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m5_436 -> m5_281  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_435 -> m5_247  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m5_444 -> m5_381  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_444 -> m5_387  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_444 -> m5_393  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_444 -> m5_399  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_444 -> m5_406  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_444 -> m5_413  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_444 -> m5_419  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_440 -> m5_345  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_440 -> m5_333  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_440 -> m5_334  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_442 -> m5_345  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_442 -> m5_341  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_442 -> m5_342  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_93 -> m6_94  [key=0, style=solid];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_82  [key=2, style=dotted];
m6_95 -> m6_51  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_97  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_96 -> m6_21  [key=2, style=dotted];
m6_96 -> m6_23  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_55  [key=2, style=dotted];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_41  [key=2, style=dotted];
m6_99 -> m6_93  [color=blue, key=0, style=bold];
m6_37 -> m6_38  [key=0, style=solid];
m6_38 -> m6_31  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_41  [key=2, style=dotted];
m6_40 -> m6_37  [color=blue, key=0, style=bold];
m6_51 -> m6_439  [color=green, key=0, style=solid];
m6_439 -> m6_440  [color=green, key=0, style=solid];
m6_439 -> m6_441  [color=green, key=2, style=dotted];
m6_440 -> m6_51  [color=blue, key=0, style=bold];
m6_398 -> m6_399  [key=0, style=solid];
m6_399 -> m6_21  [key=2, style=dotted];
m6_399 -> m6_31  [key=2, style=dotted];
m6_399 -> m6_400  [key=0, style=solid];
m6_399 -> m6_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_82  [key=2, style=dotted];
m6_400 -> m6_403  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_401 -> m6_51  [key=2, style=dotted];
m6_401 -> m6_402  [key=0, style=solid];
m6_401 -> m6_409  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_402 -> m6_31  [key=2, style=dotted];
m6_402 -> m6_403  [key=0, style=solid];
m6_402 -> m6_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_403 -> m6_70  [key=2, style=dotted];
m6_403 -> m6_404  [key=0, style=solid];
m6_403 -> m6_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_404 -> m6_398  [color=blue, key=0, style=bold];
m6_56 -> m6_57  [key=0, style=solid];
m6_57 -> m6_51  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_62  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_58 -> m6_31  [key=2, style=dotted];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_41  [key=2, style=dotted];
m6_60 -> m6_56  [color=blue, key=0, style=bold];
m6_192 -> m6_193  [key=0, style=solid];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_82  [key=2, style=dotted];
m6_193 -> m6_195  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m6_193 -> m6_198  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m6_194 -> m6_195  [key=0, style=solid];
m6_194 -> m6_82  [key=2, style=dotted];
m6_194 -> m6_196  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m6_194 -> m6_197  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m6_199 -> m6_51  [key=2, style=dotted];
m6_199 -> m6_200  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_55  [key=2, style=dotted];
m6_195 -> m6_21  [key=2, style=dotted];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_140  [key=2, style=dotted];
m6_195 -> m6_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_198 -> m6_21  [key=2, style=dotted];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_140  [key=2, style=dotted];
m6_198 -> m6_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_196 -> m6_21  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_196 -> m6_140  [key=2, style=dotted];
m6_196 -> m6_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_197 -> m6_21  [key=2, style=dotted];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_140  [key=2, style=dotted];
m6_197 -> m6_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_201 -> m6_192  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_9 -> m6_10  [color=green, key=0, style=solid];
m6_9 -> m6_20  [color=green, key=2, style=dotted];
m6_8 -> m6_9  [color=green, key=0, style=solid];
m6_8 -> m6_19  [key=2, style=dotted];
m6_10 -> m6_11  [color=green, key=0, style=solid];
m6_10 -> m6_21  [color=green, key=2, style=dotted];
m6_10 -> m6_22  [color=green, key=2, style=dotted];
m6_10 -> m6_23  [color=green, key=2, style=dotted];
m6_10 -> m6_28  [color=green, key=1, label="lambda expression", style=dashed];
m6_10 -> m6_33  [color=green, key=1, label="lambda expression", style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_15  [key=2, style=dotted];
m6_5 -> m6_16  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_17  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_18  [key=2, style=dotted];
m6_1 -> m6_5  [color=darkseagreen4, key=1, label=workerContext, style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_12  [key=2, style=dotted];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_5  [color=darkseagreen4, key=1, label=connection, style=dashed];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_13  [key=2, style=dotted];
m6_3 -> m6_5  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_3 -> m6_3  [color=darkorchid, key=3, label="Local variable string jobId", style=bold];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_14  [key=2, style=dotted];
m6_4 -> m6_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_11 -> m6_0  [color=blue, key=0, style=bold];
m6_131 -> m6_132  [key=0, style=solid];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_82  [key=2, style=dotted];
m6_132 -> m6_135  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_82  [key=2, style=dotted];
m6_136 -> m6_21  [key=2, style=dotted];
m6_136 -> m6_31  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_137 -> m6_51  [key=2, style=dotted];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_151  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_138 -> m6_31  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_135 -> m6_21  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_140  [key=2, style=dotted];
m6_135 -> m6_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_134 -> m6_21  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_140  [key=2, style=dotted];
m6_134 -> m6_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_139 -> m6_131  [color=blue, key=0, style=bold];
m6_318 -> m6_319  [key=0, style=solid];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_82  [key=2, style=dotted];
m6_319 -> m6_322  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_321 -> m6_21  [key=2, style=dotted];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_284  [key=2, style=dotted];
m6_321 -> m6_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_323 -> m6_51  [key=2, style=dotted];
m6_323 -> m6_324  [key=0, style=solid];
m6_323 -> m6_339  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_324 -> m6_325  [key=0, style=solid];
m6_324 -> m6_161  [key=2, style=dotted];
m6_324 -> m6_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_322 -> m6_21  [key=2, style=dotted];
m6_322 -> m6_323  [key=0, style=solid];
m6_322 -> m6_160  [key=2, style=dotted];
m6_322 -> m6_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_322 -> m6_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_322  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_320 -> m6_330  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_320 -> m6_283  [key=2, style=dotted];
m6_320 -> m6_333  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_325 -> m6_318  [color=blue, key=0, style=bold];
m6_414 -> m6_415  [key=0, style=solid];
m6_415 -> m6_416  [key=0, style=solid];
m6_415 -> m6_82  [key=2, style=dotted];
m6_417 -> m6_51  [key=2, style=dotted];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_424  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_418 -> m6_31  [key=2, style=dotted];
m6_418 -> m6_419  [key=0, style=solid];
m6_418 -> m6_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_416 -> m6_21  [key=2, style=dotted];
m6_416 -> m6_31  [key=2, style=dotted];
m6_416 -> m6_417  [key=0, style=solid];
m6_416 -> m6_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_419 -> m6_414  [color=blue, key=0, style=bold];
m6_426 -> m6_427  [key=0, style=solid];
m6_427 -> m6_428  [key=0, style=solid];
m6_427 -> m6_82  [key=2, style=dotted];
m6_429 -> m6_51  [key=2, style=dotted];
m6_429 -> m6_430  [key=0, style=solid];
m6_429 -> m6_436  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_430 -> m6_31  [key=2, style=dotted];
m6_430 -> m6_431  [key=0, style=solid];
m6_430 -> m6_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_428 -> m6_21  [key=2, style=dotted];
m6_428 -> m6_31  [key=2, style=dotted];
m6_428 -> m6_429  [key=0, style=solid];
m6_428 -> m6_432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_431 -> m6_426  [color=blue, key=0, style=bold];
m6_82 -> m6_442  [key=0, style=solid];
m6_443 -> m6_444  [key=0, style=solid];
m6_443 -> m6_447  [key=2, style=dotted];
m6_442 -> m6_443  [key=0, style=solid];
m6_442 -> m6_446  [key=2, style=dotted];
m6_442 -> m6_444  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_444 -> m6_445  [key=0, style=solid];
m6_445 -> m6_82  [color=blue, key=0, style=bold];
m6_65 -> m6_66  [key=0, style=solid];
m6_66 -> m6_51  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_55  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_70  [key=2, style=dotted];
m6_68 -> m6_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_69 -> m6_65  [color=blue, key=0, style=bold];
m6_114 -> m6_115  [key=0, style=solid];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_82  [key=2, style=dotted];
m6_115 -> m6_119  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_116 -> m6_21  [key=2, style=dotted];
m6_116 -> m6_31  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_117 -> m6_51  [key=2, style=dotted];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_125  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_118 -> m6_31  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_119 -> m6_70  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_120 -> m6_114  [color=blue, key=0, style=bold];
m6_174 -> m6_175  [key=0, style=solid];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_82  [key=2, style=dotted];
m6_175 -> m6_178  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_177 -> m6_21  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_140  [key=2, style=dotted];
m6_177 -> m6_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_179 -> m6_51  [key=2, style=dotted];
m6_179 -> m6_180  [key=0, style=solid];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_55  [key=2, style=dotted];
m6_176 -> m6_21  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_176 -> m6_140  [key=2, style=dotted];
m6_176 -> m6_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_178 -> m6_21  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_140  [key=2, style=dotted];
m6_178 -> m6_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_181 -> m6_174  [color=blue, key=0, style=bold];
m6_275 -> m6_276  [key=0, style=solid];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_82  [key=2, style=dotted];
m6_276 -> m6_281  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_278 -> m6_21  [key=2, style=dotted];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_284  [key=2, style=dotted];
m6_278 -> m6_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_279 -> m6_51  [key=2, style=dotted];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_289  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_280 -> m6_31  [key=2, style=dotted];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_292  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_277 -> m6_283  [key=2, style=dotted];
m6_277 -> m6_281  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_277 -> m6_295  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_281 -> m6_70  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_282 -> m6_275  [color=blue, key=0, style=bold];
m6_153 -> m6_154  [key=0, style=solid];
m6_154 -> m6_21  [key=2, style=dotted];
m6_154 -> m6_31  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_82  [key=2, style=dotted];
m6_157 -> m6_51  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_172  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_161  [key=2, style=dotted];
m6_158 -> m6_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_156 -> m6_21  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_160  [key=2, style=dotted];
m6_156 -> m6_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_156 -> m6_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_159 -> m6_153  [color=blue, key=0, style=bold];
m6_103 -> m6_104  [key=0, style=solid];
m6_104 -> m6_21  [key=2, style=dotted];
m6_104 -> m6_31  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_105 -> m6_51  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_112  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_106 -> m6_31  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_107 -> m6_103  [color=blue, key=0, style=bold];
m6_75 -> m6_76  [key=0, style=solid];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_82  [key=2, style=dotted];
m6_76 -> m6_80  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_77 -> m6_51  [key=2, style=dotted];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_79  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_78 -> m6_21  [key=2, style=dotted];
m6_78 -> m6_23  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_55  [key=2, style=dotted];
m6_80 -> m6_70  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_81 -> m6_75  [color=blue, key=0, style=bold];
m6_341 -> m6_342  [key=0, style=solid];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_82  [key=2, style=dotted];
m6_342 -> m6_348  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_82  [key=2, style=dotted];
m6_343 -> m6_345  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m6_344 -> m6_21  [key=2, style=dotted];
m6_344 -> m6_31  [key=2, style=dotted];
m6_344 -> m6_345  [key=0, style=solid];
m6_344 -> m6_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_346 -> m6_51  [key=2, style=dotted];
m6_346 -> m6_347  [key=0, style=solid];
m6_346 -> m6_360  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_347 -> m6_348  [key=0, style=solid];
m6_347 -> m6_161  [key=2, style=dotted];
m6_347 -> m6_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_345 -> m6_21  [key=2, style=dotted];
m6_345 -> m6_346  [key=0, style=solid];
m6_345 -> m6_160  [key=2, style=dotted];
m6_345 -> m6_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_345 -> m6_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_348 -> m6_70  [key=2, style=dotted];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_349 -> m6_341  [color=blue, key=0, style=bold];
m6_234 -> m6_235  [key=0, style=solid];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_82  [key=2, style=dotted];
m6_235 -> m6_240  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_82  [key=2, style=dotted];
m6_238 -> m6_51  [key=2, style=dotted];
m6_238 -> m6_239  [key=0, style=solid];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_55  [key=2, style=dotted];
m6_237 -> m6_21  [key=2, style=dotted];
m6_237 -> m6_238  [key=0, style=solid];
m6_237 -> m6_160  [key=2, style=dotted];
m6_237 -> m6_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_237 -> m6_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_240 -> m6_70  [key=2, style=dotted];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_241 -> m6_234  [color=blue, key=0, style=bold];
m6_27 -> m6_438  [key=0, style=solid];
m6_438 -> m6_27  [color=blue, key=0, style=bold];
m6_46 -> m6_47  [key=0, style=solid];
m6_47 -> m6_51  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_53  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_48 -> m6_31  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_41  [key=2, style=dotted];
m6_50 -> m6_46  [color=blue, key=0, style=bold];
m6_214 -> m6_215  [key=0, style=solid];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_82  [key=2, style=dotted];
m6_215 -> m6_220  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_217 -> m6_51  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_55  [key=2, style=dotted];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_70  [key=2, style=dotted];
m6_219 -> m6_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_216 -> m6_21  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_160  [key=2, style=dotted];
m6_216 -> m6_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_216 -> m6_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_220 -> m6_70  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_221 -> m6_214  [color=blue, key=0, style=bold];
m6_24 -> m6_25  [key=0, style=solid];
m6_28 -> m6_29  [color=green, key=0, style=solid];
m6_33 -> m6_34  [color=green, key=0, style=solid];
m6_29 -> m6_30  [color=green, key=0, style=solid];
m6_29 -> m6_31  [color=green, key=2, style=dotted];
m6_29 -> m6_32  [color=green, key=2, style=dotted];
m6_30 -> m6_28  [color=blue, key=0, style=bold];
m6_34 -> m6_35  [color=green, key=0, style=solid];
m6_34 -> m6_36  [color=green, key=2, style=dotted];
m6_35 -> m6_33  [color=blue, key=0, style=bold];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_55  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_64  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_55  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_55  [key=2, style=dotted];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_55  [key=2, style=dotted];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_55  [key=2, style=dotted];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_55  [key=2, style=dotted];
m6_289 -> m6_290  [key=0, style=solid];
m6_289 -> m6_55  [key=2, style=dotted];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_55  [key=2, style=dotted];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_55  [key=2, style=dotted];
m6_360 -> m6_361  [key=0, style=solid];
m6_360 -> m6_55  [key=2, style=dotted];
m6_379 -> m6_380  [key=0, style=solid];
m6_379 -> m6_55  [key=2, style=dotted];
m6_396 -> m6_397  [key=0, style=solid];
m6_396 -> m6_55  [key=2, style=dotted];
m6_409 -> m6_410  [key=0, style=solid];
m6_409 -> m6_55  [key=2, style=dotted];
m6_424 -> m6_425  [key=0, style=solid];
m6_424 -> m6_55  [key=2, style=dotted];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_55  [key=2, style=dotted];
m6_72 -> m6_31  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_74  [key=2, style=dotted];
m6_84 -> m6_31  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_74  [key=2, style=dotted];
m6_87 -> m6_31  [key=2, style=dotted];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_89  [key=2, style=dotted];
m6_87 -> m6_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_101 -> m6_31  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_74  [key=2, style=dotted];
m6_109 -> m6_31  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_74  [key=2, style=dotted];
m6_122 -> m6_31  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_74  [key=2, style=dotted];
m6_128 -> m6_31  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_130  [key=2, style=dotted];
m6_142 -> m6_31  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_130  [key=2, style=dotted];
m6_145 -> m6_31  [key=2, style=dotted];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_130  [key=2, style=dotted];
m6_148 -> m6_31  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_74  [key=2, style=dotted];
m6_163 -> m6_31  [key=2, style=dotted];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_74  [key=2, style=dotted];
m6_166 -> m6_31  [key=2, style=dotted];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_130  [key=2, style=dotted];
m6_183 -> m6_31  [key=2, style=dotted];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_185  [key=2, style=dotted];
m6_187 -> m6_31  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_74  [key=2, style=dotted];
m6_190 -> m6_31  [key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_89  [key=2, style=dotted];
m6_203 -> m6_31  [key=2, style=dotted];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_185  [key=2, style=dotted];
m6_206 -> m6_31  [key=2, style=dotted];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_185  [key=2, style=dotted];
m6_209 -> m6_31  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_89  [key=2, style=dotted];
m6_212 -> m6_31  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_89  [key=2, style=dotted];
m6_223 -> m6_31  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_185  [key=2, style=dotted];
m6_229 -> m6_31  [key=2, style=dotted];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_74  [key=2, style=dotted];
m6_232 -> m6_31  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_89  [key=2, style=dotted];
m6_243 -> m6_31  [key=2, style=dotted];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_185  [key=2, style=dotted];
m6_249 -> m6_31  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_89  [key=2, style=dotted];
m6_249 -> m6_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_264 -> m6_31  [key=2, style=dotted];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_185  [key=2, style=dotted];
m6_270 -> m6_31  [key=2, style=dotted];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_74  [key=2, style=dotted];
m6_273 -> m6_31  [key=2, style=dotted];
m6_273 -> m6_274  [key=0, style=solid];
m6_273 -> m6_89  [key=2, style=dotted];
m6_292 -> m6_31  [key=2, style=dotted];
m6_292 -> m6_293  [key=0, style=solid];
m6_292 -> m6_89  [key=2, style=dotted];
m6_292 -> m6_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_286 -> m6_31  [key=2, style=dotted];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_74  [key=2, style=dotted];
m6_313 -> m6_31  [key=2, style=dotted];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_89  [key=2, style=dotted];
m6_313 -> m6_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_307 -> m6_31  [key=2, style=dotted];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_74  [key=2, style=dotted];
m6_330 -> m6_31  [key=2, style=dotted];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_89  [key=2, style=dotted];
m6_330 -> m6_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_327 -> m6_31  [key=2, style=dotted];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_74  [key=2, style=dotted];
m6_351 -> m6_31  [key=2, style=dotted];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_74  [key=2, style=dotted];
m6_354 -> m6_31  [key=2, style=dotted];
m6_354 -> m6_355  [key=0, style=solid];
m6_354 -> m6_89  [key=2, style=dotted];
m6_363 -> m6_31  [key=2, style=dotted];
m6_363 -> m6_364  [key=0, style=solid];
m6_363 -> m6_89  [key=2, style=dotted];
m6_363 -> m6_365  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_376 -> m6_31  [key=2, style=dotted];
m6_376 -> m6_377  [key=0, style=solid];
m6_376 -> m6_89  [key=2, style=dotted];
m6_390 -> m6_31  [key=2, style=dotted];
m6_390 -> m6_391  [key=0, style=solid];
m6_390 -> m6_89  [key=2, style=dotted];
m6_393 -> m6_31  [key=2, style=dotted];
m6_393 -> m6_394  [key=0, style=solid];
m6_393 -> m6_74  [key=2, style=dotted];
m6_406 -> m6_31  [key=2, style=dotted];
m6_406 -> m6_407  [key=0, style=solid];
m6_406 -> m6_74  [key=2, style=dotted];
m6_412 -> m6_31  [key=2, style=dotted];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_130  [key=2, style=dotted];
m6_421 -> m6_31  [key=2, style=dotted];
m6_421 -> m6_422  [key=0, style=solid];
m6_421 -> m6_185  [key=2, style=dotted];
m6_433 -> m6_31  [key=2, style=dotted];
m6_433 -> m6_434  [key=0, style=solid];
m6_433 -> m6_89  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_54 -> m6_52  [color=blue, key=0, style=bold];
m6_61 -> m6_62  [key=0, style=solid];
m6_63 -> m6_61  [color=blue, key=0, style=bold];
m6_71 -> m6_72  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_113 -> m6_111  [color=blue, key=0, style=bold];
m6_121 -> m6_122  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_126 -> m6_124  [color=blue, key=0, style=bold];
m6_147 -> m6_148  [key=0, style=solid];
m6_150 -> m6_151  [key=0, style=solid];
m6_152 -> m6_150  [color=blue, key=0, style=bold];
m6_162 -> m6_163  [key=0, style=solid];
m6_171 -> m6_172  [key=0, style=solid];
m6_173 -> m6_171  [color=blue, key=0, style=bold];
m6_186 -> m6_187  [key=0, style=solid];
m6_228 -> m6_229  [key=0, style=solid];
m6_266 -> m6_267  [key=0, style=solid];
m6_268 -> m6_266  [color=blue, key=0, style=bold];
m6_269 -> m6_270  [key=0, style=solid];
m6_285 -> m6_286  [key=0, style=solid];
m6_288 -> m6_289  [key=0, style=solid];
m6_290 -> m6_288  [color=blue, key=0, style=bold];
m6_306 -> m6_307  [key=0, style=solid];
m6_309 -> m6_310  [key=0, style=solid];
m6_311 -> m6_309  [color=blue, key=0, style=bold];
m6_326 -> m6_327  [key=0, style=solid];
m6_338 -> m6_339  [key=0, style=solid];
m6_340 -> m6_338  [color=blue, key=0, style=bold];
m6_350 -> m6_351  [key=0, style=solid];
m6_359 -> m6_360  [key=0, style=solid];
m6_361 -> m6_359  [color=blue, key=0, style=bold];
m6_378 -> m6_379  [key=0, style=solid];
m6_380 -> m6_378  [color=blue, key=0, style=bold];
m6_392 -> m6_393  [key=0, style=solid];
m6_395 -> m6_396  [key=0, style=solid];
m6_397 -> m6_395  [color=blue, key=0, style=bold];
m6_405 -> m6_406  [key=0, style=solid];
m6_408 -> m6_409  [key=0, style=solid];
m6_410 -> m6_408  [color=blue, key=0, style=bold];
m6_423 -> m6_424  [key=0, style=solid];
m6_425 -> m6_423  [color=blue, key=0, style=bold];
m6_435 -> m6_436  [key=0, style=solid];
m6_437 -> m6_435  [color=blue, key=0, style=bold];
m6_144 -> m6_145  [key=0, style=solid];
m6_141 -> m6_142  [key=0, style=solid];
m6_165 -> m6_166  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_182 -> m6_183  [key=0, style=solid];
m6_189 -> m6_190  [key=0, style=solid];
m6_202 -> m6_203  [key=0, style=solid];
m6_211 -> m6_212  [key=0, style=solid];
m6_205 -> m6_206  [key=0, style=solid];
m6_208 -> m6_209  [key=0, style=solid];
m6_222 -> m6_223  [key=0, style=solid];
m6_225 -> m6_226  [key=0, style=solid];
m6_242 -> m6_243  [key=0, style=solid];
m6_245 -> m6_246  [key=0, style=solid];
m6_263 -> m6_264  [key=0, style=solid];
m6_329 -> m6_330  [key=0, style=solid];
m6_335 -> m6_336  [key=0, style=solid];
m6_353 -> m6_354  [key=0, style=solid];
m6_356 -> m6_357  [key=0, style=solid];
m6_375 -> m6_376  [key=0, style=solid];
m6_389 -> m6_390  [key=0, style=solid];
m6_420 -> m6_421  [key=0, style=solid];
m6_432 -> m6_433  [key=0, style=solid];
m6_42 -> m6_43  [key=0, style=solid];
m6_73 -> m6_71  [color=blue, key=0, style=bold];
m6_85 -> m6_83  [color=blue, key=0, style=bold];
m6_86 -> m6_87  [key=0, style=solid];
m6_88 -> m6_86  [color=blue, key=0, style=bold];
m6_90 -> m6_91  [key=0, style=solid];
m6_102 -> m6_100  [color=blue, key=0, style=bold];
m6_110 -> m6_108  [color=blue, key=0, style=bold];
m6_123 -> m6_121  [color=blue, key=0, style=bold];
m6_127 -> m6_128  [key=0, style=solid];
m6_129 -> m6_127  [color=blue, key=0, style=bold];
m6_143 -> m6_141  [color=blue, key=0, style=bold];
m6_146 -> m6_144  [color=blue, key=0, style=bold];
m6_149 -> m6_147  [color=blue, key=0, style=bold];
m6_164 -> m6_162  [color=blue, key=0, style=bold];
m6_167 -> m6_165  [color=blue, key=0, style=bold];
m6_184 -> m6_182  [color=blue, key=0, style=bold];
m6_188 -> m6_186  [color=blue, key=0, style=bold];
m6_191 -> m6_189  [color=blue, key=0, style=bold];
m6_204 -> m6_202  [color=blue, key=0, style=bold];
m6_207 -> m6_205  [color=blue, key=0, style=bold];
m6_210 -> m6_208  [color=blue, key=0, style=bold];
m6_213 -> m6_211  [color=blue, key=0, style=bold];
m6_224 -> m6_222  [color=blue, key=0, style=bold];
m6_230 -> m6_228  [color=blue, key=0, style=bold];
m6_231 -> m6_232  [key=0, style=solid];
m6_233 -> m6_231  [color=blue, key=0, style=bold];
m6_244 -> m6_242  [color=blue, key=0, style=bold];
m6_248 -> m6_249  [key=0, style=solid];
m6_250 -> m6_248  [color=blue, key=0, style=bold];
m6_251 -> m6_252  [key=0, style=solid];
m6_265 -> m6_263  [color=blue, key=0, style=bold];
m6_271 -> m6_269  [color=blue, key=0, style=bold];
m6_272 -> m6_273  [key=0, style=solid];
m6_274 -> m6_272  [color=blue, key=0, style=bold];
m6_291 -> m6_292  [key=0, style=solid];
m6_293 -> m6_291  [color=blue, key=0, style=bold];
m6_294 -> m6_295  [key=0, style=solid];
m6_287 -> m6_285  [color=blue, key=0, style=bold];
m6_312 -> m6_313  [key=0, style=solid];
m6_314 -> m6_312  [color=blue, key=0, style=bold];
m6_315 -> m6_316  [key=0, style=solid];
m6_308 -> m6_306  [color=blue, key=0, style=bold];
m6_331 -> m6_329  [color=blue, key=0, style=bold];
m6_332 -> m6_333  [key=0, style=solid];
m6_328 -> m6_326  [color=blue, key=0, style=bold];
m6_352 -> m6_350  [color=blue, key=0, style=bold];
m6_355 -> m6_353  [color=blue, key=0, style=bold];
m6_362 -> m6_363  [key=0, style=solid];
m6_364 -> m6_362  [color=blue, key=0, style=bold];
m6_365 -> m6_366  [key=0, style=solid];
m6_377 -> m6_375  [color=blue, key=0, style=bold];
m6_391 -> m6_389  [color=blue, key=0, style=bold];
m6_394 -> m6_392  [color=blue, key=0, style=bold];
m6_407 -> m6_405  [color=blue, key=0, style=bold];
m6_411 -> m6_412  [key=0, style=solid];
m6_413 -> m6_411  [color=blue, key=0, style=bold];
m6_422 -> m6_420  [color=blue, key=0, style=bold];
m6_434 -> m6_432  [color=blue, key=0, style=bold];
m6_295 -> m6_296  [key=0, style=solid];
m6_316 -> m6_317  [key=0, style=solid];
m6_333 -> m6_334  [key=0, style=solid];
m6_170 -> m6_168  [color=blue, key=0, style=bold];
m6_169 -> m6_170  [key=0, style=solid];
m6_227 -> m6_225  [color=blue, key=0, style=bold];
m6_226 -> m6_227  [key=0, style=solid];
m6_247 -> m6_245  [color=blue, key=0, style=bold];
m6_246 -> m6_247  [key=0, style=solid];
m6_337 -> m6_335  [color=blue, key=0, style=bold];
m6_336 -> m6_337  [key=0, style=solid];
m6_358 -> m6_356  [color=blue, key=0, style=bold];
m6_357 -> m6_358  [key=0, style=solid];
m6_44 -> m6_42  [color=blue, key=0, style=bold];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_45  [key=2, style=dotted];
m6_92 -> m6_90  [color=blue, key=0, style=bold];
m6_91 -> m6_92  [key=0, style=solid];
m6_253 -> m6_251  [color=blue, key=0, style=bold];
m6_252 -> m6_253  [key=0, style=solid];
m6_296 -> m6_294  [color=blue, key=0, style=bold];
m6_317 -> m6_315  [color=blue, key=0, style=bold];
m6_334 -> m6_332  [color=blue, key=0, style=bold];
m6_367 -> m6_365  [color=blue, key=0, style=bold];
m6_366 -> m6_367  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=2, style=dotted];
m6_26 -> m6_24  [color=blue, key=0, style=bold];
m6_381 -> m6_382  [key=0, style=solid];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_82  [key=2, style=dotted];
m6_384 -> m6_21  [key=2, style=dotted];
m6_384 -> m6_31  [key=2, style=dotted];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_385 -> m6_51  [key=2, style=dotted];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_396  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_386 -> m6_31  [key=2, style=dotted];
m6_386 -> m6_387  [key=0, style=solid];
m6_386 -> m6_395  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_383 -> m6_21  [key=2, style=dotted];
m6_383 -> m6_31  [key=2, style=dotted];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_387 -> m6_31  [key=2, style=dotted];
m6_387 -> m6_388  [key=0, style=solid];
m6_388 -> m6_381  [color=blue, key=0, style=bold];
m6_368 -> m6_369  [key=0, style=solid];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_82  [key=2, style=dotted];
m6_371 -> m6_51  [key=2, style=dotted];
m6_371 -> m6_372  [key=0, style=solid];
m6_371 -> m6_379  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_372 -> m6_31  [key=2, style=dotted];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_370 -> m6_21  [key=2, style=dotted];
m6_370 -> m6_31  [key=2, style=dotted];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_375  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_373 -> m6_31  [key=2, style=dotted];
m6_373 -> m6_374  [key=0, style=solid];
m6_374 -> m6_368  [color=blue, key=0, style=bold];
m6_254 -> m6_255  [key=0, style=solid];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_82  [key=2, style=dotted];
m6_255 -> m6_261  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_257 -> m6_51  [key=2, style=dotted];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_267  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_258 -> m6_31  [key=2, style=dotted];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_260 -> m6_261  [key=0, style=solid];
m6_260 -> m6_70  [key=2, style=dotted];
m6_260 -> m6_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_256 -> m6_21  [key=2, style=dotted];
m6_256 -> m6_31  [key=2, style=dotted];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_259 -> m6_31  [key=2, style=dotted];
m6_259 -> m6_260  [key=0, style=solid];
m6_261 -> m6_70  [key=2, style=dotted];
m6_261 -> m6_262  [key=0, style=solid];
m6_261 -> m6_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_262 -> m6_254  [color=blue, key=0, style=bold];
m6_297 -> m6_298  [key=0, style=solid];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_82  [key=2, style=dotted];
m6_298 -> m6_304  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_82  [key=2, style=dotted];
m6_301 -> m6_21  [key=2, style=dotted];
m6_301 -> m6_302  [key=0, style=solid];
m6_301 -> m6_284  [key=2, style=dotted];
m6_301 -> m6_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_302 -> m6_51  [key=2, style=dotted];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_310  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_303 -> m6_31  [key=2, style=dotted];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_304 -> m6_70  [key=2, style=dotted];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_313  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_300 -> m6_304  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_300 -> m6_283  [key=2, style=dotted];
m6_300 -> m6_316  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_305 -> m6_297  [color=blue, key=0, style=bold];
m6_448 -> m6_9  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_10  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_439  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_48  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_76  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_105  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_118  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_132  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_133  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_151  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_158  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_172  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_175  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_180  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_193  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_199  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_200  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_217  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_218  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_219  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_235  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_236  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_238  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_239  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_255  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_257  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_258  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_267  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_260  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_276  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_278  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_279  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_280  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_289  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_298  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_299  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_301  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_302  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_303  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_310  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_319  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_321  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_323  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_324  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_339  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_342  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_343  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_344  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_346  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_347  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_360  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_369  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_371  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_372  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_379  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_382  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_384  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_385  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_386  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_396  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_399  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_400  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_401  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_402  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_409  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_415  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_417  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_418  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_424  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_427  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_429  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_430  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_436  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_448 -> m6_443  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m6_449 -> m6_53  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_450 -> m6_62  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_451 -> m6_112  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_452 -> m6_125  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_453 -> m6_151  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_454 -> m6_172  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_455 -> m6_267  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_456 -> m6_289  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_458 -> m6_310  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_461 -> m6_339  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_462 -> m6_360  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_463 -> m6_379  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_464 -> m6_396  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_465 -> m6_409  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_466 -> m6_424  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_467 -> m6_436  [color=darkseagreen4, key=1, label=process, style=dashed];
m6_457 -> m6_292  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_457 -> m6_295  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_459 -> m6_313  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_459 -> m6_316  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_460 -> m6_330  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_460 -> m6_333  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_29  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m7_26 -> m7_30  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m7_26 -> m7_31  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m7_26 -> m7_32  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m7_26 -> m7_34  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m7_26 -> m7_35  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m7_26 -> m7_36  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m7_26 -> m7_37  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m7_26 -> m7_39  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m7_26 -> m7_40  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m7_26 -> m7_41  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m7_26 -> m7_42  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_24  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=0, style=solid];
m7_30 -> m7_29  [key=0, style=solid];
m7_30 -> m7_44  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_33  [key=0, style=solid];
m7_31 -> m7_45  [key=2, style=dotted];
m7_32 -> m7_31  [key=0, style=solid];
m7_32 -> m7_46  [key=2, style=dotted];
m7_34 -> m7_33  [key=0, style=solid];
m7_34 -> m7_47  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_48  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_38  [key=0, style=solid];
m7_36 -> m7_45  [key=2, style=dotted];
m7_37 -> m7_36  [key=0, style=solid];
m7_37 -> m7_49  [key=2, style=dotted];
m7_39 -> m7_38  [key=0, style=solid];
m7_39 -> m7_50  [key=2, style=dotted];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_42  [key=0, style=solid];
m7_41 -> m7_43  [key=0, style=solid];
m7_41 -> m7_51  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_52  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_33  [color=darkseagreen4, key=1, label=filters, style=dashed];
m7_28 -> m7_38  [color=darkseagreen4, key=1, label=filters, style=dashed];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_35  [key=0, style=solid];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_40  [key=0, style=solid];
m7_43 -> m7_26  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_5 -> m7_7  [color=green, key=0, style=solid];
m7_0 -> m7_1  [color=red, key=0, style=solid];
m7_0 -> m7_3  [color=red, key=1, label="Hangfire.States.StateHandlerCollection", style=dashed];
m7_1 -> m7_2  [color=red, key=0, style=solid];
m7_1 -> m7_3  [color=red, key=0, style=solid];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_3 -> m7_5  [color=green, key=0, style=solid];
m7_2 -> m7_4  [color=red, key=0, style=solid];
m7_2 -> m7_5  [color=red, key=2, style=dotted];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_7  [color=green, key=1, label="Hangfire.States.StateHandlerCollection", style=dashed];
m7_2 -> m7_8  [color=green, key=1, label="Hangfire.Common.IJobFilterProvider", style=dashed];
m7_4 -> m7_0  [color=blue, key=0, style=bold];
m7_4 -> m7_9  [color=green, key=0, style=solid];
m7_4 -> m7_5  [color=green, key=2, style=dotted];
m7_45 -> m7_54  [color=green, key=0, style=solid];
m7_45 -> m7_55  [color=green, key=2, style=dotted];
m7_45 -> m7_48  [color=green, key=2, style=dotted];
m7_44 -> m7_9  [color=red, key=3, label="Field variable System.Func<Hangfire.Common.Job, System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>> _getFiltersThunk", style=bold];
m7_15 -> m7_16  [color=red, key=0, style=solid];
m7_12 -> m7_13  [color=red, key=0, style=solid];
m7_12 -> m7_14  [color=red, key=2, style=dotted];
m7_12 -> m7_15  [color=red, key=1, label="lambda expression", style=dashed];
m7_11 -> m7_12  [color=red, key=0, style=solid];
m7_13 -> m7_11  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [color=red, key=0, style=solid];
m7_16 -> m7_18  [color=red, key=2, style=dotted];
m7_17 -> m7_15  [color=blue, key=0, style=bold];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_22  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_24  [key=2, style=dotted];
m7_22 -> m7_21  [key=0, style=solid];
m7_22 -> m7_25  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_23  [key=0, style=solid];
m7_23 -> m7_19  [color=blue, key=0, style=bold];
m7_52 -> m7_0  [color=darkorchid, key=3, label="Field variable Hangfire.States.StateHandlerCollection _handlers", style=bold];
m7_6 -> m7_9  [color=green, key=0, style=solid];
m7_6 -> m7_5  [color=green, key=2, style=dotted];
m7_6 -> m7_7  [color=red, key=0, style=solid];
m7_6 -> m7_12  [color=red, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m7_7 -> m7_8  [color=red, key=0, style=solid];
m7_7 -> m7_9  [color=red, key=0, style=solid];
m7_8 -> m7_9  [color=green, key=0, style=solid];
m7_8 -> m7_10  [color=red, key=0, style=solid];
m7_8 -> m7_5  [color=red, key=2, style=dotted];
m7_9 -> m7_2  [color=blue, key=0, style=bold];
m7_9 -> m7_10  [color=red, key=0, style=solid];
m7_10 -> m7_6  [color=blue, key=0, style=bold];
m7_24 -> m7_53  [color=red, key=0, style=solid];
m7_24 -> m7_45  [color=green, key=0, style=solid];
m7_53 -> m7_54  [color=red, key=0, style=solid];
m7_53 -> m7_55  [color=red, key=2, style=dotted];
m7_53 -> m7_56  [color=red, key=2, style=dotted];
m7_54 -> m7_24  [color=blue, key=0, style=bold];
m7_57 -> m7_3  [color=red, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_57 -> m7_9  [color=red, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_57 -> m7_20  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_57 -> m7_27  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_57 -> m7_31  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_57 -> m7_36  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_57 -> m7_53  [color=red, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_57 -> m7_7  [color=green, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_57 -> m7_8  [color=green, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_57 -> m7_45  [color=green, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m7_58 -> m7_12  [color=red, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_28  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformingContext", style=dashed];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_15  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_16  [key=2, style=dotted];
m8_29 -> m8_17  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_18  [key=2, style=dotted];
m8_32 -> m8_25  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<string>", style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_0 -> m8_4  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_0  [color=blue, key=0, style=bold];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_35  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformedContext", style=dashed];
m8_33 -> m8_37  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformedContext", style=dashed];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_15  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_16  [key=2, style=dotted];
m8_35 -> m8_17  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_38  [key=0, style=solid];
m8_38 -> m8_33  [color=blue, key=0, style=bold];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_21  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m8_19 -> m8_23  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_15  [key=2, style=dotted];
m8_21 -> m8_22  [color=red, key=0, style=solid];
m8_21 -> m8_16  [key=2, style=dotted];
m8_21 -> m8_17  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_22 -> m8_23  [color=red, key=0, style=solid];
m8_22 -> m8_24  [color=red, key=0, style=solid];
m8_24 -> m8_19  [color=blue, key=0, style=bold];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_10  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_15  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_16  [key=2, style=dotted];
m8_11 -> m8_17  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_18  [key=2, style=dotted];
m8_14 -> m8_7  [color=blue, key=0, style=bold];
m8_39 -> m8_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_3  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_4  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_9  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_12  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_21  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_22  [color=red, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_27  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_29  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_30  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_35  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m8_39 -> m8_36  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m9_35 -> m9_36  [key=0, style=solid];
m9_36 -> m9_29  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_38  [key=2, style=dotted];
m9_37 -> m9_35  [color=blue, key=0, style=bold];
m9_24 -> m9_53  [key=0, style=solid];
m9_53 -> m9_29  [key=2, style=dotted];
m9_53 -> m9_54  [key=0, style=solid];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_57  [key=2, style=dotted];
m9_54 -> m9_58  [key=2, style=dotted];
m9_55 -> m9_56  [key=0, style=solid];
m9_56 -> m9_24  [color=blue, key=0, style=bold];
m9_27 -> m9_59  [key=0, style=solid];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_63  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_65  [key=2, style=dotted];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_64  [key=2, style=dotted];
m9_62 -> m9_27  [color=blue, key=0, style=bold];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_29  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_34  [key=2, style=dotted];
m9_33 -> m9_31  [color=blue, key=0, style=bold];
m9_2 -> m9_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m9_2 -> m9_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_2 -> m9_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m9_10 -> m9_13  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=0, style=solid];
m9_5 -> m9_7  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_4 -> m9_11  [key=0, style=solid];
m9_4 -> m9_12  [key=2, style=dotted];
m9_6 -> m9_11  [key=0, style=solid];
m9_6 -> m9_12  [key=2, style=dotted];
m9_3 -> m9_5  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_11 -> m9_2  [color=blue, key=0, style=bold];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_41  [color=crimson, key=0, style=bold];
m9_39 -> m9_42  [color=crimson, key=0, style=bold];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_44  [key=2, style=dotted];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_45  [key=2, style=dotted];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_46  [key=2, style=dotted];
m9_43 -> m9_39  [color=blue, key=0, style=bold];
m9_29 -> m9_47  [key=0, style=solid];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_51  [key=2, style=dotted];
m9_47 -> m9_49  [color=darkseagreen4, key=1, label=connection, style=dashed];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_52  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_50 -> m9_29  [color=blue, key=0, style=bold];
m9_13 -> m9_14  [key=0, style=solid];
m9_21 -> m9_22  [color=green, key=0, style=solid];
m9_21 -> m9_23  [color=green, key=2, style=dotted];
m9_20 -> m9_21  [color=green, key=0, style=solid];
m9_20 -> m9_30  [key=2, style=dotted];
m9_18 -> m9_20  [color=darkseagreen4, key=1, label=script, style=dashed];
m9_18 -> m9_18  [color=darkseagreen4, key=1, label=script, style=dashed];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_28  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_29  [key=2, style=dotted];
m9_16 -> m9_22  [key=0, style=solid];
m9_16 -> m9_25  [key=2, style=dotted];
m9_14 -> m9_23  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_26  [key=2, style=dotted];
m9_17 -> m9_27  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=0, style=solid];
m9_15 -> m9_24  [key=2, style=dotted];
m9_22 -> m9_13  [color=blue, key=0, style=bold];
m9_66 -> m9_19  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_32  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_66 -> m9_53  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_2  [color=blue, key=0, style=bold];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_43  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m12_40 -> m12_45  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m12_40 -> m12_47  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m12_40 -> m12_49  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m12_40 -> m12_51  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m12_40 -> m12_53  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m12_40 -> m12_42  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m12_40 -> m12_44  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m12_40 -> m12_46  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_43  [key=0, style=solid];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_45  [key=0, style=solid];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_47  [key=0, style=solid];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_49  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_51  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_53  [key=0, style=solid];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_55  [key=0, style=solid];
m12_42 -> m12_56  [key=0, style=solid];
m12_44 -> m12_56  [key=0, style=solid];
m12_46 -> m12_56  [key=0, style=solid];
m12_48 -> m12_56  [key=0, style=solid];
m12_50 -> m12_56  [key=0, style=solid];
m12_52 -> m12_56  [key=0, style=solid];
m12_54 -> m12_56  [key=0, style=solid];
m12_55 -> m12_56  [key=0, style=solid];
m12_56 -> m12_40  [color=blue, key=0, style=bold];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_2  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [color=red, key=0, style=solid];
m12_4 -> m12_7  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m12_4 -> m12_16  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m12_5 -> m12_6  [color=red, key=0, style=solid];
m12_5 -> m12_7  [color=red, key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_11  [key=2, style=dotted];
m12_7 -> m12_12  [key=2, style=dotted];
m12_7 -> m12_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_7 -> m12_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_6 -> m12_9  [color=red, key=0, style=solid];
m12_6 -> m12_10  [color=red, key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_13  [key=2, style=dotted];
m12_8 -> m12_14  [key=2, style=dotted];
m12_9 -> m12_4  [color=blue, key=0, style=bold];
m12_14 -> m12_22  [key=0, style=solid];
m12_14 -> m12_27  [color=crimson, key=0, style=bold];
m12_14 -> m12_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>", style=dashed];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_30  [key=2, style=dotted];
m12_22 -> m12_26  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m12_22 -> m12_28  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m12_27 -> m12_28  [key=0, style=solid];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_29  [key=0, style=solid];
m12_23 -> m12_27  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_23  [key=0, style=solid];
m12_26 -> m12_32  [key=2, style=dotted];
m12_26 -> m12_33  [key=2, style=dotted];
m12_28 -> m12_23  [key=0, style=solid];
m12_28 -> m12_34  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_26  [color=darkseagreen4, key=1, label=filterInstance, style=dashed];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_31  [key=2, style=dotted];
m12_25 -> m12_28  [color=darkseagreen4, key=1, label=filterInstanceType, style=dashed];
m12_29 -> m12_14  [color=blue, key=0, style=bold];
m12_19 -> m12_20  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_18  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_17 -> m12_15  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_21 -> m12_19  [color=blue, key=0, style=bold];
m12_33 -> m12_35  [key=0, style=solid];
m12_33 -> m12_24  [color=darkorchid, key=3, label="Parameter variable object filterInstance", style=bold];
m12_33 -> m12_37  [color=darkorchid, key=3, label="method methodReturn bool AllowMultiple", style=bold];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_38  [color=darkseagreen4, key=1, label=mvcFilter, style=dashed];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_38  [key=0, style=solid];
m12_38 -> m12_39  [key=0, style=solid];
m12_37 -> m12_39  [key=0, style=solid];
m12_39 -> m12_33  [color=blue, key=0, style=bold];
m12_57 -> m12_7  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilterProviderCollection", style=dashed];
m12_58 -> m12_16  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m13_12 -> m13_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m13_12 -> m13_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m13_12 -> m13_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m13_12 -> m13_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m13_4 -> m13_11  [color=green, key=0, style=solid];
m13_4 -> m13_12  [color=green, key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_38  [key=2, style=dotted];
m13_36 -> m13_29  [key=2, style=dotted];
m13_37 -> m13_35  [color=blue, key=0, style=bold];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=0, style=solid];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_4  [key=2, style=dotted];
m13_2 -> m13_3  [color=green, key=0, style=solid];
m13_2 -> m13_5  [key=2, style=dotted];
m13_2 -> m13_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m13_2 -> m13_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_2 -> m13_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m13_3 -> m13_0  [color=blue, key=0, style=bold];
m13_3 -> m13_4  [color=green, key=0, style=solid];
m13_3 -> m13_5  [color=green, key=0, style=solid];
m13_24 -> m13_53  [key=0, style=solid];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_29  [key=2, style=dotted];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_57  [key=2, style=dotted];
m13_54 -> m13_58  [key=2, style=dotted];
m13_55 -> m13_56  [key=0, style=solid];
m13_56 -> m13_24  [color=blue, key=0, style=bold];
m13_27 -> m13_59  [key=0, style=solid];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_63  [key=2, style=dotted];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_65  [key=2, style=dotted];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_64  [key=2, style=dotted];
m13_62 -> m13_27  [color=blue, key=0, style=bold];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_11  [key=0, style=solid];
m13_6 -> m13_12  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_8 -> m13_6  [color=blue, key=0, style=bold];
m13_8 -> m13_9  [key=0, style=solid];
m13_31 -> m13_32  [key=0, style=solid];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_34  [key=2, style=dotted];
m13_32 -> m13_29  [key=2, style=dotted];
m13_33 -> m13_31  [color=blue, key=0, style=bold];
m13_9 -> m13_11  [key=0, style=solid];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_13  [key=2, style=dotted];
m13_11 -> m13_2  [color=blue, key=0, style=bold];
m13_11 -> m13_9  [color=blue, key=0, style=bold];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_41  [color=crimson, key=0, style=bold];
m13_39 -> m13_42  [color=crimson, key=0, style=bold];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_44  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_45  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_46  [key=2, style=dotted];
m13_43 -> m13_39  [color=blue, key=0, style=bold];
m13_29 -> m13_47  [key=0, style=solid];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_51  [key=2, style=dotted];
m13_47 -> m13_49  [color=darkseagreen4, key=1, label=connection, style=dashed];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_52  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_50 -> m13_29  [color=blue, key=0, style=bold];
m13_13 -> m13_14  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=0, style=solid];
m13_15 -> m13_24  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_26  [key=2, style=dotted];
m13_17 -> m13_27  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_29  [key=2, style=dotted];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_23  [key=2, style=dotted];
m13_16 -> m13_22  [key=0, style=solid];
m13_16 -> m13_25  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_18  [color=darkseagreen4, key=1, label=script, style=dashed];
m13_18 -> m13_28  [key=2, style=dotted];
m13_18 -> m13_20  [color=darkseagreen4, key=1, label=script, style=dashed];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_30  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_23  [key=2, style=dotted];
m13_22 -> m13_13  [color=blue, key=0, style=bold];
m13_66 -> m13_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_19  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_32  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m13_66 -> m13_53  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_14 -> m14_12  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label=ConnectionFactory, style=dashed];
m14_0 -> m14_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m14_0 -> m14_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_5  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_9  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_10  [key=2, style=dotted];
m14_6 -> m14_11  [key=2, style=dotted];
m14_2 -> m14_7  [key=0, style=solid];
m14_2 -> m14_8  [key=2, style=dotted];
m14_4 -> m14_7  [key=0, style=solid];
m14_4 -> m14_8  [key=2, style=dotted];
m14_7 -> m14_0  [color=blue, key=0, style=bold];
m14_15 -> m14_16  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_17 -> m14_15  [color=blue, key=0, style=bold];
m14_18 -> m14_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m14_18 -> m14_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m14_18 -> m14_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m14_18 -> m14_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m15_41 -> m15_42  [key=0, style=solid];
m15_42 -> m15_43  [key=0, style=solid];
m15_43 -> m15_41  [color=blue, key=0, style=bold];
m15_75 -> m15_83  [key=0, style=solid];
m15_75 -> m15_84  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m15_75 -> m15_45  [color=darkorchid, key=3, label="Parameter variable Hangfire.Common.Job job", style=bold];
m15_75 -> m15_53  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.IState state", style=bold];
m15_83 -> m15_84  [key=0, style=solid];
m15_83 -> m15_87  [key=2, style=dotted];
m15_83 -> m15_85  [color=darkseagreen4, key=1, label=context, style=dashed];
m15_84 -> m15_85  [key=0, style=solid];
m15_84 -> m15_88  [key=2, style=dotted];
m15_85 -> m15_86  [key=0, style=solid];
m15_85 -> m15_89  [key=2, style=dotted];
m15_86 -> m15_75  [color=blue, key=0, style=bold];
m15_2 -> m15_3  [color=red, key=0, style=solid];
m15_2 -> m15_5  [color=darkseagreen4, key=1, label="Hangfire.Client.IJobCreationProcess", style=dashed];
m15_2 -> m15_7  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m15_2 -> m15_9  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m15_2 -> m15_11  [color=red, key=1, label="System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>", style=dashed];
m15_2 -> m15_12  [color=darkseagreen4, key=1, label="Hangfire.Client.IJobCreationProcess", style=dashed];
m15_2 -> m15_13  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m15_2 -> m15_14  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m15_3 -> m15_4  [color=red, key=0, style=solid];
m15_3 -> m15_5  [color=red, key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_7  [key=0, style=solid];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_9  [key=0, style=solid];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_11  [color=red, key=0, style=solid];
m15_11 -> m15_12  [color=red, key=0, style=solid];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_14 -> m15_15  [key=0, style=solid];
m15_4 -> m15_15  [color=red, key=0, style=solid];
m15_4 -> m15_16  [color=red, key=2, style=dotted];
m15_6 -> m15_15  [key=0, style=solid];
m15_6 -> m15_16  [key=2, style=dotted];
m15_8 -> m15_15  [key=0, style=solid];
m15_8 -> m15_16  [key=2, style=dotted];
m15_10 -> m15_15  [key=0, style=solid];
m15_10 -> m15_16  [key=2, style=dotted];
m15_15 -> m15_2  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [color=blue, key=0, style=bold];
m15_38 -> m15_44  [key=0, style=solid];
m15_38 -> m15_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m15_38 -> m15_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m15_38 -> m15_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m15_38 -> m15_54  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m15_38 -> m15_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_38 -> m15_60  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m15_38 -> m15_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> m15_64  [key=2, style=dotted];
m15_46 -> m15_47  [key=0, style=solid];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_67  [key=2, style=dotted];
m15_48 -> m15_68  [key=2, style=dotted];
m15_50 -> m15_51  [key=0, style=solid];
m15_50 -> m15_67  [key=2, style=dotted];
m15_50 -> m15_70  [key=2, style=dotted];
m15_50 -> m15_52  [color=darkseagreen4, key=1, label=lastExecutionTime, style=dashed];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_75  [key=2, style=dotted];
m15_54 -> m15_58  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_77  [key=2, style=dotted];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_63  [key=0, style=solid];
m15_60 -> m15_36  [key=2, style=dotted];
m15_60 -> m15_80  [key=2, style=dotted];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_81  [key=2, style=dotted];
m15_62 -> m15_82  [key=2, style=dotted];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_65  [key=2, style=dotted];
m15_45 -> m15_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_66  [key=2, style=dotted];
m15_47 -> m15_49  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m15_49 -> m15_50  [key=0, style=solid];
m15_49 -> m15_69  [key=2, style=dotted];
m15_49 -> m15_52  [color=darkseagreen4, key=1, label=instant, style=dashed];
m15_49 -> m15_56  [color=darkseagreen4, key=1, label=instant, style=dashed];
m15_49 -> m15_57  [color=darkseagreen4, key=1, label=instant, style=dashed];
m15_49 -> m15_59  [color=darkseagreen4, key=1, label=instant, style=dashed];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_59  [key=0, style=solid];
m15_52 -> m15_72  [key=2, style=dotted];
m15_52 -> m15_73  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_78  [key=2, style=dotted];
m15_57 -> m15_79  [key=2, style=dotted];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_78  [key=2, style=dotted];
m15_59 -> m15_79  [key=2, style=dotted];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> m15_71  [key=2, style=dotted];
m15_51 -> m15_57  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m15_51 -> m15_58  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m15_51 -> m15_59  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m15_51 -> m15_60  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_79  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_74  [key=2, style=dotted];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_57  [key=0, style=solid];
m15_55 -> m15_76  [key=2, style=dotted];
m15_61 -> m15_62  [key=0, style=solid];
m15_63 -> m15_38  [color=blue, key=0, style=bold];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_19  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m15_17 -> m15_22  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m15_17 -> m15_29  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_31  [key=2, style=dotted];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_32  [key=2, style=dotted];
m15_19 -> m15_21  [color=darkseagreen4, key=1, label=connection, style=dashed];
m15_19 -> m15_24  [color=darkseagreen4, key=1, label=connection, style=dashed];
m15_19 -> m15_26  [color=darkseagreen4, key=1, label=connection, style=dashed];
m15_22 -> m15_23  [color=red, key=0, style=solid];
m15_22 -> m15_35  [color=red, key=2, style=dotted];
m15_22 -> m15_26  [color=red, key=1, label=stateMachineFactory, style=dashed];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_40  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_33  [key=2, style=dotted];
m15_21 -> m15_22  [color=red, key=0, style=solid];
m15_21 -> m15_34  [key=2, style=dotted];
m15_21 -> m15_23  [color=darkseagreen4, key=1, label=recurringJobIds, style=dashed];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_36  [key=2, style=dotted];
m15_24 -> m15_37  [key=2, style=dotted];
m15_24 -> m15_26  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_23  [key=0, style=solid];
m15_26 -> m15_38  [key=2, style=dotted];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_29  [key=0, style=solid];
m15_23 -> m15_26  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m15_23 -> m15_28  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m15_28 -> m15_23  [key=0, style=solid];
m15_28 -> m15_36  [key=2, style=dotted];
m15_28 -> m15_39  [key=2, style=dotted];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_23  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_30 -> m15_17  [color=blue, key=0, style=bold];
m15_90 -> m15_11  [color=red, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_12  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_13  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_14  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_18  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_22  [color=red, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_26  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_29  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_49  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_54  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m15_90 -> m15_85  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m16_157 -> m16_158  [key=0, style=solid];
m16_158 -> m16_159  [key=0, style=solid];
m16_158 -> m16_162  [color=darkseagreen4, key=1, label=time, style=dashed];
m16_158 -> m16_166  [color=darkseagreen4, key=1, label=time, style=dashed];
m16_159 -> m16_160  [key=0, style=solid];
m16_159 -> m16_164  [key=2, style=dotted];
m16_162 -> m16_163  [key=0, style=solid];
m16_162 -> m16_105  [key=2, style=dotted];
m16_162 -> m16_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_160 -> m16_161  [key=0, style=solid];
m16_160 -> m16_103  [key=2, style=dotted];
m16_161 -> m16_162  [key=0, style=solid];
m16_161 -> m16_104  [key=2, style=dotted];
m16_163 -> m16_157  [color=blue, key=0, style=bold];
m16_168 -> m16_169  [key=0, style=solid];
m16_169 -> m16_170  [key=0, style=solid];
m16_169 -> m16_19  [key=2, style=dotted];
m16_169 -> m16_26  [key=2, style=dotted];
m16_169 -> m16_20  [key=2, style=dotted];
m16_169 -> m16_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_170 -> m16_171  [key=0, style=solid];
m16_170 -> m16_103  [key=2, style=dotted];
m16_170 -> m16_178  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_171 -> m16_172  [key=0, style=solid];
m16_171 -> m16_173  [key=2, style=dotted];
m16_171 -> m16_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_172 -> m16_168  [color=blue, key=0, style=bold];
m16_109 -> m16_110  [key=0, style=solid];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_103  [key=2, style=dotted];
m16_111 -> m16_112  [key=0, style=solid];
m16_111 -> m16_104  [key=2, style=dotted];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_62  [key=2, style=dotted];
m16_112 -> m16_118  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m16_112 -> m16_114  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m16_112 -> m16_126  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m16_112 -> m16_115  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m16_112 -> m16_133  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m16_113 -> m16_114  [key=0, style=solid];
m16_113 -> m16_105  [key=2, style=dotted];
m16_113 -> m16_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_105  [key=2, style=dotted];
m16_114 -> m16_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_115 -> m16_116  [key=0, style=solid];
m16_115 -> m16_105  [key=2, style=dotted];
m16_115 -> m16_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_116 -> m16_109  [color=blue, key=0, style=bold];
m16_138 -> m16_139  [key=0, style=solid];
m16_139 -> m16_140  [key=0, style=solid];
m16_139 -> m16_19  [key=2, style=dotted];
m16_139 -> m16_20  [key=2, style=dotted];
m16_139 -> m16_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_140 -> m16_141  [key=0, style=solid];
m16_140 -> m16_103  [key=2, style=dotted];
m16_141 -> m16_142  [key=0, style=solid];
m16_141 -> m16_104  [key=2, style=dotted];
m16_142 -> m16_143  [key=0, style=solid];
m16_142 -> m16_105  [key=2, style=dotted];
m16_142 -> m16_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_143 -> m16_144  [key=0, style=solid];
m16_143 -> m16_105  [key=2, style=dotted];
m16_143 -> m16_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_144 -> m16_138  [color=blue, key=0, style=bold];
m16_84 -> m16_85  [color=red, key=0, style=solid];
m16_85 -> m16_86  [color=red, key=0, style=solid];
m16_85 -> m16_38  [color=red, key=2, style=dotted];
m16_85 -> m16_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_72  [key=2, style=dotted];
m16_87 -> m16_84  [color=blue, key=0, style=bold];
m16_103 -> m16_233  [color=red, key=0, style=solid];
m16_233 -> m16_234  [color=red, key=0, style=solid];
m16_233 -> m16_76  [color=red, key=2, style=dotted];
m16_234 -> m16_103  [color=blue, key=0, style=bold];
m16_208 -> m16_209  [key=0, style=solid];
m16_209 -> m16_210  [key=0, style=solid];
m16_209 -> m16_216  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m16_210 -> m16_211  [key=0, style=solid];
m16_210 -> m16_214  [key=2, style=dotted];
m16_211 -> m16_212  [key=0, style=solid];
m16_211 -> m16_103  [key=2, style=dotted];
m16_211 -> m16_222  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_212 -> m16_213  [key=0, style=solid];
m16_212 -> m16_173  [key=2, style=dotted];
m16_212 -> m16_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_213 -> m16_208  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [color=green, key=0, style=solid];
m16_1 -> m16_16  [key=2, style=dotted];
m16_2 -> m16_3  [color=green, key=0, style=solid];
m16_3 -> m16_4  [color=green, key=0, style=solid];
m16_3 -> m16_17  [color=green, key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_18  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_19  [key=2, style=dotted];
m16_5 -> m16_20  [key=2, style=dotted];
m16_5 -> m16_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_8  [color=darkseagreen4, key=1, label=timeZone1, style=dashed];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_21  [key=2, style=dotted];
m16_8 -> m16_22  [key=2, style=dotted];
m16_8 -> m16_23  [key=2, style=dotted];
m16_8 -> m16_24  [key=2, style=dotted];
m16_8 -> m16_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_25  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_19  [key=2, style=dotted];
m16_10 -> m16_20  [key=2, style=dotted];
m16_10 -> m16_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_19  [key=2, style=dotted];
m16_11 -> m16_26  [key=2, style=dotted];
m16_11 -> m16_20  [key=2, style=dotted];
m16_11 -> m16_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_19  [key=2, style=dotted];
m16_12 -> m16_20  [key=2, style=dotted];
m16_12 -> m16_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_27  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_19  [key=2, style=dotted];
m16_14 -> m16_20  [key=2, style=dotted];
m16_14 -> m16_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_15 -> m16_0  [color=blue, key=0, style=bold];
m16_224 -> m16_225  [key=0, style=solid];
m16_225 -> m16_226  [key=0, style=solid];
m16_226 -> m16_227  [key=0, style=solid];
m16_226 -> m16_103  [key=2, style=dotted];
m16_227 -> m16_228  [key=0, style=solid];
m16_227 -> m16_104  [key=2, style=dotted];
m16_228 -> m16_229  [key=0, style=solid];
m16_228 -> m16_105  [key=2, style=dotted];
m16_228 -> m16_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_229 -> m16_224  [color=blue, key=0, style=bold];
m16_98 -> m16_99  [key=0, style=solid];
m16_99 -> m16_100  [key=0, style=solid];
m16_99 -> m16_103  [key=2, style=dotted];
m16_100 -> m16_101  [key=0, style=solid];
m16_100 -> m16_104  [key=2, style=dotted];
m16_101 -> m16_102  [key=0, style=solid];
m16_101 -> m16_105  [key=2, style=dotted];
m16_101 -> m16_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_102 -> m16_98  [color=blue, key=0, style=bold];
m16_189 -> m16_190  [key=0, style=solid];
m16_190 -> m16_191  [key=0, style=solid];
m16_190 -> m16_197  [key=2, style=dotted];
m16_190 -> m16_200  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m16_190 -> m16_192  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m16_191 -> m16_192  [key=0, style=solid];
m16_191 -> m16_200  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m16_192 -> m16_193  [key=0, style=solid];
m16_192 -> m16_198  [key=2, style=dotted];
m16_193 -> m16_194  [key=0, style=solid];
m16_194 -> m16_195  [key=0, style=solid];
m16_194 -> m16_103  [key=2, style=dotted];
m16_194 -> m16_206  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_195 -> m16_196  [key=0, style=solid];
m16_195 -> m16_173  [key=2, style=dotted];
m16_195 -> m16_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_196 -> m16_189  [color=blue, key=0, style=bold];
m16_230 -> m16_231  [key=0, style=solid];
m16_40 -> m16_41  [key=0, style=solid];
m16_47 -> m16_48  [key=0, style=solid];
m16_51 -> m16_52  [key=0, style=solid];
m16_55 -> m16_56  [key=0, style=solid];
m16_59 -> m16_60  [key=0, style=solid];
m16_64 -> m16_65  [key=0, style=solid];
m16_28 -> m16_29  [color=green, key=0, style=solid];
m16_29 -> m16_30  [color=green, key=0, style=solid];
m16_29 -> m16_33  [color=green, key=2, style=dotted];
m16_29 -> m16_31  [color=green, key=1, label=factory, style=dashed];
m16_30 -> m16_31  [color=green, key=0, style=solid];
m16_30 -> m16_19  [color=green, key=2, style=dotted];
m16_30 -> m16_34  [color=green, key=2, style=dotted];
m16_30 -> m16_20  [color=green, key=2, style=dotted];
m16_30 -> m16_35  [color=green, key=1, label="lambda expression", style=dashed];
m16_31 -> m16_32  [color=green, key=0, style=solid];
m16_35 -> m16_36  [color=green, key=0, style=solid];
m16_32 -> m16_28  [color=blue, key=0, style=bold];
m16_36 -> m16_37  [color=green, key=0, style=solid];
m16_36 -> m16_38  [color=green, key=2, style=dotted];
m16_36 -> m16_39  [color=green, key=2, style=dotted];
m16_37 -> m16_35  [color=blue, key=0, style=bold];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_38  [key=2, style=dotted];
m16_41 -> m16_43  [key=2, style=dotted];
m16_42 -> m16_40  [color=blue, key=0, style=bold];
m16_44 -> m16_45  [key=0, style=solid];
m16_45 -> m16_46  [key=0, style=solid];
m16_46 -> m16_44  [color=blue, key=0, style=bold];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_50  [key=2, style=dotted];
m16_49 -> m16_47  [color=blue, key=0, style=bold];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_54  [key=2, style=dotted];
m16_53 -> m16_51  [color=blue, key=0, style=bold];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_58  [key=2, style=dotted];
m16_57 -> m16_55  [color=blue, key=0, style=bold];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_62  [key=2, style=dotted];
m16_60 -> m16_63  [key=2, style=dotted];
m16_61 -> m16_59  [color=blue, key=0, style=bold];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_38  [key=2, style=dotted];
m16_65 -> m16_67  [key=2, style=dotted];
m16_66 -> m16_64  [color=blue, key=0, style=bold];
m16_73 -> m16_74  [color=red, key=0, style=solid];
m16_74 -> m16_75  [color=red, key=0, style=solid];
m16_74 -> m16_76  [color=red, key=2, style=dotted];
m16_75 -> m16_73  [color=blue, key=0, style=bold];
m16_81 -> m16_82  [color=red, key=0, style=solid];
m16_82 -> m16_83  [color=red, key=0, style=solid];
m16_82 -> m16_76  [color=red, key=2, style=dotted];
m16_83 -> m16_81  [color=blue, key=0, style=bold];
m16_88 -> m16_89  [color=red, key=0, style=solid];
m16_89 -> m16_90  [color=red, key=0, style=solid];
m16_89 -> m16_76  [color=red, key=2, style=dotted];
m16_90 -> m16_88  [color=blue, key=0, style=bold];
m16_95 -> m16_96  [color=red, key=0, style=solid];
m16_96 -> m16_97  [color=red, key=0, style=solid];
m16_96 -> m16_76  [color=red, key=2, style=dotted];
m16_97 -> m16_95  [color=blue, key=0, style=bold];
m16_106 -> m16_107  [key=0, style=solid];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_38  [key=2, style=dotted];
m16_107 -> m16_67  [key=2, style=dotted];
m16_108 -> m16_106  [color=blue, key=0, style=bold];
m16_118 -> m16_119  [key=0, style=solid];
m16_118 -> m16_38  [key=2, style=dotted];
m16_118 -> m16_120  [key=2, style=dotted];
m16_118 -> m16_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_126 -> m16_127  [key=0, style=solid];
m16_126 -> m16_38  [key=2, style=dotted];
m16_126 -> m16_120  [key=2, style=dotted];
m16_126 -> m16_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_133 -> m16_134  [key=0, style=solid];
m16_133 -> m16_38  [key=2, style=dotted];
m16_133 -> m16_120  [key=2, style=dotted];
m16_133 -> m16_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_117 -> m16_118  [key=0, style=solid];
m16_125 -> m16_126  [key=0, style=solid];
m16_132 -> m16_133  [key=0, style=solid];
m16_119 -> m16_117  [color=blue, key=0, style=bold];
m16_121 -> m16_122  [key=0, style=solid];
m16_122 -> m16_123  [key=0, style=solid];
m16_122 -> m16_124  [key=2, style=dotted];
m16_123 -> m16_121  [color=blue, key=0, style=bold];
m16_127 -> m16_125  [color=blue, key=0, style=bold];
m16_128 -> m16_129  [key=0, style=solid];
m16_129 -> m16_130  [key=0, style=solid];
m16_129 -> m16_124  [key=2, style=dotted];
m16_129 -> m16_131  [key=2, style=dotted];
m16_130 -> m16_128  [color=blue, key=0, style=bold];
m16_134 -> m16_132  [color=blue, key=0, style=bold];
m16_135 -> m16_136  [key=0, style=solid];
m16_136 -> m16_137  [key=0, style=solid];
m16_136 -> m16_124  [key=2, style=dotted];
m16_136 -> m16_131  [key=2, style=dotted];
m16_137 -> m16_135  [color=blue, key=0, style=bold];
m16_145 -> m16_146  [key=0, style=solid];
m16_148 -> m16_149  [key=0, style=solid];
m16_151 -> m16_152  [key=0, style=solid];
m16_146 -> m16_147  [key=0, style=solid];
m16_146 -> m16_38  [key=2, style=dotted];
m16_146 -> m16_43  [key=2, style=dotted];
m16_147 -> m16_145  [color=blue, key=0, style=bold];
m16_149 -> m16_150  [key=0, style=solid];
m16_149 -> m16_38  [key=2, style=dotted];
m16_149 -> m16_67  [key=2, style=dotted];
m16_150 -> m16_148  [color=blue, key=0, style=bold];
m16_152 -> m16_153  [key=0, style=solid];
m16_152 -> m16_62  [key=2, style=dotted];
m16_152 -> m16_38  [key=2, style=dotted];
m16_152 -> m16_120  [key=2, style=dotted];
m16_152 -> m16_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_153 -> m16_151  [color=blue, key=0, style=bold];
m16_154 -> m16_155  [key=0, style=solid];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_124  [key=2, style=dotted];
m16_155 -> m16_131  [key=2, style=dotted];
m16_156 -> m16_154  [color=blue, key=0, style=bold];
m16_166 -> m16_167  [key=0, style=solid];
m16_166 -> m16_43  [key=2, style=dotted];
m16_165 -> m16_166  [key=0, style=solid];
m16_167 -> m16_165  [color=blue, key=0, style=bold];
m16_174 -> m16_175  [key=0, style=solid];
m16_178 -> m16_179  [key=0, style=solid];
m16_178 -> m16_104  [key=2, style=dotted];
m16_177 -> m16_178  [key=0, style=solid];
m16_175 -> m16_176  [key=0, style=solid];
m16_175 -> m16_38  [key=2, style=dotted];
m16_175 -> m16_58  [key=2, style=dotted];
m16_176 -> m16_174  [color=blue, key=0, style=bold];
m16_179 -> m16_177  [color=blue, key=0, style=bold];
m16_187 -> m16_188  [key=0, style=solid];
m16_187 -> m16_104  [key=2, style=dotted];
m16_186 -> m16_187  [key=0, style=solid];
m16_188 -> m16_186  [color=blue, key=0, style=bold];
m16_200 -> m16_201  [key=0, style=solid];
m16_200 -> m16_202  [key=0, style=solid];
m16_206 -> m16_207  [key=0, style=solid];
m16_206 -> m16_104  [key=2, style=dotted];
m16_205 -> m16_206  [key=0, style=solid];
m16_199 -> m16_200  [key=0, style=solid];
m16_201 -> m16_203  [key=0, style=solid];
m16_201 -> m16_204  [key=2, style=dotted];
m16_202 -> m16_203  [key=0, style=solid];
m16_203 -> m16_199  [color=blue, key=0, style=bold];
m16_207 -> m16_205  [color=blue, key=0, style=bold];
m16_216 -> m16_217  [key=0, style=solid];
m16_216 -> m16_218  [key=0, style=solid];
m16_216 -> m16_220  [key=2, style=dotted];
m16_222 -> m16_223  [key=0, style=solid];
m16_222 -> m16_104  [key=2, style=dotted];
m16_221 -> m16_222  [key=0, style=solid];
m16_215 -> m16_216  [key=0, style=solid];
m16_217 -> m16_219  [key=0, style=solid];
m16_217 -> m16_204  [key=2, style=dotted];
m16_218 -> m16_219  [key=0, style=solid];
m16_219 -> m16_215  [color=blue, key=0, style=bold];
m16_223 -> m16_221  [color=blue, key=0, style=bold];
m16_231 -> m16_232  [key=0, style=solid];
m16_231 -> m16_38  [key=2, style=dotted];
m16_231 -> m16_67  [key=2, style=dotted];
m16_232 -> m16_230  [color=blue, key=0, style=bold];
m16_77 -> m16_78  [color=red, key=0, style=solid];
m16_77 -> m16_69  [color=green, key=0, style=solid];
m16_78 -> m16_79  [color=green, key=0, style=solid];
m16_78 -> m16_38  [color=green, key=2, style=dotted];
m16_78 -> m16_81  [color=green, key=1, label="lambda expression", style=dashed];
m16_79 -> m16_80  [color=red, key=0, style=solid];
m16_79 -> m16_72  [color=green, key=2, style=dotted];
m16_79 -> m16_71  [color=green, key=0, style=solid];
m16_69 -> m16_70  [color=red, key=0, style=solid];
m16_69 -> m16_38  [color=red, key=2, style=dotted];
m16_69 -> m16_73  [color=red, key=1, label="lambda expression", style=dashed];
m16_70 -> m16_80  [key=0, style=solid];
m16_70 -> m16_72  [color=red, key=2, style=dotted];
m16_70 -> m16_71  [color=red, key=0, style=solid];
m16_80 -> m16_77  [color=blue, key=0, style=bold];
m16_68 -> m16_69  [color=red, key=0, style=solid];
m16_68 -> m16_78  [color=green, key=0, style=solid];
m16_71 -> m16_68  [color=blue, key=0, style=bold];
m16_91 -> m16_92  [color=red, key=0, style=solid];
m16_92 -> m16_93  [color=red, key=0, style=solid];
m16_92 -> m16_38  [color=red, key=2, style=dotted];
m16_92 -> m16_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_72  [key=2, style=dotted];
m16_94 -> m16_91  [color=blue, key=0, style=bold];
m16_180 -> m16_181  [key=0, style=solid];
m16_181 -> m16_182  [key=0, style=solid];
m16_181 -> m16_185  [key=2, style=dotted];
m16_181 -> m16_24  [key=2, style=dotted];
m16_182 -> m16_183  [key=0, style=solid];
m16_182 -> m16_103  [key=2, style=dotted];
m16_182 -> m16_187  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_183 -> m16_184  [key=0, style=solid];
m16_183 -> m16_173  [key=2, style=dotted];
m16_183 -> m16_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_184 -> m16_180  [color=blue, key=0, style=bold];
m16_235 -> m16_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_3  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_69  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_78  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_85  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_99  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_100  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_110  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_111  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_113  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_114  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_126  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_129  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_133  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_139  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_140  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_141  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_142  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_143  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_159  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_161  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_162  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_169  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_170  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_181  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_182  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_183  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_187  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_191  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_202  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_193  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_195  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_206  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_209  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_218  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_210  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_211  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_212  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_222  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_225  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_226  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_227  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_228  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_235 -> m16_233  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_236 -> m16_118  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m16_236 -> m16_126  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m16_236 -> m16_133  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m16_237 -> m16_166  [color=darkseagreen4, key=1, label=time, style=dashed];
m16_238 -> m16_178  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_239 -> m16_187  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_240 -> m16_200  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m16_241 -> m16_206  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_242 -> m16_222  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [color=green, key=0, style=solid];
m18_1 -> m18_58  [key=2, style=dotted];
m18_2 -> m18_3  [color=green, key=0, style=solid];
m18_2 -> m18_59  [color=green, key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_60  [key=2, style=dotted];
m18_3 -> m18_61  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_62  [key=2, style=dotted];
m18_4 -> m18_10  [color=darkseagreen4, key=1, label=server, style=dashed];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_44  [color=darkseagreen4, key=1, label=count, style=dashed];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_65  [key=2, style=dotted];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_55  [key=0, style=solid];
m18_44 -> m18_45  [key=0, style=solid];
m18_44 -> m18_44  [color=darkseagreen4, key=1, label=count, style=dashed];
m18_44 -> m18_94  [color=darkseagreen4, key=1, label=number, style=dashed];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_63  [key=2, style=dotted];
m18_7 -> m18_9  [color=green, key=1, label=command, style=dashed];
m18_7 -> m18_11  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_12  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_21  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_22  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_30  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_31  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_36  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_37  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_42  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_43  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_46  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_49  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_7 -> m18_50  [color=darkseagreen4, key=1, label=command, style=dashed];
m18_55 -> m18_56  [key=0, style=solid];
m18_55 -> m18_70  [key=2, style=dotted];
m18_8 -> m18_9  [color=green, key=0, style=solid];
m18_8 -> m18_55  [key=0, style=solid];
m18_8 -> m18_64  [key=2, style=dotted];
m18_9 -> m18_10  [color=green, key=0, style=solid];
m18_9 -> m18_11  [color=green, key=0, style=solid];
m18_9 -> m18_64  [color=green, key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_21  [key=0, style=solid];
m18_11 -> m18_66  [key=2, style=dotted];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_67  [key=2, style=dotted];
m18_12 -> m18_68  [key=2, style=dotted];
m18_12 -> m18_14  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_30  [color=red, key=0, style=solid];
m18_21 -> m18_66  [key=2, style=dotted];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_67  [key=2, style=dotted];
m18_22 -> m18_68  [key=2, style=dotted];
m18_22 -> m18_24  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m18_30 -> m18_31  [color=red, key=0, style=solid];
m18_30 -> m18_36  [color=red, key=0, style=solid];
m18_30 -> m18_66  [color=red, key=2, style=dotted];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_67  [key=2, style=dotted];
m18_31 -> m18_68  [key=2, style=dotted];
m18_31 -> m18_33  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_42  [key=0, style=solid];
m18_36 -> m18_66  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_67  [key=2, style=dotted];
m18_37 -> m18_68  [key=2, style=dotted];
m18_37 -> m18_39  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_46  [key=0, style=solid];
m18_42 -> m18_66  [key=2, style=dotted];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_67  [key=2, style=dotted];
m18_43 -> m18_68  [key=2, style=dotted];
m18_43 -> m18_45  [color=darkseagreen4, key=1, label=seconds, style=dashed];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_49  [key=0, style=solid];
m18_46 -> m18_66  [key=2, style=dotted];
m18_49 -> m18_50  [key=0, style=solid];
m18_49 -> m18_6  [key=0, style=solid];
m18_49 -> m18_66  [key=2, style=dotted];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_67  [key=2, style=dotted];
m18_50 -> m18_68  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_13 -> m18_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_13 -> m18_13  [color=green, key=3, label="Local variable int i", style=bold];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_18  [key=0, style=solid];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_76  [color=darkseagreen4, key=1, label=number, style=dashed];
m18_15 -> m18_13  [color=green, key=3, label="Local variable int number", style=bold];
m18_17 -> m18_14  [key=0, style=solid];
m18_17 -> m18_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_21  [key=0, style=solid];
m18_18 -> m18_70  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_69  [key=2, style=dotted];
m18_16 -> m18_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_19 -> m18_20  [key=0, style=solid];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_70  [key=2, style=dotted];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_23 -> m18_13  [color=green, key=3, label="Local variable int i", style=bold];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_27  [key=0, style=solid];
m18_26 -> m18_24  [key=0, style=solid];
m18_26 -> m18_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_71  [key=2, style=dotted];
m18_25 -> m18_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_30  [color=red, key=0, style=solid];
m18_27 -> m18_70  [key=2, style=dotted];
m18_28 -> m18_29  [key=0, style=solid];
m18_29 -> m18_30  [color=red, key=0, style=solid];
m18_29 -> m18_70  [key=2, style=dotted];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_33 -> m18_34  [color=green, key=0, style=solid];
m18_33 -> m18_36  [key=0, style=solid];
m18_35 -> m18_33  [key=0, style=solid];
m18_35 -> m18_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_34 -> m18_35  [color=green, key=0, style=solid];
m18_34 -> m18_69  [color=green, key=2, style=dotted];
m18_34 -> m18_83  [color=green, key=1, label="lambda expression", style=dashed];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_38 -> m18_13  [color=green, key=3, label="Local variable int i", style=bold];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_42  [key=0, style=solid];
m18_41 -> m18_39  [key=0, style=solid];
m18_41 -> m18_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_69  [key=2, style=dotted];
m18_40 -> m18_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_45 -> m18_46  [key=0, style=solid];
m18_45 -> m18_72  [key=2, style=dotted];
m18_45 -> m18_73  [key=2, style=dotted];
m18_45 -> m18_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_69  [key=2, style=dotted];
m18_47 -> m18_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_70  [key=2, style=dotted];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_74  [key=2, style=dotted];
m18_51 -> m18_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_6  [key=0, style=solid];
m18_52 -> m18_70  [key=2, style=dotted];
m18_53 -> m18_54  [key=0, style=solid];
m18_54 -> m18_6  [key=0, style=solid];
m18_54 -> m18_70  [key=2, style=dotted];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_63  [key=2, style=dotted];
m18_57 -> m18_0  [color=blue, key=0, style=bold];
m18_105 -> m18_106  [key=0, style=solid];
m18_76 -> m18_77  [key=0, style=solid];
m18_76 -> m18_78  [key=2, style=dotted];
m18_75 -> m18_76  [key=0, style=solid];
m18_79 -> m18_80  [key=0, style=solid];
m18_83 -> m18_84  [color=green, key=0, style=solid];
m18_87 -> m18_88  [key=0, style=solid];
m18_94 -> m18_95  [key=0, style=solid];
m18_94 -> m18_78  [key=2, style=dotted];
m18_93 -> m18_94  [key=0, style=solid];
m18_96 -> m18_97  [key=0, style=solid];
m18_100 -> m18_101  [key=0, style=solid];
m18_77 -> m18_75  [color=blue, key=0, style=bold];
m18_80 -> m18_81  [key=0, style=solid];
m18_80 -> m18_82  [key=2, style=dotted];
m18_81 -> m18_79  [color=blue, key=0, style=bold];
m18_84 -> m18_85  [color=green, key=0, style=solid];
m18_84 -> m18_86  [color=green, key=2, style=dotted];
m18_85 -> m18_83  [color=blue, key=0, style=bold];
m18_88 -> m18_89  [key=0, style=solid];
m18_88 -> m18_90  [key=2, style=dotted];
m18_88 -> m18_91  [key=2, style=dotted];
m18_88 -> m18_92  [key=2, style=dotted];
m18_89 -> m18_87  [color=blue, key=0, style=bold];
m18_95 -> m18_93  [color=blue, key=0, style=bold];
m18_97 -> m18_98  [key=0, style=solid];
m18_97 -> m18_99  [key=2, style=dotted];
m18_98 -> m18_96  [color=blue, key=0, style=bold];
m18_101 -> m18_102  [key=0, style=solid];
m18_101 -> m18_103  [key=0, style=solid];
m18_102 -> m18_104  [key=0, style=solid];
m18_102 -> m18_69  [key=2, style=dotted];
m18_102 -> m18_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_103 -> m18_104  [key=0, style=solid];
m18_103 -> m18_69  [key=2, style=dotted];
m18_103 -> m18_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_104 -> m18_100  [color=blue, key=0, style=bold];
m18_109 -> m18_110  [key=0, style=solid];
m18_106 -> m18_107  [key=0, style=solid];
m18_106 -> m18_108  [key=2, style=dotted];
m18_107 -> m18_105  [color=blue, key=0, style=bold];
m18_110 -> m18_111  [key=0, style=solid];
m18_110 -> m18_112  [key=2, style=dotted];
m18_111 -> m18_109  [color=blue, key=0, style=bold];
m18_59 -> m18_59  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m18_71 -> m18_13  [color=green, key=3, label="Local variable int i", style=bold];
m18_113 -> m18_76  [color=darkseagreen4, key=1, label=number, style=dashed];
m18_114 -> m18_94  [color=darkseagreen4, key=1, label=number, style=dashed];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=0, style=solid];
m19_5 -> m19_14  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_15 -> m19_16  [key=0, style=solid];
m19_16 -> m19_15  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [color=green, key=0, style=solid];
m19_0 -> m19_2  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m19_0 -> m19_3  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachine", style=dashed];
m19_0 -> m19_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_0 -> m19_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_0 -> m19_8  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m19_0 -> m19_9  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_0 -> m19_10  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m19_0 -> m19_11  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachine", style=dashed];
m19_1 -> m19_2  [color=green, key=0, style=solid];
m19_1 -> m19_5  [color=green, key=2, style=dotted];
m19_1 -> m19_3  [key=0, style=solid];
m19_2 -> m19_3  [color=green, key=0, style=solid];
m19_2 -> m19_6  [color=green, key=2, style=dotted];
m19_2 -> m19_12  [key=0, style=solid];
m19_2 -> m19_13  [key=2, style=dotted];
m19_3 -> m19_4  [color=green, key=0, style=solid];
m19_3 -> m19_7  [color=green, key=2, style=dotted];
m19_3 -> m19_5  [key=0, style=solid];
m19_4 -> m19_0  [color=blue, key=0, style=bold];
m19_4 -> m19_12  [key=0, style=solid];
m19_4 -> m19_13  [key=2, style=dotted];
m19_6 -> m19_12  [key=0, style=solid];
m19_6 -> m19_13  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_11 -> m19_12  [key=0, style=solid];
m19_12 -> m19_0  [color=blue, key=0, style=bold];
m19_17 -> m19_7  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m19_17 -> m19_8  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m19_17 -> m19_9  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m19_17 -> m19_10  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m19_17 -> m19_11  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m20_3 -> m20_9  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m20_3 -> m20_10  [color=green, key=1, label=IRedisClient, style=dashed];
m20_3 -> m20_3  [color=darkorchid, key=3, label="method methodReturn HangFire.States.JobState OnStateChanged", style=bold];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_6  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m20_3 -> m20_8  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m20_3 -> m20_15  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m20_9 -> m20_16  [color=green, key=0, style=solid];
m20_8 -> m20_9  [color=green, key=0, style=solid];
m20_8 -> m20_10  [color=green, key=0, style=solid];
m20_10 -> m20_11  [color=green, key=0, style=solid];
m20_10 -> m20_18  [color=green, key=2, style=dotted];
m20_10 -> m20_19  [color=green, key=2, style=dotted];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_20  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_6  [key=0, style=solid];
m20_6 -> m20_8  [key=0, style=solid];
m20_6 -> m20_7  [key=0, style=solid];
m20_15 -> m20_16  [key=0, style=solid];
m20_5 -> m20_16  [key=0, style=solid];
m20_5 -> m20_17  [key=2, style=dotted];
m20_5 -> m20_6  [key=0, style=solid];
m20_7 -> m20_16  [key=0, style=solid];
m20_7 -> m20_17  [key=2, style=dotted];
m20_7 -> m20_5  [color=blue, key=0, style=bold];
m20_14 -> m20_16  [key=0, style=solid];
m20_14 -> m20_24  [key=2, style=dotted];
m20_14 -> m20_25  [key=2, style=dotted];
m20_12 -> m20_14  [color=darkseagreen4, key=1, label=recurringAttribute, style=dashed];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_21  [key=2, style=dotted];
m20_12 -> m20_22  [key=2, style=dotted];
m20_12 -> m20_23  [key=2, style=dotted];
m20_13 -> m20_15  [key=0, style=solid];
m20_13 -> m20_14  [key=0, style=solid];
m20_16 -> m20_3  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=2, style=dotted];
m20_1 -> m20_4  [key=2, style=dotted];
m20_2 -> m20_0  [color=blue, key=0, style=bold];
m21_25 -> m21_26  [key=0, style=solid];
m21_61 -> m21_62  [color=green, key=0, style=solid];
m21_61 -> m21_65  [color=green, key=1, label=string, style=dashed];
m21_62 -> m21_63  [color=green, key=0, style=solid];
m21_62 -> m21_38  [color=red, key=2, style=dotted];
m21_62 -> m21_24  [color=green, key=2, style=dotted];
m21_62 -> m21_64  [color=green, key=1, label="lambda expression", style=dashed];
m21_63 -> m21_64  [color=red, key=0, style=solid];
m21_63 -> m21_22  [color=red, key=2, style=dotted];
m21_63 -> m21_61  [color=blue, key=0, style=bold];
m21_64 -> m21_65  [color=green, key=0, style=solid];
m21_64 -> m21_39  [color=red, key=2, style=dotted];
m21_65 -> m21_66  [color=green, key=0, style=solid];
m21_65 -> m21_40  [key=2, style=dotted];
m21_65 -> m21_29  [color=green, key=2, style=dotted];
m21_66 -> m21_67  [color=red, key=0, style=solid];
m21_66 -> m21_41  [color=red, key=2, style=dotted];
m21_66 -> m21_64  [color=blue, key=0, style=bold];
m21_67 -> m21_68  [key=0, style=solid];
m21_67 -> m21_70  [key=2, style=dotted];
m21_67 -> m21_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_68 -> m21_69  [key=0, style=solid];
m21_68 -> m21_26  [key=2, style=dotted];
m21_68 -> m21_24  [key=2, style=dotted];
m21_68 -> m21_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_69 -> m21_61  [color=blue, key=0, style=bold];
m21_69 -> m21_67  [color=blue, key=0, style=bold];
m21_85 -> m21_86  [key=0, style=solid];
m21_85 -> m21_40  [key=2, style=dotted];
m21_86 -> m21_88  [key=2, style=dotted];
m21_86 -> m21_87  [key=0, style=solid];
m21_86 -> m21_41  [key=2, style=dotted];
m21_87 -> m21_85  [color=blue, key=0, style=bold];
m21_87 -> m21_88  [key=0, style=solid];
m21_87 -> m21_26  [key=2, style=dotted];
m21_21 -> m21_22  [key=0, style=solid];
m21_21 -> m21_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_101 -> m21_102  [key=0, style=solid];
m21_101 -> m21_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_102 -> m21_24  [key=2, style=dotted];
m21_102 -> m21_103  [key=0, style=solid];
m21_102 -> m21_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_103 -> m21_101  [color=blue, key=0, style=bold];
m21_88 -> m21_89  [color=green, key=0, style=solid];
m21_88 -> m21_90  [color=green, key=1, label=string, style=dashed];
m21_88 -> m21_93  [color=green, key=1, label=string, style=dashed];
m21_88 -> m21_81  [color=blue, key=0, style=bold];
m21_89 -> m21_90  [color=green, key=0, style=solid];
m21_89 -> m21_93  [color=green, key=1, label=addSql, style=dashed];
m21_89 -> m21_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_36  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_44  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_49  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_54  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_59  [color=red, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_63  [color=red, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_68  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_73  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_79  [color=red, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_83  [color=red, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_89 -> m21_87  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobManagerFeature", style=dashed];
m21_90 -> m21_91  [color=green, key=0, style=solid];
m21_90 -> m21_24  [color=green, key=2, style=dotted];
m21_90 -> m21_92  [color=green, key=1, label="lambda expression", style=dashed];
m21_91 -> m21_88  [color=blue, key=0, style=bold];
m21_51 -> m21_52  [color=green, key=0, style=solid];
m21_70 -> m21_71  [key=0, style=solid];
m21_9 -> m21_10  [color=green, key=0, style=solid];
m21_9 -> m21_16  [color=green, key=2, style=dotted];
m21_9 -> m21_17  [color=green, key=2, style=dotted];
m21_9 -> m21_13  [color=green, key=1, label=transaction, style=dashed];
m21_10 -> m21_11  [color=green, key=0, style=solid];
m21_10 -> m21_13  [color=red, key=2, style=dotted];
m21_10 -> m21_18  [color=green, key=2, style=dotted];
m21_11 -> m21_12  [color=red, key=0, style=solid];
m21_11 -> m21_13  [key=0, style=solid];
m21_12 -> m21_9  [color=blue, key=0, style=bold];
m21_12 -> m21_11  [key=0, style=solid];
m21_12 -> m21_19  [key=2, style=dotted];
m21_81 -> m21_82  [color=red, key=0, style=solid];
m21_81 -> m21_79  [color=blue, key=0, style=bold];
m21_82 -> m21_83  [color=green, key=0, style=solid];
m21_82 -> m21_38  [color=red, key=2, style=dotted];
m21_83 -> m21_84  [color=green, key=0, style=solid];
m21_83 -> m21_22  [color=red, key=2, style=dotted];
m21_83 -> m21_28  [color=green, key=2, style=dotted];
m21_83 -> m21_29  [color=green, key=2, style=dotted];
m21_84 -> m21_85  [key=0, style=solid];
m21_84 -> m21_39  [key=2, style=dotted];
m21_84 -> m21_82  [color=blue, key=0, style=bold];
m21_36 -> m21_37  [key=0, style=solid];
m21_36 -> m21_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_36 -> m21_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_36 -> m21_26  [key=2, style=dotted];
m21_38 -> m21_39  [color=green, key=0, style=solid];
m21_38 -> m21_43  [color=green, key=1, label=addAndSetStateSql, style=dashed];
m21_37 -> m21_38  [color=green, key=0, style=solid];
m21_37 -> m21_41  [key=2, style=dotted];
m21_37 -> m21_39  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m21_37 -> m21_43  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m21_37 -> m21_30  [color=blue, key=0, style=bold];
m21_39 -> m21_24  [key=2, style=dotted];
m21_39 -> m21_40  [key=0, style=solid];
m21_39 -> m21_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_40 -> m21_36  [color=blue, key=0, style=bold];
m21_113 -> m21_114  [color=green, key=0, style=solid];
m21_113 -> m21_115  [color=green, key=1, label=int, style=dashed];
m21_113 -> m21_118  [color=green, key=1, label=int, style=dashed];
m21_114 -> m21_115  [color=green, key=0, style=solid];
m21_114 -> m21_118  [color=green, key=1, label=trimSql, style=dashed];
m21_115 -> m21_116  [color=green, key=0, style=solid];
m21_115 -> m21_24  [color=green, key=2, style=dotted];
m21_115 -> m21_117  [color=green, key=1, label="lambda expression", style=dashed];
m21_116 -> m21_113  [color=blue, key=0, style=bold];
m21_24 -> m21_146  [key=0, style=solid];
m21_24 -> m21_22  [color=blue, key=0, style=bold];
m21_146 -> m21_147  [key=0, style=solid];
m21_146 -> m21_148  [key=2, style=dotted];
m21_147 -> m21_24  [color=blue, key=0, style=bold];
m21_52 -> m21_53  [color=green, key=0, style=solid];
m21_52 -> m21_45  [color=green, key=2, style=dotted];
m21_52 -> m21_29  [color=green, key=2, style=dotted];
m21_53 -> m21_54  [key=0, style=solid];
m21_53 -> m21_38  [key=2, style=dotted];
m21_53 -> m21_51  [color=blue, key=0, style=bold];
m21_54 -> m21_55  [color=green, key=0, style=solid];
m21_54 -> m21_22  [key=2, style=dotted];
m21_54 -> m21_56  [color=green, key=1, label=string, style=dashed];
m21_54 -> m21_59  [color=green, key=1, label=string, style=dashed];
m21_55 -> m21_56  [color=green, key=0, style=solid];
m21_55 -> m21_39  [color=red, key=2, style=dotted];
m21_55 -> m21_59  [color=green, key=1, label=enqueueJobSql, style=dashed];
m21_56 -> m21_57  [color=green, key=0, style=solid];
m21_56 -> m21_40  [color=red, key=2, style=dotted];
m21_56 -> m21_24  [color=green, key=2, style=dotted];
m21_56 -> m21_58  [color=green, key=1, label="lambda expression", style=dashed];
m21_57 -> m21_58  [color=red, key=0, style=solid];
m21_57 -> m21_41  [color=red, key=2, style=dotted];
m21_57 -> m21_54  [color=blue, key=0, style=bold];
m21_58 -> m21_59  [color=green, key=0, style=solid];
m21_58 -> m21_51  [color=red, key=2, style=dotted];
m21_59 -> m21_60  [color=green, key=0, style=solid];
m21_59 -> m21_26  [color=red, key=2, style=dotted];
m21_59 -> m21_29  [color=green, key=2, style=dotted];
m21_60 -> m21_52  [color=blue, key=0, style=bold];
m21_60 -> m21_58  [color=blue, key=0, style=bold];
m21_18 -> m21_19  [color=red, key=0, style=solid];
m21_0 -> m21_1  [color=red, key=0, style=solid];
m21_0 -> m21_3  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_1 -> m21_2  [color=red, key=0, style=solid];
m21_1 -> m21_5  [color=red, key=2, style=dotted];
m21_1 -> m21_3  [key=0, style=solid];
m21_2 -> m21_3  [color=red, key=0, style=solid];
m21_2 -> m21_6  [color=red, key=2, style=dotted];
m21_2 -> m21_7  [color=red, key=2, style=dotted];
m21_2 -> m21_4  [key=0, style=solid];
m21_2 -> m21_5  [key=2, style=dotted];
m21_3 -> m21_4  [color=red, key=0, style=solid];
m21_3 -> m21_8  [color=red, key=2, style=dotted];
m21_4 -> m21_0  [color=blue, key=0, style=bold];
m21_16 -> m21_17  [color=red, key=0, style=solid];
m21_16 -> m21_0  [color=red, key=2, style=dotted];
m21_79 -> m21_80  [color=red, key=0, style=solid];
m21_79 -> m21_83  [color=green, key=1, label=string, style=dashed];
m21_79 -> m21_26  [color=red, key=2, style=dotted];
m21_80 -> m21_81  [color=green, key=0, style=solid];
m21_80 -> m21_24  [color=green, key=2, style=dotted];
m21_80 -> m21_82  [color=green, key=1, label="lambda expression", style=dashed];
m21_80 -> m21_71  [color=blue, key=0, style=bold];
m21_73 -> m21_74  [color=red, key=0, style=solid];
m21_73 -> m21_77  [color=green, key=1, label=string, style=dashed];
m21_73 -> m21_22  [key=2, style=dotted];
m21_74 -> m21_75  [color=red, key=0, style=solid];
m21_74 -> m21_24  [color=green, key=2, style=dotted];
m21_74 -> m21_76  [color=green, key=1, label="lambda expression", style=dashed];
m21_74 -> m21_39  [color=red, key=2, style=dotted];
m21_75 -> m21_73  [color=blue, key=0, style=bold];
m21_75 -> m21_76  [color=red, key=0, style=solid];
m21_75 -> m21_51  [key=2, style=dotted];
m21_19 -> m21_20  [color=red, key=0, style=solid];
m21_19 -> m21_21  [color=red, key=2, style=dotted];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_20  [key=2, style=dotted];
m21_28 -> m21_26  [color=blue, key=0, style=bold];
m21_20 -> m21_18  [color=blue, key=0, style=bold];
m21_95 -> m21_96  [key=0, style=solid];
m21_95 -> m21_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_96 -> m21_24  [key=2, style=dotted];
m21_96 -> m21_97  [key=0, style=solid];
m21_96 -> m21_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_97 -> m21_95  [color=blue, key=0, style=bold];
m21_22 -> m21_24  [key=2, style=dotted];
m21_22 -> m21_23  [color=red, key=0, style=solid];
m21_22 -> m21_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_23 -> m21_21  [color=blue, key=0, style=bold];
m21_23 -> m21_24  [color=red, key=0, style=solid];
m21_23 -> m21_25  [color=red, key=2, style=dotted];
m21_107 -> m21_108  [color=green, key=0, style=solid];
m21_107 -> m21_111  [color=green, key=1, label=string, style=dashed];
m21_108 -> m21_109  [color=green, key=0, style=solid];
m21_108 -> m21_24  [color=green, key=2, style=dotted];
m21_108 -> m21_110  [color=green, key=1, label="lambda expression", style=dashed];
m21_109 -> m21_107  [color=blue, key=0, style=bold];
m21_8 -> m21_9  [color=green, key=0, style=solid];
m21_14 -> m21_15  [color=red, key=0, style=solid];
m21_15 -> m21_8  [color=blue, key=0, style=bold];
m21_15 -> m21_16  [color=red, key=0, style=solid];
m21_15 -> m21_17  [color=red, key=0, style=solid];
m21_17 -> m21_14  [color=blue, key=0, style=bold];
m21_140 -> m21_141  [key=0, style=solid];
m21_140 -> m21_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_141 -> m21_24  [key=2, style=dotted];
m21_141 -> m21_142  [key=0, style=solid];
m21_141 -> m21_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_142 -> m21_140  [color=blue, key=0, style=bold];
m21_143 -> m21_144  [key=0, style=solid];
m21_33 -> m21_34  [color=red, key=0, style=solid];
m21_33 -> m21_39  [color=red, key=2, style=dotted];
m21_34 -> m21_35  [color=green, key=0, style=solid];
m21_34 -> m21_29  [color=green, key=2, style=dotted];
m21_34 -> m21_40  [key=2, style=dotted];
m21_35 -> m21_33  [color=blue, key=0, style=bold];
m21_35 -> m21_36  [key=0, style=solid];
m21_35 -> m21_41  [key=2, style=dotted];
m21_43 -> m21_29  [key=2, style=dotted];
m21_43 -> m21_44  [key=0, style=solid];
m21_43 -> m21_45  [key=2, style=dotted];
m21_43 -> m21_38  [key=2, style=dotted];
m21_76 -> m21_77  [color=red, key=0, style=solid];
m21_76 -> m21_40  [color=red, key=2, style=dotted];
m21_77 -> m21_78  [color=red, key=0, style=solid];
m21_77 -> m21_29  [color=green, key=2, style=dotted];
m21_77 -> m21_41  [color=red, key=2, style=dotted];
m21_78 -> m21_76  [color=blue, key=0, style=bold];
m21_78 -> m21_79  [color=red, key=0, style=solid];
m21_78 -> m21_70  [color=red, key=2, style=dotted];
m21_93 -> m21_94  [color=green, key=0, style=solid];
m21_93 -> m21_29  [color=green, key=2, style=dotted];
m21_92 -> m21_93  [color=green, key=0, style=solid];
m21_94 -> m21_92  [color=blue, key=0, style=bold];
m21_110 -> m21_111  [color=green, key=0, style=solid];
m21_111 -> m21_112  [color=green, key=0, style=solid];
m21_111 -> m21_29  [color=green, key=2, style=dotted];
m21_112 -> m21_110  [color=blue, key=0, style=bold];
m21_118 -> m21_119  [color=green, key=0, style=solid];
m21_118 -> m21_29  [color=green, key=2, style=dotted];
m21_117 -> m21_118  [color=green, key=0, style=solid];
m21_119 -> m21_117  [color=blue, key=0, style=bold];
m21_128 -> m21_29  [key=2, style=dotted];
m21_128 -> m21_129  [key=0, style=solid];
m21_125 -> m21_126  [color=green, key=0, style=solid];
m21_125 -> m21_128  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_126 -> m21_127  [color=green, key=0, style=solid];
m21_126 -> m21_29  [color=green, key=2, style=dotted];
m21_127 -> m21_128  [color=green, key=0, style=solid];
m21_127 -> m21_129  [color=green, key=0, style=solid];
m21_129 -> m21_125  [color=blue, key=0, style=bold];
m21_138 -> m21_139  [color=green, key=0, style=solid];
m21_138 -> m21_29  [color=green, key=2, style=dotted];
m21_135 -> m21_136  [color=green, key=0, style=solid];
m21_135 -> m21_138  [color=green, key=1, label=SqlConnection, style=dashed];
m21_136 -> m21_137  [color=green, key=0, style=solid];
m21_136 -> m21_29  [color=green, key=2, style=dotted];
m21_137 -> m21_138  [color=green, key=0, style=solid];
m21_137 -> m21_139  [color=green, key=0, style=solid];
m21_139 -> m21_135  [color=blue, key=0, style=bold];
m21_26 -> m21_29  [key=2, style=dotted];
m21_26 -> m21_28  [key=2, style=dotted];
m21_26 -> m21_27  [color=red, key=0, style=solid];
m21_71 -> m21_29  [key=2, style=dotted];
m21_71 -> m21_28  [key=2, style=dotted];
m21_71 -> m21_72  [color=red, key=0, style=solid];
m21_99 -> m21_29  [key=2, style=dotted];
m21_99 -> m21_100  [key=0, style=solid];
m21_105 -> m21_29  [key=2, style=dotted];
m21_105 -> m21_106  [key=0, style=solid];
m21_144 -> m21_29  [key=2, style=dotted];
m21_144 -> m21_28  [key=2, style=dotted];
m21_144 -> m21_145  [key=0, style=solid];
m21_42 -> m21_43  [key=0, style=solid];
m21_44 -> m21_42  [color=blue, key=0, style=bold];
m21_44 -> m21_45  [color=red, key=0, style=solid];
m21_44 -> m21_22  [key=2, style=dotted];
m21_98 -> m21_99  [key=0, style=solid];
m21_104 -> m21_105  [key=0, style=solid];
m21_27 -> m21_25  [color=blue, key=0, style=bold];
m21_27 -> m21_28  [color=red, key=0, style=solid];
m21_27 -> m21_29  [color=red, key=2, style=dotted];
m21_72 -> m21_70  [color=blue, key=0, style=bold];
m21_72 -> m21_73  [color=red, key=0, style=solid];
m21_72 -> m21_38  [color=red, key=2, style=dotted];
m21_100 -> m21_98  [color=blue, key=0, style=bold];
m21_106 -> m21_104  [color=blue, key=0, style=bold];
m21_145 -> m21_143  [color=blue, key=0, style=bold];
m21_130 -> m21_131  [color=green, key=0, style=solid];
m21_130 -> m21_133  [color=green, key=1, label=string, style=dashed];
m21_130 -> m21_136  [color=green, key=1, label=string, style=dashed];
m21_130 -> m21_138  [color=green, key=1, label=string, style=dashed];
m21_131 -> m21_132  [color=green, key=0, style=solid];
m21_131 -> m21_133  [color=green, key=1, label=insertSql, style=dashed];
m21_131 -> m21_138  [color=green, key=1, label=insertSql, style=dashed];
m21_132 -> m21_133  [color=green, key=0, style=solid];
m21_132 -> m21_136  [color=green, key=1, label=updateSql, style=dashed];
m21_132 -> m21_138  [color=green, key=1, label=updateSql, style=dashed];
m21_133 -> m21_134  [color=green, key=0, style=solid];
m21_133 -> m21_24  [color=green, key=2, style=dotted];
m21_133 -> m21_135  [color=green, key=1, label="lambda expression", style=dashed];
m21_134 -> m21_130  [color=blue, key=0, style=bold];
m21_30 -> m21_31  [color=green, key=0, style=solid];
m21_30 -> m21_34  [color=green, key=1, label=string, style=dashed];
m21_31 -> m21_32  [color=green, key=0, style=solid];
m21_31 -> m21_38  [key=2, style=dotted];
m21_31 -> m21_24  [color=green, key=2, style=dotted];
m21_31 -> m21_33  [color=green, key=1, label="lambda expression", style=dashed];
m21_32 -> m21_33  [color=red, key=0, style=solid];
m21_32 -> m21_22  [key=2, style=dotted];
m21_32 -> m21_30  [color=blue, key=0, style=bold];
m21_45 -> m21_46  [color=red, key=0, style=solid];
m21_45 -> m21_39  [color=red, key=2, style=dotted];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_40  [key=2, style=dotted];
m21_46 -> m21_49  [color=green, key=1, label=string, style=dashed];
m21_46 -> m21_52  [color=green, key=1, label=string, style=dashed];
m21_47 -> m21_48  [color=green, key=0, style=solid];
m21_47 -> m21_41  [key=2, style=dotted];
m21_47 -> m21_49  [color=green, key=1, label=stateData, style=dashed];
m21_47 -> m21_52  [color=green, key=1, label=stateData, style=dashed];
m21_48 -> m21_49  [color=green, key=0, style=solid];
m21_48 -> m21_51  [key=2, style=dotted];
m21_48 -> m21_52  [color=green, key=1, label=addStateSql, style=dashed];
m21_49 -> m21_50  [color=green, key=0, style=solid];
m21_49 -> m21_26  [key=2, style=dotted];
m21_49 -> m21_24  [color=green, key=2, style=dotted];
m21_49 -> m21_51  [color=green, key=1, label="lambda expression", style=dashed];
m21_50 -> m21_42  [color=blue, key=0, style=bold];
m21_50 -> m21_46  [color=blue, key=0, style=bold];
m21_120 -> m21_121  [color=green, key=0, style=solid];
m21_120 -> m21_123  [color=green, key=1, label=string, style=dashed];
m21_120 -> m21_126  [color=green, key=1, label=string, style=dashed];
m21_120 -> m21_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_121 -> m21_122  [color=green, key=0, style=solid];
m21_121 -> m21_123  [color=green, key=1, label=insertSql, style=dashed];
m21_121 -> m21_128  [color=green, key=1, label=insertSql, style=dashed];
m21_122 -> m21_123  [color=green, key=0, style=solid];
m21_122 -> m21_126  [color=green, key=1, label=updateSql, style=dashed];
m21_122 -> m21_128  [color=green, key=1, label=updateSql, style=dashed];
m21_123 -> m21_124  [color=green, key=0, style=solid];
m21_123 -> m21_24  [color=green, key=2, style=dotted];
m21_123 -> m21_125  [color=green, key=1, label="lambda expression", style=dashed];
m21_124 -> m21_120  [color=blue, key=0, style=bold];
m21_149 -> m21_10  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_31  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_49  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_56  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_62  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_74  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_80  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_90  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_108  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_115  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_123  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_133  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_22  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_39  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_68  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_86  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_96  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_102  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_141  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_149 -> m21_146  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_152 -> m21_34  [color=green, key=1, label=string, style=dashed];
m21_157 -> m21_52  [color=green, key=1, label=string, style=dashed];
m21_158 -> m21_52  [color=green, key=1, label="HangFire.Common.States.JobState", style=dashed];
m21_159 -> m21_52  [color=green, key=1, label=stateData, style=dashed];
m21_160 -> m21_52  [color=green, key=1, label=addStateSql, style=dashed];
m21_161 -> m21_59  [color=green, key=1, label=string, style=dashed];
m21_162 -> m21_59  [color=green, key=1, label=string, style=dashed];
m21_163 -> m21_59  [color=green, key=1, label=enqueueJobSql, style=dashed];
m21_164 -> m21_65  [color=green, key=1, label=string, style=dashed];
m21_167 -> m21_77  [color=green, key=1, label=string, style=dashed];
m21_168 -> m21_83  [color=green, key=1, label=string, style=dashed];
m21_169 -> m21_83  [color=green, key=1, label="System.TimeSpan", style=dashed];
m21_170 -> m21_93  [color=green, key=1, label=string, style=dashed];
m21_171 -> m21_93  [color=green, key=1, label=string, style=dashed];
m21_172 -> m21_93  [color=green, key=1, label=double, style=dashed];
m21_173 -> m21_93  [color=green, key=1, label=addSql, style=dashed];
m21_178 -> m21_111  [color=green, key=1, label=string, style=dashed];
m21_179 -> m21_111  [color=green, key=1, label=string, style=dashed];
m21_180 -> m21_118  [color=green, key=1, label=int, style=dashed];
m21_181 -> m21_118  [color=green, key=1, label=int, style=dashed];
m21_182 -> m21_118  [color=green, key=1, label=trimSql, style=dashed];
m21_183 -> m21_126  [color=green, key=1, label=string, style=dashed];
m21_183 -> m21_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_184 -> m21_126  [color=green, key=1, label=updateSql, style=dashed];
m21_184 -> m21_128  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m21_186 -> m21_136  [color=green, key=1, label=string, style=dashed];
m21_186 -> m21_138  [color=green, key=1, label=string, style=dashed];
m21_187 -> m21_136  [color=green, key=1, label=updateSql, style=dashed];
m21_187 -> m21_138  [color=green, key=1, label=updateSql, style=dashed];
m21_188 -> m21_138  [color=green, key=1, label=insertSql, style=dashed];
m21_153 -> m21_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_154 -> m21_43  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m21_155 -> m21_43  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m21_156 -> m21_43  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m21_185 -> m21_128  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m21_150 -> m21_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_151 -> m21_26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m21_165 -> m21_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_166 -> m21_71  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m21_174 -> m21_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_175 -> m21_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_176 -> m21_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_177 -> m21_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_189 -> m21_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_190 -> m21_144  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_32  [key=0, style=solid];
m22_20 -> m22_29  [color=green, key=0, style=solid];
m22_20 -> m22_30  [color=green, key=2, style=dotted];
m22_28 -> m22_29  [color=green, key=0, style=solid];
m22_53 -> m22_82  [key=0, style=solid];
m22_53 -> m22_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_82 -> m22_69  [key=2, style=dotted];
m22_82 -> m22_83  [key=0, style=solid];
m22_82 -> m22_84  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m22_83 -> m22_84  [key=0, style=solid];
m22_83 -> m22_74  [key=2, style=dotted];
m22_84 -> m22_77  [key=2, style=dotted];
m22_84 -> m22_85  [key=0, style=solid];
m22_85 -> m22_53  [color=blue, key=0, style=bold];
m22_25 -> m22_26  [color=green, key=0, style=solid];
m22_31 -> m22_45  [color=green, key=1, label=string, style=dashed];
m22_31 -> m22_32  [key=0, style=solid];
m22_31 -> m22_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_31 -> m22_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_31 -> m22_38  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m22_31 -> m22_41  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m22_31 -> m22_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_31 -> m22_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_45 -> m22_46  [color=green, key=0, style=solid];
m22_45 -> m22_54  [color=green, key=2, style=dotted];
m22_35 -> m22_45  [color=green, key=1, label=currentState, style=dashed];
m22_35 -> m22_36  [color=red, key=0, style=solid];
m22_35 -> m22_47  [key=2, style=dotted];
m22_35 -> m22_50  [key=2, style=dotted];
m22_35 -> m22_38  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m22_35 -> m22_22  [color=red, key=2, style=dotted];
m22_42 -> m22_45  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_52  [key=2, style=dotted];
m22_42 -> m22_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m22_42 -> m22_6  [color=red, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m22_42 -> m22_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m22_42 -> m22_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m22_42 -> m22_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m22_42 -> m22_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m22_42 -> m22_34  [color=red, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m22_42 -> m22_37  [color=red, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m22_42 -> m22_40  [color=red, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m22_40 -> m22_45  [color=green, key=0, style=solid];
m22_40 -> m22_42  [color=darkseagreen4, key=1, label=filter, style=dashed];
m22_40 -> m22_41  [color=red, key=0, style=solid];
m22_40 -> m22_25  [color=red, key=2, style=dotted];
m22_40 -> m22_27  [color=red, key=2, style=dotted];
m22_34 -> m22_35  [color=red, key=0, style=solid];
m22_34 -> m22_47  [key=2, style=dotted];
m22_34 -> m22_48  [key=2, style=dotted];
m22_34 -> m22_49  [key=2, style=dotted];
m22_34 -> m22_22  [color=red, key=2, style=dotted];
m22_44 -> m22_40  [key=0, style=solid];
m22_44 -> m22_53  [key=2, style=dotted];
m22_33 -> m22_30  [key=2, style=dotted];
m22_33 -> m22_46  [key=0, style=solid];
m22_33 -> m22_34  [color=red, key=0, style=solid];
m22_33 -> m22_21  [color=red, key=2, style=dotted];
m22_33 -> m22_35  [color=red, key=1, label=parameters, style=dashed];
m22_33 -> m22_36  [color=red, key=1, label=parameters, style=dashed];
m22_33 -> m22_37  [color=red, key=1, label=parameters, style=dashed];
m22_33 -> m22_38  [color=red, key=1, label=parameters, style=dashed];
m22_32 -> m22_34  [key=0, style=solid];
m22_32 -> m22_33  [color=red, key=0, style=solid];
m22_38 -> m22_40  [key=0, style=solid];
m22_38 -> m22_39  [color=red, key=0, style=solid];
m22_38 -> m22_51  [key=2, style=dotted];
m22_38 -> m22_24  [color=red, key=2, style=dotted];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_44  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m22_41 -> m22_43  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m22_41 -> m22_29  [color=blue, key=0, style=bold];
m22_36 -> m22_38  [key=0, style=solid];
m22_36 -> m22_37  [color=red, key=0, style=solid];
m22_36 -> m22_22  [color=red, key=2, style=dotted];
m22_43 -> m22_40  [key=0, style=solid];
m22_43 -> m22_44  [key=0, style=solid];
m22_37 -> m22_46  [key=0, style=solid];
m22_37 -> m22_38  [color=red, key=0, style=solid];
m22_37 -> m22_23  [color=red, key=2, style=dotted];
m22_39 -> m22_46  [key=0, style=solid];
m22_39 -> m22_40  [color=red, key=0, style=solid];
m22_39 -> m22_41  [color=red, key=0, style=solid];
m22_46 -> m22_31  [color=blue, key=0, style=bold];
m22_26 -> m22_27  [color=green, key=0, style=solid];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_3  [color=red, key=1, label=IDbConnection, style=dashed];
m22_0 -> m22_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_0 -> m22_6  [color=red, key=1, label=IDbConnection, style=dashed];
m22_0 -> m22_12  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m22_0 -> m22_14  [color=red, key=1, label=IDbConnection, style=dashed];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_3  [color=red, key=0, style=solid];
m22_1 -> m22_19  [key=2, style=dotted];
m22_3 -> m22_4  [color=red, key=0, style=solid];
m22_3 -> m22_5  [color=red, key=0, style=solid];
m22_5 -> m22_6  [color=red, key=0, style=solid];
m22_6 -> m22_7  [color=red, key=0, style=solid];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_22  [key=2, style=dotted];
m22_12 -> m22_12  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m22_14 -> m22_15  [color=red, key=0, style=solid];
m22_14 -> m22_23  [color=red, key=2, style=dotted];
m22_2 -> m22_18  [key=0, style=solid];
m22_2 -> m22_20  [key=2, style=dotted];
m22_4 -> m22_18  [color=red, key=0, style=solid];
m22_4 -> m22_20  [color=red, key=2, style=dotted];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_21  [key=2, style=dotted];
m22_7 -> m22_9  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m22_7 -> m22_10  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m22_7 -> m22_11  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m22_7 -> m22_12  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m22_7 -> m22_13  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m22_7 -> m22_14  [color=red, key=1, label=parameters, style=dashed];
m22_7 -> m22_15  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_22  [key=2, style=dotted];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_22  [key=2, style=dotted];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_22  [key=2, style=dotted];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_22  [key=2, style=dotted];
m22_13 -> m22_14  [color=red, key=0, style=solid];
m22_13 -> m22_22  [key=2, style=dotted];
m22_15 -> m22_16  [key=0, style=solid];
m22_15 -> m22_24  [key=2, style=dotted];
m22_15 -> m22_17  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m22_16 -> m22_17  [color=green, key=0, style=solid];
m22_16 -> m22_18  [key=0, style=solid];
m22_16 -> m22_19  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>", style=dashed];
m22_16 -> m22_23  [color=green, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>", style=dashed];
m22_16 -> m22_26  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>", style=dashed];
m22_16 -> m22_28  [color=green, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>", style=dashed];
m22_16 -> m22_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>", style=dashed];
m22_16 -> m22_25  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m22_16 -> m22_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>", style=dashed];
m22_17 -> m22_18  [color=green, key=0, style=solid];
m22_17 -> m22_25  [key=2, style=dotted];
m22_17 -> m22_26  [key=2, style=dotted];
m22_17 -> m22_27  [key=2, style=dotted];
m22_17 -> m22_28  [key=2, style=dotted];
m22_17 -> m22_19  [color=green, key=0, style=solid];
m22_18 -> m22_0  [color=blue, key=0, style=bold];
m22_18 -> m22_29  [color=green, key=0, style=solid];
m22_18 -> m22_30  [color=green, key=2, style=dotted];
m22_60 -> m22_61  [color=green, key=0, style=solid];
m22_60 -> m22_72  [color=green, key=2, style=dotted];
m22_60 -> m22_78  [color=green, key=1, label="lambda expression", style=dashed];
m22_56 -> m22_57  [color=green, key=0, style=solid];
m22_56 -> m22_69  [color=green, key=2, style=dotted];
m22_56 -> m22_59  [color=green, key=1, label=transaction, style=dashed];
m22_56 -> m22_60  [color=green, key=1, label=transaction, style=dashed];
m22_56 -> m22_62  [color=green, key=1, label=transaction, style=dashed];
m22_56 -> m22_63  [color=green, key=1, label=transaction, style=dashed];
m22_56 -> m22_64  [color=green, key=1, label=transaction, style=dashed];
m22_56 -> m22_66  [color=green, key=1, label=transaction, style=dashed];
m22_56 -> m22_67  [color=green, key=1, label=transaction, style=dashed];
m22_55 -> m22_56  [color=green, key=0, style=solid];
m22_55 -> m22_57  [color=green, key=1, label=string, style=dashed];
m22_55 -> m22_58  [color=green, key=1, label=string, style=dashed];
m22_55 -> m22_59  [color=green, key=1, label=string, style=dashed];
m22_55 -> m22_60  [color=green, key=1, label=string, style=dashed];
m22_55 -> m22_79  [color=green, key=1, label=string, style=dashed];
m22_55 -> m22_62  [color=green, key=1, label=string, style=dashed];
m22_55 -> m22_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_55 -> m22_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_55 -> m22_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_57 -> m22_58  [color=green, key=0, style=solid];
m22_57 -> m22_63  [color=green, key=0, style=solid];
m22_59 -> m22_60  [color=green, key=0, style=solid];
m22_59 -> m22_71  [color=green, key=2, style=dotted];
m22_62 -> m22_61  [color=green, key=0, style=solid];
m22_62 -> m22_73  [color=green, key=2, style=dotted];
m22_63 -> m22_64  [key=0, style=solid];
m22_63 -> m22_74  [key=2, style=dotted];
m22_64 -> m22_65  [key=0, style=solid];
m22_64 -> m22_75  [key=2, style=dotted];
m22_66 -> m22_65  [key=0, style=solid];
m22_66 -> m22_76  [key=2, style=dotted];
m22_67 -> m22_68  [key=0, style=solid];
m22_67 -> m22_77  [key=2, style=dotted];
m22_58 -> m22_59  [color=green, key=0, style=solid];
m22_58 -> m22_60  [color=green, key=0, style=solid];
m22_58 -> m22_70  [color=green, key=2, style=dotted];
m22_61 -> m22_62  [color=green, key=0, style=solid];
m22_61 -> m22_63  [color=green, key=0, style=solid];
m22_65 -> m22_66  [key=0, style=solid];
m22_65 -> m22_67  [key=0, style=solid];
m22_68 -> m22_55  [color=blue, key=0, style=bold];
m22_24 -> m22_29  [color=green, key=0, style=solid];
m22_24 -> m22_30  [color=green, key=2, style=dotted];
m22_19 -> m22_20  [color=green, key=0, style=solid];
m22_19 -> m22_21  [color=green, key=0, style=solid];
m22_21 -> m22_23  [color=green, key=0, style=solid];
m22_21 -> m22_22  [key=0, style=solid];
m22_23 -> m22_24  [color=green, key=0, style=solid];
m22_23 -> m22_25  [color=green, key=0, style=solid];
m22_27 -> m22_28  [color=green, key=0, style=solid];
m22_22 -> m22_29  [key=0, style=solid];
m22_22 -> m22_30  [key=2, style=dotted];
m22_29 -> m22_16  [color=blue, key=0, style=bold];
m22_29 -> m22_30  [key=0, style=solid];
m22_86 -> m22_91  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m22_86 -> m22_92  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m22_86 -> m22_95  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m22_86 -> m22_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_86 -> m22_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_86 -> m22_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_86 -> m22_87  [key=0, style=solid];
m22_86 -> m22_89  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m22_86 -> m22_90  [color=darkseagreen4, key=1, label=bool, style=dashed];
m22_86 -> m22_93  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m22_91 -> m22_72  [key=2, style=dotted];
m22_91 -> m22_92  [key=0, style=solid];
m22_91 -> m22_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_92 -> m22_72  [key=2, style=dotted];
m22_92 -> m22_93  [key=0, style=solid];
m22_92 -> m22_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_95 -> m22_72  [key=2, style=dotted];
m22_95 -> m22_96  [key=0, style=solid];
m22_95 -> m22_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_90 -> m22_91  [key=0, style=solid];
m22_90 -> m22_93  [key=0, style=solid];
m22_87 -> m22_92  [color=darkseagreen4, key=1, label=properties, style=dashed];
m22_87 -> m22_95  [color=darkseagreen4, key=1, label=properties, style=dashed];
m22_87 -> m22_106  [color=darkseagreen4, key=1, label=properties, style=dashed];
m22_87 -> m22_110  [color=darkseagreen4, key=1, label=properties, style=dashed];
m22_87 -> m22_88  [key=0, style=solid];
m22_87 -> m22_97  [key=2, style=dotted];
m22_87 -> m22_98  [key=2, style=dotted];
m22_87 -> m22_89  [color=darkseagreen4, key=1, label=properties, style=dashed];
m22_87 -> m22_93  [color=darkseagreen4, key=1, label=properties, style=dashed];
m22_87 -> m22_94  [color=darkseagreen4, key=1, label=properties, style=dashed];
m22_93 -> m22_94  [key=0, style=solid];
m22_93 -> m22_99  [key=2, style=dotted];
m22_94 -> m22_95  [key=0, style=solid];
m22_94 -> m22_100  [key=2, style=dotted];
m22_94 -> m22_99  [key=2, style=dotted];
m22_89 -> m22_90  [key=0, style=solid];
m22_89 -> m22_99  [key=2, style=dotted];
m22_88 -> m22_94  [color=darkseagreen4, key=1, label=now, style=dashed];
m22_88 -> m22_89  [key=0, style=solid];
m22_96 -> m22_86  [color=blue, key=0, style=bold];
m22_109 -> m22_110  [key=0, style=solid];
m22_78 -> m22_79  [color=green, key=0, style=solid];
m22_79 -> m22_80  [color=green, key=0, style=solid];
m22_79 -> m22_47  [color=green, key=2, style=dotted];
m22_79 -> m22_81  [color=green, key=2, style=dotted];
m22_80 -> m22_78  [color=blue, key=0, style=bold];
m22_102 -> m22_47  [key=2, style=dotted];
m22_102 -> m22_103  [key=0, style=solid];
m22_102 -> m22_104  [key=2, style=dotted];
m22_106 -> m22_47  [key=2, style=dotted];
m22_106 -> m22_107  [key=0, style=solid];
m22_106 -> m22_108  [key=2, style=dotted];
m22_110 -> m22_47  [key=2, style=dotted];
m22_110 -> m22_111  [key=0, style=solid];
m22_110 -> m22_112  [key=2, style=dotted];
m22_110 -> m22_113  [key=2, style=dotted];
m22_101 -> m22_102  [key=0, style=solid];
m22_105 -> m22_106  [key=0, style=solid];
m22_103 -> m22_101  [color=blue, key=0, style=bold];
m22_107 -> m22_105  [color=blue, key=0, style=bold];
m22_111 -> m22_109  [color=blue, key=0, style=bold];
m22_114 -> m22_26  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_28  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_45  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_56  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_58  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_59  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_61  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_25  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_27  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_34  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_35  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_40  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_42  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_44  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_63  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_65  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_82  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_114 -> m22_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m22_115 -> m22_79  [color=green, key=1, label=string, style=dashed];
m22_116 -> m22_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_116 -> m22_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_116 -> m22_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_117 -> m22_102  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m22_118 -> m22_106  [color=darkseagreen4, key=1, label=properties, style=dashed];
m22_118 -> m22_110  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_18 -> m23_19  [color=red, key=0, style=solid];
m23_19 -> m23_20  [color=red, key=0, style=solid];
m23_19 -> m23_17  [color=red, key=2, style=dotted];
m23_20 -> m23_21  [key=0, style=solid];
m23_21 -> m23_18  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [color=red, key=0, style=solid];
m23_0 -> m23_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_0 -> m23_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_0 -> m23_7  [color=red, key=1, label=IDbConnection, style=dashed];
m23_0 -> m23_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m23_0 -> m23_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_0 -> m23_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_1 -> m23_2  [color=red, key=0, style=solid];
m23_1 -> m23_3  [color=red, key=0, style=solid];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_5  [key=0, style=solid];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_7  [color=red, key=0, style=solid];
m23_7 -> m23_8  [color=red, key=0, style=solid];
m23_8 -> m23_9  [key=0, style=solid];
m23_9 -> m23_10  [key=0, style=solid];
m23_10 -> m23_11  [key=0, style=solid];
m23_2 -> m23_11  [color=red, key=0, style=solid];
m23_2 -> m23_12  [color=red, key=2, style=dotted];
m23_4 -> m23_11  [key=0, style=solid];
m23_4 -> m23_12  [key=2, style=dotted];
m23_6 -> m23_11  [key=0, style=solid];
m23_6 -> m23_12  [key=2, style=dotted];
m23_11 -> m23_0  [color=blue, key=0, style=bold];
m23_22 -> m23_23  [key=0, style=solid];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_25  [key=0, style=solid];
m23_24 -> m23_28  [key=0, style=solid];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_27  [key=0, style=solid];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_18  [key=2, style=dotted];
m23_27 -> m23_28  [key=0, style=solid];
m23_28 -> m23_22  [color=blue, key=0, style=bold];
m23_13 -> m23_14  [color=red, key=0, style=solid];
m23_14 -> m23_15  [color=red, key=0, style=solid];
m23_14 -> m23_17  [color=red, key=2, style=dotted];
m23_15 -> m23_16  [key=0, style=solid];
m23_16 -> m23_13  [color=blue, key=0, style=bold];
m23_29 -> m23_7  [color=red, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_14  [color=red, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_19  [color=red, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_20  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_26  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m23_29 -> m23_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m24_16 -> m24_19  [color=green, key=1, label="System.Type", style=dashed];
m24_16 -> m24_17  [key=0, style=solid];
m24_16 -> m24_21  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m24_16 -> m24_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m24_16 -> m24_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_16 -> m24_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_16 -> m24_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_16 -> m24_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_16 -> m24_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_19 -> m24_20  [color=green, key=0, style=solid];
m24_19 -> m24_21  [color=green, key=0, style=solid];
m24_17 -> m24_19  [color=green, key=0, style=solid];
m24_17 -> m24_18  [key=0, style=solid];
m24_17 -> m24_34  [key=2, style=dotted];
m24_20 -> m24_33  [color=green, key=0, style=solid];
m24_20 -> m24_10  [color=green, key=2, style=dotted];
m24_20 -> m24_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_20 -> m24_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_20 -> m24_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_20 -> m24_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_20 -> m24_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_20 -> m24_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_20 -> m24_17  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_21 -> m24_22  [key=0, style=solid];
m24_21 -> m24_23  [key=0, style=solid];
m24_23 -> m24_24  [key=0, style=solid];
m24_23 -> m24_25  [key=0, style=solid];
m24_25 -> m24_26  [key=0, style=solid];
m24_25 -> m24_27  [key=0, style=solid];
m24_25 -> m24_35  [key=2, style=dotted];
m24_26 -> m24_33  [key=0, style=solid];
m24_26 -> m24_36  [key=2, style=dotted];
m24_26 -> m24_37  [key=2, style=dotted];
m24_27 -> m24_28  [key=0, style=solid];
m24_27 -> m24_38  [key=2, style=dotted];
m24_28 -> m24_29  [key=0, style=solid];
m24_28 -> m24_39  [key=2, style=dotted];
m24_28 -> m24_40  [key=2, style=dotted];
m24_30 -> m24_33  [key=0, style=solid];
m24_18 -> m24_33  [key=0, style=solid];
m24_18 -> m24_10  [key=2, style=dotted];
m24_18 -> m24_16  [color=blue, key=0, style=bold];
m24_22 -> m24_33  [key=0, style=solid];
m24_22 -> m24_10  [key=2, style=dotted];
m24_24 -> m24_33  [key=0, style=solid];
m24_24 -> m24_10  [key=2, style=dotted];
m24_32 -> m24_33  [key=0, style=solid];
m24_32 -> m24_42  [key=2, style=dotted];
m24_29 -> m24_30  [key=0, style=solid];
m24_29 -> m24_41  [key=2, style=dotted];
m24_31 -> m24_32  [key=0, style=solid];
m24_31 -> m24_31  [color=darkorchid, key=3, label="Local variable int currentQueryIndex", style=bold];
m24_33 -> m24_16  [color=blue, key=0, style=bold];
m24_43 -> m24_44  [color=green, key=0, style=solid];
m24_44 -> m24_45  [color=green, key=0, style=solid];
m24_44 -> m24_46  [color=green, key=2, style=dotted];
m24_45 -> m24_43  [color=blue, key=0, style=bold];
m24_38 -> m24_47  [key=0, style=solid];
m24_38 -> m24_48  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_38 -> m24_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m24_47 -> m24_54  [key=2, style=dotted];
m24_47 -> m24_48  [key=0, style=solid];
m24_47 -> m24_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m24_47 -> m24_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m24_47 -> m24_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m24_47 -> m24_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m24_48 -> m24_49  [key=0, style=solid];
m24_49 -> m24_50  [key=0, style=solid];
m24_49 -> m24_55  [key=2, style=dotted];
m24_52 -> m24_53  [key=0, style=solid];
m24_50 -> m24_51  [key=0, style=solid];
m24_51 -> m24_52  [key=0, style=solid];
m24_51 -> m24_56  [key=2, style=dotted];
m24_53 -> m24_38  [color=blue, key=0, style=bold];
m24_15 -> m24_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_15 -> m24_57  [key=0, style=solid];
m24_15 -> m24_58  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_15 -> m24_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_2 -> m24_7  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m24_2 -> m24_8  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_5  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m24_2 -> m24_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_4 -> m24_10  [key=2, style=dotted];
m24_4 -> m24_9  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_6 -> m24_10  [key=2, style=dotted];
m24_6 -> m24_9  [key=0, style=solid];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_11  [key=2, style=dotted];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_11  [key=2, style=dotted];
m24_7 -> m24_0  [color=blue, key=0, style=bold];
m24_8 -> m24_9  [key=0, style=solid];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_5  [key=0, style=solid];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_7  [key=0, style=solid];
m24_5 -> m24_10  [key=2, style=dotted];
m24_9 -> m24_2  [color=blue, key=0, style=bold];
m24_65 -> m24_66  [color=green, key=0, style=solid];
m24_65 -> m24_68  [color=green, key=0, style=solid];
m24_65 -> m24_75  [color=green, key=2, style=dotted];
m24_61 -> m24_65  [color=green, key=1, label=propertyValue, style=dashed];
m24_61 -> m24_62  [key=0, style=solid];
m24_61 -> m24_72  [key=2, style=dotted];
m24_61 -> m24_63  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m24_61 -> m24_64  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m24_64 -> m24_65  [color=green, key=0, style=solid];
m24_64 -> m24_73  [key=2, style=dotted];
m24_64 -> m24_74  [key=2, style=dotted];
m24_66 -> m24_67  [color=green, key=0, style=solid];
m24_68 -> m24_60  [key=0, style=solid];
m24_68 -> m24_77  [key=2, style=dotted];
m24_67 -> m24_70  [key=0, style=solid];
m24_67 -> m24_76  [key=2, style=dotted];
m24_67 -> m24_37  [key=2, style=dotted];
m24_60 -> m24_61  [key=0, style=solid];
m24_60 -> m24_68  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m24_60 -> m24_67  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m24_60 -> m24_69  [key=0, style=solid];
m24_60 -> m24_71  [key=2, style=dotted];
m24_62 -> m24_68  [color=darkseagreen4, key=1, label=value, style=dashed];
m24_62 -> m24_63  [key=0, style=solid];
m24_63 -> m24_64  [key=0, style=solid];
m24_63 -> m24_68  [key=0, style=solid];
m24_57 -> m24_68  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_57 -> m24_58  [key=0, style=solid];
m24_57 -> m24_54  [key=2, style=dotted];
m24_57 -> m24_59  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_57 -> m24_69  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_58 -> m24_60  [key=0, style=solid];
m24_58 -> m24_59  [key=0, style=solid];
m24_69 -> m24_70  [key=0, style=solid];
m24_59 -> m24_70  [key=0, style=solid];
m24_70 -> m24_15  [color=blue, key=0, style=bold];
m24_12 -> m24_13  [key=0, style=solid];
m24_13 -> m24_14  [key=0, style=solid];
m24_13 -> m24_15  [key=2, style=dotted];
m24_13 -> m24_16  [key=2, style=dotted];
m24_14 -> m24_12  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_78 -> m24_44  [color=green, key=1, label="HangFire.Client.JobClient", style=dashed];
m24_78 -> m24_7  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m24_78 -> m24_8  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m24_78 -> m24_13  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m24_78 -> m24_28  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m24_78 -> m24_29  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m25_281 -> m25_282  [key=0, style=solid];
m25_281 -> m25_285  [color=darkseagreen4, key=1, label=Table, style=dashed];
m25_281 -> m25_286  [color=darkseagreen4, key=1, label=Table, style=dashed];
m25_282 -> m25_283  [key=0, style=solid];
m25_282 -> m25_46  [key=2, style=dotted];
m25_282 -> m25_289  [key=2, style=dotted];
m25_285 -> m25_286  [key=0, style=solid];
m25_285 -> m25_288  [key=0, style=solid];
m25_286 -> m25_287  [key=0, style=solid];
m25_286 -> m25_119  [key=2, style=dotted];
m25_283 -> m25_284  [key=0, style=solid];
m25_283 -> m25_290  [key=2, style=dotted];
m25_283 -> m25_291  [key=2, style=dotted];
m25_283 -> m25_286  [color=darkseagreen4, key=1, label=history, style=dashed];
m25_284 -> m25_285  [key=0, style=solid];
m25_284 -> m25_286  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_284 -> m25_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_287 -> m25_285  [key=0, style=solid];
m25_287 -> m25_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_288 -> m25_281  [color=blue, key=0, style=bold];
m25_174 -> m25_175  [key=0, style=solid];
m25_175 -> m25_176  [key=0, style=solid];
m25_175 -> m25_180  [key=2, style=dotted];
m25_176 -> m25_177  [key=0, style=solid];
m25_176 -> m25_181  [key=2, style=dotted];
m25_176 -> m25_178  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m25_177 -> m25_178  [key=0, style=solid];
m25_177 -> m25_182  [key=2, style=dotted];
m25_177 -> m25_130  [key=2, style=dotted];
m25_178 -> m25_179  [key=0, style=solid];
m25_178 -> m25_182  [key=2, style=dotted];
m25_178 -> m25_130  [key=2, style=dotted];
m25_179 -> m25_174  [color=blue, key=0, style=bold];
m25_158 -> m25_159  [key=0, style=solid];
m25_159 -> m25_160  [key=0, style=solid];
m25_159 -> m25_162  [key=2, style=dotted];
m25_159 -> m25_119  [key=2, style=dotted];
m25_160 -> m25_161  [key=0, style=solid];
m25_160 -> m25_163  [key=2, style=dotted];
m25_160 -> m25_130  [key=2, style=dotted];
m25_161 -> m25_158  [color=blue, key=0, style=bold];
m25_112 -> m25_113  [key=0, style=solid];
m25_112 -> m25_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_113 -> m25_114  [key=0, style=solid];
m25_113 -> m25_100  [key=2, style=dotted];
m25_114 -> m25_115  [key=0, style=solid];
m25_114 -> m25_111  [key=2, style=dotted];
m25_115 -> m25_112  [color=blue, key=0, style=bold];
m25_183 -> m25_184  [key=0, style=solid];
m25_184 -> m25_185  [key=0, style=solid];
m25_184 -> m25_163  [key=2, style=dotted];
m25_184 -> m25_130  [key=2, style=dotted];
m25_185 -> m25_186  [key=0, style=solid];
m25_185 -> m25_180  [key=2, style=dotted];
m25_186 -> m25_187  [key=0, style=solid];
m25_186 -> m25_181  [key=2, style=dotted];
m25_186 -> m25_188  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m25_187 -> m25_188  [key=0, style=solid];
m25_187 -> m25_18  [key=2, style=dotted];
m25_187 -> m25_130  [key=2, style=dotted];
m25_188 -> m25_189  [key=0, style=solid];
m25_188 -> m25_18  [key=2, style=dotted];
m25_188 -> m25_130  [key=2, style=dotted];
m25_189 -> m25_183  [color=blue, key=0, style=bold];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_72 -> m25_73  [key=0, style=solid];
m25_72 -> m25_46  [key=2, style=dotted];
m25_72 -> m25_47  [key=2, style=dotted];
m25_73 -> m25_74  [key=0, style=solid];
m25_73 -> m25_75  [key=2, style=dotted];
m25_73 -> m25_70  [key=2, style=dotted];
m25_74 -> m25_71  [color=blue, key=0, style=bold];
m25_230 -> m25_231  [key=0, style=solid];
m25_231 -> m25_232  [key=0, style=solid];
m25_231 -> m25_220  [key=2, style=dotted];
m25_231 -> m25_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_232 -> m25_230  [color=blue, key=0, style=bold];
m25_190 -> m25_191  [key=0, style=solid];
m25_191 -> m25_192  [key=0, style=solid];
m25_191 -> m25_163  [key=2, style=dotted];
m25_191 -> m25_173  [key=2, style=dotted];
m25_192 -> m25_190  [color=blue, key=0, style=bold];
m25_254 -> m25_255  [key=0, style=solid];
m25_255 -> m25_256  [key=0, style=solid];
m25_255 -> m25_46  [key=2, style=dotted];
m25_255 -> m25_214  [key=2, style=dotted];
m25_255 -> m25_257  [color=darkseagreen4, key=1, label=entry, style=dashed];
m25_255 -> m25_258  [color=darkseagreen4, key=1, label=entry, style=dashed];
m25_256 -> m25_257  [key=0, style=solid];
m25_256 -> m25_215  [key=2, style=dotted];
m25_257 -> m25_258  [key=0, style=solid];
m25_257 -> m25_216  [key=2, style=dotted];
m25_257 -> m25_260  [color=darkseagreen4, key=1, label=history, style=dashed];
m25_257 -> m25_261  [color=darkseagreen4, key=1, label=history, style=dashed];
m25_258 -> m25_259  [key=0, style=solid];
m25_258 -> m25_215  [key=2, style=dotted];
m25_260 -> m25_261  [key=0, style=solid];
m25_260 -> m25_263  [key=2, style=dotted];
m25_260 -> m25_130  [key=2, style=dotted];
m25_260 -> m25_260  [color=darkseagreen4, key=1, label=property, style=dashed];
m25_261 -> m25_259  [key=0, style=solid];
m25_261 -> m25_119  [key=2, style=dotted];
m25_261 -> m25_261  [color=darkseagreen4, key=1, label=property, style=dashed];
m25_259 -> m25_260  [key=0, style=solid];
m25_259 -> m25_262  [key=0, style=solid];
m25_262 -> m25_254  [color=blue, key=0, style=bold];
m25_142 -> m25_143  [key=0, style=solid];
m25_143 -> m25_144  [key=0, style=solid];
m25_143 -> m25_46  [key=2, style=dotted];
m25_144 -> m25_145  [key=0, style=solid];
m25_144 -> m25_124  [key=2, style=dotted];
m25_144 -> m25_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_145 -> m25_142  [color=blue, key=0, style=bold];
m25_116 -> m25_117  [key=0, style=solid];
m25_117 -> m25_118  [key=0, style=solid];
m25_117 -> m25_119  [key=2, style=dotted];
m25_118 -> m25_116  [color=blue, key=0, style=bold];
m25_66 -> m25_67  [color=red, key=0, style=solid];
m25_67 -> m25_68  [color=red, key=0, style=solid];
m25_67 -> m25_69  [color=red, key=2, style=dotted];
m25_67 -> m25_70  [color=red, key=2, style=dotted];
m25_68 -> m25_66  [color=blue, key=0, style=bold];
m25_10 -> m25_11  [key=0, style=solid];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_13  [key=2, style=dotted];
m25_12 -> m25_10  [color=blue, key=0, style=bold];
m25_236 -> m25_237  [key=0, style=solid];
m25_237 -> m25_238  [key=0, style=solid];
m25_237 -> m25_220  [key=2, style=dotted];
m25_237 -> m25_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_238 -> m25_236  [color=blue, key=0, style=bold];
m25_269 -> m25_264  [color=blue, key=0, style=bold];
m25_264 -> m25_265  [key=0, style=solid];
m25_265 -> m25_266  [key=0, style=solid];
m25_265 -> m25_46  [key=2, style=dotted];
m25_265 -> m25_201  [key=2, style=dotted];
m25_265 -> m25_267  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m25_265 -> m25_268  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m25_266 -> m25_267  [key=0, style=solid];
m25_266 -> m25_269  [key=0, style=solid];
m25_267 -> m25_268  [key=0, style=solid];
m25_267 -> m25_270  [key=2, style=dotted];
m25_267 -> m25_130  [key=2, style=dotted];
m25_267 -> m25_267  [color=darkseagreen4, key=1, label=property, style=dashed];
m25_268 -> m25_266  [key=0, style=solid];
m25_268 -> m25_119  [key=2, style=dotted];
m25_268 -> m25_268  [color=darkseagreen4, key=1, label=property, style=dashed];
m25_80 -> m25_81  [key=0, style=solid];
m25_81 -> m25_82  [key=0, style=solid];
m25_81 -> m25_85  [key=2, style=dotted];
m25_81 -> m25_83  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_82 -> m25_83  [key=0, style=solid];
m25_82 -> m25_86  [key=2, style=dotted];
m25_83 -> m25_84  [key=0, style=solid];
m25_83 -> m25_87  [key=2, style=dotted];
m25_84 -> m25_80  [color=blue, key=0, style=bold];
m25_271 -> m25_272  [key=0, style=solid];
m25_271 -> m25_274  [color=darkseagreen4, key=1, label=Table, style=dashed];
m25_271 -> m25_275  [color=darkseagreen4, key=1, label=Table, style=dashed];
m25_272 -> m25_273  [key=0, style=solid];
m25_272 -> m25_119  [key=2, style=dotted];
m25_274 -> m25_275  [key=0, style=solid];
m25_274 -> m25_277  [key=0, style=solid];
m25_275 -> m25_276  [key=0, style=solid];
m25_275 -> m25_119  [key=2, style=dotted];
m25_273 -> m25_274  [key=0, style=solid];
m25_273 -> m25_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_273 -> m25_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_276 -> m25_274  [key=0, style=solid];
m25_276 -> m25_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_277 -> m25_271  [color=blue, key=0, style=bold];
m25_251 -> m25_252  [key=0, style=solid];
m25_34 -> m25_35  [key=0, style=solid];
m25_37 -> m25_38  [key=0, style=solid];
m25_35 -> m25_36  [key=0, style=solid];
m25_36 -> m25_34  [color=blue, key=0, style=bold];
m25_38 -> m25_39  [key=0, style=solid];
m25_38 -> m25_40  [key=2, style=dotted];
m25_39 -> m25_37  [color=blue, key=0, style=bold];
m25_49 -> m25_50  [key=0, style=solid];
m25_52 -> m25_53  [key=0, style=solid];
m25_55 -> m25_56  [key=0, style=solid];
m25_50 -> m25_51  [key=0, style=solid];
m25_51 -> m25_49  [color=blue, key=0, style=bold];
m25_53 -> m25_54  [key=0, style=solid];
m25_54 -> m25_52  [color=blue, key=0, style=bold];
m25_56 -> m25_57  [key=0, style=solid];
m25_56 -> m25_40  [key=2, style=dotted];
m25_57 -> m25_55  [color=blue, key=0, style=bold];
m25_125 -> m25_126  [key=0, style=solid];
m25_125 -> m25_127  [color=darkseagreen4, key=1, label="?", style=dashed];
m25_126 -> m25_127  [key=0, style=solid];
m25_126 -> m25_129  [key=2, style=dotted];
m25_127 -> m25_128  [key=0, style=solid];
m25_127 -> m25_130  [key=2, style=dotted];
m25_128 -> m25_125  [color=blue, key=0, style=bold];
m25_146 -> m25_147  [key=0, style=solid];
m25_146 -> m25_148  [color=darkseagreen4, key=1, label="?", style=dashed];
m25_147 -> m25_148  [key=0, style=solid];
m25_147 -> m25_129  [key=2, style=dotted];
m25_148 -> m25_149  [key=0, style=solid];
m25_148 -> m25_130  [key=2, style=dotted];
m25_149 -> m25_146  [color=blue, key=0, style=bold];
m25_221 -> m25_222  [key=0, style=solid];
m25_222 -> m25_223  [key=0, style=solid];
m25_222 -> m25_216  [key=2, style=dotted];
m25_222 -> m25_86  [key=2, style=dotted];
m25_222 -> m25_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_222 -> m25_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_223 -> m25_221  [color=blue, key=0, style=bold];
m25_224 -> m25_225  [key=0, style=solid];
m25_227 -> m25_228  [key=0, style=solid];
m25_225 -> m25_226  [key=0, style=solid];
m25_226 -> m25_224  [color=blue, key=0, style=bold];
m25_228 -> m25_229  [key=0, style=solid];
m25_229 -> m25_227  [color=blue, key=0, style=bold];
m25_233 -> m25_234  [key=0, style=solid];
m25_234 -> m25_235  [key=0, style=solid];
m25_234 -> m25_216  [key=2, style=dotted];
m25_234 -> m25_86  [key=2, style=dotted];
m25_235 -> m25_233  [color=blue, key=0, style=bold];
m25_239 -> m25_240  [key=0, style=solid];
m25_240 -> m25_241  [key=0, style=solid];
m25_240 -> m25_216  [key=2, style=dotted];
m25_240 -> m25_95  [key=2, style=dotted];
m25_240 -> m25_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_240 -> m25_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_241 -> m25_239  [color=blue, key=0, style=bold];
m25_242 -> m25_243  [key=0, style=solid];
m25_245 -> m25_246  [key=0, style=solid];
m25_243 -> m25_244  [key=0, style=solid];
m25_244 -> m25_242  [color=blue, key=0, style=bold];
m25_246 -> m25_247  [key=0, style=solid];
m25_247 -> m25_245  [color=blue, key=0, style=bold];
m25_252 -> m25_253  [key=0, style=solid];
m25_252 -> m25_216  [key=2, style=dotted];
m25_252 -> m25_95  [key=2, style=dotted];
m25_253 -> m25_251  [color=blue, key=0, style=bold];
m25_58 -> m25_59  [key=0, style=solid];
m25_59 -> m25_60  [key=0, style=solid];
m25_59 -> m25_47  [key=2, style=dotted];
m25_60 -> m25_61  [key=0, style=solid];
m25_60 -> m25_47  [key=2, style=dotted];
m25_61 -> m25_62  [color=red, key=0, style=solid];
m25_61 -> m25_64  [key=2, style=dotted];
m25_62 -> m25_63  [color=red, key=0, style=solid];
m25_62 -> m25_65  [color=red, key=2, style=dotted];
m25_63 -> m25_58  [color=blue, key=0, style=bold];
m25_170 -> m25_171  [key=0, style=solid];
m25_171 -> m25_172  [key=0, style=solid];
m25_171 -> m25_163  [key=2, style=dotted];
m25_171 -> m25_173  [key=2, style=dotted];
m25_172 -> m25_170  [color=blue, key=0, style=bold];
m25_102 -> m25_103  [key=0, style=solid];
m25_103 -> m25_104  [key=0, style=solid];
m25_103 -> m25_105  [key=2, style=dotted];
m25_103 -> m25_106  [key=2, style=dotted];
m25_104 -> m25_102  [color=blue, key=0, style=bold];
m25_76 -> m25_77  [key=0, style=solid];
m25_77 -> m25_78  [key=0, style=solid];
m25_77 -> m25_79  [key=2, style=dotted];
m25_77 -> m25_70  [key=2, style=dotted];
m25_78 -> m25_76  [color=blue, key=0, style=bold];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_43  [color=darkseagreen4, key=1, label=Table, style=dashed];
m25_41 -> m25_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_46  [key=2, style=dotted];
m25_42 -> m25_47  [key=2, style=dotted];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_48  [key=2, style=dotted];
m25_43 -> m25_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_43 -> m25_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_30  [key=2, style=dotted];
m25_44 -> m25_31  [key=2, style=dotted];
m25_44 -> m25_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_44 -> m25_44  [color=darkorchid, key=3, label="Local variable string sqlQuery", style=bold];
m25_45 -> m25_41  [color=blue, key=0, style=bold];
m25_248 -> m25_249  [key=0, style=solid];
m25_249 -> m25_250  [key=0, style=solid];
m25_249 -> m25_220  [key=2, style=dotted];
m25_249 -> m25_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_250 -> m25_248  [color=blue, key=0, style=bold];
m25_197 -> m25_198  [key=0, style=solid];
m25_197 -> m25_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_198 -> m25_199  [key=0, style=solid];
m25_198 -> m25_46  [key=2, style=dotted];
m25_198 -> m25_201  [key=2, style=dotted];
m25_199 -> m25_200  [key=0, style=solid];
m25_199 -> m25_119  [key=2, style=dotted];
m25_200 -> m25_197  [color=blue, key=0, style=bold];
m25_131 -> m25_132  [key=0, style=solid];
m25_132 -> m25_133  [key=0, style=solid];
m25_132 -> m25_134  [key=2, style=dotted];
m25_132 -> m25_135  [key=2, style=dotted];
m25_132 -> m25_119  [key=2, style=dotted];
m25_133 -> m25_131  [color=blue, key=0, style=bold];
m25_278 -> m25_279  [key=0, style=solid];
m25_279 -> m25_280  [key=0, style=solid];
m25_279 -> m25_119  [key=2, style=dotted];
m25_280 -> m25_278  [color=blue, key=0, style=bold];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_23 -> m25_27  [color=red, key=1, label=string, style=dashed];
m25_24 -> m25_25  [key=0, style=solid];
m25_24 -> m25_29  [key=2, style=dotted];
m25_24 -> m25_26  [color=darkseagreen4, key=1, label=mock, style=dashed];
m25_24 -> m25_27  [color=red, key=1, label=mock, style=dashed];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_30  [key=2, style=dotted];
m25_25 -> m25_31  [key=2, style=dotted];
m25_25 -> m25_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_27 -> m25_28  [color=red, key=0, style=solid];
m25_27 -> m25_33  [color=red, key=2, style=dotted];
m25_26 -> m25_27  [color=red, key=0, style=solid];
m25_26 -> m25_30  [key=2, style=dotted];
m25_26 -> m25_32  [key=2, style=dotted];
m25_26 -> m25_31  [key=2, style=dotted];
m25_26 -> m25_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_28 -> m25_23  [color=blue, key=0, style=bold];
m25_14 -> m25_15  [color=red, key=0, style=solid];
m25_15 -> m25_16  [color=red, key=0, style=solid];
m25_15 -> m25_17  [color=red, key=2, style=dotted];
m25_15 -> m25_18  [color=red, key=2, style=dotted];
m25_16 -> m25_14  [color=blue, key=0, style=bold];
m25_217 -> m25_218  [key=0, style=solid];
m25_218 -> m25_219  [key=0, style=solid];
m25_218 -> m25_220  [key=2, style=dotted];
m25_218 -> m25_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_219 -> m25_217  [color=blue, key=0, style=bold];
m25_193 -> m25_194  [key=0, style=solid];
m25_194 -> m25_195  [key=0, style=solid];
m25_194 -> m25_196  [key=2, style=dotted];
m25_194 -> m25_130  [key=2, style=dotted];
m25_195 -> m25_193  [color=blue, key=0, style=bold];
m25_167 -> m25_168  [key=0, style=solid];
m25_168 -> m25_169  [key=0, style=solid];
m25_168 -> m25_163  [key=2, style=dotted];
m25_168 -> m25_130  [key=2, style=dotted];
m25_169 -> m25_167  [color=blue, key=0, style=bold];
m25_136 -> m25_137  [key=0, style=solid];
m25_137 -> m25_138  [key=0, style=solid];
m25_137 -> m25_140  [key=2, style=dotted];
m25_137 -> m25_119  [key=2, style=dotted];
m25_138 -> m25_139  [key=0, style=solid];
m25_138 -> m25_141  [key=2, style=dotted];
m25_138 -> m25_119  [key=2, style=dotted];
m25_139 -> m25_136  [color=blue, key=0, style=bold];
m25_164 -> m25_165  [key=0, style=solid];
m25_165 -> m25_166  [key=0, style=solid];
m25_165 -> m25_162  [key=2, style=dotted];
m25_165 -> m25_119  [key=2, style=dotted];
m25_166 -> m25_164  [color=blue, key=0, style=bold];
m25_205 -> m25_202  [color=blue, key=0, style=bold];
m25_202 -> m25_203  [key=0, style=solid];
m25_202 -> m25_204  [color=darkseagreen4, key=1, label=Table, style=dashed];
m25_203 -> m25_204  [key=0, style=solid];
m25_203 -> m25_46  [key=2, style=dotted];
m25_203 -> m25_201  [key=2, style=dotted];
m25_204 -> m25_205  [key=0, style=solid];
m25_204 -> m25_206  [key=2, style=dotted];
m25_120 -> m25_121  [key=0, style=solid];
m25_121 -> m25_122  [key=0, style=solid];
m25_121 -> m25_46  [key=2, style=dotted];
m25_122 -> m25_123  [key=0, style=solid];
m25_122 -> m25_124  [key=2, style=dotted];
m25_122 -> m25_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_123 -> m25_120  [color=blue, key=0, style=bold];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_8  [key=2, style=dotted];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_9  [key=2, style=dotted];
m25_7 -> m25_4  [color=blue, key=0, style=bold];
m25_213 -> m25_207  [color=blue, key=0, style=bold];
m25_207 -> m25_208  [key=0, style=solid];
m25_207 -> m25_212  [color=darkseagreen4, key=1, label=Table, style=dashed];
m25_208 -> m25_209  [key=0, style=solid];
m25_208 -> m25_46  [key=2, style=dotted];
m25_208 -> m25_214  [key=2, style=dotted];
m25_208 -> m25_210  [color=darkseagreen4, key=1, label=entry, style=dashed];
m25_208 -> m25_211  [color=darkseagreen4, key=1, label=entry, style=dashed];
m25_212 -> m25_213  [key=0, style=solid];
m25_212 -> m25_157  [key=2, style=dotted];
m25_209 -> m25_210  [key=0, style=solid];
m25_209 -> m25_215  [key=2, style=dotted];
m25_210 -> m25_211  [key=0, style=solid];
m25_210 -> m25_216  [key=2, style=dotted];
m25_210 -> m25_212  [color=darkseagreen4, key=1, label=history, style=dashed];
m25_211 -> m25_212  [key=0, style=solid];
m25_211 -> m25_215  [key=2, style=dotted];
m25_19 -> m25_20  [key=0, style=solid];
m25_20 -> m25_21  [key=0, style=solid];
m25_20 -> m25_22  [key=2, style=dotted];
m25_20 -> m25_20  [color=darkorchid, key=3, label="Local variable string fetchedJobsSql", style=bold];
m25_21 -> m25_19  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [color=red, key=0, style=solid];
m25_1 -> m25_2  [color=red, key=0, style=solid];
m25_1 -> m25_3  [color=red, key=2, style=dotted];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_150 -> m25_151  [key=0, style=solid];
m25_151 -> m25_152  [key=0, style=solid];
m25_151 -> m25_140  [key=2, style=dotted];
m25_151 -> m25_119  [key=2, style=dotted];
m25_152 -> m25_150  [color=blue, key=0, style=bold];
m25_153 -> m25_154  [key=0, style=solid];
m25_154 -> m25_155  [key=0, style=solid];
m25_154 -> m25_156  [key=2, style=dotted];
m25_154 -> m25_157  [key=2, style=dotted];
m25_155 -> m25_153  [color=blue, key=0, style=bold];
m25_107 -> m25_108  [key=0, style=solid];
m25_107 -> m25_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_108 -> m25_109  [key=0, style=solid];
m25_108 -> m25_100  [key=2, style=dotted];
m25_109 -> m25_110  [key=0, style=solid];
m25_109 -> m25_111  [key=2, style=dotted];
m25_110 -> m25_107  [color=blue, key=0, style=bold];
m25_96 -> m25_97  [key=0, style=solid];
m25_97 -> m25_98  [key=0, style=solid];
m25_97 -> m25_100  [key=2, style=dotted];
m25_98 -> m25_99  [key=0, style=solid];
m25_98 -> m25_101  [key=2, style=dotted];
m25_99 -> m25_96  [color=blue, key=0, style=bold];
m25_88 -> m25_89  [key=0, style=solid];
m25_89 -> m25_90  [key=0, style=solid];
m25_89 -> m25_85  [key=2, style=dotted];
m25_89 -> m25_91  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_89 -> m25_92  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_90 -> m25_91  [key=0, style=solid];
m25_90 -> m25_92  [key=0, style=solid];
m25_90 -> m25_94  [key=2, style=dotted];
m25_91 -> m25_92  [key=0, style=solid];
m25_91 -> m25_95  [key=2, style=dotted];
m25_92 -> m25_93  [key=0, style=solid];
m25_92 -> m25_87  [key=2, style=dotted];
m25_93 -> m25_88  [color=blue, key=0, style=bold];
m25_292 -> m25_293  [key=0, style=solid];
m25_292 -> m25_295  [color=darkseagreen4, key=1, label=Table, style=dashed];
m25_292 -> m25_296  [color=darkseagreen4, key=1, label=Table, style=dashed];
m25_293 -> m25_294  [key=0, style=solid];
m25_293 -> m25_119  [key=2, style=dotted];
m25_295 -> m25_296  [key=0, style=solid];
m25_295 -> m25_298  [key=0, style=solid];
m25_296 -> m25_297  [key=0, style=solid];
m25_296 -> m25_119  [key=2, style=dotted];
m25_294 -> m25_295  [key=0, style=solid];
m25_294 -> m25_296  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_294 -> m25_297  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_297 -> m25_295  [key=0, style=solid];
m25_297 -> m25_297  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_298 -> m25_292  [color=blue, key=0, style=bold];
m25_299 -> m25_1  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_5  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_6  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_11  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_15  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_20  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_27  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_43  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_44  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_61  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_62  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_67  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_73  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_77  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_82  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_90  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_91  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_97  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_98  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_108  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_109  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_113  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_114  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_117  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_154  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_218  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_231  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_237  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_249  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_259  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_266  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_272  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_275  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_279  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_293  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m25_299 -> m25_296  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m26_10 -> m26_11  [color=green, key=0, style=solid];
m26_10 -> m26_12  [color=green, key=2, style=dotted];
m26_11 -> m26_12  [color=red, key=0, style=solid];
m26_11 -> m26_13  [color=red, key=2, style=dotted];
m26_11 -> m26_9  [color=blue, key=0, style=bold];
m26_12 -> m26_10  [color=blue, key=0, style=bold];
m26_5 -> m26_6  [color=green, key=0, style=solid];
m26_9 -> m26_10  [color=green, key=0, style=solid];
m26_13 -> m26_14  [color=green, key=0, style=solid];
m26_14 -> m26_15  [color=green, key=0, style=solid];
m26_14 -> m26_16  [color=green, key=2, style=dotted];
m26_14 -> m26_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m26_14 -> m26_7  [color=red, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m26_14 -> m26_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m26_14 -> m26_10  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m26_14 -> m26_14  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m26_14 -> m26_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m26_15 -> m26_13  [color=blue, key=0, style=bold];
m26_6 -> m26_7  [color=red, key=0, style=solid];
m26_7 -> m26_8  [color=red, key=0, style=solid];
m26_7 -> m26_9  [color=red, key=2, style=dotted];
m26_7 -> m26_0  [color=blue, key=0, style=bold];
m26_8 -> m26_6  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [color=green, key=0, style=solid];
m26_0 -> m26_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m26_0 -> m26_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m26_0 -> m26_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m26_1 -> m26_2  [color=green, key=0, style=solid];
m26_1 -> m26_3  [color=green, key=0, style=solid];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_5  [color=green, key=0, style=solid];
m26_2 -> m26_4  [key=0, style=solid];
m26_2 -> m26_5  [color=green, key=2, style=dotted];
m26_2 -> m26_7  [color=green, key=0, style=solid];
m26_4 -> m26_0  [color=blue, key=0, style=bold];
m26_4 -> m26_7  [key=0, style=solid];
m26_4 -> m26_5  [key=2, style=dotted];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m29_101 -> m29_256  [key=0, style=solid];
m29_256 -> m29_257  [key=0, style=solid];
m29_256 -> m29_254  [key=2, style=dotted];
m29_256 -> m29_255  [key=2, style=dotted];
m29_257 -> m29_101  [color=blue, key=0, style=bold];
m29_105 -> m29_106  [key=0, style=solid];
m29_105 -> m29_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_105 -> m29_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_106 -> m29_107  [key=0, style=solid];
m29_106 -> m29_108  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_106 -> m29_111  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_106 -> m29_106  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_108 -> m29_109  [key=0, style=solid];
m29_108 -> m29_31  [key=2, style=dotted];
m29_108 -> m29_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_107 -> m29_108  [key=0, style=solid];
m29_107 -> m29_101  [key=2, style=dotted];
m29_109 -> m29_105  [color=blue, key=0, style=bold];
m29_10 -> m29_11  [color=red, key=0, style=solid];
m29_11 -> m29_12  [color=red, key=0, style=solid];
m29_11 -> m29_19  [color=red, key=2, style=dotted];
m29_11 -> m29_17  [color=red, key=1, label=transaction, style=dashed];
m29_12 -> m29_13  [color=red, key=0, style=solid];
m29_12 -> m29_20  [color=red, key=2, style=dotted];
m29_17 -> m29_18  [color=red, key=0, style=solid];
m29_17 -> m29_24  [color=red, key=2, style=dotted];
m29_13 -> m29_14  [color=red, key=0, style=solid];
m29_13 -> m29_15  [key=0, style=solid];
m29_14 -> m29_15  [color=red, key=0, style=solid];
m29_14 -> m29_21  [color=red, key=2, style=dotted];
m29_14 -> m29_22  [color=red, key=2, style=dotted];
m29_14 -> m29_25  [color=red, key=1, label="lambda expression", style=dashed];
m29_15 -> m29_16  [color=red, key=0, style=solid];
m29_15 -> m29_17  [color=red, key=0, style=solid];
m29_16 -> m29_15  [color=red, key=0, style=solid];
m29_16 -> m29_23  [color=red, key=2, style=dotted];
m29_18 -> m29_10  [color=blue, key=0, style=bold];
m29_69 -> m29_70  [key=0, style=solid];
m29_69 -> m29_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_70 -> m29_71  [key=0, style=solid];
m29_70 -> m29_31  [key=2, style=dotted];
m29_70 -> m29_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_71 -> m29_69  [color=blue, key=0, style=bold];
m29_229 -> m29_230  [key=0, style=solid];
m29_229 -> m29_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_229 -> m29_237  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_230 -> m29_231  [key=0, style=solid];
m29_230 -> m29_232  [key=0, style=solid];
m29_234 -> m29_235  [key=0, style=solid];
m29_234 -> m29_31  [key=2, style=dotted];
m29_234 -> m29_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_231 -> m29_235  [key=0, style=solid];
m29_231 -> m29_9  [key=2, style=dotted];
m29_232 -> m29_233  [key=0, style=solid];
m29_232 -> m29_234  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_232 -> m29_237  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_232 -> m29_232  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_233 -> m29_234  [key=0, style=solid];
m29_233 -> m29_101  [key=2, style=dotted];
m29_235 -> m29_229  [color=blue, key=0, style=bold];
m29_239 -> m29_240  [key=0, style=solid];
m29_239 -> m29_244  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_239 -> m29_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_240 -> m29_241  [key=0, style=solid];
m29_240 -> m29_242  [key=0, style=solid];
m29_244 -> m29_245  [key=0, style=solid];
m29_244 -> m29_31  [key=2, style=dotted];
m29_244 -> m29_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_241 -> m29_245  [key=0, style=solid];
m29_241 -> m29_9  [key=2, style=dotted];
m29_242 -> m29_243  [key=0, style=solid];
m29_242 -> m29_244  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_242 -> m29_247  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_242 -> m29_242  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_243 -> m29_244  [key=0, style=solid];
m29_243 -> m29_117  [key=2, style=dotted];
m29_245 -> m29_239  [color=blue, key=0, style=bold];
m29_81 -> m29_82  [key=0, style=solid];
m29_81 -> m29_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_82 -> m29_83  [key=0, style=solid];
m29_82 -> m29_31  [key=2, style=dotted];
m29_82 -> m29_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_83 -> m29_81  [color=blue, key=0, style=bold];
m29_255 -> m29_260  [key=0, style=solid];
m29_260 -> m29_261  [key=0, style=solid];
m29_260 -> m29_262  [key=2, style=dotted];
m29_261 -> m29_255  [color=blue, key=0, style=bold];
m29_199 -> m29_200  [key=0, style=solid];
m29_199 -> m29_204  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_199 -> m29_207  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_200 -> m29_201  [key=0, style=solid];
m29_200 -> m29_202  [key=0, style=solid];
m29_204 -> m29_205  [key=0, style=solid];
m29_204 -> m29_31  [key=2, style=dotted];
m29_204 -> m29_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_201 -> m29_205  [key=0, style=solid];
m29_201 -> m29_9  [key=2, style=dotted];
m29_202 -> m29_203  [key=0, style=solid];
m29_202 -> m29_204  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_202 -> m29_207  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_202 -> m29_202  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_203 -> m29_204  [key=0, style=solid];
m29_203 -> m29_101  [key=2, style=dotted];
m29_205 -> m29_199  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [color=red, key=0, style=solid];
m29_0 -> m29_3  [color=red, key=1, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m29_0 -> m29_5  [color=red, key=1, label=SqlConnection, style=dashed];
m29_0 -> m29_6  [color=red, key=1, label="IsolationLevel?", style=dashed];
m29_0 -> m29_7  [color=red, key=1, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m29_1 -> m29_2  [color=red, key=0, style=solid];
m29_1 -> m29_3  [color=red, key=0, style=solid];
m29_3 -> m29_4  [color=red, key=0, style=solid];
m29_3 -> m29_5  [color=red, key=0, style=solid];
m29_5 -> m29_6  [color=red, key=0, style=solid];
m29_6 -> m29_7  [color=red, key=0, style=solid];
m29_7 -> m29_8  [color=red, key=0, style=solid];
m29_2 -> m29_8  [color=red, key=0, style=solid];
m29_2 -> m29_9  [color=red, key=2, style=dotted];
m29_4 -> m29_8  [color=red, key=0, style=solid];
m29_4 -> m29_9  [color=red, key=2, style=dotted];
m29_8 -> m29_0  [color=blue, key=0, style=bold];
m29_145 -> m29_258  [key=0, style=solid];
m29_258 -> m29_259  [key=0, style=solid];
m29_258 -> m29_254  [key=2, style=dotted];
m29_258 -> m29_255  [key=2, style=dotted];
m29_259 -> m29_145  [color=blue, key=0, style=bold];
m29_42 -> m29_43  [key=0, style=solid];
m29_42 -> m29_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_42 -> m29_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_43 -> m29_44  [key=0, style=solid];
m29_43 -> m29_47  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m29_43 -> m29_43  [color=darkorchid, key=3, label="Local variable string addAndSetStateSql", style=bold];
m29_44 -> m29_45  [key=0, style=solid];
m29_44 -> m29_31  [key=2, style=dotted];
m29_44 -> m29_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_45 -> m29_42  [color=blue, key=0, style=bold];
m29_209 -> m29_210  [key=0, style=solid];
m29_209 -> m29_214  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_209 -> m29_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_210 -> m29_211  [key=0, style=solid];
m29_210 -> m29_212  [key=0, style=solid];
m29_214 -> m29_215  [key=0, style=solid];
m29_214 -> m29_31  [key=2, style=dotted];
m29_214 -> m29_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_211 -> m29_215  [key=0, style=solid];
m29_211 -> m29_9  [key=2, style=dotted];
m29_212 -> m29_213  [key=0, style=solid];
m29_212 -> m29_214  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_212 -> m29_217  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_212 -> m29_212  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_213 -> m29_214  [key=0, style=solid];
m29_213 -> m29_117  [key=2, style=dotted];
m29_215 -> m29_209  [color=blue, key=0, style=bold];
m29_51 -> m29_52  [key=0, style=solid];
m29_51 -> m29_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_51 -> m29_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_52 -> m29_53  [key=0, style=solid];
m29_52 -> m29_56  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m29_52 -> m29_52  [color=darkorchid, key=3, label="Local variable string addStateSql", style=bold];
m29_53 -> m29_54  [key=0, style=solid];
m29_53 -> m29_31  [key=2, style=dotted];
m29_53 -> m29_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_54 -> m29_51  [color=blue, key=0, style=bold];
m29_87 -> m29_88  [key=0, style=solid];
m29_87 -> m29_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_88 -> m29_89  [key=0, style=solid];
m29_88 -> m29_31  [key=2, style=dotted];
m29_88 -> m29_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_89 -> m29_87  [color=blue, key=0, style=bold];
m29_179 -> m29_180  [key=0, style=solid];
m29_179 -> m29_184  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_179 -> m29_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_180 -> m29_181  [key=0, style=solid];
m29_180 -> m29_182  [key=0, style=solid];
m29_184 -> m29_185  [key=0, style=solid];
m29_184 -> m29_31  [key=2, style=dotted];
m29_184 -> m29_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_181 -> m29_185  [key=0, style=solid];
m29_181 -> m29_9  [key=2, style=dotted];
m29_182 -> m29_183  [key=0, style=solid];
m29_182 -> m29_184  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_182 -> m29_187  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_182 -> m29_182  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_183 -> m29_184  [key=0, style=solid];
m29_183 -> m29_101  [key=2, style=dotted];
m29_185 -> m29_179  [color=blue, key=0, style=bold];
m29_93 -> m29_94  [key=0, style=solid];
m29_94 -> m29_95  [key=0, style=solid];
m29_94 -> m29_96  [key=2, style=dotted];
m29_95 -> m29_93  [color=blue, key=0, style=bold];
m29_31 -> m29_249  [key=0, style=solid];
m29_31 -> m29_29  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_37  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_44  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_53  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_61  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_70  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_76  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_82  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_88  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_99  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_108  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_115  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_123  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_131  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_158  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_184  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_194  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_204  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_214  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_224  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_234  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_31 -> m29_244  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m29_249 -> m29_250  [key=0, style=solid];
m29_249 -> m29_251  [key=2, style=dotted];
m29_250 -> m29_31  [color=blue, key=0, style=bold];
m29_58 -> m29_59  [color=red, key=0, style=solid];
m29_58 -> m29_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_58 -> m29_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_59 -> m29_60  [color=red, key=0, style=solid];
m29_59 -> m29_63  [color=red, key=2, style=dotted];
m29_61 -> m29_62  [key=0, style=solid];
m29_61 -> m29_31  [key=2, style=dotted];
m29_61 -> m29_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_60 -> m29_61  [color=red, key=0, style=solid];
m29_60 -> m29_64  [color=red, key=2, style=dotted];
m29_60 -> m29_66  [color=red, key=1, label=persistentQueue, style=dashed];
m29_62 -> m29_58  [color=blue, key=0, style=bold];
m29_75 -> m29_76  [key=0, style=solid];
m29_75 -> m29_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_76 -> m29_77  [key=0, style=solid];
m29_76 -> m29_31  [key=2, style=dotted];
m29_76 -> m29_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_77 -> m29_75  [color=blue, key=0, style=bold];
m29_136 -> m29_137  [key=0, style=solid];
m29_136 -> m29_139  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m29_136 -> m29_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_136 -> m29_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_136 -> m29_151  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_137 -> m29_138  [key=0, style=solid];
m29_137 -> m29_139  [key=0, style=solid];
m29_139 -> m29_140  [key=0, style=solid];
m29_139 -> m29_141  [key=0, style=solid];
m29_143 -> m29_144  [key=0, style=solid];
m29_143 -> m29_146  [key=2, style=dotted];
m29_143 -> m29_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_138 -> m29_144  [key=0, style=solid];
m29_138 -> m29_9  [key=2, style=dotted];
m29_140 -> m29_144  [key=0, style=solid];
m29_140 -> m29_9  [key=2, style=dotted];
m29_141 -> m29_142  [key=0, style=solid];
m29_141 -> m29_143  [color=darkseagreen4, key=1, label=sql, style=dashed];
m29_141 -> m29_148  [color=darkseagreen4, key=1, label=sql, style=dashed];
m29_141 -> m29_141  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m29_142 -> m29_143  [key=0, style=solid];
m29_142 -> m29_145  [key=2, style=dotted];
m29_144 -> m29_136  [color=blue, key=0, style=bold];
m29_96 -> m29_97  [key=0, style=solid];
m29_96 -> m29_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_96 -> m29_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_96 -> m29_93  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m29_96 -> m29_94  [color=darkorchid, key=3, label="Parameter variable double score", style=bold];
m29_97 -> m29_98  [key=0, style=solid];
m29_97 -> m29_99  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m29_97 -> m29_103  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m29_97 -> m29_97  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
m29_99 -> m29_100  [key=0, style=solid];
m29_99 -> m29_31  [key=2, style=dotted];
m29_99 -> m29_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_98 -> m29_99  [key=0, style=solid];
m29_98 -> m29_101  [key=2, style=dotted];
m29_100 -> m29_96  [color=blue, key=0, style=bold];
m29_153 -> m29_154  [key=0, style=solid];
m29_153 -> m29_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_153 -> m29_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_154 -> m29_155  [key=0, style=solid];
m29_154 -> m29_156  [key=0, style=solid];
m29_158 -> m29_159  [key=0, style=solid];
m29_158 -> m29_31  [key=2, style=dotted];
m29_158 -> m29_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_155 -> m29_159  [key=0, style=solid];
m29_155 -> m29_9  [key=2, style=dotted];
m29_156 -> m29_157  [key=0, style=solid];
m29_156 -> m29_158  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_156 -> m29_161  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_156 -> m29_156  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_157 -> m29_158  [key=0, style=solid];
m29_157 -> m29_145  [key=2, style=dotted];
m29_159 -> m29_153  [color=blue, key=0, style=bold];
m29_36 -> m29_37  [key=0, style=solid];
m29_36 -> m29_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_37 -> m29_38  [key=0, style=solid];
m29_37 -> m29_31  [key=2, style=dotted];
m29_37 -> m29_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_38 -> m29_36  [color=blue, key=0, style=bold];
m29_19 -> m29_263  [color=red, key=0, style=solid];
m29_263 -> m29_264  [color=red, key=0, style=solid];
m29_263 -> m29_265  [color=red, key=2, style=dotted];
m29_263 -> m29_266  [color=red, key=2, style=dotted];
m29_264 -> m29_19  [color=blue, key=0, style=bold];
m29_189 -> m29_190  [key=0, style=solid];
m29_189 -> m29_194  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_189 -> m29_197  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_190 -> m29_191  [key=0, style=solid];
m29_190 -> m29_192  [key=0, style=solid];
m29_194 -> m29_195  [key=0, style=solid];
m29_194 -> m29_31  [key=2, style=dotted];
m29_194 -> m29_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_191 -> m29_195  [key=0, style=solid];
m29_191 -> m29_9  [key=2, style=dotted];
m29_192 -> m29_193  [key=0, style=solid];
m29_192 -> m29_194  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_192 -> m29_197  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_192 -> m29_192  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_193 -> m29_194  [key=0, style=solid];
m29_193 -> m29_145  [key=2, style=dotted];
m29_195 -> m29_189  [color=blue, key=0, style=bold];
m29_28 -> m29_29  [key=0, style=solid];
m29_28 -> m29_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_29 -> m29_30  [key=0, style=solid];
m29_29 -> m29_31  [key=2, style=dotted];
m29_29 -> m29_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_30 -> m29_28  [color=blue, key=0, style=bold];
m29_246 -> m29_247  [key=0, style=solid];
m29_25 -> m29_26  [key=0, style=solid];
m29_26 -> m29_27  [key=0, style=solid];
m29_27 -> m29_25  [color=blue, key=0, style=bold];
m29_33 -> m29_34  [key=0, style=solid];
m29_33 -> m29_35  [key=2, style=dotted];
m29_33 -> m29_22  [key=2, style=dotted];
m29_32 -> m29_33  [key=0, style=solid];
m29_34 -> m29_32  [color=blue, key=0, style=bold];
m29_40 -> m29_41  [key=0, style=solid];
m29_40 -> m29_22  [key=2, style=dotted];
m29_39 -> m29_40  [key=0, style=solid];
m29_41 -> m29_39  [color=blue, key=0, style=bold];
m29_47 -> m29_48  [key=0, style=solid];
m29_47 -> m29_49  [key=2, style=dotted];
m29_47 -> m29_50  [key=2, style=dotted];
m29_47 -> m29_22  [key=2, style=dotted];
m29_46 -> m29_47  [key=0, style=solid];
m29_48 -> m29_46  [color=blue, key=0, style=bold];
m29_56 -> m29_57  [key=0, style=solid];
m29_56 -> m29_49  [key=2, style=dotted];
m29_56 -> m29_50  [key=2, style=dotted];
m29_56 -> m29_22  [key=2, style=dotted];
m29_55 -> m29_56  [key=0, style=solid];
m29_57 -> m29_55  [color=blue, key=0, style=bold];
m29_66 -> m29_67  [key=0, style=solid];
m29_66 -> m29_68  [key=2, style=dotted];
m29_65 -> m29_66  [key=0, style=solid];
m29_67 -> m29_65  [color=blue, key=0, style=bold];
m29_73 -> m29_74  [key=0, style=solid];
m29_73 -> m29_22  [key=2, style=dotted];
m29_72 -> m29_73  [key=0, style=solid];
m29_74 -> m29_72  [color=blue, key=0, style=bold];
m29_79 -> m29_80  [key=0, style=solid];
m29_79 -> m29_35  [key=2, style=dotted];
m29_79 -> m29_22  [key=2, style=dotted];
m29_78 -> m29_79  [key=0, style=solid];
m29_80 -> m29_78  [color=blue, key=0, style=bold];
m29_85 -> m29_86  [key=0, style=solid];
m29_85 -> m29_22  [key=2, style=dotted];
m29_84 -> m29_85  [key=0, style=solid];
m29_86 -> m29_84  [color=blue, key=0, style=bold];
m29_91 -> m29_92  [key=0, style=solid];
m29_91 -> m29_35  [key=2, style=dotted];
m29_91 -> m29_22  [key=2, style=dotted];
m29_90 -> m29_91  [key=0, style=solid];
m29_92 -> m29_90  [color=blue, key=0, style=bold];
m29_103 -> m29_104  [key=0, style=solid];
m29_103 -> m29_22  [key=2, style=dotted];
m29_102 -> m29_103  [key=0, style=solid];
m29_104 -> m29_102  [color=blue, key=0, style=bold];
m29_111 -> m29_112  [key=0, style=solid];
m29_111 -> m29_22  [key=2, style=dotted];
m29_110 -> m29_111  [key=0, style=solid];
m29_112 -> m29_110  [color=blue, key=0, style=bold];
m29_119 -> m29_120  [key=0, style=solid];
m29_119 -> m29_22  [key=2, style=dotted];
m29_118 -> m29_119  [key=0, style=solid];
m29_120 -> m29_118  [color=blue, key=0, style=bold];
m29_126 -> m29_127  [key=0, style=solid];
m29_126 -> m29_22  [key=2, style=dotted];
m29_125 -> m29_126  [key=0, style=solid];
m29_127 -> m29_125  [color=blue, key=0, style=bold];
m29_134 -> m29_135  [key=0, style=solid];
m29_134 -> m29_22  [key=2, style=dotted];
m29_133 -> m29_134  [key=0, style=solid];
m29_135 -> m29_133  [color=blue, key=0, style=bold];
m29_148 -> m29_149  [key=0, style=solid];
m29_148 -> m29_21  [key=2, style=dotted];
m29_148 -> m29_22  [key=2, style=dotted];
m29_148 -> m29_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_151 -> m29_152  [key=0, style=solid];
m29_151 -> m29_151  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m29_147 -> m29_148  [key=0, style=solid];
m29_149 -> m29_147  [color=blue, key=0, style=bold];
m29_150 -> m29_151  [key=0, style=solid];
m29_152 -> m29_150  [color=blue, key=0, style=bold];
m29_161 -> m29_162  [key=0, style=solid];
m29_161 -> m29_22  [key=2, style=dotted];
m29_160 -> m29_161  [key=0, style=solid];
m29_162 -> m29_160  [color=blue, key=0, style=bold];
m29_173 -> m29_174  [key=0, style=solid];
m29_173 -> m29_21  [key=2, style=dotted];
m29_173 -> m29_175  [key=2, style=dotted];
m29_173 -> m29_22  [key=2, style=dotted];
m29_173 -> m29_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_177 -> m29_178  [key=0, style=solid];
m29_172 -> m29_173  [key=0, style=solid];
m29_174 -> m29_172  [color=blue, key=0, style=bold];
m29_176 -> m29_177  [key=0, style=solid];
m29_178 -> m29_176  [color=blue, key=0, style=bold];
m29_187 -> m29_188  [key=0, style=solid];
m29_187 -> m29_22  [key=2, style=dotted];
m29_186 -> m29_187  [key=0, style=solid];
m29_188 -> m29_186  [color=blue, key=0, style=bold];
m29_197 -> m29_198  [key=0, style=solid];
m29_197 -> m29_35  [key=2, style=dotted];
m29_197 -> m29_22  [key=2, style=dotted];
m29_196 -> m29_197  [key=0, style=solid];
m29_198 -> m29_196  [color=blue, key=0, style=bold];
m29_207 -> m29_208  [key=0, style=solid];
m29_207 -> m29_35  [key=2, style=dotted];
m29_207 -> m29_22  [key=2, style=dotted];
m29_206 -> m29_207  [key=0, style=solid];
m29_208 -> m29_206  [color=blue, key=0, style=bold];
m29_217 -> m29_218  [key=0, style=solid];
m29_217 -> m29_35  [key=2, style=dotted];
m29_217 -> m29_22  [key=2, style=dotted];
m29_216 -> m29_217  [key=0, style=solid];
m29_218 -> m29_216  [color=blue, key=0, style=bold];
m29_227 -> m29_228  [key=0, style=solid];
m29_227 -> m29_22  [key=2, style=dotted];
m29_226 -> m29_227  [key=0, style=solid];
m29_228 -> m29_226  [color=blue, key=0, style=bold];
m29_237 -> m29_238  [key=0, style=solid];
m29_237 -> m29_22  [key=2, style=dotted];
m29_236 -> m29_237  [key=0, style=solid];
m29_238 -> m29_236  [color=blue, key=0, style=bold];
m29_247 -> m29_248  [key=0, style=solid];
m29_247 -> m29_22  [key=2, style=dotted];
m29_248 -> m29_246  [color=blue, key=0, style=bold];
m29_163 -> m29_164  [key=0, style=solid];
m29_163 -> m29_166  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m29_163 -> m29_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_163 -> m29_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_163 -> m29_177  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_164 -> m29_165  [key=0, style=solid];
m29_164 -> m29_166  [key=0, style=solid];
m29_166 -> m29_167  [key=0, style=solid];
m29_166 -> m29_168  [key=0, style=solid];
m29_170 -> m29_171  [key=0, style=solid];
m29_170 -> m29_146  [key=2, style=dotted];
m29_170 -> m29_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_165 -> m29_171  [key=0, style=solid];
m29_165 -> m29_9  [key=2, style=dotted];
m29_167 -> m29_171  [key=0, style=solid];
m29_167 -> m29_9  [key=2, style=dotted];
m29_168 -> m29_169  [key=0, style=solid];
m29_168 -> m29_170  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_168 -> m29_173  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_168 -> m29_168  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_169 -> m29_170  [key=0, style=solid];
m29_169 -> m29_101  [key=2, style=dotted];
m29_171 -> m29_163  [color=blue, key=0, style=bold];
m29_121 -> m29_122  [key=0, style=solid];
m29_121 -> m29_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_121 -> m29_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_122 -> m29_123  [key=0, style=solid];
m29_122 -> m29_117  [key=2, style=dotted];
m29_123 -> m29_124  [key=0, style=solid];
m29_123 -> m29_31  [key=2, style=dotted];
m29_123 -> m29_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_124 -> m29_121  [color=blue, key=0, style=bold];
m29_117 -> m29_252  [key=0, style=solid];
m29_252 -> m29_253  [key=0, style=solid];
m29_252 -> m29_254  [key=2, style=dotted];
m29_252 -> m29_255  [key=2, style=dotted];
m29_253 -> m29_117  [color=blue, key=0, style=bold];
m29_219 -> m29_220  [key=0, style=solid];
m29_219 -> m29_224  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_219 -> m29_227  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_220 -> m29_221  [key=0, style=solid];
m29_220 -> m29_222  [key=0, style=solid];
m29_224 -> m29_225  [key=0, style=solid];
m29_224 -> m29_31  [key=2, style=dotted];
m29_224 -> m29_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_221 -> m29_225  [key=0, style=solid];
m29_221 -> m29_9  [key=2, style=dotted];
m29_222 -> m29_223  [key=0, style=solid];
m29_222 -> m29_224  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_222 -> m29_227  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_222 -> m29_222  [color=darkorchid, key=3, label="Local variable string query", style=bold];
m29_223 -> m29_224  [key=0, style=solid];
m29_223 -> m29_145  [key=2, style=dotted];
m29_225 -> m29_219  [color=blue, key=0, style=bold];
m29_113 -> m29_114  [key=0, style=solid];
m29_113 -> m29_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_113 -> m29_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_114 -> m29_115  [key=0, style=solid];
m29_114 -> m29_117  [key=2, style=dotted];
m29_115 -> m29_116  [key=0, style=solid];
m29_115 -> m29_31  [key=2, style=dotted];
m29_115 -> m29_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_116 -> m29_113  [color=blue, key=0, style=bold];
m29_128 -> m29_129  [key=0, style=solid];
m29_128 -> m29_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_128 -> m29_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_129 -> m29_130  [key=0, style=solid];
m29_129 -> m29_131  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m29_129 -> m29_134  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m29_129 -> m29_129  [color=darkorchid, key=3, label="Local variable string trimSql", style=bold];
m29_131 -> m29_132  [key=0, style=solid];
m29_131 -> m29_31  [key=2, style=dotted];
m29_131 -> m29_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_130 -> m29_131  [key=0, style=solid];
m29_130 -> m29_117  [key=2, style=dotted];
m29_132 -> m29_128  [color=blue, key=0, style=bold];
m29_267 -> m29_5  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_6  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_7  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_11  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_12  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_14  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_16  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_37  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_53  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_59  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_60  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_61  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_76  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_82  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_88  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_94  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_98  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_99  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_107  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_108  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_114  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_122  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_123  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_130  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_131  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_142  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_143  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_157  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_158  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_169  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_170  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_183  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_184  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_193  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_194  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_203  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_204  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_213  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_214  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_223  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_224  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_233  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_234  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_243  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_244  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_249  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_252  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_258  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_267 -> m29_260  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m29_268 -> m29_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_269 -> m29_33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_270 -> m29_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_271 -> m29_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_272 -> m29_47  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m29_273 -> m29_47  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m29_274 -> m29_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_275 -> m29_56  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m29_276 -> m29_56  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m29_277 -> m29_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_278 -> m29_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_279 -> m29_66  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m29_280 -> m29_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_281 -> m29_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_282 -> m29_79  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_283 -> m29_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_284 -> m29_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_285 -> m29_91  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_286 -> m29_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_287 -> m29_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_288 -> m29_103  [color=darkseagreen4, key=1, label=double, style=dashed];
m29_289 -> m29_103  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m29_290 -> m29_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_291 -> m29_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_292 -> m29_111  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_293 -> m29_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_294 -> m29_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_295 -> m29_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_296 -> m29_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_297 -> m29_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_298 -> m29_134  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_299 -> m29_134  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_300 -> m29_134  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m29_301 -> m29_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_301 -> m29_151  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_302 -> m29_148  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m29_303 -> m29_148  [color=darkseagreen4, key=1, label=sql, style=dashed];
m29_304 -> m29_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_305 -> m29_161  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_306 -> m29_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_306 -> m29_177  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_307 -> m29_173  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m29_308 -> m29_173  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_309 -> m29_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_310 -> m29_187  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_311 -> m29_197  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_312 -> m29_197  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_313 -> m29_197  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_314 -> m29_207  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_315 -> m29_207  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_316 -> m29_207  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_317 -> m29_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_318 -> m29_217  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_319 -> m29_217  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_320 -> m29_227  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_321 -> m29_227  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_322 -> m29_237  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_323 -> m29_237  [color=darkseagreen4, key=1, label=query, style=dashed];
m29_324 -> m29_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_325 -> m29_247  [color=darkseagreen4, key=1, label=query, style=dashed];
m30_0 -> m30_1  [key=0, style=solid];
m30_0 -> m30_0  [color=darkorchid, key=3, label="Field variable System.Func<Hangfire.JobStorage, Hangfire.States.StateMachineFactory> Default", style=bold];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_3  [key=2, style=dotted];
m30_2 -> m30_0  [color=blue, key=0, style=bold];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_8  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_6  [key=0, style=solid];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_13  [key=2, style=dotted];
m30_8 -> m30_12  [key=2, style=dotted];
m30_5 -> m30_9  [key=0, style=solid];
m30_5 -> m30_10  [key=2, style=dotted];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_11  [key=2, style=dotted];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_12  [key=2, style=dotted];
m30_9 -> m30_3  [color=blue, key=0, style=bold];
m30_14 -> m30_15  [key=0, style=solid];
m30_14 -> m30_18  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m30_15 -> m30_16  [key=0, style=solid];
m30_15 -> m30_17  [color=red, key=0, style=solid];
m30_18 -> m30_19  [key=0, style=solid];
m30_18 -> m30_21  [key=2, style=dotted];
m30_16 -> m30_19  [key=0, style=solid];
m30_16 -> m30_10  [key=2, style=dotted];
m30_17 -> m30_18  [color=red, key=0, style=solid];
m30_17 -> m30_20  [color=red, key=2, style=dotted];
m30_19 -> m30_14  [color=blue, key=0, style=bold];
m30_22 -> m30_6  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachineFactory", style=dashed];
m30_22 -> m30_7  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachineFactory", style=dashed];
m30_22 -> m30_8  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachineFactory", style=dashed];
m30_22 -> m30_17  [color=red, key=1, label="Hangfire.States.StateMachineFactory", style=dashed];
m33_11 -> m33_12  [key=0, style=solid];
m33_13 -> m33_14  [color=green, key=0, style=solid];
m33_13 -> m33_9  [color=green, key=2, style=dotted];
m33_13 -> m33_10  [color=green, key=2, style=dotted];
m33_12 -> m33_13  [color=green, key=0, style=solid];
m33_12 -> m33_8  [key=2, style=dotted];
m33_14 -> m33_11  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_0  [color=blue, key=0, style=bold];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_5  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m33_2 -> m33_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m33_3 -> m33_0  [color=blue, key=0, style=bold];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_5  [key=0, style=solid];
m33_9 -> m33_5  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m33_9 -> m33_6  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m33_5 -> m33_6  [color=green, key=0, style=solid];
m33_5 -> m33_8  [color=green, key=2, style=dotted];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_9  [key=2, style=dotted];
m33_6 -> m33_10  [key=2, style=dotted];
m33_4 -> m33_7  [key=0, style=solid];
m33_4 -> m33_8  [key=2, style=dotted];
m33_4 -> m33_5  [color=green, key=0, style=solid];
m33_7 -> m33_2  [color=blue, key=0, style=bold];
m33_7 -> m33_4  [color=blue, key=0, style=bold];
m33_15 -> m33_13  [color=green, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m33_15 -> m33_6  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m33_15 -> m33_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m33_15 -> m33_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_3  [key=2, style=dotted];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
}
