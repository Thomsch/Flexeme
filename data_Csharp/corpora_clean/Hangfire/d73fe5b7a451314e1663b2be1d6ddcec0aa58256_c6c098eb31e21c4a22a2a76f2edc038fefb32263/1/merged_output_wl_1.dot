digraph  {
n81 [label="HangFire.Server.Worker", span=""];
n0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
n1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", label="_manager = manager", span="34-34"];
n2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", label="_context = context", span="35-35"];
n3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber))", span="37-37"];
n4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                    IsBackground = true\r\n                }", span="39-43"];
n7 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n8 [cluster="Unk.GetLogger", label="Entry Unk.GetLogger", span=""];
n5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", label="_thread.Start()", span="44-44"];
n9 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
n6 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
n10 [cluster="System.Threading.Thread.Start()", label="Entry System.Threading.Thread.Start()", span="0-0"];
n11 [cluster="HangFire.Server.Worker.SendStop()", label="Entry HangFire.Server.Worker.SendStop()", span="47-47"];
n12 [cluster="HangFire.Server.Worker.SendStop()", label="_stopSent = true", span="49-49"];
n13 [cluster="HangFire.Server.Worker.SendStop()", label="_cts.Cancel()", span="50-50"];
n14 [cluster="HangFire.Server.Worker.SendStop()", label="Exit HangFire.Server.Worker.SendStop()", span="47-47"];
n15 [cluster="System.Threading.CancellationTokenSource.Cancel()", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
n16 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="71-71"];
n17 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", label=_jobLock, span="73-73"];
n18 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", label="_jobPayload = payload", span="75-75"];
n19 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", label="_jobIsReady.Set()", span="78-78"];
n20 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="71-71"];
n21 [cluster="System.Threading.ManualResetEventSlim.Set()", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
n22 [cluster="HangFire.Server.Worker.Dispose()", label="Entry HangFire.Server.Worker.Dispose()", span="81-81"];
n23 [cluster="HangFire.Server.Worker.Dispose()", label="!_stopSent", span="83-83"];
n24 [cluster="HangFire.Server.Worker.Dispose()", label="SendStop()", span="85-85"];
n25 [cluster="HangFire.Server.Worker.Dispose()", label="_thread.Join()", span="88-88"];
n26 [cluster="HangFire.Server.Worker.Dispose()", label="_cts.Dispose()", span="90-90"];
n29 [cluster="System.Threading.Thread.Join()", label="Entry System.Threading.Thread.Join()", span="0-0"];
n27 [cluster="HangFire.Server.Worker.Dispose()", label="_jobIsReady.Dispose()", span="91-91"];
n30 [cluster="System.Threading.CancellationTokenSource.Dispose()", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
n28 [cluster="HangFire.Server.Worker.Dispose()", label="Exit HangFire.Server.Worker.Dispose()", span="81-81"];
n31 [cluster="System.Threading.ManualResetEventSlim.Dispose()", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
n32 [cluster="HangFire.Server.Worker.DoWork()", label="Entry HangFire.Server.Worker.DoWork()", span="95-95"];
n33 [cluster="HangFire.Server.Worker.DoWork()", label=true, span="99-99"];
n34 [cluster="HangFire.Server.Worker.DoWork()", label="_manager.NotifyReady(this)", span="101-101"];
n39 [cluster="HangFire.Server.Worker.DoWork()", label=OperationCanceledException, span="111-111"];
n40 [cluster="HangFire.Server.Worker.DoWork()", label=Exception, span="114-114"];
n43 [cluster="HangFire.Server.Worker.DoWork()", label="Exit HangFire.Server.Worker.DoWork()", span="95-95"];
n35 [cluster="HangFire.Server.Worker.DoWork()", label="_jobIsReady.Wait(_cts.Token)", span="102-102"];
n44 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="84-84"];
n36 [cluster="HangFire.Server.Worker.DoWork()", label=_jobLock, span="104-104"];
n45 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
n37 [cluster="HangFire.Server.Worker.DoWork()", label="PerformJob(_jobPayload)", span="106-106"];
n38 [cluster="HangFire.Server.Worker.DoWork()", label="_jobIsReady.Reset()", span="107-107"];
n46 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="125-125"];
n47 [cluster="System.Threading.ManualResetEventSlim.Reset()", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
n41 [cluster="HangFire.Server.Worker.DoWork()", label="Crashed = true", span="116-116"];
n42 [cluster="HangFire.Server.Worker.DoWork()", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="117-120"];
n48 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
n49 [cluster="Unk.Fatal", label="Entry Unk.Fatal", span=""];
n50 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="String.IsNullOrEmpty(payload.Type)", span="127-127"];
n51 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="129-131"];
n54 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="!JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(payload.Id, ''Worker has started processing.'', _context.ServerName),\r\n                    EnqueuedState.Name)", span="138-141"];
n58 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="jobDescriptor = new ServerJobDescriptor(\r\n                    _context.Activator, payload)", span="157-158"];
n63 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="169-171"];
n66 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(payload.Id, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="185-188"];
n67 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(payload.Id, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="192-195"];
n68 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="JobFetcher.RemoveFromFetchedQueue(\r\n                    Redis, payload.Id, payload.Queue)", span="203-204"];
n53 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label=Redis, span="136-136"];
n70 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n52 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="return;", span="133-133"];
n71 [cluster="Unk.Warn", label="Entry Unk.Warn", span=""];
n55 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="return;", span="143-143"];
n56 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="Exception exception = null", span="152-152"];
n72 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10"];
n73 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
n57 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="ServerJobDescriptor jobDescriptor = null", span="154-154"];
n59 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="160-161"];
n74 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", span="10-10"];
n60 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="_context.Performer.PerformJob(performContext)", span="163-163"];
n75 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13"];
n61 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label=Exception, span="165-165"];
n64 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label=Redis, span="181-181"];
n76 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33"];
n62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="exception = ex", span="167-167"];
n65 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="exception == null", span="183-183"];
n77 [cluster="Unk.Error", label="Entry Unk.Error", span=""];
n78 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
n79 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
n69 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="125-125"];
n80 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="83-83"];
d59 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", color=green, community=0, label="0: var handler1 = new Mock<IStateHandler>()", span="79-79"];
d58 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="var context = CreateContext()", span="77-77"];
d60 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="handler1.Setup(x => x.StateName).Returns(OldState)", span="80-80"];
d70 [cluster="Mock<IStateHandler>.cstr", label="Entry Mock<IStateHandler>.cstr", span=""];
d63 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="_handlers.AddHandler(handler1.Object)", span="85-85"];
d65 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="handler1.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="88-88"];
d61 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", color=green, community=0, label="0: var handler2 = new Mock<IStateHandler>()", span="82-82"];
d62 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="handler2.Setup(x => x.StateName).Returns(OldState)", span="83-83"];
d64 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="_handlers.AddHandler(handler2.Object)", span="86-86"];
d66 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="handler2.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="89-89"];
d90 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", color=green, community=0, label="0: var handler1 = new Mock<IStateHandler>()", span="105-105"];
d89 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="var context = CreateContext()", span="103-103"];
d91 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="handler1.Setup(x => x.StateName).Returns(NewState)", span="106-106"];
d94 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="_handlers.AddHandler(handler1.Object)", span="111-111"];
d97 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="handler1.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="118-118"];
d92 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", color=green, community=0, label="0: var handler2 = new Mock<IStateHandler>()", span="108-108"];
d93 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="handler2.Setup(x => x.StateName).Returns(NewState)", span="109-109"];
d95 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="_handlers.AddHandler(handler2.Object)", span="112-112"];
d98 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="handler2.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="119-119"];
d202 [label="HangFire.Core.Tests.States.ApplyStateContextFacts", span=""];
d57 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="74-74"];
d27 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="208-208"];
d79 [cluster="lambda expression", label="x.Unapply(context, _transaction.Object)", span="88-88"];
d83 [cluster="lambda expression", label="x.Unapply(context, _transaction.Object)", span="89-89"];
d68 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="context.ApplyState(_handlers, _filters)", span="94-94"];
d10 [cluster="Unk.Setup", label="Entry Unk.Setup", span=""];
d11 [cluster="Unk.Returns", label="Entry Unk.Returns", span=""];
d72 [cluster="lambda expression", label="Entry lambda expression", span="80-80"];
d71 [cluster="Unk.AddHandler", label="Entry Unk.AddHandler", span=""];
d48 [cluster="Unk.InSequence", label="Entry Unk.InSequence", span=""];
d78 [cluster="lambda expression", label="Entry lambda expression", span="88-88"];
d75 [cluster="lambda expression", label="Entry lambda expression", span="83-83"];
d67 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="_transaction.Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="90-91"];
d82 [cluster="lambda expression", label="Entry lambda expression", span="89-89"];
d88 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100"];
d111 [cluster="lambda expression", label="x.Apply(context, _transaction.Object)", span="118-118"];
d115 [cluster="lambda expression", label="x.Apply(context, _transaction.Object)", span="119-119"];
d99 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="context.ApplyState(_handlers, _filters)", span="122-122"];
d101 [cluster="lambda expression", label="Entry lambda expression", span="106-106"];
d96 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="114-116"];
d110 [cluster="lambda expression", label="Entry lambda expression", span="118-118"];
d104 [cluster="lambda expression", label="Entry lambda expression", span="109-109"];
d114 [cluster="lambda expression", label="Entry lambda expression", span="119-119"];
d1 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_job = Job.FromExpression(() => Console.WriteLine())", span="24-24"];
d2 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_newStateMock = new Mock<State>()", span="25-25"];
d3 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_newStateMock.Setup(x => x.Name).Returns(NewState)", span="26-26"];
d4 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="28-28"];
d5 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_filters = new List<IApplyStateFilter>()", span="30-30"];
d6 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_handlers = new StateHandlerCollection()", span="31-31"];
d23 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="var context = CreateContext()", span="37-37"];
d24 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(null, _filters))", span="39-40"];
d31 [cluster="lambda expression", label="context.ApplyState(null, _filters)", span="40-40"];
d35 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="var context = CreateContext()", span="48-48"];
d36 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(_handlers, null))", span="50-51"];
d40 [cluster="lambda expression", label="context.ApplyState(_handlers, null)", span="51-51"];
d43 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="_transaction.Setup(x => x.SetJobState(\r\n                JobId, _newStateMock.Object)).InSequence()", span="60-61"];
d50 [cluster="lambda expression", label="x.SetJobState(\r\n                JobId, _newStateMock.Object)", span="60-61"];
d44 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="_transaction.Setup(x => x.Commit()).InSequence()", span="63-63"];
d45 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="var context = CreateContext()", span="65-65"];
d46 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="context.ApplyState(_handlers, _filters)", span="68-68"];
d118 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="var context = CreateContext()", span="130-130"];
d119 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(true)", span="131-131"];
d120 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="context.ApplyState(_handlers, _filters)", span="133-133"];
d121 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="_transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="135-135"];
d132 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="var context = CreateContext()", span="141-141"];
d133 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(false)", span="142-142"];
d134 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="context.ApplyState(_handlers, _filters)", span="144-144"];
d135 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="_transaction.Verify(x => x.PersistJob(JobId))", span="146-146"];
d145 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="var context = CreateContext()", span="153-153"];
d148 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="_filters.Add(filter1.Object)", span="158-158"];
d149 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="_filters.Add(filter2.Object)", span="159-159"];
d150 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="filter1.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="161-162"];
d158 [cluster="lambda expression", label="x.OnStateUnapplied(context, _transaction.Object)", span="161-161"];
d151 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="filter2.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="163-164"];
d162 [cluster="lambda expression", label="x.OnStateUnapplied(context, _transaction.Object)", span="163-163"];
d152 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="165-167"];
d153 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="context.ApplyState(_handlers, _filters)", span="170-170"];
d168 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="var context = CreateContext()", span="179-179"];
d171 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="_filters.Add(filter1.Object)", span="184-184"];
d172 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="_filters.Add(filter2.Object)", span="185-185"];
d173 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="filter1.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="187-188"];
d178 [cluster="lambda expression", label="x.OnStateApplied(context, _transaction.Object)", span="187-187"];
d174 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="filter2.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="189-190"];
d182 [cluster="lambda expression", label="x.OnStateApplied(context, _transaction.Object)", span="189-189"];
d175 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="context.ApplyState(_handlers, _filters)", span="193-193"];
d185 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="var context = CreateContext()", span="201-201"];
d187 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Assert.Same(_newStateMock.Object, context.NewState)", span="204-204"];
d188 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Assert.Same(_job, context.Job)", span="205-205"];
d192 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="connectionMock.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="211-211"];
d193 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="return new ApplyStateContext(\r\n                connectionMock.Object,\r\n                new StateContext(JobId, _job),\r\n                _newStateMock.Object,\r\n                OldState);", span="213-217"];
d69 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="74-74"];
d194 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="208-208"];
d191 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="var connectionMock = new Mock<IStorageConnection>()", span="210-210"];
d205 [label=context, span=""];
d80 [cluster="lambda expression", label="Exit lambda expression", span="88-88"];
d81 [cluster="Unk.Unapply", label="Entry Unk.Unapply", span=""];
d84 [cluster="lambda expression", label="Exit lambda expression", span="89-89"];
d33 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="45-45"];
d74 [cluster="lambda expression", label="Exit lambda expression", span="80-80"];
d73 [cluster="lambda expression", label="x.StateName", span="80-80"];
d77 [cluster="lambda expression", label="Exit lambda expression", span="83-83"];
d76 [cluster="lambda expression", label="x.StateName", span="83-83"];
d85 [cluster="lambda expression", label="Entry lambda expression", span="90-90"];
d100 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100"];
d206 [label=context, span=""];
d112 [cluster="lambda expression", label="Exit lambda expression", span="118-118"];
d113 [cluster="Unk.Apply", label="Entry Unk.Apply", span=""];
d116 [cluster="lambda expression", label="Exit lambda expression", span="119-119"];
d103 [cluster="lambda expression", label="Exit lambda expression", span="106-106"];
d102 [cluster="lambda expression", label="x.StateName", span="106-106"];
d107 [cluster="lambda expression", label="Entry lambda expression", span="115-115"];
d106 [cluster="lambda expression", label="Exit lambda expression", span="109-109"];
d105 [cluster="lambda expression", label="x.StateName", span="109-109"];
d0 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="22-22"];
d8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
d15 [cluster="lambda expression", label="Entry lambda expression", span="24-24"];
d9 [cluster="Mock<State>.cstr", label="Entry Mock<State>.cstr", span=""];
d19 [cluster="lambda expression", label="Entry lambda expression", span="26-26"];
d12 [cluster="Mock<IWriteOnlyTransaction>.cstr", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
d13 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d7 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="22-22"];
d14 [cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()", label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
d22 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="35-35"];
d25 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="Assert.Equal(''handlers'', exception.ParamName)", span="42-42"];
d28 [cluster="Unk.>", label="Entry Unk.>", span=""];
d30 [cluster="lambda expression", label="Entry lambda expression", span="40-40"];
d203 [label=context, span=""];
d32 [cluster="lambda expression", label="Exit lambda expression", span="40-40"];
d34 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="46-46"];
d37 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="Assert.Equal(''filters'', exception.ParamName)", span="53-53"];
d39 [cluster="lambda expression", label="Entry lambda expression", span="51-51"];
d204 [label=context, span=""];
d41 [cluster="lambda expression", label="Exit lambda expression", span="51-51"];
d42 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="57-57"];
d49 [cluster="lambda expression", label="Entry lambda expression", span="60-61"];
d51 [cluster="lambda expression", label="Exit lambda expression", span="60-61"];
d52 [cluster="Unk.SetJobState", label="Entry Unk.SetJobState", span=""];
d53 [cluster="lambda expression", label="Entry lambda expression", span="63-63"];
d47 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="57-57"];
d117 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128"];
d124 [cluster="lambda expression", label="Entry lambda expression", span="131-131"];
d122 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128"];
d123 [cluster="Unk.Verify", label="Entry Unk.Verify", span=""];
d127 [cluster="lambda expression", label="Entry lambda expression", span="135-135"];
d131 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139"];
d137 [cluster="lambda expression", label="Entry lambda expression", span="142-142"];
d136 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139"];
d140 [cluster="lambda expression", label="Entry lambda expression", span="146-146"];
d144 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150"];
d146 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="var filter1 = new Mock<IApplyStateFilter>()", span="155-155"];
d147 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="var filter2 = new Mock<IApplyStateFilter>()", span="156-156"];
d156 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d157 [cluster="lambda expression", label="Entry lambda expression", span="161-161"];
d207 [label=context, span=""];
d159 [cluster="lambda expression", label="Exit lambda expression", span="161-161"];
d160 [cluster="Unk.OnStateUnapplied", label="Entry Unk.OnStateUnapplied", span=""];
d161 [cluster="lambda expression", label="Entry lambda expression", span="163-163"];
d163 [cluster="lambda expression", label="Exit lambda expression", span="163-163"];
d164 [cluster="lambda expression", label="Entry lambda expression", span="166-166"];
d154 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150"];
d167 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176"];
d169 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="var filter1 = new Mock<IApplyStateFilter>()", span="181-181"];
d170 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="var filter2 = new Mock<IApplyStateFilter>()", span="182-182"];
d177 [cluster="lambda expression", label="Entry lambda expression", span="187-187"];
d208 [label=context, span=""];
d179 [cluster="lambda expression", label="Exit lambda expression", span="187-187"];
d180 [cluster="Unk.OnStateApplied", label="Entry Unk.OnStateApplied", span=""];
d181 [cluster="lambda expression", label="Entry lambda expression", span="189-189"];
d183 [cluster="lambda expression", label="Exit lambda expression", span="189-189"];
d176 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176"];
d184 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199"];
d186 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Assert.Equal(OldState, context.OldStateName)", span="203-203"];
d190 [cluster="Unk.Same", label="Entry Unk.Same", span=""];
d189 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199"];
d198 [cluster="lambda expression", label="Entry lambda expression", span="211-211"];
d196 [cluster="ApplyStateContext.cstr", label="Entry ApplyStateContext.cstr", span=""];
d197 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
d195 [cluster="Mock<IStorageConnection>.cstr", label="Entry Mock<IStorageConnection>.cstr", span=""];
d87 [cluster="lambda expression", label="Exit lambda expression", span="90-90"];
d86 [cluster="lambda expression", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="90-90"];
d109 [cluster="lambda expression", label="Exit lambda expression", span="115-115"];
d108 [cluster="lambda expression", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="115-115"];
d17 [cluster="lambda expression", label="Exit lambda expression", span="24-24"];
d16 [cluster="lambda expression", label="Console.WriteLine()", span="24-24"];
d21 [cluster="lambda expression", label="Exit lambda expression", span="26-26"];
d20 [cluster="lambda expression", label="x.Name", span="26-26"];
d26 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="35-35"];
d29 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d128 [cluster="lambda expression", label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="135-135"];
d165 [cluster="lambda expression", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="166-166"];
d38 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="46-46"];
d55 [cluster="lambda expression", label="Exit lambda expression", span="63-63"];
d54 [cluster="lambda expression", label="x.Commit()", span="63-63"];
d126 [cluster="lambda expression", label="Exit lambda expression", span="131-131"];
d125 [cluster="lambda expression", label="x.ExpireJobOnApply", span="131-131"];
d129 [cluster="lambda expression", label="Exit lambda expression", span="135-135"];
d139 [cluster="lambda expression", label="Exit lambda expression", span="142-142"];
d138 [cluster="lambda expression", label="x.ExpireJobOnApply", span="142-142"];
d142 [cluster="lambda expression", label="Exit lambda expression", span="146-146"];
d141 [cluster="lambda expression", label="x.PersistJob(JobId)", span="146-146"];
d155 [cluster="Mock<IApplyStateFilter>.cstr", label="Entry Mock<IApplyStateFilter>.cstr", span=""];
d166 [cluster="lambda expression", label="Exit lambda expression", span="166-166"];
d200 [cluster="lambda expression", label="Exit lambda expression", span="211-211"];
d199 [cluster="lambda expression", label="x.CreateWriteTransaction()", span="211-211"];
d18 [cluster="System.Console.WriteLine()", label="Entry System.Console.WriteLine()", span="0-0"];
d130 [cluster="Unk.ExpireJob", label="Entry Unk.ExpireJob", span=""];
d56 [cluster="Unk.Commit", label="Entry Unk.Commit", span=""];
d143 [cluster="Unk.PersistJob", label="Entry Unk.PersistJob", span=""];
d201 [cluster="Unk.CreateWriteTransaction", label="Entry Unk.CreateWriteTransaction", span=""];
m0_13 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="BinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51"];
m0_3 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="BinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29"];
m0_4 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="BinaryExpressionFingerprint.cs", label="BinaryExpressionFingerprint other = obj as BinaryExpressionFingerprint", span="31-31"];
m0_5 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="BinaryExpressionFingerprint.cs", label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="32-34"];
m0_6 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="BinaryExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29"];
m0_8 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="BinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m0_7 [cluster="object.Equals(object, object)", file="BinaryExpressionFingerprint.cs", label="Entry object.Equals(object, object)", span="0-0"];
m0_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24"];
m0_9 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37"];
m0_10 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs", label="combiner.AddObject(Method)", span="39-39"];
m0_11 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs", label="base.AddToHashCodeCombiner(combiner)", span="40-40"];
m0_12 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37"];
m0_0 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="BinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17"];
m0_1 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="BinaryExpressionFingerprint.cs", label="Method = method", span="23-23"];
m0_2 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="BinaryExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17"];
m0_15 [file="BinaryExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", span=""];
m2_0 [cluster="HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.ConditionalExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.ConditionalExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m2_1 [cluster="HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.ConditionalExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.ConditionalExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m2_6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m2_2 [cluster="HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.Equals(object)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.Equals(object)", span="23-23"];
m2_3 [cluster="HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.Equals(object)", file="ConditionalExpressionFingerprint.cs", label="ConditionalExpressionFingerprint other = obj as ConditionalExpressionFingerprint", span="25-25"];
m2_4 [cluster="HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.Equals(object)", file="ConditionalExpressionFingerprint.cs", label="return (other != null)\r\n                   && this.Equals(other);", span="26-27"];
m2_5 [cluster="HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.Equals(object)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint.Equals(object)", span="23-23"];
m2_7 [file="ConditionalExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint", span=""];
m3_0 [cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.ConstantExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="ConstantExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.ConstantExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="21-21"];
m3_1 [cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.ConstantExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="ConstantExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.ConstantExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="21-21"];
m3_2 [cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", file="ConstantExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", span="28-28"];
m3_3 [cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", file="ConstantExpressionFingerprint.cs", label="ConstantExpressionFingerprint other = obj as ConstantExpressionFingerprint", span="30-30"];
m3_4 [cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", file="ConstantExpressionFingerprint.cs", label="return (other != null)\r\n                   && this.Equals(other);", span="31-32"];
m3_5 [cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", file="ConstantExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", span="28-28"];
m3_6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ConstantExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m3_7 [file="ConstantExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint", span=""];
m5_6 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="27-27"];
m5_7 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="27-27"];
m5_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="26-26"];
m5_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="26-26"];
m5_0 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24"];
m5_1 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24"];
m5_22 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m5_23 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m5_26 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45"];
m5_27 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45"];
m5_2 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25"];
m5_3 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25"];
m5_18 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39"];
m5_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39"];
m5_28 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m5_29 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m5_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30"];
m5_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30"];
m5_30 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48"];
m5_31 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48"];
m5_10 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m5_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m5_20 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40"];
m5_21 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40"];
m5_14 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m5_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m5_12 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34"];
m5_13 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34"];
m5_16 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36"];
m5_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36"];
m5_24 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m5_25 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="ElectStateContext.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m6_12 [cluster="Mock<JobStorage>.cstr", file="ElectStateContextFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m6_99 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", span="108-108"];
m6_100 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", file="ElectStateContextFacts.cs", label="var manager = CreateManager()", span="110-110"];
m6_101 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", file="ElectStateContextFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => manager.RemoveIfExists(null))", span="112-113"];
m6_102 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", file="ElectStateContextFacts.cs", label="Exit HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", span="108-108"];
m6_19 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="21-21"];
m6_48 [cluster="HangFire.Server.JobServer.RunServer()", file="ElectStateContextFacts.cs", label="StopServer()", span="95-95"];
m6_127 [cluster="RecurringJobManager.cstr", file="ElectStateContextFacts.cs", label="Entry RecurringJobManager.cstr", span=""];
m6_44 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.CreateManager()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.CreateManager()", span="128-128"];
m6_45 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="47-47"];
m6_46 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="manager.AddOrUpdate(null, _job, Cron.Daily())", span="47-47"];
m6_47 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="47-47"];
m6_49 [cluster="HangFire.RecurringJobManager.AddOrUpdate(string, HangFire.Common.Job, string)", file="ElectStateContextFacts.cs", label="Entry HangFire.RecurringJobManager.AddOrUpdate(string, HangFire.Common.Job, string)", span="40-40"];
m6_51 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", file="ElectStateContextFacts.cs", label="var manager = CreateManager()", span="55-55"];
m6_50 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", span="53-53"];
m6_52 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="ElectStateContextFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => manager.AddOrUpdate(_id, null, Cron.Daily()))", span="57-58"];
m6_85 [cluster="HangFire.Server.JobServer.RemoveServer()", color=green, community=0, file="ElectStateContextFacts.cs", label="0: transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="139-141"];
m6_16 [cluster="string.Format(string, object, object)", file="ElectStateContextFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_90 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_CommitsTransaction()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_CommitsTransaction()", span="98-98"];
m6_91 [cluster="Unk.RemoveItemFromSet", color=red, community=0, file="ElectStateContextFacts.cs", label="0: Entry Unk.RemoveItemFromSet", span=""];
m6_92 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="139-141"];
m6_93 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="0: x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="139-141"];
m6_94 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="139-141"];
m6_22 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.GetConnection()", span="26-26"];
m6_23 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="26-26"];
m6_24 [cluster="Unk.GetConnection", file="ElectStateContextFacts.cs", label="Entry Unk.GetConnection", span=""];
m6_25 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="29-29"];
m6_34 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="ElectStateContextFacts.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m6_21 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="26-26"];
m6_17 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="21-21"];
m6_71 [cluster="Unk.Verify", file="ElectStateContextFacts.cs", label="Entry Unk.Verify", span=""];
m6_11 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ElectStateContextFacts.cs", label="Exit HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="25-25"];
m6_75 [cluster="Unk.AddToSet", file="ElectStateContextFacts.cs", label="Entry Unk.AddToSet", span=""];
m6_84 [cluster="HangFire.Server.JobServer.RemoveServer()", color=green, community=0, file="ElectStateContextFacts.cs", label="0: transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="135-137"];
m6_78 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", color=red, community=0, file="ElectStateContextFacts.cs", label="0: manager.AddOrUpdate(_id, _job, _cronExpression)", span="89-89"];
m6_95 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="104-104"];
m6_33 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", file="ElectStateContextFacts.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", span="24-24"];
m6_77 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", file="ElectStateContextFacts.cs", label="var manager = CreateManager()", span="87-87"];
m6_13 [cluster="Mock<IStorageConnection>.cstr", file="ElectStateContextFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m6_15 [cluster="Unk.Returns", file="ElectStateContextFacts.cs", label="Entry Unk.Returns", span=""];
m6_26 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.CreateWriteTransaction()", span="29-29"];
m6_0 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", span="18-18"];
m6_3 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", color=green, community=0, file="ElectStateContextFacts.cs", label="0: _cronExpression = Cron.Minutely()", span="22-22"];
m6_1 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", color=red, community=0, file="ElectStateContextFacts.cs", label="0: _id = ''recurring-job-id''", span="20-20"];
m6_4 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="ElectStateContextFacts.cs", label="_storage = new Mock<JobStorage>()", span="23-23"];
m6_5 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="ElectStateContextFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="25-25"];
m6_7 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="ElectStateContextFacts.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="28-28"];
m6_8 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="ElectStateContextFacts.cs", label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="29-29"];
m6_2 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", color=red, community=0, file="ElectStateContextFacts.cs", label="0: _job = Job.FromExpression(() => Method())", span="21-21"];
m6_6 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="ElectStateContextFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="26-26"];
m6_9 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="ElectStateContextFacts.cs", label="Exit HangFire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", span="18-18"];
m6_10 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContextFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m6_121 [cluster="Unk.RemoveHash", file="ElectStateContextFacts.cs", label="Entry Unk.RemoveHash", span=""];
m6_66 [cluster="Unk.QueueCommand", file="ElectStateContextFacts.cs", label="Entry Unk.QueueCommand", span=""];
m6_67 [cluster="Unk.Commit", file="ElectStateContextFacts.cs", label="Entry Unk.Commit", span=""];
m6_68 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", file="ElectStateContextFacts.cs", label="manager.AddOrUpdate(_id, _job, _cronExpression)", span="79-79"];
m6_69 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="108-109"];
m6_70 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", file="ElectStateContextFacts.cs", label="Exit HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", span="75-75"];
m6_35 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="36-36"];
m6_37 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="36-36"];
m6_38 [cluster="HangFire.RecurringJobManager.RecurringJobManager(HangFire.JobStorage)", file="ElectStateContextFacts.cs", label="Entry HangFire.RecurringJobManager.RecurringJobManager(HangFire.JobStorage)", span="33-33"];
m6_39 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", span="42-42"];
m6_40 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", file="ElectStateContextFacts.cs", label="var manager = CreateManager()", span="44-44"];
m6_41 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => manager.AddOrUpdate(null, _job, Cron.Daily()))", span="46-47"];
m6_76 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", span="85-85"];
m6_14 [cluster="System.TimeSpan.Duration()", file="ElectStateContextFacts.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m6_42 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", file="ElectStateContextFacts.cs", label="Assert.Equal(''recurringJobId'', exception.ParamName)", span="49-49"];
m6_53 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="ElectStateContextFacts.cs", label="0: Assert.Equal(''job'', exception.ParamName)", span="60-60"];
m6_59 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", color=green, community=0, file="ElectStateContextFacts.cs", label="0: var manager = CreateManager()", span="66-66"];
m6_57 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="58-58"];
m6_58 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", span="64-64"];
m6_60 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => manager.AddOrUpdate(_id, _job, null))", span="68-69"];
m6_62 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", file="ElectStateContextFacts.cs", label="Exit HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", span="64-64"];
m6_63 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="69-69"];
m6_61 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", file="ElectStateContextFacts.cs", label="Assert.Equal(''cronExpression'', exception.ParamName)", span="71-71"];
m6_64 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="manager.AddOrUpdate(_id, _job, null)", span="69-69"];
m6_18 [cluster="lambda expression", color=red, community=0, file="ElectStateContextFacts.cs", label="0: Method()", span="21-21"];
m6_56 [cluster="lambda expression", color=red, community=0, file="ElectStateContextFacts.cs", label="0: manager.AddOrUpdate(_id, null, Cron.Daily())", span="58-58"];
m6_80 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="122-124"];
m6_79 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", file="ElectStateContextFacts.cs", label="_transaction.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', _id),\r\n                It.Is<Dictionary<string, string>>(rj => \r\n                    rj[''Cron''] == ''* * * * *'' && !String.IsNullOrEmpty(rj[''Job'']))))", span="91-94"];
m6_28 [cluster="Unk.CreateWriteTransaction", file="ElectStateContextFacts.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m6_29 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="33-33"];
m6_30 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RecurringJobManager(null))", span="35-36"];
m6_31 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ElectStateContextFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="38-38"];
m6_32 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ElectStateContextFacts.cs", label="Exit HangFire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="33-33"];
m6_27 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="29-29"];
m6_36 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="ElectStateContextFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="8-8"];
m6_55 [cluster="HangFire.Server.JobServer.RemoveServer()", file="ElectStateContextFacts.cs", label="Entry HangFire.Server.JobServer.RemoveServer()", span="131-131"];
m6_65 [cluster="Unk.CreateTransaction", file="ElectStateContextFacts.cs", label="Entry Unk.CreateTransaction", span=""];
m6_72 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="81-81"];
m6_73 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="0: x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="111-117"];
m6_74 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="81-81"];
m6_81 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName)", span="122-124"];
m6_82 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="122-124"];
m6_83 [cluster="HangFire.Server.JobServer.RemoveServer()", color=green, community=0, file="ElectStateContextFacts.cs", label="0: var transaction = _redis.CreateTransaction()", span="133-133"];
m6_86 [cluster="HangFire.Server.JobServer.RemoveServer()", color=green, community=0, file="ElectStateContextFacts.cs", label="0: transaction.Commit()", span="143-143"];
m6_87 [cluster="HangFire.Server.JobServer.RemoveServer()", file="ElectStateContextFacts.cs", label="Exit HangFire.Server.JobServer.RemoveServer()", span="131-131"];
m6_88 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="135-137"];
m6_96 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="HangFire.Server.JobServer", span=""];
m6_97 [cluster="lambda expression", file="ElectStateContextFacts.cs", label=queueName, span=""];
m6_104 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="manager.RemoveIfExists(null)", span="113-113"];
m6_103 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="113-113"];
m6_105 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="113-113"];
m6_114 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="123-123"];
m6_118 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="124-124"];
m6_122 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="125-125"];
m6_115 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.RemoveFromSet(''recurring-jobs'', _id)", span="123-123"];
m6_116 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="123-123"];
m6_119 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.RemoveHash(String.Format(''recurring-job:{0}'', _id))", span="124-124"];
m6_120 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="124-124"];
m6_123 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.Commit()", span="125-125"];
m6_124 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="125-125"];
m6_89 [cluster="Unk.IsNullOrEmpty", color=green, community=0, file="ElectStateContextFacts.cs", label="0: Entry Unk.IsNullOrEmpty", span=""];
m6_20 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="ElectStateContextFacts.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m6_128 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.Method()", file="ElectStateContextFacts.cs", label="Exit HangFire.Core.Tests.RecurringJobManagerFacts.Method()", span="133-133"];
m6_43 [cluster="HangFire.Server.JobManager.Dispose()", file="ElectStateContextFacts.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="44-44"];
m6_98 [cluster="Unk.Commit", file="ElectStateContextFacts.cs", label="Entry Unk.Commit", span=""];
m6_107 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", span="117-117"];
m6_108 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="ElectStateContextFacts.cs", label="var manager = CreateManager()", span="119-119"];
m6_109 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="ElectStateContextFacts.cs", label="manager.RemoveIfExists(_id)", span="121-121"];
m6_110 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="ElectStateContextFacts.cs", label="_transaction.Verify(x => x.RemoveFromSet(''recurring-jobs'', _id))", span="123-123"];
m6_111 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="ElectStateContextFacts.cs", label="_transaction.Verify(x => x.RemoveHash(String.Format(''recurring-job:{0}'', _id)))", span="124-124"];
m6_112 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="ElectStateContextFacts.cs", label="_transaction.Verify(x => x.Commit())", span="125-125"];
m6_113 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="ElectStateContextFacts.cs", label="Exit HangFire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", span="117-117"];
m6_54 [cluster="System.Threading.WaitHandle.WaitOne()", file="ElectStateContextFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m6_117 [cluster="Unk.RemoveFromSet", file="ElectStateContextFacts.cs", label="Entry Unk.RemoveFromSet", span=""];
m6_125 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.CreateManager()", file="ElectStateContextFacts.cs", label="return new RecurringJobManager(_storage.Object);", span="130-130"];
m6_126 [cluster="HangFire.Core.Tests.RecurringJobManagerFacts.CreateManager()", file="ElectStateContextFacts.cs", label="Exit HangFire.Core.Tests.RecurringJobManagerFacts.CreateManager()", span="128-128"];
m6_106 [cluster="HangFire.RecurringJobManager.RemoveIfExists(string)", file="ElectStateContextFacts.cs", label="Entry HangFire.RecurringJobManager.RemoveIfExists(string)", span="72-72"];
m6_129 [file="ElectStateContextFacts.cs", label="HangFire.Core.Tests.RecurringJobManagerFacts", span=""];
m6_130 [file="ElectStateContextFacts.cs", label=manager, span=""];
m6_131 [file="ElectStateContextFacts.cs", label=manager, span=""];
m6_132 [file="ElectStateContextFacts.cs", label=manager, span=""];
m6_133 [file="ElectStateContextFacts.cs", label=manager, span=""];
m7_110 [cluster="Unk.OnClientException", file="EnqueuedState.cs", label="Entry Unk.OnClientException", span=""];
m7_15 [cluster="Mock<IState>.cstr", file="EnqueuedState.cs", label="Entry Mock<IState>.cstr", span=""];
m7_200 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", span="218-218"];
m7_201 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var filter = new Mock<IClientFilter>()", span="221-221"];
m7_202 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="_filters.Add(filter.Object)", span="222-222"];
m7_203 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="224-225"];
m7_208 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="239-239"];
m7_204 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="227-227"];
m7_205 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var jobId = process.Run(_context.Object)", span="230-230"];
m7_206 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="Assert.Null(jobId)", span="233-233"];
m7_207 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="_innerProcess.Verify(\r\n                x => x.Run(It.IsAny<CreateContext>()), \r\n                Times.Never)", span="235-237"];
m7_209 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", span="218-218"];
m7_26 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="381-381"];
m7_363 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="381-381"];
m7_44 [cluster="Unk.Equal", file="EnqueuedState.cs", label="Entry Unk.Equal", span=""];
m7_75 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", span="84-84"];
m7_76 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="86-86"];
m7_77 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="EnqueuedState.cs", label="var result = process.Run(_context.Object)", span="88-88"];
m7_78 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="EnqueuedState.cs", label="Assert.Equal(JobId, result)", span="90-90"];
m7_79 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", span="84-84"];
m7_311 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", span="334-334"];
m7_312 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var filter = new Mock<IClientFilter>()", span="337-337"];
m7_313 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="_filters.Add(filter.Object)", span="338-338"];
m7_316 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="344-345"];
m7_314 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var exception = new InvalidOperationException()", span="340-340"];
m7_315 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws(exception)", span="341-342"];
m7_317 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="347-347"];
m7_318 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var jobId = process.Run(_context.Object)", span="350-350"];
m7_319 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="Assert.Null(jobId)", span="353-353"];
m7_320 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", span="334-334"];
m7_222 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="243-243"];
m7_223 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="var outerFilter = new Mock<IClientFilter>()", span="246-246"];
m7_224 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="var innerFilter = new Mock<IClientFilter>()", span="247-247"];
m7_225 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="_filters.Add(outerFilter.Object)", span="249-249"];
m7_230 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="261-261"];
m7_226 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="_filters.Add(innerFilter.Object)", span="250-250"];
m7_227 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="252-253"];
m7_228 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="255-255"];
m7_229 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="258-258"];
m7_231 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="243-243"];
m7_16 [cluster="Mock<CreateContext>.cstr", file="EnqueuedState.cs", label="Entry Mock<CreateContext>.cstr", span=""];
m7_333 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="357-357"];
m7_334 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="var outerFilter = new Mock<IClientFilter>()", span="360-360"];
m7_335 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="var innerFilter = new Mock<IClientFilter>()", span="361-361"];
m7_336 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="_filters.Add(outerFilter.Object)", span="363-363"];
m7_342 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="378-378"];
m7_337 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="_filters.Add(innerFilter.Object)", span="364-364"];
m7_339 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="369-370"];
m7_338 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="366-367"];
m7_340 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="372-372"];
m7_341 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="375-375"];
m7_343 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="357-357"];
m7_22 [cluster="Mock<IJobCreationProcess>.cstr", file="EnqueuedState.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m7_344 [cluster="Unk.DoesNotThrow", file="EnqueuedState.cs", label="Entry Unk.DoesNotThrow", span=""];
m7_39 [cluster="Unk.Run", file="EnqueuedState.cs", label="Entry Unk.Run", span=""];
m7_49 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", span="52-52"];
m7_50 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="EnqueuedState.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new JobCreationProcess(_filterProvider.Object, null))", span="54-55"];
m7_51 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="EnqueuedState.cs", label="Assert.Equal(''innerProcess'', exception.ParamName)", span="57-57"];
m7_52 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", span="52-52"];
m7_274 [cluster="System.InvalidOperationException.InvalidOperationException()", file="EnqueuedState.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m7_30 [cluster="Unk.>", file="EnqueuedState.cs", label="Entry Unk.>", span=""];
m7_99 [cluster="Mock<IClientExceptionFilter>.cstr", file="EnqueuedState.cs", label="Entry Mock<IClientExceptionFilter>.cstr", span=""];
m7_40 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenFilterProviderIsNull()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenFilterProviderIsNull()", span="43-43"];
m7_41 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenFilterProviderIsNull()", file="EnqueuedState.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new JobCreationProcess(null, _innerProcess.Object))", span="45-46"];
m7_42 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenFilterProviderIsNull()", file="EnqueuedState.cs", label="Assert.Equal(''filterProvider'', exception.ParamName)", span="48-48"];
m7_43 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenFilterProviderIsNull()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenFilterProviderIsNull()", span="43-43"];
m7_61 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="385-385"];
m7_364 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="EnqueuedState.cs", label="return new JobCreationProcess(_filterProvider.Object, _innerProcess.Object);", span="387-387"];
m7_365 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="385-385"];
m7_176 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="195-195"];
m7_177 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="var outerFilter = new Mock<IClientFilter>()", span="198-198"];
m7_178 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="var innerFilter = new Mock<IClientFilter>()", span="199-199"];
m7_179 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="_filters.Add(outerFilter.Object)", span="201-201"];
m7_181 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="204-204"];
m7_184 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="207-207"];
m7_180 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="_filters.Add(innerFilter.Object)", span="202-202"];
m7_182 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="205-205"];
m7_183 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="206-206"];
m7_185 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="209-209"];
m7_186 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="212-212"];
m7_187 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="195-195"];
m7_175 [cluster="Unk.OnCreated", file="EnqueuedState.cs", label="Entry Unk.OnCreated", span=""];
m7_91 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="105-105"];
m7_92 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="EnqueuedState.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="108-108"];
m7_93 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="EnqueuedState.cs", label="_filters.Add(filter.Object)", span="109-109"];
m7_97 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="EnqueuedState.cs", label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="121-122"];
m7_94 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="EnqueuedState.cs", label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="111-112"];
m7_95 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="114-114"];
m7_96 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="EnqueuedState.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="117-118"];
m7_98 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="105-105"];
m7_265 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="289-289"];
m7_266 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="EnqueuedState.cs", label="var filter = new Mock<IClientFilter>()", span="292-292"];
m7_267 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="EnqueuedState.cs", label="_filters.Add(filter.Object)", span="293-293"];
m7_272 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="EnqueuedState.cs", label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="306-307"];
m7_268 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="EnqueuedState.cs", label="var exception = new InvalidOperationException()", span="295-295"];
m7_269 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="EnqueuedState.cs", label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws(exception)", span="296-297"];
m7_270 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="299-299"];
m7_271 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="EnqueuedState.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="302-303"];
m7_273 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="289-289"];
m7_288 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311"];
m7_289 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="var outerFilter = new Mock<IClientFilter>()", span="314-314"];
m7_290 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="var innerFilter = new Mock<IClientFilter>()", span="315-315"];
m7_291 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="_filters.Add(outerFilter.Object)", span="317-317"];
m7_297 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="330-330"];
m7_292 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="_filters.Add(innerFilter.Object)", span="318-318"];
m7_293 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="var exception = new InvalidOperationException()", span="320-320"];
m7_294 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws(exception)", span="321-322"];
m7_295 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="324-324"];
m7_296 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="327-328"];
m7_298 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311"];
m7_18 [cluster="Mock<IJobFilterProvider>.cstr", file="EnqueuedState.cs", label="Entry Mock<IJobFilterProvider>.cstr", span=""];
m7_100 [cluster="Unk.Add", file="EnqueuedState.cs", label="Entry Unk.Add", span=""];
m7_0 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="21-21"];
m7_1 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="var storage = new Mock<JobStorage>()", span="23-23"];
m7_2 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="var connection = new Mock<IStorageConnection>()", span="24-24"];
m7_5 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="_context = new Mock<CreateContext>(storage.Object, connection.Object, job, state.Object)\r\n            {\r\n                CallBase = true\r\n            }", span="28-31"];
m7_3 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="var job = Job.FromExpression(() => TestMethod())", span="25-25"];
m7_4 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="var state = new Mock<IState>()", span="26-26"];
m7_6 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="_filters = new List<object>()", span="33-33"];
m7_7 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="_filterProvider = new Mock<IJobFilterProvider>()", span="34-34"];
m7_8 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="_filterProvider.Setup(x => x.GetFilters(It.IsNotNull<Job>())).Returns(\r\n                _filters.Select(f => new JobFilter(f, JobFilterScope.Type, null)))", span="35-36"];
m7_9 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="_innerProcess = new Mock<IJobCreationProcess>()", span="38-38"];
m7_10 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="_innerProcess.Setup(x => x.Run((_context.Object))).Returns(JobId)", span="39-39"];
m7_11 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="21-21"];
m7_122 [cluster="Unk.InSequence", file="EnqueuedState.cs", label="Entry Unk.InSequence", span=""];
m7_244 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="265-265"];
m7_245 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="EnqueuedState.cs", label="var filter = new Mock<IClientFilter>()", span="268-268"];
m7_246 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="EnqueuedState.cs", label="_filters.Add(filter.Object)", span="269-269"];
m7_247 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="EnqueuedState.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="271-272"];
m7_251 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="EnqueuedState.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="285-285"];
m7_248 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="274-274"];
m7_249 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="EnqueuedState.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="277-278"];
m7_250 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="EnqueuedState.cs", label="_innerProcess.Verify(\r\n                x => x.Run(It.IsAny<CreateContext>()), \r\n                Times.Never)", span="281-283"];
m7_252 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="265-265"];
m7_48 [cluster="JobCreationProcess.cstr", file="EnqueuedState.cs", label="Entry JobCreationProcess.cstr", span=""];
m7_65 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="EnqueuedState.cs", label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="51-51"];
m7_19 [cluster="Unk.Setup", file="EnqueuedState.cs", label="Entry Unk.Setup", span=""];
m7_275 [cluster="Unk.Throws", file="EnqueuedState.cs", label="Entry Unk.Throws", span=""];
m7_145 [cluster="Unk.Null", file="EnqueuedState.cs", label="Entry Unk.Null", span=""];
m7_111 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="126-126"];
m7_112 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="var filter1 = new Mock<IClientExceptionFilter>()", span="129-129"];
m7_113 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="var filter2 = new Mock<IClientExceptionFilter>()", span="130-130"];
m7_115 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="133-133"];
m7_116 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="_filters.Add(filter1.Object)", span="135-135"];
m7_114 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="132-132"];
m7_117 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="_filters.Add(filter2.Object)", span="136-136"];
m7_118 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="_innerProcess\r\n                .Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="138-140"];
m7_119 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="142-142"];
m7_120 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="145-146"];
m7_121 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="126-126"];
m7_360 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="378-378"];
m7_23 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="25-25"];
m7_27 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="35-35"];
m7_32 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="36-36"];
m7_36 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="39-39"];
m7_24 [cluster="lambda expression", file="EnqueuedState.cs", label="TestMethod()", span="25-25"];
m7_25 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="25-25"];
m7_28 [cluster="lambda expression", file="EnqueuedState.cs", label="x.GetFilters(It.IsNotNull<Job>())", span="35-35"];
m7_29 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="35-35"];
m7_33 [cluster="lambda expression", file="EnqueuedState.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="36-36"];
m7_34 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="36-36"];
m7_37 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run((_context.Object))", span="39-39"];
m7_38 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="39-39"];
m7_45 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="46-46"];
m7_46 [cluster="lambda expression", file="EnqueuedState.cs", label="new JobCreationProcess(null, _innerProcess.Object)", span="46-46"];
m7_47 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="46-46"];
m7_53 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="55-55"];
m7_54 [cluster="lambda expression", file="EnqueuedState.cs", label="new JobCreationProcess(_filterProvider.Object, null)", span="55-55"];
m7_55 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="55-55"];
m7_63 [cluster="lambda expression", file="EnqueuedState.cs", label="process.Run(null)", span="66-66"];
m7_62 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="66-66"];
m7_64 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="66-66"];
m7_72 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="79-79"];
m7_73 [cluster="lambda expression", color=red, community=0, file="EnqueuedState.cs", label="0: x.Run(_context.Object)", span="79-79"];
m7_74 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="79-79"];
m7_85 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="96-96"];
m7_89 [cluster="lambda expression", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="101-101"];
m7_88 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="101-101"];
m7_86 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="96-96"];
m7_87 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="96-96"];
m7_90 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="101-101"];
m7_101 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="111-111"];
m7_105 [cluster="lambda expression", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="118-118"];
m7_104 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="118-118"];
m7_107 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="121-122"];
m7_102 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="111-111"];
m7_103 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="111-111"];
m7_106 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="118-118"];
m7_108 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="121-122"];
m7_109 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="121-122"];
m7_123 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="132-132"];
m7_126 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="133-133"];
m7_129 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="139-139"];
m7_133 [cluster="lambda expression", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="146-146"];
m7_132 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="146-146"];
m7_124 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="132-132"];
m7_125 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="132-132"];
m7_127 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="133-133"];
m7_128 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="133-133"];
m7_130 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="139-139"];
m7_131 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="139-139"];
m7_134 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="146-146"];
m7_146 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="155-155"];
m7_149 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="159-159"];
m7_152 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="160-160"];
m7_147 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="155-155"];
m7_148 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="155-155"];
m7_150 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="159-159"];
m7_151 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="159-159"];
m7_153 [cluster="lambda expression", file="EnqueuedState.cs", label="x.ExceptionHandled = true", span="160-160"];
m7_154 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="160-160"];
m7_165 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="179-179"];
m7_169 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="181-181"];
m7_172 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="184-184"];
m7_166 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="179-179"];
m7_167 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="179-179"];
m7_170 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="181-181"];
m7_171 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="181-181"];
m7_173 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="184-184"];
m7_174 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="184-184"];
m7_188 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="204-204"];
m7_191 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="205-205"];
m7_194 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="206-206"];
m7_197 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="207-207"];
m7_189 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="204-204"];
m7_190 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="204-204"];
m7_192 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="205-205"];
m7_193 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="205-205"];
m7_195 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="206-206"];
m7_196 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="206-206"];
m7_198 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="207-207"];
m7_199 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="207-207"];
m7_210 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="224-224"];
m7_213 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="225-225"];
m7_216 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="236-236"];
m7_219 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="239-239"];
m7_211 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="224-224"];
m7_212 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="224-224"];
m7_214 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Canceled = true", span="225-225"];
m7_215 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="225-225"];
m7_217 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="236-236"];
m7_218 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="236-236"];
m7_220 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="239-239"];
m7_221 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="239-239"];
m7_232 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="252-252"];
m7_235 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="253-253"];
m7_238 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="261-261"];
m7_233 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="252-252"];
m7_234 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="252-252"];
m7_236 [cluster="lambda expression", file="EnqueuedState.cs", label="context.Canceled = true", span="253-253"];
m7_237 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="253-253"];
m7_239 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="261-261"];
m7_240 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="261-261"];
m7_241 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="261-261"];
m7_242 [cluster="lambda expression", file="EnqueuedState.cs", label="context.Canceled", span="261-261"];
m7_243 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="261-261"];
m7_253 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="271-271"];
m7_257 [cluster="lambda expression", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="278-278"];
m7_256 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="278-278"];
m7_259 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="282-282"];
m7_262 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="285-285"];
m7_254 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="271-271"];
m7_255 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="271-271"];
m7_258 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="278-278"];
m7_260 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="282-282"];
m7_261 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="282-282"];
m7_263 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="285-285"];
m7_264 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="285-285"];
m7_283 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="306-307"];
m7_286 [cluster="lambda expression", file="EnqueuedState.cs", label="context.Exception == exception", span="307-307"];
m7_276 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="296-296"];
m7_280 [cluster="lambda expression", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="303-303"];
m7_279 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="303-303"];
m7_282 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="306-307"];
m7_277 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="296-296"];
m7_278 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="296-296"];
m7_281 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="303-303"];
m7_284 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="306-307"];
m7_285 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="307-307"];
m7_287 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="307-307"];
m7_306 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="330-330"];
m7_309 [cluster="lambda expression", file="EnqueuedState.cs", label="context.Exception == exception", span="330-330"];
m7_299 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="321-321"];
m7_303 [cluster="lambda expression", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="328-328"];
m7_302 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="328-328"];
m7_305 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="330-330"];
m7_300 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="321-321"];
m7_301 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="321-321"];
m7_304 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="328-328"];
m7_307 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="330-330"];
m7_308 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="330-330"];
m7_310 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="330-330"];
m7_325 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="344-344"];
m7_328 [cluster="lambda expression", file="EnqueuedState.cs", label="context.Exception == exception", span="344-344"];
m7_321 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="341-341"];
m7_324 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="344-344"];
m7_330 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="345-345"];
m7_322 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="341-341"];
m7_323 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="341-341"];
m7_326 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="344-344"];
m7_327 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="344-344"];
m7_329 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="344-344"];
m7_331 [cluster="lambda expression", file="EnqueuedState.cs", label="x.ExceptionHandled = true", span="345-345"];
m7_332 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="345-345"];
m7_345 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="366-366"];
m7_348 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="369-369"];
m7_351 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="370-370"];
m7_355 [cluster="lambda expression", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="375-375"];
m7_354 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="375-375"];
m7_357 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="378-378"];
m7_346 [cluster="lambda expression", file="EnqueuedState.cs", label="x.Run(It.IsAny<CreateContext>())", span="366-366"];
m7_347 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="366-366"];
m7_349 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="369-369"];
m7_350 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="369-369"];
m7_352 [cluster="lambda expression", file="EnqueuedState.cs", label="x.ExceptionHandled = true", span="370-370"];
m7_353 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="370-370"];
m7_356 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="375-375"];
m7_358 [cluster="lambda expression", file="EnqueuedState.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="378-378"];
m7_359 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="378-378"];
m7_361 [cluster="lambda expression", file="EnqueuedState.cs", label="context.Exception != null", span="378-378"];
m7_362 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="378-378"];
m7_20 [cluster="Unk.Select", file="EnqueuedState.cs", label="Entry Unk.Select", span=""];
m7_71 [cluster="Unk.Verify", file="EnqueuedState.cs", label="Entry Unk.Verify", span=""];
m7_135 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", span="152-152"];
m7_136 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="155-156"];
m7_137 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="158-158"];
m7_138 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="159-160"];
m7_139 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="_filters.Add(filter.Object)", span="162-162"];
m7_140 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="164-164"];
m7_141 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="var jobId = process.Run(_context.Object)", span="167-167"];
m7_142 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="Assert.Null(jobId)", span="169-169"];
m7_143 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", span="152-152"];
m7_80 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="94-94"];
m7_81 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="EnqueuedState.cs", label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="96-97"];
m7_82 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="99-99"];
m7_83 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="EnqueuedState.cs", label="Assert.Throws<InvalidOperationException>(() => process.Run(_context.Object))", span="101-101"];
m7_84 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="94-94"];
m7_168 [cluster="Unk.OnCreating", file="EnqueuedState.cs", label="Entry Unk.OnCreating", span=""];
m7_56 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="61-61"];
m7_57 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="63-63"];
m7_58 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="EnqueuedState.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="65-66"];
m7_59 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="EnqueuedState.cs", label="Assert.Equal(''context'', exception.ParamName)", span="68-68"];
m7_60 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="61-61"];
m7_66 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", span="72-72"];
m7_67 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="74-74"];
m7_68 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="76-76"];
m7_69 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", color=red, community=0, file="EnqueuedState.cs", label="0: _innerProcess.Verify(\r\n                x => x.Run(_context.Object), \r\n                Times.Once)", span="78-80"];
m7_70 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", span="72-72"];
m7_144 [cluster="Unk.Callback", file="EnqueuedState.cs", label="Entry Unk.Callback", span=""];
m7_155 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="EnqueuedState.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="173-173"];
m7_156 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="EnqueuedState.cs", label="var filter = new Mock<IClientFilter>()", span="176-176"];
m7_157 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="EnqueuedState.cs", label="_filters.Add(filter.Object)", span="177-177"];
m7_158 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="EnqueuedState.cs", label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="179-179"];
m7_160 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="EnqueuedState.cs", label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="184-184"];
m7_159 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="EnqueuedState.cs", label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .InSequence()", span="181-182"];
m7_161 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="EnqueuedState.cs", label="var process = CreateProcess()", span="186-186"];
m7_162 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="EnqueuedState.cs", label="process.Run(_context.Object)", span="189-189"];
m7_163 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="EnqueuedState.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="173-173"];
m7_21 [cluster="Unk.Returns", file="EnqueuedState.cs", label="Entry Unk.Returns", span=""];
m7_35 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="EnqueuedState.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m7_164 [cluster="Mock<IClientFilter>.cstr", file="EnqueuedState.cs", label="Entry Mock<IClientFilter>.cstr", span=""];
m7_13 [cluster="Mock<IStorageConnection>.cstr", file="EnqueuedState.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m7_12 [cluster="Mock<JobStorage>.cstr", file="EnqueuedState.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m7_14 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedState.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187"];
m7_31 [cluster="Unk.GetFilters", file="EnqueuedState.cs", label="Entry Unk.GetFilters", span=""];
m7_366 [file="EnqueuedState.cs", label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", span=""];
m7_367 [file="EnqueuedState.cs", label=process, span=""];
m7_368 [file="EnqueuedState.cs", label=process, span=""];
m7_369 [file="EnqueuedState.cs", label=process, span=""];
m7_370 [file="EnqueuedState.cs", label=process, span=""];
m7_371 [file="EnqueuedState.cs", label=process, span=""];
m7_372 [file="EnqueuedState.cs", label=process, span=""];
m7_373 [file="EnqueuedState.cs", label=exception, span=""];
m7_374 [file="EnqueuedState.cs", label=process, span=""];
m7_375 [file="EnqueuedState.cs", label=exception, span=""];
m7_376 [file="EnqueuedState.cs", label=exception, span=""];
m7_377 [file="EnqueuedState.cs", label=process, span=""];
m8_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnqueuedStateHandlerFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_18 [cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", file="EnqueuedStateHandlerFacts.cs", label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0"];
m8_19 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="EnqueuedStateHandlerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", span="47-47"];
m8_20 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="EnqueuedStateHandlerFacts.cs", label=_syncRoot, span="49-49"];
m8_21 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="EnqueuedStateHandlerFacts.cs", label="_storage.UseConnection(null, connection =>\r\n                {\r\n                    connection.Execute(\r\n                        $''delete from {_storage.SchemaName}.JobQueue where Id = @id'',\r\n                        new { id = Id },\r\n                        commandTimeout: _storage.CommandTimeout);\r\n                })", span="51-57"];
m8_22 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="EnqueuedStateHandlerFacts.cs", label="_removedFromQueue = true", span="59-59"];
m8_23 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="EnqueuedStateHandlerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", span="47-47"];
m8_46 [cluster="System.Threading.Timer.Dispose()", file="EnqueuedStateHandlerFacts.cs", label="Entry System.Threading.Timer.Dispose()", span="0-0"];
m8_29 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="EnqueuedStateHandlerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", span="63-63"];
m8_30 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="EnqueuedStateHandlerFacts.cs", label=_syncRoot, span="65-65"];
m8_31 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="EnqueuedStateHandlerFacts.cs", label="_storage.UseConnection(null, connection =>\r\n                {\r\n                    connection.Execute(\r\n                        $''update {_storage.SchemaName}.JobQueue set FetchedAt = null where Id = @id'',\r\n                        new { id = Id },\r\n                        commandTimeout: _storage.CommandTimeout);\r\n                })", span="67-73"];
m8_32 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="EnqueuedStateHandlerFacts.cs", label="_requeued = true", span="75-75"];
m8_33 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="EnqueuedStateHandlerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", span="63-63"];
m8_28 [cluster="Unk.Execute", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.Execute", span=""];
m8_56 [cluster="Hangfire.Logging.ILog.Trace(string)", file="EnqueuedStateHandlerFacts.cs", label="Entry Hangfire.Logging.ILog.Trace(string)", span="234-234"];
m8_17 [cluster="System.TimeSpan.FromSeconds(double)", file="EnqueuedStateHandlerFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m8_24 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", file="EnqueuedStateHandlerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", span="171-171"];
m8_57 [cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="EnqueuedStateHandlerFacts.cs", label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="132-132"];
m8_0 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", span="20-20"];
m8_1 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="storage == null", span="26-26"];
m8_2 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="throw new ArgumentNullException(nameof(storage));", span="26-26"];
m8_3 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="jobId == null", span="27-27"];
m8_4 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="throw new ArgumentNullException(nameof(jobId));", span="27-27"];
m8_5 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="queue == null", span="28-28"];
m8_6 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="throw new ArgumentNullException(nameof(queue));", span="28-28"];
m8_7 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="_storage = storage", span="29-29"];
m8_8 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="Id = id", span="31-31"];
m8_9 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="JobId = jobId", span="32-32"];
m8_10 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="Queue = queue", span="33-33"];
m8_11 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="storage.SlidingInvisibilityTimeout.HasValue", span="35-35"];
m8_12 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="var keepAliveInterval =\r\n                    TimeSpan.FromSeconds(storage.SlidingInvisibilityTimeout.Value.TotalSeconds / 5)", span="37-38"];
m8_13 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="_timer = new Timer(ExecuteKeepAliveQuery, null, keepAliveInterval, keepAliveInterval)", span="39-39"];
m8_14 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="EnqueuedStateHandlerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", span="20-20"];
m8_16 [cluster="Unk.nameof", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.nameof", span=""];
m8_37 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="EnqueuedStateHandlerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", span="79-79"];
m8_38 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="EnqueuedStateHandlerFacts.cs", label=_disposed, span="81-81"];
m8_39 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="EnqueuedStateHandlerFacts.cs", label="return;", span="81-81"];
m8_40 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="EnqueuedStateHandlerFacts.cs", label="_disposed = true", span="82-82"];
m8_41 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="EnqueuedStateHandlerFacts.cs", label="_timer?.Dispose()", span="84-84"];
m8_42 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="EnqueuedStateHandlerFacts.cs", label=_syncRoot, span="86-86"];
m8_43 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="EnqueuedStateHandlerFacts.cs", label="!_removedFromQueue && !_requeued", span="88-88"];
m8_44 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="EnqueuedStateHandlerFacts.cs", label="Requeue()", span="90-90"];
m8_45 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="EnqueuedStateHandlerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", span="79-79"];
m8_58 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="103-109"];
m8_25 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="51-57"];
m8_26 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="connection.Execute(\r\n                        $''delete from {_storage.SchemaName}.JobQueue where Id = @id'',\r\n                        new { id = Id },\r\n                        commandTimeout: _storage.CommandTimeout)", span="53-56"];
m8_27 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="51-57"];
m8_34 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="67-73"];
m8_35 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="connection.Execute(\r\n                        $''update {_storage.SchemaName}.JobQueue set FetchedAt = null where Id = @id'',\r\n                        new { id = Id },\r\n                        commandTimeout: _storage.CommandTimeout)", span="69-72"];
m8_36 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="67-73"];
m8_59 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="connection.Execute(\r\n                            $''update {_storage.SchemaName}.JobQueue set FetchedAt = getutcdate() where Id = @id'',\r\n                            new { id = Id },\r\n                            commandTimeout: _storage.CommandTimeout)", span="105-108"];
m8_60 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="103-109"];
m8_47 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="EnqueuedStateHandlerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", span="95-95"];
m8_48 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="EnqueuedStateHandlerFacts.cs", label=_syncRoot, span="97-97"];
m8_49 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="EnqueuedStateHandlerFacts.cs", label="_requeued || _removedFromQueue", span="99-99"];
m8_50 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="EnqueuedStateHandlerFacts.cs", label="return;", span="99-99"];
m8_51 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="EnqueuedStateHandlerFacts.cs", label="_storage.UseConnection(null, connection =>\r\n                    {\r\n                        connection.Execute(\r\n                            $''update {_storage.SchemaName}.JobQueue set FetchedAt = getutcdate() where Id = @id'',\r\n                            new { id = Id },\r\n                            commandTimeout: _storage.CommandTimeout);\r\n                    })", span="103-109"];
m8_52 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="EnqueuedStateHandlerFacts.cs", label="Logger.Trace($''Keep-alive query for message {Id} sent'')", span="111-111"];
m8_53 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="EnqueuedStateHandlerFacts.cs", label=Exception, span="113-113"];
m8_54 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="EnqueuedStateHandlerFacts.cs", label="Logger.DebugException($''Unable to execute keep-alive query for message {Id}'', ex)", span="115-115"];
m8_55 [cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="EnqueuedStateHandlerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", span="95-95"];
m8_61 [file="EnqueuedStateHandlerFacts.cs", label="Hangfire.SqlServer.SqlServerTimeoutJob", span=""];
m10_69 [cluster="AspNetCoreLogProvider.cstr", file="ExpressionFingerprintChain.cs", label="Entry AspNetCoreLogProvider.cstr", span=""];
m10_81 [cluster="System.Threading.Volatile.Read(ref int)", file="ExpressionFingerprintChain.cs", label="Entry System.Threading.Volatile.Read(ref int)", span="0-0"];
m10_18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ExpressionFingerprintChain.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_41 [cluster="BackgroundJobStateChanger.cstr", file="ExpressionFingerprintChain.cs", label="Entry BackgroundJobStateChanger.cstr", span=""];
m10_70 [cluster="Unk.UseLogProvider", file="ExpressionFingerprintChain.cs", label="Entry Unk.UseLogProvider", span=""];
m10_74 [cluster="Hangfire.HangfireServiceCollectionExtensions.GetInitializedJobStorage(System.IServiceProvider)", file="ExpressionFingerprintChain.cs", label="Entry Hangfire.HangfireServiceCollectionExtensions.GetInitializedJobStorage(System.IServiceProvider)", span="94-94"];
m10_75 [cluster="Hangfire.HangfireServiceCollectionExtensions.GetInitializedJobStorage(System.IServiceProvider)", file="ExpressionFingerprintChain.cs", label="Volatile.Read(ref _initialized) == 0", span="104-104"];
m10_76 [cluster="Hangfire.HangfireServiceCollectionExtensions.GetInitializedJobStorage(System.IServiceProvider)", file="ExpressionFingerprintChain.cs", label="var configurationInstance = serviceProvider.GetService<IGlobalConfiguration>()", span="106-106"];
m10_77 [cluster="Hangfire.HangfireServiceCollectionExtensions.GetInitializedJobStorage(System.IServiceProvider)", file="ExpressionFingerprintChain.cs", label="var configurationAction = serviceProvider.GetRequiredService<Action<IGlobalConfiguration>>()", span="107-107"];
m10_79 [cluster="Hangfire.HangfireServiceCollectionExtensions.GetInitializedJobStorage(System.IServiceProvider)", file="ExpressionFingerprintChain.cs", label="return JobStorage.Current;", span="115-115"];
m10_78 [cluster="Hangfire.HangfireServiceCollectionExtensions.GetInitializedJobStorage(System.IServiceProvider)", file="ExpressionFingerprintChain.cs", label="configurationAction(configurationInstance)", span="112-112"];
m10_80 [cluster="Hangfire.HangfireServiceCollectionExtensions.GetInitializedJobStorage(System.IServiceProvider)", file="ExpressionFingerprintChain.cs", label="Exit Hangfire.HangfireServiceCollectionExtensions.GetInitializedJobStorage(System.IServiceProvider)", span="94-94"];
m10_53 [cluster="RecurringJobManager.cstr", file="ExpressionFingerprintChain.cs", label="Entry RecurringJobManager.cstr", span=""];
m10_82 [cluster="Unk.configurationAction", file="ExpressionFingerprintChain.cs", label="Entry Unk.configurationAction", span=""];
m10_68 [cluster="System.Threading.Interlocked.CompareExchange(ref int, int, int)", file="ExpressionFingerprintChain.cs", label="Entry System.Threading.Interlocked.CompareExchange(ref int, int, int)", span="0-0"];
m10_45 [cluster="BackgroundJobPerformer.cstr", file="ExpressionFingerprintChain.cs", label="Entry BackgroundJobPerformer.cstr", span=""];
m10_73 [cluster="Unk.configuration", file="ExpressionFingerprintChain.cs", label="Entry Unk.configuration", span=""];
m10_71 [cluster="AspNetCoreJobActivator.cstr", file="ExpressionFingerprintChain.cs", label="Entry AspNetCoreJobActivator.cstr", span=""];
m10_0 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="Entry Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", span="35-35"];
m10_1 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services == null", span="39-39"];
m10_2 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="throw new ArgumentNullException(nameof(services));", span="39-39"];
m10_3 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="configuration == null", span="40-40"];
m10_4 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="throw new ArgumentNullException(nameof(configuration));", span="40-40"];
m10_5 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton(GetInitializedJobStorage)", span="42-42"];
m10_6 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton(_ => GlobalConfiguration.Configuration)", span="44-44"];
m10_7 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton(_ => JobActivator.Current)", span="45-45"];
m10_8 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton(_ => DashboardRoutes.Routes)", span="46-46"];
m10_9 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton<IJobFilterProvider>(_ => GlobalJobFilters.Filters)", span="48-48"];
m10_10 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton<IBackgroundJobFactory>(x => new BackgroundJobFactory(\r\n                x.GetRequiredService<IJobFilterProvider>()))", span="50-51"];
m10_11 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton<IBackgroundJobStateChanger>(x => new BackgroundJobStateChanger(\r\n                x.GetRequiredService<IJobFilterProvider>()))", span="53-54"];
m10_12 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton<IBackgroundJobPerformer>(x => new BackgroundJobPerformer(\r\n                x.GetRequiredService<IJobFilterProvider>(),\r\n                x.GetRequiredService<JobActivator>()))", span="56-58"];
m10_13 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton<IBackgroundJobClient>(x => new BackgroundJobClient(\r\n                x.GetRequiredService<JobStorage>(),\r\n                x.GetRequiredService<IBackgroundJobFactory>(),\r\n                x.GetRequiredService<IBackgroundJobStateChanger>()))", span="60-63"];
m10_14 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton<IRecurringJobManager>(x => new RecurringJobManager(\r\n                x.GetRequiredService<JobStorage>(),\r\n                x.GetRequiredService<IBackgroundJobFactory>()))", span="65-67"];
m10_15 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="services.TryAddSingleton<Action<IGlobalConfiguration>>(serviceProvider =>\r\n            {\r\n                return config =>\r\n                {\r\n                    if (Interlocked.CompareExchange(ref _initialized, 1, 0) != 0) return;\r\n\r\n                    var loggerFactory = serviceProvider.GetService<ILoggerFactory>();\r\n                    if (loggerFactory != null)\r\n                    {\r\n                        config.UseLogProvider(new AspNetCoreLogProvider(loggerFactory));\r\n                    }\r\n\r\n                    var scopeFactory = serviceProvider.GetService<IServiceScopeFactory>();\r\n                    if (scopeFactory != null)\r\n                    {\r\n                        config.UseActivator(new AspNetCoreJobActivator(scopeFactory));\r\n                    }\r\n\r\n                    configuration(config);\r\n                };\r\n            })", span="69-89"];
m10_16 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="return services;", span="91-91"];
m10_17 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="ExpressionFingerprintChain.cs", label="Exit Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", span="35-35"];
m10_37 [cluster="BackgroundJobFactory.cstr", file="ExpressionFingerprintChain.cs", label="Entry BackgroundJobFactory.cstr", span=""];
m10_20 [cluster="Unk.TryAddSingleton", file="ExpressionFingerprintChain.cs", label="Entry Unk.TryAddSingleton", span=""];
m10_49 [cluster="BackgroundJobClient.cstr", file="ExpressionFingerprintChain.cs", label="Entry BackgroundJobClient.cstr", span=""];
m10_19 [cluster="Unk.nameof", file="ExpressionFingerprintChain.cs", label="Entry Unk.nameof", span=""];
m10_72 [cluster="Unk.UseActivator", file="ExpressionFingerprintChain.cs", label="Entry Unk.UseActivator", span=""];
m10_57 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="71-88"];
m10_66 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="configuration(config)", span="87-87"];
m10_22 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="44-44"];
m10_25 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="45-45"];
m10_28 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="46-46"];
m10_31 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="48-48"];
m10_34 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="50-51"];
m10_38 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="53-54"];
m10_42 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="56-58"];
m10_46 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="60-63"];
m10_50 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="65-67"];
m10_54 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="69-89"];
m10_23 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="GlobalConfiguration.Configuration", span="44-44"];
m10_24 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="44-44"];
m10_26 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="JobActivator.Current", span="45-45"];
m10_27 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="45-45"];
m10_29 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="DashboardRoutes.Routes", span="46-46"];
m10_30 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="46-46"];
m10_32 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="GlobalJobFilters.Filters", span="48-48"];
m10_33 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="48-48"];
m10_35 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="new BackgroundJobFactory(\r\n                x.GetRequiredService<IJobFilterProvider>())", span="50-51"];
m10_36 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="50-51"];
m10_39 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="new BackgroundJobStateChanger(\r\n                x.GetRequiredService<IJobFilterProvider>())", span="53-54"];
m10_40 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="53-54"];
m10_43 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="new BackgroundJobPerformer(\r\n                x.GetRequiredService<IJobFilterProvider>(),\r\n                x.GetRequiredService<JobActivator>())", span="56-58"];
m10_44 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="56-58"];
m10_47 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="new BackgroundJobClient(\r\n                x.GetRequiredService<JobStorage>(),\r\n                x.GetRequiredService<IBackgroundJobFactory>(),\r\n                x.GetRequiredService<IBackgroundJobStateChanger>())", span="60-63"];
m10_48 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="60-63"];
m10_51 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="new RecurringJobManager(\r\n                x.GetRequiredService<JobStorage>(),\r\n                x.GetRequiredService<IBackgroundJobFactory>())", span="65-67"];
m10_52 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="65-67"];
m10_55 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="return config =>\r\n                {\r\n                    if (Interlocked.CompareExchange(ref _initialized, 1, 0) != 0) return;\r\n\r\n                    var loggerFactory = serviceProvider.GetService<ILoggerFactory>();\r\n                    if (loggerFactory != null)\r\n                    {\r\n                        config.UseLogProvider(new AspNetCoreLogProvider(loggerFactory));\r\n                    }\r\n\r\n                    var scopeFactory = serviceProvider.GetService<IServiceScopeFactory>();\r\n                    if (scopeFactory != null)\r\n                    {\r\n                        config.UseActivator(new AspNetCoreJobActivator(scopeFactory));\r\n                    }\r\n\r\n                    configuration(config);\r\n                };", span="71-88"];
m10_60 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="var loggerFactory = serviceProvider.GetService<ILoggerFactory>()", span="75-75"];
m10_63 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="var scopeFactory = serviceProvider.GetService<IServiceScopeFactory>()", span="81-81"];
m10_56 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="69-89"];
m10_58 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Interlocked.CompareExchange(ref _initialized, 1, 0) != 0", span="73-73"];
m10_62 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="config.UseLogProvider(new AspNetCoreLogProvider(loggerFactory))", span="78-78"];
m10_65 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="config.UseActivator(new AspNetCoreJobActivator(scopeFactory))", span="84-84"];
m10_59 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="return;", span="73-73"];
m10_61 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="loggerFactory != null", span="76-76"];
m10_64 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="scopeFactory != null", span="82-82"];
m10_67 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="71-88"];
m10_83 [file="ExpressionFingerprintChain.cs", label="System.Action<Hangfire.IGlobalConfiguration>", span=""];
m10_84 [file="ExpressionFingerprintChain.cs", label="?", span=""];
m11_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m11_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FailedStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m11_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40"];
m11_5 [cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="34-34"];
m11_6 [cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="transaction.RemoveFromSet(''failed'', context.JobId)", span="37-37"];
m11_7 [cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="34-34"];
m11_0 [cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25"];
m11_1 [cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="transaction.AddToSet(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="28-31"];
m11_2 [cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25"];
m12_76 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="45-45"];
m12_64 [cluster="HangFire.RetryJobsFilter.RetryJobsFilter()", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.RetryJobsFilter.RetryJobsFilter()", span="6-6"];
m12_67 [cluster="HangFire.Server.WorkerPool.WorkerPool(int, string)", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(int, string)", span="16-16"];
m12_20 [cluster="ConsoleSample.RecurringJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Entry ConsoleSample.RecurringJob.Perform()", span="48-48"];
m12_21 [cluster="ConsoleSample.RecurringJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Console.WriteLine(''Performing recurring task...'')", span="50-50"];
m12_22 [cluster="ConsoleSample.RecurringJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Exit ConsoleSample.RecurringJob.Perform()", span="48-48"];
m12_23 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Entry ConsoleSample.Program.Main()", span="56-56"];
m12_24 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="LogManager.LogFactory = new ConsoleLogFactory()", span="58-58"];
m12_25 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="RedisFactory.Port = 6379", span="60-60"];
m12_26 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="RedisFactory.Db = 3", span="61-61"];
m12_27 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="GlobalJobFilters.Filters.Add(new HistoryStatisticsFilter())", span="63-63"];
m12_28 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="GlobalJobFilters.Filters.Add(new RetryJobsFilter())", span="64-64"];
m12_29 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="GlobalJobFilters.Filters.Add(new RecurringJobsFilter())", span="65-65"];
m12_30 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="var server = new BackgroundJobServer(\r\n                new WorkerPool(40, ''critical''),\r\n                new WorkerPool(20))", span="67-69"];
m12_31 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="server.Start()", span="71-71"];
m12_32 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Console.WriteLine(''HangFire Server has been started. Press Ctrl+C to exit...'')", span="73-73"];
m12_33 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="var count = 1", span="75-75"];
m12_34 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label=true, span="77-77"];
m12_41 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Perform.Async<ConsoleJob>(new { Number = count++ })", span="93-93"];
m12_54 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Perform.In<ConsoleJob>(TimeSpan.FromSeconds(seconds), new { Number = count++ })", span="115-115"];
m12_35 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="var command = Console.ReadLine()", span="79-79"];
m12_58 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="126-126"];
m12_36 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="81-81"];
m12_37 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="86-86"];
m12_38 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="var workCount = int.Parse(command.Substring(4))", span="90-90"];
m12_46 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="103-103"];
m12_47 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="var workCount = int.Parse(command.Substring(6))", span="105-105"];
m12_52 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="112-112"];
m12_53 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="var seconds = int.Parse(command.Substring(2))", span="114-114"];
m12_55 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="118-118"];
m12_39 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="var i = 0", span="91-91"];
m12_40 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="i < workCount", span="91-91"];
m12_42 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="i++", span="91-91"];
m12_43 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="95-95"];
m12_44 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label=Exception, span="97-97"];
m12_45 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Console.WriteLine(ex.Message)", span="99-99"];
m12_48 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="var i = 0", span="106-106"];
m12_49 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="i < workCount", span="106-106"];
m12_51 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="i++", span="106-106"];
m12_50 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Perform.Async<ErrorJob>(new { ArticleId = 2, Product = ''Casio Privia PX-850'' })", span="108-108"];
m12_56 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Perform.Async<RecurringJob>()", span="120-120"];
m12_57 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Console.WriteLine(''Recurring job added'')", span="121-121"];
m12_59 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Console.ReadLine()", span="127-127"];
m12_60 [cluster="ConsoleSample.Program.Main()", file="FingerprintingExpressionVisitor.cs", label="Exit ConsoleSample.Program.Main()", span="56-56"];
m12_10 [cluster="System.Exception.Exception()", file="FingerprintingExpressionVisitor.cs", label="Entry System.Exception.Exception()", span="0-0"];
m12_77 [cluster="HangFire.Perform.Async<TJob>()", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.Perform.Async<TJob>()", span="11-11"];
m12_66 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", span="14-14"];
m12_75 [cluster="HangFire.Perform.Async<TJob>(object)", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="18-18"];
m12_19 [cluster="System.IO.FileLoadException.FileLoadException()", file="FingerprintingExpressionVisitor.cs", label="Entry System.IO.FileLoadException.FileLoadException()", span="0-0"];
m12_74 [cluster="int.Parse(string)", file="FingerprintingExpressionVisitor.cs", label="Entry int.Parse(string)", span="0-0"];
m12_11 [cluster="System.TimeSpan.FromSeconds(double)", file="FingerprintingExpressionVisitor.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m12_62 [cluster="HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", span="6-6"];
m12_0 [cluster="ConsoleSample.ConsoleJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Entry ConsoleSample.ConsoleJob.Perform()", span="18-18"];
m12_1 [cluster="ConsoleSample.ConsoleJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="int time", span="20-20"];
m12_2 [cluster="ConsoleSample.ConsoleJob.Perform()", file="FingerprintingExpressionVisitor.cs", label=_random, span="21-21"];
m12_3 [cluster="ConsoleSample.ConsoleJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="time = _random.Next(10)", span="23-23"];
m12_4 [cluster="ConsoleSample.ConsoleJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="time < 5", span="26-26"];
m12_6 [cluster="ConsoleSample.ConsoleJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Thread.Sleep(TimeSpan.FromSeconds(5 + time))", span="31-31"];
m12_5 [cluster="ConsoleSample.ConsoleJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="throw new Exception();", span="28-28"];
m12_7 [cluster="ConsoleSample.ConsoleJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Console.WriteLine(''Finished task: '' + Number)", span="32-32"];
m12_8 [cluster="ConsoleSample.ConsoleJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Exit ConsoleSample.ConsoleJob.Perform()", span="18-18"];
m12_12 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m12_72 [cluster="string.StartsWith(string, System.StringComparison)", file="FingerprintingExpressionVisitor.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m12_18 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="FingerprintingExpressionVisitor.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m12_65 [cluster="HangFire.RecurringJobsFilter.RecurringJobsFilter()", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.RecurringJobsFilter.RecurringJobsFilter()", span="18-18"];
m12_70 [cluster="System.Console.ReadLine()", file="FingerprintingExpressionVisitor.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m12_9 [cluster="System.Random.Next(int)", file="FingerprintingExpressionVisitor.cs", label="Entry System.Random.Next(int)", span="0-0"];
m12_71 [cluster="string.Equals(string, System.StringComparison)", file="FingerprintingExpressionVisitor.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m12_68 [cluster="HangFire.Server.WorkerPool.WorkerPool(int)", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(int)", span="11-11"];
m12_69 [cluster="HangFire.BackgroundJobServer.Start()", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="42-42"];
m12_63 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m12_13 [cluster="System.Console.WriteLine(string)", file="FingerprintingExpressionVisitor.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m12_14 [cluster="ConsoleSample.ErrorJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Entry ConsoleSample.ErrorJob.Perform()", span="38-38"];
m12_15 [cluster="ConsoleSample.ErrorJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Console.WriteLine(''Beginning error task...'')", span="40-40"];
m12_16 [cluster="ConsoleSample.ErrorJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="throw new InvalidOperationException(null, new FileLoadException());", span="41-41"];
m12_17 [cluster="ConsoleSample.ErrorJob.Perform()", file="FingerprintingExpressionVisitor.cs", label="Exit ConsoleSample.ErrorJob.Perform()", span="38-38"];
m12_61 [cluster="ConsoleLogFactory.cstr", file="FingerprintingExpressionVisitor.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m12_73 [cluster="string.Substring(int)", file="FingerprintingExpressionVisitor.cs", label="Entry string.Substring(int)", span="0-0"];
m12_78 [file="FingerprintingExpressionVisitor.cs", label="ConsoleSample.ConsoleJob", span=""];
m13_10 [cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="77-77"];
m13_8 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="GlobalStateHandlers.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m13_0 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Entry HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="23-23"];
m13_1 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs", label="0: Handlers = new List<StateHandler>()", span="25-25"];
m13_2 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Handlers.Add(new SucceededState.Handler())", span="26-26"];
m13_3 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Handlers.Add(new ScheduledState.Handler())", span="27-27"];
m13_4 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Handlers.Add(new EnqueuedState.Handler())", span="28-28"];
m13_5 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Exit HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="23-23"];
m13_7 [cluster="HangFire.States.SucceededState.Handler.Handler()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.SucceededState.Handler.Handler()", span="52-52"];
m13_9 [cluster="HangFire.States.ScheduledState.Handler.Handler()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="52-52"];
m14_6 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="HashCodeCombiner.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="46-46"];
m14_17 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="HashCodeCombiner.cs", label="_combinedHash64 = ((_combinedHash64 << 5) + _combinedHash64) ^ i", span="48-48"];
m14_18 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="HashCodeCombiner.cs", label="Exit HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="46-46"];
m14_16 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="HashCodeCombiner.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51"];
m14_19 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="HashCodeCombiner.cs", label="int hashCode = (o != null) ? o.GetHashCode() : 0", span="53-53"];
m14_20 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="HashCodeCombiner.cs", label="AddInt32(hashCode)", span="54-54"];
m14_21 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="HashCodeCombiner.cs", label="Exit HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51"];
m14_22 [cluster="object.GetHashCode()", file="HashCodeCombiner.cs", label="Entry object.GetHashCode()", span="0-0"];
m14_5 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="HashCodeCombiner.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24"];
m14_0 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="HashCodeCombiner.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="16-16"];
m14_1 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="HashCodeCombiner.cs", label="fingerprint != null", span="18-18"];
m14_2 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="HashCodeCombiner.cs", label="fingerprint.AddToHashCodeCombiner(this)", span="20-20"];
m14_3 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="HashCodeCombiner.cs", label="AddInt32(0)", span="24-24"];
m14_4 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="HashCodeCombiner.cs", label="Exit HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="16-16"];
m14_7 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="HashCodeCombiner.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", span="28-28"];
m14_8 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="HashCodeCombiner.cs", label="e == null", span="30-30"];
m14_11 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="HashCodeCombiner.cs", label=e, span="37-37"];
m14_9 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="HashCodeCombiner.cs", label="AddInt32(0)", span="32-32"];
m14_10 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="HashCodeCombiner.cs", label="int count = 0", span="36-36"];
m14_13 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="HashCodeCombiner.cs", label="count++", span="40-40"];
m14_14 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="HashCodeCombiner.cs", label="AddInt32(count)", span="42-42"];
m14_12 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="HashCodeCombiner.cs", label="AddObject(o)", span="39-39"];
m14_15 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="HashCodeCombiner.cs", label="Exit HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", span="28-28"];
m14_23 [file="HashCodeCombiner.cs", label="HangFire.Common.ExpressionUtil.HashCodeCombiner", span=""];
m16_88 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m16_78 [cluster="Hangfire.JobStorage.GetConnection()", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m16_92 [cluster="string.IsNullOrWhiteSpace(string)", file="HoistingExpressionVisitor.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m16_97 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="70-70"];
m16_94 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="79-79"];
m16_85 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="33-33"];
m16_75 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m16_93 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="43-43"];
m16_83 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="47-47"];
m16_82 [cluster="Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", span="58-58"];
m16_74 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m16_0 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Continuations.AwaitingJobsPage.Execute()", span="57-57"];
m16_1 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\r\n'')", span="61-61"];
m16_2 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Layout = new LayoutPage(''Awaiting Jobs'')", span="74-74"];
m16_3 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="int from, perPage", span="76-76"];
m16_4 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="int.TryParse(Query(''from''), out from)", span="78-78"];
m16_5 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="int.TryParse(Query(''count''), out perPage)", span="79-79"];
m16_12 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="pager = new Pager(from, perPage, storageConnection.GetSetCount(''awaiting''))", span="93-93"];
m16_6 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="List<string> jobIds", span="81-81"];
m16_7 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Pager pager", span="82-82"];
m16_8 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="var connection = Storage.GetConnection()", span="84-84"];
m16_9 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="var storageConnection = connection as JobStorageConnection", span="86-86"];
m16_10 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="storageConnection == null", span="88-88"];
m16_13 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="jobIds = storageConnection.GetRangeFromSet(''awaiting'', pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1)", span="94-94"];
m16_11 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="throw new NotSupportedException(''Continuations are not supported for your current job storage implementation.'');", span="90-90"];
m16_23 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(Html.PerPageSelector(pager))", span="164-164"];
m16_69 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(Html.Paginator(pager))", span="434-434"];
m16_14 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-3\''>\r\n        '')", span="101-101"];
m16_17 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="jobIds.Count > 0", span="117-117"];
m16_25 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label=jobIds, span="191-191"];
m16_15 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(Html.JobsSidebar())", span="106-106"];
m16_16 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\r\n    </div>\r\n    <div class=\''col-md-9\''>\r\n        <h1 class=\''page-header\''>Awaitin'' +\r\n''g Jobs</h1>\r\n\r\n'')", span="111-112"];
m16_18 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="123-125"];
m16_71 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                No jobs found in awai'' +\r\n''ting state.\r\n            </div>\r\n'')", span="451-452"];
m16_19 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(Url.To(''/jobs/awaiting/enqueue''))", span="130-130"];
m16_20 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(@''''''\r\n                            data-loading-text=''''Enqueueing...''''>\r\n                        <span class=''''glyphicon glyphicon-repeat''''></span>\r\n                        Enqueue jobs\r\n                    </button>\r\n\r\n                    <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                            data-url='''''')", span="135-142"];
m16_21 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(Url.To(''/jobs/awaiting/delete''))", span="147-147"];
m16_22 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(@''''''\r\n                            data-loading-text=''''Deleting...''''\r\n                            data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                        <span class=''''glyphicon glyphicon-remove''''></span>\r\n                        Delete selected\r\n                    </button>\r\n\r\n                    '')", span="152-159"];
m16_24 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(@''\r\n                </div>\r\n\r\n                <table class=''''table table-hover''''>\r\n                    <thead>\r\n                        <tr>\r\n                            <th class=''''min-width''''>\r\n                                <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                            </th>\r\n                            <th class=''''min-width''''>Id</th>\r\n                            <th>Job</th>\r\n                            <th class=''''min-width''''>Options</th>\r\n                            <th class=''''min-width''''>Parent</th>\r\n                            <th class=''''align-right''''>Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n'')", span="169-186"];
m16_26 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="JobData jobData", span="193-193"];
m16_68 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                    </tbody>\r\n                </table>\r\n                '')", span="429-429"];
m16_30 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="jobData = connection.GetJobData(jobId)", span="199-199"];
m16_31 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="stateData = connection.GetStateData(jobId)", span="200-200"];
m16_37 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(jobId)", span="228-228"];
m16_39 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(Html.JobIdLink(jobId))", span="239-239"];
m16_44 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(Html.JobNameLink(jobId, jobData.Job))", span="273-273"];
m16_27 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="StateData stateData", span="194-194"];
m16_28 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="StateData parentStateData = null", span="195-195"];
m16_29 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="var connection = Storage.GetConnection()", span="197-197"];
m16_54 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="parentStateData != null", span="334-334"];
m16_58 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(String.Format(''background-color: {0};'', JobHistoryRenderer.GetForegroundStateColor(parentStateData.Name)))", span="356-356"];
m16_60 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(parentStateData.Name)", span="366-366"];
m16_33 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="parentStateData = connection.GetStateData(stateData.Data[''ParentId''])", span="204-204"];
m16_35 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(jobData != null ? ''hover'' : null)", span="217-217"];
m16_41 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="jobData == null", span="249-249"];
m16_65 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(Html.RelativeTime(jobData.CreatedAt))", span="404-404"];
m16_32 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="stateData != null && stateData.Name == AwaitingState.StateName", span="202-202"];
m16_47 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="stateData != null && stateData.Data.ContainsKey(''Options'') && !String.IsNullOrWhiteSpace(stateData.Data[''Options''])", span="287-287"];
m16_49 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(stateData.Data[''Options''])", span="298-298"];
m16_56 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Write(Url.JobDetails(stateData.Data[''ParentId'']))", span="345-345"];
m16_34 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                            <tr class=\''js-jobs-list-row '')", span="212-212"];
m16_36 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\''>\r\n                                <td>\r\n                                    <in'' +\r\n''put type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="222-223"];
m16_38 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\'' />\r\n                                </td>\r\n                                <td '' +\r\n''class=\''min-width\''>\r\n                                    '')", span="233-234"];
m16_40 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\r\n                                </td>\r\n'')", span="244-244"];
m16_42 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                    <td colspan=\''2\''><em>Job expired.</em></td>\r\n'')", span="255-255"];
m16_43 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                    <td>\r\n                                       '' +\r\n'' '')", span="267-268"];
m16_45 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\r\n                                    </td>\r\n'')", span="278-278"];
m16_46 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                    <td class=\''min-width\''>\r\n'')", span="282-282"];
m16_48 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                            <code>'')", span="293-293"];
m16_51 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                            <em>N/A</em>\r\n'')", span="315-315"];
m16_50 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''</code>\r\n'')", span="303-303"];
m16_52 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                    </td>\r\n'')", span="325-325"];
m16_53 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                    <td class=\''min-width\''>\r\n'')", span="329-329"];
m16_55 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                            <a href=\'''')", span="340-340"];
m16_62 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                            <em>N/A</em>\r\n'')", span="384-384"];
m16_57 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\''>\r\n                                                <span class=\''label label-defa'' +\r\n''ult label-hover\'' style=\'''')", span="350-351"];
m16_59 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\''>\r\n                                                    '')", span="361-361"];
m16_61 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\r\n                                                </span>\r\n                      '' +\r\n''                      </a>\r\n'')", span="371-372"];
m16_63 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                    </td>\r\n'')", span="394-394"];
m16_64 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                                    <td class=\''min-width align-right\''>\r\n         '' +\r\n''                               '')", span="398-399"];
m16_66 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\r\n                                    </td>\r\n'')", span="409-409"];
m16_67 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''                            </tr>\r\n'')", span="419-419"];
m16_70 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="439-439"];
m16_72 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="WriteLiteral(''    </div>\r\n</div>\r\n'')", span="462-462"];
m16_73 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="HoistingExpressionVisitor.cs", label="Exit Hangfire.Continuations.AwaitingJobsPage.Execute()", span="57-57"];
m16_76 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="65-65"];
m16_87 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m16_77 [cluster="int.TryParse(string, out int)", file="HoistingExpressionVisitor.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m16_80 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m16_79 [cluster="System.NotSupportedException.NotSupportedException(string)", file="HoistingExpressionVisitor.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m16_96 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="154-154"];
m16_91 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="HoistingExpressionVisitor.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m16_89 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="139-139"];
m16_86 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="76-76"];
m16_90 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="146-146"];
m16_84 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m16_81 [cluster="Hangfire.Storage.JobStorageConnection.GetSetCount(string)", file="HoistingExpressionVisitor.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetSetCount(string)", span="53-53"];
m16_98 [file="HoistingExpressionVisitor.cs", label="Hangfire.Continuations.AwaitingJobsPage", span=""];
m19_0 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", span="12-12"];
m19_1 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.ToJson(null)", span="14-14"];
m19_2 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Null(result)", span="15-15"];
m19_3 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", span="12-12"];
m19_42 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m19_4 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m19_32 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", span="60-60"];
m19_33 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.ToStringTimestamp(_wellKnownDateTime)", span="62-62"];
m19_34 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(_wellKnownTimestamp.ToString(), result)", span="64-64"];
m19_35 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", span="60-60"];
m19_26 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m19_17 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m19_37 [cluster="int.ToString()", file="JobHelperFacts.cs", label="Entry int.ToString()", span="0-0"];
m19_5 [cluster="Unk.Null", file="JobHelperFacts.cs", label="Entry Unk.Null", span=""];
m19_43 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", span="76-76"];
m19_44 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Null(JobHelper.FromNullableStringTimestamp(''''))", span="78-78"];
m19_45 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Null(JobHelper.FromNullableStringTimestamp(null))", span="79-79"];
m19_46 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", span="76-76"];
m19_47 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m19_22 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", span="43-43"];
m19_23 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.ToTimestamp(\r\n                _wellKnownDateTime)", span="45-46"];
m19_24 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(_wellKnownTimestamp, result)", span="48-48"];
m19_25 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", span="43-43"];
m19_27 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52"];
m19_28 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.FromTimestamp(_wellKnownTimestamp)", span="54-54"];
m19_29 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(_wellKnownDateTime, result)", span="56-56"];
m19_30 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52"];
m19_31 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45"];
m19_18 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36"];
m19_19 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.FromJson<string>(''\''hello\'''')", span="38-38"];
m19_20 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(''hello'', result)", span="39-39"];
m19_21 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36"];
m19_11 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26"];
m19_12 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: var stringResult = JobHelper.FromJson<string>(null)", span="28-28"];
m19_13 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: var intResult = JobHelper.FromJson<int>(null)", span="29-29"];
m19_14 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Null(stringResult)", span="31-31"];
m19_15 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(0, intResult)", span="32-32"];
m19_16 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26"];
m19_6 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19"];
m19_7 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.ToJson(''hello'')", span="21-21"];
m19_8 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(''\''hello\'''', result)", span="22-22"];
m19_9 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19"];
m19_38 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", span="68-68"];
m19_39 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.FromStringTimestamp(_wellKnownTimestamp.ToString())", span="70-70"];
m19_40 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(_wellKnownDateTime, result)", span="72-72"];
m19_41 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", span="68-68"];
m19_36 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m19_48 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", span="83-83"];
m19_49 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.FromNullableStringTimestamp(_wellKnownTimestamp.ToString())", span="85-85"];
m19_50 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(_wellKnownDateTime, result)", span="86-86"];
m19_51 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", span="83-83"];
m19_52 [file="JobHelperFacts.cs", label="HangFire.Core.Tests.Common.JobHelperFacts", span=""];
m20_4 [cluster="Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", file="JobStorage.cs", label="Items.Add(page => new MenuItem(''Succeeded'', page.Url.To(''/jobs/succeeded''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/succeeded''),\r\n                Metric = DashboardMetrics.SucceededCount\r\n            })", span="46-50"];
m20_5 [cluster="Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", file="JobStorage.cs", label="Items.Add(page => new MenuItem(''Failed'', page.Url.To(''/jobs/failed''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/failed''),\r\n                Metric = DashboardMetrics.FailedCount\r\n            })", span="52-56"];
m20_6 [cluster="Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", color=green, community=0, file="JobStorage.cs", label="0: Items.Add(page => new MenuItem(''Deleted'', page.Url.To(''/jobs/deleted''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/deleted''),\r\n                Metric = DashboardMetrics.DeletedCount\r\n            })", span="58-62"];
m20_0 [cluster="Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", file="JobStorage.cs", label="Entry Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", span="26-26"];
m20_1 [cluster="Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", file="JobStorage.cs", label="Items.Add(page => new MenuItem(''Enqueued'', page.Url.LinkToQueues())\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/enqueued''),\r\n                Metric = DashboardMetrics.EnqueuedAndQueueCount\r\n            })", span="28-32"];
m20_8 [cluster="HangFire.JobStorage.GetStateHandlers()", file="JobStorage.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="62-62"];
m20_18 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="JobStorage.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="33-33"];
m20_14 [cluster="string.StartsWith(string)", file="JobStorage.cs", label="Entry string.StartsWith(string)", span="0-0"];
m20_13 [cluster="Hangfire.Dashboard.UrlHelper.LinkToQueues()", file="JobStorage.cs", label="Entry Hangfire.Dashboard.UrlHelper.LinkToQueues()", span="48-48"];
m20_12 [cluster="Hangfire.Dashboard.MenuItem.MenuItem(string, string)", file="JobStorage.cs", label="Entry Hangfire.Dashboard.MenuItem.MenuItem(string, string)", span="23-23"];
m20_9 [cluster="lambda expression", color=red, community=0, file="JobStorage.cs", label="0: Entry lambda expression", span="28-32"];
m20_10 [cluster="lambda expression", file="JobStorage.cs", label="new MenuItem(''Enqueued'', page.Url.LinkToQueues())\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/enqueued''),\r\n                Metric = DashboardMetrics.EnqueuedAndQueueCount\r\n            }", span="28-32"];
m20_19 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="40-44"];
m20_28 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="58-62"];
m20_29 [cluster="lambda expression", color=green, community=0, file="JobStorage.cs", label="0: new MenuItem(''Deleted'', page.Url.To(''/jobs/deleted''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/deleted''),\r\n                Metric = DashboardMetrics.DeletedCount\r\n            }", span="58-62"];
m20_30 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="58-62"];
m20_25 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="52-56"];
m20_16 [cluster="lambda expression", file="JobStorage.cs", label="new MenuItem(''Scheduled'', page.Url.To(''/jobs/scheduled''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/scheduled''),\r\n                Metric = DashboardMetrics.ScheduledCount\r\n            }", span="34-38"];
m20_20 [cluster="lambda expression", file="JobStorage.cs", label="new MenuItem(''Processing'', page.Url.To(''/jobs/processing''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/processing''),\r\n                Metric = DashboardMetrics.ProcessingCount\r\n            }", span="40-44"];
m20_23 [cluster="lambda expression", file="JobStorage.cs", label="new MenuItem(''Succeeded'', page.Url.To(''/jobs/succeeded''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/succeeded''),\r\n                Metric = DashboardMetrics.SucceededCount\r\n            }", span="46-50"];
m20_26 [cluster="lambda expression", file="JobStorage.cs", label="new MenuItem(''Failed'', page.Url.To(''/jobs/failed''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/failed''),\r\n                Metric = DashboardMetrics.FailedCount\r\n            }", span="52-56"];
m20_22 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="46-50"];
m20_27 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="52-56"];
m20_15 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="34-38"];
m20_11 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="28-32"];
m20_17 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="34-38"];
m20_21 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="40-44"];
m20_24 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="46-50"];
m20_7 [cluster="Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", file="JobStorage.cs", label="Exit Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", span="26-26"];
m20_2 [cluster="Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", file="JobStorage.cs", label="Items.Add(page => new MenuItem(''Scheduled'', page.Url.To(''/jobs/scheduled''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/scheduled''),\r\n                Metric = DashboardMetrics.ScheduledCount\r\n            })", span="34-38"];
m20_3 [cluster="Hangfire.Dashboard.JobsSidebarMenu.JobsSidebarMenu()", file="JobStorage.cs", label="Items.Add(page => new MenuItem(''Processing'', page.Url.To(''/jobs/processing''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/processing''),\r\n                Metric = DashboardMetrics.ProcessingCount\r\n            })", span="40-44"];
m21_6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="LambdaExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m21_2 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23"];
m21_3 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="LambdaExpressionFingerprint other = obj as LambdaExpressionFingerprint", span="25-25"];
m21_4 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="return (other != null)\r\n                   && this.Equals(other);", span="26-27"];
m21_5 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23"];
m21_0 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m21_1 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m21_7 [file="LambdaExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", span=""];
m22_18 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", span="45-45"];
m22_19 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Job(_type, null, _arguments))", span="47-48"];
m22_20 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", span="45-45"];
m22_315 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", span="374-374"];
m22_316 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="MemberExpressionFingerprint.cs", label="var exception = new InvalidOperationException()", span="376-376"];
m22_317 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="MemberExpressionFingerprint.cs", label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="377-377"];
m22_320 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="MemberExpressionFingerprint.cs", label="Assert.Same(exception, thrownException.InnerException)", span="384-384"];
m22_318 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => InstanceMethod())", span="379-379"];
m22_319 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="MemberExpressionFingerprint.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="381-382"];
m22_321 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", span="374-374"];
m22_336 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="388-388"];
m22_337 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="MemberExpressionFingerprint.cs", label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="390-390"];
m22_338 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => InstanceMethod())", span="391-391"];
m22_339 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="MemberExpressionFingerprint.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="393-394"];
m22_340 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="MemberExpressionFingerprint.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="396-396"];
m22_341 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="388-388"];
m22_361 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", span="410-410"];
m22_362 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = false", span="412-412"];
m22_363 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="414-414"];
m22_364 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="MemberExpressionFingerprint.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="416-417"];
m22_365 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="MemberExpressionFingerprint.cs", label="Assert.True(_methodInvoked)", span="419-419"];
m22_366 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="MemberExpressionFingerprint.cs", label="Assert.NotNull(exception.InnerException)", span="420-420"];
m22_367 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", span="410-410"];
m22_17 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m22_214 [cluster="Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", span="495-495"];
m22_457 [cluster="Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", span="495-495"];
m22_385 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", span="555-555"];
m22_485 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="MemberExpressionFingerprint.cs", label="throw new InvalidOperationException(''exception'');", span="557-557"];
m22_486 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", span="555-555"];
m22_101 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", span="138-138"];
m22_102 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="MemberExpressionFingerprint.cs", label="var date = new DateTime(2014, 5, 30, 12, 0, 0, 777)", span="140-140"];
m22_103 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="MemberExpressionFingerprint.cs", label="var expected = date.ToString(''o'')", span="141-141"];
m22_104 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="143-143"];
m22_105 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(expected, job.Arguments[0])", span="145-145"];
m22_106 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", span="138-138"];
m22_480 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithCustomArgument(Hangfire.Core.Tests.Common.JobFacts.Instance)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithCustomArgument(Hangfire.Core.Tests.Common.JobFacts.Instance)", span="544-544"];
m22_481 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithCustomArgument(Hangfire.Core.Tests.Common.JobFacts.Instance)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithCustomArgument(Hangfire.Core.Tests.Common.JobFacts.Instance)", span="544-544"];
m22_137 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", span="172-172"];
m22_138 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="MemberExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => Job.FromExpression<JobFacts>(null))", span="174-175"];
m22_139 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''methodCall'', exception.ParamName)", span="177-177"];
m22_140 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", span="172-172"];
m22_352 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", span="400-400"];
m22_353 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="MemberExpressionFingerprint.cs", label="var type = typeof (JobFacts)", span="402-402"];
m22_354 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="MemberExpressionFingerprint.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="403-403"];
m22_355 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<JsonReaderException>(\r\n                () => new Job(type, method, new []{ JobHelper.ToJson(''sdfa'') }))", span="405-406"];
m22_356 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", span="400-400"];
m22_449 [cluster="Unk.NotEqual", file="MemberExpressionFingerprint.cs", label="Entry Unk.NotEqual", span=""];
m22_144 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="230-230"];
m22_0 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.JobFacts()", span="27-27"];
m22_1 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="MemberExpressionFingerprint.cs", label="_type = typeof (JobFacts)", span="29-29"];
m22_2 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="MemberExpressionFingerprint.cs", label="_method = _type.GetMethod(''StaticMethod'')", span="30-30"];
m22_3 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="MemberExpressionFingerprint.cs", label="_arguments = new string[0]", span="31-31"];
m22_4 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="MemberExpressionFingerprint.cs", label="_activator = new Mock<JobActivator> { CallBase = true }", span="33-33"];
m22_5 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="MemberExpressionFingerprint.cs", label="_token = new Mock<IJobCancellationToken>()", span="34-34"];
m22_6 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.JobFacts()", span="27-27"];
m22_413 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="584-584"];
m22_500 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="MemberExpressionFingerprint.cs", label="return ''Return value'';", span="586-586"];
m22_501 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="584-584"];
m22_287 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="327-327"];
m22_288 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = false", span="330-330"];
m22_289 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MemberExpressionFingerprint.cs", label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="331-331"];
m22_290 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MemberExpressionFingerprint.cs", label="var type = typeof(JobFacts)", span="333-333"];
m22_292 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MemberExpressionFingerprint.cs", label="var job = new Job(type, method, new[] { convertedDate })", span="336-336"];
m22_291 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MemberExpressionFingerprint.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="334-334"];
m22_293 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="339-339"];
m22_294 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MemberExpressionFingerprint.cs", label="Assert.True(_methodInvoked)", span="342-342"];
m22_295 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="327-327"];
m22_467 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m22_193 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", span="499-499"];
m22_458 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", span="499-499"];
m22_162 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", span="574-574"];
m22_495 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = true", span="576-576"];
m22_496 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", span="574-574"];
m22_437 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="166-166"];
m22_453 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobClassWrapper<T>.Dispose()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.JobClassWrapper<T>.Dispose()", span="605-605"];
m22_507 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobClassWrapper<T>.Dispose()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.JobClassWrapper<T>.Dispose()", span="605-605"];
m22_266 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", span="293-293"];
m22_267 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = false", span="296-296"];
m22_268 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="297-297"];
m22_269 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="300-300"];
m22_270 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="MemberExpressionFingerprint.cs", label="Assert.True(_methodInvoked)", span="303-303"];
m22_271 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", span="293-293"];
m22_172 [cluster="System.IDisposable.Dispose()", file="MemberExpressionFingerprint.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m22_376 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", span="424-424"];
m22_377 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => ExceptionMethod())", span="426-426"];
m22_378 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="MemberExpressionFingerprint.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="428-429"];
m22_379 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="MemberExpressionFingerprint.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="431-431"];
m22_380 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="432-432"];
m22_381 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", span="424-424"];
m22_424 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="MemberExpressionFingerprint.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m22_154 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", span="188-188"];
m22_155 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="190-190"];
m22_156 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(typeof(Instance), job.Type)", span="192-192"];
m22_157 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''Method'', job.Method.Name)", span="193-193"];
m22_158 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", span="188-188"];
m22_51 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", span="84-84"];
m22_52 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="MemberExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                () => new Job(_type, _method, new[] { ''hello!'' }))", span="86-87"];
m22_53 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="MemberExpressionFingerprint.cs", label="Assert.Contains(''count'', exception.Message)", span="89-89"];
m22_54 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", span="84-84"];
m22_173 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", span="206-206"];
m22_174 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="MemberExpressionFingerprint.cs", label="IDisposable instance = null", span="208-208"];
m22_175 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => Job.FromExpression(() => instance.Dispose()))", span="210-211"];
m22_176 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", span="206-206"];
m22_113 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", span="149-149"];
m22_114 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => MethodWithArguments(''123'', 1))", span="151-151"];
m22_115 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''\''123\'''', job.Arguments[0])", span="153-153"];
m22_116 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''1'', job.Arguments[1])", span="154-154"];
m22_117 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", span="149-149"];
m22_121 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", span="529-529"];
m22_472 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="MemberExpressionFingerprint.cs", label="_methodInvoked = true", span="531-531"];
m22_473 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''hello'', stringArg)", span="533-533"];
m22_474 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="MemberExpressionFingerprint.cs", label="Assert.Equal(5, intArg)", span="534-534"];
m22_475 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", span="529-529"];
m22_75 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", span="113-113"];
m22_76 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="MemberExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => Job.FromExpression(null))", span="115-116"];
m22_77 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''methodCall'', exception.ParamName)", span="118-118"];
m22_78 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", span="113-113"];
m22_68 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", span="104-104"];
m22_69 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="MemberExpressionFingerprint.cs", label="var method = _type.GetMethod(''AsyncMethod'')", span="106-106"];
m22_70 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => new Job(_type, method, new string[0]))", span="108-109"];
m22_71 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", span="104-104"];
m22_7 [cluster="System.Type.GetMethod(string)", file="MemberExpressionFingerprint.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m22_423 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="159-159"];
m22_204 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", span="503-503"];
m22_459 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="MemberExpressionFingerprint.cs", label="a = ''hello''", span="505-505"];
m22_460 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", span="503-503"];
m22_112 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", span="548-548"];
m22_482 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="MemberExpressionFingerprint.cs", label="_methodInvoked = true", span="550-550"];
m22_483 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="MemberExpressionFingerprint.cs", label="Assert.Equal(SomeDateTime, argument)", span="552-552"];
m22_484 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", span="548-548"];
m22_36 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", span="66-66"];
m22_37 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="MemberExpressionFingerprint.cs", label="var job = new Job(_type, _method, _arguments)", span="68-68"];
m22_38 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="MemberExpressionFingerprint.cs", label="Assert.Same(_type, job.Type)", span="70-70"];
m22_39 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="MemberExpressionFingerprint.cs", label="Assert.Same(_method, job.Method)", span="71-71"];
m22_40 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="MemberExpressionFingerprint.cs", label="Assert.True(_arguments.SequenceEqual(job.Arguments))", span="72-72"];
m22_41 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", span="66-66"];
m22_332 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", span="513-513"];
m22_463 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = true", span="515-515"];
m22_464 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", span="513-513"];
m22_372 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", span="592-592"];
m22_502 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = true", span="594-594"];
m22_503 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", span="592-592"];
m22_488 [cluster="Hangfire.Core.Tests.Common.JobFacts.GenericMethod<T>(T)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.GenericMethod<T>(T)", span="560-560"];
m22_489 [cluster="Hangfire.Core.Tests.Common.JobFacts.GenericMethod<T>(T)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.GenericMethod<T>(T)", span="560-560"];
m22_239 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", span="260-260"];
m22_240 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = false", span="262-262"];
m22_241 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="263-263"];
m22_242 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="265-265"];
m22_243 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="MemberExpressionFingerprint.cs", label="Assert.True(_methodInvoked)", span="267-267"];
m22_244 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", span="260-260"];
m22_305 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", span="360-360"];
m22_306 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = false", span="363-363"];
m22_307 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => NullArgumentMethod(null))", span="364-364"];
m22_308 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="367-367"];
m22_309 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="MemberExpressionFingerprint.cs", label="Assert.True(_methodInvoked)", span="370-370"];
m22_310 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", span="360-360"];
m22_454 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="488-488"];
m22_14 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="41-41"];
m22_15 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new Job(null, _method, _arguments)", span="41-41"];
m22_16 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="41-41"];
m22_21 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="48-48"];
m22_22 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new Job(_type, null, _arguments)", span="48-48"];
m22_23 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="48-48"];
m22_27 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="55-55"];
m22_28 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new Job(typeof(Job), _method, _arguments)", span="55-55"];
m22_29 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="55-55"];
m22_33 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="62-62"];
m22_34 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new Job(_type, _method, null)", span="62-62"];
m22_35 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="62-62"];
m22_56 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="87-87"];
m22_57 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new Job(_type, _method, new[] { ''hello!'' })", span="87-87"];
m22_58 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="87-87"];
m22_66 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new Job(_type, method, new[] { ''hello!'' })", span="98-98"];
m22_65 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="98-98"];
m22_67 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="98-98"];
m22_73 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new Job(_type, method, new string[0])", span="109-109"];
m22_72 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="109-109"];
m22_74 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="109-109"];
m22_79 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="116-116"];
m22_80 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Job.FromExpression(null)", span="116-116"];
m22_81 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="116-116"];
m22_86 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="125-125"];
m22_87 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Job.FromExpression(() => new JobFacts())", span="125-125"];
m22_88 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="125-125"];
m22_89 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="125-125"];
m22_90 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new JobFacts()", span="125-125"];
m22_91 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="125-125"];
m22_97 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="131-131"];
m22_98 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Console.WriteLine()", span="131-131"];
m22_99 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="131-131"];
m22_110 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="MethodWithDateTimeArgument(date)", span="143-143"];
m22_109 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="143-143"];
m22_111 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="143-143"];
m22_118 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="151-151"];
m22_119 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="MethodWithArguments(''123'', 1)", span="151-151"];
m22_120 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="151-151"];
m22_132 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="MethodWithDateTimeArgument(date)", span="163-163"];
m22_135 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="MethodWithDateTimeArgument(date)", span="166-166"];
m22_131 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="163-163"];
m22_134 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="166-166"];
m22_133 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="163-163"];
m22_136 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="166-166"];
m22_141 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="175-175"];
m22_142 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Job.FromExpression<JobFacts>(null)", span="175-175"];
m22_143 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="175-175"];
m22_148 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="184-184"];
m22_149 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Job.FromExpression<JobFacts>(x => new JobFacts())", span="184-184"];
m22_150 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="184-184"];
m22_151 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="184-184"];
m22_152 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new JobFacts()", span="184-184"];
m22_153 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="184-184"];
m22_159 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="190-190"];
m22_160 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.Method()", span="190-190"];
m22_161 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="190-190"];
m22_170 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="instance.Dispose()", span="200-200"];
m22_169 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="200-200"];
m22_171 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="200-200"];
m22_178 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Job.FromExpression(() => instance.Dispose())", span="211-211"];
m22_181 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="instance.Dispose()", span="211-211"];
m22_177 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="211-211"];
m22_179 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="211-211"];
m22_180 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="211-211"];
m22_182 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="211-211"];
m22_187 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="219-219"];
m22_188 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Job.FromExpression(() => MethodWithReferenceParameter(ref test))", span="219-219"];
m22_189 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="219-219"];
m22_190 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="219-219"];
m22_191 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="MethodWithReferenceParameter(ref test)", span="219-219"];
m22_192 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="219-219"];
m22_198 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="227-227"];
m22_199 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Job.FromExpression(() => MethodWithOutputParameter(out test))", span="227-227"];
m22_200 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="227-227"];
m22_201 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="227-227"];
m22_202 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="MethodWithOutputParameter(out test)", span="227-227"];
m22_203 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="227-227"];
m22_208 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="234-234"];
m22_209 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Job.FromExpression(() => PrivateMethod())", span="234-234"];
m22_210 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="234-234"];
m22_211 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="234-234"];
m22_212 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="PrivateMethod()", span="234-234"];
m22_213 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="234-234"];
m22_220 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="240-240"];
m22_225 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="job.Perform(null, _token.Object)", span="243-243"];
m22_224 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="243-243"];
m22_221 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="StaticMethod()", span="240-240"];
m22_222 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="240-240"];
m22_226 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="243-243"];
m22_233 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="251-251"];
m22_237 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, null)", span="254-254"];
m22_236 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="254-254"];
m22_234 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="StaticMethod()", span="251-251"];
m22_235 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="251-251"];
m22_238 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="254-254"];
m22_245 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="263-263"];
m22_246 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="StaticMethod()", span="263-263"];
m22_247 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="263-263"];
m22_254 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="274-274"];
m22_255 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.Method()", span="274-274"];
m22_256 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="274-274"];
m22_263 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="285-285"];
m22_264 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.Method()", span="285-285"];
m22_265 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="285-285"];
m22_272 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="297-297"];
m22_273 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="MethodWithArguments(''hello'', 5)", span="297-297"];
m22_274 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="297-297"];
m22_302 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="350-350"];
m22_303 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="MethodWithDateTimeArgument(SomeDateTime)", span="350-350"];
m22_304 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="350-350"];
m22_311 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="364-364"];
m22_312 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="NullArgumentMethod(null)", span="364-364"];
m22_313 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="364-364"];
m22_325 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="377-377"];
m22_329 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="379-379"];
m22_334 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="382-382"];
m22_333 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="382-382"];
m22_326 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.ActivateJob(It.IsAny<Type>())", span="377-377"];
m22_327 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="377-377"];
m22_330 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="InstanceMethod()", span="379-379"];
m22_331 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="379-379"];
m22_335 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="382-382"];
m22_343 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="390-390"];
m22_346 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="391-391"];
m22_350 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="394-394"];
m22_349 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="394-394"];
m22_344 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.ActivateJob(It.IsNotNull<Type>())", span="390-390"];
m22_345 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="390-390"];
m22_347 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="InstanceMethod()", span="391-391"];
m22_348 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="391-391"];
m22_351 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="394-394"];
m22_358 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new Job(type, method, new []{ JobHelper.ToJson(''sdfa'') })", span="406-406"];
m22_357 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="406-406"];
m22_359 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="406-406"];
m22_369 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="414-414"];
m22_374 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="417-417"];
m22_373 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="417-417"];
m22_370 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.Method()", span="414-414"];
m22_371 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="414-414"];
m22_375 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="417-417"];
m22_382 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="426-426"];
m22_387 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="429-429"];
m22_386 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="429-429"];
m22_383 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="ExceptionMethod()", span="426-426"];
m22_384 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="426-426"];
m22_388 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="429-429"];
m22_394 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="439-439"];
m22_403 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="444-444"];
m22_398 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="440-440"];
m22_402 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="444-444"];
m22_395 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="CancelableJob(JobCancellationToken.Null)", span="439-439"];
m22_396 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="439-439"];
m22_399 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.ThrowIfCancellationRequested()", span="440-440"];
m22_400 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="440-440"];
m22_404 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="444-444"];
m22_410 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="450-450"];
m22_411 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.FunctionReturningValue()", span="450-450"];
m22_412 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="450-450"];
m22_425 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="459-459"];
m22_426 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.Method()", span="459-459"];
m22_427 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="459-459"];
m22_438 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="473-473"];
m22_439 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.Method()", span="473-473"];
m22_440 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="473-473"];
m22_450 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="487-487"];
m22_451 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.Dispose()", span="487-487"];
m22_452 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="487-487"];
m22_455 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="x.Dispose()", span="488-488"];
m22_456 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="488-488"];
m22_183 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", span="215-215"];
m22_184 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="MemberExpressionFingerprint.cs", label="string test = null", span="217-217"];
m22_185 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => MethodWithReferenceParameter(ref test)))", span="218-219"];
m22_186 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", span="215-215"];
m22_296 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", span="346-346"];
m22_297 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = false", span="349-349"];
m22_298 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="350-350"];
m22_299 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="353-353"];
m22_300 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="MemberExpressionFingerprint.cs", label="Assert.True(_methodInvoked)", span="356-356"];
m22_301 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", span="346-346"];
m22_8 [cluster="Mock<JobActivator>.cstr", file="MemberExpressionFingerprint.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m22_223 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", span="508-508"];
m22_461 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = true", span="510-510"];
m22_462 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", span="508-508"];
m22_497 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", span="579-579"];
m22_498 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", file="MemberExpressionFingerprint.cs", label="_disposed = true", span="581-581"];
m22_499 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", span="579-579"];
m22_82 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187"];
m22_30 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", span="59-59"];
m22_31 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Job(_type, _method, null))", span="61-62"];
m22_32 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", span="59-59"];
m22_10 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", span="38-38"];
m22_11 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Job(null, _method, _arguments))", span="40-41"];
m22_12 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", span="38-38"];
m22_108 [cluster="System.DateTime.ToString(string)", file="MemberExpressionFingerprint.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m22_64 [cluster="Unk.Equal", file="MemberExpressionFingerprint.cs", label="Entry Unk.Equal", span=""];
m22_322 [cluster="System.InvalidOperationException.InvalidOperationException()", file="MemberExpressionFingerprint.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m22_92 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", span="129-129"];
m22_93 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => Console.WriteLine())", span="131-131"];
m22_94 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(typeof(Console), job.Type)", span="133-133"];
m22_95 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''WriteLine'', job.Method.Name)", span="134-134"];
m22_96 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", span="129-129"];
m22_45 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", span="76-76"];
m22_46 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="MemberExpressionFingerprint.cs", label="var job = new Job(_type, _method)", span="78-78"];
m22_47 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="MemberExpressionFingerprint.cs", label="Assert.Empty(job.Arguments)", span="80-80"];
m22_48 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", span="76-76"];
m22_215 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", span="238-238"];
m22_216 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="240-240"];
m22_217 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="MemberExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => job.Perform(null, _token.Object))", span="242-243"];
m22_218 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''activator'', exception.ParamName)", span="245-245"];
m22_219 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", span="238-238"];
m22_107 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="MemberExpressionFingerprint.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m22_487 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="MemberExpressionFingerprint.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m22_414 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="457-457"];
m22_415 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="459-459"];
m22_416 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="var nonCachedAttributes = job.GetTypeFilterAttributes(false).ToArray()", span="460-460"];
m22_417 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="var cachedAttributes = job.GetTypeFilterAttributes(true).ToArray()", span="461-461"];
m22_418 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(1, nonCachedAttributes.Length)", span="463-463"];
m22_420 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Assert.True(nonCachedAttributes[0] is TestTypeAttribute)", span="466-466"];
m22_419 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(1, cachedAttributes.Length)", span="464-464"];
m22_421 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Assert.True(cachedAttributes[0] is TestTypeAttribute)", span="467-467"];
m22_422 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="457-457"];
m22_368 [cluster="Unk.NotNull", file="MemberExpressionFingerprint.cs", label="Entry Unk.NotNull", span=""];
m22_494 [cluster="System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", file="MemberExpressionFingerprint.cs", label="Entry System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", span="0-0"];
m22_323 [cluster="Unk.Setup", file="MemberExpressionFingerprint.cs", label="Entry Unk.Setup", span=""];
m22_504 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", span="597-597"];
m22_505 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", file="MemberExpressionFingerprint.cs", label="throw new InvalidOperationException();", span="599-599"];
m22_506 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", span="597-597"];
m22_471 [cluster="Unk.Null", file="MemberExpressionFingerprint.cs", label="Entry Unk.Null", span=""];
m22_360 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m22_428 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", span="471-471"];
m22_429 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="473-473"];
m22_430 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="var nonCachedAttributes = job.GetMethodFilterAttributes(false).ToArray()", span="474-474"];
m22_431 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="var cachedAttributes = job.GetMethodFilterAttributes(true).ToArray()", span="475-475"];
m22_432 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(1, nonCachedAttributes.Length)", span="477-477"];
m22_434 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Assert.True(nonCachedAttributes[0] is TestMethodAttribute)", span="480-480"];
m22_433 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(1, cachedAttributes.Length)", span="478-478"];
m22_435 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Assert.True(cachedAttributes[0] is TestMethodAttribute)", span="481-481"];
m22_436 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", span="471-471"];
m22_314 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", span="523-523"];
m22_468 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="MemberExpressionFingerprint.cs", label="_methodInvoked = true", span="525-525"];
m22_469 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="MemberExpressionFingerprint.cs", label="Assert.Null(argument)", span="526-526"];
m22_470 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", span="523-523"];
m22_83 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="122-122"];
m22_84 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => new JobFacts()))", span="124-125"];
m22_85 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="122-122"];
m22_9 [cluster="Mock<IJobCancellationToken>.cstr", file="MemberExpressionFingerprint.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m22_168 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Instance()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Instance()", span="571-571"];
m22_205 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", span="231-231"];
m22_206 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => PrivateMethod()))", span="233-234"];
m22_207 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", span="231-231"];
m22_50 [cluster="Unk.Empty", file="MemberExpressionFingerprint.cs", label="Entry Unk.Empty", span=""];
m22_397 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="518-518"];
m22_465 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="MemberExpressionFingerprint.cs", label="token.ThrowIfCancellationRequested()", span="520-520"];
m22_466 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="518-518"];
m22_228 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", span="249-249"];
m22_229 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="251-251"];
m22_230 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="MemberExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => job.Perform(_activator.Object, null))", span="253-254"];
m22_231 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''cancellationToken'', exception.ParamName)", span="256-256"];
m22_232 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", span="249-249"];
m22_49 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="100-100"];
m22_194 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", span="223-223"];
m22_195 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="MemberExpressionFingerprint.cs", label="string test", span="225-225"];
m22_196 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => MethodWithOutputParameter(out test)))", span="226-227"];
m22_197 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", span="223-223"];
m22_248 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", span="271-271"];
m22_249 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = false", span="273-273"];
m22_250 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="274-274"];
m22_251 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="276-276"];
m22_252 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="MemberExpressionFingerprint.cs", label="Assert.True(_methodInvoked)", span="278-278"];
m22_253 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", span="271-271"];
m22_42 [cluster="Unk.Same", file="MemberExpressionFingerprint.cs", label="Entry Unk.Same", span=""];
m22_286 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="MemberExpressionFingerprint.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m22_122 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", span="158-158"];
m22_123 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="MemberExpressionFingerprint.cs", label="var date = DateTime.UtcNow", span="160-160"];
m22_124 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="MemberExpressionFingerprint.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="162-162"];
m22_125 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="MemberExpressionFingerprint.cs", label="var enJob = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="163-163"];
m22_127 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="MemberExpressionFingerprint.cs", label="var ruJob = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="166-166"];
m22_126 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="MemberExpressionFingerprint.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="165-165"];
m22_128 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(enJob.Arguments[0], ruJob.Arguments[0])", span="168-168"];
m22_129 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", span="158-158"];
m22_441 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", span="485-485"];
m22_442 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="MemberExpressionFingerprint.cs", label="var job1 = Job.FromExpression<JobClassWrapper<Instance>>(x => x.Dispose())", span="487-487"];
m22_443 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="MemberExpressionFingerprint.cs", label="var job2 = Job.FromExpression<JobClassWrapper<BrokenDispose>>(x => x.Dispose())", span="488-488"];
m22_444 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="MemberExpressionFingerprint.cs", label="var id1 = job1.ToString()", span="489-489"];
m22_445 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="MemberExpressionFingerprint.cs", label="var id2 = job2.ToString()", span="490-490"];
m22_446 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="MemberExpressionFingerprint.cs", label="Assert.NotEqual(id1, id2)", span="492-492"];
m22_447 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", span="485-485"];
m22_13 [cluster="Unk.>", file="MemberExpressionFingerprint.cs", label="Entry Unk.>", span=""];
m22_401 [cluster="Unk.ThrowIfCancellationRequested", file="MemberExpressionFingerprint.cs", label="Entry Unk.ThrowIfCancellationRequested", span=""];
m22_163 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", span="197-197"];
m22_164 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="MemberExpressionFingerprint.cs", label="IDisposable instance = new Instance()", span="199-199"];
m22_165 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => instance.Dispose())", span="200-200"];
m22_166 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(typeof(Instance), job.Type)", span="202-202"];
m22_167 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", span="197-197"];
m22_24 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="52-52"];
m22_25 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<ArgumentException>(\r\n                () => new Job(typeof(Job), _method, _arguments))", span="54-55"];
m22_26 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="52-52"];
m22_145 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="181-181"];
m22_146 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression<JobFacts>(x => new JobFacts()))", span="183-184"];
m22_147 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="181-181"];
m22_285 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="MemberExpressionFingerprint.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m22_43 [cluster="Unk.SequenceEqual", file="MemberExpressionFingerprint.cs", label="Entry Unk.SequenceEqual", span=""];
m22_257 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", span="282-282"];
m22_258 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="MemberExpressionFingerprint.cs", label="_disposed = false", span="284-284"];
m22_259 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="285-285"];
m22_260 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="287-287"];
m22_261 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="MemberExpressionFingerprint.cs", label="Assert.True(_disposed)", span="289-289"];
m22_262 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", span="282-282"];
m22_324 [cluster="Unk.Throws", file="MemberExpressionFingerprint.cs", label="Entry Unk.Throws", span=""];
m22_227 [cluster="Unk.Perform", file="MemberExpressionFingerprint.cs", label="Entry Unk.Perform", span=""];
m22_275 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="307-307"];
m22_276 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="_methodInvoked = false", span="310-310"];
m22_277 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="var typeConverter = TypeDescriptor.GetConverter(typeof (DateTime))", span="311-311"];
m22_278 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="312-312"];
m22_279 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="var type = typeof (JobFacts)", span="314-314"];
m22_281 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="var job = new Job(type, method, new[] { convertedDate })", span="317-317"];
m22_280 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="315-315"];
m22_282 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="job.Perform(_activator.Object, _token.Object)", span="320-320"];
m22_283 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="Assert.True(_methodInvoked)", span="323-323"];
m22_284 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="307-307"];
m22_476 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", span="537-537"];
m22_477 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="MemberExpressionFingerprint.cs", label="_methodInvoked = true", span="539-539"];
m22_478 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''5'', argument)", span="541-541"];
m22_479 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", span="537-537"];
m22_389 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="436-436"];
m22_390 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="439-439"];
m22_391 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="MemberExpressionFingerprint.cs", label="_token.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="440-440"];
m22_392 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="MemberExpressionFingerprint.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="443-444"];
m22_393 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="436-436"];
m22_55 [cluster="Unk.Contains", file="MemberExpressionFingerprint.cs", label="Entry Unk.Contains", span=""];
m22_328 [cluster="Unk.ActivateJob", file="MemberExpressionFingerprint.cs", label="Entry Unk.ActivateJob", span=""];
m22_44 [cluster="Unk.True", file="MemberExpressionFingerprint.cs", label="Entry Unk.True", span=""];
m22_59 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", span="93-93"];
m22_60 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="MemberExpressionFingerprint.cs", label="var method = _type.GetMethod(''GenericMethod'')", span="95-95"];
m22_61 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="MemberExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                () => new Job(_type, method, new[] { ''hello!'' }))", span="97-98"];
m22_62 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''method'', exception.ParamName)", span="100-100"];
m22_63 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", span="93-93"];
m22_448 [cluster="Hangfire.Common.Job.ToString()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.Job.ToString()", span="154-154"];
m22_490 [cluster="Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", span="564-564"];
m22_491 [cluster="Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", file="MemberExpressionFingerprint.cs", label="var source = new TaskCompletionSource<bool>()", span="566-566"];
m22_492 [cluster="Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", file="MemberExpressionFingerprint.cs", label="return source.Task;", span="567-567"];
m22_493 [cluster="Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", span="564-564"];
m22_130 [cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="MemberExpressionFingerprint.cs", label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0"];
m22_100 [cluster="System.Console.WriteLine()", file="MemberExpressionFingerprint.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m22_405 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", span="448-448"];
m22_406 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="MemberExpressionFingerprint.cs", label="var job = Job.FromExpression<Instance>(x => x.FunctionReturningValue())", span="450-450"];
m22_407 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="MemberExpressionFingerprint.cs", label="var result = job.Perform(_activator.Object, _token.Object)", span="452-452"];
m22_408 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="MemberExpressionFingerprint.cs", label="Assert.Equal(''Return value'', result)", span="454-454"];
m22_409 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", span="448-448"];
m22_508 [file="MemberExpressionFingerprint.cs", label="Hangfire.Core.Tests.Common.JobFacts", span=""];
m22_509 [file="MemberExpressionFingerprint.cs", label=method, span=""];
m22_510 [file="MemberExpressionFingerprint.cs", label=method, span=""];
m22_511 [file="MemberExpressionFingerprint.cs", label=date, span=""];
m22_512 [file="MemberExpressionFingerprint.cs", label=date, span=""];
m22_513 [file="MemberExpressionFingerprint.cs", label=instance, span=""];
m22_514 [file="MemberExpressionFingerprint.cs", label=instance, span=""];
m22_515 [file="MemberExpressionFingerprint.cs", label=test, span=""];
m22_516 [file="MemberExpressionFingerprint.cs", label=job, span=""];
m22_517 [file="MemberExpressionFingerprint.cs", label=job, span=""];
m22_518 [file="MemberExpressionFingerprint.cs", label=job, span=""];
m22_519 [file="MemberExpressionFingerprint.cs", label=job, span=""];
m22_520 [file="MemberExpressionFingerprint.cs", label=type, span=""];
m22_521 [file="MemberExpressionFingerprint.cs", label=method, span=""];
m22_522 [file="MemberExpressionFingerprint.cs", label=job, span=""];
m22_523 [file="MemberExpressionFingerprint.cs", label=job, span=""];
m22_524 [file="MemberExpressionFingerprint.cs", label=job, span=""];
m23_13 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51"];
m23_3 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29"];
m23_4 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs", label="BinaryExpressionFingerprint other = obj as BinaryExpressionFingerprint", span="31-31"];
m23_5 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs", label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="32-34"];
m23_6 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29"];
m23_8 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m23_7 [cluster="object.Equals(object, object)", file="MethodCallExpressionFingerprint.cs", label="Entry object.Equals(object, object)", span="0-0"];
m23_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24"];
m23_9 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37"];
m23_10 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="combiner.AddObject(Method)", span="39-39"];
m23_11 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="base.AddToHashCodeCombiner(combiner)", span="40-40"];
m23_12 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37"];
m23_0 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17"];
m23_1 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="MethodCallExpressionFingerprint.cs", label="Method = method", span="23-23"];
m23_2 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="MethodCallExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17"];
m23_15 [file="MethodCallExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", span=""];
m24_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ParameterExpressionFingerprint.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m24_19 [cluster="HangFire.JobActivator.JobActivator()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m24_44 [cluster="HangFire.Server.JobServer.RunServer()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.JobServer.RunServer()", span="86-86"];
m24_45 [cluster="HangFire.Server.JobServer.RunServer()", file="ParameterExpressionFingerprint.cs", label="AnnounceServer()", span="90-90"];
m24_46 [cluster="HangFire.Server.JobServer.RunServer()", file="ParameterExpressionFingerprint.cs", label="StartServer()", span="91-91"];
m24_47 [cluster="HangFire.Server.JobServer.RunServer()", file="ParameterExpressionFingerprint.cs", label="_stopped.WaitOne()", span="93-93"];
m24_48 [cluster="HangFire.Server.JobServer.RunServer()", file="ParameterExpressionFingerprint.cs", label="StopServer()", span="95-95"];
m24_49 [cluster="HangFire.Server.JobServer.RunServer()", file="ParameterExpressionFingerprint.cs", label="RemoveServer()", span="96-96"];
m24_50 [cluster="HangFire.Server.JobServer.RunServer()", file="ParameterExpressionFingerprint.cs", label=Exception, span="98-98"];
m24_51 [cluster="HangFire.Server.JobServer.RunServer()", file="ParameterExpressionFingerprint.cs", label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="100-100"];
m24_52 [cluster="HangFire.Server.JobServer.RunServer()", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Server.JobServer.RunServer()", span="86-86"];
m24_79 [cluster="Unk.SetRangeInHash", file="ParameterExpressionFingerprint.cs", label="Entry Unk.SetRangeInHash", span=""];
m24_16 [cluster="string.Format(string, object, object)", file="ParameterExpressionFingerprint.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m24_21 [cluster="System.Threading.Thread.Start()", file="ParameterExpressionFingerprint.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m24_22 [cluster="HangFire.Server.JobServer.Dispose()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="65-65"];
m24_23 [cluster="HangFire.Server.JobServer.Dispose()", file="ParameterExpressionFingerprint.cs", label="_stopped.Set()", span="67-67"];
m24_24 [cluster="HangFire.Server.JobServer.Dispose()", file="ParameterExpressionFingerprint.cs", label="_serverThread.Join()", span="68-68"];
m24_25 [cluster="HangFire.Server.JobServer.Dispose()", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="65-65"];
m24_17 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="12-12"];
m24_71 [cluster="Unk.AddItemToSet", file="ParameterExpressionFingerprint.cs", label="Entry Unk.AddItemToSet", span=""];
m24_75 [cluster="string.Format(string, object)", file="ParameterExpressionFingerprint.cs", label="Entry string.Format(string, object)", span="0-0"];
m24_78 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m24_95 [cluster="Unk.RemoveEntry", file="ParameterExpressionFingerprint.cs", label="Entry Unk.RemoveEntry", span=""];
m24_13 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="ParameterExpressionFingerprint.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m24_77 [cluster="int.ToString()", file="ParameterExpressionFingerprint.cs", label="Entry int.ToString()", span="0-0"];
m24_15 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="ParameterExpressionFingerprint.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m24_34 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m24_26 [cluster="System.Threading.EventWaitHandle.Set()", file="ParameterExpressionFingerprint.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m24_0 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="25-25"];
m24_1 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="queues == null", span="32-32"];
m24_3 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="concurrency <= 0", span="37-37"];
m24_5 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="pollInterval != pollInterval.Duration()", span="42-42"];
m24_7 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="47-47"];
m24_8 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="_context = new ServerContext(\r\n                serverName,\r\n                queues.ToList(),\r\n                concurrency,\r\n                pollInterval,\r\n                jobActivator ?? new JobActivator(),\r\n                JobPerformer.Current)", span="49-55"];
m24_2 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="throw new ArgumentNullException(''queues'');", span="34-34"];
m24_4 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="throw new ArgumentOutOfRangeException(''concurrency'', ''Concurrency value can not be negative or zero.'');", span="39-39"];
m24_6 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="44-44"];
m24_9 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="_serverThread = new Thread(RunServer)\r\n                {\r\n                    Name = typeof(JobServer).Name,\r\n                    IsBackground = true\r\n                }", span="57-61"];
m24_10 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="_serverThread.Start()", span="62-62"];
m24_11 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="25-25"];
m24_35 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m24_37 [cluster="HangFire.Server.JobServer.StopServer()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.JobServer.StopServer()", span="78-78"];
m24_38 [cluster="HangFire.Server.JobServer.StopServer()", file="ParameterExpressionFingerprint.cs", label="_fetchedJobsWatcher.Dispose()", span="80-80"];
m24_39 [cluster="HangFire.Server.JobServer.StopServer()", file="ParameterExpressionFingerprint.cs", label="_schedulePoller.Dispose()", span="81-81"];
m24_40 [cluster="HangFire.Server.JobServer.StopServer()", file="ParameterExpressionFingerprint.cs", label="_manager.Dispose()", span="82-82"];
m24_41 [cluster="HangFire.Server.JobServer.StopServer()", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Server.JobServer.StopServer()", span="78-78"];
m24_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ParameterExpressionFingerprint.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m24_42 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m24_53 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="104-104"];
m24_57 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="ParameterExpressionFingerprint.cs", label="var transaction = _redis.CreateTransaction()", span="106-106"];
m24_58 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="ParameterExpressionFingerprint.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="108-109"];
m24_59 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="ParameterExpressionFingerprint.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="111-117"];
m24_62 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="ParameterExpressionFingerprint.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName))", span="122-124"];
m24_63 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="ParameterExpressionFingerprint.cs", label="transaction.Commit()", span="127-127"];
m24_60 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="ParameterExpressionFingerprint.cs", label="_context.Queues", span="119-119"];
m24_61 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="ParameterExpressionFingerprint.cs", label="var queueName = queue", span="121-121"];
m24_64 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="104-104"];
m24_91 [cluster="Unk.RemoveItemFromSet", file="ParameterExpressionFingerprint.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m24_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ParameterExpressionFingerprint.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m24_56 [cluster="Unk.Fatal", file="ParameterExpressionFingerprint.cs", label="Entry Unk.Fatal", span=""];
m24_14 [cluster="System.TimeSpan.Duration()", file="ParameterExpressionFingerprint.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m24_28 [cluster="HangFire.Server.JobServer.StartServer()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.JobServer.StartServer()", span="71-71"];
m24_29 [cluster="HangFire.Server.JobServer.StartServer()", file="ParameterExpressionFingerprint.cs", label="_manager = new JobManager(_context)", span="73-73"];
m24_30 [cluster="HangFire.Server.JobServer.StartServer()", file="ParameterExpressionFingerprint.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_context.PollInterval))", span="74-74"];
m24_31 [cluster="HangFire.Server.JobServer.StartServer()", file="ParameterExpressionFingerprint.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher())", span="75-75"];
m24_32 [cluster="HangFire.Server.JobServer.StartServer()", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Server.JobServer.StartServer()", span="71-71"];
m24_93 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="139-141"];
m24_68 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Entry lambda expression", span="108-109"];
m24_72 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Entry lambda expression", span="111-117"];
m24_81 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName)", span="122-124"];
m24_80 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Entry lambda expression", span="122-124"];
m24_69 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="108-109"];
m24_70 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Exit lambda expression", span="108-109"];
m24_73 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="111-117"];
m24_74 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Exit lambda expression", span="111-117"];
m24_82 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Exit lambda expression", span="122-124"];
m24_88 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Entry lambda expression", span="135-137"];
m24_92 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Entry lambda expression", span="139-141"];
m24_89 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName)", span="135-137"];
m24_90 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Exit lambda expression", span="135-137"];
m24_94 [cluster="lambda expression", file="ParameterExpressionFingerprint.cs", label="Exit lambda expression", span="139-141"];
m24_67 [cluster="Unk.Commit", file="ParameterExpressionFingerprint.cs", label="Entry Unk.Commit", span=""];
m24_33 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", span="24-24"];
m24_36 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="8-8"];
m24_66 [cluster="Unk.QueueCommand", file="ParameterExpressionFingerprint.cs", label="Entry Unk.QueueCommand", span=""];
m24_43 [cluster="HangFire.Server.JobManager.Dispose()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="44-44"];
m24_54 [cluster="System.Threading.WaitHandle.WaitOne()", file="ParameterExpressionFingerprint.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m24_65 [cluster="Unk.CreateTransaction", file="ParameterExpressionFingerprint.cs", label="Entry Unk.CreateTransaction", span=""];
m24_20 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="ParameterExpressionFingerprint.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m24_85 [cluster="HangFire.Server.JobServer.RemoveServer()", file="ParameterExpressionFingerprint.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="139-141"];
m24_55 [cluster="HangFire.Server.JobServer.RemoveServer()", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Server.JobServer.RemoveServer()", span="131-131"];
m24_83 [cluster="HangFire.Server.JobServer.RemoveServer()", file="ParameterExpressionFingerprint.cs", label="var transaction = _redis.CreateTransaction()", span="133-133"];
m24_84 [cluster="HangFire.Server.JobServer.RemoveServer()", file="ParameterExpressionFingerprint.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="135-137"];
m24_86 [cluster="HangFire.Server.JobServer.RemoveServer()", file="ParameterExpressionFingerprint.cs", label="transaction.Commit()", span="143-143"];
m24_87 [cluster="HangFire.Server.JobServer.RemoveServer()", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Server.JobServer.RemoveServer()", span="131-131"];
m24_96 [file="ParameterExpressionFingerprint.cs", label="HangFire.Server.JobServer", span=""];
m24_97 [file="ParameterExpressionFingerprint.cs", label=queueName, span=""];
m25_36 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", span="82-82"];
m25_37 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", file="ProcessingStateHandler.cs", label="AddOrUpdate(methodCall, cronExpression())", span="84-84"];
m25_38 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", file="ProcessingStateHandler.cs", label="Exit HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", span="82-82"];
m25_9 [cluster="HangFire.RecurringJobManager.AddOrUpdate(string, HangFire.Common.Job, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJobManager.AddOrUpdate(string, HangFire.Common.Job, string)", span="40-40"];
m25_41 [cluster="string.Format(string, object, object)", file="ProcessingStateHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m25_33 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", span="74-74"];
m25_34 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", file="ProcessingStateHandler.cs", label="AddOrUpdate(recurringJobId, methodCall, cronExpression())", span="79-79"];
m25_35 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", file="ProcessingStateHandler.cs", label="Exit HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", span="74-74"];
m25_3 [cluster="HangFire.RecurringJobManager.RecurringJobManager(HangFire.JobStorage)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJobManager.RecurringJobManager(HangFire.JobStorage)", span="33-33"];
m25_5 [cluster="HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", file="ProcessingStateHandler.cs", label="var job = Job.FromExpression(methodCall)", span="32-32"];
m25_6 [cluster="HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", color=green, community=0, file="ProcessingStateHandler.cs", label="0: Instance.Value.AddOrUpdate(recurringJobId, job, cronExpression)", span="33-33"];
m25_7 [cluster="HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", file="ProcessingStateHandler.cs", label="Exit HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", span="27-27"];
m25_28 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="66-66"];
m25_31 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="ProcessingStateHandler.cs", label="Instance.Value.AddOrUpdate(id, job, cronExpression)", span="71-71"];
m25_29 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="ProcessingStateHandler.cs", label="var job = Job.FromExpression(methodCall)", span="68-68"];
m25_30 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="ProcessingStateHandler.cs", label="var id = GetRecurringJobId(job)", span="69-69"];
m25_32 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="ProcessingStateHandler.cs", label="Exit HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="66-66"];
m25_20 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="52-52"];
m25_21 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="ProcessingStateHandler.cs", label="AddOrUpdate(methodCall, cronExpression())", span="54-54"];
m25_22 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="ProcessingStateHandler.cs", label="Exit HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="52-52"];
m25_0 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="25-25"];
m25_1 [cluster="lambda expression", color=green, community=0, file="ProcessingStateHandler.cs", label="0: new RecurringJobManager(JobStorage.Current)", span="25-25"];
m25_2 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="25-25"];
m25_23 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="57-57"];
m25_25 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="ProcessingStateHandler.cs", label="Instance.Value.AddOrUpdate(recurringJobId, job, cronExpression)", span="63-63"];
m25_24 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="ProcessingStateHandler.cs", label="var job = Job.FromExpression(methodCall)", span="62-62"];
m25_26 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="ProcessingStateHandler.cs", label="Exit HangFire.RecurringJob.AddOrUpdate<T>(string, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="57-57"];
m25_10 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", span="36-36"];
m25_11 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", color=green, community=0, file="ProcessingStateHandler.cs", label="0: var job = Job.FromExpression(methodCall)", span="38-38"];
m25_12 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", file="ProcessingStateHandler.cs", label="var id = GetRecurringJobId(job)", span="39-39"];
m25_13 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", file="ProcessingStateHandler.cs", label="Instance.Value.AddOrUpdate(id, job, cronExpression)", span="41-41"];
m25_14 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", file="ProcessingStateHandler.cs", label="Exit HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", span="36-36"];
m25_4 [cluster="HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", span="27-27"];
m25_16 [cluster="HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="44-44"];
m25_17 [cluster="HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="ProcessingStateHandler.cs", label="AddOrUpdate(recurringJobId, methodCall, cronExpression())", span="49-49"];
m25_18 [cluster="HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="ProcessingStateHandler.cs", label="Exit HangFire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="44-44"];
m25_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m25_15 [cluster="HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", file="ProcessingStateHandler.cs", label="Entry HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", span="87-87"];
m25_39 [cluster="HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", file="ProcessingStateHandler.cs", label="return String.Format(''{0}.{1}'', job.Type.Name, job.Method.Name);", span="89-89"];
m25_40 [cluster="HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", file="ProcessingStateHandler.cs", label="Exit HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", span="87-87"];
m25_19 [cluster="System.Func<TResult>.Invoke()", file="ProcessingStateHandler.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m25_27 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ProcessingStateHandler.cs", label="Entry HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="144-144"];
m26_42 [cluster="string.Format(string, object, object)", file="RedisStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m26_38 [cluster="HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", span="21-21"];
m26_31 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="86-86"];
m26_32 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new FailedStateHandler();", span="88-88"];
m26_33 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new ProcessingStateHandler();", span="89-89"];
m26_34 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new SucceededStateHandler();", span="90-90"];
m26_35 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="86-86"];
m26_2 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string)", span="36-36"];
m26_3 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string)", span="36-36"];
m26_36 [cluster="HangFire.Redis.FailedStateHandler.FailedStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.FailedStateHandler.FailedStateHandler()", span="23-23"];
m26_22 [cluster="RedisConnection.cstr", file="RedisStorage.cs", label="Entry RedisConnection.cstr", span=""];
m26_30 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", file="RedisStorage.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", span="33-33"];
m26_18 [cluster="Unk.GetClient", file="RedisStorage.cs", label="Entry Unk.GetClient", span=""];
m26_37 [cluster="HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", span="23-23"];
m26_17 [cluster="RedisMonitoringApi.cstr", file="RedisStorage.cs", label="Entry RedisMonitoringApi.cstr", span=""];
m26_39 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.ToString()", span="93-93"];
m26_40 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="return String.Format(''redis://{0}/{1}'', HostAndPort, Db);", span="95-95"];
m26_41 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.ToString()", span="93-93"];
m26_0 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage()", span="31-31"];
m26_1 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage()", span="31-31"];
m26_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="46-46"];
m26_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="HostAndPort = hostAndPort", span="48-48"];
m26_8 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Db = db", span="49-49"];
m26_9 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Options = options", span="50-50"];
m26_10 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ HostAndPort },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = Db,\r\n                    MaxWritePoolSize = Options.ConnectionPoolSize\r\n                })", span="52-59"];
m26_11 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="46-46"];
m26_29 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="RedisStorage.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m26_19 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="73-73"];
m26_20 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="return new RedisConnection(_pooledManager.GetClient());", span="75-75"];
m26_21 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="73-73"];
m26_13 [cluster="RedisClientManagerConfig.cstr", file="RedisStorage.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m26_14 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="68-68"];
m26_15 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="return new RedisMonitoringApi(_pooledManager.GetClient());", span="70-70"];
m26_16 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="68-68"];
m26_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41"];
m26_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41"];
m26_23 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="78-78"];
m26_24 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="var stateMachineFactory = new StateMachineFactory(this)", span="80-80"];
m26_25 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new SchedulePoller(this, stateMachineFactory, Options.PollInterval);", span="82-82"];
m26_26 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new FetchedJobsWatcher(this, stateMachineFactory);", span="83-83"];
m26_27 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="78-78"];
m26_12 [cluster="PooledRedisClientManager.cstr", file="RedisStorage.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m26_28 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RedisStorage.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m26_43 [file="RedisStorage.cs", label="HangFire.Redis.RedisStorage", span=""];
m27_24 [cluster="System.Threading.Thread.Start()", file="ScheduledState.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m27_68 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="ScheduledState.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0"];
m27_46 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Dispose()", file="ScheduledState.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Dispose()", span="0-0"];
m27_48 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="ScheduledState.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m27_17 [cluster="string.Format(string, object)", file="ScheduledState.cs", label="Entry string.Format(string, object)", span="0-0"];
m27_31 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="ScheduledState.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m27_49 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="ScheduledState.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="86-86"];
m27_50 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="ScheduledState.cs", label="_freeWorkers.Add(worker)", span="88-88"];
m27_51 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="ScheduledState.cs", label="Exit HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="86-86"];
m27_22 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", file="ScheduledState.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", span="14-14"];
m27_18 [cluster="Unk.Info", file="ScheduledState.cs", label="Entry Unk.Info", span=""];
m27_19 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="ScheduledState.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m27_53 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="Entry HangFire.Server.JobManager.Work()", span="91-91"];
m27_54 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label=true, span="95-95"];
m27_55 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="Worker worker", span="97-97"];
m27_64 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label=OperationCanceledException, span="117-117"];
m27_65 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label=Exception, span="121-121"];
m27_56 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="worker = _freeWorkers.Take(_cts.Token)", span="100-100"];
m27_57 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="worker.Crashed", span="102-102"];
m27_63 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="worker.Process(jobId)", span="114-114"];
m27_58 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="JobPayload jobId", span="104-104"];
m27_59 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="jobId = _fetcher.DequeueJob()", span="107-107"];
m27_60 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="jobId == null", span="108-108"];
m27_62 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="jobId == null", span="112-112"];
m27_61 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="_cts.Token.ThrowIfCancellationRequested()", span="110-110"];
m27_66 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="_logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. Jobs from the queue '{0}' will not be processed by this server.'', \r\n                        _pool.Queue),\r\n                    ex)", span="123-127"];
m27_67 [cluster="HangFire.Server.JobManager.Work()", file="ScheduledState.cs", label="Exit HangFire.Server.JobManager.Work()", span="91-91"];
m27_70 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ScheduledState.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m27_47 [cluster="Unk.Dispose", file="ScheduledState.cs", label="Entry Unk.Dispose", span=""];
m27_0 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", span="25-25"];
m27_1 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_context = context", span="27-27"];
m27_2 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_pool = pool", span="28-28"];
m27_3 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_workers = new List<Worker>(pool.WorkersCount)", span="30-30"];
m27_5 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_logger.Info(String.Format(''Starting {0} workers...'', pool.WorkersCount))", span="33-33"];
m27_7 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="i < pool.WorkersCount", span="35-35"];
m27_8 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_workers.Add(\r\n                    new Worker(this, new WorkerContext(context, i)))", span="37-38"];
m27_11 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_fetcher = new JobFetcher(_redis, pool.Queue)", span="43-43"];
m27_4 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_freeWorkers = new BlockingCollection<Worker>()", span="31-31"];
m27_6 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="var i = 0", span="35-35"];
m27_9 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="i++", span="35-35"];
m27_10 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_logger.Info(''Workers were started.'')", span="41-41"];
m27_12 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_managerThread = new Thread(Work)\r\n                {\r\n                    Name = typeof(JobManager).Name,\r\n                    IsBackground = true\r\n                }", span="45-49"];
m27_13 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="_managerThread.Start()", span="50-50"];
m27_14 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="ScheduledState.cs", label="Exit HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", span="25-25"];
m27_52 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="ScheduledState.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m27_72 [cluster="Unk.Fatal", file="ScheduledState.cs", label="Entry Unk.Fatal", span=""];
m27_16 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="ScheduledState.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0"];
m27_32 [cluster="HangFire.Server.Worker.SendStop()", file="ScheduledState.cs", label="Entry HangFire.Server.Worker.SendStop()", span="47-47"];
m27_25 [cluster="HangFire.Server.JobManager.SendStop()", file="ScheduledState.cs", label="Entry HangFire.Server.JobManager.SendStop()", span="53-53"];
m27_26 [cluster="HangFire.Server.JobManager.SendStop()", color=red, community=0, file="ScheduledState.cs", label="0: _stopSent = true", span="55-55"];
m27_27 [cluster="HangFire.Server.JobManager.SendStop()", file="ScheduledState.cs", label="_cts.Cancel()", span="57-57"];
m27_28 [cluster="HangFire.Server.JobManager.SendStop()", file="ScheduledState.cs", label=_workers, span="59-59"];
m27_29 [cluster="HangFire.Server.JobManager.SendStop()", file="ScheduledState.cs", label="worker.SendStop()", span="61-61"];
m27_30 [cluster="HangFire.Server.JobManager.SendStop()", file="ScheduledState.cs", label="Exit HangFire.Server.JobManager.SendStop()", span="53-53"];
m27_15 [cluster="System.Collections.Generic.List<T>.List(int)", file="ScheduledState.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m27_69 [cluster="HangFire.Server.JobFetcher.DequeueJob()", file="ScheduledState.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob()", span="23-23"];
m27_21 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ScheduledState.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m27_33 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="65-65"];
m27_34 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label="!_stopSent", span="67-67"];
m27_35 [cluster="HangFire.Server.JobManager.Dispose()", color=red, community=0, file="ScheduledState.cs", label="0: SendStop()", span="69-69"];
m27_36 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label="_managerThread.Join()", span="72-72"];
m27_37 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label=_workers, span="74-74"];
m27_38 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label="worker.Dispose()", span="76-76"];
m27_39 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label="_logger.Info(''Workers were stopped.'')", span="78-78"];
m27_40 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label="_freeWorkers.Dispose()", span="80-80"];
m27_41 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label="_redis.Dispose()", span="82-82"];
m27_42 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label="_cts.Dispose()", span="83-83"];
m27_43 [cluster="HangFire.Server.JobManager.Dispose()", file="ScheduledState.cs", label="Exit HangFire.Server.JobManager.Dispose()", span="65-65"];
m27_20 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="ScheduledState.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="9-9"];
m27_45 [cluster="HangFire.Server.Worker.Dispose()", file="ScheduledState.cs", label="Entry HangFire.Server.Worker.Dispose()", span="81-81"];
m27_23 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="ScheduledState.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m27_71 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="ScheduledState.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="71-71"];
m27_73 [file="ScheduledState.cs", label="HangFire.Server.JobManager", span=""];
m28_0 [cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Entry HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22"];
m28_1 [cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Exit HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22"];
m28_2 [cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Entry HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27"];
m28_3 [cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Exit HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27"];
m29_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateHandlerCollection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m29_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateHandlerCollection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m29_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateHandlerCollection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m29_10 [cluster="System.ArgumentException.ArgumentException(string, string)", file="StateHandlerCollection.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m29_21 [cluster="System.Collections.Generic.List<T>.ToArray()", file="StateHandlerCollection.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m29_14 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateHandlerCollection.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m29_0 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="StateHandlerCollection.cs", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23"];
m29_1 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", color=green, community=0, file="StateHandlerCollection.cs", label="0: ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="25-25"];
m29_3 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="StateHandlerCollection.cs", label="Exit Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23"];
m29_5 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.StateHandler)", file="StateHandlerCollection.cs", label="!_handlers.ContainsKey(handler.StateName)", span="32-32"];
m29_6 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.StateHandler)", color=red, community=0, file="StateHandlerCollection.cs", label="0: _handlers.Add(handler.StateName, new List<StateHandler>())", span="34-34"];
m29_7 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.StateHandler)", file="StateHandlerCollection.cs", label="_handlers[handler.StateName].Add(handler)", span="37-37"];
m29_2 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="StateHandlerCollection.cs", label="CheckInterval = ServerWatchdog.DefaultCheckInterval", span="26-26"];
m29_4 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.StateHandler)", file="StateHandlerCollection.cs", label="Hangfire.Server.ServerWatchdogOptions", span=""];
m29_8 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.StateHandler)", file="StateHandlerCollection.cs", label="Exit HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.StateHandler)", span="27-27"];
m29_15 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs", label="Entry HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40"];
m29_16 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs", label="stateName == null || !_handlers.ContainsKey(stateName)", span="42-42"];
m29_18 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs", label="return _handlers[stateName].ToArray();", span="47-47"];
m29_17 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", color=red, community=0, file="StateHandlerCollection.cs", label="0: return Enumerable.Empty<StateHandler>();", span="44-44"];
m29_19 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs", label="Exit HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40"];
m29_20 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateHandlerCollection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m29_22 [file="StateHandlerCollection.cs", label="HangFire.States.StateHandlerCollection", span=""];
m31_0 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="StateHandlerProviders.cs", label="Entry HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22"];
m31_1 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", color=green, community=0, file="StateHandlerProviders.cs", label="0: return null;", span="24-24"];
m31_2 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="StateHandlerProviders.cs", label="Exit HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22"];
m32_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_17 [cluster="Unk.Persist", file="StateMachine.cs", label="Entry Unk.Persist", span=""];
m32_8 [cluster="Unk.QueueCommand", file="StateMachine.cs", label="Entry Unk.QueueCommand", span=""];
m32_18 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="14-15"];
m32_14 [cluster="lambda expression", file="StateMachine.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(''hangfire:job:{0}'', jobId))", span="12-13"];
m32_19 [cluster="lambda expression", file="StateMachine.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(''hangfire:job:{0}:history'', jobId))", span="14-15"];
m32_9 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="11-11"];
m32_13 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="12-13"];
m32_10 [cluster="lambda expression", file="StateMachine.cs", label="x.DecrementValue(''hangfire:stats:succeeded'')", span="11-11"];
m32_11 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="11-11"];
m32_15 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="12-13"];
m32_20 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="14-15"];
m32_12 [cluster="Unk.DecrementValue", file="StateMachine.cs", label="Entry Unk.DecrementValue", span=""];
m32_0 [cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", file="StateMachine.cs", label="Entry HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7"];
m32_1 [cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", file="StateMachine.cs", label="transaction == null", span="9-9"];
m32_3 [cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.DecrementValue(''hangfire:stats:succeeded''))", span="11-11"];
m32_4 [cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", file="StateMachine.cs", label="transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(''hangfire:job:{0}'', jobId)))", span="12-13"];
m32_5 [cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", file="StateMachine.cs", label="transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(''hangfire:job:{0}:history'', jobId)))", span="14-15"];
m32_2 [cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", file="StateMachine.cs", label="throw new ArgumentNullException(''transaction'');", span="9-9"];
m32_6 [cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", file="StateMachine.cs", label="Exit HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7"];
m32_21 [file="StateMachine.cs", label=string, span=""];
m33_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachineFactory.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m33_11 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Entry HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="24-24"];
m33_12 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="connection == null", span="26-26"];
m33_14 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="return new StateMachine(connection, _handlers);", span="28-28"];
m33_13 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''connection'');", span="26-26"];
m33_15 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Exit HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="24-24"];
m33_16 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>)", file="StateMachineFactory.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>)", span="32-32"];
m33_0 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m33_1 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Exit HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m33_10 [cluster="HangFire.JobStorage.GetStateHandlers()", file="StateMachineFactory.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="62-62"];
m33_2 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m33_3 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="storage == null", span="18-18"];
m33_6 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="_handlers.AddRange(storage.GetStateHandlers())", span="21-21"];
m33_4 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''storage'');", span="18-18"];
m33_5 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="_handlers.AddRange(GlobalStateHandlers.Handlers)", span="20-20"];
m33_7 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="Exit HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m33_9 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="StateMachineFactory.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m33_17 [file="StateMachineFactory.cs", label="HangFire.States.StateMachineFactory", span=""];
m34_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachineFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m34_350 [cluster="Mock<StateMachine>.cstr", file="StateMachineFacts.cs", label="Entry Mock<StateMachine>.cstr", span=""];
m34_314 [cluster="Unk.Any", file="StateMachineFacts.cs", label="Entry Unk.Any", span=""];
m34_33 [cluster="Unk.Equal", file="StateMachineFacts.cs", label="Entry Unk.Equal", span=""];
m34_153 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m34_154 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="180-181"];
m34_155 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="183-183"];
m34_156 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new [] { ''Old'' })", span="186-186"];
m34_159 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()),\r\n                Times.Never)", span="192-194"];
m34_157 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="Assert.False(result)", span="189-189"];
m34_158 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="_connection.Verify(x => x.GetJobData(''1''))", span="190-190"];
m34_160 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m34_270 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m34_271 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="317-317"];
m34_272 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="318-318"];
m34_274 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs", label="stateMachine\r\n                .Setup(x => x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>()))\r\n                .Returns(electedState.Object)", span="321-324"];
m34_275 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs", label="stateMachine.Object.ChangeState(context, _state.Object, OldStateName)", span="326-326"];
m34_276 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))", span="328-329"];
m34_273 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs", label="var electedState = new Mock<State>()", span="319-319"];
m34_277 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m34_284 [cluster="Unk.ElectState", file="StateMachineFacts.cs", label="Entry Unk.ElectState", span=""];
m34_99 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m34_348 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="StateMachineFacts.cs", label="return new Mock<StateMachine>(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters)\r\n            {\r\n                CallBase = true\r\n            };", span="394-400"];
m34_349 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m34_242 [cluster="HangFire.Common.JobLoadException.JobLoadException()", file="StateMachineFacts.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33"];
m34_27 [cluster="Unk.>", file="StateMachineFacts.cs", label="Entry Unk.>", span=""];
m34_210 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m34_211 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="249-254"];
m34_212 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="256-256"];
m34_213 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))\r\n                .Returns(true)", span="258-259"];
m34_214 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="262-263"];
m34_215 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old''))", span="266-269"];
m34_216 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs", label="Assert.True(result)", span="271-271"];
m34_217 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m34_28 [cluster="Unk.CreateExpiredJob", file="StateMachineFacts.cs", label="Entry Unk.CreateExpiredJob", span=""];
m34_262 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="StateMachineFacts.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m34_38 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m34_39 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null, _filters))", span="55-56"];
m34_40 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''handlers'', exception.ParamName)", span="58-58"];
m34_41 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m34_45 [cluster="StateMachine.cstr", file="StateMachineFacts.cs", label="Entry StateMachine.cstr", span=""];
m34_129 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m34_130 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="155-155"];
m34_131 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', _state.Object, null))", span="157-158"];
m34_132 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''fromStates'', exception.ParamName)", span="160-160"];
m34_133 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m34_72 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachineFacts.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="52-52"];
m34_161 [cluster="Unk.False", file="StateMachineFacts.cs", label="Entry Unk.False", span=""];
m34_111 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m34_112 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="133-133"];
m34_113 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' }))", span="135-136"];
m34_114 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="138-138"];
m34_115 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m34_288 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m34_289 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="335-335"];
m34_290 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="336-336"];
m34_292 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs", label="stateMachine.Setup(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))\r\n                .Throws(exception)", span="339-341"];
m34_293 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="343-344"];
m34_294 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any())))", span="346-350"];
m34_291 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs", label="var exception = new NotSupportedException()", span="337-337"];
m34_295 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs", label="Assert.False(result)", span="351-351"];
m34_296 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m34_255 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m34_256 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="303-303"];
m34_257 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="304-304"];
m34_258 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="306-307"];
m34_259 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>()))", span="309-310"];
m34_260 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs", label="Assert.True(result)", span="311-311"];
m34_261 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m34_315 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m34_316 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", color=red, community=0, file="StateMachineFacts.cs", label="0: var handler1 = new Mock<StateHandler>()", span="358-358"];
m34_317 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="handler1.Setup(x => x.StateName).Returns(StateName)", span="359-359"];
m34_320 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="_handlers.Add(handler1.Object)", span="364-364"];
m34_325 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="handler1.Verify(x => x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>()))", span="375-381"];
m34_318 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", color=red, community=0, file="StateMachineFacts.cs", label="0: var handler2 = new Mock<StateHandler>()", span="361-361"];
m34_319 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="handler2.Setup(x => x.StateName).Returns(StateName)", span="362-362"];
m34_321 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="_handlers.Add(handler2.Object)", span="365-365"];
m34_322 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="367-367"];
m34_323 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="368-368"];
m34_324 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="stateMachine.ApplyState(\r\n                context, _state.Object, OldStateName, Enumerable.Empty<IApplyStateFilter>())", span="371-372"];
m34_326 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m34_128 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachineFacts.cs", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="72-72"];
m34_186 [cluster="System.Console.WriteLine()", file="StateMachineFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m34_235 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m34_236 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = null,\r\n                    LoadException = new JobLoadException()\r\n                })", span="278-284"];
m34_237 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="286-286"];
m34_238 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="289-289"];
m34_239 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old''))", span="292-295"];
m34_240 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="Assert.False(result)", span="297-297"];
m34_241 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m34_103 [cluster="Unk.ChangeState", file="StateMachineFacts.cs", label="Entry Unk.ChangeState", span=""];
m34_297 [cluster="System.NotSupportedException.NotSupportedException()", file="StateMachineFacts.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m34_94 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m34_95 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="113-113"];
m34_96 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs", label="stateMachine.Object.CreateInState(_job, _parameters, _state.Object)", span="115-115"];
m34_97 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null))", span="117-120"];
m34_98 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m34_329 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateMachineFacts.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m34_328 [cluster="Unk.Add", file="StateMachineFacts.cs", label="Entry Unk.Add", span=""];
m34_327 [cluster="Mock<StateHandler>.cstr", file="StateMachineFacts.cs", label="Entry Mock<StateHandler>.cstr", span=""];
m34_269 [cluster="Unk.ApplyState", file="StateMachineFacts.cs", label="Entry Unk.ApplyState", span=""];
m34_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachineFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m34_137 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m34_138 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="var disposableMock = new Mock<IDisposable>()", span="166-166"];
m34_139 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.AcquireJobLock(''1'')).Returns(disposableMock.Object)", span="167-167"];
m34_142 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="disposableMock.Verify(x => x.Dispose())", span="173-173"];
m34_140 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="169-169"];
m34_141 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="stateMachine.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="171-171"];
m34_143 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m34_120 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m34_121 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="144-144"];
m34_122 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' }))", span="146-147"];
m34_123 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''toState'', exception.ParamName)", span="149-149"];
m34_124 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m34_10 [cluster="Mock<State>.cstr", file="StateMachineFacts.cs", label="Entry Mock<State>.cstr", span=""];
m34_190 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m34_191 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="225-230"];
m34_192 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="232-232"];
m34_193 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))\r\n                .Returns(false)", span="233-234"];
m34_194 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="237-237"];
m34_195 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="stateMachine.Verify(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))", span="240-240"];
m34_196 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="Assert.False(result)", span="241-241"];
m34_197 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m34_11 [cluster="Unk.Setup", file="StateMachineFacts.cs", label="Entry Unk.Setup", span=""];
m34_51 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m34_346 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs", label="return new StateMachine(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters);", span="386-389"];
m34_347 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m34_0 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m34_1 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_job = Job.FromExpression(() => Console.WriteLine(''Hello''))", span="30-30"];
m34_2 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_parameters = new Dictionary<string, string>()", span="31-31"];
m34_3 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_state = new Mock<State>()", span="32-32"];
m34_4 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_state.Setup(x => x.Name).Returns(StateName)", span="33-33"];
m34_5 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.CreateWriteTransaction())\r\n                .Returns(_transaction.Object)", span="35-36"];
m34_6 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="37-40"];
m34_7 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m34_152 [cluster="Unk.Dispose", file="StateMachineFacts.cs", label="Entry Unk.Dispose", span=""];
m34_37 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachineFacts.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m34_298 [cluster="Unk.Throws", file="StateMachineFacts.cs", label="Entry Unk.Throws", span=""];
m34_107 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m34_108 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="126-126"];
m34_109 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs", label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="127-127"];
m34_110 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m34_73 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m34_74 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="97-97"];
m34_75 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="_parameters.Add(''Name'', ''Value'')", span="98-98"];
m34_77 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="102-102"];
m34_76 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="100-100"];
m34_78 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="_connection.Verify(x => x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>()))", span="104-107"];
m34_79 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m34_148 [cluster="Unk.AcquireJobLock", file="StateMachineFacts.cs", label="Entry Unk.AcquireJobLock", span=""];
m34_119 [cluster="Unk.TryToChangeState", file="StateMachineFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m34_55 [cluster="Unk.CreateInState", file="StateMachineFacts.cs", label="Entry Unk.CreateInState", span=""];
m34_144 [cluster="Mock<IDisposable>.cstr", file="StateMachineFacts.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m34_343 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="376-380"];
m34_13 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="30-30"];
m34_17 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="33-33"];
m34_20 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="35-35"];
m34_24 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="37-40"];
m34_14 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine(''Hello'')", span="30-30"];
m34_15 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="30-30"];
m34_18 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.Name", span="33-33"];
m34_19 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="33-33"];
m34_21 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.CreateWriteTransaction()", span="35-35"];
m34_22 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="35-35"];
m34_25 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())", span="37-40"];
m34_26 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="37-40"];
m34_34 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="47-47"];
m34_35 [cluster="lambda expression", file="StateMachineFacts.cs", label="new StateMachine(null, _handlers, _filters)", span="47-47"];
m34_36 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="47-47"];
m34_42 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="56-56"];
m34_43 [cluster="lambda expression", file="StateMachineFacts.cs", label="new StateMachine(_connection.Object, null, _filters)", span="56-56"];
m34_44 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="56-56"];
m34_53 [cluster="lambda expression", file="StateMachineFacts.cs", label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="67-67"];
m34_52 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="67-67"];
m34_54 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="67-67"];
m34_62 [cluster="lambda expression", file="StateMachineFacts.cs", label="stateMachine.CreateInState(_job, null, _state.Object)", span="78-78"];
m34_61 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="78-78"];
m34_63 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="78-78"];
m34_70 [cluster="lambda expression", file="StateMachineFacts.cs", label="stateMachine.CreateInState(_job, _parameters, null)", span="89-89"];
m34_69 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="89-89"];
m34_71 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="89-89"];
m34_82 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="97-97"];
m34_85 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="104-107"];
m34_83 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine(''SomeString'')", span="97-97"];
m34_84 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="97-97"];
m34_86 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>())", span="104-107"];
m34_87 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="104-107"];
m34_88 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="105-105"];
m34_91 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="106-106"];
m34_89 [cluster="lambda expression", file="StateMachineFacts.cs", label="j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''", span="105-105"];
m34_90 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="105-105"];
m34_92 [cluster="lambda expression", file="StateMachineFacts.cs", label="d[''Name''] == ''Value''", span="106-106"];
m34_93 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="106-106"];
m34_100 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="117-120"];
m34_101 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null)", span="117-120"];
m34_102 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="117-120"];
m34_104 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="118-118"];
m34_105 [cluster="lambda expression", file="StateMachineFacts.cs", label="sc.JobId == JobId && sc.Job == _job", span="118-118"];
m34_106 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="118-118"];
m34_117 [cluster="lambda expression", file="StateMachineFacts.cs", label="stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' })", span="136-136"];
m34_116 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="136-136"];
m34_118 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="136-136"];
m34_126 [cluster="lambda expression", file="StateMachineFacts.cs", label="stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' })", span="147-147"];
m34_125 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="147-147"];
m34_127 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="147-147"];
m34_135 [cluster="lambda expression", file="StateMachineFacts.cs", label="stateMachine.TryToChangeState(''1'', _state.Object, null)", span="158-158"];
m34_134 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="158-158"];
m34_136 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="158-158"];
m34_145 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="167-167"];
m34_149 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="173-173"];
m34_146 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.AcquireJobLock(''1'')", span="167-167"];
m34_147 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="167-167"];
m34_150 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.Dispose()", span="173-173"];
m34_151 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="173-173"];
m34_162 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="180-180"];
m34_166 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="190-190"];
m34_169 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="193-193"];
m34_163 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(It.IsAny<string>())", span="180-180"];
m34_164 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="180-180"];
m34_167 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(''1'')", span="190-190"];
m34_168 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="190-190"];
m34_170 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="193-193"];
m34_171 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="193-193"];
m34_180 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="201-201"];
m34_183 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="205-205"];
m34_187 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="217-217"];
m34_181 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(''1'')", span="201-201"];
m34_182 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="201-201"];
m34_184 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine()", span="205-205"];
m34_185 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="205-205"];
m34_188 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="217-217"];
m34_189 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="217-217"];
m34_198 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="225-225"];
m34_201 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="229-229"];
m34_204 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="233-233"];
m34_207 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="240-240"];
m34_199 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(''1'')", span="225-225"];
m34_200 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="225-225"];
m34_202 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine()", span="229-229"];
m34_203 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="229-229"];
m34_205 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="233-233"];
m34_206 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="233-233"];
m34_208 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="240-240"];
m34_209 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="240-240"];
m34_219 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="249-249"];
m34_222 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="253-253"];
m34_225 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="258-258"];
m34_228 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="266-269"];
m34_220 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(''1'')", span="249-249"];
m34_221 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="249-249"];
m34_223 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine()", span="253-253"];
m34_224 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="253-253"];
m34_226 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="258-258"];
m34_227 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="258-258"];
m34_229 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old'')", span="266-269"];
m34_230 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="266-269"];
m34_231 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="267-267"];
m34_232 [cluster="lambda expression", file="StateMachineFacts.cs", label="sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')", span="267-267"];
m34_233 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="267-267"];
m34_243 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="278-278"];
m34_246 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="292-295"];
m34_244 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(''1'')", span="278-278"];
m34_245 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="278-278"];
m34_247 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old'')", span="292-295"];
m34_248 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="292-295"];
m34_249 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="293-293"];
m34_252 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="294-294"];
m34_250 [cluster="lambda expression", file="StateMachineFacts.cs", label="sc.JobId == ''1'' && sc.Job == null", span="293-293"];
m34_251 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="293-293"];
m34_253 [cluster="lambda expression", file="StateMachineFacts.cs", label="s.Exception != null", span="294-294"];
m34_254 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="294-294"];
m34_263 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="304-304"];
m34_267 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>())", span="309-310"];
m34_266 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="309-310"];
m34_264 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine()", span="304-304"];
m34_265 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="304-304"];
m34_268 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="309-310"];
m34_278 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="318-318"];
m34_282 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>())", span="322-323"];
m34_286 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="328-329"];
m34_281 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="322-323"];
m34_285 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="328-329"];
m34_279 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine()", span="318-318"];
m34_280 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="318-318"];
m34_283 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="322-323"];
m34_287 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="328-329"];
m34_299 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="336-336"];
m34_303 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="339-340"];
m34_306 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any()))", span="346-350"];
m34_309 [cluster="lambda expression", file="StateMachineFacts.cs", label="s.Exception == exception", span="348-348"];
m34_302 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="339-340"];
m34_305 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="346-350"];
m34_300 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine()", span="336-336"];
m34_301 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="336-336"];
m34_304 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="339-340"];
m34_307 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="346-350"];
m34_308 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="348-348"];
m34_311 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="350-350"];
m34_310 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="348-348"];
m34_312 [cluster="lambda expression", file="StateMachineFacts.cs", label="!f.Any()", span="350-350"];
m34_313 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="350-350"];
m34_330 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="359-359"];
m34_333 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="362-362"];
m34_336 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="368-368"];
m34_340 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>())", span="375-381"];
m34_344 [cluster="lambda expression", file="StateMachineFacts.cs", label="c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName", span="377-380"];
m34_339 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="375-381"];
m34_331 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.StateName", span="359-359"];
m34_332 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="359-359"];
m34_334 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.StateName", span="362-362"];
m34_335 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="362-362"];
m34_337 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine()", span="368-368"];
m34_338 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="368-368"];
m34_341 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="375-381"];
m34_345 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="376-380"];
m34_56 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m34_57 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="75-75"];
m34_58 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(_job, null, _state.Object))", span="77-78"];
m34_59 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="80-80"];
m34_60 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m34_46 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m34_47 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="64-64"];
m34_48 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(null, _parameters, _state.Object))", span="66-67"];
m34_49 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''job'', exception.ParamName)", span="69-69"];
m34_50 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m34_23 [cluster="Unk.CreateWriteTransaction", file="StateMachineFacts.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m34_172 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m34_173 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="201-206"];
m34_174 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="208-208"];
m34_175 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new [] { ''AnotherState'' })", span="211-212"];
m34_177 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()),\r\n                Times.Never)", span="216-218"];
m34_176 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="Assert.False(result)", span="215-215"];
m34_178 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m34_179 [cluster="HangFire.Storage.JobData.JobData()", file="StateMachineFacts.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m34_218 [cluster="Unk.True", file="StateMachineFacts.cs", label="Entry Unk.True", span=""];
m34_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachineFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
m34_12 [cluster="Unk.Returns", file="StateMachineFacts.cs", label="Entry Unk.Returns", span=""];
m34_29 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m34_30 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _handlers, _filters))", span="46-47"];
m34_31 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="49-49"];
m34_32 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m34_16 [cluster="System.Console.WriteLine(string)", file="StateMachineFacts.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m34_81 [cluster="Unk.Verify", file="StateMachineFacts.cs", label="Entry Unk.Verify", span=""];
m34_165 [cluster="Unk.GetJobData", file="StateMachineFacts.cs", label="Entry Unk.GetJobData", span=""];
m34_234 [cluster="Unk.Equals", file="StateMachineFacts.cs", label="Entry Unk.Equals", span=""];
m34_64 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m34_65 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="86-86"];
m34_66 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="88-89"];
m34_67 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="91-91"];
m34_68 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m34_351 [file="StateMachineFacts.cs", label="HangFire.Core.Tests.States.StateMachineFacts", span=""];
m34_352 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m34_353 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m34_354 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m34_355 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m34_356 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m34_357 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m34_358 [file="StateMachineFacts.cs", label=context, span=""];
m34_359 [file="StateMachineFacts.cs", label=context, span=""];
m34_360 [file="StateMachineFacts.cs", label=electedState, span=""];
m34_361 [file="StateMachineFacts.cs", label=context, span=""];
m34_362 [file="StateMachineFacts.cs", label=exception, span=""];
m34_363 [file="StateMachineFacts.cs", label=context, span=""];
m35_2 [cluster="HangFire.States.SucceededState.GetProperties()", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.GetProperties()", span="19-19"];
m35_3 [cluster="HangFire.States.SucceededState.GetProperties()", file="SucceededState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", span="21-24"];
m35_4 [cluster="HangFire.States.SucceededState.GetProperties()", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.GetProperties()", span="19-19"];
m35_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m35_16 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SucceededState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m35_29 [cluster="Unk.EnqueueItemOnList", file="SucceededState.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m35_37 [cluster="Unk.IncrementValue", file="SucceededState.cs", label="Entry Unk.IncrementValue", span=""];
m35_33 [cluster="Unk.TrimList", file="SucceededState.cs", label="Entry Unk.TrimList", span=""];
m35_17 [cluster="Unk.QueueCommand", file="SucceededState.cs", label="Entry Unk.QueueCommand", span=""];
m35_22 [cluster="Unk.ExpireEntryIn", file="SucceededState.cs", label="Entry Unk.ExpireEntryIn", span=""];
m35_11 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}:history'', JobId),\r\n                _jobExpirationTimeout))", span="35-37"];
m35_7 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Apply(IRedisTransaction)", span="27-27"];
m35_8 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction == null", span="29-29"];
m35_10 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                _jobExpirationTimeout))", span="31-33"];
m35_12 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(''hangfire:succeeded'', JobId))", span="39-39"];
m35_13 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.TrimList(''hangfire:succeeded'', 0, 99))", span="40-40"];
m35_14 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.IncrementValue(''hangfire:stats:succeeded''))", span="42-42"];
m35_9 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="throw new ArgumentNullException(''transaction'');", span="29-29"];
m35_15 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Apply(IRedisTransaction)", span="27-27"];
m35_0 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m35_1 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m35_24 [cluster="lambda expression", file="SucceededState.cs", label="x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}:history'', JobId),\r\n                _jobExpirationTimeout)", span="35-37"];
m35_18 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="31-33"];
m35_23 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="35-37"];
m35_26 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="39-39"];
m35_30 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="40-40"];
m35_34 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="42-42"];
m35_19 [cluster="lambda expression", file="SucceededState.cs", label="x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                _jobExpirationTimeout)", span="31-33"];
m35_20 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="31-33"];
m35_25 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="35-37"];
m35_27 [cluster="lambda expression", file="SucceededState.cs", label="x.EnqueueItemOnList(''hangfire:succeeded'', JobId)", span="39-39"];
m35_28 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="39-39"];
m35_31 [cluster="lambda expression", file="SucceededState.cs", label="x.TrimList(''hangfire:succeeded'', 0, 99)", span="40-40"];
m35_32 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="40-40"];
m35_35 [cluster="lambda expression", file="SucceededState.cs", label="x.IncrementValue(''hangfire:stats:succeeded'')", span="42-42"];
m35_36 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="42-42"];
m35_6 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m35_38 [file="SucceededState.cs", label="HangFire.States.SucceededState", span=""];
m36_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45"];
m36_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m36_6 [cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="30-30"];
m36_7 [cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs", label="transaction.RemoveFromList(''succeeded'', context.JobId)", span="33-33"];
m36_8 [cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="30-30"];
m36_0 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m36_1 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs", label="transaction.InsertToList(''succeeded'', context.JobId)", span="26-26"];
m36_2 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs", label="transaction.TrimList(''succeeded'', 0, 99)", span="27-27"];
m36_3 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m36_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m37_3 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.Equals(object)", file="TypeBinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.Equals(object)", span="25-25"];
m37_4 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.Equals(object)", file="TypeBinaryExpressionFingerprint.cs", label="TypeBinaryExpressionFingerprint other = obj as TypeBinaryExpressionFingerprint", span="27-27"];
m37_5 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.Equals(object)", file="TypeBinaryExpressionFingerprint.cs", label="return (other != null)\r\n                   && Equals(this.TypeOperand, other.TypeOperand)\r\n                   && this.Equals(other);", span="28-30"];
m37_6 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.Equals(object)", file="TypeBinaryExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.Equals(object)", span="25-25"];
m37_13 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="TypeBinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51"];
m37_9 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="TypeBinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="33-33"];
m37_10 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="TypeBinaryExpressionFingerprint.cs", label="combiner.AddObject(TypeOperand)", span="35-35"];
m37_11 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="TypeBinaryExpressionFingerprint.cs", label="base.AddToHashCodeCombiner(combiner)", span="36-36"];
m37_12 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="TypeBinaryExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="33-33"];
m37_8 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="TypeBinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m37_7 [cluster="object.Equals(object, object)", file="TypeBinaryExpressionFingerprint.cs", label="Entry object.Equals(object, object)", span="0-0"];
m37_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="TypeBinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24"];
m37_0 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", file="TypeBinaryExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", span="16-16"];
m37_1 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", file="TypeBinaryExpressionFingerprint.cs", label="TypeOperand = typeOperand", span="19-19"];
m37_2 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", file="TypeBinaryExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", span="16-16"];
m37_15 [file="TypeBinaryExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint", span=""];
m38_452 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue(bool)", span="556-556"];
m38_453 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="558-570"];
m38_454 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue(bool)", span="556-556"];
m38_769 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey(bool)", span="959-959"];
m38_770 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="961-963"];
m38_771 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)), useBatching);\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1'']);\r\n                Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''set-2'']);\r\n            })", span="965-982"];
m38_772 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey(bool)", span="959-959"];
m38_535 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt(bool)", span="678-678"];
m38_536 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="680-691"];
m38_537 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt(bool)", span="678-678"];
m38_440 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist(bool)", span="537-537"];
m38_441 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="539-550"];
m38_442 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist(bool)", span="537-537"];
m38_803 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="345-345"];
m38_635 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords(bool)", span="800-800"];
m38_636 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }), useBatching);\r\n\r\n                // Act\r\n                Commit(sql, x => x.RemoveHash(''some-hash''), useBatching);\r\n\r\n                // Assert\r\n                var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="802-817"];
m38_637 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords(bool)", span="800-800"];
m38_839 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash(bool)", span="1044-1044"];
m38_840 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1046-1048"];
m38_841 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistHash(''hash-1''), useBatching);\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''hash-1'']);\r\n                Assert.NotNull(records[''hash-2'']);\r\n            })", span="1050-1066"];
m38_842 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash(bool)", span="1044-1044"];
m38_270 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="167-167"];
m38_377 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="198-198"];
m38_43 [cluster="Unk.ToString", file="UnaryExpressionFingerprint.cs", label="Entry Unk.ToString", span=""];
m38_177 [cluster="Unk.AddJobState", file="UnaryExpressionFingerprint.cs", label="Entry Unk.AddJobState", span=""];
m38_908 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash(bool)", span="1128-1128"];
m38_909 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1130-1132"];
m38_910 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistList(''list-1''), useBatching);\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''list-1'']);\r\n                Assert.NotNull(records[''list-2'']);\r\n            })", span="1134-1150"];
m38_911 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash(bool)", span="1128-1128"];
m38_478 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey(bool)", span="595-595"];
m38_479 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="597-608"];
m38_480 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey(bool)", span="595-595"];
m38_731 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="319-319"];
m38_547 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey(bool)", span="697-697"];
m38_548 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="699-710"];
m38_549 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey(bool)", span="697-697"];
m38_678 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet(bool)", span="851-851"];
m38_679 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var items = new List<string> { ''1'', ''2'', ''3'' };\r\n\r\n                Commit(sql, x => x.AddRangeToSet(''my-set'', items), useBatching);\r\n\r\n                var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''');\r\n                Assert.Equal(items, records);\r\n            })", span="853-861"];
m38_680 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet(bool)", span="851-851"];
m38_27 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData(bool)", span="39-39"];
m38_28 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="41-44"];
m38_29 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromHours(24)), useBatching);\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddHours(25));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="46-58"];
m38_30 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData(bool)", span="39-39"];
m38_713 [cluster="Unk.Execute", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Execute", span=""];
m38_825 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull(bool)", span="1030-1030"];
m38_826 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null), useBatching));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1032-1038"];
m38_827 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull(bool)", span="1030-1030"];
m38_236 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="247-247"];
m38_237 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="UnaryExpressionFingerprint.cs", label="return connection\r\n                .Query(''select * from HangFire.Job where Id = @id'', new { id = jobId })\r\n                .Single();", span="249-251"];
m38_238 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="247-247"];
m38_838 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="358-358"];
m38_402 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="214-214"];
m38_45 [cluster="Unk.GetTestJob", file="UnaryExpressionFingerprint.cs", label="Entry Unk.GetTestJob", span=""];
m38_7 [cluster="Mock<IPersistentJobQueue>.cstr", file="UnaryExpressionFingerprint.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m38_907 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="380-380"];
m38_252 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="159-159"];
m38_873 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="369-369"];
m38_768 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="332-332"];
m38_941 [cluster="SqlServerWriteOnlyTransaction.cstr", file="UnaryExpressionFingerprint.cs", label="Entry SqlServerWriteOnlyTransaction.cstr", span=""];
m38_509 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex(bool)", span="638-638"];
m38_510 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="640-653"];
m38_511 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex(bool)", span="638-638"];
m38_339 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="193-193"];
m38_326 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue(bool)", span="373-373"];
m38_327 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''), useBatching);\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="375-384"];
m38_328 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue(bool)", span="373-373"];
m38_378 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist(bool)", span="445-445"];
m38_379 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                }, useBatching);\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="447-458"];
m38_380 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist(bool)", span="445-445"];
m38_690 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull(bool)", span="867-867"];
m38_691 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null), useBatching));\r\n            })", span="869-873"];
m38_692 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull(bool)", span="867-867"];
m38_211 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue(bool)", span="230-230"];
m38_212 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue(bool)", file="UnaryExpressionFingerprint.cs", label="var correctJobQueue = new Mock<IPersistentJobQueue>()", span="232-232"];
m38_216 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''), useBatching);\r\n\r\n                correctJobQueue.Verify(x => x.Enqueue(It.IsNotNull<IDbConnection>(), ''default'', ''1''));\r\n            })", span="239-244"];
m38_213 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue(bool)", file="UnaryExpressionFingerprint.cs", label="var correctProvider = new Mock<IPersistentJobQueueProvider>()", span="233-233"];
m38_214 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue(bool)", file="UnaryExpressionFingerprint.cs", label="correctProvider.Setup(x => x.GetJobQueue())\r\n                .Returns(correctJobQueue.Object)", span="234-235"];
m38_215 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue(bool)", file="UnaryExpressionFingerprint.cs", label="_queueProviders.Add(correctProvider.Object, new[] { ''default'' })", span="237-237"];
m38_217 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue(bool)", span="230-230"];
m38_572 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="258-258"];
m38_500 [cluster="Unk.ToArray", file="UnaryExpressionFingerprint.cs", label="Entry Unk.ToArray", span=""];
m38_850 [cluster="System.DateTime.AddDays(double)", file="UnaryExpressionFingerprint.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m38_5 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="UnaryExpressionFingerprint.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m38_0 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="18-18"];
m38_1 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="UnaryExpressionFingerprint.cs", label="var defaultProvider = new Mock<IPersistentJobQueueProvider>()", span="20-20"];
m38_2 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="UnaryExpressionFingerprint.cs", label="defaultProvider.Setup(x => x.GetJobQueue())\r\n                .Returns(new Mock<IPersistentJobQueue>().Object)", span="21-22"];
m38_3 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="UnaryExpressionFingerprint.cs", label="_queueProviders = new PersistentJobQueueProviderCollection(defaultProvider.Object)", span="24-24"];
m38_4 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="18-18"];
m38_44 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>, bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>, bool)", span="1161-1161"];
m38_933 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>, bool)", file="UnaryExpressionFingerprint.cs", label="var storage = new Mock<SqlServerStorage>(connection, new SqlServerStorageOptions { CommandBatchMaxTimeout = useBatching ? TimeSpan.FromMinutes(1) : (TimeSpan?)null })", span="1166-1166"];
m38_936 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>, bool)", file="UnaryExpressionFingerprint.cs", label="action(transaction)", span="1171-1171"];
m38_934 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>, bool)", file="UnaryExpressionFingerprint.cs", label="storage.Setup(x => x.QueueProviders).Returns(_queueProviders)", span="1167-1167"];
m38_935 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>, bool)", file="UnaryExpressionFingerprint.cs", label="var transaction = new SqlServerWriteOnlyTransaction(storage.Object, () => null)", span="1169-1169"];
m38_937 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>, bool)", file="UnaryExpressionFingerprint.cs", label="transaction.Commit()", span="1172-1172"];
m38_938 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>, bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>, bool)", span="1161-1161"];
m38_605 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_CanSetANullValue(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_CanSetANullValue(bool)", span="767-767"];
m38_606 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_CanSetANullValue(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', null }\r\n                }), useBatching);\r\n\r\n                var result = sql.Query(\r\n                        ''select * from HangFire.Hash where [Key] = @key'',\r\n                        new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(null, result[''Key1'']);\r\n            })", span="769-782"];
m38_607 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_CanSetANullValue(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_CanSetANullValue(bool)", span="767-767"];
m38_178 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_CanBeCalledWithNullReasonAndData(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_CanBeCalledWithNullReasonAndData(bool)", span="196-196"];
m38_179 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_CanBeCalledWithNullReasonAndData(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="198-201"];
m38_180 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_CanBeCalledWithNullReasonAndData(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns((string)null);\r\n                state.Setup(x => x.SerializeData()).Returns((Dictionary<string, string>)null);\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object), useBatching);\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(null, jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(null, jobState.Data);\r\n            })", span="203-224"];
m38_181 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_CanBeCalledWithNullReasonAndData(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_CanBeCalledWithNullReasonAndData(bool)", span="196-196"];
m38_523 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex(bool)", span="659-659"];
m38_524 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="661-672"];
m38_525 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex(bool)", span="659-659"];
m38_703 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey(bool)", span="879-879"];
m38_704 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score]) values (@key, @value, 0.0)''", span="881-882"];
m38_705 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                Commit(sql, x => x.RemoveSet(''set-1''), useBatching);\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n                Assert.Equal(''set-2'', record.Key);\r\n            })", span="884-896"];
m38_706 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey(bool)", span="879-879"];
m38_946 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1169-1169"];
m38_10 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="21-21"];
m38_11 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.GetJobQueue()", span="21-21"];
m38_12 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="21-21"];
m38_20 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="31-31"];
m38_21 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="new SqlServerWriteOnlyTransaction(null, () => null)", span="31-31"];
m38_22 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="31-31"];
m38_24 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="31-31"];
m38_25 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label=null, span="31-31"];
m38_26 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="31-31"];
m38_35 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromHours(24)), useBatching)", span="51-51"];
m38_33 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="48-48"];
m38_34 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="49-49"];
m38_32 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="46-58"];
m38_36 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var job = GetTestJob(sql, jobId)", span="53-53"];
m38_38 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="56-56"];
m38_50 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.ExpireJob(jobId, TimeSpan.FromHours(24))", span="51-51"];
m38_49 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="51-51"];
m38_37 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddHours(25))", span="54-54"];
m38_39 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(anotherJob.ExpireAt)", span="57-57"];
m38_40 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="46-58"];
m38_51 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="51-51"];
m38_61 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.PersistJob(jobId), useBatching)", span="76-76"];
m38_59 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="73-73"];
m38_60 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="74-74"];
m38_58 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="71-83"];
m38_62 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var job = GetTestJob(sql, jobId)", span="78-78"];
m38_64 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="81-81"];
m38_69 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.PersistJob(jobId)", span="76-76"];
m38_68 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="76-76"];
m38_63 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(job.ExpireAt)", span="79-79"];
m38_65 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="82-82"];
m38_66 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="71-83"];
m38_70 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="76-76"];
m38_83 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object), useBatching)", span="107-107"];
m38_77 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="98-98"];
m38_78 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="99-99"];
m38_76 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="96-123"];
m38_84 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var job = GetTestJob(sql, jobId)", span="109-109"];
m38_87 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="113-113"];
m38_90 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="117-117"];
m38_110 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SetJobState(jobId, state.Object)", span="107-107"];
m38_91 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="118-118"];
m38_79 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var state = new Mock<IState>()", span="101-101"];
m38_80 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="102-102"];
m38_81 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="103-103"];
m38_82 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="104-105"];
m38_99 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="102-102"];
m38_102 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="103-103"];
m38_105 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="104-104"];
m38_109 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="107-107"];
m38_85 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''State'', job.StateName)", span="110-110"];
m38_86 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(job.StateId)", span="111-111"];
m38_88 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(anotherJob.StateName)", span="114-114"];
m38_89 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(anotherJob.StateId)", span="115-115"];
m38_92 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''State'', jobState.Name)", span="119-119"];
m38_93 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="120-120"];
m38_94 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(jobState.CreatedAt)", span="121-121"];
m38_95 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="122-122"];
m38_96 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="96-123"];
m38_100 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.Name", span="102-102"];
m38_101 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="102-102"];
m38_103 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.Reason", span="103-103"];
m38_104 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="103-103"];
m38_106 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SerializeData()", span="104-104"];
m38_107 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="104-104"];
m38_111 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="107-107"];
m38_123 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object), useBatching)", span="145-145"];
m38_118 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="138-138"];
m38_117 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="136-155"];
m38_124 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var job = GetTestJob(sql, jobId)", span="147-147"];
m38_127 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="151-151"];
m38_119 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var state = new Mock<IState>()", span="140-140"];
m38_142 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SetJobState(jobId, state.Object)", span="145-145"];
m38_120 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="141-141"];
m38_121 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.Reason).Returns((string)null)", span="142-142"];
m38_122 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.SerializeData()).Returns((Dictionary<string, string>)null)", span="143-143"];
m38_132 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="141-141"];
m38_135 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="142-142"];
m38_138 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="143-143"];
m38_141 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="145-145"];
m38_125 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''State'', job.StateName)", span="148-148"];
m38_126 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(job.StateId)", span="149-149"];
m38_128 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''State'', jobState.Name)", span="152-152"];
m38_129 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(null, jobState.Reason)", span="153-153"];
m38_130 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(null, jobState.Data)", span="154-154"];
m38_131 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="136-155"];
m38_133 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.Name", span="141-141"];
m38_134 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="141-141"];
m38_136 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.Reason", span="142-142"];
m38_137 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="142-142"];
m38_139 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SerializeData()", span="143-143"];
m38_140 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="143-143"];
m38_143 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="145-145"];
m38_154 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object), useBatching)", span="178-178"];
m38_149 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="170-170"];
m38_148 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="168-190"];
m38_155 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var job = GetTestJob(sql, jobId)", span="180-180"];
m38_158 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="184-184"];
m38_150 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var state = new Mock<IState>()", span="172-172"];
m38_175 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddJobState(jobId, state.Object)", span="178-178"];
m38_159 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="185-185"];
m38_151 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="173-173"];
m38_152 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="174-174"];
m38_153 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="175-176"];
m38_165 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="173-173"];
m38_168 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="174-174"];
m38_171 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="175-175"];
m38_174 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="178-178"];
m38_156 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(job.StateName)", span="181-181"];
m38_157 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(job.StateId)", span="182-182"];
m38_160 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''State'', jobState.Name)", span="186-186"];
m38_161 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="187-187"];
m38_162 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(jobState.CreatedAt)", span="188-188"];
m38_163 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="189-189"];
m38_164 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="168-190"];
m38_166 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.Name", span="173-173"];
m38_167 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="173-173"];
m38_169 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.Reason", span="174-174"];
m38_170 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="174-174"];
m38_172 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SerializeData()", span="175-175"];
m38_173 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="175-175"];
m38_176 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="178-178"];
m38_188 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object), useBatching)", span="212-212"];
m38_183 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="205-205"];
m38_182 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="203-224"];
m38_189 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var job = GetTestJob(sql, jobId)", span="214-214"];
m38_192 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="218-218"];
m38_184 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var state = new Mock<IState>()", span="207-207"];
m38_209 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddJobState(jobId, state.Object)", span="212-212"];
m38_193 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="219-219"];
m38_185 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="208-208"];
m38_186 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.Reason).Returns((string)null)", span="209-209"];
m38_187 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="state.Setup(x => x.SerializeData()).Returns((Dictionary<string, string>)null)", span="210-210"];
m38_199 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="208-208"];
m38_202 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="209-209"];
m38_205 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="210-210"];
m38_208 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="212-212"];
m38_190 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(job.StateName)", span="215-215"];
m38_191 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(job.StateId)", span="216-216"];
m38_194 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''State'', jobState.Name)", span="220-220"];
m38_195 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(null, jobState.Reason)", span="221-221"];
m38_196 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(jobState.CreatedAt)", span="222-222"];
m38_197 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(null, jobState.Data)", span="223-223"];
m38_198 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="203-224"];
m38_200 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.Name", span="208-208"];
m38_201 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="208-208"];
m38_203 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.Reason", span="209-209"];
m38_204 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="209-209"];
m38_206 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SerializeData()", span="210-210"];
m38_207 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="210-210"];
m38_210 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="212-212"];
m38_224 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.AddToQueue(''default'', ''1''), useBatching)", span="241-241"];
m38_225 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="correctJobQueue.Verify(x => x.Enqueue(It.IsNotNull<IDbConnection>(), ''default'', ''1''))", span="243-243"];
m38_220 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="234-234"];
m38_223 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="239-244"];
m38_221 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.GetJobQueue()", span="234-234"];
m38_222 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="234-234"];
m38_228 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="241-241"];
m38_226 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="239-244"];
m38_232 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="243-243"];
m38_229 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToQueue(''default'', ''1'')", span="241-241"];
m38_230 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="241-241"];
m38_233 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.Enqueue(It.IsNotNull<IDbConnection>(), ''default'', ''1'')", span="243-243"];
m38_234 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="243-243"];
m38_243 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.IncrementCounter(''my-key''), useBatching)", span="261-261"];
m38_242 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="259-268"];
m38_244 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="263-263"];
m38_249 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="261-261"];
m38_245 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-key'', record.Key)", span="265-265"];
m38_246 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(1, record.Value)", span="266-266"];
m38_247 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="267-267"];
m38_248 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="259-268"];
m38_250 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.IncrementCounter(''my-key'')", span="261-261"];
m38_251 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="261-261"];
m38_257 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)), useBatching)", span="278-278"];
m38_256 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="276-290"];
m38_258 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="280-280"];
m38_266 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="278-278"];
m38_259 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-key'', record.Key)", span="282-282"];
m38_260 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(1, record.Value)", span="283-283"];
m38_261 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(record.ExpireAt)", span="284-284"];
m38_262 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var expireAt = (DateTime) record.ExpireAt", span="286-286"];
m38_263 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="288-288"];
m38_264 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="289-289"];
m38_265 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="276-290"];
m38_267 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="278-278"];
m38_268 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="278-278"];
m38_275 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                }, useBatching)", span="300-304"];
m38_274 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="298-309"];
m38_276 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="306-306"];
m38_279 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="300-304"];
m38_277 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(2, recordCount)", span="308-308"];
m38_278 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="298-309"];
m38_280 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.IncrementCounter(''my-key'')", span="302-302"];
m38_281 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.IncrementCounter(''my-key'')", span="303-303"];
m38_282 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="300-304"];
m38_287 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.DecrementCounter(''my-key''), useBatching)", span="319-319"];
m38_286 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="317-326"];
m38_288 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="321-321"];
m38_293 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="319-319"];
m38_289 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-key'', record.Key)", span="323-323"];
m38_290 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(-1, record.Value)", span="324-324"];
m38_291 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="325-325"];
m38_292 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="317-326"];
m38_294 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.DecrementCounter(''my-key'')", span="319-319"];
m38_295 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="319-319"];
m38_301 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)), useBatching)", span="336-336"];
m38_300 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="334-348"];
m38_302 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="338-338"];
m38_310 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="336-336"];
m38_303 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-key'', record.Key)", span="340-340"];
m38_304 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(-1, record.Value)", span="341-341"];
m38_305 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(record.ExpireAt)", span="342-342"];
m38_306 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var expireAt = (DateTime)record.ExpireAt", span="344-344"];
m38_307 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="346-346"];
m38_308 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="347-347"];
m38_309 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="334-348"];
m38_311 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="336-336"];
m38_312 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="336-336"];
m38_318 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                }, useBatching)", span="358-362"];
m38_317 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="356-367"];
m38_319 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="364-364"];
m38_322 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="358-362"];
m38_320 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(2, recordCount)", span="366-366"];
m38_321 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="356-367"];
m38_323 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.DecrementCounter(''my-key'')", span="360-360"];
m38_324 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.DecrementCounter(''my-key'')", span="361-361"];
m38_325 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="358-362"];
m38_330 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''), useBatching)", span="377-377"];
m38_329 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="375-384"];
m38_331 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="379-379"];
m38_336 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="377-377"];
m38_332 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-key'', record.Key)", span="381-381"];
m38_333 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-value'', record.Value)", span="382-382"];
m38_334 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(0.0, record.Score, 2)", span="383-383"];
m38_335 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="375-384"];
m38_337 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="377-377"];
m38_338 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="377-377"];
m38_344 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                }, useBatching)", span="394-398"];
m38_343 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="392-403"];
m38_345 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="400-400"];
m38_348 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="394-398"];
m38_346 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(2, recordCount)", span="402-402"];
m38_347 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="392-403"];
m38_349 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="396-396"];
m38_350 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''another-value'')", span="397-397"];
m38_351 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="394-398"];
m38_356 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                }, useBatching)", span="413-417"];
m38_355 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="411-422"];
m38_357 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="419-419"];
m38_360 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="413-417"];
m38_358 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(1, recordCount)", span="421-421"];
m38_359 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="411-422"];
m38_361 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="415-415"];
m38_362 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="416-416"];
m38_363 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="413-417"];
m38_368 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2), useBatching)", span="432-432"];
m38_367 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="430-439"];
m38_369 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="434-434"];
m38_374 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="432-432"];
m38_370 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-key'', record.Key)", span="436-436"];
m38_371 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-value'', record.Value)", span="437-437"];
m38_372 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(3.2, record.Score, 3)", span="438-438"];
m38_373 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="430-439"];
m38_375 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="432-432"];
m38_376 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="432-432"];
m38_382 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                }, useBatching)", span="449-453"];
m38_381 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="447-458"];
m38_383 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="455-455"];
m38_386 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="449-453"];
m38_384 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(3.2, record.Score, 3)", span="457-457"];
m38_385 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="447-458"];
m38_387 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="451-451"];
m38_388 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="452-452"];
m38_389 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="449-453"];
m38_394 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                }, useBatching)", span="468-472"];
m38_393 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="466-477"];
m38_395 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="474-474"];
m38_398 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="468-472"];
m38_396 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(0, recordCount)", span="476-476"];
m38_397 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="466-477"];
m38_399 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="470-470"];
m38_400 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveFromSet(''my-key'', ''my-value'')", span="471-471"];
m38_401 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="468-472"];
m38_407 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                }, useBatching)", span="487-491"];
m38_406 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="485-496"];
m38_408 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="493-493"];
m38_411 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="487-491"];
m38_409 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(1, recordCount)", span="495-495"];
m38_410 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="485-496"];
m38_412 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="489-489"];
m38_413 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveFromSet(''my-key'', ''different-value'')", span="490-490"];
m38_414 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="487-491"];
m38_419 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                }, useBatching)", span="506-510"];
m38_418 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="504-515"];
m38_420 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="512-512"];
m38_423 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="506-510"];
m38_421 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(1, recordCount)", span="514-514"];
m38_422 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="504-515"];
m38_424 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="508-508"];
m38_425 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveFromSet(''different-key'', ''my-value'')", span="509-509"];
m38_426 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="506-510"];
m38_431 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''), useBatching)", span="525-525"];
m38_430 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="523-531"];
m38_432 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var record = sql.Query(''select * from HangFire.List'').Single()", span="527-527"];
m38_436 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="525-525"];
m38_433 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-key'', record.Key)", span="529-529"];
m38_434 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''my-value'', record.Value)", span="530-530"];
m38_435 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="523-531"];
m38_437 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="525-525"];
m38_438 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="525-525"];
m38_444 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                }, useBatching)", span="541-545"];
m38_443 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="539-550"];
m38_445 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="547-547"];
m38_448 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="541-545"];
m38_446 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(2, recordCount)", span="549-549"];
m38_447 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="539-550"];
m38_449 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="543-543"];
m38_450 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="544-544"];
m38_451 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="541-545"];
m38_456 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                }, useBatching)", span="560-565"];
m38_455 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="558-570"];
m38_457 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="567-567"];
m38_460 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="560-565"];
m38_458 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(0, recordCount)", span="569-569"];
m38_459 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="558-570"];
m38_461 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="562-562"];
m38_462 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="563-563"];
m38_463 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveFromList(''my-key'', ''my-value'')", span="564-564"];
m38_464 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="560-565"];
m38_470 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                }, useBatching)", span="580-584"];
m38_469 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="578-589"];
m38_471 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="586-586"];
m38_474 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="580-584"];
m38_472 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(1, recordCount)", span="588-588"];
m38_473 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="578-589"];
m38_475 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="582-582"];
m38_476 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveFromList(''my-key'', ''different-value'')", span="583-583"];
m38_477 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="580-584"];
m38_482 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                }, useBatching)", span="599-603"];
m38_481 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="597-608"];
m38_483 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="605-605"];
m38_486 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="599-603"];
m38_484 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(1, recordCount)", span="607-607"];
m38_485 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="597-608"];
m38_487 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="601-601"];
m38_488 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveFromList(''different-key'', ''my-value'')", span="602-602"];
m38_489 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="599-603"];
m38_494 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                }, useBatching)", span="618-625"];
m38_493 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="616-632"];
m38_495 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="627-627"];
m38_501 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="618-625"];
m38_496 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(2, records.Length)", span="629-629"];
m38_497 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''1'', records[0].Value)", span="630-630"];
m38_498 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''2'', records[1].Value)", span="631-631"];
m38_499 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="616-632"];
m38_502 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''0'')", span="620-620"];
m38_503 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''1'')", span="621-621"];
m38_504 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''2'')", span="622-622"];
m38_505 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''3'')", span="623-623"];
m38_506 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.TrimList(''my-key'', 1, 2)", span="624-624"];
m38_507 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="618-625"];
m38_513 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                }, useBatching)", span="642-648"];
m38_512 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="640-653"];
m38_514 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="650-650"];
m38_517 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="642-648"];
m38_515 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(2, recordCount)", span="652-652"];
m38_516 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="640-653"];
m38_518 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''0'')", span="644-644"];
m38_519 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''1'')", span="645-645"];
m38_520 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''2'')", span="646-646"];
m38_521 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.TrimList(''my-key'', 1, 100)", span="647-647"];
m38_522 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="642-648"];
m38_527 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                }, useBatching)", span="663-667"];
m38_526 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="661-672"];
m38_528 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="669-669"];
m38_531 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="663-667"];
m38_529 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(0, recordCount)", span="671-671"];
m38_530 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="661-672"];
m38_532 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''0'')", span="665-665"];
m38_533 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.TrimList(''my-key'', 1, 100)", span="666-666"];
m38_534 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="663-667"];
m38_539 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                }, useBatching)", span="682-686"];
m38_538 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="680-691"];
m38_540 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="688-688"];
m38_543 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="682-686"];
m38_541 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(0, recordCount)", span="690-690"];
m38_542 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="680-691"];
m38_544 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''0'')", span="684-684"];
m38_545 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.TrimList(''my-key'', 1, 0)", span="685-685"];
m38_546 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="682-686"];
m38_551 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                }, useBatching)", span="701-705"];
m38_550 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="699-710"];
m38_552 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="707-707"];
m38_555 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="701-705"];
m38_553 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(1, recordCount)", span="709-709"];
m38_554 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="699-710"];
m38_556 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.InsertToList(''my-key'', ''0'')", span="703-703"];
m38_557 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.TrimList(''another-key'', 1, 0)", span="704-704"];
m38_558 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="701-705"];
m38_563 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>()), useBatching))", span="720-721"];
m38_567 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>()), useBatching)", span="721-721"];
m38_562 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="718-724"];
m38_564 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''key'', exception.ParamName)", span="723-723"];
m38_566 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="721-721"];
m38_565 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="718-724"];
m38_568 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="721-721"];
m38_569 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="721-721"];
m38_570 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SetRangeInHash(null, new Dictionary<string, string>())", span="721-721"];
m38_571 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="721-721"];
m38_577 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null), useBatching))", span="734-735"];
m38_581 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', null), useBatching)", span="735-735"];
m38_576 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="732-738"];
m38_578 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="737-737"];
m38_580 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="735-735"];
m38_579 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="732-738"];
m38_582 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="735-735"];
m38_583 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="735-735"];
m38_584 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SetRangeInHash(''some-hash'', null)", span="735-735"];
m38_585 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="735-735"];
m38_590 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }), useBatching)", span="748-752"];
m38_589 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="746-761"];
m38_591 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="754-757"];
m38_596 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="748-752"];
m38_592 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="759-759"];
m38_599 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="757-757"];
m38_602 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="757-757"];
m38_593 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="760-760"];
m38_594 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="746-761"];
m38_597 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="748-752"];
m38_598 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="748-752"];
m38_600 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Field", span="757-757"];
m38_601 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="757-757"];
m38_603 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Value", span="757-757"];
m38_604 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="757-757"];
m38_609 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', null }\r\n                }), useBatching)", span="771-774"];
m38_608 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="769-782"];
m38_610 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var result = sql.Query(\r\n                        ''select * from HangFire.Hash where [Key] = @key'',\r\n                        new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="776-779"];
m38_613 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="771-774"];
m38_611 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(null, result[''Key1''])", span="781-781"];
m38_616 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="779-779"];
m38_619 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="779-779"];
m38_612 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="769-782"];
m38_614 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', null }\r\n                })", span="771-774"];
m38_615 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="771-774"];
m38_617 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Field", span="779-779"];
m38_618 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="779-779"];
m38_620 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Value", span="779-779"];
m38_621 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="779-779"];
m38_626 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null), useBatching))", span="792-793"];
m38_629 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.RemoveHash(null), useBatching)", span="793-793"];
m38_625 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="790-794"];
m38_627 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="790-794"];
m38_628 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="793-793"];
m38_630 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="793-793"];
m38_631 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="793-793"];
m38_632 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveHash(null)", span="793-793"];
m38_633 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="793-793"];
m38_639 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }), useBatching)", span="805-809"];
m38_640 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.RemoveHash(''some-hash''), useBatching)", span="812-812"];
m38_638 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="802-817"];
m38_641 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single()", span="815-815"];
m38_644 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="805-809"];
m38_647 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="812-812"];
m38_642 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(0, count)", span="816-816"];
m38_643 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="802-817"];
m38_645 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="805-809"];
m38_646 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="805-809"];
m38_648 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveHash(''some-hash'')", span="812-812"];
m38_649 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="812-812"];
m38_654 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>()), useBatching))", span="827-828"];
m38_658 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.AddRangeToSet(null, new List<string>()), useBatching)", span="828-828"];
m38_653 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="825-831"];
m38_655 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''key'', exception.ParamName)", span="830-830"];
m38_657 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="828-828"];
m38_656 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="825-831"];
m38_659 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="828-828"];
m38_660 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="828-828"];
m38_661 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddRangeToSet(null, new List<string>())", span="828-828"];
m38_662 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="828-828"];
m38_669 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null), useBatching))", span="841-842"];
m38_673 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.AddRangeToSet(''my-set'', null), useBatching)", span="842-842"];
m38_668 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="839-845"];
m38_670 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''items'', exception.ParamName)", span="844-844"];
m38_672 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="842-842"];
m38_671 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="839-845"];
m38_674 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="842-842"];
m38_675 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="842-842"];
m38_676 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddRangeToSet(''my-set'', null)", span="842-842"];
m38_677 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="842-842"];
m38_683 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.AddRangeToSet(''my-set'', items), useBatching)", span="857-857"];
m38_681 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="853-861"];
m38_682 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var items = new List<string> { ''1'', ''2'', ''3'' }", span="855-855"];
m38_684 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''')", span="859-859"];
m38_688 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.AddRangeToSet(''my-set'', items)", span="857-857"];
m38_685 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(items, records)", span="860-860"];
m38_687 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="857-857"];
m38_686 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="853-861"];
m38_689 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="857-857"];
m38_694 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null), useBatching))", span="871-872"];
m38_697 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.RemoveSet(null), useBatching)", span="872-872"];
m38_693 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="869-873"];
m38_695 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="869-873"];
m38_696 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="872-872"];
m38_698 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="872-872"];
m38_699 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="872-872"];
m38_700 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveSet(null)", span="872-872"];
m38_701 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="872-872"];
m38_709 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.RemoveSet(''set-1''), useBatching)", span="892-892"];
m38_708 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="886-890"];
m38_707 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="884-896"];
m38_710 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="894-894"];
m38_714 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="892-892"];
m38_711 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''set-2'', record.Key)", span="895-895"];
m38_712 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="884-896"];
m38_715 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.RemoveSet(''set-1'')", span="892-892"];
m38_716 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="892-892"];
m38_721 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5)), useBatching))", span="906-907"];
m38_725 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5)), useBatching)", span="907-907"];
m38_720 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="904-910"];
m38_722 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''key'', exception.ParamName)", span="909-909"];
m38_724 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="907-907"];
m38_723 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="904-910"];
m38_726 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="907-907"];
m38_727 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="907-907"];
m38_728 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.ExpireHash(null, TimeSpan.FromMinutes(5))", span="907-907"];
m38_729 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="907-907"];
m38_738 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)), useBatching)", span="932-932"];
m38_737 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                })", span="925-929"];
m38_736 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="922-939"];
m38_739 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="935-935"];
m38_745 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="932-932"];
m38_740 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1''])", span="936-936"];
m38_748 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="935-935"];
m38_751 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="935-935"];
m38_741 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61))", span="937-937"];
m38_742 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(records[''hash-2''])", span="938-938"];
m38_743 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="922-939"];
m38_746 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60))", span="932-932"];
m38_747 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="932-932"];
m38_749 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Key", span="935-935"];
m38_750 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="935-935"];
m38_752 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(DateTime?)x.ExpireAt", span="935-935"];
m38_753 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="935-935"];
m38_758 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45)), useBatching))", span="949-950"];
m38_762 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45)), useBatching)", span="950-950"];
m38_757 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="947-953"];
m38_759 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''key'', exception.ParamName)", span="952-952"];
m38_761 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="950-950"];
m38_760 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="947-953"];
m38_763 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="950-950"];
m38_764 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="950-950"];
m38_765 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.ExpireSet(null, TimeSpan.FromSeconds(45))", span="950-950"];
m38_766 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="950-950"];
m38_775 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)), useBatching)", span="975-975"];
m38_774 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="968-972"];
m38_773 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="965-982"];
m38_776 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="978-978"];
m38_781 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="975-975"];
m38_777 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1''])", span="979-979"];
m38_784 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="978-978"];
m38_787 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="978-978"];
m38_778 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61))", span="980-980"];
m38_779 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(records[''set-2''])", span="981-981"];
m38_780 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="965-982"];
m38_782 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60))", span="975-975"];
m38_783 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="975-975"];
m38_785 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Key", span="978-978"];
m38_786 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="978-978"];
m38_788 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(DateTime?)x.ExpireAt", span="978-978"];
m38_789 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="978-978"];
m38_794 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45)), useBatching))", span="992-993"];
m38_798 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45)), useBatching)", span="993-993"];
m38_793 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="990-996"];
m38_795 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''key'', exception.ParamName)", span="995-995"];
m38_797 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="993-993"];
m38_796 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="990-996"];
m38_799 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="993-993"];
m38_800 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="993-993"];
m38_801 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.ExpireList(null, TimeSpan.FromSeconds(45))", span="993-993"];
m38_802 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="993-993"];
m38_810 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)), useBatching)", span="1017-1017"];
m38_809 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                })", span="1010-1014"];
m38_808 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1007-1024"];
m38_811 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="1020-1020"];
m38_816 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1017-1017"];
m38_812 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1''])", span="1021-1021"];
m38_819 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1020-1020"];
m38_822 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1020-1020"];
m38_813 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61))", span="1022-1022"];
m38_814 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(records[''list-2''])", span="1023-1023"];
m38_815 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1007-1024"];
m38_817 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.ExpireList(''list-1'', TimeSpan.FromMinutes(60))", span="1017-1017"];
m38_818 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1017-1017"];
m38_820 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Key", span="1020-1020"];
m38_821 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1020-1020"];
m38_823 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(DateTime?)x.ExpireAt", span="1020-1020"];
m38_824 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1020-1020"];
m38_829 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null), useBatching))", span="1034-1035"];
m38_833 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.PersistHash(null), useBatching)", span="1035-1035"];
m38_828 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1032-1038"];
m38_830 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1037-1037"];
m38_832 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1035-1035"];
m38_831 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1032-1038"];
m38_834 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1035-1035"];
m38_835 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1035-1035"];
m38_836 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.PersistHash(null)", span="1035-1035"];
m38_837 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1035-1035"];
m38_845 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.PersistHash(''hash-1''), useBatching)", span="1060-1060"];
m38_844 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="1053-1057"];
m38_843 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1050-1066"];
m38_846 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="1063-1063"];
m38_851 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1060-1060"];
m38_847 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(records[''hash-1''])", span="1064-1064"];
m38_854 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1063-1063"];
m38_857 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1063-1063"];
m38_848 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(records[''hash-2''])", span="1065-1065"];
m38_849 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1050-1066"];
m38_852 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.PersistHash(''hash-1'')", span="1060-1060"];
m38_853 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1060-1060"];
m38_855 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Key", span="1063-1063"];
m38_856 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1063-1063"];
m38_858 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(DateTime?)x.ExpireAt", span="1063-1063"];
m38_859 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1063-1063"];
m38_864 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null), useBatching))", span="1076-1077"];
m38_868 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.PersistSet(null), useBatching)", span="1077-1077"];
m38_863 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1074-1080"];
m38_865 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1079-1079"];
m38_867 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1077-1077"];
m38_866 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1074-1080"];
m38_869 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1077-1077"];
m38_870 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1077-1077"];
m38_871 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.PersistSet(null)", span="1077-1077"];
m38_872 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1077-1077"];
m38_880 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.PersistSet(''set-1''), useBatching)", span="1102-1102"];
m38_879 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="1095-1099"];
m38_878 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1092-1108"];
m38_881 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="1105-1105"];
m38_885 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1102-1102"];
m38_882 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(records[''set-1''])", span="1106-1106"];
m38_888 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1105-1105"];
m38_891 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1105-1105"];
m38_883 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(records[''set-2''])", span="1107-1107"];
m38_884 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1092-1108"];
m38_886 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.PersistSet(''set-1'')", span="1102-1102"];
m38_887 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1102-1102"];
m38_889 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Key", span="1105-1105"];
m38_890 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1105-1105"];
m38_892 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(DateTime?)x.ExpireAt", span="1105-1105"];
m38_893 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1105-1105"];
m38_898 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null), useBatching))", span="1118-1119"];
m38_902 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.PersistList(null), useBatching)", span="1119-1119"];
m38_897 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1116-1122"];
m38_899 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1121-1121"];
m38_901 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1119-1119"];
m38_900 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1116-1122"];
m38_903 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1119-1119"];
m38_904 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1119-1119"];
m38_905 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.PersistList(null)", span="1119-1119"];
m38_906 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1119-1119"];
m38_914 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Commit(sql, x => x.PersistList(''list-1''), useBatching)", span="1144-1144"];
m38_913 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="1137-1141"];
m38_912 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1134-1150"];
m38_915 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="1147-1147"];
m38_919 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1144-1144"];
m38_916 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.Null(records[''list-1''])", span="1148-1148"];
m38_922 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1147-1147"];
m38_925 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1147-1147"];
m38_917 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Assert.NotNull(records[''list-2''])", span="1149-1149"];
m38_918 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1134-1150"];
m38_920 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.PersistList(''list-1'')", span="1144-1144"];
m38_921 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1144-1144"];
m38_923 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(string)x.Key", span="1147-1147"];
m38_924 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1147-1147"];
m38_926 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="(DateTime?)x.ExpireAt", span="1147-1147"];
m38_927 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1147-1147"];
m38_943 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Entry lambda expression", span="1167-1167"];
m38_944 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="x.QueueProviders", span="1167-1167"];
m38_945 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1167-1167"];
m38_947 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label=null, span="1169-1169"];
m38_948 [cluster="lambda expression", file="UnaryExpressionFingerprint.cs", label="Exit lambda expression", span="1169-1169"];
m38_894 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull(bool)", span="1114-1114"];
m38_895 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null), useBatching));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1116-1122"];
m38_896 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull(bool)", span="1114-1114"];
m38_664 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="291-291"];
m38_390 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue(bool)", span="464-464"];
m38_391 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="466-477"];
m38_392 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue(bool)", span="464-464"];
m38_754 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull(bool)", span="945-945"];
m38_755 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45)), useBatching));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="947-953"];
m38_756 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull(bool)", span="945-945"];
m38_415 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey(bool)", span="502-502"];
m38_416 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="504-515"];
m38_417 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey(bool)", span="502-502"];
m38_860 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull(bool)", span="1072-1072"];
m38_861 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null), useBatching));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1074-1080"];
m38_862 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull(bool)", span="1072-1072"];
m38_465 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="233-233"];
m38_8 [cluster="Unk.Returns", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Returns", span=""];
m38_717 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull(bool)", span="902-902"];
m38_718 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5)), useBatching));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="904-910"];
m38_719 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull(bool)", span="902-902"];
m38_271 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord(bool)", span="296-296"];
m38_272 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="298-309"];
m38_273 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord(bool)", span="296-296"];
m38_97 [cluster="Mock<IState>.cstr", file="UnaryExpressionFingerprint.cs", label="Entry Mock<IState>.cstr", span=""];
m38_744 [cluster="System.DateTime.AddMinutes(double)", file="UnaryExpressionFingerprint.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m38_942 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="53-53"];
m38_31 [cluster="Unk.UseConnection", file="UnaryExpressionFingerprint.cs", label="Entry Unk.UseConnection", span=""];
m38_586 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords(bool)", span="744-744"];
m38_587 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }), useBatching);\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="746-761"];
m38_588 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords(bool)", span="744-744"];
m38_19 [cluster="Unk.Equal", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Equal", span=""];
m38_296 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="176-176"];
m38_253 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", span="274-274"];
m38_254 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)), useBatching);\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="276-290"];
m38_255 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", span="274-274"];
m38_940 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="31-31"];
m38_112 [cluster="Unk.SetJobState", file="UnaryExpressionFingerprint.cs", label="Entry Unk.SetJobState", span=""];
m38_931 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m38_559 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull(bool)", span="716-716"];
m38_560 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>()), useBatching));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="718-724"];
m38_561 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull(bool)", span="716-716"];
m38_53 [cluster="Unk.ExpireJob", file="UnaryExpressionFingerprint.cs", label="Entry Unk.ExpireJob", span=""];
m38_939 [cluster="Mock<SqlServerStorage>.cstr", file="UnaryExpressionFingerprint.cs", label="Entry Mock<SqlServerStorage>.cstr", span=""];
m38_403 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue(bool)", span="483-483"];
m38_404 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="485-496"];
m38_405 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue(bool)", span="483-483"];
m38_573 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull(bool)", span="730-730"];
m38_574 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null), useBatching));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="732-738"];
m38_575 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull(bool)", span="730-730"];
m38_41 [cluster="Unk.Query", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Query", span=""];
m38_932 [cluster="System.Action<T>.Invoke(T)", file="UnaryExpressionFingerprint.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m38_352 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist(bool)", span="409-409"];
m38_353 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="411-422"];
m38_354 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist(bool)", span="409-409"];
m38_634 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="281-281"];
m38_218 [cluster="Unk.Add", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Add", span=""];
m38_67 [cluster="Unk.NotNull", file="UnaryExpressionFingerprint.cs", label="Entry Unk.NotNull", span=""];
m38_6 [cluster="Unk.Setup", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Setup", span=""];
m38_48 [cluster="Unk.Null", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Null", span=""];
m38_340 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent(bool)", span="390-390"];
m38_341 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="392-403"];
m38_342 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent(bool)", span="390-390"];
m38_9 [cluster="PersistentJobQueueProviderCollection.cstr", file="UnaryExpressionFingerprint.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m38_219 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="1153-1153"];
m38_928 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="UnaryExpressionFingerprint.cs", label="var connection = ConnectionUtils.CreateConnection()", span="1155-1155"];
m38_929 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="UnaryExpressionFingerprint.cs", label="action(connection)", span="1157-1157"];
m38_930 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="1153-1153"];
m38_46 [cluster="System.DateTime.AddHours(double)", file="UnaryExpressionFingerprint.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m38_314 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord(bool)", span="354-354"];
m38_315 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="356-367"];
m38_316 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord(bool)", span="354-354"];
m38_804 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey(bool)", span="1002-1002"];
m38_805 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key]) values (@key)''", span="1004-1005"];
m38_806 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)), useBatching);\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1'']);\r\n                Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''list-2'']);\r\n            })", span="1007-1024"];
m38_807 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey(bool)", span="1002-1002"];
m38_23 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", span="45-45"];
m38_13 [cluster="Unk.GetJobQueue", file="UnaryExpressionFingerprint.cs", label="Entry Unk.GetJobQueue", span=""];
m38_54 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData(bool)", span="64-64"];
m38_55 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="66-69"];
m38_56 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId), useBatching);\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="71-83"];
m38_57 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData(bool)", span="64-64"];
m38_490 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange(bool)", span="614-614"];
m38_491 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                }, useBatching);\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="616-632"];
m38_492 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange(bool)", span="614-614"];
m38_227 [cluster="Unk.Verify", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Verify", span=""];
m38_874 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash(bool)", span="1086-1086"];
m38_875 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1088-1090"];
m38_876 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistSet(''set-1''), useBatching);\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''set-1'']);\r\n                Assert.NotNull(records[''set-2'']);\r\n            })", span="1092-1108"];
m38_877 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash(bool)", span="1086-1086"];
m38_508 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="242-242"];
m38_466 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue(bool)", span="576-576"];
m38_467 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                }, useBatching);\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="578-589"];
m38_468 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue(bool)", span="576-576"];
m38_730 [cluster="System.TimeSpan.FromMinutes(double)", file="UnaryExpressionFingerprint.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m38_595 [cluster="Unk.ToDictionary", file="UnaryExpressionFingerprint.cs", label="Entry Unk.ToDictionary", span=""];
m38_52 [cluster="System.TimeSpan.FromHours(double)", file="UnaryExpressionFingerprint.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m38_313 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="184-184"];
m38_702 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="309-309"];
m38_18 [cluster="Unk.>", file="UnaryExpressionFingerprint.cs", label="Entry Unk.>", span=""];
m38_665 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull(bool)", span="837-837"];
m38_666 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null), useBatching));\r\n\r\n                Assert.Equal(''items'', exception.ParamName);\r\n            })", span="839-845"];
m38_667 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull(bool)", span="837-837"];
m38_297 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", span="332-332"];
m38_298 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)), useBatching);\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="334-348"];
m38_299 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet(bool)", span="332-332"];
m38_14 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()", span="28-28"];
m38_15 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()", file="UnaryExpressionFingerprint.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null, () => null))", span="30-31"];
m38_16 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()", file="UnaryExpressionFingerprint.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="33-33"];
m38_17 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()", span="28-28"];
m38_650 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull(bool)", span="823-823"];
m38_651 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>()), useBatching));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="825-831"];
m38_652 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull(bool)", span="823-823"];
m38_283 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue(bool)", span="315-315"];
m38_284 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''), useBatching);\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="317-326"];
m38_285 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue(bool)", span="315-315"];
m38_767 [cluster="System.TimeSpan.FromSeconds(double)", file="UnaryExpressionFingerprint.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m38_231 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="140-140"];
m38_269 [cluster="System.TimeSpan.FromDays(double)", file="UnaryExpressionFingerprint.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m38_235 [cluster="Unk.Enqueue", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Enqueue", span=""];
m38_427 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues(bool)", span="521-521"];
m38_428 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''), useBatching);\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="523-531"];
m38_429 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues(bool)", span="521-521"];
m38_622 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull(bool)", span="788-788"];
m38_623 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null), useBatching));\r\n            })", span="790-794"];
m38_624 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull(bool)", span="788-788"];
m38_790 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull(bool)", span="988-988"];
m38_791 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45)), useBatching));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="990-996"];
m38_792 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull(bool)", span="988-988"];
m38_72 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob(bool)", span="89-89"];
m38_73 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="91-94"];
m38_74 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object), useBatching);\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="96-123"];
m38_75 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob(bool)", span="89-89"];
m38_98 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="UnaryExpressionFingerprint.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m38_108 [cluster="Unk.SerializeData", file="UnaryExpressionFingerprint.cs", label="Entry Unk.SerializeData", span=""];
m38_239 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue(bool)", span="257-257"];
m38_240 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''), useBatching);\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="259-268"];
m38_241 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue(bool)", span="257-257"];
m38_364 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist(bool)", span="428-428"];
m38_365 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2), useBatching);\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="430-439"];
m38_366 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist(bool)", span="428-428"];
m38_42 [cluster="Unk.Single", file="UnaryExpressionFingerprint.cs", label="Entry Unk.Single", span=""];
m38_47 [cluster="Unk.True", file="UnaryExpressionFingerprint.cs", label="Entry Unk.True", span=""];
m38_113 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_CanBeCalledWithNullReasonAndData(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_CanBeCalledWithNullReasonAndData(bool)", span="129-129"];
m38_114 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_CanBeCalledWithNullReasonAndData(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="131-134"];
m38_115 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_CanBeCalledWithNullReasonAndData(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns((string)null);\r\n                state.Setup(x => x.SerializeData()).Returns((Dictionary<string, string>)null);\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object), useBatching);\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(null, jobState.Reason);\r\n                Assert.Equal(null, jobState.Data);\r\n            })", span="136-155"];
m38_116 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_CanBeCalledWithNullReasonAndData(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_CanBeCalledWithNullReasonAndData(bool)", span="129-129"];
m38_71 [cluster="Unk.PersistJob", file="UnaryExpressionFingerprint.cs", label="Entry Unk.PersistJob", span=""];
m38_144 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable(bool)", span="161-161"];
m38_145 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="163-166"];
m38_146 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object), useBatching);\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="168-190"];
m38_147 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable(bool)", span="161-161"];
m38_439 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="224-224"];
m38_732 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey(bool)", span="916-916"];
m38_733 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="918-920"];
m38_734 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)), useBatching);\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1'']);\r\n                Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''hash-2'']);\r\n            })", span="922-939"];
m38_735 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey(bool)", file="UnaryExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey(bool)", span="916-916"];
m38_949 [file="UnaryExpressionFingerprint.cs", label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", span=""];
m38_950 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_951 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_952 [file="UnaryExpressionFingerprint.cs", label=jobId, span=""];
m38_953 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_954 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_955 [file="UnaryExpressionFingerprint.cs", label=jobId, span=""];
m38_956 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_957 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_958 [file="UnaryExpressionFingerprint.cs", label=jobId, span=""];
m38_959 [file="UnaryExpressionFingerprint.cs", label=state, span=""];
m38_960 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_961 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_962 [file="UnaryExpressionFingerprint.cs", label=jobId, span=""];
m38_963 [file="UnaryExpressionFingerprint.cs", label=state, span=""];
m38_964 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_965 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_966 [file="UnaryExpressionFingerprint.cs", label=jobId, span=""];
m38_967 [file="UnaryExpressionFingerprint.cs", label=state, span=""];
m38_968 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_969 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_970 [file="UnaryExpressionFingerprint.cs", label=jobId, span=""];
m38_971 [file="UnaryExpressionFingerprint.cs", label=state, span=""];
m38_972 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_973 [file="UnaryExpressionFingerprint.cs", label=correctJobQueue, span=""];
m38_974 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_975 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_976 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_977 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_978 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_979 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_980 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_981 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_982 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_983 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_984 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_985 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_986 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_987 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_988 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_989 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_990 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_991 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_992 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_993 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_994 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_995 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_996 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_997 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_998 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_999 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1000 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1001 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1002 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1003 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1004 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1005 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1006 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1007 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1008 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1009 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1010 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1011 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1012 [file="UnaryExpressionFingerprint.cs", label=items, span=""];
m38_1013 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1014 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1015 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_1016 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1017 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1018 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1019 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_1020 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1021 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1022 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1023 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_1024 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1025 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1026 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1027 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_1028 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1029 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1030 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1031 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_1032 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1033 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1034 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1035 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_1036 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1037 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
m38_1038 [file="UnaryExpressionFingerprint.cs", label=SqlConnection, span=""];
m38_1039 [file="UnaryExpressionFingerprint.cs", label=arrangeSql, span=""];
m38_1040 [file="UnaryExpressionFingerprint.cs", label=bool, span=""];
n81 -> n1  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n2  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n3  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n4  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n5  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n12  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n13  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n17  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n18  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n19  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n24  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n25  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n26  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n27  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n34  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n35  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n37  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n38  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n41  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n42  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n51  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n54  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n58  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n59  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n60  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n81 -> n63  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n7  [key=2, style=dotted];
n3 -> n8  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n9  [key=2, style=dotted];
n4 -> n7  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=2, style=dotted];
n6 -> n0  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n14 -> n11  [color=blue, key=0, style=bold];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n20 -> n16  [color=blue, key=0, style=bold];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n11  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n29  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n30  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n31  [key=2, style=dotted];
n28 -> n22  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n39  [key=0, style=solid];
n33 -> n40  [key=0, style=solid];
n33 -> n43  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n44  [key=2, style=dotted];
n39 -> n43  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n43 -> n32  [color=blue, key=0, style=bold];
n35 -> n36  [key=0, style=solid];
n35 -> n45  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n46  [key=2, style=dotted];
n38 -> n33  [key=0, style=solid];
n38 -> n47  [key=2, style=dotted];
n46 -> n50  [key=0, style=solid];
n46 -> n51  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
n46 -> n54  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
n46 -> n58  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
n46 -> n63  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
n46 -> n66  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
n46 -> n67  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
n46 -> n68  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
n41 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n48  [key=2, style=dotted];
n42 -> n49  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n53  [key=0, style=solid];
n50 -> n70  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n7  [key=2, style=dotted];
n51 -> n71  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=0, style=solid];
n54 -> n72  [key=2, style=dotted];
n54 -> n73  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n74  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n7  [key=2, style=dotted];
n63 -> n77  [key=2, style=dotted];
n66 -> n68  [key=0, style=solid];
n66 -> n78  [key=2, style=dotted];
n66 -> n73  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n79  [key=2, style=dotted];
n67 -> n73  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n80  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n52 -> n69  [key=0, style=solid];
n55 -> n69  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n75  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n64  [key=0, style=solid];
n60 -> n76  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n65  [color=darkseagreen4, key=1, label=exception, style=dashed];
n62 -> n67  [color=darkseagreen4, key=1, label=exception, style=dashed];
n65 -> n66  [key=0, style=solid];
n65 -> n67  [key=0, style=solid];
n69 -> n46  [color=blue, key=0, style=bold];
d59 -> d60  [color=green, key=0, style=solid];
d59 -> d70  [color=green, key=2, style=dotted];
d59 -> d63  [color=green, key=1, label=handler1, style=dashed];
d59 -> d65  [color=green, key=1, label=handler1, style=dashed];
d58 -> d59  [color=green, key=0, style=solid];
d58 -> d27  [key=2, style=dotted];
d58 -> d65  [color=darkseagreen4, key=1, label=context, style=dashed];
d58 -> d79  [color=darkseagreen4, key=1, label=context, style=dashed];
d58 -> d66  [color=darkseagreen4, key=1, label=context, style=dashed];
d58 -> d83  [color=darkseagreen4, key=1, label=context, style=dashed];
d58 -> d68  [color=darkseagreen4, key=1, label=context, style=dashed];
d60 -> d61  [color=green, key=0, style=solid];
d60 -> d10  [key=2, style=dotted];
d60 -> d11  [key=2, style=dotted];
d60 -> d72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d63 -> d64  [key=0, style=solid];
d63 -> d71  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d65 -> d10  [key=2, style=dotted];
d65 -> d48  [key=2, style=dotted];
d65 -> d78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d61 -> d62  [color=green, key=0, style=solid];
d61 -> d70  [color=green, key=2, style=dotted];
d61 -> d64  [color=green, key=1, label=handler2, style=dashed];
d61 -> d66  [color=green, key=1, label=handler2, style=dashed];
d62 -> d63  [key=0, style=solid];
d62 -> d10  [key=2, style=dotted];
d62 -> d11  [key=2, style=dotted];
d62 -> d75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d64 -> d65  [key=0, style=solid];
d64 -> d71  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d66 -> d10  [key=2, style=dotted];
d66 -> d48  [key=2, style=dotted];
d66 -> d82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d90 -> d91  [color=green, key=0, style=solid];
d90 -> d70  [color=green, key=2, style=dotted];
d90 -> d94  [color=green, key=1, label=handler1, style=dashed];
d90 -> d97  [color=green, key=1, label=handler1, style=dashed];
d89 -> d90  [color=green, key=0, style=solid];
d89 -> d27  [key=2, style=dotted];
d89 -> d97  [color=darkseagreen4, key=1, label=context, style=dashed];
d89 -> d111  [color=darkseagreen4, key=1, label=context, style=dashed];
d89 -> d98  [color=darkseagreen4, key=1, label=context, style=dashed];
d89 -> d115  [color=darkseagreen4, key=1, label=context, style=dashed];
d89 -> d99  [color=darkseagreen4, key=1, label=context, style=dashed];
d91 -> d92  [color=green, key=0, style=solid];
d91 -> d10  [key=2, style=dotted];
d91 -> d11  [key=2, style=dotted];
d91 -> d101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d94 -> d95  [key=0, style=solid];
d94 -> d71  [key=2, style=dotted];
d97 -> d98  [key=0, style=solid];
d97 -> d10  [key=2, style=dotted];
d97 -> d48  [key=2, style=dotted];
d97 -> d110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d92 -> d93  [color=green, key=0, style=solid];
d92 -> d70  [color=green, key=2, style=dotted];
d92 -> d95  [color=green, key=1, label=handler2, style=dashed];
d92 -> d98  [color=green, key=1, label=handler2, style=dashed];
d93 -> d94  [key=0, style=solid];
d93 -> d10  [key=2, style=dotted];
d93 -> d11  [key=2, style=dotted];
d93 -> d104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d95 -> d96  [key=0, style=solid];
d95 -> d71  [key=2, style=dotted];
d98 -> d99  [key=0, style=solid];
d98 -> d10  [key=2, style=dotted];
d98 -> d48  [key=2, style=dotted];
d98 -> d114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d202 -> d58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d89  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d94  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d98  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d23  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d45  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d111  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d99  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d118  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d119  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d120  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d133  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d134  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d145  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d148  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d151  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d162  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d152  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d171  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d178  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d185  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d187  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d202 -> d193  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
d57 -> d58  [key=0, style=solid];
d27 -> d191  [key=0, style=solid];
d79 -> d80  [key=0, style=solid];
d79 -> d81  [key=2, style=dotted];
d83 -> d84  [key=0, style=solid];
d83 -> d81  [key=2, style=dotted];
d68 -> d69  [key=0, style=solid];
d68 -> d33  [key=2, style=dotted];
d72 -> d73  [key=0, style=solid];
d78 -> d79  [key=0, style=solid];
d75 -> d76  [key=0, style=solid];
d67 -> d68  [key=0, style=solid];
d67 -> d10  [key=2, style=dotted];
d67 -> d48  [key=2, style=dotted];
d67 -> d85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d82 -> d83  [key=0, style=solid];
d88 -> d89  [key=0, style=solid];
d111 -> d112  [key=0, style=solid];
d111 -> d113  [key=2, style=dotted];
d115 -> d116  [key=0, style=solid];
d115 -> d113  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d99 -> d33  [key=2, style=dotted];
d101 -> d102  [key=0, style=solid];
d96 -> d97  [key=0, style=solid];
d96 -> d10  [key=2, style=dotted];
d96 -> d48  [key=2, style=dotted];
d96 -> d107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d110 -> d111  [key=0, style=solid];
d104 -> d105  [key=0, style=solid];
d114 -> d115  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d1 -> d8  [key=2, style=dotted];
d1 -> d15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d2 -> d3  [key=0, style=solid];
d2 -> d9  [key=2, style=dotted];
d3 -> d10  [key=2, style=dotted];
d3 -> d11  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d4 -> d5  [key=0, style=solid];
d4 -> d12  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d5 -> d13  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d14  [key=2, style=dotted];
d23 -> d27  [key=2, style=dotted];
d23 -> d24  [key=0, style=solid];
d23 -> d31  [color=darkseagreen4, key=1, label=context, style=dashed];
d24 -> d25  [key=0, style=solid];
d24 -> d28  [key=2, style=dotted];
d24 -> d30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d31 -> d32  [key=0, style=solid];
d31 -> d33  [key=2, style=dotted];
d35 -> d27  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d40  [color=darkseagreen4, key=1, label=context, style=dashed];
d36 -> d37  [key=0, style=solid];
d36 -> d28  [key=2, style=dotted];
d36 -> d39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d40 -> d41  [key=0, style=solid];
d40 -> d33  [key=2, style=dotted];
d43 -> d10  [key=2, style=dotted];
d43 -> d48  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d43 -> d49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d50 -> d51  [key=0, style=solid];
d50 -> d52  [key=2, style=dotted];
d44 -> d10  [key=2, style=dotted];
d44 -> d48  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d44 -> d53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d45 -> d27  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d46 -> d47  [key=0, style=solid];
d46 -> d33  [key=2, style=dotted];
d118 -> d27  [key=2, style=dotted];
d118 -> d119  [key=0, style=solid];
d118 -> d120  [color=darkseagreen4, key=1, label=context, style=dashed];
d119 -> d10  [key=2, style=dotted];
d119 -> d11  [key=2, style=dotted];
d119 -> d120  [key=0, style=solid];
d119 -> d124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d120 -> d121  [key=0, style=solid];
d120 -> d33  [key=2, style=dotted];
d121 -> d122  [key=0, style=solid];
d121 -> d123  [key=2, style=dotted];
d121 -> d127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d132 -> d27  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d132 -> d134  [color=darkseagreen4, key=1, label=context, style=dashed];
d133 -> d10  [key=2, style=dotted];
d133 -> d11  [key=2, style=dotted];
d133 -> d134  [key=0, style=solid];
d133 -> d137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d134 -> d135  [key=0, style=solid];
d134 -> d33  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid];
d135 -> d123  [key=2, style=dotted];
d135 -> d140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d145 -> d27  [key=2, style=dotted];
d145 -> d146  [key=0, style=solid];
d145 -> d150  [color=darkseagreen4, key=1, label=context, style=dashed];
d145 -> d158  [color=darkseagreen4, key=1, label=context, style=dashed];
d145 -> d151  [color=darkseagreen4, key=1, label=context, style=dashed];
d145 -> d162  [color=darkseagreen4, key=1, label=context, style=dashed];
d145 -> d153  [color=darkseagreen4, key=1, label=context, style=dashed];
d148 -> d149  [key=0, style=solid];
d148 -> d156  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid];
d149 -> d156  [key=2, style=dotted];
d150 -> d10  [key=2, style=dotted];
d150 -> d48  [key=2, style=dotted];
d150 -> d151  [key=0, style=solid];
d150 -> d157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d158 -> d159  [key=0, style=solid];
d158 -> d160  [key=2, style=dotted];
d151 -> d10  [key=2, style=dotted];
d151 -> d48  [key=2, style=dotted];
d151 -> d152  [key=0, style=solid];
d151 -> d161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d162 -> d163  [key=0, style=solid];
d162 -> d160  [key=2, style=dotted];
d152 -> d10  [key=2, style=dotted];
d152 -> d48  [key=2, style=dotted];
d152 -> d153  [key=0, style=solid];
d152 -> d164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d153 -> d154  [key=0, style=solid];
d153 -> d33  [key=2, style=dotted];
d168 -> d27  [key=2, style=dotted];
d168 -> d169  [key=0, style=solid];
d168 -> d173  [color=darkseagreen4, key=1, label=context, style=dashed];
d168 -> d178  [color=darkseagreen4, key=1, label=context, style=dashed];
d168 -> d174  [color=darkseagreen4, key=1, label=context, style=dashed];
d168 -> d182  [color=darkseagreen4, key=1, label=context, style=dashed];
d168 -> d175  [color=darkseagreen4, key=1, label=context, style=dashed];
d171 -> d172  [key=0, style=solid];
d171 -> d156  [key=2, style=dotted];
d172 -> d173  [key=0, style=solid];
d172 -> d156  [key=2, style=dotted];
d173 -> d10  [key=2, style=dotted];
d173 -> d48  [key=2, style=dotted];
d173 -> d174  [key=0, style=solid];
d173 -> d177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d178 -> d179  [key=0, style=solid];
d178 -> d180  [key=2, style=dotted];
d174 -> d10  [key=2, style=dotted];
d174 -> d48  [key=2, style=dotted];
d174 -> d175  [key=0, style=solid];
d174 -> d181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d182 -> d183  [key=0, style=solid];
d182 -> d180  [key=2, style=dotted];
d175 -> d176  [key=0, style=solid];
d175 -> d33  [key=2, style=dotted];
d185 -> d27  [key=2, style=dotted];
d185 -> d186  [key=0, style=solid];
d185 -> d187  [color=darkseagreen4, key=1, label=context, style=dashed];
d185 -> d188  [color=darkseagreen4, key=1, label=context, style=dashed];
d187 -> d188  [key=0, style=solid];
d187 -> d190  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d188 -> d190  [key=2, style=dotted];
d192 -> d10  [key=2, style=dotted];
d192 -> d11  [key=2, style=dotted];
d192 -> d193  [key=0, style=solid];
d192 -> d198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d193 -> d194  [key=0, style=solid];
d193 -> d196  [key=2, style=dotted];
d193 -> d197  [key=2, style=dotted];
d69 -> d57  [color=blue, key=0, style=bold];
d194 -> d27  [color=blue, key=0, style=bold];
d191 -> d192  [key=0, style=solid];
d191 -> d193  [color=darkseagreen4, key=1, label=connectionMock, style=dashed];
d191 -> d195  [key=2, style=dotted];
d205 -> d79  [color=darkseagreen4, key=1, label=context, style=dashed];
d205 -> d83  [color=darkseagreen4, key=1, label=context, style=dashed];
d80 -> d78  [color=blue, key=0, style=bold];
d84 -> d82  [color=blue, key=0, style=bold];
d74 -> d72  [color=blue, key=0, style=bold];
d73 -> d74  [key=0, style=solid];
d77 -> d75  [color=blue, key=0, style=bold];
d76 -> d77  [key=0, style=solid];
d85 -> d86  [key=0, style=solid];
d100 -> d88  [color=blue, key=0, style=bold];
d206 -> d111  [color=darkseagreen4, key=1, label=context, style=dashed];
d206 -> d115  [color=darkseagreen4, key=1, label=context, style=dashed];
d112 -> d110  [color=blue, key=0, style=bold];
d116 -> d114  [color=blue, key=0, style=bold];
d103 -> d101  [color=blue, key=0, style=bold];
d102 -> d103  [key=0, style=solid];
d107 -> d108  [key=0, style=solid];
d106 -> d104  [color=blue, key=0, style=bold];
d105 -> d106  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d7 -> d0  [color=blue, key=0, style=bold];
d22 -> d23  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d25 -> d29  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d203 -> d31  [color=darkseagreen4, key=1, label=context, style=dashed];
d32 -> d30  [color=blue, key=0, style=bold];
d34 -> d35  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d37 -> d29  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d204 -> d40  [color=darkseagreen4, key=1, label=context, style=dashed];
d41 -> d39  [color=blue, key=0, style=bold];
d42 -> d43  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d51 -> d49  [color=blue, key=0, style=bold];
d53 -> d54  [key=0, style=solid];
d47 -> d42  [color=blue, key=0, style=bold];
d117 -> d118  [key=0, style=solid];
d124 -> d125  [key=0, style=solid];
d122 -> d117  [color=blue, key=0, style=bold];
d127 -> d128  [key=0, style=solid];
d131 -> d132  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d136 -> d131  [color=blue, key=0, style=bold];
d140 -> d141  [key=0, style=solid];
d144 -> d145  [key=0, style=solid];
d146 -> d148  [color=darkseagreen4, key=1, label=filter1, style=dashed];
d146 -> d150  [color=darkseagreen4, key=1, label=filter1, style=dashed];
d146 -> d147  [key=0, style=solid];
d146 -> d155  [key=2, style=dotted];
d147 -> d148  [key=0, style=solid];
d147 -> d149  [color=darkseagreen4, key=1, label=filter2, style=dashed];
d147 -> d151  [color=darkseagreen4, key=1, label=filter2, style=dashed];
d147 -> d155  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d207 -> d158  [color=darkseagreen4, key=1, label=context, style=dashed];
d207 -> d162  [color=darkseagreen4, key=1, label=context, style=dashed];
d159 -> d157  [color=blue, key=0, style=bold];
d161 -> d162  [key=0, style=solid];
d163 -> d161  [color=blue, key=0, style=bold];
d164 -> d165  [key=0, style=solid];
d154 -> d144  [color=blue, key=0, style=bold];
d167 -> d168  [key=0, style=solid];
d169 -> d171  [color=darkseagreen4, key=1, label=filter1, style=dashed];
d169 -> d173  [color=darkseagreen4, key=1, label=filter1, style=dashed];
d169 -> d170  [key=0, style=solid];
d169 -> d155  [key=2, style=dotted];
d170 -> d171  [key=0, style=solid];
d170 -> d172  [color=darkseagreen4, key=1, label=filter2, style=dashed];
d170 -> d174  [color=darkseagreen4, key=1, label=filter2, style=dashed];
d170 -> d155  [key=2, style=dotted];
d177 -> d178  [key=0, style=solid];
d208 -> d178  [color=darkseagreen4, key=1, label=context, style=dashed];
d208 -> d182  [color=darkseagreen4, key=1, label=context, style=dashed];
d179 -> d177  [color=blue, key=0, style=bold];
d181 -> d182  [key=0, style=solid];
d183 -> d181  [color=blue, key=0, style=bold];
d176 -> d167  [color=blue, key=0, style=bold];
d184 -> d185  [key=0, style=solid];
d186 -> d187  [key=0, style=solid];
d186 -> d29  [key=2, style=dotted];
d189 -> d184  [color=blue, key=0, style=bold];
d198 -> d199  [key=0, style=solid];
d87 -> d85  [color=blue, key=0, style=bold];
d86 -> d28  [key=2, style=dotted];
d86 -> d52  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d109 -> d107  [color=blue, key=0, style=bold];
d108 -> d28  [key=2, style=dotted];
d108 -> d52  [key=2, style=dotted];
d108 -> d109  [key=0, style=solid];
d17 -> d15  [color=blue, key=0, style=bold];
d16 -> d17  [key=0, style=solid];
d16 -> d18  [key=2, style=dotted];
d21 -> d19  [color=blue, key=0, style=bold];
d20 -> d21  [key=0, style=solid];
d26 -> d22  [color=blue, key=0, style=bold];
d128 -> d28  [key=2, style=dotted];
d128 -> d129  [key=0, style=solid];
d128 -> d130  [key=2, style=dotted];
d165 -> d28  [key=2, style=dotted];
d165 -> d52  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d38 -> d34  [color=blue, key=0, style=bold];
d55 -> d53  [color=blue, key=0, style=bold];
d54 -> d55  [key=0, style=solid];
d54 -> d56  [key=2, style=dotted];
d126 -> d124  [color=blue, key=0, style=bold];
d125 -> d126  [key=0, style=solid];
d129 -> d127  [color=blue, key=0, style=bold];
d139 -> d137  [color=blue, key=0, style=bold];
d138 -> d139  [key=0, style=solid];
d142 -> d140  [color=blue, key=0, style=bold];
d141 -> d142  [key=0, style=solid];
d141 -> d143  [key=2, style=dotted];
d166 -> d164  [color=blue, key=0, style=bold];
d200 -> d198  [color=blue, key=0, style=bold];
d199 -> d200  [key=0, style=solid];
d199 -> d201  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_8  [key=2, style=dotted];
m0_6 -> m0_3  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=2, style=dotted];
m0_12 -> m0_9  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_15 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m0_15 -> m0_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m0_15 -> m0_10  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m0_15 -> m0_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=2, style=dotted];
m2_5 -> m2_2  [color=blue, key=0, style=bold];
m2_7 -> m2_4  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ConditionalExpressionFingerprint", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [key=2, style=dotted];
m3_5 -> m3_2  [color=blue, key=0, style=bold];
m3_7 -> m3_4  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint", style=dashed];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_6  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_4  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_22  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_26  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [color=blue, key=0, style=bold];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_18  [color=blue, key=0, style=bold];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_28  [color=blue, key=0, style=bold];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_8  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_30  [color=blue, key=0, style=bold];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_10  [color=blue, key=0, style=bold];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_20  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_14  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_12  [color=blue, key=0, style=bold];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_16  [color=blue, key=0, style=bold];
m5_24 -> m5_25  [key=0, style=solid];
m5_25 -> m5_24  [color=blue, key=0, style=bold];
m6_99 -> m6_100  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_44  [key=2, style=dotted];
m6_100 -> m6_104  [color=darkseagreen4, key=1, label=manager, style=dashed];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_33  [key=2, style=dotted];
m6_101 -> m6_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_102 -> m6_99  [color=blue, key=0, style=bold];
m6_19 -> m6_17  [color=blue, key=0, style=bold];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_37  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_125  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_53  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_28  [key=2, style=dotted];
m6_46 -> m6_48  [key=2, style=dotted];
m6_46 -> m6_49  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_54  [key=2, style=dotted];
m6_47 -> m6_45  [color=blue, key=0, style=bold];
m6_49 -> m6_55  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_52  [key=0, style=solid];
m6_51 -> m6_52  [color=red, key=0, style=solid];
m6_51 -> m6_56  [key=2, style=dotted];
m6_51 -> m6_44  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_52 -> m6_44  [color=blue, key=0, style=bold];
m6_52 -> m6_53  [color=red, key=0, style=solid];
m6_52 -> m6_33  [color=red, key=2, style=dotted];
m6_52 -> m6_55  [color=red, key=1, label="lambda expression", style=dashed];
m6_85 -> m6_86  [color=green, key=0, style=solid];
m6_85 -> m6_66  [color=green, key=2, style=dotted];
m6_85 -> m6_92  [color=green, key=1, label="lambda expression", style=dashed];
m6_90 -> m6_91  [color=red, key=0, style=solid];
m6_91 -> m6_92  [color=red, key=0, style=solid];
m6_91 -> m6_44  [color=red, key=2, style=dotted];
m6_92 -> m6_93  [color=green, key=0, style=solid];
m6_92 -> m6_49  [key=2, style=dotted];
m6_93 -> m6_94  [color=green, key=0, style=solid];
m6_93 -> m6_71  [key=2, style=dotted];
m6_93 -> m6_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_93 -> m6_75  [color=green, key=2, style=dotted];
m6_94 -> m6_90  [color=blue, key=0, style=bold];
m6_94 -> m6_92  [color=blue, key=0, style=bold];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_26  [key=2, style=dotted];
m6_23 -> m6_21  [color=blue, key=0, style=bold];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> n29  [key=2, style=dotted];
m6_25 -> m6_22  [color=blue, key=0, style=bold];
m6_25 -> m6_26  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_17 -> m6_18  [color=red, key=0, style=solid];
m6_17 -> m6_69  [key=0, style=solid];
m6_11 -> m6_0  [color=blue, key=0, style=bold];
m6_84 -> m6_85  [color=green, key=0, style=solid];
m6_84 -> m6_66  [color=green, key=2, style=dotted];
m6_84 -> m6_88  [color=green, key=1, label="lambda expression", style=dashed];
m6_78 -> m6_79  [color=red, key=0, style=solid];
m6_78 -> m6_49  [color=red, key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_77 -> m6_78  [color=red, key=0, style=solid];
m6_77 -> m6_44  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_28  [key=2, style=dotted];
m6_0 -> m6_3  [color=green, key=1, label=int, style=dashed];
m6_0 -> m6_1  [color=red, key=0, style=solid];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m6_0 -> m6_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_3 -> m6_4  [color=green, key=0, style=solid];
m6_3 -> m6_5  [color=green, key=0, style=solid];
m6_3 -> m6_11  [key=2, style=dotted];
m6_1 -> m6_3  [color=green, key=0, style=solid];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_4 -> m6_11  [key=0, style=solid];
m6_4 -> m6_13  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=0, style=solid];
m6_5 -> m6_14  [key=2, style=dotted];
m6_5 -> m6_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m6_5 -> m6_13  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_15  [key=2, style=dotted];
m6_7 -> m6_16  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_17  [key=2, style=dotted];
m6_8 -> m6_18  [key=2, style=dotted];
m6_8 -> m6_19  [key=2, style=dotted];
m6_8 -> m6_14  [key=2, style=dotted];
m6_8 -> m6_15  [key=2, style=dotted];
m6_8 -> m6_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2 -> m6_11  [key=0, style=solid];
m6_2 -> m6_12  [key=2, style=dotted];
m6_2 -> m6_3  [color=red, key=0, style=solid];
m6_2 -> m6_10  [color=red, key=2, style=dotted];
m6_2 -> m6_17  [color=red, key=1, label="lambda expression", style=dashed];
m6_6 -> m6_11  [key=0, style=solid];
m6_6 -> m6_13  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_14  [key=2, style=dotted];
m6_6 -> m6_15  [key=2, style=dotted];
m6_6 -> m6_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_20  [key=2, style=dotted];
m6_9 -> m6_0  [color=blue, key=0, style=bold];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_21  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_44  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_49  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_71  [key=2, style=dotted];
m6_69 -> m6_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_69 -> m6_19  [key=0, style=solid];
m6_70 -> m6_66  [color=blue, key=0, style=bold];
m6_35 -> m6_36  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_35  [color=blue, key=0, style=bold];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_42  [key=2, style=dotted];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_42  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_43  [key=2, style=dotted];
m6_40 -> m6_44  [key=2, style=dotted];
m6_40 -> m6_46  [color=darkseagreen4, key=1, label=manager, style=dashed];
m6_41 -> m6_37  [color=blue, key=0, style=bold];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_33  [key=2, style=dotted];
m6_41 -> m6_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_76 -> m6_77  [key=0, style=solid];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_34  [key=2, style=dotted];
m6_53 -> m6_57  [key=0, style=solid];
m6_53 -> m6_54  [color=red, key=0, style=solid];
m6_53 -> m6_34  [color=red, key=2, style=dotted];
m6_59 -> m6_60  [color=green, key=0, style=solid];
m6_59 -> m6_66  [color=green, key=2, style=dotted];
m6_59 -> m6_55  [color=green, key=1, label="lambda expression", style=dashed];
m6_59 -> m6_44  [key=2, style=dotted];
m6_59 -> m6_64  [color=darkseagreen4, key=1, label=manager, style=dashed];
m6_57 -> m6_59  [color=green, key=1, label=transaction, style=dashed];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_65  [key=2, style=dotted];
m6_57 -> m6_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_57 -> m6_63  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_57 -> m6_55  [color=blue, key=0, style=bold];
m6_58 -> m6_59  [color=green, key=0, style=solid];
m6_58 -> m6_66  [key=2, style=dotted];
m6_58 -> m6_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_63  [key=0, style=solid];
m6_60 -> m6_33  [key=2, style=dotted];
m6_62 -> m6_60  [key=0, style=solid];
m6_62 -> m6_66  [key=2, style=dotted];
m6_62 -> m6_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_62 -> m6_58  [color=blue, key=0, style=bold];
m6_63 -> m6_67  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_81  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m6_61 -> m6_34  [key=2, style=dotted];
m6_64 -> m6_53  [color=blue, key=0, style=bold];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_49  [key=2, style=dotted];
m6_18 -> m6_19  [color=red, key=0, style=solid];
m6_18 -> m6_20  [color=red, key=2, style=dotted];
m6_56 -> m6_57  [color=red, key=0, style=solid];
m6_56 -> m6_48  [color=red, key=2, style=dotted];
m6_56 -> m6_49  [color=red, key=2, style=dotted];
m6_80 -> m6_76  [color=blue, key=0, style=bold];
m6_80 -> m6_81  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_71  [key=2, style=dotted];
m6_79 -> m6_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_28 -> m6_29  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_33  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_34  [key=2, style=dotted];
m6_30 -> m6_35  [key=2, style=dotted];
m6_30 -> m6_33  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_34  [key=2, style=dotted];
m6_31 -> m6_36  [key=2, style=dotted];
m6_32 -> m6_28  [color=blue, key=0, style=bold];
m6_32 -> m6_29  [color=blue, key=0, style=bold];
m6_27 -> m6_25  [color=blue, key=0, style=bold];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_38  [key=2, style=dotted];
m6_55 -> m6_56  [color=red, key=0, style=solid];
m6_55 -> m6_73  [color=green, key=0, style=solid];
m6_55 -> m6_83  [color=green, key=0, style=solid];
m6_65 -> m6_63  [color=blue, key=0, style=bold];
m6_72 -> m6_73  [key=0, style=solid];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_75  [color=green, key=2, style=dotted];
m6_73 -> m6_57  [color=green, key=0, style=solid];
m6_73 -> m6_76  [color=green, key=2, style=dotted];
m6_73 -> m6_77  [color=green, key=2, style=dotted];
m6_73 -> m6_78  [color=green, key=2, style=dotted];
m6_73 -> m6_85  [color=green, key=2, style=dotted];
m6_74 -> m6_72  [color=blue, key=0, style=bold];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_75  [key=2, style=dotted];
m6_81 -> m6_71  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_84  [key=2, style=dotted];
m6_82 -> m6_33  [key=2, style=dotted];
m6_82 -> m6_85  [key=2, style=dotted];
m6_82 -> m6_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_82 -> m6_80  [color=blue, key=0, style=bold];
m6_83 -> m6_81  [color=blue, key=0, style=bold];
m6_83 -> m6_88  [color=blue, key=0, style=bold];
m6_83 -> m6_84  [color=green, key=0, style=solid];
m6_83 -> m6_65  [color=green, key=2, style=dotted];
m6_83 -> m6_85  [color=green, key=1, label=transaction, style=dashed];
m6_83 -> m6_86  [color=green, key=1, label=transaction, style=dashed];
m6_86 -> m6_87  [color=green, key=0, style=solid];
m6_86 -> m6_67  [color=green, key=2, style=dotted];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_89  [key=2, style=dotted];
m6_87 -> m6_55  [color=blue, key=0, style=bold];
m6_88 -> m6_86  [color=blue, key=0, style=bold];
m6_88 -> m6_89  [color=green, key=0, style=solid];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_98  [key=2, style=dotted];
m6_96 -> m6_59  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_73  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_83  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_84  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_85  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_89  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_93  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_8  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_9  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_10  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_23  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_24  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_29  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_30  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_31  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_38  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_45  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_46  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_47  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_49  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_51  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_57  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_62  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_96 -> m6_81  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m6_97 -> m6_95  [color=blue, key=0, style=bold];
m6_97 -> m6_81  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_106  [key=2, style=dotted];
m6_103 -> m6_104  [key=0, style=solid];
m6_105 -> m6_103  [color=blue, key=0, style=bold];
m6_114 -> m6_115  [key=0, style=solid];
m6_118 -> m6_119  [key=0, style=solid];
m6_122 -> m6_123  [key=0, style=solid];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_117  [key=2, style=dotted];
m6_116 -> m6_114  [color=blue, key=0, style=bold];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_84  [key=2, style=dotted];
m6_119 -> m6_121  [key=2, style=dotted];
m6_120 -> m6_118  [color=blue, key=0, style=bold];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_98  [key=2, style=dotted];
m6_124 -> m6_122  [color=blue, key=0, style=bold];
m6_89 -> m6_83  [color=green, key=0, style=solid];
m6_89 -> m6_91  [color=green, key=2, style=dotted];
m6_20 -> m6_128  [key=0, style=solid];
m6_128 -> m6_20  [color=blue, key=0, style=bold];
m6_43 -> m6_39  [color=blue, key=0, style=bold];
m6_107 -> m6_108  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_44  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_106  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_71  [key=2, style=dotted];
m6_110 -> m6_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_71  [key=2, style=dotted];
m6_111 -> m6_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_71  [key=2, style=dotted];
m6_112 -> m6_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_113 -> m6_107  [color=blue, key=0, style=bold];
m6_54 -> m6_50  [color=blue, key=0, style=bold];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_127  [key=2, style=dotted];
m6_126 -> m6_44  [color=blue, key=0, style=bold];
m6_129 -> m6_1  [color=red, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_2  [color=red, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_41  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_52  [color=red, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_56  [color=red, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_59  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_60  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_73  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_78  [color=red, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_82  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_91  [color=red, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_92  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_93  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_100  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_110  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_111  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_119  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_129 -> m6_125  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RecurringJobManagerFacts", style=dashed];
m6_130 -> m6_46  [color=darkseagreen4, key=1, label=manager, style=dashed];
m6_131 -> m6_56  [color=red, key=1, label=manager, style=dashed];
m6_132 -> m6_64  [color=darkseagreen4, key=1, label=manager, style=dashed];
m6_133 -> m6_104  [color=darkseagreen4, key=1, label=manager, style=dashed];
m7_200 -> m7_201  [key=0, style=solid];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_164  [key=2, style=dotted];
m7_201 -> m7_203  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_201 -> m7_208  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_100  [key=2, style=dotted];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_19  [key=2, style=dotted];
m7_203 -> m7_144  [key=2, style=dotted];
m7_203 -> m7_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_203 -> m7_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_71  [key=2, style=dotted];
m7_208 -> m7_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_61  [key=2, style=dotted];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_39  [key=2, style=dotted];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_145  [key=2, style=dotted];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_71  [key=2, style=dotted];
m7_207 -> m7_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_209 -> m7_200  [color=blue, key=0, style=bold];
m7_26 -> m7_363  [key=0, style=solid];
m7_363 -> m7_26  [color=blue, key=0, style=bold];
m7_75 -> m7_76  [key=0, style=solid];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_61  [key=2, style=dotted];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_39  [key=2, style=dotted];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_44  [key=2, style=dotted];
m7_79 -> m7_75  [color=blue, key=0, style=bold];
m7_311 -> m7_312  [key=0, style=solid];
m7_312 -> m7_313  [key=0, style=solid];
m7_312 -> m7_164  [key=2, style=dotted];
m7_312 -> m7_316  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_313 -> m7_314  [key=0, style=solid];
m7_313 -> m7_100  [key=2, style=dotted];
m7_316 -> m7_317  [key=0, style=solid];
m7_316 -> m7_19  [key=2, style=dotted];
m7_316 -> m7_144  [key=2, style=dotted];
m7_316 -> m7_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_316 -> m7_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_314 -> m7_315  [key=0, style=solid];
m7_314 -> m7_274  [key=2, style=dotted];
m7_314 -> m7_316  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_314 -> m7_325  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_314 -> m7_328  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_19  [key=2, style=dotted];
m7_315 -> m7_275  [key=2, style=dotted];
m7_315 -> m7_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_317 -> m7_318  [key=0, style=solid];
m7_317 -> m7_61  [key=2, style=dotted];
m7_318 -> m7_319  [key=0, style=solid];
m7_318 -> m7_39  [key=2, style=dotted];
m7_319 -> m7_320  [key=0, style=solid];
m7_319 -> m7_145  [key=2, style=dotted];
m7_320 -> m7_311  [color=blue, key=0, style=bold];
m7_222 -> m7_223  [key=0, style=solid];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_164  [key=2, style=dotted];
m7_223 -> m7_225  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m7_223 -> m7_230  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_164  [key=2, style=dotted];
m7_224 -> m7_226  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m7_224 -> m7_227  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_100  [key=2, style=dotted];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_71  [key=2, style=dotted];
m7_230 -> m7_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_226 -> m7_227  [key=0, style=solid];
m7_226 -> m7_100  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_19  [key=2, style=dotted];
m7_227 -> m7_144  [key=2, style=dotted];
m7_227 -> m7_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_227 -> m7_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_61  [key=2, style=dotted];
m7_229 -> m7_230  [key=0, style=solid];
m7_229 -> m7_39  [key=2, style=dotted];
m7_231 -> m7_222  [color=blue, key=0, style=bold];
m7_333 -> m7_334  [key=0, style=solid];
m7_334 -> m7_335  [key=0, style=solid];
m7_334 -> m7_164  [key=2, style=dotted];
m7_334 -> m7_336  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m7_334 -> m7_342  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m7_335 -> m7_336  [key=0, style=solid];
m7_335 -> m7_164  [key=2, style=dotted];
m7_335 -> m7_337  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m7_335 -> m7_339  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m7_336 -> m7_337  [key=0, style=solid];
m7_336 -> m7_100  [key=2, style=dotted];
m7_342 -> m7_343  [key=0, style=solid];
m7_342 -> m7_71  [key=2, style=dotted];
m7_342 -> m7_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_337 -> m7_338  [key=0, style=solid];
m7_337 -> m7_100  [key=2, style=dotted];
m7_339 -> m7_340  [key=0, style=solid];
m7_339 -> m7_19  [key=2, style=dotted];
m7_339 -> m7_144  [key=2, style=dotted];
m7_339 -> m7_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_339 -> m7_351  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_338 -> m7_339  [key=0, style=solid];
m7_338 -> m7_19  [key=2, style=dotted];
m7_338 -> m7_30  [key=2, style=dotted];
m7_338 -> m7_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_340 -> m7_341  [key=0, style=solid];
m7_340 -> m7_61  [key=2, style=dotted];
m7_340 -> m7_355  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_341 -> m7_342  [key=0, style=solid];
m7_341 -> m7_344  [key=2, style=dotted];
m7_341 -> m7_354  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_343 -> m7_333  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_30  [key=2, style=dotted];
m7_50 -> m7_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_44  [key=2, style=dotted];
m7_52 -> m7_49  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_30  [key=2, style=dotted];
m7_41 -> m7_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_44  [key=2, style=dotted];
m7_43 -> m7_40  [color=blue, key=0, style=bold];
m7_61 -> m7_364  [key=0, style=solid];
m7_364 -> m7_365  [key=0, style=solid];
m7_364 -> m7_48  [key=2, style=dotted];
m7_365 -> m7_61  [color=blue, key=0, style=bold];
m7_176 -> m7_177  [key=0, style=solid];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> m7_164  [key=2, style=dotted];
m7_177 -> m7_179  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m7_177 -> m7_181  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m7_177 -> m7_184  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_164  [key=2, style=dotted];
m7_178 -> m7_180  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m7_178 -> m7_182  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m7_178 -> m7_183  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_100  [key=2, style=dotted];
m7_181 -> m7_182  [key=0, style=solid];
m7_181 -> m7_19  [key=2, style=dotted];
m7_181 -> m7_122  [key=2, style=dotted];
m7_181 -> m7_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_19  [key=2, style=dotted];
m7_184 -> m7_122  [key=2, style=dotted];
m7_184 -> m7_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_180 -> m7_181  [key=0, style=solid];
m7_180 -> m7_100  [key=2, style=dotted];
m7_182 -> m7_183  [key=0, style=solid];
m7_182 -> m7_19  [key=2, style=dotted];
m7_182 -> m7_122  [key=2, style=dotted];
m7_182 -> m7_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_183 -> m7_184  [key=0, style=solid];
m7_183 -> m7_19  [key=2, style=dotted];
m7_183 -> m7_122  [key=2, style=dotted];
m7_183 -> m7_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_61  [key=2, style=dotted];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_39  [key=2, style=dotted];
m7_187 -> m7_176  [color=blue, key=0, style=bold];
m7_91 -> m7_92  [key=0, style=solid];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_99  [key=2, style=dotted];
m7_92 -> m7_97  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_100  [key=2, style=dotted];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_71  [key=2, style=dotted];
m7_97 -> m7_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_19  [key=2, style=dotted];
m7_94 -> m7_30  [key=2, style=dotted];
m7_94 -> m7_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_61  [key=2, style=dotted];
m7_95 -> m7_105  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_30  [key=2, style=dotted];
m7_96 -> m7_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_98 -> m7_91  [color=blue, key=0, style=bold];
m7_265 -> m7_266  [key=0, style=solid];
m7_266 -> m7_267  [key=0, style=solid];
m7_266 -> m7_164  [key=2, style=dotted];
m7_266 -> m7_272  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_100  [key=2, style=dotted];
m7_272 -> m7_273  [key=0, style=solid];
m7_272 -> m7_71  [key=2, style=dotted];
m7_272 -> m7_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_274  [key=2, style=dotted];
m7_268 -> m7_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_268 -> m7_283  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_268 -> m7_286  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_269 -> m7_270  [key=0, style=solid];
m7_269 -> m7_19  [key=2, style=dotted];
m7_269 -> m7_275  [key=2, style=dotted];
m7_269 -> m7_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_270 -> m7_271  [key=0, style=solid];
m7_270 -> m7_61  [key=2, style=dotted];
m7_270 -> m7_280  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_271 -> m7_272  [key=0, style=solid];
m7_271 -> m7_30  [key=2, style=dotted];
m7_271 -> m7_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_273 -> m7_265  [color=blue, key=0, style=bold];
m7_288 -> m7_289  [key=0, style=solid];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_164  [key=2, style=dotted];
m7_289 -> m7_291  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m7_289 -> m7_297  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_164  [key=2, style=dotted];
m7_290 -> m7_292  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_100  [key=2, style=dotted];
m7_297 -> m7_298  [key=0, style=solid];
m7_297 -> m7_71  [key=2, style=dotted];
m7_297 -> m7_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_100  [key=2, style=dotted];
m7_293 -> m7_294  [key=0, style=solid];
m7_293 -> m7_274  [key=2, style=dotted];
m7_293 -> m7_297  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_293 -> m7_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_293 -> m7_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_19  [key=2, style=dotted];
m7_294 -> m7_275  [key=2, style=dotted];
m7_294 -> m7_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_61  [key=2, style=dotted];
m7_295 -> m7_303  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_296 -> m7_297  [key=0, style=solid];
m7_296 -> m7_30  [key=2, style=dotted];
m7_296 -> m7_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_298 -> m7_288  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_12  [key=2, style=dotted];
m7_1 -> m7_5  [color=darkseagreen4, key=1, label=storage, style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_13  [key=2, style=dotted];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label=connection, style=dashed];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_16  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_14  [key=2, style=dotted];
m7_3 -> m7_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_5  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_15  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> d13  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_18  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_19  [key=2, style=dotted];
m7_8 -> m7_20  [key=2, style=dotted];
m7_8 -> m7_21  [key=2, style=dotted];
m7_8 -> m7_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_8 -> m7_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_22  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_19  [key=2, style=dotted];
m7_10 -> m7_21  [key=2, style=dotted];
m7_10 -> m7_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_11 -> m7_0  [color=blue, key=0, style=bold];
m7_244 -> m7_245  [key=0, style=solid];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_164  [key=2, style=dotted];
m7_245 -> m7_247  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_245 -> m7_251  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_100  [key=2, style=dotted];
m7_247 -> m7_248  [key=0, style=solid];
m7_247 -> m7_19  [key=2, style=dotted];
m7_247 -> m7_30  [key=2, style=dotted];
m7_247 -> m7_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_251 -> m7_252  [key=0, style=solid];
m7_251 -> m7_71  [key=2, style=dotted];
m7_251 -> m7_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_61  [key=2, style=dotted];
m7_248 -> m7_257  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_249 -> m7_250  [key=0, style=solid];
m7_249 -> m7_30  [key=2, style=dotted];
m7_249 -> m7_256  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_250 -> m7_251  [key=0, style=solid];
m7_250 -> m7_71  [key=2, style=dotted];
m7_250 -> m7_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_252 -> m7_244  [color=blue, key=0, style=bold];
m7_111 -> m7_112  [key=0, style=solid];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_99  [key=2, style=dotted];
m7_112 -> m7_115  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m7_112 -> m7_116  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_99  [key=2, style=dotted];
m7_113 -> m7_117  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_19  [key=2, style=dotted];
m7_115 -> m7_122  [key=2, style=dotted];
m7_115 -> m7_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_100  [key=2, style=dotted];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_19  [key=2, style=dotted];
m7_114 -> m7_122  [key=2, style=dotted];
m7_114 -> m7_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_100  [key=2, style=dotted];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_19  [key=2, style=dotted];
m7_118 -> m7_30  [key=2, style=dotted];
m7_118 -> m7_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_61  [key=2, style=dotted];
m7_119 -> m7_133  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_30  [key=2, style=dotted];
m7_120 -> m7_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_121 -> m7_111  [color=blue, key=0, style=bold];
m7_360 -> m7_361  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_26  [key=2, style=dotted];
m7_25 -> m7_23  [color=blue, key=0, style=bold];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_30  [key=2, style=dotted];
m7_28 -> m7_31  [key=2, style=dotted];
m7_29 -> m7_27  [color=blue, key=0, style=bold];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_35  [key=2, style=dotted];
m7_34 -> m7_32  [color=blue, key=0, style=bold];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_39  [key=2, style=dotted];
m7_38 -> m7_36  [color=blue, key=0, style=bold];
m7_45 -> m7_46  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_48  [key=2, style=dotted];
m7_47 -> m7_45  [color=blue, key=0, style=bold];
m7_53 -> m7_54  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_48  [key=2, style=dotted];
m7_55 -> m7_53  [color=blue, key=0, style=bold];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_65  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_64 -> m7_62  [color=blue, key=0, style=bold];
m7_72 -> m7_73  [color=red, key=0, style=solid];
m7_73 -> m7_74  [color=red, key=0, style=solid];
m7_73 -> m7_39  [color=red, key=2, style=dotted];
m7_74 -> m7_72  [color=blue, key=0, style=bold];
m7_85 -> m7_86  [key=0, style=solid];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_39  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_30  [key=2, style=dotted];
m7_86 -> m7_39  [key=2, style=dotted];
m7_87 -> m7_85  [color=blue, key=0, style=bold];
m7_90 -> m7_88  [color=blue, key=0, style=bold];
m7_101 -> m7_102  [key=0, style=solid];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_39  [key=2, style=dotted];
m7_104 -> m7_105  [key=0, style=solid];
m7_107 -> m7_108  [key=0, style=solid];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_30  [key=2, style=dotted];
m7_102 -> m7_39  [key=2, style=dotted];
m7_103 -> m7_101  [color=blue, key=0, style=bold];
m7_106 -> m7_104  [color=blue, key=0, style=bold];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_30  [key=2, style=dotted];
m7_108 -> m7_110  [key=2, style=dotted];
m7_109 -> m7_107  [color=blue, key=0, style=bold];
m7_123 -> m7_124  [key=0, style=solid];
m7_126 -> m7_127  [key=0, style=solid];
m7_129 -> m7_130  [key=0, style=solid];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_39  [key=2, style=dotted];
m7_132 -> m7_133  [key=0, style=solid];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_30  [key=2, style=dotted];
m7_124 -> m7_110  [key=2, style=dotted];
m7_125 -> m7_123  [color=blue, key=0, style=bold];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_30  [key=2, style=dotted];
m7_127 -> m7_110  [key=2, style=dotted];
m7_128 -> m7_126  [color=blue, key=0, style=bold];
m7_130 -> m7_131  [key=0, style=solid];
m7_130 -> m7_30  [key=2, style=dotted];
m7_130 -> m7_39  [key=2, style=dotted];
m7_131 -> m7_129  [color=blue, key=0, style=bold];
m7_134 -> m7_132  [color=blue, key=0, style=bold];
m7_146 -> m7_147  [key=0, style=solid];
m7_149 -> m7_150  [key=0, style=solid];
m7_152 -> m7_153  [key=0, style=solid];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_30  [key=2, style=dotted];
m7_147 -> m7_39  [key=2, style=dotted];
m7_148 -> m7_146  [color=blue, key=0, style=bold];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_30  [key=2, style=dotted];
m7_150 -> m7_110  [key=2, style=dotted];
m7_151 -> m7_149  [color=blue, key=0, style=bold];
m7_153 -> m7_154  [key=0, style=solid];
m7_154 -> m7_152  [color=blue, key=0, style=bold];
m7_165 -> m7_166  [key=0, style=solid];
m7_169 -> m7_170  [key=0, style=solid];
m7_172 -> m7_173  [key=0, style=solid];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_30  [key=2, style=dotted];
m7_166 -> m7_168  [key=2, style=dotted];
m7_167 -> m7_165  [color=blue, key=0, style=bold];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_30  [key=2, style=dotted];
m7_170 -> m7_39  [key=2, style=dotted];
m7_171 -> m7_169  [color=blue, key=0, style=bold];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_30  [key=2, style=dotted];
m7_173 -> m7_175  [key=2, style=dotted];
m7_174 -> m7_172  [color=blue, key=0, style=bold];
m7_188 -> m7_189  [key=0, style=solid];
m7_191 -> m7_192  [key=0, style=solid];
m7_194 -> m7_195  [key=0, style=solid];
m7_197 -> m7_198  [key=0, style=solid];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_30  [key=2, style=dotted];
m7_189 -> m7_168  [key=2, style=dotted];
m7_190 -> m7_188  [color=blue, key=0, style=bold];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_30  [key=2, style=dotted];
m7_192 -> m7_168  [key=2, style=dotted];
m7_193 -> m7_191  [color=blue, key=0, style=bold];
m7_195 -> m7_196  [key=0, style=solid];
m7_195 -> m7_30  [key=2, style=dotted];
m7_195 -> m7_175  [key=2, style=dotted];
m7_196 -> m7_194  [color=blue, key=0, style=bold];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_30  [key=2, style=dotted];
m7_198 -> m7_175  [key=2, style=dotted];
m7_199 -> m7_197  [color=blue, key=0, style=bold];
m7_210 -> m7_211  [key=0, style=solid];
m7_213 -> m7_214  [key=0, style=solid];
m7_216 -> m7_217  [key=0, style=solid];
m7_219 -> m7_220  [key=0, style=solid];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_30  [key=2, style=dotted];
m7_211 -> m7_168  [key=2, style=dotted];
m7_212 -> m7_210  [color=blue, key=0, style=bold];
m7_214 -> m7_215  [key=0, style=solid];
m7_215 -> m7_213  [color=blue, key=0, style=bold];
m7_217 -> m7_218  [key=0, style=solid];
m7_217 -> m7_30  [key=2, style=dotted];
m7_217 -> m7_39  [key=2, style=dotted];
m7_218 -> m7_216  [color=blue, key=0, style=bold];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_30  [key=2, style=dotted];
m7_220 -> m7_175  [key=2, style=dotted];
m7_221 -> m7_219  [color=blue, key=0, style=bold];
m7_232 -> m7_233  [key=0, style=solid];
m7_235 -> m7_236  [key=0, style=solid];
m7_238 -> m7_239  [key=0, style=solid];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_30  [key=2, style=dotted];
m7_233 -> m7_168  [key=2, style=dotted];
m7_234 -> m7_232  [color=blue, key=0, style=bold];
m7_236 -> m7_237  [key=0, style=solid];
m7_237 -> m7_235  [color=blue, key=0, style=bold];
m7_239 -> m7_240  [key=0, style=solid];
m7_239 -> m7_30  [key=2, style=dotted];
m7_239 -> m7_175  [key=2, style=dotted];
m7_239 -> m7_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_240 -> m7_238  [color=blue, key=0, style=bold];
m7_241 -> m7_242  [key=0, style=solid];
m7_242 -> m7_243  [key=0, style=solid];
m7_243 -> m7_241  [color=blue, key=0, style=bold];
m7_253 -> m7_254  [key=0, style=solid];
m7_257 -> m7_258  [key=0, style=solid];
m7_257 -> m7_39  [key=2, style=dotted];
m7_256 -> m7_257  [key=0, style=solid];
m7_259 -> m7_260  [key=0, style=solid];
m7_262 -> m7_263  [key=0, style=solid];
m7_254 -> m7_255  [key=0, style=solid];
m7_254 -> m7_30  [key=2, style=dotted];
m7_254 -> m7_168  [key=2, style=dotted];
m7_255 -> m7_253  [color=blue, key=0, style=bold];
m7_258 -> m7_256  [color=blue, key=0, style=bold];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_30  [key=2, style=dotted];
m7_260 -> m7_39  [key=2, style=dotted];
m7_261 -> m7_259  [color=blue, key=0, style=bold];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_30  [key=2, style=dotted];
m7_263 -> m7_175  [key=2, style=dotted];
m7_264 -> m7_262  [color=blue, key=0, style=bold];
m7_283 -> m7_284  [key=0, style=solid];
m7_283 -> m7_30  [key=2, style=dotted];
m7_283 -> m7_175  [key=2, style=dotted];
m7_283 -> m7_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_286 -> m7_287  [key=0, style=solid];
m7_276 -> m7_277  [key=0, style=solid];
m7_280 -> m7_281  [key=0, style=solid];
m7_280 -> m7_39  [key=2, style=dotted];
m7_279 -> m7_280  [key=0, style=solid];
m7_282 -> m7_283  [key=0, style=solid];
m7_277 -> m7_278  [key=0, style=solid];
m7_277 -> m7_30  [key=2, style=dotted];
m7_277 -> m7_39  [key=2, style=dotted];
m7_278 -> m7_276  [color=blue, key=0, style=bold];
m7_281 -> m7_279  [color=blue, key=0, style=bold];
m7_284 -> m7_282  [color=blue, key=0, style=bold];
m7_285 -> m7_286  [key=0, style=solid];
m7_287 -> m7_285  [color=blue, key=0, style=bold];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_30  [key=2, style=dotted];
m7_306 -> m7_175  [key=2, style=dotted];
m7_306 -> m7_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_309 -> m7_310  [key=0, style=solid];
m7_299 -> m7_300  [key=0, style=solid];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_39  [key=2, style=dotted];
m7_302 -> m7_303  [key=0, style=solid];
m7_305 -> m7_306  [key=0, style=solid];
m7_300 -> m7_301  [key=0, style=solid];
m7_300 -> m7_30  [key=2, style=dotted];
m7_300 -> m7_39  [key=2, style=dotted];
m7_301 -> m7_299  [color=blue, key=0, style=bold];
m7_304 -> m7_302  [color=blue, key=0, style=bold];
m7_307 -> m7_305  [color=blue, key=0, style=bold];
m7_308 -> m7_309  [key=0, style=solid];
m7_310 -> m7_308  [color=blue, key=0, style=bold];
m7_325 -> m7_326  [key=0, style=solid];
m7_325 -> m7_30  [key=2, style=dotted];
m7_325 -> m7_175  [key=2, style=dotted];
m7_325 -> m7_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_328 -> m7_329  [key=0, style=solid];
m7_321 -> m7_322  [key=0, style=solid];
m7_324 -> m7_325  [key=0, style=solid];
m7_330 -> m7_331  [key=0, style=solid];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_30  [key=2, style=dotted];
m7_322 -> m7_39  [key=2, style=dotted];
m7_323 -> m7_321  [color=blue, key=0, style=bold];
m7_326 -> m7_324  [color=blue, key=0, style=bold];
m7_327 -> m7_328  [key=0, style=solid];
m7_329 -> m7_327  [color=blue, key=0, style=bold];
m7_331 -> m7_332  [key=0, style=solid];
m7_332 -> m7_330  [color=blue, key=0, style=bold];
m7_345 -> m7_346  [key=0, style=solid];
m7_348 -> m7_349  [key=0, style=solid];
m7_351 -> m7_352  [key=0, style=solid];
m7_355 -> m7_356  [key=0, style=solid];
m7_355 -> m7_39  [key=2, style=dotted];
m7_354 -> m7_355  [key=0, style=solid];
m7_357 -> m7_358  [key=0, style=solid];
m7_346 -> m7_347  [key=0, style=solid];
m7_346 -> m7_30  [key=2, style=dotted];
m7_346 -> m7_39  [key=2, style=dotted];
m7_347 -> m7_345  [color=blue, key=0, style=bold];
m7_349 -> m7_350  [key=0, style=solid];
m7_349 -> m7_30  [key=2, style=dotted];
m7_349 -> m7_175  [key=2, style=dotted];
m7_350 -> m7_348  [color=blue, key=0, style=bold];
m7_352 -> m7_353  [key=0, style=solid];
m7_353 -> m7_351  [color=blue, key=0, style=bold];
m7_356 -> m7_354  [color=blue, key=0, style=bold];
m7_358 -> m7_359  [key=0, style=solid];
m7_358 -> m7_30  [key=2, style=dotted];
m7_358 -> m7_175  [key=2, style=dotted];
m7_358 -> m7_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_359 -> m7_357  [color=blue, key=0, style=bold];
m7_361 -> m7_362  [key=0, style=solid];
m7_362 -> m7_360  [color=blue, key=0, style=bold];
m7_135 -> m7_136  [key=0, style=solid];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_19  [key=2, style=dotted];
m7_136 -> m7_30  [key=2, style=dotted];
m7_136 -> m7_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_99  [key=2, style=dotted];
m7_137 -> m7_139  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_19  [key=2, style=dotted];
m7_138 -> m7_144  [key=2, style=dotted];
m7_138 -> m7_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_138 -> m7_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_100  [key=2, style=dotted];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_61  [key=2, style=dotted];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_39  [key=2, style=dotted];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_145  [key=2, style=dotted];
m7_143 -> m7_135  [color=blue, key=0, style=bold];
m7_80 -> m7_81  [key=0, style=solid];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_19  [key=2, style=dotted];
m7_81 -> m7_30  [key=2, style=dotted];
m7_81 -> m7_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_61  [key=2, style=dotted];
m7_82 -> m7_89  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_30  [key=2, style=dotted];
m7_83 -> m7_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_84 -> m7_80  [color=blue, key=0, style=bold];
m7_56 -> m7_57  [key=0, style=solid];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_61  [key=2, style=dotted];
m7_57 -> m7_63  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_30  [key=2, style=dotted];
m7_58 -> m7_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_44  [key=2, style=dotted];
m7_60 -> m7_56  [color=blue, key=0, style=bold];
m7_66 -> m7_67  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_61  [key=2, style=dotted];
m7_68 -> m7_69  [color=red, key=0, style=solid];
m7_68 -> m7_39  [key=2, style=dotted];
m7_69 -> m7_70  [color=red, key=0, style=solid];
m7_69 -> m7_71  [color=red, key=2, style=dotted];
m7_69 -> m7_72  [color=red, key=1, label="lambda expression", style=dashed];
m7_70 -> m7_66  [color=blue, key=0, style=bold];
m7_155 -> m7_156  [key=0, style=solid];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_164  [key=2, style=dotted];
m7_156 -> m7_158  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_156 -> m7_160  [color=darkseagreen4, key=1, label=filter, style=dashed];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_100  [key=2, style=dotted];
m7_158 -> m7_159  [key=0, style=solid];
m7_158 -> m7_19  [key=2, style=dotted];
m7_158 -> m7_122  [key=2, style=dotted];
m7_158 -> m7_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> m7_19  [key=2, style=dotted];
m7_160 -> m7_122  [key=2, style=dotted];
m7_160 -> m7_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> m7_19  [key=2, style=dotted];
m7_159 -> m7_122  [key=2, style=dotted];
m7_159 -> m7_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_61  [key=2, style=dotted];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_39  [key=2, style=dotted];
m7_163 -> m7_155  [color=blue, key=0, style=bold];
m7_366 -> m7_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_69  [color=red, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_73  [color=red, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_76  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_83  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_105  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_118  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_119  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_120  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_133  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_139  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_140  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_141  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_159  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_161  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_162  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_180  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_185  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_186  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_202  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_204  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_205  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_207  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_225  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_226  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_228  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_229  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_246  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_248  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_249  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_257  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_250  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_267  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_269  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_270  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_271  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_280  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_291  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_292  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_294  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_295  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_296  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_303  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_313  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_315  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_317  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_318  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_336  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_337  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_338  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_340  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_341  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_355  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_366 -> m7_364  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m7_367 -> m7_63  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_368 -> m7_89  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_369 -> m7_105  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_370 -> m7_133  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_371 -> m7_257  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_372 -> m7_280  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_373 -> m7_283  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_373 -> m7_286  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_374 -> m7_303  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_375 -> m7_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_375 -> m7_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_376 -> m7_325  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_376 -> m7_328  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_377 -> m7_355  [color=darkseagreen4, key=1, label=process, style=dashed];
m8_19 -> m8_20  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_24  [key=2, style=dotted];
m8_21 -> m8_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_22 -> m8_23  [key=0, style=solid];
m8_23 -> m8_19  [color=blue, key=0, style=bold];
m8_29 -> m8_30  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_24  [key=2, style=dotted];
m8_31 -> m8_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_32 -> m8_33  [key=0, style=solid];
m8_33 -> m8_29  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m8_0 -> m8_8  [color=darkseagreen4, key=1, label=long, style=dashed];
m8_0 -> m8_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m8_0 -> m8_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_2 -> m8_14  [key=0, style=solid];
m8_2 -> m8_15  [key=2, style=dotted];
m8_2 -> m8_16  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid];
m8_4 -> m8_14  [key=0, style=solid];
m8_4 -> m8_15  [key=2, style=dotted];
m8_4 -> m8_16  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=0, style=solid];
m8_6 -> m8_14  [key=0, style=solid];
m8_6 -> m8_15  [key=2, style=dotted];
m8_6 -> m8_16  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_14  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_17  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_18  [key=2, style=dotted];
m8_14 -> m8_0  [color=blue, key=0, style=bold];
m8_37 -> m8_38  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_40  [key=0, style=solid];
m8_39 -> m8_45  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_46  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_45  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_29  [key=2, style=dotted];
m8_45 -> m8_37  [color=blue, key=0, style=bold];
m8_58 -> m8_59  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_28  [key=2, style=dotted];
m8_27 -> m8_25  [color=blue, key=0, style=bold];
m8_34 -> m8_35  [key=0, style=solid];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_28  [key=2, style=dotted];
m8_36 -> m8_34  [color=blue, key=0, style=bold];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_28  [key=2, style=dotted];
m8_60 -> m8_58  [color=blue, key=0, style=bold];
m8_47 -> m8_48  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_51  [key=0, style=solid];
m8_50 -> m8_55  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_24  [key=2, style=dotted];
m8_51 -> m8_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_55  [key=0, style=solid];
m8_52 -> m8_56  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_57  [key=2, style=dotted];
m8_55 -> m8_47  [color=blue, key=0, style=bold];
m8_61 -> m8_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_20  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_26  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_22  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_38  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_40  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_41  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_42  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_43  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_48  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_49  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_51  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_59  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_52  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m8_61 -> m8_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerTimeoutJob", style=dashed];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_76  [color=darkseagreen4, key=1, label="System.IServiceProvider", style=dashed];
m10_74 -> m10_77  [color=darkseagreen4, key=1, label="System.IServiceProvider", style=dashed];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_79  [key=0, style=solid];
m10_75 -> m10_81  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> d28  [key=2, style=dotted];
m10_76 -> m10_78  [color=darkseagreen4, key=1, label=configurationInstance, style=dashed];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> d28  [key=2, style=dotted];
m10_79 -> m10_80  [key=0, style=solid];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_82  [key=2, style=dotted];
m10_80 -> m10_74  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IGlobalConfiguration>", style=dashed];
m10_0 -> m10_4  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IGlobalConfiguration>", style=dashed];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_6  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_7  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_8  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_9  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_10  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_11  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_12  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_13  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_14  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_15  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_0 -> m10_66  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IGlobalConfiguration>", style=dashed];
m10_0 -> m10_16  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_2 -> m10_17  [key=0, style=solid];
m10_2 -> m10_18  [key=2, style=dotted];
m10_2 -> m10_19  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_4 -> m10_17  [key=0, style=solid];
m10_4 -> m10_18  [key=2, style=dotted];
m10_4 -> m10_19  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_20  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_20  [key=2, style=dotted];
m10_6 -> m10_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_20  [key=2, style=dotted];
m10_7 -> m10_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_20  [key=2, style=dotted];
m10_8 -> m10_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> d28  [key=2, style=dotted];
m10_9 -> m10_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> d28  [key=2, style=dotted];
m10_10 -> m10_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> d28  [key=2, style=dotted];
m10_11 -> m10_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> d28  [key=2, style=dotted];
m10_12 -> m10_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> d28  [key=2, style=dotted];
m10_13 -> m10_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> d28  [key=2, style=dotted];
m10_14 -> m10_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> d28  [key=2, style=dotted];
m10_15 -> m10_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_0  [color=blue, key=0, style=bold];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_62  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_57 -> m10_65  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_57 -> m10_66  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_73  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_25 -> m10_26  [key=0, style=solid];
m10_28 -> m10_29  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_38 -> m10_39  [key=0, style=solid];
m10_42 -> m10_43  [key=0, style=solid];
m10_46 -> m10_47  [key=0, style=solid];
m10_50 -> m10_51  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_60  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_54 -> m10_63  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_23 -> m10_24  [key=0, style=solid];
m10_24 -> m10_22  [color=blue, key=0, style=bold];
m10_26 -> m10_27  [key=0, style=solid];
m10_27 -> m10_25  [color=blue, key=0, style=bold];
m10_29 -> m10_30  [key=0, style=solid];
m10_30 -> m10_28  [color=blue, key=0, style=bold];
m10_32 -> m10_33  [key=0, style=solid];
m10_33 -> m10_31  [color=blue, key=0, style=bold];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_37  [key=2, style=dotted];
m10_35 -> d28  [key=2, style=dotted];
m10_36 -> m10_34  [color=blue, key=0, style=bold];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_41  [key=2, style=dotted];
m10_39 -> d28  [key=2, style=dotted];
m10_40 -> m10_38  [color=blue, key=0, style=bold];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_45  [key=2, style=dotted];
m10_43 -> d28  [key=2, style=dotted];
m10_44 -> m10_42  [color=blue, key=0, style=bold];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_49  [key=2, style=dotted];
m10_47 -> d28  [key=2, style=dotted];
m10_48 -> m10_46  [color=blue, key=0, style=bold];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_53  [key=2, style=dotted];
m10_51 -> d28  [key=2, style=dotted];
m10_52 -> m10_50  [color=blue, key=0, style=bold];
m10_55 -> m10_56  [key=0, style=solid];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> d28  [key=2, style=dotted];
m10_60 -> m10_62  [color=darkseagreen4, key=1, label=loggerFactory, style=dashed];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> d28  [key=2, style=dotted];
m10_63 -> m10_65  [color=darkseagreen4, key=1, label=scopeFactory, style=dashed];
m10_56 -> m10_54  [color=blue, key=0, style=bold];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_60  [key=0, style=solid];
m10_58 -> m10_68  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_69  [key=2, style=dotted];
m10_62 -> m10_70  [key=2, style=dotted];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_71  [key=2, style=dotted];
m10_65 -> m10_72  [key=2, style=dotted];
m10_59 -> m10_67  [key=0, style=solid];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_63  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_66  [key=0, style=solid];
m10_67 -> m10_57  [color=blue, key=0, style=bold];
m10_83 -> m10_66  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IGlobalConfiguration>", style=dashed];
m10_84 -> m10_60  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_84 -> m10_63  [color=darkseagreen4, key=1, label="?", style=dashed];
m11_5 -> m11_6  [key=0, style=solid];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_8  [key=2, style=dotted];
m11_7 -> m11_5  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_1 -> m11_4  [key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_13  [key=2, style=dotted];
m12_22 -> m12_20  [color=blue, key=0, style=bold];
m12_23 -> m12_24  [key=0, style=solid];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_61  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_62  [key=2, style=dotted];
m12_27 -> m12_63  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_64  [key=2, style=dotted];
m12_28 -> m12_63  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_65  [key=2, style=dotted];
m12_29 -> m12_63  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_66  [key=2, style=dotted];
m12_30 -> m12_67  [key=2, style=dotted];
m12_30 -> m12_68  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_69  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_13  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_41  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_33 -> m12_54  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_58  [key=0, style=solid];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_75  [key=2, style=dotted];
m12_41 -> m12_41  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_41 -> m12_54  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_11  [key=2, style=dotted];
m12_54 -> m12_76  [key=2, style=dotted];
m12_54 -> m12_54  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_70  [key=2, style=dotted];
m12_35 -> m12_37  [color=darkseagreen4, key=1, label=command, style=dashed];
m12_35 -> m12_38  [color=darkseagreen4, key=1, label=command, style=dashed];
m12_35 -> m12_46  [color=darkseagreen4, key=1, label=command, style=dashed];
m12_35 -> m12_47  [color=darkseagreen4, key=1, label=command, style=dashed];
m12_35 -> m12_52  [color=darkseagreen4, key=1, label=command, style=dashed];
m12_35 -> m12_53  [color=darkseagreen4, key=1, label=command, style=dashed];
m12_35 -> m12_55  [color=darkseagreen4, key=1, label=command, style=dashed];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_13  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_58  [key=0, style=solid];
m12_36 -> m12_71  [key=2, style=dotted];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_46  [key=0, style=solid];
m12_37 -> m12_72  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_73  [key=2, style=dotted];
m12_38 -> m12_74  [key=2, style=dotted];
m12_38 -> m12_40  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_52  [key=0, style=solid];
m12_46 -> m12_72  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_73  [key=2, style=dotted];
m12_47 -> m12_74  [key=2, style=dotted];
m12_47 -> m12_49  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_55  [key=0, style=solid];
m12_52 -> m12_72  [key=2, style=dotted];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_73  [key=2, style=dotted];
m12_53 -> m12_74  [key=2, style=dotted];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_34  [key=0, style=solid];
m12_55 -> m12_72  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_43  [key=0, style=solid];
m12_42 -> m12_40  [key=0, style=solid];
m12_42 -> m12_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_46  [key=0, style=solid];
m12_43 -> m12_13  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_13  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_51  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_52  [key=0, style=solid];
m12_51 -> m12_49  [key=0, style=solid];
m12_51 -> m12_51  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_75  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_77  [key=2, style=dotted];
m12_57 -> m12_34  [key=0, style=solid];
m12_57 -> m12_13  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_70  [key=2, style=dotted];
m12_60 -> m12_23  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_9  [key=2, style=dotted];
m12_3 -> m12_6  [color=darkseagreen4, key=1, label=time, style=dashed];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_11  [key=2, style=dotted];
m12_6 -> m12_12  [key=2, style=dotted];
m12_5 -> m12_8  [key=0, style=solid];
m12_5 -> m12_10  [key=2, style=dotted];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_13  [key=2, style=dotted];
m12_8 -> m12_0  [color=blue, key=0, style=bold];
m12_14 -> m12_15  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_13  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_18  [key=2, style=dotted];
m12_16 -> m12_19  [key=2, style=dotted];
m12_17 -> m12_14  [color=blue, key=0, style=bold];
m12_78 -> m12_7  [color=darkseagreen4, key=1, label="ConsoleSample.ConsoleJob", style=dashed];
m13_0 -> m13_1  [color=green, key=0, style=solid];
m13_1 -> m13_2  [color=green, key=0, style=solid];
m13_1 -> d13  [color=green, key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_7  [key=2, style=dotted];
m13_2 -> m13_8  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_9  [key=2, style=dotted];
m13_3 -> m13_8  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_10  [key=2, style=dotted];
m13_4 -> m13_8  [key=2, style=dotted];
m13_5 -> m13_0  [color=blue, key=0, style=bold];
m14_6 -> m14_17  [key=0, style=solid];
m14_6 -> m14_3  [color=darkorchid, key=3, label="Parameter variable int i", style=bold];
m14_6 -> m14_10  [color=darkorchid, key=3, label="Parameter variable int i", style=bold];
m14_6 -> m14_19  [color=darkorchid, key=3, label="Parameter variable int i", style=bold];
m14_17 -> m14_18  [key=0, style=solid];
m14_18 -> m14_6  [color=blue, key=0, style=bold];
m14_16 -> m14_19  [key=0, style=solid];
m14_16 -> m14_11  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_22  [key=2, style=dotted];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_6  [key=2, style=dotted];
m14_21 -> m14_16  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_2  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=0, style=solid];
m14_2 -> m14_4  [key=0, style=solid];
m14_2 -> m14_5  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_6  [key=2, style=dotted];
m14_4 -> m14_0  [color=blue, key=0, style=bold];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_11  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_10  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_14  [key=0, style=solid];
m14_9 -> m14_15  [key=0, style=solid];
m14_9 -> m14_6  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_13  [color=darkseagreen4, key=1, label=count, style=dashed];
m14_10 -> m14_14  [color=darkseagreen4, key=1, label=count, style=dashed];
m14_10 -> m14_3  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m14_13 -> m14_11  [key=0, style=solid];
m14_13 -> m14_13  [color=darkseagreen4, key=1, label=count, style=dashed];
m14_13 -> m14_14  [color=darkseagreen4, key=1, label=count, style=dashed];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_6  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_16  [key=2, style=dotted];
m14_15 -> m14_7  [color=blue, key=0, style=bold];
m14_23 -> m14_2  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m14_23 -> m14_3  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m14_23 -> m14_9  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m14_23 -> m14_12  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m14_23 -> m14_14  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m14_23 -> m14_17  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m14_23 -> m14_20  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_74  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_75  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_76  [key=2, style=dotted];
m16_4 -> m16_77  [key=2, style=dotted];
m16_4 -> m16_12  [color=darkseagreen4, key=1, label=from, style=dashed];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_76  [key=2, style=dotted];
m16_5 -> m16_77  [key=2, style=dotted];
m16_5 -> m16_12  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_80  [key=2, style=dotted];
m16_12 -> m16_81  [key=2, style=dotted];
m16_12 -> m16_23  [color=darkseagreen4, key=1, label=pager, style=dashed];
m16_12 -> m16_69  [color=darkseagreen4, key=1, label=pager, style=dashed];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_78  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_12  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m16_9 -> m16_13  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_12  [key=0, style=solid];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_82  [key=2, style=dotted];
m16_13 -> m16_17  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m16_13 -> m16_25  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m16_11 -> m16_73  [key=0, style=solid];
m16_11 -> m16_79  [key=2, style=dotted];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_86  [key=2, style=dotted];
m16_23 -> m16_84  [key=2, style=dotted];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_97  [key=2, style=dotted];
m16_69 -> m16_84  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_74  [key=2, style=dotted];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_71  [key=0, style=solid];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_68  [key=0, style=solid];
m16_25 -> m16_30  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_25 -> m16_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_25 -> m16_37  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_25 -> m16_39  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_25 -> m16_44  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_83  [key=2, style=dotted];
m16_15 -> m16_84  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_74  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_74  [key=2, style=dotted];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_74  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_85  [key=2, style=dotted];
m16_19 -> m16_84  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_74  [key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_85  [key=2, style=dotted];
m16_21 -> m16_84  [key=2, style=dotted];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_74  [key=2, style=dotted];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_74  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_74  [key=2, style=dotted];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_87  [key=2, style=dotted];
m16_30 -> m16_35  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m16_30 -> m16_41  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m16_30 -> m16_44  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m16_30 -> m16_65  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_88  [key=2, style=dotted];
m16_31 -> m16_33  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m16_31 -> m16_47  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m16_31 -> m16_49  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m16_31 -> m16_56  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_84  [key=2, style=dotted];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_89  [key=2, style=dotted];
m16_39 -> m16_84  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_90  [key=2, style=dotted];
m16_44 -> m16_84  [key=2, style=dotted];
m16_27 -> m16_28  [key=0, style=solid];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_54  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m16_28 -> m16_58  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m16_28 -> m16_60  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_78  [key=2, style=dotted];
m16_29 -> m16_31  [color=darkseagreen4, key=1, label=connection, style=dashed];
m16_29 -> m16_33  [color=darkseagreen4, key=1, label=connection, style=dashed];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_62  [key=0, style=solid];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_94  [key=2, style=dotted];
m16_58 -> n7  [key=2, style=dotted];
m16_58 -> m16_84  [key=2, style=dotted];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_84  [key=2, style=dotted];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_88  [key=2, style=dotted];
m16_33 -> m16_54  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m16_33 -> m16_58  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m16_33 -> m16_60  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_84  [key=2, style=dotted];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_43  [key=0, style=solid];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_96  [key=2, style=dotted];
m16_65 -> m16_84  [key=2, style=dotted];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_34  [key=0, style=solid];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_51  [key=0, style=solid];
m16_47 -> m16_91  [key=2, style=dotted];
m16_47 -> m16_92  [key=2, style=dotted];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_84  [key=2, style=dotted];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_93  [key=2, style=dotted];
m16_56 -> m16_84  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_74  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_74  [key=2, style=dotted];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_74  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_74  [key=2, style=dotted];
m16_42 -> m16_67  [key=0, style=solid];
m16_42 -> m16_74  [key=2, style=dotted];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_74  [key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_74  [key=2, style=dotted];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_74  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_74  [key=2, style=dotted];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_74  [key=2, style=dotted];
m16_50 -> m16_52  [key=0, style=solid];
m16_50 -> m16_74  [key=2, style=dotted];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_74  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_74  [key=2, style=dotted];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_74  [key=2, style=dotted];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_74  [key=2, style=dotted];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_74  [key=2, style=dotted];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_74  [key=2, style=dotted];
m16_61 -> m16_63  [key=0, style=solid];
m16_61 -> m16_74  [key=2, style=dotted];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_74  [key=2, style=dotted];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_74  [key=2, style=dotted];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_74  [key=2, style=dotted];
m16_67 -> m16_25  [key=0, style=solid];
m16_67 -> m16_74  [key=2, style=dotted];
m16_70 -> m16_72  [key=0, style=solid];
m16_70 -> m16_74  [key=2, style=dotted];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_74  [key=2, style=dotted];
m16_73 -> m16_0  [color=blue, key=0, style=bold];
m16_98 -> m16_1  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_2  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_4  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_5  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_8  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_14  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_15  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_16  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_18  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_19  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_20  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_21  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_22  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_23  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_24  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_29  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_34  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_35  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_36  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_37  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_38  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_39  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_40  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_42  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_43  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_44  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_45  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_46  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_48  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_49  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_50  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_51  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_52  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_53  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_55  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_56  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_57  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_58  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_59  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_60  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_61  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_62  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_63  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_64  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_65  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_66  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_67  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_68  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_69  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_70  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_71  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m16_98 -> m16_72  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m19_0 -> m19_1  [color=green, key=0, style=solid];
m19_1 -> m19_2  [color=green, key=0, style=solid];
m19_1 -> m19_4  [color=green, key=2, style=dotted];
m19_2 -> m19_3  [color=green, key=0, style=solid];
m19_2 -> m19_5  [color=green, key=2, style=dotted];
m19_3 -> m19_0  [color=blue, key=0, style=bold];
m19_32 -> m19_33  [color=green, key=0, style=solid];
m19_33 -> m19_34  [color=green, key=0, style=solid];
m19_33 -> m19_36  [color=green, key=2, style=dotted];
m19_34 -> m19_35  [color=green, key=0, style=solid];
m19_34 -> m19_37  [color=green, key=2, style=dotted];
m19_34 -> d29  [color=green, key=2, style=dotted];
m19_35 -> m19_32  [color=blue, key=0, style=bold];
m19_43 -> m19_44  [color=green, key=0, style=solid];
m19_44 -> m19_45  [color=green, key=0, style=solid];
m19_44 -> m19_47  [color=green, key=2, style=dotted];
m19_44 -> m19_5  [color=green, key=2, style=dotted];
m19_45 -> m19_46  [color=green, key=0, style=solid];
m19_45 -> m19_47  [color=green, key=2, style=dotted];
m19_45 -> m19_5  [color=green, key=2, style=dotted];
m19_46 -> m19_43  [color=blue, key=0, style=bold];
m19_22 -> m19_23  [color=green, key=0, style=solid];
m19_23 -> m19_24  [color=green, key=0, style=solid];
m19_23 -> m19_26  [color=green, key=2, style=dotted];
m19_24 -> m19_25  [color=green, key=0, style=solid];
m19_24 -> d29  [color=green, key=2, style=dotted];
m19_25 -> m19_22  [color=blue, key=0, style=bold];
m19_27 -> m19_28  [color=green, key=0, style=solid];
m19_28 -> m19_29  [color=green, key=0, style=solid];
m19_28 -> m19_31  [color=green, key=2, style=dotted];
m19_29 -> m19_30  [color=green, key=0, style=solid];
m19_29 -> d29  [color=green, key=2, style=dotted];
m19_30 -> m19_27  [color=blue, key=0, style=bold];
m19_18 -> m19_19  [color=green, key=0, style=solid];
m19_19 -> m19_20  [color=green, key=0, style=solid];
m19_19 -> m19_17  [color=green, key=2, style=dotted];
m19_20 -> m19_21  [color=green, key=0, style=solid];
m19_20 -> d29  [color=green, key=2, style=dotted];
m19_21 -> m19_18  [color=blue, key=0, style=bold];
m19_11 -> m19_12  [color=green, key=0, style=solid];
m19_12 -> m19_13  [color=green, key=0, style=solid];
m19_12 -> m19_17  [color=green, key=2, style=dotted];
m19_12 -> m19_14  [color=green, key=1, label=stringResult, style=dashed];
m19_13 -> m19_14  [color=green, key=0, style=solid];
m19_13 -> m19_17  [color=green, key=2, style=dotted];
m19_13 -> m19_15  [color=green, key=1, label=intResult, style=dashed];
m19_14 -> m19_15  [color=green, key=0, style=solid];
m19_14 -> m19_5  [color=green, key=2, style=dotted];
m19_15 -> m19_16  [color=green, key=0, style=solid];
m19_15 -> d29  [color=green, key=2, style=dotted];
m19_16 -> m19_11  [color=blue, key=0, style=bold];
m19_6 -> m19_7  [color=green, key=0, style=solid];
m19_7 -> m19_8  [color=green, key=0, style=solid];
m19_7 -> m19_4  [color=green, key=2, style=dotted];
m19_8 -> m19_9  [color=green, key=0, style=solid];
m19_8 -> d29  [color=green, key=2, style=dotted];
m19_9 -> m19_6  [color=blue, key=0, style=bold];
m19_38 -> m19_39  [color=green, key=0, style=solid];
m19_39 -> m19_40  [color=green, key=0, style=solid];
m19_39 -> m19_37  [color=green, key=2, style=dotted];
m19_39 -> m19_42  [color=green, key=2, style=dotted];
m19_40 -> m19_41  [color=green, key=0, style=solid];
m19_40 -> d29  [color=green, key=2, style=dotted];
m19_41 -> m19_38  [color=blue, key=0, style=bold];
m19_48 -> m19_49  [color=green, key=0, style=solid];
m19_49 -> m19_50  [color=green, key=0, style=solid];
m19_49 -> m19_37  [color=green, key=2, style=dotted];
m19_49 -> m19_47  [color=green, key=2, style=dotted];
m19_50 -> m19_51  [color=green, key=0, style=solid];
m19_50 -> d29  [color=green, key=2, style=dotted];
m19_51 -> m19_48  [color=blue, key=0, style=bold];
m19_52 -> m19_23  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m19_52 -> m19_24  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m19_52 -> m19_28  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m19_52 -> m19_29  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m19_52 -> m19_33  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m19_52 -> m19_34  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m19_52 -> m19_39  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m19_52 -> m19_40  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m19_52 -> m19_49  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m19_52 -> m19_50  [color=green, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_8  [key=2, style=dotted];
m20_4 -> m20_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_5 -> m20_6  [color=green, key=0, style=solid];
m20_5 -> m20_7  [key=2, style=dotted];
m20_5 -> m20_8  [key=2, style=dotted];
m20_5 -> m20_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_6 -> m20_4  [color=blue, key=0, style=bold];
m20_6 -> m20_7  [color=green, key=0, style=solid];
m20_6 -> m20_8  [color=green, key=2, style=dotted];
m20_6 -> m20_28  [color=green, key=1, label="lambda expression", style=dashed];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [color=blue, key=0, style=bold];
m20_1 -> m20_8  [key=2, style=dotted];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_8 -> m20_9  [color=red, key=0, style=solid];
m20_9 -> m20_10  [color=red, key=0, style=solid];
m20_9 -> m20_7  [color=red, key=2, style=dotted];
m20_10 -> m20_8  [color=blue, key=0, style=bold];
m20_10 -> m20_12  [key=2, style=dotted];
m20_10 -> m20_14  [key=2, style=dotted];
m20_10 -> m20_11  [key=0, style=solid];
m20_10 -> m20_13  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_28 -> m20_29  [color=green, key=0, style=solid];
m20_29 -> m20_30  [color=green, key=0, style=solid];
m20_29 -> m20_12  [color=green, key=2, style=dotted];
m20_29 -> m20_18  [color=green, key=2, style=dotted];
m20_29 -> m20_14  [color=green, key=2, style=dotted];
m20_30 -> m20_28  [color=blue, key=0, style=bold];
m20_25 -> m20_26  [key=0, style=solid];
m20_16 -> m20_12  [key=2, style=dotted];
m20_16 -> m20_18  [key=2, style=dotted];
m20_16 -> m20_14  [key=2, style=dotted];
m20_16 -> m20_17  [key=0, style=solid];
m20_20 -> m20_12  [key=2, style=dotted];
m20_20 -> m20_18  [key=2, style=dotted];
m20_20 -> m20_14  [key=2, style=dotted];
m20_20 -> m20_21  [key=0, style=solid];
m20_23 -> m20_12  [key=2, style=dotted];
m20_23 -> m20_18  [key=2, style=dotted];
m20_23 -> m20_14  [key=2, style=dotted];
m20_23 -> m20_24  [key=0, style=solid];
m20_26 -> m20_12  [key=2, style=dotted];
m20_26 -> m20_18  [key=2, style=dotted];
m20_26 -> m20_14  [key=2, style=dotted];
m20_26 -> m20_27  [key=0, style=solid];
m20_22 -> m20_23  [key=0, style=solid];
m20_27 -> m20_25  [color=blue, key=0, style=bold];
m20_15 -> m20_16  [key=0, style=solid];
m20_11 -> m20_9  [color=blue, key=0, style=bold];
m20_17 -> m20_15  [color=blue, key=0, style=bold];
m20_21 -> m20_19  [color=blue, key=0, style=bold];
m20_24 -> m20_22  [color=blue, key=0, style=bold];
m20_7 -> m20_0  [color=blue, key=0, style=bold];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_8  [key=2, style=dotted];
m20_2 -> m20_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_3 -> m20_2  [color=blue, key=0, style=bold];
m20_3 -> m20_8  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_4  [key=0, style=solid];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_6  [key=2, style=dotted];
m21_5 -> m21_2  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [color=blue, key=0, style=bold];
m21_7 -> m21_4  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", style=dashed];
m22_18 -> m22_19  [key=0, style=solid];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_13  [key=2, style=dotted];
m22_19 -> m22_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_20 -> m22_18  [color=blue, key=0, style=bold];
m22_315 -> m22_316  [key=0, style=solid];
m22_316 -> m22_317  [key=0, style=solid];
m22_316 -> m22_322  [key=2, style=dotted];
m22_316 -> m22_320  [color=darkseagreen4, key=1, label=exception, style=dashed];
m22_317 -> m22_318  [key=0, style=solid];
m22_317 -> m22_323  [key=2, style=dotted];
m22_317 -> m22_324  [key=2, style=dotted];
m22_317 -> m22_325  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_320 -> m22_321  [key=0, style=solid];
m22_320 -> m22_42  [key=2, style=dotted];
m22_318 -> m22_319  [key=0, style=solid];
m22_318 -> m22_82  [key=2, style=dotted];
m22_318 -> m22_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_318 -> m22_334  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_319 -> m22_320  [key=0, style=solid];
m22_319 -> m22_13  [key=2, style=dotted];
m22_319 -> m22_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_321 -> m22_315  [color=blue, key=0, style=bold];
m22_336 -> m22_337  [key=0, style=solid];
m22_337 -> m22_338  [key=0, style=solid];
m22_337 -> m22_323  [key=2, style=dotted];
m22_337 -> d11  [key=2, style=dotted];
m22_337 -> m22_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_338 -> m22_339  [key=0, style=solid];
m22_338 -> m22_82  [key=2, style=dotted];
m22_338 -> m22_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_338 -> m22_350  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_339 -> m22_340  [key=0, style=solid];
m22_339 -> m22_13  [key=2, style=dotted];
m22_339 -> m22_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_340 -> m22_341  [key=0, style=solid];
m22_340 -> m22_13  [key=2, style=dotted];
m22_341 -> m22_336  [color=blue, key=0, style=bold];
m22_361 -> m22_362  [key=0, style=solid];
m22_362 -> m22_363  [key=0, style=solid];
m22_363 -> m22_364  [key=0, style=solid];
m22_363 -> m22_144  [key=2, style=dotted];
m22_363 -> m22_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_363 -> m22_374  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_364 -> m22_365  [key=0, style=solid];
m22_364 -> m22_13  [key=2, style=dotted];
m22_364 -> m22_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_364 -> m22_366  [color=darkseagreen4, key=1, label=exception, style=dashed];
m22_365 -> m22_366  [key=0, style=solid];
m22_365 -> m22_44  [key=2, style=dotted];
m22_366 -> m22_367  [key=0, style=solid];
m22_366 -> m22_368  [key=2, style=dotted];
m22_367 -> m22_361  [color=blue, key=0, style=bold];
m22_214 -> m22_457  [key=0, style=solid];
m22_457 -> m22_214  [color=blue, key=0, style=bold];
m22_385 -> m22_485  [key=0, style=solid];
m22_485 -> m22_486  [key=0, style=solid];
m22_485 -> m22_487  [key=2, style=dotted];
m22_486 -> m22_385  [color=blue, key=0, style=bold];
m22_101 -> m22_102  [key=0, style=solid];
m22_102 -> m22_103  [key=0, style=solid];
m22_102 -> m22_107  [key=2, style=dotted];
m22_102 -> m22_104  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_102 -> m22_110  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_103 -> m22_104  [key=0, style=solid];
m22_103 -> m22_108  [key=2, style=dotted];
m22_103 -> m22_105  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_104 -> m22_105  [key=0, style=solid];
m22_104 -> m22_82  [key=2, style=dotted];
m22_104 -> m22_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_105 -> m22_106  [key=0, style=solid];
m22_105 -> m22_64  [key=2, style=dotted];
m22_106 -> m22_101  [color=blue, key=0, style=bold];
m22_480 -> m22_481  [key=0, style=solid];
m22_481 -> m22_480  [color=blue, key=0, style=bold];
m22_137 -> m22_138  [key=0, style=solid];
m22_138 -> m22_139  [key=0, style=solid];
m22_138 -> m22_13  [key=2, style=dotted];
m22_138 -> m22_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_139 -> m22_140  [key=0, style=solid];
m22_139 -> m22_64  [key=2, style=dotted];
m22_140 -> m22_137  [color=blue, key=0, style=bold];
m22_352 -> m22_353  [key=0, style=solid];
m22_353 -> m22_354  [key=0, style=solid];
m22_353 -> m22_355  [color=darkseagreen4, key=1, label=type, style=dashed];
m22_353 -> m22_358  [color=darkseagreen4, key=1, label=type, style=dashed];
m22_354 -> m22_355  [key=0, style=solid];
m22_354 -> m22_7  [key=2, style=dotted];
m22_354 -> m22_358  [color=darkseagreen4, key=1, label=method, style=dashed];
m22_355 -> m22_356  [key=0, style=solid];
m22_355 -> m22_13  [key=2, style=dotted];
m22_355 -> m22_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_356 -> m22_352  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_7  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_8  [key=2, style=dotted];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_9  [key=2, style=dotted];
m22_6 -> m22_0  [color=blue, key=0, style=bold];
m22_413 -> m22_500  [key=0, style=solid];
m22_500 -> m22_501  [key=0, style=solid];
m22_501 -> m22_413  [color=blue, key=0, style=bold];
m22_287 -> m22_288  [key=0, style=solid];
m22_288 -> m22_289  [key=0, style=solid];
m22_289 -> m22_290  [key=0, style=solid];
m22_289 -> m22_108  [key=2, style=dotted];
m22_289 -> m22_292  [color=darkseagreen4, key=1, label=convertedDate, style=dashed];
m22_290 -> m22_291  [key=0, style=solid];
m22_290 -> m22_292  [color=darkseagreen4, key=1, label=type, style=dashed];
m22_292 -> m22_293  [key=0, style=solid];
m22_292 -> m22_17  [key=2, style=dotted];
m22_291 -> m22_292  [key=0, style=solid];
m22_291 -> m22_7  [key=2, style=dotted];
m22_293 -> m22_294  [key=0, style=solid];
m22_293 -> m22_227  [key=2, style=dotted];
m22_294 -> m22_295  [key=0, style=solid];
m22_294 -> m22_44  [key=2, style=dotted];
m22_295 -> m22_287  [color=blue, key=0, style=bold];
m22_193 -> m22_458  [key=0, style=solid];
m22_193 -> m22_184  [color=darkorchid, key=3, label="Parameter variable string a", style=bold];
m22_458 -> m22_193  [color=blue, key=0, style=bold];
m22_162 -> m22_495  [key=0, style=solid];
m22_495 -> m22_496  [key=0, style=solid];
m22_496 -> m22_162  [color=blue, key=0, style=bold];
m22_453 -> m22_507  [key=0, style=solid];
m22_507 -> m22_453  [color=blue, key=0, style=bold];
m22_266 -> m22_267  [key=0, style=solid];
m22_267 -> m22_268  [key=0, style=solid];
m22_268 -> m22_269  [key=0, style=solid];
m22_268 -> m22_82  [key=2, style=dotted];
m22_268 -> m22_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_269 -> m22_270  [key=0, style=solid];
m22_269 -> m22_227  [key=2, style=dotted];
m22_270 -> m22_271  [key=0, style=solid];
m22_270 -> m22_44  [key=2, style=dotted];
m22_271 -> m22_266  [color=blue, key=0, style=bold];
m22_376 -> m22_377  [key=0, style=solid];
m22_377 -> m22_378  [key=0, style=solid];
m22_377 -> m22_82  [key=2, style=dotted];
m22_377 -> m22_382  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_377 -> m22_387  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_378 -> m22_379  [key=0, style=solid];
m22_378 -> m22_13  [key=2, style=dotted];
m22_378 -> m22_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_378 -> m22_380  [color=darkseagreen4, key=1, label=thrownException, style=dashed];
m22_379 -> m22_380  [key=0, style=solid];
m22_379 -> m22_13  [key=2, style=dotted];
m22_380 -> m22_381  [key=0, style=solid];
m22_380 -> m22_64  [key=2, style=dotted];
m22_381 -> m22_376  [color=blue, key=0, style=bold];
m22_154 -> m22_155  [key=0, style=solid];
m22_155 -> m22_156  [key=0, style=solid];
m22_155 -> m22_144  [key=2, style=dotted];
m22_155 -> m22_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_155 -> m22_157  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_156 -> m22_157  [key=0, style=solid];
m22_156 -> m22_64  [key=2, style=dotted];
m22_157 -> m22_158  [key=0, style=solid];
m22_157 -> m22_64  [key=2, style=dotted];
m22_158 -> m22_154  [color=blue, key=0, style=bold];
m22_51 -> m22_52  [key=0, style=solid];
m22_52 -> m22_53  [key=0, style=solid];
m22_52 -> m22_13  [key=2, style=dotted];
m22_52 -> m22_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_55  [key=2, style=dotted];
m22_54 -> m22_51  [color=blue, key=0, style=bold];
m22_173 -> m22_174  [key=0, style=solid];
m22_174 -> m22_175  [key=0, style=solid];
m22_174 -> m22_178  [color=darkseagreen4, key=1, label=instance, style=dashed];
m22_174 -> m22_181  [color=darkseagreen4, key=1, label=instance, style=dashed];
m22_174 -> m22_76  [color=darkorchid, key=3, label="Local variable System.IDisposable instance", style=bold];
m22_175 -> m22_176  [key=0, style=solid];
m22_175 -> m22_13  [key=2, style=dotted];
m22_175 -> m22_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_176 -> m22_173  [color=blue, key=0, style=bold];
m22_113 -> m22_114  [key=0, style=solid];
m22_114 -> m22_115  [key=0, style=solid];
m22_114 -> m22_82  [key=2, style=dotted];
m22_114 -> m22_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_114 -> m22_116  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_115 -> m22_116  [key=0, style=solid];
m22_115 -> m22_64  [key=2, style=dotted];
m22_116 -> m22_117  [key=0, style=solid];
m22_116 -> m22_64  [key=2, style=dotted];
m22_117 -> m22_113  [color=blue, key=0, style=bold];
m22_121 -> m22_472  [key=0, style=solid];
m22_121 -> m22_473  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_121 -> m22_474  [color=darkseagreen4, key=1, label=int, style=dashed];
m22_121 -> m22_114  [color=darkorchid, key=3, label="Parameter variable int intArg", style=bold];
m22_121 -> m22_268  [color=darkorchid, key=3, label="Parameter variable int intArg", style=bold];
m22_472 -> m22_473  [key=0, style=solid];
m22_473 -> m22_474  [key=0, style=solid];
m22_473 -> m22_64  [key=2, style=dotted];
m22_474 -> m22_475  [key=0, style=solid];
m22_474 -> m22_64  [key=2, style=dotted];
m22_475 -> m22_121  [color=blue, key=0, style=bold];
m22_75 -> m22_76  [key=0, style=solid];
m22_76 -> m22_77  [key=0, style=solid];
m22_76 -> m22_13  [key=2, style=dotted];
m22_76 -> m22_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_77 -> m22_78  [key=0, style=solid];
m22_77 -> m22_64  [key=2, style=dotted];
m22_78 -> m22_75  [color=blue, key=0, style=bold];
m22_68 -> m22_69  [key=0, style=solid];
m22_69 -> m22_70  [key=0, style=solid];
m22_69 -> m22_7  [key=2, style=dotted];
m22_69 -> m22_73  [color=darkseagreen4, key=1, label=method, style=dashed];
m22_70 -> m22_71  [key=0, style=solid];
m22_70 -> m22_13  [key=2, style=dotted];
m22_70 -> m22_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_71 -> m22_68  [color=blue, key=0, style=bold];
m22_204 -> m22_459  [key=0, style=solid];
m22_204 -> m22_195  [color=darkorchid, key=3, label="Parameter variable string a", style=bold];
m22_459 -> m22_460  [key=0, style=solid];
m22_460 -> m22_204  [color=blue, key=0, style=bold];
m22_112 -> m22_482  [key=0, style=solid];
m22_112 -> m22_483  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m22_112 -> m22_102  [color=darkorchid, key=3, label="Parameter variable System.DateTime argument", style=bold];
m22_112 -> m22_123  [color=darkorchid, key=3, label="Parameter variable System.DateTime argument", style=bold];
m22_482 -> m22_483  [key=0, style=solid];
m22_483 -> m22_484  [key=0, style=solid];
m22_483 -> m22_64  [key=2, style=dotted];
m22_484 -> m22_112  [color=blue, key=0, style=bold];
m22_36 -> m22_37  [key=0, style=solid];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_17  [key=2, style=dotted];
m22_37 -> m22_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_37 -> m22_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_38 -> m22_39  [key=0, style=solid];
m22_38 -> m22_42  [key=2, style=dotted];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_42  [key=2, style=dotted];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_43  [key=2, style=dotted];
m22_40 -> m22_44  [key=2, style=dotted];
m22_41 -> m22_36  [color=blue, key=0, style=bold];
m22_332 -> m22_463  [key=0, style=solid];
m22_463 -> m22_464  [key=0, style=solid];
m22_464 -> m22_332  [color=blue, key=0, style=bold];
m22_372 -> m22_502  [key=0, style=solid];
m22_502 -> m22_503  [key=0, style=solid];
m22_503 -> m22_372  [color=blue, key=0, style=bold];
m22_488 -> m22_489  [key=0, style=solid];
m22_489 -> m22_488  [color=blue, key=0, style=bold];
m22_239 -> m22_240  [key=0, style=solid];
m22_240 -> m22_241  [key=0, style=solid];
m22_241 -> m22_242  [key=0, style=solid];
m22_241 -> m22_82  [key=2, style=dotted];
m22_241 -> m22_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_242 -> m22_243  [key=0, style=solid];
m22_242 -> m22_227  [key=2, style=dotted];
m22_243 -> m22_244  [key=0, style=solid];
m22_243 -> m22_44  [key=2, style=dotted];
m22_244 -> m22_239  [color=blue, key=0, style=bold];
m22_305 -> m22_306  [key=0, style=solid];
m22_306 -> m22_307  [key=0, style=solid];
m22_307 -> m22_308  [key=0, style=solid];
m22_307 -> m22_82  [key=2, style=dotted];
m22_307 -> m22_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_308 -> m22_309  [key=0, style=solid];
m22_308 -> m22_227  [key=2, style=dotted];
m22_309 -> m22_310  [key=0, style=solid];
m22_309 -> m22_44  [key=2, style=dotted];
m22_310 -> m22_305  [color=blue, key=0, style=bold];
m22_454 -> m22_455  [key=0, style=solid];
m22_14 -> m22_15  [key=0, style=solid];
m22_15 -> m22_16  [key=0, style=solid];
m22_15 -> m22_17  [key=2, style=dotted];
m22_16 -> m22_14  [color=blue, key=0, style=bold];
m22_21 -> m22_22  [key=0, style=solid];
m22_22 -> m22_23  [key=0, style=solid];
m22_22 -> m22_17  [key=2, style=dotted];
m22_23 -> m22_21  [color=blue, key=0, style=bold];
m22_27 -> m22_28  [key=0, style=solid];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_17  [key=2, style=dotted];
m22_29 -> m22_27  [color=blue, key=0, style=bold];
m22_33 -> m22_34  [key=0, style=solid];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_17  [key=2, style=dotted];
m22_35 -> m22_33  [color=blue, key=0, style=bold];
m22_56 -> m22_57  [key=0, style=solid];
m22_57 -> m22_58  [key=0, style=solid];
m22_57 -> m22_17  [key=2, style=dotted];
m22_58 -> m22_56  [color=blue, key=0, style=bold];
m22_66 -> m22_67  [key=0, style=solid];
m22_66 -> m22_17  [key=2, style=dotted];
m22_65 -> m22_66  [key=0, style=solid];
m22_67 -> m22_65  [color=blue, key=0, style=bold];
m22_73 -> m22_74  [key=0, style=solid];
m22_73 -> m22_17  [key=2, style=dotted];
m22_72 -> m22_73  [key=0, style=solid];
m22_74 -> m22_72  [color=blue, key=0, style=bold];
m22_79 -> m22_80  [key=0, style=solid];
m22_80 -> m22_81  [key=0, style=solid];
m22_80 -> m22_82  [key=2, style=dotted];
m22_81 -> m22_79  [color=blue, key=0, style=bold];
m22_86 -> m22_87  [key=0, style=solid];
m22_87 -> m22_88  [key=0, style=solid];
m22_87 -> m22_82  [key=2, style=dotted];
m22_87 -> m22_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_88 -> m22_86  [color=blue, key=0, style=bold];
m22_89 -> m22_90  [key=0, style=solid];
m22_90 -> m22_91  [key=0, style=solid];
m22_90 -> m22_0  [key=2, style=dotted];
m22_91 -> m22_89  [color=blue, key=0, style=bold];
m22_97 -> m22_98  [key=0, style=solid];
m22_98 -> m22_99  [key=0, style=solid];
m22_98 -> m22_100  [key=2, style=dotted];
m22_99 -> m22_97  [color=blue, key=0, style=bold];
m22_110 -> m22_111  [key=0, style=solid];
m22_110 -> m22_112  [key=2, style=dotted];
m22_109 -> m22_110  [key=0, style=solid];
m22_111 -> m22_109  [color=blue, key=0, style=bold];
m22_118 -> m22_119  [key=0, style=solid];
m22_119 -> m22_120  [key=0, style=solid];
m22_119 -> m22_121  [key=2, style=dotted];
m22_120 -> m22_118  [color=blue, key=0, style=bold];
m22_132 -> m22_133  [key=0, style=solid];
m22_132 -> m22_112  [key=2, style=dotted];
m22_135 -> m22_136  [key=0, style=solid];
m22_135 -> m22_112  [key=2, style=dotted];
m22_131 -> m22_132  [key=0, style=solid];
m22_134 -> m22_135  [key=0, style=solid];
m22_133 -> m22_131  [color=blue, key=0, style=bold];
m22_136 -> m22_134  [color=blue, key=0, style=bold];
m22_141 -> m22_142  [key=0, style=solid];
m22_142 -> m22_143  [key=0, style=solid];
m22_142 -> m22_144  [key=2, style=dotted];
m22_143 -> m22_141  [color=blue, key=0, style=bold];
m22_148 -> m22_149  [key=0, style=solid];
m22_149 -> m22_150  [key=0, style=solid];
m22_149 -> m22_144  [key=2, style=dotted];
m22_149 -> m22_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_150 -> m22_148  [color=blue, key=0, style=bold];
m22_151 -> m22_152  [key=0, style=solid];
m22_152 -> m22_153  [key=0, style=solid];
m22_152 -> m22_0  [key=2, style=dotted];
m22_153 -> m22_151  [color=blue, key=0, style=bold];
m22_159 -> m22_160  [key=0, style=solid];
m22_160 -> m22_161  [key=0, style=solid];
m22_160 -> m22_162  [key=2, style=dotted];
m22_161 -> m22_159  [color=blue, key=0, style=bold];
m22_170 -> m22_171  [key=0, style=solid];
m22_170 -> m22_172  [key=2, style=dotted];
m22_169 -> m22_170  [key=0, style=solid];
m22_171 -> m22_169  [color=blue, key=0, style=bold];
m22_178 -> m22_179  [key=0, style=solid];
m22_178 -> m22_82  [key=2, style=dotted];
m22_178 -> m22_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_181 -> m22_182  [key=0, style=solid];
m22_181 -> m22_172  [key=2, style=dotted];
m22_177 -> m22_178  [key=0, style=solid];
m22_179 -> m22_177  [color=blue, key=0, style=bold];
m22_180 -> m22_181  [key=0, style=solid];
m22_182 -> m22_180  [color=blue, key=0, style=bold];
m22_187 -> m22_188  [key=0, style=solid];
m22_188 -> m22_189  [key=0, style=solid];
m22_188 -> m22_82  [key=2, style=dotted];
m22_188 -> m22_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_188 -> m22_191  [color=darkseagreen4, key=1, label=test, style=dashed];
m22_189 -> m22_187  [color=blue, key=0, style=bold];
m22_190 -> m22_191  [key=0, style=solid];
m22_191 -> m22_192  [key=0, style=solid];
m22_191 -> m22_193  [key=2, style=dotted];
m22_191 -> m22_191  [color=darkseagreen4, key=1, label=test, style=dashed];
m22_192 -> m22_190  [color=blue, key=0, style=bold];
m22_198 -> m22_199  [key=0, style=solid];
m22_199 -> m22_200  [key=0, style=solid];
m22_199 -> m22_82  [key=2, style=dotted];
m22_199 -> m22_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_200 -> m22_198  [color=blue, key=0, style=bold];
m22_201 -> m22_202  [key=0, style=solid];
m22_202 -> m22_203  [key=0, style=solid];
m22_202 -> m22_204  [key=2, style=dotted];
m22_203 -> m22_201  [color=blue, key=0, style=bold];
m22_208 -> m22_209  [key=0, style=solid];
m22_209 -> m22_210  [key=0, style=solid];
m22_209 -> m22_82  [key=2, style=dotted];
m22_209 -> m22_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_210 -> m22_208  [color=blue, key=0, style=bold];
m22_211 -> m22_212  [key=0, style=solid];
m22_212 -> m22_213  [key=0, style=solid];
m22_212 -> m22_214  [key=2, style=dotted];
m22_213 -> m22_211  [color=blue, key=0, style=bold];
m22_220 -> m22_221  [key=0, style=solid];
m22_225 -> m22_226  [key=0, style=solid];
m22_225 -> m22_227  [key=2, style=dotted];
m22_224 -> m22_225  [key=0, style=solid];
m22_221 -> m22_222  [key=0, style=solid];
m22_221 -> m22_223  [key=2, style=dotted];
m22_222 -> m22_220  [color=blue, key=0, style=bold];
m22_226 -> m22_224  [color=blue, key=0, style=bold];
m22_233 -> m22_234  [key=0, style=solid];
m22_237 -> m22_238  [key=0, style=solid];
m22_237 -> m22_227  [key=2, style=dotted];
m22_236 -> m22_237  [key=0, style=solid];
m22_234 -> m22_235  [key=0, style=solid];
m22_234 -> m22_223  [key=2, style=dotted];
m22_235 -> m22_233  [color=blue, key=0, style=bold];
m22_238 -> m22_236  [color=blue, key=0, style=bold];
m22_245 -> m22_246  [key=0, style=solid];
m22_246 -> m22_247  [key=0, style=solid];
m22_246 -> m22_223  [key=2, style=dotted];
m22_247 -> m22_245  [color=blue, key=0, style=bold];
m22_254 -> m22_255  [key=0, style=solid];
m22_255 -> m22_256  [key=0, style=solid];
m22_255 -> m22_162  [key=2, style=dotted];
m22_256 -> m22_254  [color=blue, key=0, style=bold];
m22_263 -> m22_264  [key=0, style=solid];
m22_264 -> m22_265  [key=0, style=solid];
m22_264 -> m22_162  [key=2, style=dotted];
m22_265 -> m22_263  [color=blue, key=0, style=bold];
m22_272 -> m22_273  [key=0, style=solid];
m22_273 -> m22_274  [key=0, style=solid];
m22_273 -> m22_121  [key=2, style=dotted];
m22_274 -> m22_272  [color=blue, key=0, style=bold];
m22_302 -> m22_303  [key=0, style=solid];
m22_303 -> m22_304  [key=0, style=solid];
m22_303 -> m22_112  [key=2, style=dotted];
m22_304 -> m22_302  [color=blue, key=0, style=bold];
m22_311 -> m22_312  [key=0, style=solid];
m22_312 -> m22_313  [key=0, style=solid];
m22_312 -> m22_314  [key=2, style=dotted];
m22_313 -> m22_311  [color=blue, key=0, style=bold];
m22_325 -> m22_326  [key=0, style=solid];
m22_329 -> m22_330  [key=0, style=solid];
m22_334 -> m22_335  [key=0, style=solid];
m22_334 -> m22_227  [key=2, style=dotted];
m22_333 -> m22_334  [key=0, style=solid];
m22_326 -> m22_327  [key=0, style=solid];
m22_326 -> m22_13  [key=2, style=dotted];
m22_326 -> m22_328  [key=2, style=dotted];
m22_327 -> m22_325  [color=blue, key=0, style=bold];
m22_330 -> m22_331  [key=0, style=solid];
m22_330 -> m22_332  [key=2, style=dotted];
m22_331 -> m22_329  [color=blue, key=0, style=bold];
m22_335 -> m22_333  [color=blue, key=0, style=bold];
m22_343 -> m22_344  [key=0, style=solid];
m22_346 -> m22_347  [key=0, style=solid];
m22_350 -> m22_351  [key=0, style=solid];
m22_350 -> m22_227  [key=2, style=dotted];
m22_349 -> m22_350  [key=0, style=solid];
m22_344 -> m22_345  [key=0, style=solid];
m22_344 -> m22_13  [key=2, style=dotted];
m22_344 -> m22_328  [key=2, style=dotted];
m22_345 -> m22_343  [color=blue, key=0, style=bold];
m22_347 -> m22_348  [key=0, style=solid];
m22_347 -> m22_332  [key=2, style=dotted];
m22_348 -> m22_346  [color=blue, key=0, style=bold];
m22_351 -> m22_349  [color=blue, key=0, style=bold];
m22_358 -> m22_359  [key=0, style=solid];
m22_358 -> m22_17  [key=2, style=dotted];
m22_358 -> m22_360  [key=2, style=dotted];
m22_357 -> m22_358  [key=0, style=solid];
m22_359 -> m22_357  [color=blue, key=0, style=bold];
m22_369 -> m22_370  [key=0, style=solid];
m22_374 -> m22_375  [key=0, style=solid];
m22_374 -> m22_227  [key=2, style=dotted];
m22_373 -> m22_374  [key=0, style=solid];
m22_370 -> m22_371  [key=0, style=solid];
m22_370 -> m22_372  [key=2, style=dotted];
m22_371 -> m22_369  [color=blue, key=0, style=bold];
m22_375 -> m22_373  [color=blue, key=0, style=bold];
m22_382 -> m22_383  [key=0, style=solid];
m22_387 -> m22_388  [key=0, style=solid];
m22_387 -> m22_227  [key=2, style=dotted];
m22_386 -> m22_387  [key=0, style=solid];
m22_383 -> m22_384  [key=0, style=solid];
m22_383 -> m22_385  [key=2, style=dotted];
m22_384 -> m22_382  [color=blue, key=0, style=bold];
m22_388 -> m22_386  [color=blue, key=0, style=bold];
m22_394 -> m22_395  [key=0, style=solid];
m22_403 -> m22_404  [key=0, style=solid];
m22_403 -> m22_227  [key=2, style=dotted];
m22_398 -> m22_399  [key=0, style=solid];
m22_402 -> m22_403  [key=0, style=solid];
m22_395 -> m22_396  [key=0, style=solid];
m22_395 -> m22_397  [key=2, style=dotted];
m22_396 -> m22_394  [color=blue, key=0, style=bold];
m22_399 -> m22_400  [key=0, style=solid];
m22_399 -> m22_401  [key=2, style=dotted];
m22_400 -> m22_398  [color=blue, key=0, style=bold];
m22_404 -> m22_402  [color=blue, key=0, style=bold];
m22_410 -> m22_411  [key=0, style=solid];
m22_411 -> m22_412  [key=0, style=solid];
m22_411 -> m22_413  [key=2, style=dotted];
m22_412 -> m22_410  [color=blue, key=0, style=bold];
m22_425 -> m22_426  [key=0, style=solid];
m22_426 -> m22_427  [key=0, style=solid];
m22_426 -> m22_162  [key=2, style=dotted];
m22_427 -> m22_425  [color=blue, key=0, style=bold];
m22_438 -> m22_439  [key=0, style=solid];
m22_439 -> m22_440  [key=0, style=solid];
m22_439 -> m22_162  [key=2, style=dotted];
m22_440 -> m22_438  [color=blue, key=0, style=bold];
m22_450 -> m22_451  [key=0, style=solid];
m22_451 -> m22_452  [key=0, style=solid];
m22_451 -> m22_453  [key=2, style=dotted];
m22_452 -> m22_450  [color=blue, key=0, style=bold];
m22_455 -> m22_456  [key=0, style=solid];
m22_455 -> m22_453  [key=2, style=dotted];
m22_456 -> m22_454  [color=blue, key=0, style=bold];
m22_183 -> m22_184  [key=0, style=solid];
m22_184 -> m22_185  [key=0, style=solid];
m22_184 -> m22_76  [color=darkorchid, key=3, label="Local variable string test", style=bold];
m22_185 -> m22_186  [key=0, style=solid];
m22_185 -> m22_13  [key=2, style=dotted];
m22_185 -> m22_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_185 -> m22_188  [color=darkseagreen4, key=1, label=test, style=dashed];
m22_186 -> m22_183  [color=blue, key=0, style=bold];
m22_296 -> m22_297  [key=0, style=solid];
m22_297 -> m22_298  [key=0, style=solid];
m22_298 -> m22_299  [key=0, style=solid];
m22_298 -> m22_82  [key=2, style=dotted];
m22_298 -> m22_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_299 -> m22_300  [key=0, style=solid];
m22_299 -> m22_227  [key=2, style=dotted];
m22_300 -> m22_301  [key=0, style=solid];
m22_300 -> m22_44  [key=2, style=dotted];
m22_301 -> m22_296  [color=blue, key=0, style=bold];
m22_223 -> m22_461  [key=0, style=solid];
m22_461 -> m22_462  [key=0, style=solid];
m22_462 -> m22_223  [color=blue, key=0, style=bold];
m22_497 -> m22_498  [key=0, style=solid];
m22_498 -> m22_499  [key=0, style=solid];
m22_499 -> m22_497  [color=blue, key=0, style=bold];
m22_30 -> m22_31  [key=0, style=solid];
m22_31 -> m22_32  [key=0, style=solid];
m22_31 -> m22_13  [key=2, style=dotted];
m22_31 -> m22_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_32 -> m22_30  [color=blue, key=0, style=bold];
m22_10 -> m22_11  [key=0, style=solid];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_13  [key=2, style=dotted];
m22_11 -> m22_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_12 -> m22_10  [color=blue, key=0, style=bold];
m22_92 -> m22_93  [key=0, style=solid];
m22_93 -> m22_94  [key=0, style=solid];
m22_93 -> m22_82  [key=2, style=dotted];
m22_93 -> m22_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_93 -> m22_95  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_94 -> m22_95  [key=0, style=solid];
m22_94 -> m22_64  [key=2, style=dotted];
m22_95 -> m22_96  [key=0, style=solid];
m22_95 -> m22_64  [key=2, style=dotted];
m22_96 -> m22_92  [color=blue, key=0, style=bold];
m22_45 -> m22_46  [key=0, style=solid];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_49  [key=2, style=dotted];
m22_47 -> m22_48  [key=0, style=solid];
m22_47 -> m22_50  [key=2, style=dotted];
m22_48 -> m22_45  [color=blue, key=0, style=bold];
m22_215 -> m22_216  [key=0, style=solid];
m22_216 -> m22_217  [key=0, style=solid];
m22_216 -> m22_82  [key=2, style=dotted];
m22_216 -> m22_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_216 -> m22_225  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_217 -> m22_218  [key=0, style=solid];
m22_217 -> m22_13  [key=2, style=dotted];
m22_217 -> m22_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_218 -> m22_219  [key=0, style=solid];
m22_218 -> m22_64  [key=2, style=dotted];
m22_219 -> m22_215  [color=blue, key=0, style=bold];
m22_414 -> m22_415  [key=0, style=solid];
m22_415 -> m22_416  [key=0, style=solid];
m22_415 -> m22_144  [key=2, style=dotted];
m22_415 -> m22_425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_415 -> m22_417  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_416 -> m22_417  [key=0, style=solid];
m22_416 -> m22_423  [key=2, style=dotted];
m22_416 -> m22_424  [key=2, style=dotted];
m22_416 -> m22_418  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m22_416 -> m22_420  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m22_417 -> m22_418  [key=0, style=solid];
m22_417 -> m22_423  [key=2, style=dotted];
m22_417 -> m22_424  [key=2, style=dotted];
m22_417 -> m22_419  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m22_417 -> m22_421  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m22_418 -> m22_419  [key=0, style=solid];
m22_418 -> m22_64  [key=2, style=dotted];
m22_420 -> m22_421  [key=0, style=solid];
m22_420 -> m22_44  [key=2, style=dotted];
m22_419 -> m22_420  [key=0, style=solid];
m22_419 -> m22_64  [key=2, style=dotted];
m22_421 -> m22_422  [key=0, style=solid];
m22_421 -> m22_44  [key=2, style=dotted];
m22_422 -> m22_414  [color=blue, key=0, style=bold];
m22_504 -> m22_505  [key=0, style=solid];
m22_505 -> m22_506  [key=0, style=solid];
m22_505 -> m22_322  [key=2, style=dotted];
m22_506 -> m22_504  [color=blue, key=0, style=bold];
m22_428 -> m22_429  [key=0, style=solid];
m22_429 -> m22_430  [key=0, style=solid];
m22_429 -> m22_144  [key=2, style=dotted];
m22_429 -> m22_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_429 -> m22_431  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_430 -> m22_431  [key=0, style=solid];
m22_430 -> m22_437  [key=2, style=dotted];
m22_430 -> m22_424  [key=2, style=dotted];
m22_430 -> m22_432  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m22_430 -> m22_434  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m22_431 -> m22_432  [key=0, style=solid];
m22_431 -> m22_437  [key=2, style=dotted];
m22_431 -> m22_424  [key=2, style=dotted];
m22_431 -> m22_433  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m22_431 -> m22_435  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m22_432 -> m22_433  [key=0, style=solid];
m22_432 -> m22_64  [key=2, style=dotted];
m22_434 -> m22_435  [key=0, style=solid];
m22_434 -> m22_44  [key=2, style=dotted];
m22_433 -> m22_434  [key=0, style=solid];
m22_433 -> m22_64  [key=2, style=dotted];
m22_435 -> m22_436  [key=0, style=solid];
m22_435 -> m22_44  [key=2, style=dotted];
m22_436 -> m22_428  [color=blue, key=0, style=bold];
m22_314 -> m22_468  [key=0, style=solid];
m22_314 -> m22_469  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m22_314 -> m22_76  [color=darkorchid, key=3, label="Parameter variable string[] argument", style=bold];
m22_468 -> m22_469  [key=0, style=solid];
m22_469 -> m22_470  [key=0, style=solid];
m22_469 -> m22_471  [key=2, style=dotted];
m22_470 -> m22_314  [color=blue, key=0, style=bold];
m22_83 -> m22_84  [key=0, style=solid];
m22_84 -> m22_85  [key=0, style=solid];
m22_84 -> m22_13  [key=2, style=dotted];
m22_84 -> m22_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_85 -> m22_83  [color=blue, key=0, style=bold];
m22_205 -> m22_206  [key=0, style=solid];
m22_206 -> m22_207  [key=0, style=solid];
m22_206 -> m22_13  [key=2, style=dotted];
m22_206 -> m22_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_207 -> m22_205  [color=blue, key=0, style=bold];
m22_397 -> m22_465  [key=0, style=solid];
m22_465 -> m22_466  [key=0, style=solid];
m22_465 -> m22_467  [key=2, style=dotted];
m22_466 -> m22_397  [color=blue, key=0, style=bold];
m22_228 -> m22_229  [key=0, style=solid];
m22_229 -> m22_230  [key=0, style=solid];
m22_229 -> m22_82  [key=2, style=dotted];
m22_229 -> m22_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_229 -> m22_237  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_230 -> m22_231  [key=0, style=solid];
m22_230 -> m22_13  [key=2, style=dotted];
m22_230 -> m22_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_231 -> m22_232  [key=0, style=solid];
m22_231 -> m22_64  [key=2, style=dotted];
m22_232 -> m22_228  [color=blue, key=0, style=bold];
m22_194 -> m22_195  [key=0, style=solid];
m22_195 -> m22_196  [key=0, style=solid];
m22_196 -> m22_197  [key=0, style=solid];
m22_196 -> m22_13  [key=2, style=dotted];
m22_196 -> m22_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_197 -> m22_194  [color=blue, key=0, style=bold];
m22_248 -> m22_249  [key=0, style=solid];
m22_249 -> m22_250  [key=0, style=solid];
m22_250 -> m22_251  [key=0, style=solid];
m22_250 -> m22_144  [key=2, style=dotted];
m22_250 -> m22_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_251 -> m22_252  [key=0, style=solid];
m22_251 -> m22_227  [key=2, style=dotted];
m22_252 -> m22_253  [key=0, style=solid];
m22_252 -> m22_44  [key=2, style=dotted];
m22_253 -> m22_248  [color=blue, key=0, style=bold];
m22_122 -> m22_123  [key=0, style=solid];
m22_123 -> m22_124  [key=0, style=solid];
m22_123 -> m22_125  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_123 -> m22_132  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_123 -> m22_127  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_123 -> m22_135  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_124 -> m22_125  [key=0, style=solid];
m22_124 -> m22_130  [key=2, style=dotted];
m22_125 -> m22_126  [key=0, style=solid];
m22_125 -> m22_82  [key=2, style=dotted];
m22_125 -> m22_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_125 -> m22_128  [color=darkseagreen4, key=1, label=enJob, style=dashed];
m22_127 -> m22_128  [key=0, style=solid];
m22_127 -> m22_82  [key=2, style=dotted];
m22_127 -> m22_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_126 -> m22_127  [key=0, style=solid];
m22_126 -> m22_130  [key=2, style=dotted];
m22_128 -> m22_129  [key=0, style=solid];
m22_128 -> m22_64  [key=2, style=dotted];
m22_129 -> m22_122  [color=blue, key=0, style=bold];
m22_441 -> m22_442  [key=0, style=solid];
m22_442 -> m22_443  [key=0, style=solid];
m22_442 -> m22_144  [key=2, style=dotted];
m22_442 -> m22_450  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_442 -> m22_444  [color=darkseagreen4, key=1, label=job1, style=dashed];
m22_443 -> m22_444  [key=0, style=solid];
m22_443 -> m22_144  [key=2, style=dotted];
m22_443 -> m22_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_443 -> m22_445  [color=darkseagreen4, key=1, label=job2, style=dashed];
m22_444 -> m22_445  [key=0, style=solid];
m22_444 -> m22_448  [key=2, style=dotted];
m22_444 -> m22_446  [color=darkseagreen4, key=1, label=id1, style=dashed];
m22_445 -> m22_446  [key=0, style=solid];
m22_445 -> m22_448  [key=2, style=dotted];
m22_446 -> m22_447  [key=0, style=solid];
m22_446 -> m22_449  [key=2, style=dotted];
m22_447 -> m22_441  [color=blue, key=0, style=bold];
m22_163 -> m22_164  [key=0, style=solid];
m22_164 -> m22_165  [key=0, style=solid];
m22_164 -> m22_168  [key=2, style=dotted];
m22_164 -> m22_170  [color=darkseagreen4, key=1, label=instance, style=dashed];
m22_165 -> m22_166  [key=0, style=solid];
m22_165 -> m22_82  [key=2, style=dotted];
m22_165 -> m22_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_166 -> m22_167  [key=0, style=solid];
m22_166 -> m22_64  [key=2, style=dotted];
m22_167 -> m22_163  [color=blue, key=0, style=bold];
m22_24 -> m22_25  [key=0, style=solid];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_13  [key=2, style=dotted];
m22_25 -> m22_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_26 -> m22_24  [color=blue, key=0, style=bold];
m22_145 -> m22_146  [key=0, style=solid];
m22_146 -> m22_147  [key=0, style=solid];
m22_146 -> m22_13  [key=2, style=dotted];
m22_146 -> m22_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_147 -> m22_145  [color=blue, key=0, style=bold];
m22_257 -> m22_258  [key=0, style=solid];
m22_258 -> m22_259  [key=0, style=solid];
m22_259 -> m22_260  [key=0, style=solid];
m22_259 -> m22_144  [key=2, style=dotted];
m22_259 -> m22_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_260 -> m22_261  [key=0, style=solid];
m22_260 -> m22_227  [key=2, style=dotted];
m22_261 -> m22_262  [key=0, style=solid];
m22_261 -> m22_44  [key=2, style=dotted];
m22_262 -> m22_257  [color=blue, key=0, style=bold];
m22_275 -> m22_276  [key=0, style=solid];
m22_276 -> m22_277  [key=0, style=solid];
m22_277 -> m22_278  [key=0, style=solid];
m22_277 -> m22_285  [key=2, style=dotted];
m22_278 -> m22_279  [key=0, style=solid];
m22_278 -> m22_286  [key=2, style=dotted];
m22_278 -> m22_281  [color=darkseagreen4, key=1, label=convertedDate, style=dashed];
m22_279 -> m22_280  [key=0, style=solid];
m22_279 -> m22_281  [color=darkseagreen4, key=1, label=type, style=dashed];
m22_281 -> m22_282  [key=0, style=solid];
m22_281 -> m22_17  [key=2, style=dotted];
m22_280 -> m22_281  [key=0, style=solid];
m22_280 -> m22_7  [key=2, style=dotted];
m22_282 -> m22_283  [key=0, style=solid];
m22_282 -> m22_227  [key=2, style=dotted];
m22_283 -> m22_284  [key=0, style=solid];
m22_283 -> m22_44  [key=2, style=dotted];
m22_284 -> m22_275  [color=blue, key=0, style=bold];
m22_476 -> m22_477  [key=0, style=solid];
m22_476 -> m22_478  [color=darkseagreen4, key=1, label=object, style=dashed];
m22_477 -> m22_478  [key=0, style=solid];
m22_478 -> m22_479  [key=0, style=solid];
m22_478 -> m22_64  [key=2, style=dotted];
m22_479 -> m22_476  [color=blue, key=0, style=bold];
m22_389 -> m22_390  [key=0, style=solid];
m22_390 -> m22_391  [key=0, style=solid];
m22_390 -> m22_82  [key=2, style=dotted];
m22_390 -> m22_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_390 -> m22_392  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_390 -> m22_403  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_391 -> m22_392  [key=0, style=solid];
m22_391 -> m22_323  [key=2, style=dotted];
m22_391 -> m22_13  [key=2, style=dotted];
m22_391 -> m22_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_392 -> m22_393  [key=0, style=solid];
m22_392 -> m22_13  [key=2, style=dotted];
m22_392 -> m22_402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_393 -> m22_389  [color=blue, key=0, style=bold];
m22_59 -> m22_60  [key=0, style=solid];
m22_60 -> m22_61  [key=0, style=solid];
m22_60 -> m22_7  [key=2, style=dotted];
m22_60 -> m22_66  [color=darkseagreen4, key=1, label=method, style=dashed];
m22_61 -> m22_62  [key=0, style=solid];
m22_61 -> m22_13  [key=2, style=dotted];
m22_61 -> m22_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_62 -> m22_63  [key=0, style=solid];
m22_62 -> m22_64  [key=2, style=dotted];
m22_63 -> m22_59  [color=blue, key=0, style=bold];
m22_490 -> m22_491  [key=0, style=solid];
m22_491 -> m22_492  [key=0, style=solid];
m22_491 -> m22_494  [key=2, style=dotted];
m22_492 -> m22_493  [key=0, style=solid];
m22_493 -> m22_490  [color=blue, key=0, style=bold];
m22_405 -> m22_406  [key=0, style=solid];
m22_406 -> m22_407  [key=0, style=solid];
m22_406 -> m22_144  [key=2, style=dotted];
m22_406 -> m22_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_407 -> m22_408  [key=0, style=solid];
m22_407 -> m22_227  [key=2, style=dotted];
m22_408 -> m22_409  [key=0, style=solid];
m22_408 -> m22_64  [key=2, style=dotted];
m22_409 -> m22_405  [color=blue, key=0, style=bold];
m22_508 -> m22_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_60  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_61  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_110  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_114  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_119  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_132  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_127  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_217  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_225  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_230  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_237  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_242  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_251  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_260  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_268  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_273  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_269  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_282  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_293  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_298  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_303  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_299  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_308  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_317  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_318  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_330  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_319  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_334  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_337  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_338  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_347  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_339  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_350  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_364  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_374  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_378  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_387  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_391  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_392  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_403  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_508 -> m22_407  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m22_509 -> m22_66  [color=darkseagreen4, key=1, label=method, style=dashed];
m22_510 -> m22_73  [color=darkseagreen4, key=1, label=method, style=dashed];
m22_511 -> m22_110  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_512 -> m22_132  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_512 -> m22_135  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_513 -> m22_170  [color=darkseagreen4, key=1, label=instance, style=dashed];
m22_514 -> m22_178  [color=darkseagreen4, key=1, label=instance, style=dashed];
m22_514 -> m22_181  [color=darkseagreen4, key=1, label=instance, style=dashed];
m22_515 -> m22_188  [color=darkseagreen4, key=1, label=test, style=dashed];
m22_515 -> m22_191  [color=darkseagreen4, key=1, label=test, style=dashed];
m22_516 -> m22_225  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_517 -> m22_237  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_518 -> m22_334  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_519 -> m22_350  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_520 -> m22_358  [color=darkseagreen4, key=1, label=type, style=dashed];
m22_521 -> m22_358  [color=darkseagreen4, key=1, label=method, style=dashed];
m22_522 -> m22_374  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_523 -> m22_387  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_524 -> m22_403  [color=darkseagreen4, key=1, label=job, style=dashed];
m23_3 -> m23_4  [key=0, style=solid];
m23_4 -> m23_5  [key=0, style=solid];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_7  [key=2, style=dotted];
m23_5 -> m23_8  [key=2, style=dotted];
m23_5 -> m23_9  [color=darkorchid, key=3, label="Field variable HangFire.IBackgroundJobClient _client", style=bold];
m23_6 -> m23_3  [color=blue, key=0, style=bold];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_13  [key=2, style=dotted];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_14  [key=2, style=dotted];
m23_12 -> m23_9  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_2 -> m23_0  [color=blue, key=0, style=bold];
m23_15 -> m23_1  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m23_15 -> m23_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m23_15 -> m23_10  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m23_15 -> m23_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m24_44 -> m24_45  [key=0, style=solid];
m24_45 -> m24_46  [key=0, style=solid];
m24_45 -> m24_53  [key=2, style=dotted];
m24_46 -> m24_47  [key=0, style=solid];
m24_46 -> m24_28  [key=2, style=dotted];
m24_47 -> m24_48  [key=0, style=solid];
m24_47 -> m24_54  [key=2, style=dotted];
m24_48 -> m24_49  [key=0, style=solid];
m24_48 -> m24_37  [key=2, style=dotted];
m24_49 -> m24_50  [key=0, style=solid];
m24_49 -> m24_52  [key=0, style=solid];
m24_49 -> m24_55  [key=2, style=dotted];
m24_50 -> m24_51  [key=0, style=solid];
m24_51 -> m24_52  [key=0, style=solid];
m24_51 -> m24_56  [key=2, style=dotted];
m24_52 -> m24_44  [color=blue, key=0, style=bold];
m24_22 -> m24_23  [key=0, style=solid];
m24_23 -> m24_24  [key=0, style=solid];
m24_23 -> m24_26  [key=2, style=dotted];
m24_24 -> m24_25  [key=0, style=solid];
m24_24 -> n29  [key=2, style=dotted];
m24_25 -> m24_22  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m24_0 -> m24_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_0 -> m24_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_0 -> m24_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_3  [key=0, style=solid];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_5  [key=0, style=solid];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_7  [key=0, style=solid];
m24_5 -> m24_14  [key=2, style=dotted];
m24_5 -> m24_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_5 -> m24_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_15  [key=2, style=dotted];
m24_7 -> m24_16  [key=2, style=dotted];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_17  [key=2, style=dotted];
m24_8 -> m24_18  [key=2, style=dotted];
m24_8 -> m24_19  [key=2, style=dotted];
m24_2 -> m24_11  [key=0, style=solid];
m24_2 -> m24_12  [key=2, style=dotted];
m24_4 -> m24_11  [key=0, style=solid];
m24_4 -> m24_13  [key=2, style=dotted];
m24_6 -> m24_11  [key=0, style=solid];
m24_6 -> m24_13  [key=2, style=dotted];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_20  [key=2, style=dotted];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_21  [key=2, style=dotted];
m24_11 -> m24_0  [color=blue, key=0, style=bold];
m24_37 -> m24_38  [key=0, style=solid];
m24_38 -> m24_39  [key=0, style=solid];
m24_38 -> m24_42  [key=2, style=dotted];
m24_39 -> m24_40  [key=0, style=solid];
m24_39 -> m24_42  [key=2, style=dotted];
m24_40 -> m24_41  [key=0, style=solid];
m24_40 -> m24_43  [key=2, style=dotted];
m24_41 -> m24_37  [color=blue, key=0, style=bold];
m24_53 -> m24_57  [key=0, style=solid];
m24_57 -> m24_58  [key=0, style=solid];
m24_57 -> m24_65  [key=2, style=dotted];
m24_57 -> m24_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_57 -> m24_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_57 -> m24_63  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_58 -> m24_59  [key=0, style=solid];
m24_58 -> m24_66  [key=2, style=dotted];
m24_58 -> m24_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_59 -> m24_60  [key=0, style=solid];
m24_59 -> m24_66  [key=2, style=dotted];
m24_59 -> m24_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_62 -> m24_60  [key=0, style=solid];
m24_62 -> m24_66  [key=2, style=dotted];
m24_62 -> m24_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_63 -> m24_64  [key=0, style=solid];
m24_63 -> m24_67  [key=2, style=dotted];
m24_60 -> m24_61  [key=0, style=solid];
m24_60 -> m24_63  [key=0, style=solid];
m24_61 -> m24_62  [key=0, style=solid];
m24_61 -> m24_81  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m24_64 -> m24_53  [color=blue, key=0, style=bold];
m24_28 -> m24_29  [key=0, style=solid];
m24_29 -> m24_30  [key=0, style=solid];
m24_29 -> m24_33  [key=2, style=dotted];
m24_30 -> m24_31  [key=0, style=solid];
m24_30 -> m24_34  [key=2, style=dotted];
m24_30 -> m24_35  [key=2, style=dotted];
m24_31 -> m24_32  [key=0, style=solid];
m24_31 -> m24_34  [key=2, style=dotted];
m24_31 -> m24_36  [key=2, style=dotted];
m24_32 -> m24_28  [color=blue, key=0, style=bold];
m24_93 -> m24_94  [key=0, style=solid];
m24_93 -> m24_75  [key=2, style=dotted];
m24_93 -> m24_95  [key=2, style=dotted];
m24_68 -> m24_69  [key=0, style=solid];
m24_72 -> m24_73  [key=0, style=solid];
m24_81 -> m24_82  [key=0, style=solid];
m24_81 -> m24_75  [key=2, style=dotted];
m24_81 -> m24_71  [key=2, style=dotted];
m24_80 -> m24_81  [key=0, style=solid];
m24_69 -> m24_70  [key=0, style=solid];
m24_69 -> m24_71  [key=2, style=dotted];
m24_70 -> m24_68  [color=blue, key=0, style=bold];
m24_73 -> m24_74  [key=0, style=solid];
m24_73 -> m24_75  [key=2, style=dotted];
m24_73 -> m24_76  [key=2, style=dotted];
m24_73 -> m24_77  [key=2, style=dotted];
m24_73 -> m24_78  [key=2, style=dotted];
m24_73 -> m24_79  [key=2, style=dotted];
m24_74 -> m24_72  [color=blue, key=0, style=bold];
m24_82 -> m24_80  [color=blue, key=0, style=bold];
m24_88 -> m24_89  [key=0, style=solid];
m24_92 -> m24_93  [key=0, style=solid];
m24_89 -> m24_90  [key=0, style=solid];
m24_89 -> m24_91  [key=2, style=dotted];
m24_90 -> m24_88  [color=blue, key=0, style=bold];
m24_94 -> m24_92  [color=blue, key=0, style=bold];
m24_85 -> m24_86  [key=0, style=solid];
m24_85 -> m24_66  [key=2, style=dotted];
m24_85 -> m24_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_55 -> m24_83  [key=0, style=solid];
m24_83 -> m24_84  [key=0, style=solid];
m24_83 -> m24_65  [key=2, style=dotted];
m24_83 -> m24_85  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_83 -> m24_86  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_84 -> m24_85  [key=0, style=solid];
m24_84 -> m24_66  [key=2, style=dotted];
m24_84 -> m24_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_86 -> m24_87  [key=0, style=solid];
m24_86 -> m24_67  [key=2, style=dotted];
m24_87 -> m24_55  [color=blue, key=0, style=bold];
m24_96 -> m24_8  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_9  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_10  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_23  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_24  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_29  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_30  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_31  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_38  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_45  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_46  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_47  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_49  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_51  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_57  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_59  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_73  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_62  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_81  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_83  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_84  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_89  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_85  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_96 -> m24_93  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m24_97 -> m24_81  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m25_36 -> m25_37  [key=0, style=solid];
m25_37 -> m25_19  [key=2, style=dotted];
m25_37 -> m25_28  [key=2, style=dotted];
m25_37 -> m25_38  [key=0, style=solid];
m25_38 -> m25_36  [color=blue, key=0, style=bold];
m25_33 -> m25_34  [key=0, style=solid];
m25_34 -> m25_19  [key=2, style=dotted];
m25_34 -> m25_23  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_35 -> m25_33  [color=blue, key=0, style=bold];
m25_5 -> m25_6  [color=green, key=0, style=solid];
m25_5 -> d8  [key=2, style=dotted];
m25_6 -> m25_7  [color=green, key=0, style=solid];
m25_6 -> m25_8  [key=2, style=dotted];
m25_6 -> m25_9  [color=green, key=2, style=dotted];
m25_7 -> m25_5  [color=blue, key=0, style=bold];
m25_7 -> m25_4  [color=blue, key=0, style=bold];
m25_28 -> m25_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_28 -> m25_29  [key=0, style=solid];
m25_31 -> m25_9  [key=2, style=dotted];
m25_31 -> m25_32  [key=0, style=solid];
m25_29 -> m25_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_27  [key=2, style=dotted];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_15  [key=2, style=dotted];
m25_32 -> m25_28  [color=blue, key=0, style=bold];
m25_20 -> m25_21  [key=0, style=solid];
m25_21 -> m25_10  [key=2, style=dotted];
m25_21 -> m25_22  [key=0, style=solid];
m25_21 -> m25_19  [key=2, style=dotted];
m25_22 -> m25_20  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [color=green, key=0, style=solid];
m25_1 -> m25_2  [color=green, key=0, style=solid];
m25_1 -> m25_3  [color=green, key=2, style=dotted];
m25_1 -> m25_4  [key=2, style=dotted];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_23 -> m25_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_23 -> m25_24  [key=0, style=solid];
m25_25 -> m25_9  [key=2, style=dotted];
m25_25 -> m25_26  [key=0, style=solid];
m25_24 -> m25_25  [key=0, style=solid];
m25_24 -> m25_27  [key=2, style=dotted];
m25_26 -> m25_23  [color=blue, key=0, style=bold];
m25_10 -> m25_11  [color=green, key=0, style=solid];
m25_10 -> m25_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_11 -> m25_12  [color=green, key=0, style=solid];
m25_11 -> d8  [color=green, key=2, style=dotted];
m25_11 -> m25_13  [color=green, key=1, label=job, style=dashed];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_15  [key=2, style=dotted];
m25_13 -> m25_9  [key=2, style=dotted];
m25_13 -> m25_14  [key=0, style=solid];
m25_14 -> m25_10  [color=blue, key=0, style=bold];
m25_4 -> m25_6  [color=green, key=1, label=string, style=dashed];
m25_4 -> m25_5  [key=0, style=solid];
m25_16 -> m25_17  [key=0, style=solid];
m25_17 -> m25_4  [key=2, style=dotted];
m25_17 -> m25_18  [key=0, style=solid];
m25_17 -> m25_19  [key=2, style=dotted];
m25_18 -> m25_16  [color=blue, key=0, style=bold];
m25_15 -> m25_39  [key=0, style=solid];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_41  [key=2, style=dotted];
m25_40 -> m25_15  [color=blue, key=0, style=bold];
m26_31 -> m26_32  [key=0, style=solid];
m26_31 -> m26_33  [color=crimson, key=0, style=bold];
m26_31 -> m26_34  [color=crimson, key=0, style=bold];
m26_32 -> m26_33  [key=0, style=solid];
m26_32 -> m26_36  [key=2, style=dotted];
m26_33 -> m26_34  [key=0, style=solid];
m26_33 -> m26_37  [key=2, style=dotted];
m26_34 -> m26_35  [key=0, style=solid];
m26_34 -> m26_38  [key=2, style=dotted];
m26_35 -> m26_31  [color=blue, key=0, style=bold];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_2  [color=blue, key=0, style=bold];
m26_39 -> m26_40  [key=0, style=solid];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_42  [key=2, style=dotted];
m26_41 -> m26_39  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [color=blue, key=0, style=bold];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_6 -> m26_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m26_7 -> m26_8  [key=0, style=solid];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_12  [key=2, style=dotted];
m26_10 -> m26_13  [key=2, style=dotted];
m26_11 -> m26_6  [color=blue, key=0, style=bold];
m26_19 -> m26_20  [key=0, style=solid];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_22  [key=2, style=dotted];
m26_20 -> m26_18  [key=2, style=dotted];
m26_21 -> m26_19  [color=blue, key=0, style=bold];
m26_14 -> m26_15  [key=0, style=solid];
m26_15 -> m26_16  [key=0, style=solid];
m26_15 -> m26_17  [key=2, style=dotted];
m26_15 -> m26_18  [key=2, style=dotted];
m26_16 -> m26_14  [color=blue, key=0, style=bold];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_4  [color=blue, key=0, style=bold];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_25  [color=crimson, key=0, style=bold];
m26_23 -> m26_26  [color=crimson, key=0, style=bold];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_28  [key=2, style=dotted];
m26_24 -> m26_26  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_29  [key=2, style=dotted];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_30  [key=2, style=dotted];
m26_27 -> m26_23  [color=blue, key=0, style=bold];
m26_43 -> m26_7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m26_43 -> m26_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m26_43 -> m26_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m26_43 -> m26_10  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m26_43 -> m26_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m26_43 -> m26_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m26_43 -> m26_24  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m26_43 -> m26_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m26_43 -> m26_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m26_43 -> m26_40  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m27_49 -> m27_50  [key=0, style=solid];
m27_50 -> m27_51  [key=0, style=solid];
m27_50 -> m27_52  [key=2, style=dotted];
m27_51 -> m27_49  [color=blue, key=0, style=bold];
m27_53 -> m27_54  [key=0, style=solid];
m27_54 -> m27_55  [key=0, style=solid];
m27_54 -> m27_64  [key=0, style=solid];
m27_54 -> m27_65  [key=0, style=solid];
m27_54 -> m27_67  [key=0, style=solid];
m27_55 -> m27_56  [key=0, style=solid];
m27_64 -> m27_67  [key=0, style=solid];
m27_65 -> m27_66  [key=0, style=solid];
m27_56 -> m27_57  [key=0, style=solid];
m27_56 -> m27_68  [key=2, style=dotted];
m27_56 -> m27_63  [color=darkseagreen4, key=1, label=worker, style=dashed];
m27_57 -> m27_55  [key=0, style=solid];
m27_57 -> m27_58  [key=0, style=solid];
m27_63 -> m27_54  [key=0, style=solid];
m27_63 -> m27_71  [key=2, style=dotted];
m27_58 -> m27_59  [key=0, style=solid];
m27_59 -> m27_60  [key=0, style=solid];
m27_59 -> m27_69  [key=2, style=dotted];
m27_59 -> m27_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m27_59 -> m27_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m27_60 -> m27_61  [key=0, style=solid];
m27_60 -> m27_62  [key=0, style=solid];
m27_62 -> m27_58  [key=0, style=solid];
m27_62 -> m27_63  [key=0, style=solid];
m27_61 -> m27_62  [key=0, style=solid];
m27_61 -> m27_70  [key=2, style=dotted];
m27_66 -> m27_67  [key=0, style=solid];
m27_66 -> m27_17  [key=2, style=dotted];
m27_66 -> m27_72  [key=2, style=dotted];
m27_67 -> m27_53  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_2  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m27_0 -> m27_3  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m27_0 -> m27_5  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m27_0 -> m27_7  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m27_0 -> m27_8  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m27_0 -> m27_11  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m27_0 -> m27_0  [color=darkorchid, key=3, label="Field variable string StateName", style=bold];
m27_1 -> m27_2  [key=0, style=solid];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_15  [key=2, style=dotted];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_17  [key=2, style=dotted];
m27_5 -> m27_18  [key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_10  [key=0, style=solid];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_19  [key=2, style=dotted];
m27_8 -> m27_20  [key=2, style=dotted];
m27_8 -> m27_21  [key=2, style=dotted];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_22  [key=2, style=dotted];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_16  [key=2, style=dotted];
m27_6 -> m27_7  [key=0, style=solid];
m27_6 -> m27_8  [color=darkseagreen4, key=1, label=i, style=dashed];
m27_6 -> m27_9  [color=darkseagreen4, key=1, label=i, style=dashed];
m27_9 -> m27_7  [key=0, style=solid];
m27_9 -> m27_9  [color=darkseagreen4, key=1, label=i, style=dashed];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_18  [key=2, style=dotted];
m27_10 -> m27_0  [color=darkorchid, key=3, label="Property variable string Name", style=bold];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_23  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_13 -> m27_24  [key=2, style=dotted];
m27_14 -> m27_0  [color=blue, key=0, style=bold];
m27_25 -> m27_26  [color=red, key=0, style=solid];
m27_26 -> m27_27  [color=red, key=0, style=solid];
m27_27 -> m27_28  [key=0, style=solid];
m27_27 -> m27_31  [key=2, style=dotted];
m27_28 -> m27_29  [key=0, style=solid];
m27_28 -> m27_30  [key=0, style=solid];
m27_29 -> m27_28  [key=0, style=solid];
m27_29 -> m27_32  [key=2, style=dotted];
m27_30 -> m27_25  [color=blue, key=0, style=bold];
m27_33 -> m27_34  [key=0, style=solid];
m27_34 -> m27_35  [color=red, key=0, style=solid];
m27_34 -> m27_36  [key=0, style=solid];
m27_35 -> m27_36  [color=red, key=0, style=solid];
m27_35 -> m27_25  [color=red, key=2, style=dotted];
m27_36 -> m27_37  [key=0, style=solid];
m27_36 -> n29  [key=2, style=dotted];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_39  [key=0, style=solid];
m27_38 -> m27_37  [key=0, style=solid];
m27_38 -> m27_45  [key=2, style=dotted];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_18  [key=2, style=dotted];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_46  [key=2, style=dotted];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_47  [key=2, style=dotted];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_48  [key=2, style=dotted];
m27_43 -> m27_33  [color=blue, key=0, style=bold];
m27_73 -> m27_1  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_2  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_4  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_5  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_8  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_10  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_11  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_12  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_13  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_26  [color=red, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_27  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_28  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_34  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_35  [color=red, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_37  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_41  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_42  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_50  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_56  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_59  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_61  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m27_73 -> m27_66  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_2  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [color=green, key=0, style=solid];
m29_0 -> m29_3  [color=darkseagreen4, key=1, label="HangFire.States.StateHandler", style=dashed];
m29_0 -> m29_5  [color=darkseagreen4, key=1, label="HangFire.States.StateHandler", style=dashed];
m29_0 -> m29_6  [color=red, key=1, label="HangFire.States.StateHandler", style=dashed];
m29_0 -> m29_7  [color=darkseagreen4, key=1, label="HangFire.States.StateHandler", style=dashed];
m29_1 -> m29_2  [color=green, key=0, style=solid];
m29_1 -> m29_3  [key=0, style=solid];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_5  [key=0, style=solid];
m29_3 -> m29_0  [color=blue, key=0, style=bold];
m29_5 -> m29_6  [color=red, key=0, style=solid];
m29_5 -> m29_7  [key=0, style=solid];
m29_5 -> m29_11  [key=2, style=dotted];
m29_6 -> m29_7  [color=red, key=0, style=solid];
m29_6 -> d13  [color=red, key=2, style=dotted];
m29_6 -> m29_13  [color=red, key=2, style=dotted];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_14  [key=2, style=dotted];
m29_2 -> m29_8  [key=0, style=solid];
m29_2 -> m29_9  [key=2, style=dotted];
m29_2 -> m29_3  [key=0, style=solid];
m29_4 -> m29_8  [key=0, style=solid];
m29_4 -> m29_10  [key=2, style=dotted];
m29_4 -> m29_1  [color=green, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
m29_4 -> m29_2  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
m29_8 -> m29_0  [color=blue, key=0, style=bold];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_16 -> m29_17  [color=red, key=0, style=solid];
m29_16 -> m29_18  [key=0, style=solid];
m29_16 -> m29_11  [key=2, style=dotted];
m29_18 -> m29_19  [key=0, style=solid];
m29_18 -> m29_21  [key=2, style=dotted];
m29_17 -> m29_19  [color=red, key=0, style=solid];
m29_17 -> m29_20  [color=red, key=2, style=dotted];
m29_19 -> m29_15  [color=blue, key=0, style=bold];
m29_22 -> m29_5  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m29_22 -> m29_6  [color=red, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m29_22 -> m29_7  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m29_22 -> m29_16  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m29_22 -> m29_18  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m31_0 -> m31_1  [color=green, key=0, style=solid];
m31_1 -> m31_2  [color=green, key=0, style=solid];
m31_2 -> m31_0  [color=blue, key=0, style=bold];
m32_18 -> m32_19  [key=0, style=solid];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> n7  [key=2, style=dotted];
m32_14 -> m32_17  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> n7  [key=2, style=dotted];
m32_19 -> m32_17  [key=2, style=dotted];
m32_9 -> m32_10  [key=0, style=solid];
m32_13 -> m32_14  [key=0, style=solid];
m32_10 -> m32_11  [key=0, style=solid];
m32_10 -> m32_12  [key=2, style=dotted];
m32_11 -> m32_9  [color=blue, key=0, style=bold];
m32_15 -> m32_13  [color=blue, key=0, style=bold];
m32_20 -> m32_18  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_3  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m32_0 -> m32_4  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m32_0 -> m32_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_0 -> m32_5  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m32_0 -> m32_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=0, style=solid];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_8  [key=2, style=dotted];
m32_3 -> m32_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_8  [key=2, style=dotted];
m32_4 -> m32_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_8  [key=2, style=dotted];
m32_5 -> m32_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_2 -> m32_6  [key=0, style=solid];
m32_2 -> m32_7  [key=2, style=dotted];
m32_6 -> m32_0  [color=blue, key=0, style=bold];
m32_21 -> m32_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_21 -> m32_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_14  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m33_11 -> m33_0  [color=darkorchid, key=3, label="Parameter variable HangFire.Storage.IStorageConnection connection", style=bold];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_14  [key=0, style=solid];
m33_14 -> m33_15  [key=0, style=solid];
m33_14 -> m33_16  [key=2, style=dotted];
m33_13 -> m33_15  [key=0, style=solid];
m33_13 -> m33_8  [key=2, style=dotted];
m33_15 -> m33_11  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_11  [color=darkorchid, key=3, label="method methodReturn HangFire.States.IStateMachine Create", style=bold];
m33_1 -> m33_0  [color=blue, key=0, style=bold];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_6  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_5  [key=0, style=solid];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_10  [key=2, style=dotted];
m33_6 -> m33_9  [key=2, style=dotted];
m33_4 -> m33_7  [key=0, style=solid];
m33_4 -> m33_8  [key=2, style=dotted];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_9  [key=2, style=dotted];
m33_7 -> m33_2  [color=blue, key=0, style=bold];
m33_17 -> m33_5  [color=darkseagreen4, key=1, label="HangFire.States.StateMachineFactory", style=dashed];
m33_17 -> m33_6  [color=darkseagreen4, key=1, label="HangFire.States.StateMachineFactory", style=dashed];
m33_17 -> m33_14  [color=darkseagreen4, key=1, label="HangFire.States.StateMachineFactory", style=dashed];
m34_153 -> m34_154  [key=0, style=solid];
m34_154 -> m34_155  [key=0, style=solid];
m34_154 -> m34_11  [key=2, style=dotted];
m34_154 -> m34_12  [key=2, style=dotted];
m34_154 -> m34_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_155 -> m34_156  [key=0, style=solid];
m34_155 -> m34_99  [key=2, style=dotted];
m34_155 -> m34_159  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_156 -> m34_157  [key=0, style=solid];
m34_156 -> m34_119  [key=2, style=dotted];
m34_159 -> m34_160  [key=0, style=solid];
m34_159 -> m34_81  [key=2, style=dotted];
m34_159 -> m34_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_157 -> m34_158  [key=0, style=solid];
m34_157 -> m34_161  [key=2, style=dotted];
m34_158 -> m34_159  [key=0, style=solid];
m34_158 -> m34_81  [key=2, style=dotted];
m34_158 -> m34_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_160 -> m34_153  [color=blue, key=0, style=bold];
m34_270 -> m34_271  [key=0, style=solid];
m34_271 -> m34_272  [key=0, style=solid];
m34_271 -> m34_99  [key=2, style=dotted];
m34_271 -> m34_274  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_271 -> m34_275  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_271 -> m34_276  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_272 -> m34_273  [key=0, style=solid];
m34_272 -> m34_262  [key=2, style=dotted];
m34_272 -> m34_8  [key=2, style=dotted];
m34_272 -> m34_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_272 -> m34_274  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_272 -> m34_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_272 -> m34_275  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_272 -> m34_276  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_272 -> m34_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_274 -> m34_275  [key=0, style=solid];
m34_274 -> m34_11  [key=2, style=dotted];
m34_274 -> m34_12  [key=2, style=dotted];
m34_274 -> m34_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_275 -> m34_276  [key=0, style=solid];
m34_275 -> m34_103  [key=2, style=dotted];
m34_276 -> m34_277  [key=0, style=solid];
m34_276 -> m34_81  [key=2, style=dotted];
m34_276 -> m34_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_273 -> m34_274  [key=0, style=solid];
m34_273 -> m34_10  [key=2, style=dotted];
m34_273 -> m34_276  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m34_273 -> m34_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m34_277 -> m34_270  [color=blue, key=0, style=bold];
m34_99 -> m34_348  [key=0, style=solid];
m34_348 -> m34_349  [key=0, style=solid];
m34_348 -> m34_350  [key=2, style=dotted];
m34_349 -> m34_99  [color=blue, key=0, style=bold];
m34_210 -> m34_211  [key=0, style=solid];
m34_211 -> m34_212  [key=0, style=solid];
m34_211 -> m34_11  [key=2, style=dotted];
m34_211 -> m34_179  [key=2, style=dotted];
m34_211 -> m34_8  [key=2, style=dotted];
m34_211 -> m34_12  [key=2, style=dotted];
m34_211 -> m34_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_211 -> m34_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_212 -> m34_213  [key=0, style=solid];
m34_212 -> m34_99  [key=2, style=dotted];
m34_212 -> m34_214  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_212 -> m34_215  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_213 -> m34_214  [key=0, style=solid];
m34_213 -> m34_11  [key=2, style=dotted];
m34_213 -> m34_12  [key=2, style=dotted];
m34_213 -> m34_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_214 -> m34_215  [key=0, style=solid];
m34_214 -> m34_119  [key=2, style=dotted];
m34_214 -> m34_216  [color=darkseagreen4, key=1, label=result, style=dashed];
m34_215 -> m34_216  [key=0, style=solid];
m34_215 -> m34_81  [key=2, style=dotted];
m34_215 -> m34_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_216 -> m34_217  [key=0, style=solid];
m34_216 -> m34_218  [key=2, style=dotted];
m34_217 -> m34_210  [color=blue, key=0, style=bold];
m34_262 -> m34_262  [color=darkorchid, key=3, label="Field variable string StateName", style=bold];
m34_38 -> m34_39  [key=0, style=solid];
m34_39 -> m34_40  [key=0, style=solid];
m34_39 -> m34_27  [key=2, style=dotted];
m34_39 -> m34_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_40 -> m34_41  [key=0, style=solid];
m34_40 -> m34_33  [key=2, style=dotted];
m34_41 -> m34_38  [color=blue, key=0, style=bold];
m34_129 -> m34_130  [key=0, style=solid];
m34_130 -> m34_131  [key=0, style=solid];
m34_130 -> m34_51  [key=2, style=dotted];
m34_130 -> m34_135  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_131 -> m34_132  [key=0, style=solid];
m34_131 -> m34_27  [key=2, style=dotted];
m34_131 -> m34_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_132 -> m34_133  [key=0, style=solid];
m34_132 -> m34_33  [key=2, style=dotted];
m34_133 -> m34_129  [color=blue, key=0, style=bold];
m34_111 -> m34_112  [key=0, style=solid];
m34_112 -> m34_113  [key=0, style=solid];
m34_112 -> m34_51  [key=2, style=dotted];
m34_112 -> m34_117  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_113 -> m34_114  [key=0, style=solid];
m34_113 -> m34_27  [key=2, style=dotted];
m34_113 -> m34_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_114 -> m34_115  [key=0, style=solid];
m34_114 -> m34_33  [key=2, style=dotted];
m34_115 -> m34_111  [color=blue, key=0, style=bold];
m34_288 -> m34_289  [key=0, style=solid];
m34_289 -> m34_290  [key=0, style=solid];
m34_289 -> m34_99  [key=2, style=dotted];
m34_289 -> m34_292  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_289 -> m34_293  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_289 -> m34_294  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_290 -> m34_291  [key=0, style=solid];
m34_290 -> m34_262  [key=2, style=dotted];
m34_290 -> m34_8  [key=2, style=dotted];
m34_290 -> m34_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_290 -> m34_292  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_290 -> m34_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_290 -> m34_293  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_290 -> m34_294  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_290 -> m34_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_292 -> m34_293  [key=0, style=solid];
m34_292 -> m34_11  [key=2, style=dotted];
m34_292 -> m34_298  [key=2, style=dotted];
m34_292 -> m34_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_293 -> m34_294  [key=0, style=solid];
m34_293 -> m34_103  [key=2, style=dotted];
m34_293 -> m34_295  [color=darkseagreen4, key=1, label=result, style=dashed];
m34_294 -> m34_295  [key=0, style=solid];
m34_294 -> m34_81  [key=2, style=dotted];
m34_294 -> m34_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_291 -> m34_292  [key=0, style=solid];
m34_291 -> m34_297  [key=2, style=dotted];
m34_291 -> m34_294  [color=darkseagreen4, key=1, label=exception, style=dashed];
m34_291 -> m34_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m34_291 -> m34_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m34_295 -> m34_296  [key=0, style=solid];
m34_295 -> m34_161  [key=2, style=dotted];
m34_296 -> m34_288  [color=blue, key=0, style=bold];
m34_255 -> m34_256  [key=0, style=solid];
m34_256 -> m34_257  [key=0, style=solid];
m34_256 -> m34_99  [key=2, style=dotted];
m34_256 -> m34_258  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_256 -> m34_259  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_257 -> m34_258  [key=0, style=solid];
m34_257 -> m34_262  [key=2, style=dotted];
m34_257 -> m34_8  [key=2, style=dotted];
m34_257 -> m34_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_257 -> m34_259  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_257 -> m34_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_258 -> m34_259  [key=0, style=solid];
m34_258 -> m34_103  [key=2, style=dotted];
m34_258 -> m34_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m34_259 -> m34_260  [key=0, style=solid];
m34_259 -> m34_81  [key=2, style=dotted];
m34_259 -> m34_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_260 -> m34_261  [key=0, style=solid];
m34_260 -> m34_218  [key=2, style=dotted];
m34_261 -> m34_255  [color=blue, key=0, style=bold];
m34_315 -> m34_316  [color=red, key=0, style=solid];
m34_316 -> m34_317  [color=red, key=0, style=solid];
m34_316 -> m34_327  [color=red, key=2, style=dotted];
m34_316 -> m34_320  [color=red, key=1, label=handler1, style=dashed];
m34_316 -> m34_325  [color=red, key=1, label=handler1, style=dashed];
m34_317 -> m34_318  [color=red, key=0, style=solid];
m34_317 -> m34_11  [key=2, style=dotted];
m34_317 -> m34_12  [key=2, style=dotted];
m34_317 -> m34_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_320 -> m34_321  [key=0, style=solid];
m34_320 -> m34_328  [key=2, style=dotted];
m34_325 -> m34_326  [key=0, style=solid];
m34_325 -> m34_81  [key=2, style=dotted];
m34_325 -> m34_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_318 -> m34_319  [color=red, key=0, style=solid];
m34_318 -> m34_327  [color=red, key=2, style=dotted];
m34_318 -> m34_321  [color=red, key=1, label=handler2, style=dashed];
m34_319 -> m34_320  [key=0, style=solid];
m34_319 -> m34_11  [key=2, style=dotted];
m34_319 -> m34_12  [key=2, style=dotted];
m34_319 -> m34_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_321 -> m34_322  [key=0, style=solid];
m34_321 -> m34_328  [key=2, style=dotted];
m34_322 -> m34_323  [key=0, style=solid];
m34_322 -> m34_51  [key=2, style=dotted];
m34_322 -> m34_324  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_323 -> m34_324  [key=0, style=solid];
m34_323 -> m34_262  [key=2, style=dotted];
m34_323 -> m34_8  [key=2, style=dotted];
m34_323 -> m34_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_323 -> m34_325  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_323 -> m34_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_323 -> m34_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_324 -> m34_325  [key=0, style=solid];
m34_324 -> m34_329  [key=2, style=dotted];
m34_324 -> m34_269  [key=2, style=dotted];
m34_326 -> m34_315  [color=blue, key=0, style=bold];
m34_235 -> m34_236  [key=0, style=solid];
m34_236 -> m34_237  [key=0, style=solid];
m34_236 -> m34_11  [key=2, style=dotted];
m34_236 -> m34_179  [key=2, style=dotted];
m34_236 -> m34_242  [key=2, style=dotted];
m34_236 -> m34_12  [key=2, style=dotted];
m34_236 -> m34_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_237 -> m34_238  [key=0, style=solid];
m34_237 -> m34_99  [key=2, style=dotted];
m34_237 -> m34_239  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_238 -> m34_239  [key=0, style=solid];
m34_238 -> m34_119  [key=2, style=dotted];
m34_238 -> m34_240  [color=darkseagreen4, key=1, label=result, style=dashed];
m34_239 -> m34_240  [key=0, style=solid];
m34_239 -> m34_81  [key=2, style=dotted];
m34_239 -> m34_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_240 -> m34_241  [key=0, style=solid];
m34_240 -> m34_161  [key=2, style=dotted];
m34_241 -> m34_235  [color=blue, key=0, style=bold];
m34_94 -> m34_95  [key=0, style=solid];
m34_95 -> m34_96  [key=0, style=solid];
m34_95 -> m34_99  [key=2, style=dotted];
m34_95 -> m34_97  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_96 -> m34_97  [key=0, style=solid];
m34_96 -> m34_55  [key=2, style=dotted];
m34_97 -> m34_98  [key=0, style=solid];
m34_97 -> m34_81  [key=2, style=dotted];
m34_97 -> m34_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_98 -> m34_94  [color=blue, key=0, style=bold];
m34_137 -> m34_138  [key=0, style=solid];
m34_138 -> m34_139  [key=0, style=solid];
m34_138 -> m34_144  [key=2, style=dotted];
m34_138 -> m34_142  [color=darkseagreen4, key=1, label=disposableMock, style=dashed];
m34_139 -> m34_140  [key=0, style=solid];
m34_139 -> m34_11  [key=2, style=dotted];
m34_139 -> m34_12  [key=2, style=dotted];
m34_139 -> m34_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_142 -> m34_143  [key=0, style=solid];
m34_142 -> m34_81  [key=2, style=dotted];
m34_142 -> m34_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_140 -> m34_141  [key=0, style=solid];
m34_140 -> m34_51  [key=2, style=dotted];
m34_141 -> m34_142  [key=0, style=solid];
m34_141 -> m34_119  [key=2, style=dotted];
m34_143 -> m34_137  [color=blue, key=0, style=bold];
m34_120 -> m34_121  [key=0, style=solid];
m34_121 -> m34_122  [key=0, style=solid];
m34_121 -> m34_51  [key=2, style=dotted];
m34_121 -> m34_126  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_122 -> m34_123  [key=0, style=solid];
m34_122 -> m34_27  [key=2, style=dotted];
m34_122 -> m34_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_123 -> m34_124  [key=0, style=solid];
m34_123 -> m34_33  [key=2, style=dotted];
m34_124 -> m34_120  [color=blue, key=0, style=bold];
m34_190 -> m34_191  [key=0, style=solid];
m34_191 -> m34_192  [key=0, style=solid];
m34_191 -> m34_11  [key=2, style=dotted];
m34_191 -> m34_179  [key=2, style=dotted];
m34_191 -> m34_8  [key=2, style=dotted];
m34_191 -> m34_12  [key=2, style=dotted];
m34_191 -> m34_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_191 -> m34_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_192 -> m34_193  [key=0, style=solid];
m34_192 -> m34_99  [key=2, style=dotted];
m34_192 -> m34_194  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_192 -> m34_195  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_193 -> m34_194  [key=0, style=solid];
m34_193 -> m34_11  [key=2, style=dotted];
m34_193 -> m34_12  [key=2, style=dotted];
m34_193 -> m34_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_194 -> m34_195  [key=0, style=solid];
m34_194 -> m34_119  [key=2, style=dotted];
m34_194 -> m34_196  [color=darkseagreen4, key=1, label=result, style=dashed];
m34_195 -> m34_196  [key=0, style=solid];
m34_195 -> m34_81  [key=2, style=dotted];
m34_195 -> m34_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_196 -> m34_197  [key=0, style=solid];
m34_196 -> m34_161  [key=2, style=dotted];
m34_197 -> m34_190  [color=blue, key=0, style=bold];
m34_51 -> m34_346  [key=0, style=solid];
m34_346 -> m34_347  [key=0, style=solid];
m34_346 -> m34_45  [key=2, style=dotted];
m34_347 -> m34_51  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_8  [key=2, style=dotted];
m34_1 -> m34_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_2 -> m34_3  [key=0, style=solid];
m34_2 -> m34_9  [key=2, style=dotted];
m34_3 -> m34_4  [key=0, style=solid];
m34_3 -> m34_10  [key=2, style=dotted];
m34_4 -> m34_5  [key=0, style=solid];
m34_4 -> m34_11  [key=2, style=dotted];
m34_4 -> m34_12  [key=2, style=dotted];
m34_4 -> m34_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_5 -> m34_6  [key=0, style=solid];
m34_5 -> m34_11  [key=2, style=dotted];
m34_5 -> m34_12  [key=2, style=dotted];
m34_5 -> m34_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_6 -> m34_7  [key=0, style=solid];
m34_6 -> m34_11  [key=2, style=dotted];
m34_6 -> m34_12  [key=2, style=dotted];
m34_6 -> m34_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_7 -> m34_0  [color=blue, key=0, style=bold];
m34_107 -> m34_108  [key=0, style=solid];
m34_108 -> m34_109  [key=0, style=solid];
m34_108 -> m34_51  [key=2, style=dotted];
m34_109 -> m34_110  [key=0, style=solid];
m34_109 -> m34_55  [key=2, style=dotted];
m34_109 -> m34_33  [key=2, style=dotted];
m34_110 -> m34_107  [color=blue, key=0, style=bold];
m34_73 -> m34_74  [key=0, style=solid];
m34_74 -> m34_75  [key=0, style=solid];
m34_74 -> m34_8  [key=2, style=dotted];
m34_74 -> m34_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_74 -> m34_77  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_75 -> m34_76  [key=0, style=solid];
m34_75 -> m34_80  [key=2, style=dotted];
m34_77 -> m34_78  [key=0, style=solid];
m34_77 -> m34_55  [key=2, style=dotted];
m34_76 -> m34_77  [key=0, style=solid];
m34_76 -> m34_51  [key=2, style=dotted];
m34_78 -> m34_79  [key=0, style=solid];
m34_78 -> m34_81  [key=2, style=dotted];
m34_78 -> m34_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_79 -> m34_73  [color=blue, key=0, style=bold];
m34_343 -> m34_344  [key=0, style=solid];
m34_13 -> m34_14  [key=0, style=solid];
m34_17 -> m34_18  [key=0, style=solid];
m34_20 -> m34_21  [key=0, style=solid];
m34_24 -> m34_25  [key=0, style=solid];
m34_14 -> m34_15  [key=0, style=solid];
m34_14 -> m34_16  [key=2, style=dotted];
m34_15 -> m34_13  [color=blue, key=0, style=bold];
m34_18 -> m34_19  [key=0, style=solid];
m34_19 -> m34_17  [color=blue, key=0, style=bold];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_23  [key=2, style=dotted];
m34_22 -> m34_20  [color=blue, key=0, style=bold];
m34_25 -> m34_26  [key=0, style=solid];
m34_25 -> m34_27  [key=2, style=dotted];
m34_25 -> m34_28  [key=2, style=dotted];
m34_26 -> m34_24  [color=blue, key=0, style=bold];
m34_34 -> m34_35  [key=0, style=solid];
m34_35 -> m34_36  [key=0, style=solid];
m34_35 -> m34_37  [key=2, style=dotted];
m34_36 -> m34_34  [color=blue, key=0, style=bold];
m34_42 -> m34_43  [key=0, style=solid];
m34_43 -> m34_44  [key=0, style=solid];
m34_43 -> m34_45  [key=2, style=dotted];
m34_44 -> m34_42  [color=blue, key=0, style=bold];
m34_53 -> m34_54  [key=0, style=solid];
m34_53 -> m34_55  [key=2, style=dotted];
m34_52 -> m34_53  [key=0, style=solid];
m34_54 -> m34_52  [color=blue, key=0, style=bold];
m34_62 -> m34_63  [key=0, style=solid];
m34_62 -> m34_55  [key=2, style=dotted];
m34_61 -> m34_62  [key=0, style=solid];
m34_63 -> m34_61  [color=blue, key=0, style=bold];
m34_70 -> m34_71  [key=0, style=solid];
m34_70 -> m34_72  [key=2, style=dotted];
m34_69 -> m34_70  [key=0, style=solid];
m34_71 -> m34_69  [color=blue, key=0, style=bold];
m34_82 -> m34_83  [key=0, style=solid];
m34_85 -> m34_86  [key=0, style=solid];
m34_83 -> m34_84  [key=0, style=solid];
m34_83 -> m34_16  [key=2, style=dotted];
m34_84 -> m34_82  [color=blue, key=0, style=bold];
m34_86 -> m34_87  [key=0, style=solid];
m34_86 -> m34_27  [key=2, style=dotted];
m34_86 -> m34_28  [key=2, style=dotted];
m34_86 -> m34_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_86 -> m34_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_87 -> m34_85  [color=blue, key=0, style=bold];
m34_88 -> m34_89  [key=0, style=solid];
m34_91 -> m34_92  [key=0, style=solid];
m34_89 -> m34_90  [key=0, style=solid];
m34_90 -> m34_88  [color=blue, key=0, style=bold];
m34_92 -> m34_93  [key=0, style=solid];
m34_93 -> m34_91  [color=blue, key=0, style=bold];
m34_100 -> m34_101  [key=0, style=solid];
m34_101 -> m34_102  [key=0, style=solid];
m34_101 -> m34_27  [key=2, style=dotted];
m34_101 -> m34_103  [key=2, style=dotted];
m34_101 -> m34_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_102 -> m34_100  [color=blue, key=0, style=bold];
m34_104 -> m34_105  [key=0, style=solid];
m34_105 -> m34_106  [key=0, style=solid];
m34_106 -> m34_104  [color=blue, key=0, style=bold];
m34_117 -> m34_118  [key=0, style=solid];
m34_117 -> m34_119  [key=2, style=dotted];
m34_116 -> m34_117  [key=0, style=solid];
m34_118 -> m34_116  [color=blue, key=0, style=bold];
m34_126 -> m34_127  [key=0, style=solid];
m34_126 -> m34_128  [key=2, style=dotted];
m34_125 -> m34_126  [key=0, style=solid];
m34_127 -> m34_125  [color=blue, key=0, style=bold];
m34_135 -> m34_136  [key=0, style=solid];
m34_135 -> m34_119  [key=2, style=dotted];
m34_134 -> m34_135  [key=0, style=solid];
m34_136 -> m34_134  [color=blue, key=0, style=bold];
m34_145 -> m34_146  [key=0, style=solid];
m34_149 -> m34_150  [key=0, style=solid];
m34_146 -> m34_147  [key=0, style=solid];
m34_146 -> m34_148  [key=2, style=dotted];
m34_147 -> m34_145  [color=blue, key=0, style=bold];
m34_150 -> m34_151  [key=0, style=solid];
m34_150 -> m34_152  [key=2, style=dotted];
m34_151 -> m34_149  [color=blue, key=0, style=bold];
m34_162 -> m34_163  [key=0, style=solid];
m34_166 -> m34_167  [key=0, style=solid];
m34_169 -> m34_170  [key=0, style=solid];
m34_163 -> m34_164  [key=0, style=solid];
m34_163 -> m34_27  [key=2, style=dotted];
m34_163 -> m34_165  [key=2, style=dotted];
m34_164 -> m34_162  [color=blue, key=0, style=bold];
m34_167 -> m34_168  [key=0, style=solid];
m34_167 -> m34_165  [key=2, style=dotted];
m34_168 -> m34_166  [color=blue, key=0, style=bold];
m34_170 -> m34_171  [key=0, style=solid];
m34_170 -> m34_27  [key=2, style=dotted];
m34_170 -> m34_103  [key=2, style=dotted];
m34_171 -> m34_169  [color=blue, key=0, style=bold];
m34_180 -> m34_181  [key=0, style=solid];
m34_183 -> m34_184  [key=0, style=solid];
m34_187 -> m34_188  [key=0, style=solid];
m34_181 -> m34_182  [key=0, style=solid];
m34_181 -> m34_165  [key=2, style=dotted];
m34_182 -> m34_180  [color=blue, key=0, style=bold];
m34_184 -> m34_185  [key=0, style=solid];
m34_184 -> m34_186  [key=2, style=dotted];
m34_185 -> m34_183  [color=blue, key=0, style=bold];
m34_188 -> m34_189  [key=0, style=solid];
m34_188 -> m34_27  [key=2, style=dotted];
m34_188 -> m34_103  [key=2, style=dotted];
m34_189 -> m34_187  [color=blue, key=0, style=bold];
m34_198 -> m34_199  [key=0, style=solid];
m34_201 -> m34_202  [key=0, style=solid];
m34_204 -> m34_205  [key=0, style=solid];
m34_207 -> m34_208  [key=0, style=solid];
m34_199 -> m34_200  [key=0, style=solid];
m34_199 -> m34_165  [key=2, style=dotted];
m34_200 -> m34_198  [color=blue, key=0, style=bold];
m34_202 -> m34_203  [key=0, style=solid];
m34_202 -> m34_186  [key=2, style=dotted];
m34_203 -> m34_201  [color=blue, key=0, style=bold];
m34_205 -> m34_206  [key=0, style=solid];
m34_205 -> m34_27  [key=2, style=dotted];
m34_205 -> m34_103  [key=2, style=dotted];
m34_206 -> m34_204  [color=blue, key=0, style=bold];
m34_208 -> m34_209  [key=0, style=solid];
m34_208 -> m34_27  [key=2, style=dotted];
m34_208 -> m34_103  [key=2, style=dotted];
m34_209 -> m34_207  [color=blue, key=0, style=bold];
m34_219 -> m34_220  [key=0, style=solid];
m34_222 -> m34_223  [key=0, style=solid];
m34_225 -> m34_226  [key=0, style=solid];
m34_228 -> m34_229  [key=0, style=solid];
m34_220 -> m34_221  [key=0, style=solid];
m34_220 -> m34_165  [key=2, style=dotted];
m34_221 -> m34_219  [color=blue, key=0, style=bold];
m34_223 -> m34_224  [key=0, style=solid];
m34_223 -> m34_186  [key=2, style=dotted];
m34_224 -> m34_222  [color=blue, key=0, style=bold];
m34_226 -> m34_227  [key=0, style=solid];
m34_226 -> m34_27  [key=2, style=dotted];
m34_226 -> m34_103  [key=2, style=dotted];
m34_227 -> m34_225  [color=blue, key=0, style=bold];
m34_229 -> m34_230  [key=0, style=solid];
m34_229 -> m34_27  [key=2, style=dotted];
m34_229 -> m34_103  [key=2, style=dotted];
m34_229 -> m34_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_230 -> m34_228  [color=blue, key=0, style=bold];
m34_231 -> m34_232  [key=0, style=solid];
m34_232 -> m34_233  [key=0, style=solid];
m34_232 -> m34_234  [key=2, style=dotted];
m34_233 -> m34_231  [color=blue, key=0, style=bold];
m34_243 -> m34_244  [key=0, style=solid];
m34_246 -> m34_247  [key=0, style=solid];
m34_244 -> m34_245  [key=0, style=solid];
m34_244 -> m34_165  [key=2, style=dotted];
m34_245 -> m34_243  [color=blue, key=0, style=bold];
m34_247 -> m34_248  [key=0, style=solid];
m34_247 -> m34_27  [key=2, style=dotted];
m34_247 -> m34_103  [key=2, style=dotted];
m34_247 -> m34_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_247 -> m34_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_248 -> m34_246  [color=blue, key=0, style=bold];
m34_249 -> m34_250  [key=0, style=solid];
m34_252 -> m34_253  [key=0, style=solid];
m34_250 -> m34_251  [key=0, style=solid];
m34_251 -> m34_249  [color=blue, key=0, style=bold];
m34_253 -> m34_254  [key=0, style=solid];
m34_254 -> m34_252  [color=blue, key=0, style=bold];
m34_263 -> m34_264  [key=0, style=solid];
m34_267 -> m34_268  [key=0, style=solid];
m34_267 -> m34_27  [key=2, style=dotted];
m34_267 -> m34_269  [key=2, style=dotted];
m34_266 -> m34_267  [key=0, style=solid];
m34_264 -> m34_265  [key=0, style=solid];
m34_264 -> m34_186  [key=2, style=dotted];
m34_265 -> m34_263  [color=blue, key=0, style=bold];
m34_268 -> m34_266  [color=blue, key=0, style=bold];
m34_278 -> m34_279  [key=0, style=solid];
m34_282 -> m34_283  [key=0, style=solid];
m34_282 -> m34_27  [key=2, style=dotted];
m34_282 -> m34_284  [key=2, style=dotted];
m34_286 -> m34_287  [key=0, style=solid];
m34_286 -> m34_27  [key=2, style=dotted];
m34_286 -> m34_269  [key=2, style=dotted];
m34_281 -> m34_282  [key=0, style=solid];
m34_285 -> m34_286  [key=0, style=solid];
m34_279 -> m34_280  [key=0, style=solid];
m34_279 -> m34_186  [key=2, style=dotted];
m34_280 -> m34_278  [color=blue, key=0, style=bold];
m34_283 -> m34_281  [color=blue, key=0, style=bold];
m34_287 -> m34_285  [color=blue, key=0, style=bold];
m34_299 -> m34_300  [key=0, style=solid];
m34_303 -> m34_304  [key=0, style=solid];
m34_303 -> m34_27  [key=2, style=dotted];
m34_303 -> m34_269  [key=2, style=dotted];
m34_306 -> m34_307  [key=0, style=solid];
m34_306 -> m34_27  [key=2, style=dotted];
m34_306 -> m34_269  [key=2, style=dotted];
m34_306 -> m34_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_306 -> m34_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_309 -> m34_310  [key=0, style=solid];
m34_302 -> m34_303  [key=0, style=solid];
m34_305 -> m34_306  [key=0, style=solid];
m34_300 -> m34_301  [key=0, style=solid];
m34_300 -> m34_186  [key=2, style=dotted];
m34_301 -> m34_299  [color=blue, key=0, style=bold];
m34_304 -> m34_302  [color=blue, key=0, style=bold];
m34_307 -> m34_305  [color=blue, key=0, style=bold];
m34_308 -> m34_309  [key=0, style=solid];
m34_311 -> m34_312  [key=0, style=solid];
m34_310 -> m34_308  [color=blue, key=0, style=bold];
m34_312 -> m34_313  [key=0, style=solid];
m34_312 -> m34_314  [key=2, style=dotted];
m34_313 -> m34_311  [color=blue, key=0, style=bold];
m34_330 -> m34_331  [key=0, style=solid];
m34_333 -> m34_334  [key=0, style=solid];
m34_336 -> m34_337  [key=0, style=solid];
m34_340 -> m34_341  [key=0, style=solid];
m34_340 -> m34_27  [key=2, style=dotted];
m34_340 -> d113  [key=2, style=dotted];
m34_340 -> m34_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_344 -> m34_345  [key=0, style=solid];
m34_339 -> m34_340  [key=0, style=solid];
m34_331 -> m34_332  [key=0, style=solid];
m34_332 -> m34_330  [color=blue, key=0, style=bold];
m34_334 -> m34_335  [key=0, style=solid];
m34_335 -> m34_333  [color=blue, key=0, style=bold];
m34_337 -> m34_338  [key=0, style=solid];
m34_337 -> m34_186  [key=2, style=dotted];
m34_338 -> m34_336  [color=blue, key=0, style=bold];
m34_341 -> m34_339  [color=blue, key=0, style=bold];
m34_345 -> m34_343  [color=blue, key=0, style=bold];
m34_56 -> m34_57  [key=0, style=solid];
m34_57 -> m34_58  [key=0, style=solid];
m34_57 -> m34_51  [key=2, style=dotted];
m34_57 -> m34_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_58 -> m34_59  [key=0, style=solid];
m34_58 -> m34_27  [key=2, style=dotted];
m34_58 -> m34_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_59 -> m34_60  [key=0, style=solid];
m34_59 -> m34_33  [key=2, style=dotted];
m34_60 -> m34_56  [color=blue, key=0, style=bold];
m34_46 -> m34_47  [key=0, style=solid];
m34_47 -> m34_48  [key=0, style=solid];
m34_47 -> m34_51  [key=2, style=dotted];
m34_47 -> m34_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_48 -> m34_49  [key=0, style=solid];
m34_48 -> m34_27  [key=2, style=dotted];
m34_48 -> m34_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_49 -> m34_50  [key=0, style=solid];
m34_49 -> m34_33  [key=2, style=dotted];
m34_50 -> m34_46  [color=blue, key=0, style=bold];
m34_172 -> m34_173  [key=0, style=solid];
m34_173 -> m34_174  [key=0, style=solid];
m34_173 -> m34_11  [key=2, style=dotted];
m34_173 -> m34_179  [key=2, style=dotted];
m34_173 -> m34_8  [key=2, style=dotted];
m34_173 -> m34_12  [key=2, style=dotted];
m34_173 -> m34_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_173 -> m34_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_174 -> m34_175  [key=0, style=solid];
m34_174 -> m34_99  [key=2, style=dotted];
m34_174 -> m34_177  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_175 -> m34_176  [key=0, style=solid];
m34_175 -> m34_119  [key=2, style=dotted];
m34_177 -> m34_178  [key=0, style=solid];
m34_177 -> m34_81  [key=2, style=dotted];
m34_177 -> m34_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_176 -> m34_177  [key=0, style=solid];
m34_176 -> m34_161  [key=2, style=dotted];
m34_178 -> m34_172  [color=blue, key=0, style=bold];
m34_29 -> m34_30  [key=0, style=solid];
m34_30 -> m34_31  [key=0, style=solid];
m34_30 -> m34_27  [key=2, style=dotted];
m34_30 -> m34_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_31 -> m34_32  [key=0, style=solid];
m34_31 -> m34_33  [key=2, style=dotted];
m34_32 -> m34_29  [color=blue, key=0, style=bold];
m34_64 -> m34_65  [key=0, style=solid];
m34_65 -> m34_66  [key=0, style=solid];
m34_65 -> m34_51  [key=2, style=dotted];
m34_65 -> m34_70  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_66 -> m34_67  [key=0, style=solid];
m34_66 -> m34_27  [key=2, style=dotted];
m34_66 -> m34_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_67 -> m34_68  [key=0, style=solid];
m34_67 -> m34_33  [key=2, style=dotted];
m34_68 -> m34_64  [color=blue, key=0, style=bold];
m34_351 -> m34_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_70  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_105  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_113  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_130  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_131  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_139  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_140  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_154  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_155  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_191  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_194  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_211  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_212  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_214  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_215  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_229  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_236  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_237  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_238  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_256  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_258  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_259  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_267  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_271  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_274  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_282  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_275  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_289  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_292  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_303  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_293  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_320  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_321  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_322  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_324  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_325  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_340  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_344  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_346  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_351 -> m34_348  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m34_352 -> m34_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_353 -> m34_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_354 -> m34_70  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_355 -> m34_117  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_356 -> m34_126  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_357 -> m34_135  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m34_358 -> m34_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_359 -> m34_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_359 -> m34_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_360 -> m34_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m34_361 -> m34_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_361 -> m34_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_362 -> m34_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m34_362 -> m34_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m34_363 -> m34_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m34_363 -> m34_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m35_2 -> m35_3  [key=0, style=solid];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_5  [key=2, style=dotted];
m35_3 -> m35_6  [key=2, style=dotted];
m35_4 -> m35_2  [color=blue, key=0, style=bold];
m35_11 -> m35_12  [key=0, style=solid];
m35_11 -> m35_17  [key=2, style=dotted];
m35_11 -> m35_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_10  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m35_7 -> m35_11  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m35_7 -> m35_12  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m35_7 -> m35_13  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m35_7 -> m35_14  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_10  [key=0, style=solid];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_17  [key=2, style=dotted];
m35_10 -> m35_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_12 -> m35_13  [key=0, style=solid];
m35_12 -> m35_17  [key=2, style=dotted];
m35_12 -> m35_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_17  [key=2, style=dotted];
m35_13 -> m35_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_17  [key=2, style=dotted];
m35_14 -> m35_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_9 -> m35_15  [key=0, style=solid];
m35_9 -> m35_16  [key=2, style=dotted];
m35_15 -> m35_7  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_0  [color=blue, key=0, style=bold];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> n7  [key=2, style=dotted];
m35_24 -> m35_22  [key=2, style=dotted];
m35_18 -> m35_19  [key=0, style=solid];
m35_23 -> m35_24  [key=0, style=solid];
m35_26 -> m35_27  [key=0, style=solid];
m35_30 -> m35_31  [key=0, style=solid];
m35_34 -> m35_35  [key=0, style=solid];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> n7  [key=2, style=dotted];
m35_19 -> m35_22  [key=2, style=dotted];
m35_20 -> m35_18  [color=blue, key=0, style=bold];
m35_25 -> m35_23  [color=blue, key=0, style=bold];
m35_27 -> m35_28  [key=0, style=solid];
m35_27 -> m35_29  [key=2, style=dotted];
m35_28 -> m35_26  [color=blue, key=0, style=bold];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_33  [key=2, style=dotted];
m35_32 -> m35_30  [color=blue, key=0, style=bold];
m35_35 -> m35_36  [key=0, style=solid];
m35_35 -> m35_37  [key=2, style=dotted];
m35_36 -> m35_34  [color=blue, key=0, style=bold];
m35_38 -> m35_10  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m35_38 -> m35_19  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m35_38 -> m35_11  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m35_38 -> m35_24  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m35_38 -> m35_12  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m35_38 -> m35_27  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m36_6 -> m36_7  [key=0, style=solid];
m36_7 -> m36_8  [key=0, style=solid];
m36_7 -> m36_9  [key=2, style=dotted];
m36_8 -> m36_6  [color=blue, key=0, style=bold];
m36_0 -> m36_1  [key=0, style=solid];
m36_0 -> m36_2  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_4  [key=2, style=dotted];
m36_2 -> m36_3  [key=0, style=solid];
m36_2 -> m36_5  [key=2, style=dotted];
m36_3 -> m36_0  [color=blue, key=0, style=bold];
m37_3 -> m37_4  [key=0, style=solid];
m37_4 -> m37_5  [key=0, style=solid];
m37_5 -> m37_6  [key=0, style=solid];
m37_5 -> m37_7  [key=2, style=dotted];
m37_5 -> m37_8  [key=2, style=dotted];
m37_6 -> m37_3  [color=blue, key=0, style=bold];
m37_9 -> m37_10  [key=0, style=solid];
m37_9 -> m37_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m37_10 -> m37_11  [key=0, style=solid];
m37_10 -> m37_13  [key=2, style=dotted];
m37_11 -> m37_12  [key=0, style=solid];
m37_11 -> m37_14  [key=2, style=dotted];
m37_12 -> m37_9  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_2  [key=0, style=solid];
m37_2 -> m37_0  [color=blue, key=0, style=bold];
m37_15 -> m37_1  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint", style=dashed];
m37_15 -> m37_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint", style=dashed];
m37_15 -> m37_10  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint", style=dashed];
m37_15 -> m37_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint", style=dashed];
m38_452 -> m38_453  [key=0, style=solid];
m38_452 -> m38_456  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_453 -> m38_454  [key=0, style=solid];
m38_453 -> m38_31  [key=2, style=dotted];
m38_453 -> m38_455  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_454 -> m38_452  [color=blue, key=0, style=bold];
m38_769 -> m38_770  [key=0, style=solid];
m38_769 -> m38_771  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_769 -> m38_775  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_770 -> m38_771  [key=0, style=solid];
m38_770 -> m38_774  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_770 -> m38_770  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_771 -> m38_772  [key=0, style=solid];
m38_771 -> m38_31  [key=2, style=dotted];
m38_771 -> m38_773  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_772 -> m38_769  [color=blue, key=0, style=bold];
m38_535 -> m38_536  [key=0, style=solid];
m38_535 -> m38_539  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_536 -> m38_537  [key=0, style=solid];
m38_536 -> m38_31  [key=2, style=dotted];
m38_536 -> m38_538  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_537 -> m38_535  [color=blue, key=0, style=bold];
m38_440 -> m38_441  [key=0, style=solid];
m38_440 -> m38_444  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_441 -> m38_442  [key=0, style=solid];
m38_441 -> m38_31  [key=2, style=dotted];
m38_441 -> m38_443  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_442 -> m38_440  [color=blue, key=0, style=bold];
m38_635 -> m38_636  [key=0, style=solid];
m38_635 -> m38_639  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_635 -> m38_640  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_636 -> m38_637  [key=0, style=solid];
m38_636 -> m38_31  [key=2, style=dotted];
m38_636 -> m38_638  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_637 -> m38_635  [color=blue, key=0, style=bold];
m38_839 -> m38_840  [key=0, style=solid];
m38_839 -> m38_841  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_839 -> m38_845  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_840 -> m38_841  [key=0, style=solid];
m38_840 -> m38_844  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_840 -> m38_840  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_841 -> m38_842  [key=0, style=solid];
m38_841 -> m38_31  [key=2, style=dotted];
m38_841 -> m38_843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_842 -> m38_839  [color=blue, key=0, style=bold];
m38_908 -> m38_909  [key=0, style=solid];
m38_908 -> m38_910  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_908 -> m38_914  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_909 -> m38_910  [key=0, style=solid];
m38_909 -> m38_913  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_909 -> m38_909  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_910 -> m38_911  [key=0, style=solid];
m38_910 -> m38_31  [key=2, style=dotted];
m38_910 -> m38_912  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_911 -> m38_908  [color=blue, key=0, style=bold];
m38_478 -> m38_479  [key=0, style=solid];
m38_478 -> m38_482  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_479 -> m38_480  [key=0, style=solid];
m38_479 -> m38_31  [key=2, style=dotted];
m38_479 -> m38_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_480 -> m38_478  [color=blue, key=0, style=bold];
m38_547 -> m38_548  [key=0, style=solid];
m38_547 -> m38_551  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_548 -> m38_549  [key=0, style=solid];
m38_548 -> m38_31  [key=2, style=dotted];
m38_548 -> m38_550  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_549 -> m38_547  [color=blue, key=0, style=bold];
m38_678 -> m38_679  [key=0, style=solid];
m38_678 -> m38_683  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_679 -> m38_680  [key=0, style=solid];
m38_679 -> m38_31  [key=2, style=dotted];
m38_679 -> m38_681  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_680 -> m38_678  [color=blue, key=0, style=bold];
m38_27 -> m38_28  [key=0, style=solid];
m38_27 -> m38_29  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_27 -> m38_35  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_28 -> m38_29  [key=0, style=solid];
m38_28 -> m38_33  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_28 -> m38_34  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_28 -> m38_28  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_29 -> m38_30  [key=0, style=solid];
m38_29 -> m38_31  [key=2, style=dotted];
m38_29 -> m38_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_30 -> m38_27  [color=blue, key=0, style=bold];
m38_825 -> m38_826  [key=0, style=solid];
m38_825 -> m38_829  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_825 -> m38_833  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_826 -> m38_827  [key=0, style=solid];
m38_826 -> m38_31  [key=2, style=dotted];
m38_826 -> m38_828  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_827 -> m38_825  [color=blue, key=0, style=bold];
m38_236 -> m38_237  [key=0, style=solid];
m38_237 -> m38_238  [key=0, style=solid];
m38_237 -> m38_41  [key=2, style=dotted];
m38_237 -> m38_42  [key=2, style=dotted];
m38_238 -> m38_236  [color=blue, key=0, style=bold];
m38_509 -> m38_510  [key=0, style=solid];
m38_509 -> m38_513  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_510 -> m38_511  [key=0, style=solid];
m38_510 -> m38_31  [key=2, style=dotted];
m38_510 -> m38_512  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_511 -> m38_509  [color=blue, key=0, style=bold];
m38_326 -> m38_327  [key=0, style=solid];
m38_326 -> m38_330  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_327 -> m38_328  [key=0, style=solid];
m38_327 -> m38_31  [key=2, style=dotted];
m38_327 -> m38_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_328 -> m38_326  [color=blue, key=0, style=bold];
m38_378 -> m38_379  [key=0, style=solid];
m38_378 -> m38_382  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_379 -> m38_380  [key=0, style=solid];
m38_379 -> m38_31  [key=2, style=dotted];
m38_379 -> m38_381  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_380 -> m38_378  [color=blue, key=0, style=bold];
m38_690 -> m38_691  [key=0, style=solid];
m38_690 -> m38_694  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_690 -> m38_697  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_691 -> m38_692  [key=0, style=solid];
m38_691 -> m38_31  [key=2, style=dotted];
m38_691 -> m38_693  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_692 -> m38_690  [color=blue, key=0, style=bold];
m38_211 -> m38_212  [key=0, style=solid];
m38_211 -> m38_216  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_211 -> m38_224  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_212 -> m38_213  [key=0, style=solid];
m38_212 -> m38_7  [key=2, style=dotted];
m38_212 -> m38_214  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m38_212 -> m38_216  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m38_212 -> m38_225  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m38_216 -> m38_217  [key=0, style=solid];
m38_216 -> m38_219  [key=2, style=dotted];
m38_216 -> m38_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_213 -> m38_214  [key=0, style=solid];
m38_213 -> m38_5  [key=2, style=dotted];
m38_213 -> m38_215  [color=darkseagreen4, key=1, label=correctProvider, style=dashed];
m38_214 -> m38_215  [key=0, style=solid];
m38_214 -> m38_6  [key=2, style=dotted];
m38_214 -> m38_8  [key=2, style=dotted];
m38_214 -> m38_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_215 -> m38_216  [key=0, style=solid];
m38_215 -> m38_218  [key=2, style=dotted];
m38_217 -> m38_211  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_5  [key=2, style=dotted];
m38_1 -> m38_3  [color=darkseagreen4, key=1, label=defaultProvider, style=dashed];
m38_2 -> m38_3  [key=0, style=solid];
m38_2 -> m38_6  [key=2, style=dotted];
m38_2 -> m38_7  [key=2, style=dotted];
m38_2 -> m38_8  [key=2, style=dotted];
m38_2 -> m38_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_3 -> m38_4  [key=0, style=solid];
m38_3 -> m38_9  [key=2, style=dotted];
m38_4 -> m38_0  [color=blue, key=0, style=bold];
m38_44 -> m38_933  [key=0, style=solid];
m38_44 -> m38_936  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m38_933 -> m38_934  [key=0, style=solid];
m38_933 -> m38_939  [key=2, style=dotted];
m38_933 -> m38_940  [key=2, style=dotted];
m38_933 -> m38_730  [key=2, style=dotted];
m38_933 -> m38_935  [color=darkseagreen4, key=1, label=storage, style=dashed];
m38_936 -> m38_937  [key=0, style=solid];
m38_936 -> m38_932  [key=2, style=dotted];
m38_934 -> m38_935  [key=0, style=solid];
m38_934 -> m38_6  [key=2, style=dotted];
m38_934 -> m38_8  [key=2, style=dotted];
m38_934 -> m38_943  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_935 -> m38_936  [key=0, style=solid];
m38_935 -> m38_941  [key=2, style=dotted];
m38_935 -> m38_937  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m38_937 -> m38_938  [key=0, style=solid];
m38_937 -> m38_942  [key=2, style=dotted];
m38_938 -> m38_44  [color=blue, key=0, style=bold];
m38_605 -> m38_606  [key=0, style=solid];
m38_605 -> m38_609  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_606 -> m38_607  [key=0, style=solid];
m38_606 -> m38_31  [key=2, style=dotted];
m38_606 -> m38_608  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_607 -> m38_605  [color=blue, key=0, style=bold];
m38_178 -> m38_179  [key=0, style=solid];
m38_178 -> m38_180  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_178 -> m38_188  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_179 -> m38_180  [key=0, style=solid];
m38_179 -> m38_183  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_179 -> m38_28  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_180 -> m38_181  [key=0, style=solid];
m38_180 -> m38_31  [key=2, style=dotted];
m38_180 -> m38_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_181 -> m38_178  [color=blue, key=0, style=bold];
m38_523 -> m38_524  [key=0, style=solid];
m38_523 -> m38_527  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_524 -> m38_525  [key=0, style=solid];
m38_524 -> m38_31  [key=2, style=dotted];
m38_524 -> m38_526  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_525 -> m38_523  [color=blue, key=0, style=bold];
m38_703 -> m38_704  [key=0, style=solid];
m38_703 -> m38_705  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_703 -> m38_709  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_704 -> m38_705  [key=0, style=solid];
m38_704 -> m38_708  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_704 -> m38_704  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_705 -> m38_706  [key=0, style=solid];
m38_705 -> m38_31  [key=2, style=dotted];
m38_705 -> m38_707  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_706 -> m38_703  [color=blue, key=0, style=bold];
m38_946 -> m38_947  [key=0, style=solid];
m38_10 -> m38_11  [key=0, style=solid];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_13  [key=2, style=dotted];
m38_12 -> m38_10  [color=blue, key=0, style=bold];
m38_20 -> m38_21  [key=0, style=solid];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_23  [key=2, style=dotted];
m38_22 -> m38_20  [color=blue, key=0, style=bold];
m38_24 -> m38_25  [key=0, style=solid];
m38_25 -> m38_26  [key=0, style=solid];
m38_26 -> m38_24  [color=blue, key=0, style=bold];
m38_35 -> m38_36  [key=0, style=solid];
m38_35 -> m38_44  [key=2, style=dotted];
m38_35 -> m38_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_41  [key=2, style=dotted];
m38_33 -> m38_42  [key=2, style=dotted];
m38_33 -> m38_43  [key=2, style=dotted];
m38_33 -> m38_35  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_33 -> m38_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_33 -> m38_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_34 -> m38_35  [key=0, style=solid];
m38_34 -> m38_41  [key=2, style=dotted];
m38_34 -> m38_42  [key=2, style=dotted];
m38_34 -> m38_43  [key=2, style=dotted];
m38_34 -> m38_38  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_34  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_32 -> m38_35  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_32 -> m38_36  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_32 -> m38_38  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_45  [key=2, style=dotted];
m38_38 -> m38_39  [key=0, style=solid];
m38_38 -> m38_45  [key=2, style=dotted];
m38_50 -> m38_51  [key=0, style=solid];
m38_50 -> m38_52  [key=2, style=dotted];
m38_50 -> m38_53  [key=2, style=dotted];
m38_49 -> m38_50  [key=0, style=solid];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_46  [key=2, style=dotted];
m38_37 -> m38_47  [key=2, style=dotted];
m38_39 -> m38_40  [key=0, style=solid];
m38_39 -> m38_48  [key=2, style=dotted];
m38_40 -> m38_32  [color=blue, key=0, style=bold];
m38_51 -> m38_49  [color=blue, key=0, style=bold];
m38_61 -> m38_62  [key=0, style=solid];
m38_61 -> m38_44  [key=2, style=dotted];
m38_61 -> m38_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_59 -> m38_60  [key=0, style=solid];
m38_59 -> m38_41  [key=2, style=dotted];
m38_59 -> m38_42  [key=2, style=dotted];
m38_59 -> m38_43  [key=2, style=dotted];
m38_59 -> m38_61  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_59 -> m38_69  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_59 -> m38_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_60 -> m38_61  [key=0, style=solid];
m38_60 -> m38_41  [key=2, style=dotted];
m38_60 -> m38_42  [key=2, style=dotted];
m38_60 -> m38_43  [key=2, style=dotted];
m38_60 -> m38_64  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m38_58 -> m38_59  [key=0, style=solid];
m38_58 -> m38_60  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_58 -> m38_61  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_58 -> m38_62  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_58 -> m38_64  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_62 -> m38_63  [key=0, style=solid];
m38_62 -> m38_45  [key=2, style=dotted];
m38_64 -> m38_65  [key=0, style=solid];
m38_64 -> m38_45  [key=2, style=dotted];
m38_69 -> m38_70  [key=0, style=solid];
m38_69 -> m38_71  [key=2, style=dotted];
m38_68 -> m38_69  [key=0, style=solid];
m38_63 -> m38_64  [key=0, style=solid];
m38_63 -> m38_48  [key=2, style=dotted];
m38_65 -> m38_66  [key=0, style=solid];
m38_65 -> m38_67  [key=2, style=dotted];
m38_66 -> m38_58  [color=blue, key=0, style=bold];
m38_70 -> m38_68  [color=blue, key=0, style=bold];
m38_83 -> m38_84  [key=0, style=solid];
m38_83 -> m38_44  [key=2, style=dotted];
m38_83 -> m38_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_77 -> m38_78  [key=0, style=solid];
m38_77 -> m38_41  [key=2, style=dotted];
m38_77 -> m38_42  [key=2, style=dotted];
m38_77 -> m38_43  [key=2, style=dotted];
m38_77 -> m38_83  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_77 -> m38_110  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_77 -> m38_84  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_77 -> m38_91  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_78 -> m38_79  [key=0, style=solid];
m38_78 -> m38_41  [key=2, style=dotted];
m38_78 -> m38_42  [key=2, style=dotted];
m38_78 -> m38_43  [key=2, style=dotted];
m38_78 -> m38_87  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m38_76 -> m38_77  [key=0, style=solid];
m38_76 -> m38_78  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_76 -> m38_83  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_76 -> m38_84  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_76 -> m38_87  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_76 -> m38_90  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_84 -> m38_85  [key=0, style=solid];
m38_84 -> m38_45  [key=2, style=dotted];
m38_84 -> m38_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m38_87 -> m38_88  [key=0, style=solid];
m38_87 -> m38_45  [key=2, style=dotted];
m38_87 -> m38_89  [color=darkseagreen4, key=1, label=anotherJob, style=dashed];
m38_90 -> m38_91  [key=0, style=solid];
m38_90 -> m38_41  [key=2, style=dotted];
m38_90 -> m38_42  [key=2, style=dotted];
m38_90 -> m38_92  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_90 -> m38_93  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_90 -> m38_94  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_90 -> m38_95  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_110 -> m38_111  [key=0, style=solid];
m38_110 -> m38_112  [key=2, style=dotted];
m38_91 -> m38_92  [key=0, style=solid];
m38_91 -> m38_43  [key=2, style=dotted];
m38_91 -> m38_19  [key=2, style=dotted];
m38_79 -> m38_80  [key=0, style=solid];
m38_79 -> m38_97  [key=2, style=dotted];
m38_79 -> m38_81  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_79 -> m38_82  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_79 -> m38_83  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_79 -> m38_110  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_80 -> m38_81  [key=0, style=solid];
m38_80 -> m38_6  [key=2, style=dotted];
m38_80 -> m38_8  [key=2, style=dotted];
m38_80 -> m38_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_81 -> m38_82  [key=0, style=solid];
m38_81 -> m38_6  [key=2, style=dotted];
m38_81 -> m38_8  [key=2, style=dotted];
m38_81 -> m38_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_82 -> m38_83  [key=0, style=solid];
m38_82 -> m38_6  [key=2, style=dotted];
m38_82 -> m38_98  [key=2, style=dotted];
m38_82 -> m38_8  [key=2, style=dotted];
m38_82 -> m38_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_99 -> m38_100  [key=0, style=solid];
m38_102 -> m38_103  [key=0, style=solid];
m38_105 -> m38_106  [key=0, style=solid];
m38_109 -> m38_110  [key=0, style=solid];
m38_85 -> m38_86  [key=0, style=solid];
m38_85 -> m38_19  [key=2, style=dotted];
m38_86 -> m38_87  [key=0, style=solid];
m38_86 -> m38_67  [key=2, style=dotted];
m38_88 -> m38_89  [key=0, style=solid];
m38_88 -> m38_48  [key=2, style=dotted];
m38_89 -> m38_90  [key=0, style=solid];
m38_89 -> m38_48  [key=2, style=dotted];
m38_92 -> m38_93  [key=0, style=solid];
m38_92 -> m38_19  [key=2, style=dotted];
m38_93 -> m38_94  [key=0, style=solid];
m38_93 -> m38_19  [key=2, style=dotted];
m38_94 -> m38_95  [key=0, style=solid];
m38_94 -> m38_67  [key=2, style=dotted];
m38_95 -> m38_96  [key=0, style=solid];
m38_95 -> m38_19  [key=2, style=dotted];
m38_96 -> m38_76  [color=blue, key=0, style=bold];
m38_100 -> m38_101  [key=0, style=solid];
m38_101 -> m38_99  [color=blue, key=0, style=bold];
m38_103 -> m38_104  [key=0, style=solid];
m38_104 -> m38_102  [color=blue, key=0, style=bold];
m38_106 -> m38_107  [key=0, style=solid];
m38_106 -> m38_108  [key=2, style=dotted];
m38_107 -> m38_105  [color=blue, key=0, style=bold];
m38_111 -> m38_109  [color=blue, key=0, style=bold];
m38_123 -> m38_124  [key=0, style=solid];
m38_123 -> m38_44  [key=2, style=dotted];
m38_123 -> m38_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_118 -> m38_119  [key=0, style=solid];
m38_118 -> m38_41  [key=2, style=dotted];
m38_118 -> m38_42  [key=2, style=dotted];
m38_118 -> m38_43  [key=2, style=dotted];
m38_118 -> m38_123  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_118 -> m38_142  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_118 -> m38_124  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_117 -> m38_118  [key=0, style=solid];
m38_117 -> m38_123  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_117 -> m38_124  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_117 -> m38_127  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_124 -> m38_125  [key=0, style=solid];
m38_124 -> m38_45  [key=2, style=dotted];
m38_124 -> m38_126  [color=darkseagreen4, key=1, label=job, style=dashed];
m38_127 -> m38_128  [key=0, style=solid];
m38_127 -> m38_41  [key=2, style=dotted];
m38_127 -> m38_42  [key=2, style=dotted];
m38_127 -> m38_129  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_127 -> m38_130  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_119 -> m38_120  [key=0, style=solid];
m38_119 -> m38_97  [key=2, style=dotted];
m38_119 -> m38_121  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_119 -> m38_122  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_119 -> m38_123  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_119 -> m38_142  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_142 -> m38_143  [key=0, style=solid];
m38_142 -> m38_112  [key=2, style=dotted];
m38_120 -> m38_121  [key=0, style=solid];
m38_120 -> m38_6  [key=2, style=dotted];
m38_120 -> m38_8  [key=2, style=dotted];
m38_120 -> m38_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_121 -> m38_122  [key=0, style=solid];
m38_121 -> m38_6  [key=2, style=dotted];
m38_121 -> m38_8  [key=2, style=dotted];
m38_121 -> m38_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_122 -> m38_123  [key=0, style=solid];
m38_122 -> m38_6  [key=2, style=dotted];
m38_122 -> m38_8  [key=2, style=dotted];
m38_122 -> m38_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_132 -> m38_133  [key=0, style=solid];
m38_135 -> m38_136  [key=0, style=solid];
m38_138 -> m38_139  [key=0, style=solid];
m38_141 -> m38_142  [key=0, style=solid];
m38_125 -> m38_126  [key=0, style=solid];
m38_125 -> m38_19  [key=2, style=dotted];
m38_126 -> m38_127  [key=0, style=solid];
m38_126 -> m38_67  [key=2, style=dotted];
m38_128 -> m38_129  [key=0, style=solid];
m38_128 -> m38_19  [key=2, style=dotted];
m38_129 -> m38_130  [key=0, style=solid];
m38_129 -> m38_19  [key=2, style=dotted];
m38_130 -> m38_131  [key=0, style=solid];
m38_130 -> m38_19  [key=2, style=dotted];
m38_131 -> m38_117  [color=blue, key=0, style=bold];
m38_133 -> m38_134  [key=0, style=solid];
m38_134 -> m38_132  [color=blue, key=0, style=bold];
m38_136 -> m38_137  [key=0, style=solid];
m38_137 -> m38_135  [color=blue, key=0, style=bold];
m38_139 -> m38_140  [key=0, style=solid];
m38_139 -> m38_108  [key=2, style=dotted];
m38_140 -> m38_138  [color=blue, key=0, style=bold];
m38_143 -> m38_141  [color=blue, key=0, style=bold];
m38_154 -> m38_155  [key=0, style=solid];
m38_154 -> m38_44  [key=2, style=dotted];
m38_154 -> m38_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_149 -> m38_150  [key=0, style=solid];
m38_149 -> m38_41  [key=2, style=dotted];
m38_149 -> m38_42  [key=2, style=dotted];
m38_149 -> m38_43  [key=2, style=dotted];
m38_149 -> m38_154  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_149 -> m38_175  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_149 -> m38_155  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_149 -> m38_159  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_148 -> m38_149  [key=0, style=solid];
m38_148 -> m38_154  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_148 -> m38_155  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_148 -> m38_158  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_155 -> m38_156  [key=0, style=solid];
m38_155 -> m38_45  [key=2, style=dotted];
m38_155 -> m38_157  [color=darkseagreen4, key=1, label=job, style=dashed];
m38_158 -> m38_159  [key=0, style=solid];
m38_158 -> m38_41  [key=2, style=dotted];
m38_158 -> m38_42  [key=2, style=dotted];
m38_158 -> m38_160  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_158 -> m38_161  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_158 -> m38_162  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_158 -> m38_163  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_150 -> m38_151  [key=0, style=solid];
m38_150 -> m38_97  [key=2, style=dotted];
m38_150 -> m38_152  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_150 -> m38_153  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_150 -> m38_154  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_150 -> m38_175  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_175 -> m38_176  [key=0, style=solid];
m38_175 -> m38_177  [key=2, style=dotted];
m38_159 -> m38_160  [key=0, style=solid];
m38_159 -> m38_43  [key=2, style=dotted];
m38_159 -> m38_19  [key=2, style=dotted];
m38_151 -> m38_152  [key=0, style=solid];
m38_151 -> m38_6  [key=2, style=dotted];
m38_151 -> m38_8  [key=2, style=dotted];
m38_151 -> m38_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_152 -> m38_153  [key=0, style=solid];
m38_152 -> m38_6  [key=2, style=dotted];
m38_152 -> m38_8  [key=2, style=dotted];
m38_152 -> m38_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_153 -> m38_154  [key=0, style=solid];
m38_153 -> m38_6  [key=2, style=dotted];
m38_153 -> m38_98  [key=2, style=dotted];
m38_153 -> m38_8  [key=2, style=dotted];
m38_153 -> m38_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_165 -> m38_166  [key=0, style=solid];
m38_168 -> m38_169  [key=0, style=solid];
m38_171 -> m38_172  [key=0, style=solid];
m38_174 -> m38_175  [key=0, style=solid];
m38_156 -> m38_157  [key=0, style=solid];
m38_156 -> m38_48  [key=2, style=dotted];
m38_157 -> m38_158  [key=0, style=solid];
m38_157 -> m38_48  [key=2, style=dotted];
m38_160 -> m38_161  [key=0, style=solid];
m38_160 -> m38_19  [key=2, style=dotted];
m38_161 -> m38_162  [key=0, style=solid];
m38_161 -> m38_19  [key=2, style=dotted];
m38_162 -> m38_163  [key=0, style=solid];
m38_162 -> m38_67  [key=2, style=dotted];
m38_163 -> m38_164  [key=0, style=solid];
m38_163 -> m38_19  [key=2, style=dotted];
m38_164 -> m38_148  [color=blue, key=0, style=bold];
m38_166 -> m38_167  [key=0, style=solid];
m38_167 -> m38_165  [color=blue, key=0, style=bold];
m38_169 -> m38_170  [key=0, style=solid];
m38_170 -> m38_168  [color=blue, key=0, style=bold];
m38_172 -> m38_173  [key=0, style=solid];
m38_172 -> m38_108  [key=2, style=dotted];
m38_173 -> m38_171  [color=blue, key=0, style=bold];
m38_176 -> m38_174  [color=blue, key=0, style=bold];
m38_188 -> m38_189  [key=0, style=solid];
m38_188 -> m38_44  [key=2, style=dotted];
m38_188 -> m38_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_183 -> m38_184  [key=0, style=solid];
m38_183 -> m38_41  [key=2, style=dotted];
m38_183 -> m38_42  [key=2, style=dotted];
m38_183 -> m38_43  [key=2, style=dotted];
m38_183 -> m38_188  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_183 -> m38_209  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_183 -> m38_189  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_183 -> m38_193  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_182 -> m38_183  [key=0, style=solid];
m38_182 -> m38_188  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_182 -> m38_189  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_182 -> m38_192  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_189 -> m38_190  [key=0, style=solid];
m38_189 -> m38_45  [key=2, style=dotted];
m38_189 -> m38_191  [color=darkseagreen4, key=1, label=job, style=dashed];
m38_192 -> m38_193  [key=0, style=solid];
m38_192 -> m38_41  [key=2, style=dotted];
m38_192 -> m38_42  [key=2, style=dotted];
m38_192 -> m38_194  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_192 -> m38_195  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_192 -> m38_196  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_192 -> m38_197  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m38_184 -> m38_185  [key=0, style=solid];
m38_184 -> m38_97  [key=2, style=dotted];
m38_184 -> m38_186  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_184 -> m38_187  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_184 -> m38_188  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_184 -> m38_209  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_209 -> m38_210  [key=0, style=solid];
m38_209 -> m38_177  [key=2, style=dotted];
m38_193 -> m38_194  [key=0, style=solid];
m38_193 -> m38_43  [key=2, style=dotted];
m38_193 -> m38_19  [key=2, style=dotted];
m38_185 -> m38_186  [key=0, style=solid];
m38_185 -> m38_6  [key=2, style=dotted];
m38_185 -> m38_8  [key=2, style=dotted];
m38_185 -> m38_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_186 -> m38_187  [key=0, style=solid];
m38_186 -> m38_6  [key=2, style=dotted];
m38_186 -> m38_8  [key=2, style=dotted];
m38_186 -> m38_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_187 -> m38_188  [key=0, style=solid];
m38_187 -> m38_6  [key=2, style=dotted];
m38_187 -> m38_8  [key=2, style=dotted];
m38_187 -> m38_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_199 -> m38_200  [key=0, style=solid];
m38_202 -> m38_203  [key=0, style=solid];
m38_205 -> m38_206  [key=0, style=solid];
m38_208 -> m38_209  [key=0, style=solid];
m38_190 -> m38_191  [key=0, style=solid];
m38_190 -> m38_48  [key=2, style=dotted];
m38_191 -> m38_192  [key=0, style=solid];
m38_191 -> m38_48  [key=2, style=dotted];
m38_194 -> m38_195  [key=0, style=solid];
m38_194 -> m38_19  [key=2, style=dotted];
m38_195 -> m38_196  [key=0, style=solid];
m38_195 -> m38_19  [key=2, style=dotted];
m38_196 -> m38_197  [key=0, style=solid];
m38_196 -> m38_67  [key=2, style=dotted];
m38_197 -> m38_198  [key=0, style=solid];
m38_197 -> m38_19  [key=2, style=dotted];
m38_198 -> m38_182  [color=blue, key=0, style=bold];
m38_200 -> m38_201  [key=0, style=solid];
m38_201 -> m38_199  [color=blue, key=0, style=bold];
m38_203 -> m38_204  [key=0, style=solid];
m38_204 -> m38_202  [color=blue, key=0, style=bold];
m38_206 -> m38_207  [key=0, style=solid];
m38_206 -> m38_108  [key=2, style=dotted];
m38_207 -> m38_205  [color=blue, key=0, style=bold];
m38_210 -> m38_208  [color=blue, key=0, style=bold];
m38_224 -> m38_225  [key=0, style=solid];
m38_224 -> m38_44  [key=2, style=dotted];
m38_224 -> m38_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_225 -> m38_226  [key=0, style=solid];
m38_225 -> m38_227  [key=2, style=dotted];
m38_225 -> m38_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_220 -> m38_221  [key=0, style=solid];
m38_223 -> m38_224  [key=0, style=solid];
m38_221 -> m38_222  [key=0, style=solid];
m38_221 -> m38_13  [key=2, style=dotted];
m38_222 -> m38_220  [color=blue, key=0, style=bold];
m38_228 -> m38_229  [key=0, style=solid];
m38_226 -> m38_223  [color=blue, key=0, style=bold];
m38_232 -> m38_233  [key=0, style=solid];
m38_229 -> m38_230  [key=0, style=solid];
m38_229 -> m38_231  [key=2, style=dotted];
m38_230 -> m38_228  [color=blue, key=0, style=bold];
m38_233 -> m38_234  [key=0, style=solid];
m38_233 -> m38_18  [key=2, style=dotted];
m38_233 -> m38_235  [key=2, style=dotted];
m38_234 -> m38_232  [color=blue, key=0, style=bold];
m38_243 -> m38_244  [key=0, style=solid];
m38_243 -> m38_44  [key=2, style=dotted];
m38_243 -> m38_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_242 -> m38_243  [key=0, style=solid];
m38_242 -> m38_244  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_244 -> m38_245  [key=0, style=solid];
m38_244 -> m38_41  [key=2, style=dotted];
m38_244 -> m38_42  [key=2, style=dotted];
m38_244 -> m38_246  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_244 -> m38_247  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_249 -> m38_250  [key=0, style=solid];
m38_245 -> m38_246  [key=0, style=solid];
m38_245 -> m38_19  [key=2, style=dotted];
m38_246 -> m38_247  [key=0, style=solid];
m38_246 -> m38_19  [key=2, style=dotted];
m38_247 -> m38_248  [key=0, style=solid];
m38_247 -> m38_19  [key=2, style=dotted];
m38_248 -> m38_242  [color=blue, key=0, style=bold];
m38_250 -> m38_251  [key=0, style=solid];
m38_250 -> m38_252  [key=2, style=dotted];
m38_251 -> m38_249  [color=blue, key=0, style=bold];
m38_257 -> m38_258  [key=0, style=solid];
m38_257 -> m38_44  [key=2, style=dotted];
m38_257 -> m38_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_256 -> m38_257  [key=0, style=solid];
m38_256 -> m38_258  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_258 -> m38_259  [key=0, style=solid];
m38_258 -> m38_41  [key=2, style=dotted];
m38_258 -> m38_42  [key=2, style=dotted];
m38_258 -> m38_260  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_258 -> m38_261  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_258 -> m38_262  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_266 -> m38_267  [key=0, style=solid];
m38_259 -> m38_260  [key=0, style=solid];
m38_259 -> m38_19  [key=2, style=dotted];
m38_260 -> m38_261  [key=0, style=solid];
m38_260 -> m38_19  [key=2, style=dotted];
m38_261 -> m38_262  [key=0, style=solid];
m38_261 -> m38_67  [key=2, style=dotted];
m38_262 -> m38_263  [key=0, style=solid];
m38_262 -> m38_264  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m38_263 -> m38_264  [key=0, style=solid];
m38_263 -> m38_46  [key=2, style=dotted];
m38_263 -> m38_47  [key=2, style=dotted];
m38_264 -> m38_265  [key=0, style=solid];
m38_264 -> m38_46  [key=2, style=dotted];
m38_264 -> m38_47  [key=2, style=dotted];
m38_265 -> m38_256  [color=blue, key=0, style=bold];
m38_267 -> m38_268  [key=0, style=solid];
m38_267 -> m38_269  [key=2, style=dotted];
m38_267 -> m38_270  [key=2, style=dotted];
m38_268 -> m38_266  [color=blue, key=0, style=bold];
m38_275 -> m38_276  [key=0, style=solid];
m38_275 -> m38_44  [key=2, style=dotted];
m38_275 -> m38_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_274 -> m38_275  [key=0, style=solid];
m38_274 -> m38_276  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_276 -> m38_277  [key=0, style=solid];
m38_276 -> m38_18  [key=2, style=dotted];
m38_276 -> m38_42  [key=2, style=dotted];
m38_279 -> m38_280  [key=0, style=solid];
m38_279 -> m38_281  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_277 -> m38_278  [key=0, style=solid];
m38_277 -> m38_19  [key=2, style=dotted];
m38_278 -> m38_274  [color=blue, key=0, style=bold];
m38_280 -> m38_281  [key=0, style=solid];
m38_280 -> m38_252  [key=2, style=dotted];
m38_281 -> m38_282  [key=0, style=solid];
m38_281 -> m38_252  [key=2, style=dotted];
m38_282 -> m38_279  [color=blue, key=0, style=bold];
m38_287 -> m38_288  [key=0, style=solid];
m38_287 -> m38_44  [key=2, style=dotted];
m38_287 -> m38_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_286 -> m38_287  [key=0, style=solid];
m38_286 -> m38_288  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_288 -> m38_289  [key=0, style=solid];
m38_288 -> m38_41  [key=2, style=dotted];
m38_288 -> m38_42  [key=2, style=dotted];
m38_288 -> m38_290  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_288 -> m38_291  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_293 -> m38_294  [key=0, style=solid];
m38_289 -> m38_290  [key=0, style=solid];
m38_289 -> m38_19  [key=2, style=dotted];
m38_290 -> m38_291  [key=0, style=solid];
m38_290 -> m38_19  [key=2, style=dotted];
m38_291 -> m38_292  [key=0, style=solid];
m38_291 -> m38_19  [key=2, style=dotted];
m38_292 -> m38_286  [color=blue, key=0, style=bold];
m38_294 -> m38_295  [key=0, style=solid];
m38_294 -> m38_296  [key=2, style=dotted];
m38_295 -> m38_293  [color=blue, key=0, style=bold];
m38_301 -> m38_302  [key=0, style=solid];
m38_301 -> m38_44  [key=2, style=dotted];
m38_301 -> m38_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_300 -> m38_301  [key=0, style=solid];
m38_300 -> m38_302  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_302 -> m38_303  [key=0, style=solid];
m38_302 -> m38_41  [key=2, style=dotted];
m38_302 -> m38_42  [key=2, style=dotted];
m38_302 -> m38_304  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_302 -> m38_305  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_302 -> m38_306  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_310 -> m38_311  [key=0, style=solid];
m38_303 -> m38_304  [key=0, style=solid];
m38_303 -> m38_19  [key=2, style=dotted];
m38_304 -> m38_305  [key=0, style=solid];
m38_304 -> m38_19  [key=2, style=dotted];
m38_305 -> m38_306  [key=0, style=solid];
m38_305 -> m38_67  [key=2, style=dotted];
m38_306 -> m38_307  [key=0, style=solid];
m38_306 -> m38_308  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m38_307 -> m38_308  [key=0, style=solid];
m38_307 -> m38_46  [key=2, style=dotted];
m38_307 -> m38_47  [key=2, style=dotted];
m38_308 -> m38_309  [key=0, style=solid];
m38_308 -> m38_46  [key=2, style=dotted];
m38_308 -> m38_47  [key=2, style=dotted];
m38_309 -> m38_300  [color=blue, key=0, style=bold];
m38_311 -> m38_312  [key=0, style=solid];
m38_311 -> m38_269  [key=2, style=dotted];
m38_311 -> m38_313  [key=2, style=dotted];
m38_312 -> m38_310  [color=blue, key=0, style=bold];
m38_318 -> m38_319  [key=0, style=solid];
m38_318 -> m38_44  [key=2, style=dotted];
m38_318 -> m38_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_317 -> m38_318  [key=0, style=solid];
m38_317 -> m38_319  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_319 -> m38_320  [key=0, style=solid];
m38_319 -> m38_18  [key=2, style=dotted];
m38_319 -> m38_42  [key=2, style=dotted];
m38_322 -> m38_323  [key=0, style=solid];
m38_322 -> m38_324  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_320 -> m38_321  [key=0, style=solid];
m38_320 -> m38_19  [key=2, style=dotted];
m38_321 -> m38_317  [color=blue, key=0, style=bold];
m38_323 -> m38_324  [key=0, style=solid];
m38_323 -> m38_296  [key=2, style=dotted];
m38_324 -> m38_325  [key=0, style=solid];
m38_324 -> m38_296  [key=2, style=dotted];
m38_325 -> m38_322  [color=blue, key=0, style=bold];
m38_330 -> m38_331  [key=0, style=solid];
m38_330 -> m38_44  [key=2, style=dotted];
m38_330 -> m38_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_329 -> m38_330  [key=0, style=solid];
m38_329 -> m38_331  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_331 -> m38_332  [key=0, style=solid];
m38_331 -> m38_41  [key=2, style=dotted];
m38_331 -> m38_42  [key=2, style=dotted];
m38_331 -> m38_333  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_331 -> m38_334  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_336 -> m38_337  [key=0, style=solid];
m38_332 -> m38_333  [key=0, style=solid];
m38_332 -> m38_19  [key=2, style=dotted];
m38_333 -> m38_334  [key=0, style=solid];
m38_333 -> m38_19  [key=2, style=dotted];
m38_334 -> m38_335  [key=0, style=solid];
m38_334 -> m38_19  [key=2, style=dotted];
m38_335 -> m38_329  [color=blue, key=0, style=bold];
m38_337 -> m38_338  [key=0, style=solid];
m38_337 -> m38_339  [key=2, style=dotted];
m38_338 -> m38_336  [color=blue, key=0, style=bold];
m38_344 -> m38_345  [key=0, style=solid];
m38_344 -> m38_44  [key=2, style=dotted];
m38_344 -> m38_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_343 -> m38_344  [key=0, style=solid];
m38_343 -> m38_345  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_345 -> m38_346  [key=0, style=solid];
m38_345 -> m38_18  [key=2, style=dotted];
m38_345 -> m38_42  [key=2, style=dotted];
m38_348 -> m38_349  [key=0, style=solid];
m38_348 -> m38_350  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_346 -> m38_347  [key=0, style=solid];
m38_346 -> m38_19  [key=2, style=dotted];
m38_347 -> m38_343  [color=blue, key=0, style=bold];
m38_349 -> m38_350  [key=0, style=solid];
m38_349 -> m38_339  [key=2, style=dotted];
m38_350 -> m38_351  [key=0, style=solid];
m38_350 -> m38_339  [key=2, style=dotted];
m38_351 -> m38_348  [color=blue, key=0, style=bold];
m38_356 -> m38_357  [key=0, style=solid];
m38_356 -> m38_44  [key=2, style=dotted];
m38_356 -> m38_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_355 -> m38_356  [key=0, style=solid];
m38_355 -> m38_357  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_357 -> m38_358  [key=0, style=solid];
m38_357 -> m38_18  [key=2, style=dotted];
m38_357 -> m38_42  [key=2, style=dotted];
m38_360 -> m38_361  [key=0, style=solid];
m38_360 -> m38_362  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_358 -> m38_359  [key=0, style=solid];
m38_358 -> m38_19  [key=2, style=dotted];
m38_359 -> m38_355  [color=blue, key=0, style=bold];
m38_361 -> m38_362  [key=0, style=solid];
m38_361 -> m38_339  [key=2, style=dotted];
m38_362 -> m38_363  [key=0, style=solid];
m38_362 -> m38_339  [key=2, style=dotted];
m38_363 -> m38_360  [color=blue, key=0, style=bold];
m38_368 -> m38_369  [key=0, style=solid];
m38_368 -> m38_44  [key=2, style=dotted];
m38_368 -> m38_374  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_367 -> m38_368  [key=0, style=solid];
m38_367 -> m38_369  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_369 -> m38_370  [key=0, style=solid];
m38_369 -> m38_41  [key=2, style=dotted];
m38_369 -> m38_42  [key=2, style=dotted];
m38_369 -> m38_371  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_369 -> m38_372  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_374 -> m38_375  [key=0, style=solid];
m38_370 -> m38_371  [key=0, style=solid];
m38_370 -> m38_19  [key=2, style=dotted];
m38_371 -> m38_372  [key=0, style=solid];
m38_371 -> m38_19  [key=2, style=dotted];
m38_372 -> m38_373  [key=0, style=solid];
m38_372 -> m38_19  [key=2, style=dotted];
m38_373 -> m38_367  [color=blue, key=0, style=bold];
m38_375 -> m38_376  [key=0, style=solid];
m38_375 -> m38_377  [key=2, style=dotted];
m38_376 -> m38_374  [color=blue, key=0, style=bold];
m38_382 -> m38_383  [key=0, style=solid];
m38_382 -> m38_44  [key=2, style=dotted];
m38_382 -> m38_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_381 -> m38_382  [key=0, style=solid];
m38_381 -> m38_383  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_383 -> m38_384  [key=0, style=solid];
m38_383 -> m38_41  [key=2, style=dotted];
m38_383 -> m38_42  [key=2, style=dotted];
m38_386 -> m38_387  [key=0, style=solid];
m38_386 -> m38_388  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_384 -> m38_385  [key=0, style=solid];
m38_384 -> m38_19  [key=2, style=dotted];
m38_385 -> m38_381  [color=blue, key=0, style=bold];
m38_387 -> m38_388  [key=0, style=solid];
m38_387 -> m38_339  [key=2, style=dotted];
m38_388 -> m38_389  [key=0, style=solid];
m38_388 -> m38_377  [key=2, style=dotted];
m38_389 -> m38_386  [color=blue, key=0, style=bold];
m38_394 -> m38_395  [key=0, style=solid];
m38_394 -> m38_44  [key=2, style=dotted];
m38_394 -> m38_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_393 -> m38_394  [key=0, style=solid];
m38_393 -> m38_395  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_395 -> m38_396  [key=0, style=solid];
m38_395 -> m38_18  [key=2, style=dotted];
m38_395 -> m38_42  [key=2, style=dotted];
m38_398 -> m38_399  [key=0, style=solid];
m38_398 -> m38_400  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_396 -> m38_397  [key=0, style=solid];
m38_396 -> m38_19  [key=2, style=dotted];
m38_397 -> m38_393  [color=blue, key=0, style=bold];
m38_399 -> m38_400  [key=0, style=solid];
m38_399 -> m38_339  [key=2, style=dotted];
m38_400 -> m38_401  [key=0, style=solid];
m38_400 -> m38_402  [key=2, style=dotted];
m38_401 -> m38_398  [color=blue, key=0, style=bold];
m38_407 -> m38_408  [key=0, style=solid];
m38_407 -> m38_44  [key=2, style=dotted];
m38_407 -> m38_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_406 -> m38_407  [key=0, style=solid];
m38_406 -> m38_408  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_408 -> m38_409  [key=0, style=solid];
m38_408 -> m38_18  [key=2, style=dotted];
m38_408 -> m38_42  [key=2, style=dotted];
m38_411 -> m38_412  [key=0, style=solid];
m38_411 -> m38_413  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_409 -> m38_410  [key=0, style=solid];
m38_409 -> m38_19  [key=2, style=dotted];
m38_410 -> m38_406  [color=blue, key=0, style=bold];
m38_412 -> m38_413  [key=0, style=solid];
m38_412 -> m38_339  [key=2, style=dotted];
m38_413 -> m38_414  [key=0, style=solid];
m38_413 -> m38_402  [key=2, style=dotted];
m38_414 -> m38_411  [color=blue, key=0, style=bold];
m38_419 -> m38_420  [key=0, style=solid];
m38_419 -> m38_44  [key=2, style=dotted];
m38_419 -> m38_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_418 -> m38_419  [key=0, style=solid];
m38_418 -> m38_420  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_420 -> m38_421  [key=0, style=solid];
m38_420 -> m38_18  [key=2, style=dotted];
m38_420 -> m38_42  [key=2, style=dotted];
m38_423 -> m38_424  [key=0, style=solid];
m38_423 -> m38_425  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_421 -> m38_422  [key=0, style=solid];
m38_421 -> m38_19  [key=2, style=dotted];
m38_422 -> m38_418  [color=blue, key=0, style=bold];
m38_424 -> m38_425  [key=0, style=solid];
m38_424 -> m38_339  [key=2, style=dotted];
m38_425 -> m38_426  [key=0, style=solid];
m38_425 -> m38_402  [key=2, style=dotted];
m38_426 -> m38_423  [color=blue, key=0, style=bold];
m38_431 -> m38_432  [key=0, style=solid];
m38_431 -> m38_44  [key=2, style=dotted];
m38_431 -> m38_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_430 -> m38_431  [key=0, style=solid];
m38_430 -> m38_432  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_432 -> m38_433  [key=0, style=solid];
m38_432 -> m38_41  [key=2, style=dotted];
m38_432 -> m38_42  [key=2, style=dotted];
m38_432 -> m38_434  [color=darkseagreen4, key=1, label=record, style=dashed];
m38_436 -> m38_437  [key=0, style=solid];
m38_433 -> m38_434  [key=0, style=solid];
m38_433 -> m38_19  [key=2, style=dotted];
m38_434 -> m38_435  [key=0, style=solid];
m38_434 -> m38_19  [key=2, style=dotted];
m38_435 -> m38_430  [color=blue, key=0, style=bold];
m38_437 -> m38_438  [key=0, style=solid];
m38_437 -> m38_439  [key=2, style=dotted];
m38_438 -> m38_436  [color=blue, key=0, style=bold];
m38_444 -> m38_445  [key=0, style=solid];
m38_444 -> m38_44  [key=2, style=dotted];
m38_444 -> m38_448  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_443 -> m38_444  [key=0, style=solid];
m38_443 -> m38_445  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_445 -> m38_446  [key=0, style=solid];
m38_445 -> m38_18  [key=2, style=dotted];
m38_445 -> m38_42  [key=2, style=dotted];
m38_448 -> m38_449  [key=0, style=solid];
m38_448 -> m38_450  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_446 -> m38_447  [key=0, style=solid];
m38_446 -> m38_19  [key=2, style=dotted];
m38_447 -> m38_443  [color=blue, key=0, style=bold];
m38_449 -> m38_450  [key=0, style=solid];
m38_449 -> m38_439  [key=2, style=dotted];
m38_450 -> m38_451  [key=0, style=solid];
m38_450 -> m38_439  [key=2, style=dotted];
m38_451 -> m38_448  [color=blue, key=0, style=bold];
m38_456 -> m38_457  [key=0, style=solid];
m38_456 -> m38_44  [key=2, style=dotted];
m38_456 -> m38_460  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_455 -> m38_456  [key=0, style=solid];
m38_455 -> m38_457  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_457 -> m38_458  [key=0, style=solid];
m38_457 -> m38_18  [key=2, style=dotted];
m38_457 -> m38_42  [key=2, style=dotted];
m38_460 -> m38_461  [key=0, style=solid];
m38_460 -> m38_462  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_460 -> m38_463  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_458 -> m38_459  [key=0, style=solid];
m38_458 -> m38_19  [key=2, style=dotted];
m38_459 -> m38_455  [color=blue, key=0, style=bold];
m38_461 -> m38_462  [key=0, style=solid];
m38_461 -> m38_439  [key=2, style=dotted];
m38_462 -> m38_463  [key=0, style=solid];
m38_462 -> m38_439  [key=2, style=dotted];
m38_463 -> m38_464  [key=0, style=solid];
m38_463 -> m38_465  [key=2, style=dotted];
m38_464 -> m38_460  [color=blue, key=0, style=bold];
m38_470 -> m38_471  [key=0, style=solid];
m38_470 -> m38_44  [key=2, style=dotted];
m38_470 -> m38_474  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_469 -> m38_470  [key=0, style=solid];
m38_469 -> m38_471  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_471 -> m38_472  [key=0, style=solid];
m38_471 -> m38_18  [key=2, style=dotted];
m38_471 -> m38_42  [key=2, style=dotted];
m38_474 -> m38_475  [key=0, style=solid];
m38_474 -> m38_476  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_472 -> m38_473  [key=0, style=solid];
m38_472 -> m38_19  [key=2, style=dotted];
m38_473 -> m38_469  [color=blue, key=0, style=bold];
m38_475 -> m38_476  [key=0, style=solid];
m38_475 -> m38_439  [key=2, style=dotted];
m38_476 -> m38_477  [key=0, style=solid];
m38_476 -> m38_465  [key=2, style=dotted];
m38_477 -> m38_474  [color=blue, key=0, style=bold];
m38_482 -> m38_483  [key=0, style=solid];
m38_482 -> m38_44  [key=2, style=dotted];
m38_482 -> m38_486  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_481 -> m38_482  [key=0, style=solid];
m38_481 -> m38_483  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_483 -> m38_484  [key=0, style=solid];
m38_483 -> m38_18  [key=2, style=dotted];
m38_483 -> m38_42  [key=2, style=dotted];
m38_486 -> m38_487  [key=0, style=solid];
m38_486 -> m38_488  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_484 -> m38_485  [key=0, style=solid];
m38_484 -> m38_19  [key=2, style=dotted];
m38_485 -> m38_481  [color=blue, key=0, style=bold];
m38_487 -> m38_488  [key=0, style=solid];
m38_487 -> m38_439  [key=2, style=dotted];
m38_488 -> m38_489  [key=0, style=solid];
m38_488 -> m38_465  [key=2, style=dotted];
m38_489 -> m38_486  [color=blue, key=0, style=bold];
m38_494 -> m38_495  [key=0, style=solid];
m38_494 -> m38_44  [key=2, style=dotted];
m38_494 -> m38_501  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_493 -> m38_494  [key=0, style=solid];
m38_493 -> m38_495  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_495 -> m38_496  [key=0, style=solid];
m38_495 -> m38_41  [key=2, style=dotted];
m38_495 -> m38_500  [key=2, style=dotted];
m38_495 -> m38_497  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_495 -> m38_498  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_501 -> m38_502  [key=0, style=solid];
m38_501 -> m38_503  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_501 -> m38_504  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_501 -> m38_505  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_501 -> m38_506  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_496 -> m38_497  [key=0, style=solid];
m38_496 -> m38_19  [key=2, style=dotted];
m38_497 -> m38_498  [key=0, style=solid];
m38_497 -> m38_19  [key=2, style=dotted];
m38_498 -> m38_499  [key=0, style=solid];
m38_498 -> m38_19  [key=2, style=dotted];
m38_499 -> m38_493  [color=blue, key=0, style=bold];
m38_502 -> m38_503  [key=0, style=solid];
m38_502 -> m38_439  [key=2, style=dotted];
m38_503 -> m38_504  [key=0, style=solid];
m38_503 -> m38_439  [key=2, style=dotted];
m38_504 -> m38_505  [key=0, style=solid];
m38_504 -> m38_439  [key=2, style=dotted];
m38_505 -> m38_506  [key=0, style=solid];
m38_505 -> m38_439  [key=2, style=dotted];
m38_506 -> m38_507  [key=0, style=solid];
m38_506 -> m38_508  [key=2, style=dotted];
m38_507 -> m38_501  [color=blue, key=0, style=bold];
m38_513 -> m38_514  [key=0, style=solid];
m38_513 -> m38_44  [key=2, style=dotted];
m38_513 -> m38_517  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_512 -> m38_513  [key=0, style=solid];
m38_512 -> m38_514  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_514 -> m38_515  [key=0, style=solid];
m38_514 -> m38_18  [key=2, style=dotted];
m38_514 -> m38_42  [key=2, style=dotted];
m38_517 -> m38_518  [key=0, style=solid];
m38_517 -> m38_519  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_517 -> m38_520  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_517 -> m38_521  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_515 -> m38_516  [key=0, style=solid];
m38_515 -> m38_19  [key=2, style=dotted];
m38_516 -> m38_512  [color=blue, key=0, style=bold];
m38_518 -> m38_519  [key=0, style=solid];
m38_518 -> m38_439  [key=2, style=dotted];
m38_519 -> m38_520  [key=0, style=solid];
m38_519 -> m38_439  [key=2, style=dotted];
m38_520 -> m38_521  [key=0, style=solid];
m38_520 -> m38_439  [key=2, style=dotted];
m38_521 -> m38_522  [key=0, style=solid];
m38_521 -> m38_508  [key=2, style=dotted];
m38_522 -> m38_517  [color=blue, key=0, style=bold];
m38_527 -> m38_528  [key=0, style=solid];
m38_527 -> m38_44  [key=2, style=dotted];
m38_527 -> m38_531  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_526 -> m38_527  [key=0, style=solid];
m38_526 -> m38_528  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_528 -> m38_529  [key=0, style=solid];
m38_528 -> m38_18  [key=2, style=dotted];
m38_528 -> m38_42  [key=2, style=dotted];
m38_531 -> m38_532  [key=0, style=solid];
m38_531 -> m38_533  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_529 -> m38_530  [key=0, style=solid];
m38_529 -> m38_19  [key=2, style=dotted];
m38_530 -> m38_526  [color=blue, key=0, style=bold];
m38_532 -> m38_533  [key=0, style=solid];
m38_532 -> m38_439  [key=2, style=dotted];
m38_533 -> m38_534  [key=0, style=solid];
m38_533 -> m38_508  [key=2, style=dotted];
m38_534 -> m38_531  [color=blue, key=0, style=bold];
m38_539 -> m38_540  [key=0, style=solid];
m38_539 -> m38_44  [key=2, style=dotted];
m38_539 -> m38_543  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_538 -> m38_539  [key=0, style=solid];
m38_538 -> m38_540  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_540 -> m38_541  [key=0, style=solid];
m38_540 -> m38_18  [key=2, style=dotted];
m38_540 -> m38_42  [key=2, style=dotted];
m38_543 -> m38_544  [key=0, style=solid];
m38_543 -> m38_545  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_541 -> m38_542  [key=0, style=solid];
m38_541 -> m38_19  [key=2, style=dotted];
m38_542 -> m38_538  [color=blue, key=0, style=bold];
m38_544 -> m38_545  [key=0, style=solid];
m38_544 -> m38_439  [key=2, style=dotted];
m38_545 -> m38_546  [key=0, style=solid];
m38_545 -> m38_508  [key=2, style=dotted];
m38_546 -> m38_543  [color=blue, key=0, style=bold];
m38_551 -> m38_552  [key=0, style=solid];
m38_551 -> m38_44  [key=2, style=dotted];
m38_551 -> m38_555  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_550 -> m38_551  [key=0, style=solid];
m38_550 -> m38_552  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_552 -> m38_553  [key=0, style=solid];
m38_552 -> m38_18  [key=2, style=dotted];
m38_552 -> m38_42  [key=2, style=dotted];
m38_555 -> m38_556  [key=0, style=solid];
m38_555 -> m38_557  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_553 -> m38_554  [key=0, style=solid];
m38_553 -> m38_19  [key=2, style=dotted];
m38_554 -> m38_550  [color=blue, key=0, style=bold];
m38_556 -> m38_557  [key=0, style=solid];
m38_556 -> m38_439  [key=2, style=dotted];
m38_557 -> m38_558  [key=0, style=solid];
m38_557 -> m38_508  [key=2, style=dotted];
m38_558 -> m38_555  [color=blue, key=0, style=bold];
m38_563 -> m38_564  [key=0, style=solid];
m38_563 -> m38_18  [key=2, style=dotted];
m38_563 -> m38_566  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_567 -> m38_568  [key=0, style=solid];
m38_567 -> m38_44  [key=2, style=dotted];
m38_567 -> m38_569  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_562 -> m38_563  [key=0, style=solid];
m38_562 -> m38_567  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_564 -> m38_565  [key=0, style=solid];
m38_564 -> m38_19  [key=2, style=dotted];
m38_566 -> m38_567  [key=0, style=solid];
m38_565 -> m38_562  [color=blue, key=0, style=bold];
m38_568 -> m38_566  [color=blue, key=0, style=bold];
m38_569 -> m38_570  [key=0, style=solid];
m38_570 -> m38_571  [key=0, style=solid];
m38_570 -> m38_98  [key=2, style=dotted];
m38_570 -> m38_572  [key=2, style=dotted];
m38_571 -> m38_569  [color=blue, key=0, style=bold];
m38_577 -> m38_578  [key=0, style=solid];
m38_577 -> m38_18  [key=2, style=dotted];
m38_577 -> m38_580  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_581 -> m38_582  [key=0, style=solid];
m38_581 -> m38_44  [key=2, style=dotted];
m38_581 -> m38_583  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_576 -> m38_577  [key=0, style=solid];
m38_576 -> m38_581  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_578 -> m38_579  [key=0, style=solid];
m38_578 -> m38_19  [key=2, style=dotted];
m38_580 -> m38_581  [key=0, style=solid];
m38_579 -> m38_576  [color=blue, key=0, style=bold];
m38_582 -> m38_580  [color=blue, key=0, style=bold];
m38_583 -> m38_584  [key=0, style=solid];
m38_584 -> m38_585  [key=0, style=solid];
m38_584 -> m38_572  [key=2, style=dotted];
m38_585 -> m38_583  [color=blue, key=0, style=bold];
m38_590 -> m38_591  [key=0, style=solid];
m38_590 -> m38_44  [key=2, style=dotted];
m38_590 -> m38_596  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_589 -> m38_590  [key=0, style=solid];
m38_589 -> m38_591  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_591 -> m38_592  [key=0, style=solid];
m38_591 -> m38_41  [key=2, style=dotted];
m38_591 -> m38_595  [key=2, style=dotted];
m38_591 -> m38_599  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_591 -> m38_602  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_591 -> m38_593  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_596 -> m38_597  [key=0, style=solid];
m38_592 -> m38_593  [key=0, style=solid];
m38_592 -> m38_19  [key=2, style=dotted];
m38_599 -> m38_600  [key=0, style=solid];
m38_602 -> m38_603  [key=0, style=solid];
m38_593 -> m38_594  [key=0, style=solid];
m38_593 -> m38_19  [key=2, style=dotted];
m38_594 -> m38_589  [color=blue, key=0, style=bold];
m38_597 -> m38_598  [key=0, style=solid];
m38_597 -> m38_98  [key=2, style=dotted];
m38_597 -> m38_572  [key=2, style=dotted];
m38_598 -> m38_596  [color=blue, key=0, style=bold];
m38_600 -> m38_601  [key=0, style=solid];
m38_601 -> m38_599  [color=blue, key=0, style=bold];
m38_603 -> m38_604  [key=0, style=solid];
m38_604 -> m38_602  [color=blue, key=0, style=bold];
m38_609 -> m38_610  [key=0, style=solid];
m38_609 -> m38_44  [key=2, style=dotted];
m38_609 -> m38_613  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_608 -> m38_609  [key=0, style=solid];
m38_608 -> m38_610  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_610 -> m38_611  [key=0, style=solid];
m38_610 -> m38_41  [key=2, style=dotted];
m38_610 -> m38_595  [key=2, style=dotted];
m38_610 -> m38_616  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_610 -> m38_619  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_613 -> m38_614  [key=0, style=solid];
m38_611 -> m38_612  [key=0, style=solid];
m38_611 -> m38_19  [key=2, style=dotted];
m38_616 -> m38_617  [key=0, style=solid];
m38_619 -> m38_620  [key=0, style=solid];
m38_612 -> m38_608  [color=blue, key=0, style=bold];
m38_614 -> m38_615  [key=0, style=solid];
m38_614 -> m38_98  [key=2, style=dotted];
m38_614 -> m38_572  [key=2, style=dotted];
m38_615 -> m38_613  [color=blue, key=0, style=bold];
m38_617 -> m38_618  [key=0, style=solid];
m38_618 -> m38_616  [color=blue, key=0, style=bold];
m38_620 -> m38_621  [key=0, style=solid];
m38_621 -> m38_619  [color=blue, key=0, style=bold];
m38_626 -> m38_627  [key=0, style=solid];
m38_626 -> m38_18  [key=2, style=dotted];
m38_626 -> m38_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_629 -> m38_630  [key=0, style=solid];
m38_629 -> m38_44  [key=2, style=dotted];
m38_629 -> m38_631  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_625 -> m38_626  [key=0, style=solid];
m38_625 -> m38_629  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_627 -> m38_625  [color=blue, key=0, style=bold];
m38_628 -> m38_629  [key=0, style=solid];
m38_630 -> m38_628  [color=blue, key=0, style=bold];
m38_631 -> m38_632  [key=0, style=solid];
m38_632 -> m38_633  [key=0, style=solid];
m38_632 -> m38_634  [key=2, style=dotted];
m38_633 -> m38_631  [color=blue, key=0, style=bold];
m38_639 -> m38_640  [key=0, style=solid];
m38_639 -> m38_44  [key=2, style=dotted];
m38_639 -> m38_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_640 -> m38_641  [key=0, style=solid];
m38_640 -> m38_44  [key=2, style=dotted];
m38_640 -> m38_647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_638 -> m38_639  [key=0, style=solid];
m38_638 -> m38_640  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_638 -> m38_641  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_641 -> m38_642  [key=0, style=solid];
m38_641 -> m38_18  [key=2, style=dotted];
m38_641 -> m38_42  [key=2, style=dotted];
m38_644 -> m38_645  [key=0, style=solid];
m38_647 -> m38_648  [key=0, style=solid];
m38_642 -> m38_643  [key=0, style=solid];
m38_642 -> m38_19  [key=2, style=dotted];
m38_643 -> m38_638  [color=blue, key=0, style=bold];
m38_645 -> m38_646  [key=0, style=solid];
m38_645 -> m38_98  [key=2, style=dotted];
m38_645 -> m38_572  [key=2, style=dotted];
m38_646 -> m38_644  [color=blue, key=0, style=bold];
m38_648 -> m38_649  [key=0, style=solid];
m38_648 -> m38_634  [key=2, style=dotted];
m38_649 -> m38_647  [color=blue, key=0, style=bold];
m38_654 -> m38_655  [key=0, style=solid];
m38_654 -> m38_18  [key=2, style=dotted];
m38_654 -> m38_657  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_658 -> m38_659  [key=0, style=solid];
m38_658 -> m38_44  [key=2, style=dotted];
m38_658 -> m38_660  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_653 -> m38_654  [key=0, style=solid];
m38_653 -> m38_658  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_655 -> m38_656  [key=0, style=solid];
m38_655 -> m38_19  [key=2, style=dotted];
m38_657 -> m38_658  [key=0, style=solid];
m38_656 -> m38_653  [color=blue, key=0, style=bold];
m38_659 -> m38_657  [color=blue, key=0, style=bold];
m38_660 -> m38_661  [key=0, style=solid];
m38_661 -> m38_662  [key=0, style=solid];
m38_661 -> d13  [key=2, style=dotted];
m38_661 -> m38_664  [key=2, style=dotted];
m38_662 -> m38_660  [color=blue, key=0, style=bold];
m38_669 -> m38_670  [key=0, style=solid];
m38_669 -> m38_18  [key=2, style=dotted];
m38_669 -> m38_672  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_673 -> m38_674  [key=0, style=solid];
m38_673 -> m38_44  [key=2, style=dotted];
m38_673 -> m38_675  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_668 -> m38_669  [key=0, style=solid];
m38_668 -> m38_673  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_670 -> m38_671  [key=0, style=solid];
m38_670 -> m38_19  [key=2, style=dotted];
m38_672 -> m38_673  [key=0, style=solid];
m38_671 -> m38_668  [color=blue, key=0, style=bold];
m38_674 -> m38_672  [color=blue, key=0, style=bold];
m38_675 -> m38_676  [key=0, style=solid];
m38_676 -> m38_677  [key=0, style=solid];
m38_676 -> m38_664  [key=2, style=dotted];
m38_677 -> m38_675  [color=blue, key=0, style=bold];
m38_683 -> m38_684  [key=0, style=solid];
m38_683 -> m38_44  [key=2, style=dotted];
m38_683 -> m38_687  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_681 -> m38_682  [key=0, style=solid];
m38_681 -> m38_683  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_681 -> m38_684  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_682 -> m38_683  [key=0, style=solid];
m38_682 -> d13  [key=2, style=dotted];
m38_682 -> m38_688  [color=darkseagreen4, key=1, label=items, style=dashed];
m38_682 -> m38_685  [color=darkseagreen4, key=1, label=items, style=dashed];
m38_684 -> m38_685  [key=0, style=solid];
m38_684 -> m38_18  [key=2, style=dotted];
m38_688 -> m38_689  [key=0, style=solid];
m38_688 -> m38_664  [key=2, style=dotted];
m38_685 -> m38_686  [key=0, style=solid];
m38_685 -> m38_19  [key=2, style=dotted];
m38_687 -> m38_688  [key=0, style=solid];
m38_686 -> m38_681  [color=blue, key=0, style=bold];
m38_689 -> m38_687  [color=blue, key=0, style=bold];
m38_694 -> m38_695  [key=0, style=solid];
m38_694 -> m38_18  [key=2, style=dotted];
m38_694 -> m38_696  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_697 -> m38_698  [key=0, style=solid];
m38_697 -> m38_44  [key=2, style=dotted];
m38_697 -> m38_699  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_693 -> m38_694  [key=0, style=solid];
m38_693 -> m38_697  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_695 -> m38_693  [color=blue, key=0, style=bold];
m38_696 -> m38_697  [key=0, style=solid];
m38_698 -> m38_696  [color=blue, key=0, style=bold];
m38_699 -> m38_700  [key=0, style=solid];
m38_700 -> m38_701  [key=0, style=solid];
m38_700 -> m38_702  [key=2, style=dotted];
m38_701 -> m38_699  [color=blue, key=0, style=bold];
m38_709 -> m38_710  [key=0, style=solid];
m38_709 -> m38_44  [key=2, style=dotted];
m38_709 -> m38_714  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_708 -> m38_709  [key=0, style=solid];
m38_708 -> m38_713  [key=2, style=dotted];
m38_707 -> m38_708  [key=0, style=solid];
m38_707 -> m38_709  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_707 -> m38_710  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_710 -> m38_711  [key=0, style=solid];
m38_710 -> m38_41  [key=2, style=dotted];
m38_710 -> m38_42  [key=2, style=dotted];
m38_714 -> m38_715  [key=0, style=solid];
m38_711 -> m38_712  [key=0, style=solid];
m38_711 -> m38_19  [key=2, style=dotted];
m38_712 -> m38_707  [color=blue, key=0, style=bold];
m38_715 -> m38_716  [key=0, style=solid];
m38_715 -> m38_702  [key=2, style=dotted];
m38_716 -> m38_714  [color=blue, key=0, style=bold];
m38_721 -> m38_722  [key=0, style=solid];
m38_721 -> m38_18  [key=2, style=dotted];
m38_721 -> m38_724  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_725 -> m38_726  [key=0, style=solid];
m38_725 -> m38_44  [key=2, style=dotted];
m38_725 -> m38_727  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_720 -> m38_721  [key=0, style=solid];
m38_720 -> m38_725  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_722 -> m38_723  [key=0, style=solid];
m38_722 -> m38_19  [key=2, style=dotted];
m38_724 -> m38_725  [key=0, style=solid];
m38_723 -> m38_720  [color=blue, key=0, style=bold];
m38_726 -> m38_724  [color=blue, key=0, style=bold];
m38_727 -> m38_728  [key=0, style=solid];
m38_728 -> m38_729  [key=0, style=solid];
m38_728 -> m38_730  [key=2, style=dotted];
m38_728 -> m38_731  [key=2, style=dotted];
m38_729 -> m38_727  [color=blue, key=0, style=bold];
m38_738 -> m38_739  [key=0, style=solid];
m38_738 -> m38_44  [key=2, style=dotted];
m38_738 -> m38_745  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_737 -> m38_738  [key=0, style=solid];
m38_737 -> m38_713  [key=2, style=dotted];
m38_736 -> m38_737  [key=0, style=solid];
m38_736 -> m38_738  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_736 -> m38_739  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_739 -> m38_740  [key=0, style=solid];
m38_739 -> m38_41  [key=2, style=dotted];
m38_739 -> m38_595  [key=2, style=dotted];
m38_739 -> m38_748  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_739 -> m38_751  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_739 -> m38_741  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_739 -> m38_742  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_745 -> m38_746  [key=0, style=solid];
m38_740 -> m38_741  [key=0, style=solid];
m38_740 -> m38_744  [key=2, style=dotted];
m38_740 -> m38_47  [key=2, style=dotted];
m38_748 -> m38_749  [key=0, style=solid];
m38_751 -> m38_752  [key=0, style=solid];
m38_741 -> m38_742  [key=0, style=solid];
m38_741 -> m38_744  [key=2, style=dotted];
m38_741 -> m38_47  [key=2, style=dotted];
m38_742 -> m38_743  [key=0, style=solid];
m38_742 -> m38_48  [key=2, style=dotted];
m38_743 -> m38_736  [color=blue, key=0, style=bold];
m38_746 -> m38_747  [key=0, style=solid];
m38_746 -> m38_730  [key=2, style=dotted];
m38_746 -> m38_731  [key=2, style=dotted];
m38_747 -> m38_745  [color=blue, key=0, style=bold];
m38_749 -> m38_750  [key=0, style=solid];
m38_750 -> m38_748  [color=blue, key=0, style=bold];
m38_752 -> m38_753  [key=0, style=solid];
m38_753 -> m38_751  [color=blue, key=0, style=bold];
m38_758 -> m38_759  [key=0, style=solid];
m38_758 -> m38_18  [key=2, style=dotted];
m38_758 -> m38_761  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_762 -> m38_763  [key=0, style=solid];
m38_762 -> m38_44  [key=2, style=dotted];
m38_762 -> m38_764  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_757 -> m38_758  [key=0, style=solid];
m38_757 -> m38_762  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_759 -> m38_760  [key=0, style=solid];
m38_759 -> m38_19  [key=2, style=dotted];
m38_761 -> m38_762  [key=0, style=solid];
m38_760 -> m38_757  [color=blue, key=0, style=bold];
m38_763 -> m38_761  [color=blue, key=0, style=bold];
m38_764 -> m38_765  [key=0, style=solid];
m38_765 -> m38_766  [key=0, style=solid];
m38_765 -> m38_767  [key=2, style=dotted];
m38_765 -> m38_768  [key=2, style=dotted];
m38_766 -> m38_764  [color=blue, key=0, style=bold];
m38_775 -> m38_776  [key=0, style=solid];
m38_775 -> m38_44  [key=2, style=dotted];
m38_775 -> m38_781  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_774 -> m38_775  [key=0, style=solid];
m38_774 -> m38_713  [key=2, style=dotted];
m38_773 -> m38_774  [key=0, style=solid];
m38_773 -> m38_775  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_773 -> m38_776  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_776 -> m38_777  [key=0, style=solid];
m38_776 -> m38_41  [key=2, style=dotted];
m38_776 -> m38_595  [key=2, style=dotted];
m38_776 -> m38_784  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_776 -> m38_787  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_776 -> m38_778  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_776 -> m38_779  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_781 -> m38_782  [key=0, style=solid];
m38_777 -> m38_778  [key=0, style=solid];
m38_777 -> m38_744  [key=2, style=dotted];
m38_777 -> m38_47  [key=2, style=dotted];
m38_784 -> m38_785  [key=0, style=solid];
m38_787 -> m38_788  [key=0, style=solid];
m38_778 -> m38_779  [key=0, style=solid];
m38_778 -> m38_744  [key=2, style=dotted];
m38_778 -> m38_47  [key=2, style=dotted];
m38_779 -> m38_780  [key=0, style=solid];
m38_779 -> m38_48  [key=2, style=dotted];
m38_780 -> m38_773  [color=blue, key=0, style=bold];
m38_782 -> m38_783  [key=0, style=solid];
m38_782 -> m38_730  [key=2, style=dotted];
m38_782 -> m38_768  [key=2, style=dotted];
m38_783 -> m38_781  [color=blue, key=0, style=bold];
m38_785 -> m38_786  [key=0, style=solid];
m38_786 -> m38_784  [color=blue, key=0, style=bold];
m38_788 -> m38_789  [key=0, style=solid];
m38_789 -> m38_787  [color=blue, key=0, style=bold];
m38_794 -> m38_795  [key=0, style=solid];
m38_794 -> m38_18  [key=2, style=dotted];
m38_794 -> m38_797  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_798 -> m38_799  [key=0, style=solid];
m38_798 -> m38_44  [key=2, style=dotted];
m38_798 -> m38_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_793 -> m38_794  [key=0, style=solid];
m38_793 -> m38_798  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_795 -> m38_796  [key=0, style=solid];
m38_795 -> m38_19  [key=2, style=dotted];
m38_797 -> m38_798  [key=0, style=solid];
m38_796 -> m38_793  [color=blue, key=0, style=bold];
m38_799 -> m38_797  [color=blue, key=0, style=bold];
m38_800 -> m38_801  [key=0, style=solid];
m38_801 -> m38_802  [key=0, style=solid];
m38_801 -> m38_767  [key=2, style=dotted];
m38_801 -> m38_803  [key=2, style=dotted];
m38_802 -> m38_800  [color=blue, key=0, style=bold];
m38_810 -> m38_811  [key=0, style=solid];
m38_810 -> m38_44  [key=2, style=dotted];
m38_810 -> m38_816  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_809 -> m38_810  [key=0, style=solid];
m38_809 -> m38_713  [key=2, style=dotted];
m38_808 -> m38_809  [key=0, style=solid];
m38_808 -> m38_810  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_808 -> m38_811  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_811 -> m38_812  [key=0, style=solid];
m38_811 -> m38_41  [key=2, style=dotted];
m38_811 -> m38_595  [key=2, style=dotted];
m38_811 -> m38_819  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_811 -> m38_822  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_811 -> m38_813  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_811 -> m38_814  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_816 -> m38_817  [key=0, style=solid];
m38_812 -> m38_813  [key=0, style=solid];
m38_812 -> m38_744  [key=2, style=dotted];
m38_812 -> m38_47  [key=2, style=dotted];
m38_819 -> m38_820  [key=0, style=solid];
m38_822 -> m38_823  [key=0, style=solid];
m38_813 -> m38_814  [key=0, style=solid];
m38_813 -> m38_744  [key=2, style=dotted];
m38_813 -> m38_47  [key=2, style=dotted];
m38_814 -> m38_815  [key=0, style=solid];
m38_814 -> m38_48  [key=2, style=dotted];
m38_815 -> m38_808  [color=blue, key=0, style=bold];
m38_817 -> m38_818  [key=0, style=solid];
m38_817 -> m38_730  [key=2, style=dotted];
m38_817 -> m38_803  [key=2, style=dotted];
m38_818 -> m38_816  [color=blue, key=0, style=bold];
m38_820 -> m38_821  [key=0, style=solid];
m38_821 -> m38_819  [color=blue, key=0, style=bold];
m38_823 -> m38_824  [key=0, style=solid];
m38_824 -> m38_822  [color=blue, key=0, style=bold];
m38_829 -> m38_830  [key=0, style=solid];
m38_829 -> m38_18  [key=2, style=dotted];
m38_829 -> m38_832  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_833 -> m38_834  [key=0, style=solid];
m38_833 -> m38_44  [key=2, style=dotted];
m38_833 -> m38_835  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_828 -> m38_829  [key=0, style=solid];
m38_828 -> m38_833  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_830 -> m38_831  [key=0, style=solid];
m38_830 -> m38_19  [key=2, style=dotted];
m38_832 -> m38_833  [key=0, style=solid];
m38_831 -> m38_828  [color=blue, key=0, style=bold];
m38_834 -> m38_832  [color=blue, key=0, style=bold];
m38_835 -> m38_836  [key=0, style=solid];
m38_836 -> m38_837  [key=0, style=solid];
m38_836 -> m38_838  [key=2, style=dotted];
m38_837 -> m38_835  [color=blue, key=0, style=bold];
m38_845 -> m38_846  [key=0, style=solid];
m38_845 -> m38_44  [key=2, style=dotted];
m38_845 -> m38_851  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_844 -> m38_845  [key=0, style=solid];
m38_844 -> m38_850  [key=2, style=dotted];
m38_844 -> m38_713  [key=2, style=dotted];
m38_843 -> m38_844  [key=0, style=solid];
m38_843 -> m38_845  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_843 -> m38_846  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_846 -> m38_847  [key=0, style=solid];
m38_846 -> m38_41  [key=2, style=dotted];
m38_846 -> m38_595  [key=2, style=dotted];
m38_846 -> m38_854  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_846 -> m38_857  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_846 -> m38_848  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_851 -> m38_852  [key=0, style=solid];
m38_847 -> m38_848  [key=0, style=solid];
m38_847 -> m38_48  [key=2, style=dotted];
m38_854 -> m38_855  [key=0, style=solid];
m38_857 -> m38_858  [key=0, style=solid];
m38_848 -> m38_849  [key=0, style=solid];
m38_848 -> m38_67  [key=2, style=dotted];
m38_849 -> m38_843  [color=blue, key=0, style=bold];
m38_852 -> m38_853  [key=0, style=solid];
m38_852 -> m38_838  [key=2, style=dotted];
m38_853 -> m38_851  [color=blue, key=0, style=bold];
m38_855 -> m38_856  [key=0, style=solid];
m38_856 -> m38_854  [color=blue, key=0, style=bold];
m38_858 -> m38_859  [key=0, style=solid];
m38_859 -> m38_857  [color=blue, key=0, style=bold];
m38_864 -> m38_865  [key=0, style=solid];
m38_864 -> m38_18  [key=2, style=dotted];
m38_864 -> m38_867  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_868 -> m38_869  [key=0, style=solid];
m38_868 -> m38_44  [key=2, style=dotted];
m38_868 -> m38_870  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_863 -> m38_864  [key=0, style=solid];
m38_863 -> m38_868  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_865 -> m38_866  [key=0, style=solid];
m38_865 -> m38_19  [key=2, style=dotted];
m38_867 -> m38_868  [key=0, style=solid];
m38_866 -> m38_863  [color=blue, key=0, style=bold];
m38_869 -> m38_867  [color=blue, key=0, style=bold];
m38_870 -> m38_871  [key=0, style=solid];
m38_871 -> m38_872  [key=0, style=solid];
m38_871 -> m38_873  [key=2, style=dotted];
m38_872 -> m38_870  [color=blue, key=0, style=bold];
m38_880 -> m38_881  [key=0, style=solid];
m38_880 -> m38_44  [key=2, style=dotted];
m38_880 -> m38_885  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_879 -> m38_880  [key=0, style=solid];
m38_879 -> m38_850  [key=2, style=dotted];
m38_879 -> m38_713  [key=2, style=dotted];
m38_878 -> m38_879  [key=0, style=solid];
m38_878 -> m38_880  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_878 -> m38_881  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_881 -> m38_882  [key=0, style=solid];
m38_881 -> m38_41  [key=2, style=dotted];
m38_881 -> m38_595  [key=2, style=dotted];
m38_881 -> m38_888  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_881 -> m38_891  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_881 -> m38_883  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_885 -> m38_886  [key=0, style=solid];
m38_882 -> m38_883  [key=0, style=solid];
m38_882 -> m38_48  [key=2, style=dotted];
m38_888 -> m38_889  [key=0, style=solid];
m38_891 -> m38_892  [key=0, style=solid];
m38_883 -> m38_884  [key=0, style=solid];
m38_883 -> m38_67  [key=2, style=dotted];
m38_884 -> m38_878  [color=blue, key=0, style=bold];
m38_886 -> m38_887  [key=0, style=solid];
m38_886 -> m38_873  [key=2, style=dotted];
m38_887 -> m38_885  [color=blue, key=0, style=bold];
m38_889 -> m38_890  [key=0, style=solid];
m38_890 -> m38_888  [color=blue, key=0, style=bold];
m38_892 -> m38_893  [key=0, style=solid];
m38_893 -> m38_891  [color=blue, key=0, style=bold];
m38_898 -> m38_899  [key=0, style=solid];
m38_898 -> m38_18  [key=2, style=dotted];
m38_898 -> m38_901  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_902 -> m38_903  [key=0, style=solid];
m38_902 -> m38_44  [key=2, style=dotted];
m38_902 -> m38_904  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_897 -> m38_898  [key=0, style=solid];
m38_897 -> m38_902  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_899 -> m38_900  [key=0, style=solid];
m38_899 -> m38_19  [key=2, style=dotted];
m38_901 -> m38_902  [key=0, style=solid];
m38_900 -> m38_897  [color=blue, key=0, style=bold];
m38_903 -> m38_901  [color=blue, key=0, style=bold];
m38_904 -> m38_905  [key=0, style=solid];
m38_905 -> m38_906  [key=0, style=solid];
m38_905 -> m38_907  [key=2, style=dotted];
m38_906 -> m38_904  [color=blue, key=0, style=bold];
m38_914 -> m38_915  [key=0, style=solid];
m38_914 -> m38_44  [key=2, style=dotted];
m38_914 -> m38_919  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_913 -> m38_914  [key=0, style=solid];
m38_913 -> m38_850  [key=2, style=dotted];
m38_913 -> m38_713  [key=2, style=dotted];
m38_912 -> m38_913  [key=0, style=solid];
m38_912 -> m38_914  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_912 -> m38_915  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_915 -> m38_916  [key=0, style=solid];
m38_915 -> m38_41  [key=2, style=dotted];
m38_915 -> m38_595  [key=2, style=dotted];
m38_915 -> m38_922  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_915 -> m38_925  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_915 -> m38_917  [color=darkseagreen4, key=1, label=records, style=dashed];
m38_919 -> m38_920  [key=0, style=solid];
m38_916 -> m38_917  [key=0, style=solid];
m38_916 -> m38_48  [key=2, style=dotted];
m38_922 -> m38_923  [key=0, style=solid];
m38_925 -> m38_926  [key=0, style=solid];
m38_917 -> m38_918  [key=0, style=solid];
m38_917 -> m38_67  [key=2, style=dotted];
m38_918 -> m38_912  [color=blue, key=0, style=bold];
m38_920 -> m38_921  [key=0, style=solid];
m38_920 -> m38_907  [key=2, style=dotted];
m38_921 -> m38_919  [color=blue, key=0, style=bold];
m38_923 -> m38_924  [key=0, style=solid];
m38_924 -> m38_922  [color=blue, key=0, style=bold];
m38_926 -> m38_927  [key=0, style=solid];
m38_927 -> m38_925  [color=blue, key=0, style=bold];
m38_943 -> m38_944  [key=0, style=solid];
m38_944 -> m38_945  [key=0, style=solid];
m38_945 -> m38_943  [color=blue, key=0, style=bold];
m38_947 -> m38_948  [key=0, style=solid];
m38_948 -> m38_946  [color=blue, key=0, style=bold];
m38_894 -> m38_895  [key=0, style=solid];
m38_894 -> m38_898  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_894 -> m38_902  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_895 -> m38_896  [key=0, style=solid];
m38_895 -> m38_31  [key=2, style=dotted];
m38_895 -> m38_897  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_896 -> m38_894  [color=blue, key=0, style=bold];
m38_390 -> m38_391  [key=0, style=solid];
m38_390 -> m38_394  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_391 -> m38_392  [key=0, style=solid];
m38_391 -> m38_31  [key=2, style=dotted];
m38_391 -> m38_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_392 -> m38_390  [color=blue, key=0, style=bold];
m38_754 -> m38_755  [key=0, style=solid];
m38_754 -> m38_758  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_754 -> m38_762  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_755 -> m38_756  [key=0, style=solid];
m38_755 -> m38_31  [key=2, style=dotted];
m38_755 -> m38_757  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_756 -> m38_754  [color=blue, key=0, style=bold];
m38_415 -> m38_416  [key=0, style=solid];
m38_415 -> m38_419  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_416 -> m38_417  [key=0, style=solid];
m38_416 -> m38_31  [key=2, style=dotted];
m38_416 -> m38_418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_417 -> m38_415  [color=blue, key=0, style=bold];
m38_860 -> m38_861  [key=0, style=solid];
m38_860 -> m38_864  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_860 -> m38_868  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_861 -> m38_862  [key=0, style=solid];
m38_861 -> m38_31  [key=2, style=dotted];
m38_861 -> m38_863  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_862 -> m38_860  [color=blue, key=0, style=bold];
m38_717 -> m38_718  [key=0, style=solid];
m38_717 -> m38_721  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_717 -> m38_725  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_718 -> m38_719  [key=0, style=solid];
m38_718 -> m38_31  [key=2, style=dotted];
m38_718 -> m38_720  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_719 -> m38_717  [color=blue, key=0, style=bold];
m38_271 -> m38_272  [key=0, style=solid];
m38_271 -> m38_275  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_272 -> m38_273  [key=0, style=solid];
m38_272 -> m38_31  [key=2, style=dotted];
m38_272 -> m38_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_273 -> m38_271  [color=blue, key=0, style=bold];
m38_586 -> m38_587  [key=0, style=solid];
m38_586 -> m38_590  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_587 -> m38_588  [key=0, style=solid];
m38_587 -> m38_31  [key=2, style=dotted];
m38_587 -> m38_589  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_588 -> m38_586  [color=blue, key=0, style=bold];
m38_253 -> m38_254  [key=0, style=solid];
m38_253 -> m38_257  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_254 -> m38_255  [key=0, style=solid];
m38_254 -> m38_31  [key=2, style=dotted];
m38_254 -> m38_256  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_255 -> m38_253  [color=blue, key=0, style=bold];
m38_559 -> m38_560  [key=0, style=solid];
m38_559 -> m38_563  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_559 -> m38_567  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_560 -> m38_561  [key=0, style=solid];
m38_560 -> m38_31  [key=2, style=dotted];
m38_560 -> m38_562  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_561 -> m38_559  [color=blue, key=0, style=bold];
m38_403 -> m38_404  [key=0, style=solid];
m38_403 -> m38_407  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_404 -> m38_405  [key=0, style=solid];
m38_404 -> m38_31  [key=2, style=dotted];
m38_404 -> m38_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_405 -> m38_403  [color=blue, key=0, style=bold];
m38_573 -> m38_574  [key=0, style=solid];
m38_573 -> m38_577  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_573 -> m38_581  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_574 -> m38_575  [key=0, style=solid];
m38_574 -> m38_31  [key=2, style=dotted];
m38_574 -> m38_576  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_575 -> m38_573  [color=blue, key=0, style=bold];
m38_352 -> m38_353  [key=0, style=solid];
m38_352 -> m38_356  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_353 -> m38_354  [key=0, style=solid];
m38_353 -> m38_31  [key=2, style=dotted];
m38_353 -> m38_355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_354 -> m38_352  [color=blue, key=0, style=bold];
m38_340 -> m38_341  [key=0, style=solid];
m38_340 -> m38_344  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_341 -> m38_342  [key=0, style=solid];
m38_341 -> m38_31  [key=2, style=dotted];
m38_341 -> m38_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_342 -> m38_340  [color=blue, key=0, style=bold];
m38_219 -> m38_928  [key=0, style=solid];
m38_219 -> m38_929  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m38_219 -> m38_216  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m38_928 -> m38_929  [key=0, style=solid];
m38_928 -> m38_931  [key=2, style=dotted];
m38_929 -> m38_930  [key=0, style=solid];
m38_929 -> m38_932  [key=2, style=dotted];
m38_930 -> m38_219  [color=blue, key=0, style=bold];
m38_314 -> m38_315  [key=0, style=solid];
m38_314 -> m38_318  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_315 -> m38_316  [key=0, style=solid];
m38_315 -> m38_31  [key=2, style=dotted];
m38_315 -> m38_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_316 -> m38_314  [color=blue, key=0, style=bold];
m38_804 -> m38_805  [key=0, style=solid];
m38_804 -> m38_806  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_804 -> m38_810  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_805 -> m38_806  [key=0, style=solid];
m38_805 -> m38_809  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_805 -> m38_805  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_806 -> m38_807  [key=0, style=solid];
m38_806 -> m38_31  [key=2, style=dotted];
m38_806 -> m38_808  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_807 -> m38_804  [color=blue, key=0, style=bold];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_56  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_54 -> m38_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_55 -> m38_56  [key=0, style=solid];
m38_55 -> m38_59  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_55 -> m38_60  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_55 -> m38_55  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_56 -> m38_57  [key=0, style=solid];
m38_56 -> m38_31  [key=2, style=dotted];
m38_56 -> m38_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_57 -> m38_54  [color=blue, key=0, style=bold];
m38_490 -> m38_491  [key=0, style=solid];
m38_490 -> m38_494  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_491 -> m38_492  [key=0, style=solid];
m38_491 -> m38_31  [key=2, style=dotted];
m38_491 -> m38_493  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_492 -> m38_490  [color=blue, key=0, style=bold];
m38_874 -> m38_875  [key=0, style=solid];
m38_874 -> m38_876  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_874 -> m38_880  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_875 -> m38_876  [key=0, style=solid];
m38_875 -> m38_879  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_875 -> m38_875  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_876 -> m38_877  [key=0, style=solid];
m38_876 -> m38_31  [key=2, style=dotted];
m38_876 -> m38_878  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_877 -> m38_874  [color=blue, key=0, style=bold];
m38_466 -> m38_467  [key=0, style=solid];
m38_466 -> m38_470  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_467 -> m38_468  [key=0, style=solid];
m38_467 -> m38_31  [key=2, style=dotted];
m38_467 -> m38_469  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_468 -> m38_466  [color=blue, key=0, style=bold];
m38_665 -> m38_666  [key=0, style=solid];
m38_665 -> m38_669  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_665 -> m38_673  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_666 -> m38_667  [key=0, style=solid];
m38_666 -> m38_31  [key=2, style=dotted];
m38_666 -> m38_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_667 -> m38_665  [color=blue, key=0, style=bold];
m38_297 -> m38_298  [key=0, style=solid];
m38_297 -> m38_301  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_298 -> m38_299  [key=0, style=solid];
m38_298 -> m38_31  [key=2, style=dotted];
m38_298 -> m38_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_299 -> m38_297  [color=blue, key=0, style=bold];
m38_14 -> m38_15  [key=0, style=solid];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_18  [key=2, style=dotted];
m38_15 -> m38_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_16 -> m38_17  [key=0, style=solid];
m38_16 -> m38_19  [key=2, style=dotted];
m38_17 -> m38_14  [color=blue, key=0, style=bold];
m38_650 -> m38_651  [key=0, style=solid];
m38_650 -> m38_654  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_650 -> m38_658  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_651 -> m38_652  [key=0, style=solid];
m38_651 -> m38_31  [key=2, style=dotted];
m38_651 -> m38_653  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_652 -> m38_650  [color=blue, key=0, style=bold];
m38_283 -> m38_284  [key=0, style=solid];
m38_283 -> m38_287  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_284 -> m38_285  [key=0, style=solid];
m38_284 -> m38_31  [key=2, style=dotted];
m38_284 -> m38_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_285 -> m38_283  [color=blue, key=0, style=bold];
m38_427 -> m38_428  [key=0, style=solid];
m38_427 -> m38_431  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_428 -> m38_429  [key=0, style=solid];
m38_428 -> m38_31  [key=2, style=dotted];
m38_428 -> m38_430  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_429 -> m38_427  [color=blue, key=0, style=bold];
m38_622 -> m38_623  [key=0, style=solid];
m38_622 -> m38_626  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_622 -> m38_629  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_623 -> m38_624  [key=0, style=solid];
m38_623 -> m38_31  [key=2, style=dotted];
m38_623 -> m38_625  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_624 -> m38_622  [color=blue, key=0, style=bold];
m38_790 -> m38_791  [key=0, style=solid];
m38_790 -> m38_794  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_790 -> m38_798  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_791 -> m38_792  [key=0, style=solid];
m38_791 -> m38_31  [key=2, style=dotted];
m38_791 -> m38_793  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_792 -> m38_790  [color=blue, key=0, style=bold];
m38_72 -> m38_73  [key=0, style=solid];
m38_72 -> m38_74  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_72 -> m38_83  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_73 -> m38_74  [key=0, style=solid];
m38_73 -> m38_77  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_73 -> m38_78  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_73 -> m38_28  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_74 -> m38_75  [key=0, style=solid];
m38_74 -> m38_31  [key=2, style=dotted];
m38_74 -> m38_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_75 -> m38_72  [color=blue, key=0, style=bold];
m38_239 -> m38_240  [key=0, style=solid];
m38_239 -> m38_243  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_240 -> m38_241  [key=0, style=solid];
m38_240 -> m38_31  [key=2, style=dotted];
m38_240 -> m38_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_241 -> m38_239  [color=blue, key=0, style=bold];
m38_364 -> m38_365  [key=0, style=solid];
m38_364 -> m38_368  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_365 -> m38_366  [key=0, style=solid];
m38_365 -> m38_31  [key=2, style=dotted];
m38_365 -> m38_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_366 -> m38_364  [color=blue, key=0, style=bold];
m38_113 -> m38_114  [key=0, style=solid];
m38_113 -> m38_115  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_113 -> m38_123  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_114 -> m38_115  [key=0, style=solid];
m38_114 -> m38_118  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_114 -> m38_28  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_115 -> m38_116  [key=0, style=solid];
m38_115 -> m38_31  [key=2, style=dotted];
m38_115 -> m38_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_116 -> m38_113  [color=blue, key=0, style=bold];
m38_144 -> m38_145  [key=0, style=solid];
m38_144 -> m38_146  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_144 -> m38_154  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_145 -> m38_146  [key=0, style=solid];
m38_145 -> m38_149  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_145 -> m38_28  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_146 -> m38_147  [key=0, style=solid];
m38_146 -> m38_31  [key=2, style=dotted];
m38_146 -> m38_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_147 -> m38_144  [color=blue, key=0, style=bold];
m38_732 -> m38_733  [key=0, style=solid];
m38_732 -> m38_734  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_732 -> m38_738  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_733 -> m38_734  [key=0, style=solid];
m38_733 -> m38_737  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_733 -> m38_733  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m38_734 -> m38_735  [key=0, style=solid];
m38_734 -> m38_31  [key=2, style=dotted];
m38_734 -> m38_736  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_735 -> m38_732  [color=blue, key=0, style=bold];
m38_949 -> m38_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_38  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_56  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_61  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_62  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_64  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_74  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_83  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_84  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_87  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_123  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_124  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_146  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_154  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_155  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_180  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_188  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_215  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_224  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_240  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_243  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_254  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_257  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_272  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_275  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_284  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_287  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_298  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_301  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_315  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_318  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_327  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_330  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_341  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_344  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_353  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_356  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_365  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_368  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_379  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_391  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_394  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_404  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_407  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_416  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_419  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_428  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_431  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_441  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_444  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_453  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_456  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_467  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_470  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_479  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_482  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_491  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_494  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_510  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_513  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_524  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_527  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_536  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_539  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_548  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_551  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_560  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_563  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_567  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_574  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_577  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_581  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_587  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_590  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_606  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_609  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_623  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_626  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_636  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_639  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_640  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_651  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_654  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_658  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_666  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_669  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_673  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_679  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_691  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_694  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_697  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_705  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_718  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_721  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_725  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_734  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_738  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_755  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_758  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_771  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_775  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_791  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_794  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_798  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_806  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_810  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_826  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_829  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_833  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_841  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_845  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_861  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_864  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_868  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_876  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_895  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_898  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_902  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_910  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_914  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_949 -> m38_934  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m38_950 -> m38_33  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_950 -> m38_34  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_951 -> m38_35  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_952 -> m38_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_953 -> m38_59  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_953 -> m38_60  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_954 -> m38_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_955 -> m38_69  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_956 -> m38_77  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_956 -> m38_78  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_957 -> m38_83  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_958 -> m38_110  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_959 -> m38_110  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_960 -> m38_118  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_961 -> m38_123  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_962 -> m38_142  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_963 -> m38_142  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_964 -> m38_149  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_965 -> m38_154  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_966 -> m38_175  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_967 -> m38_175  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_968 -> m38_183  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_969 -> m38_188  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_970 -> m38_209  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_971 -> m38_209  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_972 -> m38_224  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_973 -> m38_225  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m38_974 -> m38_243  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_975 -> m38_257  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_976 -> m38_275  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_977 -> m38_287  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_978 -> m38_301  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_979 -> m38_318  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_980 -> m38_330  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_981 -> m38_344  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_982 -> m38_356  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_983 -> m38_368  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_984 -> m38_382  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_985 -> m38_394  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_986 -> m38_407  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_987 -> m38_419  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_988 -> m38_431  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_989 -> m38_444  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_990 -> m38_456  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_991 -> m38_470  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_992 -> m38_482  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_993 -> m38_494  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_994 -> m38_513  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_995 -> m38_527  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_996 -> m38_539  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_997 -> m38_551  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_998 -> m38_563  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_998 -> m38_567  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_999 -> m38_567  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1000 -> m38_577  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1000 -> m38_581  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1001 -> m38_581  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1002 -> m38_590  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1003 -> m38_609  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1004 -> m38_626  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1004 -> m38_629  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1005 -> m38_629  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1006 -> m38_639  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1006 -> m38_640  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1007 -> m38_654  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1007 -> m38_658  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1008 -> m38_658  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1009 -> m38_669  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1009 -> m38_673  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1010 -> m38_673  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1011 -> m38_683  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1012 -> m38_688  [color=darkseagreen4, key=1, label=items, style=dashed];
m38_1013 -> m38_694  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1013 -> m38_697  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1014 -> m38_697  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1015 -> m38_708  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_1016 -> m38_709  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1017 -> m38_721  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1017 -> m38_725  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1018 -> m38_725  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1019 -> m38_737  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_1020 -> m38_738  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1021 -> m38_758  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1021 -> m38_762  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1022 -> m38_762  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1023 -> m38_774  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_1024 -> m38_775  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1025 -> m38_794  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1025 -> m38_798  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1026 -> m38_798  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1027 -> m38_809  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_1028 -> m38_810  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1029 -> m38_829  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1029 -> m38_833  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1030 -> m38_833  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1031 -> m38_844  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_1032 -> m38_845  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1033 -> m38_864  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1033 -> m38_868  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1034 -> m38_868  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1035 -> m38_879  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_1036 -> m38_880  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1037 -> m38_898  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1037 -> m38_902  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_1038 -> m38_902  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_1039 -> m38_913  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_1040 -> m38_914  [color=darkseagreen4, key=1, label=bool, style=dashed];
}
