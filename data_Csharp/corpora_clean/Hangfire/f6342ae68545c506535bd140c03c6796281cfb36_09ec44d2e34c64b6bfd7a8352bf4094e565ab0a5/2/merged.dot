digraph  {
n0 [label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35", cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])"];
n1 [label="Exit Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35", cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])"];
n2 [label="Entry Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="42-42", cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)"];
n3 [label="Exit Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="42-42", cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)"];
n4 [label="Entry Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="50-50", cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)"];
n5 [label="Exit Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="50-50", cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)"];
n6 [label="Entry Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57", cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)"];
n7 [label="Exit Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57", cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)"];
n8 [label="Entry Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65", cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)"];
n9 [label="Exit Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65", cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)"];
n10 [label="Entry Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73", cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)"];
n11 [label="Exit Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73", cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)"];
n12 [label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81", cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)"];
n13 [label="Exit Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81", cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)"];
d12 [label="var serverName = String.Format(''{0}:{1}'', MachineName, Process.GetCurrentProcess().Id)", span="59-59", cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0];
d30 [label="HangFire.BackgroundJobServer", span=""];
d10 [label="_server != null", span="54-54", cluster="HangFire.BackgroundJobServer.Start()"];
d13 [label="_server = new JobServer(\r\n                RedisFactory.BasicManager,\r\n                serverName, WorkerCount, Queues, JobActivator, PollInterval, TimeSpan.FromSeconds(5))", span="61-63", cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0];
d16 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()"];
d17 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
d14 [label="Exit HangFire.BackgroundJobServer.Start()", span="52-52", cluster="HangFire.BackgroundJobServer.Start()"];
d18 [label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)"];
d8 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
d3 [label="MachineName = Environment.MachineName", span="22-22", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])"];
d4 [label="PollInterval = TimeSpan.FromSeconds(15)", span="23-23", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])"];
d5 [label="WorkerCount = workerCount", span="25-25", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])"];
d6 [label="Queues = queues ?? new[] { ''default'' }", span="26-26", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])"];
d20 [label="_server != null", span="72-72", cluster="HangFire.BackgroundJobServer.Stop()"];
d21 [label="_server.Dispose()", span="74-74", cluster="HangFire.BackgroundJobServer.Stop()"];
d22 [label="_server = null", span="75-75", cluster="HangFire.BackgroundJobServer.Stop()"];
d28 [label="Stop()", span="84-84", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()"];
d9 [label="Entry HangFire.BackgroundJobServer.Start()", span="52-52", cluster="HangFire.BackgroundJobServer.Start()"];
d11 [label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="56-56", cluster="HangFire.BackgroundJobServer.Start()"];
d2 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])"];
d7 [label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])"];
d19 [label="Entry HangFire.BackgroundJobServer.Stop()", span="70-70", cluster="HangFire.BackgroundJobServer.Stop()"];
d24 [label="return false;", span="79-79", cluster="HangFire.BackgroundJobServer.Stop()"];
d26 [label="Entry HangFire.Server.JobServer.Dispose()", span="70-70", cluster="HangFire.Server.JobServer.Dispose()"];
d23 [label="return true;", span="77-77", cluster="HangFire.BackgroundJobServer.Stop()"];
d27 [label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()"];
d29 [label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()"];
d15 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
d25 [label="Exit HangFire.BackgroundJobServer.Stop()", span="70-70", cluster="HangFire.BackgroundJobServer.Stop()"];
m0_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="Client.feature.cs"];
m0_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="Client.feature.cs"];
m0_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="Client.feature.cs"];
m0_67 [label="Entry HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="156-156", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs"];
m0_68 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Arguments are converted to a JSON string and contained in the \'Args\' parameter'', ((string[])(null)))", span="158-158", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=red, community=0, file="Client.feature.cs"];
m0_69 [label="this.ScenarioSetup(scenarioInfo)", span="160-160", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs"];
m0_70 [label="this.FeatureBackground()", span="162-162", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs"];
m0_71 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="164-166", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=red, community=1, file="Client.feature.cs"];
m0_72 [label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''5''})", span="167-169", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=red, community=1, file="Client.feature.cs"];
m0_73 [label="table3.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Deleted''})", span="170-172", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=red, community=1, file="Client.feature.cs"];
m0_74 [label="testRunner.When(''I create a job with the following arguments:'', ((string)(null)), table3, ''When '')", span="174-174", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=red, community=0, file="Client.feature.cs"];
m0_75 [label="testRunner.Then(''the job contains all of the above arguments in the JSON format'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="176-176", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=red, community=0, file="Client.feature.cs"];
m0_76 [label="this.ScenarioCleanup()", span="178-178", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs"];
m0_77 [label="Exit HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="156-156", cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs"];
m0_9 [label="Entry HangFire.Tests.ClientFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Client.feature.cs"];
m0_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Client.feature.cs"];
m0_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Client.feature.cs"];
m0_12 [label="Exit HangFire.Tests.ClientFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Client.feature.cs"];
m0_94 [label="Entry HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="223-223", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs"];
m0_95 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty type causes an exception'', ((string[])(null)))", span="225-225", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_96 [label="this.ScenarioSetup(scenarioInfo)", span="227-227", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs"];
m0_97 [label="this.FeatureBackground()", span="229-229", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs"];
m0_98 [label="testRunner.When(''I create a job with null type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="231-231", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_99 [label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="233-233", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_100 [label="this.ScenarioCleanup()", span="235-235", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs"];
m0_101 [label="Exit HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="223-223", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs"];
m0_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="Client.feature.cs"];
m0_78 [label="Entry HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", span="185-185", cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs"];
m0_79 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The given state was applied to the job'', ((string[])(null)))", span="187-187", cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", color=red, community=0, file="Client.feature.cs"];
m0_80 [label="this.ScenarioSetup(scenarioInfo)", span="189-189", cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs"];
m0_81 [label="this.FeatureBackground()", span="191-191", cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs"];
m0_82 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="193-193", cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", color=red, community=0, file="Client.feature.cs"];
m0_83 [label="testRunner.Then(''the given state was applied to it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="195-195", cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", color=red, community=0, file="Client.feature.cs"];
m0_84 [label="this.ScenarioCleanup()", span="197-197", cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs"];
m0_85 [label="Exit HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", span="185-185", cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs"];
m0_22 [label="Entry HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Client.feature.cs"];
m0_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Client.feature.cs"];
m0_24 [label="Exit HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Client.feature.cs"];
m0_26 [label="Entry HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="Client.feature.cs"];
m0_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="Client.feature.cs"];
m0_28 [label="Exit HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="Client.feature.cs"];
m0_86 [label="Entry HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="204-204", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs"];
m0_87 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty id causes an exception'', ((string[])(null)))", span="206-206", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_88 [label="this.ScenarioSetup(scenarioInfo)", span="208-208", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs"];
m0_89 [label="this.FeatureBackground()", span="210-210", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs"];
m0_90 [label="testRunner.When(''I create a job with an empty id'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="212-212", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_91 [label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="214-214", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_92 [label="this.ScenarioCleanup()", span="216-216", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs"];
m0_93 [label="Exit HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="204-204", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs"];
m0_34 [label="Entry HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", span="83-83", cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs"];
m0_35 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The client creates the job in the storage'', ((string[])(null)))", span="85-85", cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", color=red, community=0, file="Client.feature.cs"];
m0_36 [label="this.ScenarioSetup(scenarioInfo)", span="87-87", cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs"];
m0_37 [label="this.FeatureBackground()", span="89-89", cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs"];
m0_38 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="91-91", cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", color=red, community=0, file="Client.feature.cs"];
m0_39 [label="testRunner.Then(''the storage contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93", cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", color=red, community=0, file="Client.feature.cs"];
m0_40 [label="this.ScenarioCleanup()", span="95-95", cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs"];
m0_41 [label="Exit HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", span="83-83", cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs"];
m0_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="Client.feature.cs"];
m0_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="Client.feature.cs"];
m0_14 [label="Entry HangFire.Tests.ClientFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Client.feature.cs"];
m0_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client''))", span="48-49", cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Client.feature.cs"];
m0_16 [label="HangFire.Tests.ClientFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Client.feature.cs"];
m0_17 [label="Exit HangFire.Tests.ClientFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Client.feature.cs"];
m0_18 [label="Entry HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="Client.feature.cs"];
m0_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="Client.feature.cs"];
m0_20 [label="Exit HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="Client.feature.cs"];
m0_43 [label="Entry Unk.When", span="", cluster="Unk.When", file="Client.feature.cs"];
m0_56 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="Client.feature.cs"];
m0_57 [label="Entry HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="129-129", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs"];
m0_58 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''If the arguments were not provided, the \'Args\' parameter contains the empty JSON '' +\r\n                    ''value'', ((string[])(null)))", span="131-132", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=red, community=1, file="Client.feature.cs"];
m0_59 [label="this.ScenarioSetup(scenarioInfo)", span="134-134", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs"];
m0_60 [label="this.FeatureBackground()", span="136-136", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs"];
m0_61 [label="testRunner.When(''I create an argumentless job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="138-138", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=red, community=0, file="Client.feature.cs"];
m0_62 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="140-142", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs"];
m0_63 [label="table2.AddRow(new string[] {\r\n                        ''Args'',\r\n                        ''{}''})", span="143-145", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=red, community=0, file="Client.feature.cs"];
m0_64 [label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table2, ''Then '')", span="147-147", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=red, community=0, file="Client.feature.cs"];
m0_65 [label="this.ScenarioCleanup()", span="149-149", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs"];
m0_66 [label="Exit HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="129-129", cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs"];
m0_45 [label="Entry HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="102-102", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs"];
m0_46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job contains the \'Type\' parameter equal to the assembly qualified type name'', ((string[])(null)))", span="104-104", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=red, community=0, file="Client.feature.cs"];
m0_47 [label="this.ScenarioSetup(scenarioInfo)", span="106-106", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs"];
m0_48 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs"];
m0_49 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="110-110", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=red, community=0, file="Client.feature.cs"];
m0_50 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="112-114", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs"];
m0_51 [label="table1.AddRow(new string[] {\r\n                        ''Type'',\r\n                        ''<Assembly qualified name of \'HangFire.Tests.TestJob\' type>''})", span="115-117", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=red, community=0, file="Client.feature.cs"];
m0_52 [label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table1, ''Then '')", span="119-119", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=red, community=0, file="Client.feature.cs"];
m0_53 [label="this.ScenarioCleanup()", span="121-121", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs"];
m0_54 [label="Exit HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="102-102", cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs"];
m0_42 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="Client.feature.cs"];
m0_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="Client.feature.cs"];
m0_30 [label="Entry HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="Client.feature.cs"];
m0_31 [label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.ClientFeature.FeatureBackground()", color=red, community=0, file="Client.feature.cs"];
m0_32 [label="Exit HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="Client.feature.cs"];
m0_33 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="Client.feature.cs"];
m0_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="Client.feature.cs"];
m0_55 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="Client.feature.cs"];
m0_110 [label="Entry HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="263-263", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs"];
m0_111 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty state causes an exception'', ((string[])(null)))", span="265-265", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_112 [label="this.ScenarioSetup(scenarioInfo)", span="267-267", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs"];
m0_113 [label="this.FeatureBackground()", span="269-269", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs"];
m0_114 [label="testRunner.When(''I create a job with an empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="271-271", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_115 [label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="273-273", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_116 [label="this.ScenarioCleanup()", span="275-275", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs"];
m0_117 [label="Exit HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="263-263", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs"];
m0_0 [label="Entry HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs"];
m0_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs"];
m0_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs"];
m0_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs"];
m0_4 [label="Exit HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs"];
m0_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="Client.feature.cs"];
m0_102 [label="Entry HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="243-243", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs"];
m0_103 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with the type, that is not derived from the \'BackgroundJob\' causes'' +\r\n                    '' an exception'', ((string[])(null)))", span="245-246", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=red, community=1, file="Client.feature.cs"];
m0_104 [label="this.ScenarioSetup(scenarioInfo)", span="248-248", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs"];
m0_105 [label="this.FeatureBackground()", span="250-250", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs"];
m0_106 [label="testRunner.When(''I create a job with the incorrect type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="252-252", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_107 [label="testRunner.Then(''a \'System.ArgumentException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="254-254", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=red, community=0, file="Client.feature.cs"];
m0_108 [label="this.ScenarioCleanup()", span="256-256", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs"];
m0_109 [label="Exit HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="243-243", cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs"];
m0_118 [label="HangFire.Tests.ClientFeature", span="", file="Client.feature.cs"];
m2_35 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="ClientSteps.cs"];
m2_111 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="ClientSteps.cs"];
m2_112 [label="ThenTheArgumentlessJobShouldBeCreated(type)", span="177-177", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", color=green, community=0, file="ClientSteps.cs"];
m2_113 [label="ThenItShouldBeEnqueuedToTheQueue(queue)", span="178-178", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", color=green, community=0, file="ClientSteps.cs"];
m2_114 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="ClientSteps.cs"];
m2_42 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="ClientSteps.cs"];
m2_78 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="58-58", cluster="HangFire.JobHelper.FromTimestamp(long)", file="ClientSteps.cs"];
m2_103 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="ClientSteps.cs"];
m2_104 [label="ThenTheArgumentlessJobShouldBeCreated(type)", span="163-163", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", color=green, community=0, file="ClientSteps.cs"];
m2_105 [label="ThenItShouldBeScheduledForTomorrow()", span="164-164", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", color=green, community=0, file="ClientSteps.cs"];
m2_106 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="ClientSteps.cs"];
m2_76 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="ClientSteps.cs"];
m2_39 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ClientSteps.cs"];
m2_54 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="ClientSteps.cs"];
m2_57 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ClientSteps.cs"];
m2_37 [label="Entry HangFire.Perform.Async<TJob>(object)", span="40-40", cluster="HangFire.Perform.Async<TJob>(object)", file="ClientSteps.cs"];
m2_36 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ClientSteps.cs"];
m2_53 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ClientSteps.cs"];
m2_80 [label="Entry HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="ClientSteps.cs"];
m2_81 [label="Assert.IsNotNull(_exception)", span="131-131", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", color=green, community=0, file="ClientSteps.cs"];
m2_82 [label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="132-132", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", color=green, community=0, file="ClientSteps.cs"];
m2_83 [label="Exit HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="ClientSteps.cs"];
m2_30 [label=PendingStepException, span="80-80", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", color=green, community=0];
m2_58 [label="Entry Unk.>", span="", cluster="Unk.>", file="ClientSteps.cs"];
m2_77 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="ClientSteps.cs"];
m2_55 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="ClientSteps.cs"];
m2_40 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="ClientSteps.cs"];
m2_34 [label="Exit HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m2_43 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="ClientSteps.cs"];
m2_59 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ClientSteps.cs"];
m2_45 [label="Entry Unk.Pending", span="", cluster="Unk.Pending", file="ClientSteps.cs"];
m2_44 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="ClientSteps.cs"];
m2_87 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs"];
m2_88 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="138-138", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs"];
m2_89 [label="Assert.AreNotEqual(0, job.Count)", span="139-139", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs"];
m2_90 [label="Assert.IsTrue(job[''Type''].Contains(type))", span="140-140", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs"];
m2_91 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="142-142", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs"];
m2_92 [label="DictionaryAssert.ContainsFollowingItems(table, args)", span="143-143", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs"];
m2_93 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs"];
m2_94 [label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="ClientSteps.cs"];
m2_95 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="ClientSteps.cs"];
m2_96 [label="ThenTheArgumentlessJobShouldBeCreated(type)", span="149-149", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", color=green, community=0, file="ClientSteps.cs"];
m2_97 [label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="150-150", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", color=green, community=0, file="ClientSteps.cs"];
m2_98 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="ClientSteps.cs"];
m2_79 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="ClientSteps.cs"];
m2_41 [label="HangFire.Web.Pages.ServersPage", span="", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="ClientSteps.cs"];
m2_46 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs"];
m2_47 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="93-93", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs"];
m2_48 [label="Assert.AreNotEqual(0, job.Count)", span="94-94", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs"];
m2_49 [label="Assert.IsTrue(job[''Type''].Contains(type))", span="95-95", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs"];
m2_50 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="97-97", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs"];
m2_51 [label="Assert.AreEqual(0, args.Count)", span="98-98", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs"];
m2_52 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs"];
m2_0 [label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs"];
m2_1 [label="WriteLiteral(''\n'')", span="61-61", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=red, community=0, file="ClientSteps.cs"];
m2_2 [label="Entry HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m2_3 [label="code.Equals(''Perform.Async<TestJob>()'')", span="23-23", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_4 [label="_jobId = Perform.Async<TestJob>()", span="25-25", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_5 [label="code.Equals(''Perform.Async<TestJob>(new { ArticleId = 3, Author = \''odinserj\'' })'')", span="27-27", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_6 [label="_jobId = Perform.Async<TestJob>(new { ArticleId = 3, Author = ''odinserj'' })", span="29-29", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", color=green, community=0];
m2_9 [label="code.Equals(''Perform.Async(null)'')", span="35-35", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_7 [label="code.Equals(''Perform.Async(typeof(TestJob))'')", span="31-31", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_8 [label="_jobId = Perform.Async(typeof (TestJob))", span="33-33", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_10 [label="_jobId = Perform.Async(null)", span="37-37", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_28 [label="_jobId = Perform.Async<EmptyQueueJob>()", span="73-73", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_11 [label="code.Equals(''Perform.Async(typeof(TestJob), new { ArticleId = 3 })'')", span="39-39", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_13 [label="code.Equals(''Perform.Async(null, new { ArticleId = 3 })'')", span="43-43", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", color=green, community=0];
m2_15 [label="code.Equals(''Perform.In<TestJob>(TimeSpan.FromDays(1))'')", span="47-47", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_17 [label="code.Equals(''Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })'')", span="51-51", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_19 [label="code.Equals(''Perform.In(TimeSpan.FromDays(1), typeof(TestJob))'')", span="55-55", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_21 [label="code.Equals(''Perform.In(TimeSpan.FromDays(1), typeof(TestJob), new { ArticleId = 3 })'')", span="59-59", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_23 [label="code.Equals(''Perform.Async<CriticalQueueJob>()'')", span="63-63", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", color=green, community=0];
m2_25 [label="code.Equals(''Perform.Async<InvalidQueueJob>()'')", span="67-67", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_12 [label="_jobId = Perform.Async(typeof (TestJob), new { ArticleId = 3 })", span="41-41", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_14 [label="_jobId = Perform.Async(null, new { ArticleId = 3 })", span="45-45", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_16 [label="_jobId = Perform.In<TestJob>(TimeSpan.FromDays(1))", span="49-49", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_18 [label="_jobId = Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })", span="53-53", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", color=green, community=0];
m2_20 [label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob))", span="57-57", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", color=green, community=0];
m2_22 [label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { ArticleId = 3 })", span="61-61", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_27 [label="code.Equals(''Perform.Async<EmptyQueueJob>()'')", span="71-71", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", color=green, community=0];
m2_24 [label="_jobId = Perform.Async<CriticalQueueJob>()", span="65-65", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", color=green, community=0];
m2_26 [label="_jobId = Perform.Async<InvalidQueueJob>()", span="69-69", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs"];
m2_29 [label="ScenarioContext.Current.Pending()", span="77-77", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", color=green, community=0];
m2_38 [label="Entry HangFire.Perform.Async(System.Type)", span="55-55", cluster="HangFire.Perform.Async(System.Type)", file="ClientSteps.cs"];
m2_32 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ClientSteps.cs"];
m2_31 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", color=green, community=0, file="ClientSteps.cs"];
m2_33 [label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25", cluster="HangFire.Storage.IMonitoringApi.Servers()", file="ClientSteps.cs"];
m2_60 [label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="ClientSteps.cs"];
m2_61 [label="ThenItShouldBeEnqueuedToTheQueue(QueueSteps.DefaultQueue)", span="104-104", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", color=green, community=0, file="ClientSteps.cs"];
m2_62 [label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="ClientSteps.cs"];
m2_86 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="ClientSteps.cs"];
m2_68 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="ClientSteps.cs"];
m2_84 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="ClientSteps.cs"];
m2_56 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ClientSteps.cs"];
m2_69 [label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs"];
m2_70 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', _jobId))", span="120-120", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs"];
m2_71 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', _jobId)", span="121-121", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs"];
m2_72 [label="var timestamp = JobHelper.FromTimestamp((long) score)", span="122-122", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs"];
m2_73 [label="Assert.IsTrue(DateTime.UtcNow.Date.AddDays(1) <= timestamp)", span="124-124", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs"];
m2_74 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="125-125", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs"];
m2_75 [label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs"];
m2_99 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="ClientSteps.cs"];
m2_100 [label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="156-156", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", color=green, community=0, file="ClientSteps.cs"];
m2_101 [label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="157-157", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", color=green, community=0, file="ClientSteps.cs"];
m2_102 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="ClientSteps.cs"];
m2_107 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="ClientSteps.cs"];
m2_108 [label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="170-170", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", color=green, community=0, file="ClientSteps.cs"];
m2_109 [label="ThenItShouldBeScheduledForTomorrow()", span="171-171", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", color=green, community=0, file="ClientSteps.cs"];
m2_110 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="ClientSteps.cs"];
m2_63 [label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="ClientSteps.cs"];
m2_64 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', name))", span="110-111", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", color=green, community=1, file="ClientSteps.cs"];
m2_65 [label="Assert.AreEqual(1, jobIds.Count)", span="113-113", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", color=green, community=0, file="ClientSteps.cs"];
m2_66 [label="Assert.AreEqual(_jobId, jobIds[0])", span="114-114", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", color=green, community=0, file="ClientSteps.cs"];
m2_67 [label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="ClientSteps.cs"];
m2_85 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="ClientSteps.cs"];
m2_115 [label="HangFire.Tests.ClientSteps", span="", file="ClientSteps.cs"];
m5_3 [label="Entry HangFire.Redis.RedisConnection.Dispose()", span="39-39", cluster="HangFire.Redis.RedisConnection.Dispose()", file="DequeuedJobsWatcher.feature.cs"];
m5_4 [label="Redis.Dispose()", span="41-41", cluster="HangFire.Redis.RedisConnection.Dispose()", file="DequeuedJobsWatcher.feature.cs"];
m5_5 [label="Exit HangFire.Redis.RedisConnection.Dispose()", span="39-39", cluster="HangFire.Redis.RedisConnection.Dispose()", file="DequeuedJobsWatcher.feature.cs"];
m5_113 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_168 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="DequeuedJobsWatcher.feature.cs"];
m5_25 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="95-98", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_12 [label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_13 [label="string jobId", span="51-51", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m5_16 [label="cancellationToken.ThrowIfCancellationRequested()", span="57-57", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_17 [label="queueIndex = (queueIndex + 1) % queues.Length", span="59-59", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_18 [label="queueName = queues[queueIndex]", span="60-60", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_14 [label="string queueName", span="52-52", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_15 [label="var queueIndex = 0", span="53-53", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_21 [label="queueIndex == 0", span="65-65", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_19 [label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="62-62", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_20 [label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="63-63", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_26 [label="return new RedisFetchedJob(Redis, jobId, queueName);", span="104-104", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_22 [label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="67-70", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_23 [label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="74-75", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_24 [label="jobId == null", span="78-78", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_27 [label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs"];
m5_35 [label="Entry HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_36 [label="return Redis.AcquireLock(RedisStorage.Prefix + resource, timeout);", span="109-109", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_37 [label="Exit HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_58 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DequeuedJobsWatcher.feature.cs"];
m5_98 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_131 [label="Entry Unk.GetAllItemsFromSortedSet", span="", cluster="Unk.GetAllItemsFromSortedSet", file="DequeuedJobsWatcher.feature.cs"];
m5_50 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="136-138", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_39 [label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_40 [label="var jobId = Guid.NewGuid().ToString()", span="118-118", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_41 [label="var invocationData = InvocationData.Serialize(job)", span="120-120", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_42 [label="var storedParameters = new Dictionary<string, string>(parameters)", span="123-123", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_47 [label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(createdAt))", span="128-128", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_49 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="132-134", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_52 [label="return jobId;", span="144-144", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_43 [label="storedParameters.Add(''Type'', invocationData.Type)", span="124-124", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_44 [label="storedParameters.Add(''Method'', invocationData.Method)", span="125-125", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_45 [label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="126-126", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_46 [label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="127-127", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_48 [label="var transaction = Redis.CreateTransaction()", span="130-130", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_51 [label="transaction.Commit()", span="141-141", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_53 [label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_64 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="DequeuedJobsWatcher.feature.cs"];
m5_133 [label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DequeuedJobsWatcher.feature.cs"];
m5_134 [label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="250-252", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DequeuedJobsWatcher.feature.cs"];
m5_135 [label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DequeuedJobsWatcher.feature.cs"];
m5_226 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="DequeuedJobsWatcher.feature.cs"];
m5_96 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="DequeuedJobsWatcher.feature.cs"];
m5_102 [label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_103 [label="jobId == null", span="206-206", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_105 [label="var entries = Redis.GetAllEntriesFromHash(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state'', jobId))", span="208-209", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_104 [label="throw new ArgumentNullException(''jobId'');", span="206-206", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_106 [label="entries.Count == 0", span="211-211", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_108 [label="var stateData = new Dictionary<string, string>(entries)", span="213-213", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_111 [label="return new StateData\r\n            {\r\n                Name = entries[''State''],\r\n                Reason = entries.ContainsKey(''Reason'') ? entries[''Reason''] : null,\r\n                Data = stateData\r\n            };", span="217-222", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_107 [label="return null;", span="211-211", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_109 [label="stateData.Remove(''State'')", span="214-214", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_110 [label="stateData.Remove(''Reason'')", span="215-215", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_112 [label="Exit HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_114 [label="Entry Dictionary<string, string>.cstr", span="", cluster="Dictionary<string, string>.cstr", file="DequeuedJobsWatcher.feature.cs"];
m5_225 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="DequeuedJobsWatcher.feature.cs"];
m5_11 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="DequeuedJobsWatcher.feature.cs"];
m5_33 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="DequeuedJobsWatcher.feature.cs"];
m5_130 [label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107", cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_163 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="DequeuedJobsWatcher.feature.cs"];
m5_193 [label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_194 [label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="330-330", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_205 [label="utcNow > maxTime.Add(timeOut)", span="361-361", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_195 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="331-331", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_198 [label=serverNames, span="337-337", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_196 [label="var utcNow = DateTime.UtcNow", span="333-333", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_200 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="341-349", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_203 [label=heartbeats, span="356-356", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_197 [label="var pipeline = Redis.CreatePipeline()", span="335-335", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_201 [label="pipeline.Flush()", span="352-352", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_199 [label="var name = serverName", span="339-339", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_202 [label="var removedServerCount = 0", span="355-355", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_207 [label="removedServerCount++", span="364-364", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_208 [label="return removedServerCount;", span="368-368", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_204 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="358-359", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_206 [label="RemoveServer(Redis, heartbeat.Key)", span="363-363", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_209 [label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_29 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="DequeuedJobsWatcher.feature.cs"];
m5_30 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="DequeuedJobsWatcher.feature.cs"];
m5_191 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="322-325", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_190 [label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_192 [label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_189 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="DequeuedJobsWatcher.feature.cs"];
m5_179 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="312-314", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_176 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_177 [label="var transaction = redis.CreateTransaction()", span="306-306", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_178 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="308-310", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_180 [label="transaction.Commit()", span="316-316", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_181 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_7 [label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="DequeuedJobsWatcher.feature.cs"];
m5_8 [label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="46-46", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="DequeuedJobsWatcher.feature.cs"];
m5_9 [label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="DequeuedJobsWatcher.feature.cs"];
m5_101 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_120 [label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_121 [label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="235-237", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_122 [label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_68 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="DequeuedJobsWatcher.feature.cs"];
m5_55 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="DequeuedJobsWatcher.feature.cs"];
m5_138 [label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs"];
m5_139 [label="key == null", span="257-257", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs"];
m5_141 [label="keyValuePairs == null", span="258-258", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs"];
m5_143 [label="Redis.SetRangeInHash(RedisStorage.GetRedisKey(key), keyValuePairs)", span="260-260", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs"];
m5_140 [label="throw new ArgumentNullException(''key'');", span="257-257", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs"];
m5_142 [label="throw new ArgumentNullException(''keyValuePairs'');", span="258-258", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs"];
m5_144 [label="Exit HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs"];
m5_212 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="DequeuedJobsWatcher.feature.cs"];
m5_28 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="DequeuedJobsWatcher.feature.cs"];
m5_10 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="DequeuedJobsWatcher.feature.cs"];
m5_227 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="DequeuedJobsWatcher.feature.cs"];
m5_215 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs"];
m5_116 [label="Entry HangFire.Storage.StateData.StateData()", span="21-21", cluster="HangFire.Storage.StateData.StateData()", file="DequeuedJobsWatcher.feature.cs"];
m5_151 [label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs"];
m5_152 [label="var transaction = Redis.CreateTransaction()", span="274-274", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs"];
m5_153 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="276-277", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs"];
m5_154 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="279-285", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs"];
m5_155 [label="context.Queues", span="287-287", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs"];
m5_157 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="290-292", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs"];
m5_158 [label="transaction.Commit()", span="295-295", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs"];
m5_156 [label="var queue1 = queue", span="289-289", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs"];
m5_159 [label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs"];
m5_167 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcher.feature.cs"];
m5_224 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="DequeuedJobsWatcher.feature.cs"];
m5_34 [label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", span="30-30", cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_57 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DequeuedJobsWatcher.feature.cs"];
m5_172 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="DequeuedJobsWatcher.feature.cs"];
m5_6 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="DequeuedJobsWatcher.feature.cs"];
m5_185 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="DequeuedJobsWatcher.feature.cs"];
m5_213 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="DequeuedJobsWatcher.feature.cs"];
m5_173 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_174 [label="RemoveServer(Redis, serverId)", span="301-301", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_175 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_214 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="DequeuedJobsWatcher.feature.cs"];
m5_69 [label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_70 [label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="149-150", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_71 [label="storedData.Count == 0", span="152-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_78 [label="storedData.ContainsKey(''Type'')", span="160-160", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_79 [label="type = storedData[''Type'']", span="162-162", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_80 [label="storedData.ContainsKey(''Method'')", span="164-164", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_81 [label="method = storedData[''Method'']", span="166-166", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_82 [label="storedData.ContainsKey(''ParameterTypes'')", span="168-168", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_83 [label="parameterTypes = storedData[''ParameterTypes'']", span="170-170", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_84 [label="storedData.ContainsKey(''Arguments'')", span="172-172", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_85 [label="arguments = storedData[''Arguments'']", span="174-174", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_86 [label="storedData.ContainsKey(''CreatedAt'')", span="176-176", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_87 [label="createdAt = storedData[''CreatedAt'']", span="178-178", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_94 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                CreatedAt = JobHelper.FromNullableStringTimestamp(createdAt) ?? DateTime.MinValue,\r\n                LoadException = loadException\r\n            };", span="195-201", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_72 [label="return null;", span="152-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_73 [label="string type = null", span="154-154", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_74 [label="string method = null", span="155-155", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_90 [label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="184-184", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_75 [label="string parameterTypes = null", span="156-156", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_76 [label="string arguments = null", span="157-157", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_77 [label="string createdAt = null", span="158-158", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_88 [label="Job job = null", span="181-181", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_89 [label="JobLoadException loadException = null", span="182-182", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_91 [label="job = invocationData.Deserialize()", span="188-188", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_92 [label=JobLoadException, span="190-190", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_93 [label="loadException = ex", span="192-192", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_95 [label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_221 [label="Entry lambda expression", span="345-349", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_66 [label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="136-138", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_62 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="132-134", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_61 [label="Entry lambda expression", span="132-134", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_65 [label="Entry lambda expression", span="136-138", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_63 [label="Exit lambda expression", span="132-134", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_67 [label="Exit lambda expression", span="136-138", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_161 [label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="276-277", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_165 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="279-285", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_170 [label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="290-292", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_160 [label="Entry lambda expression", span="276-277", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_164 [label="Entry lambda expression", span="279-285", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_169 [label="Entry lambda expression", span="290-292", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_162 [label="Exit lambda expression", span="276-277", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_166 [label="Exit lambda expression", span="279-285", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_171 [label="Exit lambda expression", span="290-292", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_183 [label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="308-310", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_187 [label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="312-314", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_182 [label="Entry lambda expression", span="308-310", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_186 [label="Entry lambda expression", span="312-314", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_184 [label="Exit lambda expression", span="308-310", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_188 [label="Exit lambda expression", span="312-314", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_222 [label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="345-349", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_217 [label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="342-344", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_216 [label="Entry lambda expression", span="342-344", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_218 [label="Exit lambda expression", span="342-344", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_223 [label="Exit lambda expression", span="345-349", cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs"];
m5_0 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="DequeuedJobsWatcher.feature.cs"];
m5_1 [label="Redis = redis", span="34-34", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="DequeuedJobsWatcher.feature.cs"];
m5_2 [label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="DequeuedJobsWatcher.feature.cs"];
m5_32 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DequeuedJobsWatcher.feature.cs"];
m5_137 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="DequeuedJobsWatcher.feature.cs"];
m5_145 [label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_146 [label="key == null", span="265-265", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_148 [label="var result = Redis.GetAllEntriesFromHash(RedisStorage.GetRedisKey(key))", span="267-267", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_147 [label="throw new ArgumentNullException(''key'');", span="265-265", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_149 [label="return result.Count != 0 ? result : null;", span="269-269", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_150 [label="Exit HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_211 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="DequeuedJobsWatcher.feature.cs"];
m5_118 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="227-230", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_117 [label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_119 [label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="DequeuedJobsWatcher.feature.cs"];
m5_54 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="DequeuedJobsWatcher.feature.cs"];
m5_123 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="DequeuedJobsWatcher.feature.cs"];
m5_60 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="DequeuedJobsWatcher.feature.cs"];
m5_210 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="DequeuedJobsWatcher.feature.cs"];
m5_124 [label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_125 [label="key == null", span="242-242", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_127 [label="var result = Redis.GetAllItemsFromSortedSet(RedisStorage.GetRedisKey(key))", span="244-244", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_126 [label="throw new ArgumentNullException(''key'');", span="242-242", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_128 [label="return new HashSet<string>(result);", span="245-245", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_129 [label="Exit HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs"];
m5_100 [label="Entry HangFire.Storage.JobData.JobData()", span="21-21", cluster="HangFire.Storage.JobData.JobData()", file="DequeuedJobsWatcher.feature.cs"];
m5_99 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="DequeuedJobsWatcher.feature.cs"];
m5_219 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="DequeuedJobsWatcher.feature.cs"];
m5_220 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="DequeuedJobsWatcher.feature.cs"];
m5_132 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr", file="DequeuedJobsWatcher.feature.cs"];
m5_59 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="DequeuedJobsWatcher.feature.cs"];
m5_136 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="DequeuedJobsWatcher.feature.cs"];
m5_31 [label="Entry Unk.PopAndPushItemBetweenLists", span="", cluster="Unk.PopAndPushItemBetweenLists", file="DequeuedJobsWatcher.feature.cs"];
m5_115 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="DequeuedJobsWatcher.feature.cs"];
m5_38 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="DequeuedJobsWatcher.feature.cs"];
m5_56 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="DequeuedJobsWatcher.feature.cs"];
m5_97 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="DequeuedJobsWatcher.feature.cs"];
m5_228 [label="HangFire.Redis.RedisConnection", span="", file="DequeuedJobsWatcher.feature.cs"];
m5_229 [label=jobId, span="", file="DequeuedJobsWatcher.feature.cs"];
m5_230 [label=storedParameters, span="", file="DequeuedJobsWatcher.feature.cs"];
m5_231 [label="System.TimeSpan", span="", file="DequeuedJobsWatcher.feature.cs"];
m5_232 [label=string, span="", file="DequeuedJobsWatcher.feature.cs"];
m5_233 [label="HangFire.Server.ServerContext", span="", file="DequeuedJobsWatcher.feature.cs"];
m5_234 [label=queue1, span="", file="DequeuedJobsWatcher.feature.cs"];
m5_235 [label=string, span="", file="DequeuedJobsWatcher.feature.cs"];
m5_236 [label=name, span="", file="DequeuedJobsWatcher.feature.cs"];
m5_237 [label=heartbeats, span="", file="DequeuedJobsWatcher.feature.cs"];
m6_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DequeuedJobsWatcherSteps.cs"];
m6_77 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DequeuedJobsWatcherSteps.cs"];
m6_16 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_17 [label="String.IsNullOrEmpty(jobId)", span="36-36", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_19 [label="jobType == null", span="37-37", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_21 [label="state == null", span="38-38", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_23 [label="args == null", span="39-39", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_25 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="39-39", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs"];
m6_26 [label="var watcher = new DequeuedJobsWatcher(RedisFactory.BasicManager)", span="41-41", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", color=green, community=0];
m6_27 [label="watcher.FindAndRequeueTimedOutJobs()", span="43-43", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs"];
m6_28 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="39-39", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs"];
m6_30 [label="Entry HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="32-32", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcherSteps.cs"];
m6_18 [label="throw new ArgumentNullException(''jobId'');", span="36-36", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_20 [label="throw new ArgumentNullException(''jobType'');", span="37-37", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_22 [label="throw new ArgumentNullException(''state'');", span="38-38", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_24 [label="throw new ArgumentNullException(''args'');", span="39-39", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_29 [label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="DequeuedJobsWatcherSteps.cs"];
m6_31 [label=Exception, span="59-59", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_32 [label="throw new CreateJobFailedException(''Job creation was failed. See the inner exception for details.'', ex);", span="61-61", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_33 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_75 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_43 [label="Entry HangFire.Client.JobClient.Dispose()", span="65-65", cluster="HangFire.Client.JobClient.Dispose()", file="DequeuedJobsWatcherSteps.cs"];
m6_44 [label="_redis.Dispose()", span="67-67", cluster="HangFire.Client.JobClient.Dispose()", file="DequeuedJobsWatcherSteps.cs"];
m6_45 [label="Exit HangFire.Client.JobClient.Dispose()", span="65-65", cluster="HangFire.Client.JobClient.Dispose()", file="DequeuedJobsWatcherSteps.cs"];
m6_38 [label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_47 [label="var job = new Dictionary<string, string>()", span="73-73", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_48 [label="job[''Type''] = jobType.AssemblyQualifiedName", span="74-74", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_49 [label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="75-75", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_50 [label="job[''State''] = String.Empty", span="76-76", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_51 [label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="77-77", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_52 [label="return job;", span="79-79", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_53 [label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs"];
m6_35 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="DequeuedJobsWatcherSteps.cs"];
m6_73 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DequeuedJobsWatcherSteps.cs"];
m6_55 [label="Entry HangFire.JobHelper.ToJson(object)", span="40-40", cluster="HangFire.JobHelper.ToJson(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_56 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="DequeuedJobsWatcherSteps.cs"];
m6_71 [label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_0 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="DequeuedJobsWatcherSteps.cs"];
m6_1 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="DequeuedJobsWatcherSteps.cs"];
m6_2 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs"];
m6_3 [label="redisManager == null", span="20-20", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs"];
m6_5 [label="jobCreator == null", span="21-21", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs"];
m6_7 [label="_redis = redisManager.GetClient()", span="23-23", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs"];
m6_8 [label="_jobCreator = jobCreator", span="24-24", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs"];
m6_4 [label="throw new ArgumentNullException(''redisManager'');", span="20-20", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs"];
m6_6 [label="throw new ArgumentNullException(''jobCreator'');", span="21-21", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs"];
m6_9 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs"];
m6_74 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="DequeuedJobsWatcherSteps.cs"];
m6_11 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="DequeuedJobsWatcherSteps.cs"];
m6_54 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcherSteps.cs"];
m6_76 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="DequeuedJobsWatcherSteps.cs"];
m6_72 [label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_34 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="DequeuedJobsWatcherSteps.cs"];
m6_46 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="DequeuedJobsWatcherSteps.cs"];
m6_41 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="DequeuedJobsWatcherSteps.cs"];
m6_42 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="DequeuedJobsWatcherSteps.cs"];
m6_15 [label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_57 [label="var result = new Dictionary<string, string>()", span="84-84", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_58 [label="obj == null", span="85-85", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_60 [label="TypeDescriptor.GetProperties(obj)", span="87-87", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_61 [label="var propertyValue = descriptor.GetValue(obj)", span="89-89", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_59 [label="return result;", span="85-85", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_68 [label="result.Add(descriptor.Name, value)", span="110-110", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_69 [label="return result;", span="113-113", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_67 [label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="101-106", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_62 [label="string value = null", span="90-90", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_63 [label="propertyValue != null", span="92-92", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_64 [label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="96-96", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_65 [label="value = converter.ConvertToInvariantString(propertyValue)", span="97-97", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_66 [label=Exception, span="99-99", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_70 [label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs"];
m6_40 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="DequeuedJobsWatcherSteps.cs"];
m6_36 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="DequeuedJobsWatcherSteps.cs"];
m6_12 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="DequeuedJobsWatcherSteps.cs"];
m6_13 [label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="DequeuedJobsWatcherSteps.cs"];
m6_14 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="DequeuedJobsWatcherSteps.cs"];
m6_39 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="DequeuedJobsWatcherSteps.cs"];
m6_78 [label="HangFire.Client.JobClient", span="", file="DequeuedJobsWatcherSteps.cs"];
m8_0 [label="Entry HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7", cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="IJobClient.cs"];
m8_1 [label="Exit HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7", cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="IJobClient.cs"];
m10_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobClient.cs"];
m10_74 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobClient.cs"];
m10_16 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_17 [label="String.IsNullOrEmpty(jobId)", span="36-36", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_19 [label="jobType == null", span="37-37", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_21 [label="state == null", span="38-38", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_23 [label="args == null", span="39-39", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_25 [label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="41-41", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_26 [label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="43-45", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_27 [label="var jobParameters = CreateJobParameters(jobType, args)", span="50-50", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs"];
m10_28 [label="var context = new CreateContext(\r\n                    new ClientJobDescriptor(_redis, jobId, jobParameters, state))", span="52-53", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=1, file="JobClient.cs"];
m10_30 [label="return jobId;", span="57-57", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs"];
m10_18 [label="throw new ArgumentNullException(''jobId'');", span="36-36", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_20 [label="throw new ArgumentNullException(''jobType'');", span="37-37", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_22 [label="throw new ArgumentNullException(''state'');", span="38-38", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_24 [label="throw new ArgumentNullException(''args'');", span="39-39", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_29 [label="_jobCreator.CreateJob(context)", span="55-55", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs"];
m10_31 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs"];
m10_32 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", color=green, community=0, file="JobClient.cs"];
m10_72 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="JobClient.cs"];
m10_40 [label="Entry HangFire.Client.JobClient.Dispose()", span="58-58", cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs"];
m10_41 [label="_redis.Dispose()", span="60-60", cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs"];
m10_42 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="JobClient.cs"];
m10_36 [label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="63-63", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_44 [label="var job = new Dictionary<string, string>()", span="66-66", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_45 [label="job[''Type''] = jobType.AssemblyQualifiedName", span="67-67", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_46 [label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="68-68", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_47 [label="job[''State''] = String.Empty", span="69-69", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_48 [label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="70-70", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_49 [label="return job;", span="72-72", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_50 [label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="63-63", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m10_33 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JobClient.cs"];
m10_70 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JobClient.cs"];
m10_52 [label="Entry HangFire.JobHelper.ToJson(object)", span="32-32", cluster="HangFire.JobHelper.ToJson(object)", file="JobClient.cs"];
m10_53 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobClient.cs"];
m10_68 [label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="JobClient.cs"];
m10_0 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobClient.cs"];
m10_1 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobClient.cs"];
m10_2 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs"];
m10_3 [label="redisManager == null", span="20-20", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs"];
m10_5 [label="jobCreator == null", span="21-21", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs"];
m10_7 [label="_redis = redisManager.GetClient()", span="23-23", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs"];
m10_8 [label="_jobCreator = jobCreator", span="24-24", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs"];
m10_4 [label="throw new ArgumentNullException(''redisManager'');", span="20-20", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs"];
m10_6 [label="throw new ArgumentNullException(''jobCreator'');", span="21-21", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs"];
m10_9 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs"];
m10_71 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JobClient.cs"];
m10_11 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="JobClient.cs"];
m10_51 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClient.cs"];
m10_73 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="JobClient.cs"];
m10_69 [label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="JobClient.cs"];
m10_43 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="JobClient.cs"];
m10_39 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobClient.cs"];
m10_15 [label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="75-75", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_54 [label="var result = new Dictionary<string, string>()", span="77-77", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_55 [label="obj == null", span="78-78", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_57 [label="TypeDescriptor.GetProperties(obj)", span="80-80", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_58 [label="var propertyValue = descriptor.GetValue(obj)", span="82-82", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_56 [label="return result;", span="78-78", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_65 [label="result.Add(descriptor.Name, value)", span="103-103", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_66 [label="return result;", span="106-106", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_64 [label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="94-99", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_59 [label="string value = null", span="83-83", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_60 [label="propertyValue != null", span="85-85", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_61 [label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="89-89", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_62 [label="value = converter.ConvertToInvariantString(propertyValue)", span="90-90", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_63 [label=Exception, span="92-92", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_67 [label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="75-75", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m10_38 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="JobClient.cs"];
m10_34 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JobClient.cs"];
m10_12 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs"];
m10_13 [label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs"];
m10_14 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs"];
m10_37 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="JobClient.cs"];
m10_75 [label="HangFire.Client.JobClient", span="", file="JobClient.cs"];
m11_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="JobClient.feature.cs"];
m11_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="JobClient.feature.cs"];
m11_57 [label="Entry HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="125-125", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="JobClient.feature.cs"];
m11_58 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''If the arguments were not provided, the \'Args\' parameter contains the empty JSON '' +\r\n                    ''value'', ((string[])(null)))", span="127-128", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=1, file="JobClient.feature.cs"];
m11_59 [label="this.ScenarioSetup(scenarioInfo)", span="130-130", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs"];
m11_60 [label="this.FeatureBackground()", span="132-132", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs"];
m11_61 [label="testRunner.When(''I create an argumentless job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="134-134", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs"];
m11_62 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="136-138", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=1, file="JobClient.feature.cs"];
m11_63 [label="table2.AddRow(new string[] {\r\n                        ''Args'',\r\n                        ''{}''})", span="139-141", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=1, file="JobClient.feature.cs"];
m11_64 [label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table2, ''Then '')", span="143-143", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs"];
m11_65 [label="this.ScenarioCleanup()", span="145-145", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs"];
m11_66 [label="Exit HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="125-125", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="JobClient.feature.cs"];
m11_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="JobClient.feature.cs"];
m11_34 [label="Entry HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", span="81-81", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", file="JobClient.feature.cs"];
m11_35 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The client creates the job in the storage'', ((string[])(null)))", span="83-83", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs"];
m11_36 [label="this.ScenarioSetup(scenarioInfo)", span="85-85", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs"];
m11_37 [label="this.FeatureBackground()", span="87-87", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs"];
m11_38 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="89-89", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs"];
m11_39 [label="testRunner.Then(''the storage contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="91-91", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs"];
m11_40 [label="this.ScenarioCleanup()", span="93-93", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs"];
m11_41 [label="Exit HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", span="81-81", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", file="JobClient.feature.cs"];
m11_30 [label="Entry HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="70-70", cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs"];
m11_31 [label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="74-74", cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", color=green, community=0, file="JobClient.feature.cs"];
m11_32 [label="Exit HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="70-70", cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs"];
m11_78 [label="Entry HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", span="179-179", cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", file="JobClient.feature.cs"];
m11_79 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The given state was applied to the job'', ((string[])(null)))", span="181-181", cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs"];
m11_80 [label="this.ScenarioSetup(scenarioInfo)", span="183-183", cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs"];
m11_81 [label="this.FeatureBackground()", span="185-185", cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs"];
m11_82 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="187-187", cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs"];
m11_83 [label="testRunner.Then(''the given state was applied to it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="189-189", cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs"];
m11_84 [label="this.ScenarioCleanup()", span="191-191", cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs"];
m11_85 [label="Exit HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", span="179-179", cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", file="JobClient.feature.cs"];
m11_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="JobClient.feature.cs"];
m11_18 [label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="55-55", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs"];
m11_19 [label="testRunner.OnScenarioEnd()", span="57-57", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", color=green, community=0, file="JobClient.feature.cs"];
m11_20 [label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="55-55", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs"];
m11_45 [label="Entry HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="99-99", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m11_46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job contains the \'Type\' parameter equal to the assembly qualified type name'', ((string[])(null)))", span="101-101", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs"];
m11_47 [label="this.ScenarioSetup(scenarioInfo)", span="103-103", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs"];
m11_48 [label="this.FeatureBackground()", span="105-105", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs"];
m11_49 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="107-107", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs"];
m11_50 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="109-111", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=1, file="JobClient.feature.cs"];
m11_51 [label="table1.AddRow(new string[] {\r\n                        ''Type'',\r\n                        ''<Assembly qualified name of \'HangFire.Tests.TestJob\' type>''})", span="112-114", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=1, file="JobClient.feature.cs"];
m11_52 [label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table1, ''Then '')", span="116-116", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs"];
m11_53 [label="this.ScenarioCleanup()", span="118-118", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs"];
m11_54 [label="Exit HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="99-99", cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m11_94 [label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="215-215", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="JobClient.feature.cs"];
m11_95 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty type causes an exception'', ((string[])(null)))", span="217-217", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_96 [label="this.ScenarioSetup(scenarioInfo)", span="219-219", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_97 [label="this.FeatureBackground()", span="221-221", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_98 [label="testRunner.When(''I create a job with null type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="223-223", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_99 [label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="225-225", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_100 [label="this.ScenarioCleanup()", span="227-227", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_101 [label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="215-215", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="JobClient.feature.cs"];
m11_86 [label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="197-197", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="JobClient.feature.cs"];
m11_87 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty id causes an exception'', ((string[])(null)))", span="199-199", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_88 [label="this.ScenarioSetup(scenarioInfo)", span="201-201", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_89 [label="this.FeatureBackground()", span="203-203", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_90 [label="testRunner.When(''I create a job with an empty id'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="205-205", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_91 [label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="207-207", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_92 [label="this.ScenarioCleanup()", span="209-209", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_93 [label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="197-197", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="JobClient.feature.cs"];
m11_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="JobClient.feature.cs"];
m11_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobClient.feature.cs"];
m11_0 [label="Entry HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs"];
m11_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobClient.feature.cs"];
m11_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobClient'', '''', ProgrammingLanguage.CSharp, ((string[])(null)))", span="33-33", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobClient.feature.cs"];
m11_3 [label="testRunner.OnFeatureStart(featureInfo)", span="34-34", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobClient.feature.cs"];
m11_4 [label="Exit HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs"];
m11_43 [label="Entry Unk.When", span="", cluster="Unk.When", file="JobClient.feature.cs"];
m11_67 [label="Entry HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="151-151", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m11_68 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Arguments are converted to a JSON string and contained in the \'Args\' parameter'', ((string[])(null)))", span="153-153", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs"];
m11_69 [label="this.ScenarioSetup(scenarioInfo)", span="155-155", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs"];
m11_70 [label="this.FeatureBackground()", span="157-157", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs"];
m11_71 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="159-161", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=1, file="JobClient.feature.cs"];
m11_72 [label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''5''})", span="162-164", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=1, file="JobClient.feature.cs"];
m11_73 [label="table3.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Deleted''})", span="165-167", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=1, file="JobClient.feature.cs"];
m11_74 [label="testRunner.When(''I create a job with the following arguments:'', ((string)(null)), table3, ''When '')", span="169-169", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs"];
m11_75 [label="testRunner.Then(''the job contains all of the above arguments in the JSON format'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="171-171", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs"];
m11_76 [label="this.ScenarioCleanup()", span="173-173", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs"];
m11_77 [label="Exit HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="151-151", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m11_56 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="JobClient.feature.cs"];
m11_102 [label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="234-234", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="JobClient.feature.cs"];
m11_103 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with the type, that is not derived from the \'BackgroundJob\' causes'' +\r\n                    '' an exception'', ((string[])(null)))", span="236-237", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=1, file="JobClient.feature.cs"];
m11_104 [label="this.ScenarioSetup(scenarioInfo)", span="239-239", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_105 [label="this.FeatureBackground()", span="241-241", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_106 [label="testRunner.When(''I create a job with the incorrect type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="243-243", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_107 [label="testRunner.Then(''a \'System.ArgumentException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="245-245", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_108 [label="this.ScenarioCleanup()", span="247-247", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_109 [label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="234-234", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="JobClient.feature.cs"];
m11_110 [label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="253-253", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="JobClient.feature.cs"];
m11_111 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty state causes an exception'', ((string[])(null)))", span="255-255", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_112 [label="this.ScenarioSetup(scenarioInfo)", span="257-257", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_113 [label="this.FeatureBackground()", span="259-259", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_114 [label="testRunner.When(''I create a job with an empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="261-261", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_115 [label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="263-263", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_116 [label="this.ScenarioCleanup()", span="265-265", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs"];
m11_117 [label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="253-253", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="JobClient.feature.cs"];
m11_9 [label="Entry HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="38-38", cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs"];
m11_10 [label="testRunner.OnFeatureEnd()", span="40-40", cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", color=green, community=0, file="JobClient.feature.cs"];
m11_11 [label="testRunner = null", span="41-41", cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", color=green, community=0, file="JobClient.feature.cs"];
m11_12 [label="Exit HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="38-38", cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs"];
m11_42 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobClient.feature.cs"];
m11_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobClient.feature.cs"];
m11_14 [label="Entry HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="45-45", cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs"];
m11_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobClient''))", span="47-48", cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", color=green, community=0, file="JobClient.feature.cs"];
m11_16 [label="HangFire.Tests.Client.JobClientFeature.FeatureSetup(null)", span="50-50", cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", color=green, community=0, file="JobClient.feature.cs"];
m11_17 [label="Exit HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="45-45", cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs"];
m11_22 [label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="60-60", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs"];
m11_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="62-62", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=green, community=0, file="JobClient.feature.cs"];
m11_24 [label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="60-60", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs"];
m11_33 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobClient.feature.cs"];
m11_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobClient.feature.cs"];
m11_55 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="JobClient.feature.cs"];
m11_26 [label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="65-65", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs"];
m11_27 [label="testRunner.CollectScenarioErrors()", span="67-67", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", color=green, community=0, file="JobClient.feature.cs"];
m11_28 [label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="65-65", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs"];
m11_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="JobClient.feature.cs"];
m11_118 [label="HangFire.Tests.Client.JobClientFeature", span="", file="JobClient.feature.cs"];
m12_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobClientSteps.cs"];
m12_8 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="JobClientSteps.cs"];
m12_9 [label="var connection = new Mock<IStorageConnection>()", span="22-22", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs"];
m12_10 [label="var job = Job.FromExpression(() => TestMethod())", span="23-23", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs"];
m12_13 [label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="27-28", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs"];
m12_11 [label="var state = new Mock<IState>()", span="24-24", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs"];
m12_12 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs"];
m12_14 [label="var context = new CreatingContext(createContext)", span="29-29", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs"];
m12_15 [label="Assert.False(context.Canceled)", span="31-31", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs"];
m12_16 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="JobClientSteps.cs"];
m12_20 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="JobClientSteps.cs"];
m12_19 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="JobClientSteps.cs"];
m12_22 [label="Entry Unk.False", span="", cluster="Unk.False", file="JobClientSteps.cs"];
m12_7 [label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24", cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobClientSteps.cs"];
m12_18 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobClientSteps.cs"];
m12_0 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="JobClientSteps.cs"];
m12_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatingContext(null))", span="15-16", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="JobClientSteps.cs"];
m12_2 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="JobClientSteps.cs"];
m12_26 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="JobClientSteps.cs"];
m12_27 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="JobClientSteps.cs"];
m12_17 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobClientSteps.cs"];
m12_23 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="JobClientSteps.cs"];
m12_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="JobClientSteps.cs"];
m12_5 [label="new CreatingContext(null)", span="16-16", cluster="lambda expression", color=green, community=0, file="JobClientSteps.cs"];
m12_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="JobClientSteps.cs"];
m12_24 [label="TestMethod()", span="23-23", cluster="lambda expression", color=green, community=0, file="JobClientSteps.cs"];
m12_25 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="JobClientSteps.cs"];
m12_21 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="JobClientSteps.cs"];
m13_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="JobFetcher.feature.cs"];
m13_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="JobFetcher.feature.cs"];
m13_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="JobFetcher.feature.cs"];
m13_55 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m13_56 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns null when it tries to dequeue a job from an empty queue'', ((string[])(null)))", span="121-121", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m13_57 [label="this.ScenarioSetup(scenarioInfo)", span="123-123", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m13_58 [label="testRunner.Given(''an empty queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="125-125", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m13_59 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="127-127", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m13_60 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="129-129", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m13_61 [label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="131-131", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m13_62 [label="this.ScenarioCleanup()", span="133-133", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m13_63 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m13_41 [label="Entry Unk.And", span="", cluster="Unk.And", file="JobFetcher.feature.cs"];
m13_54 [label="Entry Unk.But", span="", cluster="Unk.But", file="JobFetcher.feature.cs"];
m13_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="JobFetcher.feature.cs"];
m13_26 [label="Entry HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs"];
m13_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs"];
m13_28 [label="Exit HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs"];
m13_0 [label="Entry HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs"];
m13_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs"];
m13_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobFetcher'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs"];
m13_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs"];
m13_4 [label="Exit HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs"];
m13_76 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m13_77 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="169-169", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m13_78 [label="this.ScenarioSetup(scenarioInfo)", span="171-171", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m13_79 [label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="173-173", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m13_80 [label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m13_81 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m13_82 [label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m13_83 [label="this.ScenarioCleanup()", span="181-181", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m13_84 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m13_30 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns the job payload when it dequeues a job'', ((string[])(null)))", span="77-77", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_32 [label="this.ScenarioSetup(scenarioInfo)", span="79-79", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_33 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_34 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_35 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_36 [label="testRunner.Then(''the fetcher returns the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_37 [label="this.ScenarioCleanup()", span="89-89", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_38 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_9 [label="Entry HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs"];
m13_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs"];
m13_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs"];
m13_12 [label="Exit HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs"];
m13_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="JobFetcher.feature.cs"];
m13_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobFetcher.feature.cs"];
m13_42 [label="Entry Unk.When", span="", cluster="Unk.When", file="JobFetcher.feature.cs"];
m13_44 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_45 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_46 [label="this.ScenarioSetup(scenarioInfo)", span="100-100", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_47 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_48 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_49 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_50 [label="testRunner.Then(''the queue does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_51 [label="testRunner.But(''the dequeued jobs list contains it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="110-110", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_52 [label="this.ScenarioCleanup()", span="112-112", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_53 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m13_64 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_65 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher dequeues jobs in the FIFO order'', ((string[])(null)))", span="142-142", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_66 [label="this.ScenarioSetup(scenarioInfo)", span="144-144", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_67 [label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_68 [label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_69 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="150-150", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_70 [label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="152-152", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_71 [label="testRunner.Then(''the fetcher returns the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="154-154", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_72 [label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_73 [label="testRunner.Then(''the fetcher returns the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_74 [label="this.ScenarioCleanup()", span="160-160", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_75 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m13_39 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobFetcher.feature.cs"];
m13_43 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobFetcher.feature.cs"];
m13_40 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobFetcher.feature.cs"];
m13_85 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_86 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="190-190", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_87 [label="this.ScenarioSetup(scenarioInfo)", span="192-192", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_88 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="194-194", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_89 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="196-196", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_90 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_91 [label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_92 [label="this.ScenarioCleanup()", span="202-202", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_93 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m13_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobFetcher.feature.cs"];
m13_14 [label="Entry HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs"];
m13_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49", cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs"];
m13_16 [label="HangFire.Tests.JobFetcherFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", color=red, community=0, file="JobFetcher.feature.cs"];
m13_17 [label="Exit HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs"];
m13_18 [label="Entry HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs"];
m13_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs"];
m13_20 [label="Exit HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs"];
m13_22 [label="Entry HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs"];
m13_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs"];
m13_24 [label="Exit HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs"];
m13_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="JobFetcher.feature.cs"];
m13_94 [label="HangFire.Tests.JobFetcherFeature", span="", file="JobFetcher.feature.cs"];
m14_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobHelper.cs"];
m14_0 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobHelper.cs"];
m14_1 [label="transaction == null", span="27-27", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobHelper.cs"];
m14_3 [label="Transaction = transaction", span="29-29", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", color=red, community=0, file="JobHelper.cs"];
m14_2 [label="throw new ArgumentNullException(''transaction'');", span="27-27", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobHelper.cs"];
m14_4 [label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobHelper.cs"];
m14_6 [label="HangFire.Common.States.StateApplyingContext", span="", file="JobHelper.cs"];
m15_0 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="JobManager.feature.cs"];
m15_1 [label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="JobManager.feature.cs"];
m16_50 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobServer.cs"];
m16_51 [label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="JobServer.cs"];
m16_52 [label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="JobServer.cs"];
m16_53 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="JobServer.cs"];
m16_54 [label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs"];
m16_92 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_104 [label="var transaction = _connection.CreateWriteTransaction()", span="198-198", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_105 [label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="200-202", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_106 [label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="204-204", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_107 [label="return transaction.Commit();", span="206-206", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_108 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_14 [label="x.GetConnection()", span="23-23", cluster="lambda expression", file="JobServer.cs"];
m16_90 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="JobServer.cs"];
m16_145 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobServer.cs"];
m16_161 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JobServer.cs"];
m16_93 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="JobServer.cs"];
m16_87 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="JobServer.cs"];
m16_128 [label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobServer.cs"];
m16_59 [label="return new ServerHeartbeat(_storage.Object, ServerId);", span="67-67", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="JobServer.cs"];
m16_49 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="JobServer.cs"];
m16_91 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobServer.cs"];
m16_127 [label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="26-26", cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="JobServer.cs"];
m16_0 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="JobServer.cs"];
m16_1 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="JobServer.cs"];
m16_2 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_3 [label="connection == null", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_4 [label="throw new ArgumentNullException(''connection'');", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_5 [label="stateHandlers == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_6 [label="throw new ArgumentNullException(''stateHandlers'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_22 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="JobServer.cs"];
m16_8 [label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_17 [label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServer.cs"];
m16_153 [label="handler == null", span="289-289", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs"];
m16_155 [label="String.IsNullOrEmpty(handler.StateName)", span="290-290", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs"];
m16_157 [label="!_handlers.ContainsKey(handler.StateName)", span="292-292", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs"];
m16_158 [label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="294-294", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs"];
m16_159 [label="_handlers[handler.StateName].Add(handler)", span="297-297", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs"];
m16_154 [label="throw new ArgumentNullException(''handler'');", span="289-289", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs"];
m16_156 [label="throw new ArgumentNullException(''stateName'');", span="290-290", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs"];
m16_160 [label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="287-287", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs"];
m16_34 [label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs"];
m16_35 [label="var filterInfo = GetFilters(method)", span="86-86", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs"];
m16_36 [label="var context = new StateContext(jobId, method)", span="87-87", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs"];
m16_37 [label="var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs"];
m16_38 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs"];
m16_39 [label="var transaction = _connection.CreateWriteTransaction()", span="92-92", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs"];
m16_10 [label="RegisterHandler(handler)", span="54-54", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobServer.cs"];
m16_152 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="JobServer.cs"];
m16_125 [label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobServer.cs"];
m16_55 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="JobServer.cs"];
m16_25 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="JobServer.cs"];
m16_26 [label="Entry ServerHeartbeat.cstr", span="", cluster="ServerHeartbeat.cstr", file="JobServer.cs"];
m16_27 [label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobServer.cs"];
m16_29 [label="Assert.Equal(''serverId'', exception.ParamName)", span="41-41", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobServer.cs"];
m16_31 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="JobServer.cs"];
m16_33 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="JobServer.cs"];
m16_28 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(_storage.Object, null))", span="38-39", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobServer.cs", color=green, community=0];
m16_30 [label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobServer.cs"];
m16_32 [label="new ServerHeartbeat(_storage.Object, null)", span="39-39", cluster="lambda expression", file="JobServer.cs"];
m16_42 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobServer.cs"];
m16_44 [label="x.GetConnection()", span="51-51", cluster="lambda expression", file="JobServer.cs"];
m16_41 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="JobServer.cs"];
m16_40 [label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="65-65", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="JobServer.cs"];
m16_43 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="JobServer.cs"];
m16_45 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="JobServer.cs"];
m16_15 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="JobServer.cs"];
m16_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JobServer.cs"];
m16_95 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobServer.cs"];
m16_7 [label="_connection = connection", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_151 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobServer.cs"];
m16_60 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="JobServer.cs"];
m16_58 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="9-9", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="JobServer.cs"];
m16_144 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JobServer.cs"];
m16_11 [label="filters != null", span="57-57", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_123 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JobServer.cs"];
m16_56 [label="x.Heartbeat(ServerId)", span="62-62", cluster="lambda expression", file="JobServer.cs"];
m16_88 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="JobServer.cs"];
m16_129 [label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_135 [label="var properties = new Dictionary<string, string>(\r\n                state.GetProperties(context.JobMethod))", span="265-266", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_137 [label="properties.Add(''State'', state.StateName)", span="269-269", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_138 [label=appendToJob, span="271-271", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_139 [label="transaction.SetJobState(context.JobId, state.StateName, properties)", span="273-273", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_140 [label="properties.Add(''Reason'', state.Reason)", span="276-276", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_142 [label="transaction.AppendJobHistory(context.JobId, properties)", span="279-279", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_136 [label="var now = DateTime.UtcNow", span="267-267", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_141 [label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="277-277", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_143 [label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_124 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobServer.cs"];
m16_9 [label=handlers, span="52-52", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_48 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="JobServer.cs"];
m16_23 [label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59", cluster="lambda expression", file="JobServer.cs"];
m16_19 [label="Assert.Equal(''storage'', exception.ParamName)", span="32-32", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServer.cs"];
m16_18 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(null, ServerId))", span="29-30", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServer.cs"];
m16_20 [label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27", cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServer.cs"];
m16_24 [label="new ServerHeartbeat(null, ServerId)", span="30-30", cluster="lambda expression", file="JobServer.cs"];
m16_61 [label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", span="", cluster="lambda expression", file="JobServer.cs"];
m16_62 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="JobServer.cs"];
m16_13 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_46 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="JobServer.cs"];
m16_47 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="JobServer.cs"];
m16_57 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_147 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobServer.cs"];
m16_148 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="11-11", cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="JobServer.cs"];
m16_96 [label=filters, span="182-182", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs"];
m16_97 [label="var oldState = context.CandidateState", span="184-184", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs"];
m16_98 [label="filter.OnStateChanging(context)", span="185-185", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs"];
m16_99 [label="oldState != context.CandidateState", span="187-187", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs"];
m16_100 [label="AppendHistory(context, oldState, false)", span="189-189", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs"];
m16_101 [label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs"];
m16_109 [label="!String.IsNullOrEmpty(oldState)", span="216-216", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_110 [label="_handlers.ContainsKey(oldState)", span="218-218", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_111 [label="_handlers[oldState]", span="220-220", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_112 [label="handler.Unapply(context)", span="222-222", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_113 [label=stateChangedFilters, span="226-226", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_114 [label="filter.OnStateUnapplied(context)", span="228-228", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_115 [label="_handlers.ContainsKey(chosenState.StateName)", span="232-232", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_116 [label="var stateData = chosenState.GetProperties(context.JobMethod)", span="234-234", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_117 [label="_handlers[chosenState.StateName]", span="235-235", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_118 [label="handler.Apply(context, stateData)", span="237-237", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_119 [label="AppendHistory(context.Transaction, context, chosenState, true)", span="241-241", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_120 [label=stateChangedFilters, span="243-243", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_121 [label="filter.OnStateApplied(context)", span="245-245", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_122 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs"];
m16_63 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_64 [label="String.IsNullOrWhiteSpace(jobId)", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_66 [label="state == null", span="117-117", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_68 [label="_connection.AcquireJobLock(jobId)", span="119-119", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_69 [label="var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_73 [label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="132-132", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_77 [label="var context = new StateContext(jobId, jobMethod)", span="142-142", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_78 [label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_82 [label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(ex)\r\n                            {\r\n                                Reason = String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId)\r\n                            },\r\n                            currentState,\r\n                            _connection)", span="156-165", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_65 [label="throw new ArgumentNullException(''jobId'');", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_67 [label="throw new ArgumentNullException(''state'');", span="117-117", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_70 [label="jobData == null", span="125-125", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_72 [label="var currentState = jobData.State", span="131-131", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_75 [label="var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="139-139", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_71 [label="return false;", span="128-128", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_74 [label="return false;", span="134-134", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_76 [label="var filterInfo = GetFilters(jobMethod)", span="140-140", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_79 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_80 [label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_81 [label=JobLoadException, span="149-149", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_83 [label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="167-169", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_84 [label=Exception, span="172-172", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_85 [label="throw;", span="174-174", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_86 [label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs"];
m16_102 [label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobServer.cs"];
m16_130 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="JobServer.cs"];
m16_163 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JobServer.cs"];
m16_149 [label="return new JobFilterInfo(_getFiltersThunk(method));", span="284-284", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="JobServer.cs"];
m16_150 [label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="JobServer.cs"];
m16_126 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33", cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="JobServer.cs"];
m16_12 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m16_103 [label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_131 [label="var transaction = _connection.CreateWriteTransaction()", span="252-252", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_132 [label="AppendHistory(transaction, context, state, appendToJob)", span="254-254", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_133 [label="transaction.Commit()", span="255-255", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_134 [label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs"];
m16_162 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobServer.cs"];
m16_146 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="JobServer.cs"];
m16_89 [label="Entry HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", span="6-6", cluster="HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", file="JobServer.cs"];
m16_164 [label="HangFire.States.StateMachine", span="", file="JobServer.cs"];
m16_165 [label="System.Collections.Generic.IEnumerable<object>", span="", file="JobServer.cs"];
m17_37 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="Perform.cs"];
m17_38 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="Perform.cs"];
m17_17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Perform.cs"];
m17_41 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="Perform.cs"];
m17_26 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs"];
m17_27 [label="return In(delay, typeof(TJob), args);", span="116-116", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", color=green, community=0, file="Perform.cs"];
m17_28 [label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs"];
m17_19 [label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="23-23", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Perform.cs"];
m17_21 [label="Entry HangFire.Perform.GenerateId()", span="157-157", cluster="HangFire.Perform.GenerateId()", file="Perform.cs"];
m17_39 [label="return Guid.NewGuid().ToString();", span="159-159", cluster="HangFire.Perform.GenerateId()", file="Perform.cs"];
m17_40 [label="Exit HangFire.Perform.GenerateId()", span="157-157", cluster="HangFire.Perform.GenerateId()", file="Perform.cs"];
m17_3 [label="Entry HangFire.Perform.Async<TJob>(object)", span="40-40", cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs"];
m17_4 [label="return Async(typeof(TJob), args);", span="43-43", cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs"];
m17_5 [label="Exit HangFire.Perform.Async<TJob>(object)", span="40-40", cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs"];
m17_6 [label="Entry HangFire.Perform.Async(System.Type, object)", span="71-71", cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs"];
m17_10 [label="type == null", span="73-73", cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs"];
m17_11 [label="throw new ArgumentNullException(''type'');", span="75-75", cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs"];
m17_12 [label="var client = new JobClient(RedisFactory.PooledManager)", span="78-78", cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs"];
m17_13 [label="var queue = JobHelper.GetQueue(type)", span="80-80", cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs"];
m17_14 [label="var enqueuedState = new EnqueuedState(''Enqueued by the Сlient'', queue)", span="81-81", cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs"];
m17_15 [label="return client.CreateJob(GenerateId(), type, enqueuedState, args);", span="83-83", cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs"];
m17_16 [label="Exit HangFire.Perform.Async(System.Type, object)", span="71-71", cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs"];
m17_30 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs"];
m17_31 [label="return In(delay, type, null);", span="130-130", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", color=green, community=0, file="Perform.cs"];
m17_32 [label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs"];
m17_0 [label="Entry HangFire.Perform.Async<TJob>()", span="24-24", cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs"];
m17_1 [label="return Async<TJob>(null);", span="27-27", cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs"];
m17_2 [label="Exit HangFire.Perform.Async<TJob>()", span="24-24", cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs"];
m17_7 [label="Entry HangFire.Perform.Async(System.Type)", span="55-55", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m17_8 [label="return Async(type, null);", span="57-57", cluster="HangFire.Perform.Async(System.Type)", color=green, community=0, file="Perform.cs"];
m17_9 [label="Exit HangFire.Perform.Async(System.Type)", span="55-55", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m17_18 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="Perform.cs"];
m17_29 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs"];
m17_33 [label="var client = new JobClient(RedisFactory.BasicManager)", span="146-146", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="Perform.cs"];
m17_34 [label="var scheduledState = new ScheduledState(''Scheduled by the Client'', DateTime.UtcNow.Add(delay))", span="148-148", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="Perform.cs"];
m17_35 [label="return client.CreateJob(GenerateId(), type, scheduledState, args);", span="149-149", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="Perform.cs"];
m17_36 [label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs"];
m17_22 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="Perform.cs"];
m17_20 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="Perform.cs"];
m17_42 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="Perform.cs"];
m17_23 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs"];
m17_24 [label="return In<TJob>(delay, null);", span="99-99", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", color=green, community=0, file="Perform.cs"];
m17_25 [label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs"];
m18_48 [label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="PerformTests.cs"];
m18_49 [label="Perform.Async<TestJob>()", span="71-71", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", color=red, community=0, file="PerformTests.cs"];
m18_50 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="73-79", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", color=red, community=1, file="PerformTests.cs"];
m18_51 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="81-81", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", color=red, community=0, file="PerformTests.cs"];
m18_52 [label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="PerformTests.cs"];
m18_133 [label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="PerformTests.cs"];
m18_134 [label="Perform.In<TestJob>(TimeSpan.FromDays(1), new { Greeting = ''Hello'' })", span="178-178", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", color=red, community=0, file="PerformTests.cs"];
m18_135 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="180-186", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", color=red, community=1, file="PerformTests.cs"];
m18_136 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="188-188", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", color=red, community=0, file="PerformTests.cs"];
m18_137 [label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="PerformTests.cs"];
m18_138 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="55-55", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="PerformTests.cs"];
m18_63 [label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="PerformTests.cs"];
m18_64 [label="Perform.Async<TestJob>(new { ArticleId = 3 })", span="87-87", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", color=red, community=0, file="PerformTests.cs"];
m18_65 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>()),\r\n               Times.Once)", span="89-95", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", color=red, community=1, file="PerformTests.cs"];
m18_66 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="97-97", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", color=red, community=0, file="PerformTests.cs"];
m18_67 [label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="PerformTests.cs"];
m18_38 [label="Entry HangFire.Perform.Async(System.Type, object)", span="31-31", cluster="HangFire.Perform.Async(System.Type, object)", file="PerformTests.cs"];
m18_95 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="PerformTests.cs"];
m18_96 [label="Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { Count = long.MaxValue })", span="126-126", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", color=red, community=0, file="PerformTests.cs"];
m18_97 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="128-134", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", color=red, community=1, file="PerformTests.cs"];
m18_98 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="136-136", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", color=red, community=0, file="PerformTests.cs"];
m18_99 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="PerformTests.cs"];
m18_53 [label="Entry HangFire.Perform.Async<TJob>()", span="13-13", cluster="HangFire.Perform.Async<TJob>()", file="PerformTests.cs"];
m18_114 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="PerformTests.cs"];
m18_173 [label="return\r\n                It.Is<ScheduledState>(\r\n                    x => DateTime.UtcNow.Date.AddDays(-2) < x.EnqueueAt && x.EnqueueAt <= DateTime.UtcNow.AddDays(-1));", span="221-223", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", color=red, community=1, file="PerformTests.cs"];
m18_174 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="PerformTests.cs"];
m18_118 [label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="PerformTests.cs"];
m18_119 [label="Perform.In<TestJob>(TimeSpan.FromDays(1))", span="162-162", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", color=red, community=0, file="PerformTests.cs"];
m18_120 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="164-170", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", color=red, community=1, file="PerformTests.cs"];
m18_121 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="172-172", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", color=red, community=0, file="PerformTests.cs"];
m18_122 [label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="PerformTests.cs"];
m18_30 [label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs"];
m18_31 [label="Perform.Async(null)", span="42-42", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", color=red, community=0, file="PerformTests.cs"];
m18_32 [label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs"];
m18_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="PerformTests.cs"];
m18_68 [label="Entry HangFire.Perform.Async<TJob>(object)", span="20-20", cluster="HangFire.Perform.Async<TJob>(object)", file="PerformTests.cs"];
m18_107 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="PerformTests.cs"];
m18_108 [label="Perform.In(TimeSpan.FromDays(-1), typeof(TestJob))", span="142-142", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", color=red, community=0, file="PerformTests.cs"];
m18_109 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<Type>(),\r\n                    ItIsScheduledYesterday(),\r\n                    It.IsAny<object>()))", span="144-149", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", color=red, community=1, file="PerformTests.cs"];
m18_110 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="PerformTests.cs"];
m18_20 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="PerformTests.cs"];
m18_162 [label="return It.Is<EnqueuedState>(y => y.Queue == ''default'');", span="209-209", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", color=red, community=0, file="PerformTests.cs"];
m18_163 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="PerformTests.cs"];
m18_81 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="61-61", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="PerformTests.cs"];
m18_100 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="66-66", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="PerformTests.cs"];
m18_80 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="PerformTests.cs"];
m18_8 [label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="PerformTests.cs"];
m18_9 [label="Perform.Async(typeof (TestJob))", span="25-25", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", color=red, community=0, file="PerformTests.cs"];
m18_10 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="27-33", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", color=red, community=1, file="PerformTests.cs"];
m18_11 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="35-35", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", color=red, community=0, file="PerformTests.cs"];
m18_12 [label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="PerformTests.cs"];
m18_19 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="PerformTests.cs"];
m18_157 [label="return It.Is<Type>(y => y == typeof (TestJob));", span="204-204", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", color=red, community=0, file="PerformTests.cs"];
m18_158 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="PerformTests.cs"];
m18_45 [label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs"];
m18_46 [label="Perform.Async(null, new { Greeting = ''Hello'' })", span="65-65", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", color=red, community=0, file="PerformTests.cs"];
m18_47 [label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs"];
m18_123 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="48-48", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="PerformTests.cs"];
m18_172 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="PerformTests.cs"];
m18_152 [label="Entry System.Guid.Parse(string)", span="0-0", cluster="System.Guid.Parse(string)", file="PerformTests.cs"];
m18_29 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="PerformTests.cs"];
m18_115 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs"];
m18_116 [label="Perform.In(TimeSpan.FromDays(1), null, new { Count = 1 })", span="156-156", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", color=red, community=0, file="PerformTests.cs"];
m18_117 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs"];
m18_0 [label="Entry HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14", cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="PerformTests.cs"];
m18_1 [label="_jobClientMock = new Mock<IJobClient> { CallBase = false }", span="16-16", cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", color=red, community=0, file="PerformTests.cs"];
m18_2 [label="Perform.CreateJobClientCallback \r\n                = () => _jobClientMock.Object", span="18-19", cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", color=red, community=0, file="PerformTests.cs"];
m18_3 [label="Exit HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14", cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="PerformTests.cs"];
m18_13 [label="Entry HangFire.Perform.Async(System.Type)", span="26-26", cluster="HangFire.Perform.Async(System.Type)", file="PerformTests.cs"];
m18_175 [label="Entry lambda expression", span="223-223", cluster="lambda expression", file="PerformTests.cs"];
m18_5 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="PerformTests.cs"];
m18_6 [label="_jobClientMock.Object", span="19-19", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_7 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="PerformTests.cs"];
m18_15 [label="Entry lambda expression", span="28-32", cluster="lambda expression", file="PerformTests.cs"];
m18_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="PerformTests.cs"];
m18_16 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null))", span="28-32", cluster="lambda expression", color=red, community=1, file="PerformTests.cs"];
m18_17 [label="Exit lambda expression", span="28-32", cluster="lambda expression", file="PerformTests.cs"];
m18_23 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="PerformTests.cs"];
m18_24 [label="y == null", span="32-32", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_25 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="PerformTests.cs"];
m18_27 [label="x.Dispose()", span="35-35", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="PerformTests.cs"];
m18_39 [label="Entry lambda expression", span="51-55", cluster="lambda expression", file="PerformTests.cs"];
m18_42 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="PerformTests.cs"];
m18_40 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>())", span="51-55", cluster="lambda expression", color=red, community=1, file="PerformTests.cs"];
m18_41 [label="Exit lambda expression", span="51-55", cluster="lambda expression", file="PerformTests.cs"];
m18_43 [label="x.Dispose()", span="58-58", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_44 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="PerformTests.cs"];
m18_54 [label="Entry lambda expression", span="74-78", cluster="lambda expression", file="PerformTests.cs"];
m18_60 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="PerformTests.cs"];
m18_55 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null))", span="74-78", cluster="lambda expression", color=red, community=1, file="PerformTests.cs"];
m18_56 [label="Exit lambda expression", span="74-78", cluster="lambda expression", file="PerformTests.cs"];
m18_57 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="PerformTests.cs"];
m18_58 [label="y == null", span="78-78", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_59 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="PerformTests.cs"];
m18_61 [label="x.Dispose()", span="81-81", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_62 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="PerformTests.cs"];
m18_69 [label="Entry lambda expression", span="90-94", cluster="lambda expression", file="PerformTests.cs"];
m18_72 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="PerformTests.cs"];
m18_70 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>())", span="90-94", cluster="lambda expression", color=red, community=1, file="PerformTests.cs"];
m18_71 [label="Exit lambda expression", span="90-94", cluster="lambda expression", file="PerformTests.cs"];
m18_73 [label="x.Dispose()", span="97-97", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_74 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="PerformTests.cs"];
m18_82 [label="Entry lambda expression", span="106-110", cluster="lambda expression", file="PerformTests.cs"];
m18_89 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="PerformTests.cs"];
m18_83 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null))", span="106-110", cluster="lambda expression", color=red, community=1, file="PerformTests.cs"];
m18_84 [label="Exit lambda expression", span="106-110", cluster="lambda expression", file="PerformTests.cs"];
m18_86 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="PerformTests.cs"];
m18_87 [label="y == null", span="110-110", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_88 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="PerformTests.cs"];
m18_90 [label="x.Dispose()", span="113-113", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_91 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="PerformTests.cs"];
m18_101 [label="Entry lambda expression", span="129-133", cluster="lambda expression", file="PerformTests.cs"];
m18_104 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="PerformTests.cs"];
m18_102 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>())", span="129-133", cluster="lambda expression", color=red, community=1, file="PerformTests.cs"];
m18_103 [label="Exit lambda expression", span="129-133", cluster="lambda expression", file="PerformTests.cs"];
m18_105 [label="x.Dispose()", span="136-136", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_106 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="PerformTests.cs"];
m18_111 [label="Entry lambda expression", span="145-149", cluster="lambda expression", file="PerformTests.cs"];
m18_112 [label="x.CreateJob(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<Type>(),\r\n                    ItIsScheduledYesterday(),\r\n                    It.IsAny<object>())", span="145-149", cluster="lambda expression", color=red, community=1, file="PerformTests.cs"];
m18_113 [label="Exit lambda expression", span="145-149", cluster="lambda expression", file="PerformTests.cs"];
m18_124 [label="Entry lambda expression", span="165-169", cluster="lambda expression", file="PerformTests.cs"];
m18_130 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="PerformTests.cs"];
m18_125 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null))", span="165-169", cluster="lambda expression", color=red, community=1, file="PerformTests.cs"];
m18_126 [label="Exit lambda expression", span="165-169", cluster="lambda expression", file="PerformTests.cs"];
m18_127 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="PerformTests.cs"];
m18_128 [label="y == null", span="169-169", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_129 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="PerformTests.cs"];
m18_131 [label="x.Dispose()", span="172-172", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_132 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="PerformTests.cs"];
m18_139 [label="Entry lambda expression", span="181-185", cluster="lambda expression", file="PerformTests.cs"];
m18_142 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="PerformTests.cs"];
m18_140 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>())", span="181-185", cluster="lambda expression", color=red, community=1, file="PerformTests.cs"];
m18_141 [label="Exit lambda expression", span="181-185", cluster="lambda expression", file="PerformTests.cs"];
m18_143 [label="x.Dispose()", span="188-188", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_144 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="PerformTests.cs"];
m18_149 [label="var guid = Guid.Parse(actual)", span="195-195", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_154 [label="validator(x)", span="199-199", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_153 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="PerformTests.cs"];
m18_148 [label="Entry lambda expression", span="193-197", cluster="lambda expression", file="PerformTests.cs"];
m18_150 [label="return guid != Guid.Empty;", span="196-196", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_151 [label="Exit lambda expression", span="193-197", cluster="lambda expression", file="PerformTests.cs"];
m18_155 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="PerformTests.cs"];
m18_159 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="PerformTests.cs"];
m18_160 [label="y == typeof (TestJob)", span="204-204", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_161 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="PerformTests.cs"];
m18_164 [label="Entry lambda expression", span="209-209", cluster="lambda expression", file="PerformTests.cs"];
m18_165 [label="y.Queue == ''default''", span="209-209", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_166 [label="Exit lambda expression", span="209-209", cluster="lambda expression", file="PerformTests.cs"];
m18_169 [label="Entry lambda expression", span="216-216", cluster="lambda expression", file="PerformTests.cs"];
m18_170 [label="DateTime.UtcNow.Date.AddDays(1) <= x.EnqueueAt && x.EnqueueAt < DateTime.UtcNow.AddDays(2)", span="216-216", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_171 [label="Exit lambda expression", span="216-216", cluster="lambda expression", file="PerformTests.cs"];
m18_176 [label="DateTime.UtcNow.Date.AddDays(-2) < x.EnqueueAt && x.EnqueueAt <= DateTime.UtcNow.AddDays(-1)", span="223-223", cluster="lambda expression", color=red, community=0, file="PerformTests.cs"];
m18_177 [label="Exit lambda expression", span="223-223", cluster="lambda expression", file="PerformTests.cs"];
m18_33 [label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="PerformTests.cs"];
m18_34 [label="Perform.Async(typeof (TestJob), new { Greeting = ''Hello'' })", span="48-48", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", color=red, community=0, file="PerformTests.cs"];
m18_35 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="50-56", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", color=red, community=1, file="PerformTests.cs"];
m18_36 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="58-58", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", color=red, community=0, file="PerformTests.cs"];
m18_37 [label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="PerformTests.cs"];
m18_92 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs"];
m18_93 [label="Perform.In(TimeSpan.FromDays(1), null)", span="120-120", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", color=red, community=0, file="PerformTests.cs"];
m18_94 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs"];
m18_85 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="PerformTests.cs"];
m18_167 [label="return\r\n                It.Is<ScheduledState>(\r\n                    x => DateTime.UtcNow.Date.AddDays(1) <= x.EnqueueAt && x.EnqueueAt < DateTime.UtcNow.AddDays(2));", span="214-216", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", color=red, community=1, file="PerformTests.cs"];
m18_168 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="PerformTests.cs"];
m18_18 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="PerformTests.cs"];
m18_145 [label="Func<string, bool> validator = actual =>\r\n                {\r\n                    var guid = Guid.Parse(actual);\r\n                    return guid != Guid.Empty;\r\n                }", span="193-197", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", color=red, community=1, file="PerformTests.cs"];
m18_146 [label="return It.Is<string>(x => validator(x));", span="199-199", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", color=red, community=0, file="PerformTests.cs"];
m18_147 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="PerformTests.cs"];
m18_156 [label="Entry Unk.validator", span="", cluster="Unk.validator", file="PerformTests.cs"];
m18_22 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="PerformTests.cs"];
m18_4 [label="Entry Mock<IJobClient>.cstr", span="", cluster="Mock<IJobClient>.cstr", file="PerformTests.cs"];
m18_14 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="PerformTests.cs"];
m18_75 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="PerformTests.cs"];
m18_76 [label="Perform.In(TimeSpan.FromDays(1), typeof (TestJob))", span="103-103", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", color=red, community=0, file="PerformTests.cs"];
m18_77 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="105-111", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", color=red, community=1, file="PerformTests.cs"];
m18_78 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="113-113", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", color=red, community=0, file="PerformTests.cs"];
m18_79 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="PerformTests.cs"];
m18_178 [label="HangFire.Tests.UnitTests.PerformTests", span="", file="PerformTests.cs"];
m18_179 [label=validator, span="", file="PerformTests.cs"];
m19_28 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="PrioritizedJobFetcher.cs"];
m19_4 [label="Entry HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="27-27", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrioritizedJobFetcher.cs"];
m19_6 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="PrioritizedJobFetcher.cs"];
m19_22 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="PrioritizedJobFetcher.cs"];
m19_25 [label="Entry Unk.WaitAny", span="", cluster="Unk.WaitAny", file="PrioritizedJobFetcher.cs"];
m19_26 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="PrioritizedJobFetcher.cs"];
m19_0 [label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="PrioritizedJobFetcher.cs"];
m19_1 [label=queues, span="17-17", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="PrioritizedJobFetcher.cs"];
m19_2 [label="_fetchers.Add(new PrefetchJobFetcher(\r\n                    new JobFetcher(redisManager, queue), prefetchCount))", span="19-20", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", color=red, community=0, file="PrioritizedJobFetcher.cs"];
m19_3 [label="Exit HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="PrioritizedJobFetcher.cs"];
m19_10 [label="Entry HangFire.Server.DisposableCollection<T>.Dispose()", span="8-8", cluster="HangFire.Server.DisposableCollection<T>.Dispose()", file="PrioritizedJobFetcher.cs"];
m19_11 [label="Entry HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="29-29", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_12 [label="var waitHandles = _fetchers.Select(x => x.JobIsReady).ToList()", span="31-31", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_13 [label="waitHandles.Add(cancellationToken.WaitHandle)", span="32-32", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_14 [label="WaitHandle.WaitAny(waitHandles.ToArray())", span="34-34", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_15 [label="cancellationToken.ThrowIfCancellationRequested()", span="36-36", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_16 [label=_fetchers, span="38-38", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_18 [label="return fetcher.DequeueJob(cancellationToken);", span="42-42", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_17 [label="fetcher.PrefetchedCount > 0", span="40-40", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_19 [label="throw new InvalidOperationException();", span="46-46", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_20 [label="Exit HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="29-29", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_23 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="PrioritizedJobFetcher.cs"];
m19_27 [label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="50-50", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs"];
m19_24 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="PrioritizedJobFetcher.cs"];
m19_29 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="PrioritizedJobFetcher.cs"];
m19_30 [label="x.JobIsReady", span="31-31", cluster="lambda expression", file="PrioritizedJobFetcher.cs"];
m19_31 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="PrioritizedJobFetcher.cs"];
m19_7 [label="Entry HangFire.Server.PrioritizedJobFetcher.Dispose()", span="24-24", cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="PrioritizedJobFetcher.cs"];
m19_8 [label="_fetchers.Dispose()", span="26-26", cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="PrioritizedJobFetcher.cs"];
m19_9 [label="Exit HangFire.Server.PrioritizedJobFetcher.Dispose()", span="24-24", cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="PrioritizedJobFetcher.cs"];
m19_5 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="PrioritizedJobFetcher.cs"];
m19_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="PrioritizedJobFetcher.cs"];
m19_32 [label="HangFire.Server.PrioritizedJobFetcher", span="", file="PrioritizedJobFetcher.cs"];
m20_0 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="SchedulePoller.feature.cs"];
m20_1 [label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="SchedulePoller.feature.cs"];
m22_0 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="ServerSteps.cs"];
m22_1 [label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="ServerSteps.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n9 -> n8  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid];
n11 -> n10  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n13 -> n12  [key=0, style=bold, color=blue];
d12 -> d13  [key=0, style=solid, color=green];
d12 -> d16  [key=2, style=dotted, color=green];
d12 -> d17  [key=2, style=dotted, color=green];
d30 -> d12  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
d30 -> d13  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
d30 -> d3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
d30 -> d4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
d30 -> d5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
d30 -> d6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
d30 -> d10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
d30 -> d20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
d30 -> d21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
d30 -> d22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
d30 -> d28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
d10 -> d12  [key=0, style=solid, color=green];
d10 -> d11  [key=0, style=solid];
d13 -> d14  [key=0, style=solid, color=green];
d13 -> d18  [key=2, style=dotted, color=green];
d13 -> d8  [key=2, style=dotted, color=green];
d14 -> d9  [key=0, style=bold, color=blue];
d3 -> d4  [key=0, style=solid];
d4 -> d8  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d20 -> d24  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d21 -> d26  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d28 -> d19  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d11 -> d14  [key=0, style=solid];
d11 -> d15  [key=2, style=dotted];
d2 -> d3  [key=0, style=solid];
d2 -> d5  [key=1, style=dashed, color=darkseagreen4, label=int];
d2 -> d6  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
d7 -> d2  [key=0, style=bold, color=blue];
d19 -> d20  [key=0, style=solid];
d19 -> d23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Stop"];
d19 -> d24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Stop"];
d24 -> d25  [key=0, style=solid];
d23 -> d25  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d29 -> d27  [key=0, style=bold, color=blue];
d25 -> d19  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid, color=red];
m0_68 -> m0_69  [key=0, style=solid, color=red];
m0_68 -> m0_42  [key=2, style=dotted, color=red];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_22  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid, color=red];
m0_70 -> m0_30  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid, color=red];
m0_71 -> m0_55  [key=2, style=dotted, color=red];
m0_71 -> m0_73  [key=1, style=dashed, color=red, label=table3];
m0_71 -> m0_74  [key=1, style=dashed, color=red, label=table3];
m0_72 -> m0_73  [key=0, style=solid, color=red];
m0_72 -> m0_56  [key=2, style=dotted, color=red];
m0_73 -> m0_74  [key=0, style=solid, color=red];
m0_73 -> m0_56  [key=2, style=dotted, color=red];
m0_74 -> m0_75  [key=0, style=solid, color=red];
m0_74 -> m0_43  [key=2, style=dotted, color=red];
m0_75 -> m0_76  [key=0, style=solid, color=red];
m0_75 -> m0_44  [key=2, style=dotted, color=red];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_26  [key=2, style=dotted];
m0_77 -> m0_67  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_9  [key=0, style=bold, color=blue];
m0_94 -> m0_95  [key=0, style=solid, color=red];
m0_95 -> m0_96  [key=0, style=solid, color=red];
m0_95 -> m0_42  [key=2, style=dotted, color=red];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_22  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid, color=red];
m0_97 -> m0_30  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid, color=red];
m0_98 -> m0_43  [key=2, style=dotted, color=red];
m0_99 -> m0_100  [key=0, style=solid, color=red];
m0_99 -> m0_44  [key=2, style=dotted, color=red];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_26  [key=2, style=dotted];
m0_101 -> m0_94  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid, color=red];
m0_79 -> m0_80  [key=0, style=solid, color=red];
m0_79 -> m0_42  [key=2, style=dotted, color=red];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_22  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid, color=red];
m0_81 -> m0_30  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid, color=red];
m0_82 -> m0_43  [key=2, style=dotted, color=red];
m0_83 -> m0_84  [key=0, style=solid, color=red];
m0_83 -> m0_44  [key=2, style=dotted, color=red];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_26  [key=2, style=dotted];
m0_85 -> m0_78  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_35  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m0_22 -> m0_46  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m0_22 -> m0_58  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m0_22 -> m0_68  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m0_22 -> m0_79  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m0_22 -> m0_87  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m0_22 -> m0_95  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m0_22 -> m0_103  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m0_22 -> m0_111  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=2, style=dotted];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_28 -> m0_26  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid, color=red];
m0_87 -> m0_88  [key=0, style=solid, color=red];
m0_87 -> m0_42  [key=2, style=dotted, color=red];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_22  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid, color=red];
m0_89 -> m0_30  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid, color=red];
m0_90 -> m0_43  [key=2, style=dotted, color=red];
m0_91 -> m0_92  [key=0, style=solid, color=red];
m0_91 -> m0_44  [key=2, style=dotted, color=red];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_26  [key=2, style=dotted];
m0_93 -> m0_86  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid, color=red];
m0_35 -> m0_36  [key=0, style=solid, color=red];
m0_35 -> m0_42  [key=2, style=dotted, color=red];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_22  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid, color=red];
m0_37 -> m0_30  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid, color=red];
m0_38 -> m0_43  [key=2, style=dotted, color=red];
m0_39 -> m0_40  [key=0, style=solid, color=red];
m0_39 -> m0_44  [key=2, style=dotted, color=red];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_26  [key=2, style=dotted];
m0_41 -> m0_34  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_0  [key=2, style=dotted];
m0_17 -> m0_14  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_57 -> m0_58  [key=0, style=solid, color=red];
m0_58 -> m0_59  [key=0, style=solid, color=red];
m0_58 -> m0_42  [key=2, style=dotted, color=red];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_22  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid, color=red];
m0_60 -> m0_30  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid, color=red];
m0_61 -> m0_43  [key=2, style=dotted, color=red];
m0_62 -> m0_63  [key=0, style=solid, color=red];
m0_62 -> m0_55  [key=2, style=dotted];
m0_62 -> m0_64  [key=1, style=dashed, color=red, label=table2];
m0_63 -> m0_64  [key=0, style=solid, color=red];
m0_63 -> m0_56  [key=2, style=dotted, color=red];
m0_64 -> m0_65  [key=0, style=solid, color=red];
m0_64 -> m0_44  [key=2, style=dotted, color=red];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_26  [key=2, style=dotted];
m0_66 -> m0_57  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid, color=red];
m0_46 -> m0_47  [key=0, style=solid, color=red];
m0_46 -> m0_42  [key=2, style=dotted, color=red];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_22  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid, color=red];
m0_48 -> m0_30  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid, color=red];
m0_49 -> m0_43  [key=2, style=dotted, color=red];
m0_50 -> m0_51  [key=0, style=solid, color=red];
m0_50 -> m0_55  [key=2, style=dotted];
m0_50 -> m0_52  [key=1, style=dashed, color=red, label=table1];
m0_51 -> m0_52  [key=0, style=solid, color=red];
m0_51 -> m0_56  [key=2, style=dotted, color=red];
m0_52 -> m0_53  [key=0, style=solid, color=red];
m0_52 -> m0_44  [key=2, style=dotted, color=red];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_26  [key=2, style=dotted];
m0_54 -> m0_45  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid, color=red];
m0_31 -> m0_32  [key=0, style=solid, color=red];
m0_31 -> m0_33  [key=2, style=dotted, color=red];
m0_32 -> m0_30  [key=0, style=bold, color=blue];
m0_110 -> m0_111  [key=0, style=solid, color=red];
m0_111 -> m0_112  [key=0, style=solid, color=red];
m0_111 -> m0_42  [key=2, style=dotted, color=red];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_22  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid, color=red];
m0_113 -> m0_30  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid, color=red];
m0_114 -> m0_43  [key=2, style=dotted, color=red];
m0_115 -> m0_116  [key=0, style=solid, color=red];
m0_115 -> m0_44  [key=2, style=dotted, color=red];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_26  [key=2, style=dotted];
m0_117 -> m0_110  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_102 -> m0_103  [key=0, style=solid, color=red];
m0_103 -> m0_104  [key=0, style=solid, color=red];
m0_103 -> m0_42  [key=2, style=dotted, color=red];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_22  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid, color=red];
m0_105 -> m0_30  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid, color=red];
m0_106 -> m0_43  [key=2, style=dotted, color=red];
m0_107 -> m0_108  [key=0, style=solid, color=red];
m0_107 -> m0_44  [key=2, style=dotted, color=red];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_26  [key=2, style=dotted];
m0_109 -> m0_102  [key=0, style=bold, color=blue];
m0_118 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m0_118 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFeature"];
m2_111 -> m2_112  [key=0, style=solid, color=green];
m2_111 -> m2_113  [key=1, style=dashed, color=green, label=string];
m2_112 -> m2_113  [key=0, style=solid, color=green];
m2_112 -> m2_46  [key=2, style=dotted, color=green];
m2_113 -> m2_114  [key=0, style=solid, color=green];
m2_113 -> m2_63  [key=2, style=dotted, color=green];
m2_114 -> m2_111  [key=0, style=bold, color=blue];
m2_103 -> m2_104  [key=0, style=solid, color=green];
m2_104 -> m2_105  [key=0, style=solid, color=green];
m2_104 -> m2_46  [key=2, style=dotted, color=green];
m2_105 -> m2_106  [key=0, style=solid, color=green];
m2_105 -> m2_69  [key=2, style=dotted, color=green];
m2_106 -> m2_103  [key=0, style=bold, color=blue];
m2_80 -> m2_81  [key=0, style=solid, color=green];
m2_80 -> m2_82  [key=1, style=dashed, color=green, label=string];
m2_81 -> m2_82  [key=0, style=solid, color=green];
m2_81 -> m2_84  [key=2, style=dotted, color=green];
m2_82 -> m2_83  [key=0, style=solid, color=green];
m2_82 -> m2_85  [key=2, style=dotted, color=green];
m2_82 -> m2_86  [key=2, style=dotted, color=green];
m2_83 -> m2_80  [key=0, style=bold, color=blue];
m2_30 -> m2_31  [key=0, style=solid, color=green];
m2_34 -> m2_2  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid, color=green];
m2_87 -> m2_90  [key=1, style=dashed, color=green, label=string];
m2_87 -> m2_92  [key=1, style=dashed, color=green, label=Table];
m2_87 -> m2_99  [key=3, color=darkorchid, style=bold, label="Parameter variable Table table"];
m2_87 -> m2_107  [key=3, color=darkorchid, style=bold, label="Parameter variable Table table"];
m2_88 -> m2_89  [key=0, style=solid, color=green];
m2_88 -> m2_53  [key=2, style=dotted, color=green];
m2_88 -> m2_54  [key=2, style=dotted, color=green];
m2_88 -> m2_90  [key=1, style=dashed, color=green, label=job];
m2_88 -> m2_91  [key=1, style=dashed, color=green, label=job];
m2_89 -> m2_90  [key=0, style=solid, color=green];
m2_89 -> m2_55  [key=2, style=dotted, color=green];
m2_90 -> m2_91  [key=0, style=solid, color=green];
m2_90 -> m2_56  [key=2, style=dotted, color=green];
m2_90 -> m2_57  [key=2, style=dotted, color=green];
m2_91 -> m2_92  [key=0, style=solid, color=green];
m2_91 -> m2_58  [key=2, style=dotted, color=green];
m2_92 -> m2_93  [key=0, style=solid, color=green];
m2_92 -> m2_94  [key=2, style=dotted, color=green];
m2_93 -> m2_87  [key=0, style=bold, color=blue];
m2_95 -> m2_96  [key=0, style=solid, color=green];
m2_96 -> m2_97  [key=0, style=solid, color=green];
m2_96 -> m2_46  [key=2, style=dotted, color=green];
m2_97 -> m2_98  [key=0, style=solid, color=green];
m2_97 -> m2_60  [key=2, style=dotted, color=green];
m2_98 -> m2_95  [key=0, style=bold, color=blue];
m2_41 -> m2_1  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_5  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_7  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_8  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_10  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_11  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_12  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_14  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_15  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_16  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_17  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_19  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_22  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_25  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_26  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m2_41 -> m2_28  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ServersPage"];
m2_46 -> m2_47  [key=0, style=solid, color=green];
m2_46 -> m2_49  [key=1, style=dashed, color=green, label=string];
m2_46 -> m2_95  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m2_46 -> m2_103  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m2_46 -> m2_111  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m2_47 -> m2_48  [key=0, style=solid, color=green];
m2_47 -> m2_53  [key=2, style=dotted, color=green];
m2_47 -> m2_54  [key=2, style=dotted, color=green];
m2_47 -> m2_49  [key=1, style=dashed, color=green, label=job];
m2_47 -> m2_50  [key=1, style=dashed, color=green, label=job];
m2_48 -> m2_49  [key=0, style=solid, color=green];
m2_48 -> m2_55  [key=2, style=dotted, color=green];
m2_49 -> m2_50  [key=0, style=solid, color=green];
m2_49 -> m2_56  [key=2, style=dotted, color=green];
m2_49 -> m2_57  [key=2, style=dotted, color=green];
m2_50 -> m2_51  [key=0, style=solid, color=green];
m2_50 -> m2_58  [key=2, style=dotted, color=green];
m2_51 -> m2_52  [key=0, style=solid, color=green];
m2_51 -> m2_59  [key=2, style=dotted, color=green];
m2_52 -> m2_46  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=red];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_1 -> m2_30  [key=2, style=dotted, color=red];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_31  [key=2, style=dotted];
m2_2 -> m2_5  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_7  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_9  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_11  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_13  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_15  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_17  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_19  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_21  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_23  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_25  [key=1, style=dashed, color=green, label=string];
m2_2 -> m2_27  [key=1, style=dashed, color=green, label=string];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_32  [key=2, style=dotted, color=red];
m2_3 -> m2_5  [key=0, style=solid, color=green];
m2_3 -> m2_35  [key=2, style=dotted, color=green];
m2_4 -> m2_5  [key=0, style=solid, color=red];
m2_4 -> m2_33  [key=2, style=dotted, color=red];
m2_4 -> m2_6  [key=1, style=dashed, color=red, label=servers];
m2_4 -> m2_9  [key=1, style=dashed, color=red, label=servers];
m2_4 -> m2_30  [key=0, style=solid, color=green];
m2_4 -> m2_32  [key=0, style=solid, color=green];
m2_4 -> m2_34  [key=0, style=solid, color=green];
m2_4 -> m2_36  [key=2, style=dotted, color=green];
m2_5 -> m2_6  [key=0, style=solid, color=green];
m2_5 -> m2_30  [key=2, style=dotted, color=red];
m2_5 -> m2_7  [key=0, style=solid, color=green];
m2_5 -> m2_35  [key=2, style=dotted, color=green];
m2_6 -> m2_7  [key=0, style=solid, color=red];
m2_6 -> m2_8  [key=0, style=solid, color=red];
m2_6 -> m2_30  [key=0, style=solid, color=green];
m2_6 -> m2_32  [key=0, style=solid, color=green];
m2_6 -> m2_34  [key=0, style=solid, color=green];
m2_6 -> m2_37  [key=2, style=dotted, color=green];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_9 -> m2_28  [key=0, style=solid, color=red];
m2_9 -> m2_11  [key=1, style=dashed, color=red, label=server];
m2_9 -> m2_13  [key=1, style=dashed, color=red, label=server];
m2_9 -> m2_15  [key=1, style=dashed, color=red, label=server];
m2_9 -> m2_17  [key=1, style=dashed, color=red, label=server];
m2_9 -> m2_19  [key=1, style=dashed, color=red, label=server];
m2_9 -> m2_21  [key=1, style=dashed, color=red, label=server];
m2_9 -> m2_23  [key=1, style=dashed, color=red, label=server];
m2_9 -> m2_25  [key=1, style=dashed, color=red, label=server];
m2_9 -> m2_35  [key=2, style=dotted, color=green];
m2_7 -> m2_29  [key=0, style=solid, color=red];
m2_7 -> m2_30  [key=2, style=dotted, color=red];
m2_7 -> m2_8  [key=0, style=solid, color=green];
m2_7 -> m2_9  [key=0, style=solid, color=green];
m2_7 -> m2_35  [key=2, style=dotted, color=green];
m2_8 -> m2_9  [key=0, style=solid, color=red];
m2_8 -> m2_30  [key=2, style=dotted, color=red];
m2_8 -> m2_32  [key=0, style=solid, color=green];
m2_8 -> m2_34  [key=0, style=solid, color=green];
m2_8 -> m2_38  [key=2, style=dotted, color=green];
m2_10 -> m2_11  [key=0, style=solid, color=red];
m2_10 -> m2_30  [key=2, style=dotted, color=red];
m2_10 -> m2_32  [key=0, style=solid, color=green];
m2_10 -> m2_34  [key=0, style=solid, color=green];
m2_10 -> m2_38  [key=2, style=dotted, color=green];
m2_28 -> m2_29  [key=0, style=solid, color=red];
m2_28 -> m2_30  [key=2, style=dotted, color=red];
m2_28 -> m2_32  [key=0, style=solid, color=green];
m2_28 -> m2_34  [key=0, style=solid, color=green];
m2_28 -> m2_36  [key=2, style=dotted, color=green];
m2_11 -> m2_12  [key=0, style=solid, color=green];
m2_11 -> m2_34  [key=2, style=dotted, color=red];
m2_11 -> m2_35  [key=2, style=dotted, color=green];
m2_11 -> m2_13  [key=0, style=solid, color=green];
m2_13 -> m2_14  [key=0, style=solid, color=green];
m2_13 -> m2_35  [key=2, style=dotted, color=green];
m2_13 -> m2_15  [key=0, style=solid, color=green];
m2_15 -> m2_16  [key=0, style=solid, color=green];
m2_15 -> m2_36  [key=2, style=dotted, color=red];
m2_15 -> m2_37  [key=2, style=dotted, color=red];
m2_15 -> m2_38  [key=2, style=dotted, color=red];
m2_15 -> m2_39  [key=2, style=dotted, color=red];
m2_15 -> m2_17  [key=0, style=solid, color=green];
m2_15 -> m2_35  [key=2, style=dotted, color=green];
m2_17 -> m2_18  [key=0, style=solid, color=green];
m2_17 -> m2_40  [key=2, style=dotted, color=red];
m2_17 -> m2_35  [key=2, style=dotted, color=green];
m2_17 -> m2_19  [key=0, style=solid, color=green];
m2_19 -> m2_20  [key=0, style=solid, color=green];
m2_19 -> m2_35  [key=2, style=dotted, color=green];
m2_19 -> m2_21  [key=0, style=solid, color=green];
m2_21 -> m2_22  [key=0, style=solid, color=green];
m2_21 -> m2_27  [key=0, style=solid, color=red];
m2_21 -> m2_23  [key=0, style=solid, color=green];
m2_21 -> m2_35  [key=2, style=dotted, color=green];
m2_23 -> m2_24  [key=0, style=solid, color=green];
m2_23 -> m2_40  [key=2, style=dotted];
m2_23 -> m2_35  [key=2, style=dotted, color=green];
m2_23 -> m2_25  [key=0, style=solid, color=green];
m2_25 -> m2_26  [key=0, style=solid, color=green];
m2_25 -> m2_35  [key=2, style=dotted, color=green];
m2_25 -> m2_27  [key=0, style=solid, color=green];
m2_12 -> m2_13  [key=0, style=solid, color=red];
m2_12 -> m2_30  [key=2, style=dotted, color=red];
m2_12 -> m2_32  [key=0, style=solid, color=green];
m2_12 -> m2_34  [key=0, style=solid, color=green];
m2_12 -> m2_39  [key=2, style=dotted, color=green];
m2_14 -> m2_15  [key=0, style=solid, color=red];
m2_14 -> m2_30  [key=2, style=dotted, color=red];
m2_14 -> m2_32  [key=0, style=solid, color=green];
m2_14 -> m2_34  [key=0, style=solid, color=green];
m2_14 -> m2_39  [key=2, style=dotted, color=green];
m2_16 -> m2_17  [key=0, style=solid, color=red];
m2_16 -> m2_30  [key=2, style=dotted, color=red];
m2_16 -> m2_32  [key=0, style=solid, color=green];
m2_16 -> m2_34  [key=0, style=solid, color=green];
m2_16 -> m2_40  [key=2, style=dotted, color=green];
m2_16 -> m2_41  [key=2, style=dotted, color=green];
m2_18 -> m2_19  [key=0, style=solid, color=red];
m2_18 -> m2_30  [key=2, style=dotted];
m2_18 -> m2_32  [key=0, style=solid, color=green];
m2_18 -> m2_34  [key=0, style=solid, color=green];
m2_18 -> m2_40  [key=2, style=dotted, color=green];
m2_18 -> m2_42  [key=2, style=dotted, color=green];
m2_20 -> m2_21  [key=0, style=solid, color=red];
m2_20 -> m2_30  [key=2, style=dotted];
m2_20 -> m2_32  [key=0, style=solid, color=green];
m2_20 -> m2_34  [key=0, style=solid, color=green];
m2_20 -> m2_40  [key=2, style=dotted, color=green];
m2_20 -> m2_43  [key=2, style=dotted, color=green];
m2_22 -> m2_23  [key=0, style=solid, color=red];
m2_22 -> m2_30  [key=2, style=dotted, color=red];
m2_22 -> m2_32  [key=0, style=solid, color=green];
m2_22 -> m2_34  [key=0, style=solid, color=green];
m2_22 -> m2_40  [key=2, style=dotted, color=green];
m2_22 -> m2_44  [key=2, style=dotted, color=green];
m2_27 -> m2_9  [key=0, style=solid, color=red];
m2_27 -> m2_30  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid, color=green];
m2_27 -> m2_29  [key=0, style=solid, color=green];
m2_27 -> m2_35  [key=2, style=dotted, color=green];
m2_24 -> m2_25  [key=0, style=solid, color=red];
m2_24 -> m2_30  [key=2, style=dotted];
m2_24 -> m2_32  [key=0, style=solid, color=green];
m2_24 -> m2_34  [key=0, style=solid, color=green];
m2_24 -> m2_36  [key=2, style=dotted, color=green];
m2_26 -> m2_27  [key=0, style=solid, color=red];
m2_26 -> m2_30  [key=2, style=dotted, color=red];
m2_26 -> m2_32  [key=0, style=solid, color=green];
m2_26 -> m2_34  [key=0, style=solid, color=green];
m2_26 -> m2_36  [key=2, style=dotted, color=green];
m2_29 -> m2_0  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid, color=green];
m2_29 -> m2_32  [key=0, style=solid, color=green];
m2_29 -> m2_34  [key=0, style=solid, color=green];
m2_29 -> m2_45  [key=2, style=dotted, color=green];
m2_32 -> m2_33  [key=0, style=solid];
m2_31 -> m2_34  [key=0, style=solid, color=green];
m2_33 -> m2_34  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid, color=green];
m2_61 -> m2_62  [key=0, style=solid, color=green];
m2_61 -> m2_63  [key=2, style=dotted, color=green];
m2_62 -> m2_60  [key=0, style=bold, color=blue];
m2_69 -> m2_70  [key=0, style=solid, color=green];
m2_70 -> m2_71  [key=0, style=solid, color=green];
m2_70 -> m2_76  [key=2, style=dotted, color=green];
m2_70 -> m2_57  [key=2, style=dotted, color=green];
m2_71 -> m2_72  [key=0, style=solid, color=green];
m2_71 -> m2_77  [key=2, style=dotted, color=green];
m2_72 -> m2_73  [key=0, style=solid, color=green];
m2_72 -> m2_78  [key=2, style=dotted, color=green];
m2_72 -> m2_74  [key=1, style=dashed, color=green, label=timestamp];
m2_73 -> m2_74  [key=0, style=solid, color=green];
m2_73 -> m2_79  [key=2, style=dotted, color=green];
m2_73 -> m2_57  [key=2, style=dotted, color=green];
m2_74 -> m2_75  [key=0, style=solid, color=green];
m2_74 -> m2_79  [key=2, style=dotted, color=green];
m2_74 -> m2_57  [key=2, style=dotted, color=green];
m2_75 -> m2_69  [key=0, style=bold, color=blue];
m2_99 -> m2_100  [key=0, style=solid, color=green];
m2_100 -> m2_101  [key=0, style=solid, color=green];
m2_100 -> m2_87  [key=2, style=dotted, color=green];
m2_101 -> m2_102  [key=0, style=solid, color=green];
m2_101 -> m2_60  [key=2, style=dotted, color=green];
m2_102 -> m2_99  [key=0, style=bold, color=blue];
m2_107 -> m2_108  [key=0, style=solid, color=green];
m2_108 -> m2_109  [key=0, style=solid, color=green];
m2_108 -> m2_87  [key=2, style=dotted, color=green];
m2_109 -> m2_110  [key=0, style=solid, color=green];
m2_109 -> m2_69  [key=2, style=dotted, color=green];
m2_110 -> m2_107  [key=0, style=bold, color=blue];
m2_63 -> m2_61  [key=3, color=green, style=bold, label="Parameter variable string name"];
m2_63 -> m2_64  [key=0, style=solid, color=green];
m2_63 -> m2_111  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m2_64 -> m2_65  [key=0, style=solid, color=green];
m2_64 -> m2_53  [key=2, style=dotted, color=green];
m2_64 -> m2_68  [key=2, style=dotted, color=green];
m2_64 -> m2_66  [key=1, style=dashed, color=green, label=jobIds];
m2_65 -> m2_66  [key=0, style=solid, color=green];
m2_65 -> m2_59  [key=2, style=dotted, color=green];
m2_66 -> m2_67  [key=0, style=solid, color=green];
m2_66 -> m2_59  [key=2, style=dotted, color=green];
m2_67 -> m2_63  [key=0, style=bold, color=blue];
m2_115 -> m2_4  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_6  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_8  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_10  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_12  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_14  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_16  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_18  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_20  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_22  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_24  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_26  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_28  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_47  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_61  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_66  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_70  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_71  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_81  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_82  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_88  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_96  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_97  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_100  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_101  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_104  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_105  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_108  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_109  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_112  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_113  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m2_115 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [key=2, style=dotted];
m5_5 -> m5_3  [key=0, style=bold, color=blue];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_29  [key=2, style=dotted];
m5_25 -> m5_32  [key=2, style=dotted];
m5_25 -> m5_33  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_12 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_12 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_12 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_13 -> m5_14  [key=0, style=solid, color=red];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_28  [key=2, style=dotted];
m5_16 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m5_17 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m5_18 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_23  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_29  [key=2, style=dotted];
m5_19 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
m5_19 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_29  [key=2, style=dotted];
m5_20 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m5_20 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_34  [key=2, style=dotted];
m5_22 -> m5_24  [key=0, style=solid];
m5_22 -> m5_30  [key=2, style=dotted];
m5_22 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_22 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_31  [key=2, style=dotted];
m5_23 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_23 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_24 -> m5_15  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_27 -> m5_12  [key=0, style=bold, color=blue];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [key=2, style=dotted];
m5_37 -> m5_35  [key=0, style=bold, color=blue];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_59  [key=2, style=dotted];
m5_50 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m5_39 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m5_39 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m5_39 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m5_39 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_54  [key=2, style=dotted];
m5_40 -> m5_55  [key=2, style=dotted];
m5_40 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_40 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_40 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_40 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_40 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_56  [key=2, style=dotted];
m5_41 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_41 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_41 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_41 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_57  [key=2, style=dotted];
m5_42 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m5_42 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m5_42 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m5_42 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m5_42 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m5_42 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_32  [key=2, style=dotted];
m5_47 -> m5_58  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_59  [key=2, style=dotted];
m5_49 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_52 -> m5_53  [key=0, style=solid];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_58  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_58  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_58  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_58  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_11  [key=2, style=dotted];
m5_48 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_48 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_60  [key=2, style=dotted];
m5_53 -> m5_39  [key=0, style=bold, color=blue];
m5_133 -> m5_134  [key=0, style=solid];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_136  [key=2, style=dotted];
m5_134 -> m5_137  [key=2, style=dotted];
m5_135 -> m5_133  [key=0, style=bold, color=blue];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_105  [key=0, style=solid];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_29  [key=2, style=dotted];
m5_105 -> m5_96  [key=2, style=dotted];
m5_105 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label=entries];
m5_105 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=entries];
m5_104 -> m5_112  [key=0, style=solid];
m5_104 -> m5_113  [key=2, style=dotted];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_108  [key=0, style=solid];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_114  [key=2, style=dotted];
m5_108 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m5_108 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_116  [key=2, style=dotted];
m5_111 -> m5_97  [key=2, style=dotted];
m5_107 -> m5_112  [key=0, style=solid];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_115  [key=2, style=dotted];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_115  [key=2, style=dotted];
m5_112 -> m5_102  [key=0, style=bold, color=blue];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_205  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_210  [key=2, style=dotted];
m5_194 -> m5_198  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_203  [key=0, style=solid];
m5_205 -> m5_215  [key=2, style=dotted];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_167  [key=2, style=dotted];
m5_195 -> m5_200  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m5_195 -> m5_222  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m5_195 -> m5_203  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m5_198 -> m5_199  [key=0, style=solid];
m5_198 -> m5_201  [key=0, style=solid];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_205  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m5_200 -> m5_198  [key=0, style=solid];
m5_200 -> m5_59  [key=2, style=dotted];
m5_200 -> m5_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_200 -> m5_221  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_203 -> m5_204  [key=0, style=solid];
m5_203 -> m5_208  [key=0, style=solid];
m5_197 -> m5_198  [key=0, style=solid];
m5_197 -> m5_211  [key=2, style=dotted];
m5_197 -> m5_200  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m5_197 -> m5_201  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m5_201 -> m5_202  [key=0, style=solid];
m5_201 -> m5_212  [key=2, style=dotted];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_217  [key=1, style=dashed, color=darkseagreen4, label=name];
m5_199 -> m5_222  [key=1, style=dashed, color=darkseagreen4, label=name];
m5_202 -> m5_203  [key=0, style=solid];
m5_202 -> m5_207  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m5_202 -> m5_208  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m5_207 -> m5_203  [key=0, style=solid];
m5_207 -> m5_207  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m5_207 -> m5_208  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m5_208 -> m5_209  [key=0, style=solid];
m5_204 -> m5_205  [key=0, style=solid];
m5_204 -> m5_213  [key=2, style=dotted];
m5_204 -> m5_214  [key=2, style=dotted];
m5_204 -> m5_204  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m5_204 -> m5_206  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m5_206 -> m5_207  [key=0, style=solid];
m5_206 -> m5_176  [key=2, style=dotted];
m5_206 -> m5_206  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m5_209 -> m5_193  [key=0, style=bold, color=blue];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_29  [key=2, style=dotted];
m5_191 -> m5_32  [key=2, style=dotted];
m5_191 -> m5_33  [key=2, style=dotted];
m5_190 -> m5_191  [key=0, style=solid];
m5_192 -> m5_190  [key=0, style=bold, color=blue];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_59  [key=2, style=dotted];
m5_179 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_178  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_176 -> m5_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_176 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_176 -> m5_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_11  [key=2, style=dotted];
m5_177 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_177 -> m5_180  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_178 -> m5_179  [key=0, style=solid];
m5_178 -> m5_59  [key=2, style=dotted];
m5_178 -> m5_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_180 -> m5_181  [key=0, style=solid];
m5_180 -> m5_60  [key=2, style=dotted];
m5_181 -> m5_176  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=2, style=dotted];
m5_8 -> m5_11  [key=2, style=dotted];
m5_9 -> m5_7  [key=0, style=bold, color=blue];
m5_120 -> m5_121  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_29  [key=2, style=dotted];
m5_121 -> m5_123  [key=2, style=dotted];
m5_122 -> m5_120  [key=0, style=bold, color=blue];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_141  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m5_138 -> m5_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_141  [key=0, style=solid];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_143  [key=0, style=solid];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_130  [key=2, style=dotted];
m5_143 -> m5_64  [key=2, style=dotted];
m5_140 -> m5_144  [key=0, style=solid];
m5_140 -> m5_113  [key=2, style=dotted];
m5_142 -> m5_144  [key=0, style=solid];
m5_142 -> m5_113  [key=2, style=dotted];
m5_144 -> m5_138  [key=0, style=bold, color=blue];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_151 -> m5_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_151 -> m5_154  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_151 -> m5_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_151 -> m5_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m5_151 -> m5_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_151 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_11  [key=2, style=dotted];
m5_152 -> m5_154  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_152 -> m5_157  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_152 -> m5_158  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_59  [key=2, style=dotted];
m5_153 -> m5_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_59  [key=2, style=dotted];
m5_154 -> m5_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_158  [key=0, style=solid];
m5_157 -> m5_155  [key=0, style=solid];
m5_157 -> m5_59  [key=2, style=dotted];
m5_157 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_60  [key=2, style=dotted];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m5_159 -> m5_151  [key=0, style=bold, color=blue];
m5_34 -> m5_13  [key=3, color=red, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m5_173 -> m5_174  [key=0, style=solid];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_176  [key=2, style=dotted];
m5_175 -> m5_173  [key=0, style=bold, color=blue];
m5_69 -> m5_70  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_29  [key=2, style=dotted];
m5_70 -> m5_96  [key=2, style=dotted];
m5_70 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_83  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_70 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_73  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_80  [key=0, style=solid];
m5_78 -> m5_97  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=type];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_82  [key=0, style=solid];
m5_80 -> m5_97  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=method];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_84  [key=0, style=solid];
m5_82 -> m5_97  [key=2, style=dotted];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_86  [key=0, style=solid];
m5_84 -> m5_97  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_88  [key=0, style=solid];
m5_86 -> m5_97  [key=2, style=dotted];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_100  [key=2, style=dotted];
m5_94 -> m5_97  [key=2, style=dotted];
m5_94 -> m5_101  [key=2, style=dotted];
m5_72 -> m5_95  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=type];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=method];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_98  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m5_88 -> m5_89  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_94  [key=0, style=solid];
m5_91 -> m5_99  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_95 -> m5_69  [key=0, style=bold, color=blue];
m5_221 -> m5_222  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_29  [key=2, style=dotted];
m5_66 -> m5_68  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_29  [key=2, style=dotted];
m5_62 -> m5_64  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_63 -> m5_61  [key=0, style=bold, color=blue];
m5_67 -> m5_65  [key=0, style=bold, color=blue];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_163  [key=2, style=dotted];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_29  [key=2, style=dotted];
m5_165 -> m5_167  [key=2, style=dotted];
m5_165 -> m5_168  [key=2, style=dotted];
m5_165 -> m5_32  [key=2, style=dotted];
m5_165 -> m5_64  [key=2, style=dotted];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_29  [key=2, style=dotted];
m5_170 -> m5_172  [key=2, style=dotted];
m5_160 -> m5_161  [key=0, style=solid];
m5_164 -> m5_165  [key=0, style=solid];
m5_169 -> m5_170  [key=0, style=solid];
m5_162 -> m5_160  [key=0, style=bold, color=blue];
m5_166 -> m5_164  [key=0, style=bold, color=blue];
m5_171 -> m5_169  [key=0, style=bold, color=blue];
m5_183 -> m5_184  [key=0, style=solid];
m5_183 -> m5_185  [key=2, style=dotted];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_29  [key=2, style=dotted];
m5_187 -> m5_189  [key=2, style=dotted];
m5_182 -> m5_183  [key=0, style=solid];
m5_186 -> m5_187  [key=0, style=solid];
m5_184 -> m5_182  [key=0, style=bold, color=blue];
m5_188 -> m5_186  [key=0, style=bold, color=blue];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_224  [key=2, style=dotted];
m5_222 -> m5_225  [key=2, style=dotted];
m5_222 -> m5_226  [key=2, style=dotted];
m5_222 -> m5_227  [key=2, style=dotted];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_219  [key=2, style=dotted];
m5_217 -> m5_220  [key=2, style=dotted];
m5_216 -> m5_217  [key=0, style=solid];
m5_218 -> m5_216  [key=0, style=bold, color=blue];
m5_223 -> m5_221  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_145 -> m5_146  [key=0, style=solid];
m5_145 -> m5_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_148  [key=0, style=solid];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_130  [key=2, style=dotted];
m5_148 -> m5_96  [key=2, style=dotted];
m5_147 -> m5_150  [key=0, style=solid];
m5_147 -> m5_113  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_150 -> m5_145  [key=0, style=bold, color=blue];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_29  [key=2, style=dotted];
m5_118 -> m5_33  [key=2, style=dotted];
m5_117 -> m5_118  [key=0, style=solid];
m5_119 -> m5_117  [key=0, style=bold, color=blue];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_127  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_127  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_130  [key=2, style=dotted];
m5_127 -> m5_131  [key=2, style=dotted];
m5_126 -> m5_129  [key=0, style=solid];
m5_126 -> m5_113  [key=2, style=dotted];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_132  [key=2, style=dotted];
m5_129 -> m5_124  [key=0, style=bold, color=blue];
m5_228 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_194  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_228 -> m5_206  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m5_229 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_229 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_230 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m5_231 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m5_232 -> m5_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_232 -> m5_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_232 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_233 -> m5_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m5_234 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m5_235 -> m5_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_235 -> m5_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_236 -> m5_217  [key=1, style=dashed, color=darkseagreen4, label=name];
m5_236 -> m5_222  [key=1, style=dashed, color=darkseagreen4, label=name];
m5_237 -> m5_222  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_16 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m6_16 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_16 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_16 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_16 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_16 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_16 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=0, style=solid];
m6_17 -> m6_34  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid, color=green];
m6_25 -> m6_27  [key=0, style=solid];
m6_25 -> m6_35  [key=2, style=dotted];
m6_26 -> m6_33  [key=0, style=solid];
m6_26 -> m6_36  [key=2, style=dotted];
m6_26 -> d17  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid, color=green];
m6_26 -> m6_29  [key=2, style=dotted, color=green];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_38  [key=2, style=dotted];
m6_27 -> m6_30  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_39  [key=2, style=dotted];
m6_28 -> m6_40  [key=2, style=dotted];
m6_28 -> m6_25  [key=0, style=bold, color=blue];
m6_30 -> m6_33  [key=0, style=solid];
m6_18 -> m6_33  [key=0, style=solid];
m6_18 -> m6_10  [key=2, style=dotted];
m6_20 -> m6_33  [key=0, style=solid];
m6_20 -> m6_10  [key=2, style=dotted];
m6_22 -> m6_33  [key=0, style=solid];
m6_22 -> m6_10  [key=2, style=dotted];
m6_24 -> m6_33  [key=0, style=solid];
m6_24 -> m6_10  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_41  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_42  [key=2, style=dotted];
m6_33 -> m6_16  [key=0, style=bold, color=blue];
m6_43 -> m6_44  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_46  [key=2, style=dotted];
m6_45 -> m6_43  [key=0, style=bold, color=blue];
m6_38 -> m6_47  [key=0, style=solid];
m6_38 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_38 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_54  [key=2, style=dotted];
m6_47 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_47 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_47 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_47 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_48 -> m6_49  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_55  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_56  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_53 -> m6_38  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m6_2 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m6_2 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_11  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_4 -> m6_9  [key=0, style=solid];
m6_4 -> m6_10  [key=2, style=dotted];
m6_6 -> m6_9  [key=0, style=solid];
m6_6 -> m6_10  [key=2, style=dotted];
m6_9 -> m6_2  [key=0, style=bold, color=blue];
m6_15 -> m6_57  [key=0, style=solid];
m6_15 -> m6_58  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_15 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_15 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_54  [key=2, style=dotted];
m6_57 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_57 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_57 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_60  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_69  [key=0, style=solid];
m6_60 -> m6_71  [key=2, style=dotted];
m6_60 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m6_60 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_72  [key=2, style=dotted];
m6_61 -> m6_63  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m6_61 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m6_61 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m6_59 -> m6_70  [key=0, style=solid];
m6_68 -> m6_60  [key=0, style=solid];
m6_68 -> m6_77  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_67 -> m6_70  [key=0, style=solid];
m6_67 -> m6_76  [key=2, style=dotted];
m6_67 -> d17  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_62 -> m6_62  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_68  [key=0, style=solid];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_73  [key=2, style=dotted];
m6_64 -> m6_74  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_68  [key=0, style=solid];
m6_65 -> m6_75  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_70 -> m6_15  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_16  [key=3, color=darkorchid, style=bold, label="method methodReturn string CreateJob"];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_13 -> m6_16  [key=2, style=dotted];
m6_14 -> m6_12  [key=0, style=bold, color=blue];
m6_78 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m6_78 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m6_78 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m6_78 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m6_78 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m6_78 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_16 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m10_16 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_16 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_16 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_16 -> m10_27  [key=1, style=dashed, color=green, label="System.Type"];
m10_16 -> m10_28  [key=1, style=dashed, color=green, label=string];
m10_16 -> m10_30  [key=1, style=dashed, color=green, label=string];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_19  [key=0, style=solid];
m10_17 -> m10_32  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_21  [key=0, style=solid];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_23  [key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_25  [key=0, style=solid];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_27  [key=0, style=solid, color=green];
m10_25 -> m10_33  [key=2, style=dotted];
m10_26 -> m10_31  [key=0, style=solid];
m10_26 -> m10_34  [key=2, style=dotted];
m10_26 -> d17  [key=2, style=dotted];
m10_27 -> m10_28  [key=0, style=solid, color=green];
m10_27 -> m10_36  [key=2, style=dotted, color=green];
m10_28 -> m10_29  [key=0, style=solid, color=green];
m10_28 -> m10_37  [key=2, style=dotted, color=green];
m10_28 -> m10_38  [key=2, style=dotted, color=green];
m10_30 -> m10_31  [key=0, style=solid, color=green];
m10_18 -> m10_31  [key=0, style=solid];
m10_18 -> m10_10  [key=2, style=dotted];
m10_20 -> m10_31  [key=0, style=solid];
m10_20 -> m10_10  [key=2, style=dotted];
m10_22 -> m10_31  [key=0, style=solid];
m10_22 -> m10_10  [key=2, style=dotted];
m10_24 -> m10_31  [key=0, style=solid];
m10_24 -> m10_10  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid, color=green];
m10_29 -> m10_39  [key=2, style=dotted, color=green];
m10_31 -> m10_32  [key=0, style=solid, color=green];
m10_31 -> m10_16  [key=0, style=bold, color=blue];
m10_32 -> m10_31  [key=0, style=solid, color=green];
m10_32 -> m10_42  [key=2, style=dotted, color=green];
m10_40 -> m10_41  [key=0, style=solid];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_43  [key=2, style=dotted];
m10_42 -> m10_40  [key=0, style=bold, color=blue];
m10_36 -> m10_44  [key=0, style=solid];
m10_36 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_36 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_51  [key=2, style=dotted];
m10_44 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_44 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_44 -> m10_48  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_44 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_45 -> m10_46  [key=0, style=solid];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_52  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_53  [key=2, style=dotted];
m10_49 -> m10_50  [key=0, style=solid];
m10_50 -> m10_36  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m10_2 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m10_2 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_7  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_11  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_4 -> m10_9  [key=0, style=solid];
m10_4 -> m10_10  [key=2, style=dotted];
m10_6 -> m10_9  [key=0, style=solid];
m10_6 -> m10_10  [key=2, style=dotted];
m10_9 -> m10_2  [key=0, style=bold, color=blue];
m10_15 -> m10_54  [key=0, style=solid];
m10_15 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_15 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_15 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_51  [key=2, style=dotted];
m10_54 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_54 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_54 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_57  [key=0, style=solid];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_66  [key=0, style=solid];
m10_57 -> m10_68  [key=2, style=dotted];
m10_57 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m10_57 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_69  [key=2, style=dotted];
m10_58 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m10_58 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m10_58 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m10_56 -> m10_67  [key=0, style=solid];
m10_65 -> m10_57  [key=0, style=solid];
m10_65 -> m10_74  [key=2, style=dotted];
m10_66 -> m10_67  [key=0, style=solid];
m10_64 -> m10_67  [key=0, style=solid];
m10_64 -> m10_73  [key=2, style=dotted];
m10_64 -> d17  [key=2, style=dotted];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label=value];
m10_59 -> m10_59  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_65  [key=0, style=solid];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_70  [key=2, style=dotted];
m10_61 -> m10_71  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_65  [key=0, style=solid];
m10_62 -> m10_72  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_67 -> m10_15  [key=0, style=bold, color=blue];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_16  [key=3, color=darkorchid, style=bold, label="method methodReturn string CreateJob"];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_15  [key=2, style=dotted];
m10_13 -> m10_16  [key=2, style=dotted];
m10_14 -> m10_12  [key=0, style=bold, color=blue];
m10_75 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m10_75 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m10_75 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m10_75 -> m10_28  [key=1, style=dashed, color=green, label="HangFire.Client.JobClient"];
m10_75 -> m10_29  [key=1, style=dashed, color=green, label="HangFire.Client.JobClient"];
m10_75 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m11_57 -> m11_58  [key=0, style=solid, color=green];
m11_58 -> m11_59  [key=0, style=solid, color=green];
m11_58 -> m11_42  [key=2, style=dotted, color=green];
m11_59 -> m11_60  [key=0, style=solid, color=green];
m11_59 -> m11_22  [key=2, style=dotted, color=green];
m11_60 -> m11_61  [key=0, style=solid, color=green];
m11_60 -> m11_30  [key=2, style=dotted, color=green];
m11_61 -> m11_62  [key=0, style=solid, color=green];
m11_61 -> m11_43  [key=2, style=dotted, color=green];
m11_62 -> m11_63  [key=0, style=solid, color=green];
m11_62 -> m11_55  [key=2, style=dotted, color=green];
m11_62 -> m11_64  [key=1, style=dashed, color=green, label=table2];
m11_63 -> m11_64  [key=0, style=solid, color=green];
m11_63 -> m11_56  [key=2, style=dotted, color=green];
m11_64 -> m11_65  [key=0, style=solid, color=green];
m11_64 -> m11_44  [key=2, style=dotted, color=green];
m11_65 -> m11_66  [key=0, style=solid, color=green];
m11_65 -> m11_26  [key=2, style=dotted, color=green];
m11_66 -> m11_57  [key=0, style=bold, color=blue];
m11_34 -> m11_35  [key=0, style=solid, color=green];
m11_35 -> m11_36  [key=0, style=solid, color=green];
m11_35 -> m11_42  [key=2, style=dotted, color=green];
m11_36 -> m11_37  [key=0, style=solid, color=green];
m11_36 -> m11_22  [key=2, style=dotted, color=green];
m11_37 -> m11_38  [key=0, style=solid, color=green];
m11_37 -> m11_30  [key=2, style=dotted, color=green];
m11_38 -> m11_39  [key=0, style=solid, color=green];
m11_38 -> m11_43  [key=2, style=dotted, color=green];
m11_39 -> m11_40  [key=0, style=solid, color=green];
m11_39 -> m11_44  [key=2, style=dotted, color=green];
m11_40 -> m11_41  [key=0, style=solid, color=green];
m11_40 -> m11_26  [key=2, style=dotted, color=green];
m11_41 -> m11_34  [key=0, style=bold, color=blue];
m11_30 -> m11_31  [key=0, style=solid, color=green];
m11_31 -> m11_32  [key=0, style=solid, color=green];
m11_31 -> m11_33  [key=2, style=dotted, color=green];
m11_32 -> m11_30  [key=0, style=bold, color=blue];
m11_78 -> m11_79  [key=0, style=solid, color=green];
m11_79 -> m11_80  [key=0, style=solid, color=green];
m11_79 -> m11_42  [key=2, style=dotted, color=green];
m11_80 -> m11_81  [key=0, style=solid, color=green];
m11_80 -> m11_22  [key=2, style=dotted, color=green];
m11_81 -> m11_82  [key=0, style=solid, color=green];
m11_81 -> m11_30  [key=2, style=dotted, color=green];
m11_82 -> m11_83  [key=0, style=solid, color=green];
m11_82 -> m11_43  [key=2, style=dotted, color=green];
m11_83 -> m11_84  [key=0, style=solid, color=green];
m11_83 -> m11_44  [key=2, style=dotted, color=green];
m11_84 -> m11_85  [key=0, style=solid, color=green];
m11_84 -> m11_26  [key=2, style=dotted, color=green];
m11_85 -> m11_78  [key=0, style=bold, color=blue];
m11_18 -> m11_19  [key=0, style=solid, color=green];
m11_19 -> m11_20  [key=0, style=solid, color=green];
m11_19 -> m11_21  [key=2, style=dotted, color=green];
m11_20 -> m11_18  [key=0, style=bold, color=blue];
m11_45 -> m11_46  [key=0, style=solid, color=green];
m11_46 -> m11_47  [key=0, style=solid, color=green];
m11_46 -> m11_42  [key=2, style=dotted, color=green];
m11_47 -> m11_48  [key=0, style=solid, color=green];
m11_47 -> m11_22  [key=2, style=dotted, color=green];
m11_48 -> m11_49  [key=0, style=solid, color=green];
m11_48 -> m11_30  [key=2, style=dotted, color=green];
m11_49 -> m11_50  [key=0, style=solid, color=green];
m11_49 -> m11_43  [key=2, style=dotted, color=green];
m11_50 -> m11_51  [key=0, style=solid, color=green];
m11_50 -> m11_55  [key=2, style=dotted, color=green];
m11_50 -> m11_52  [key=1, style=dashed, color=green, label=table1];
m11_51 -> m11_52  [key=0, style=solid, color=green];
m11_51 -> m11_56  [key=2, style=dotted, color=green];
m11_52 -> m11_53  [key=0, style=solid, color=green];
m11_52 -> m11_44  [key=2, style=dotted, color=green];
m11_53 -> m11_54  [key=0, style=solid, color=green];
m11_53 -> m11_26  [key=2, style=dotted, color=green];
m11_54 -> m11_45  [key=0, style=bold, color=blue];
m11_94 -> m11_95  [key=0, style=solid, color=green];
m11_95 -> m11_96  [key=0, style=solid, color=green];
m11_95 -> m11_42  [key=2, style=dotted, color=green];
m11_96 -> m11_97  [key=0, style=solid, color=green];
m11_96 -> m11_22  [key=2, style=dotted, color=green];
m11_97 -> m11_98  [key=0, style=solid, color=green];
m11_97 -> m11_30  [key=2, style=dotted, color=green];
m11_98 -> m11_99  [key=0, style=solid, color=green];
m11_98 -> m11_43  [key=2, style=dotted, color=green];
m11_99 -> m11_100  [key=0, style=solid, color=green];
m11_99 -> m11_44  [key=2, style=dotted, color=green];
m11_100 -> m11_101  [key=0, style=solid, color=green];
m11_100 -> m11_26  [key=2, style=dotted, color=green];
m11_101 -> m11_94  [key=0, style=bold, color=blue];
m11_86 -> m11_87  [key=0, style=solid, color=green];
m11_87 -> m11_88  [key=0, style=solid, color=green];
m11_87 -> m11_42  [key=2, style=dotted, color=green];
m11_88 -> m11_89  [key=0, style=solid, color=green];
m11_88 -> m11_22  [key=2, style=dotted, color=green];
m11_89 -> m11_90  [key=0, style=solid, color=green];
m11_89 -> m11_30  [key=2, style=dotted, color=green];
m11_90 -> m11_91  [key=0, style=solid, color=green];
m11_90 -> m11_43  [key=2, style=dotted, color=green];
m11_91 -> m11_92  [key=0, style=solid, color=green];
m11_91 -> m11_44  [key=2, style=dotted, color=green];
m11_92 -> m11_93  [key=0, style=solid, color=green];
m11_92 -> m11_26  [key=2, style=dotted, color=green];
m11_93 -> m11_86  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid, color=green];
m11_0 -> m11_16  [key=3, color=green, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m11_1 -> m11_2  [key=0, style=solid, color=green];
m11_1 -> m11_5  [key=2, style=dotted, color=green];
m11_2 -> m11_3  [key=0, style=solid, color=green];
m11_2 -> m11_6  [key=2, style=dotted, color=green];
m11_2 -> m11_7  [key=2, style=dotted, color=green];
m11_3 -> m11_4  [key=0, style=solid, color=green];
m11_3 -> m11_8  [key=2, style=dotted, color=green];
m11_4 -> m11_0  [key=0, style=bold, color=blue];
m11_67 -> m11_68  [key=0, style=solid, color=green];
m11_68 -> m11_69  [key=0, style=solid, color=green];
m11_68 -> m11_42  [key=2, style=dotted, color=green];
m11_69 -> m11_70  [key=0, style=solid, color=green];
m11_69 -> m11_22  [key=2, style=dotted, color=green];
m11_70 -> m11_71  [key=0, style=solid, color=green];
m11_70 -> m11_30  [key=2, style=dotted, color=green];
m11_71 -> m11_72  [key=0, style=solid, color=green];
m11_71 -> m11_55  [key=2, style=dotted, color=green];
m11_71 -> m11_73  [key=1, style=dashed, color=green, label=table3];
m11_71 -> m11_74  [key=1, style=dashed, color=green, label=table3];
m11_72 -> m11_73  [key=0, style=solid, color=green];
m11_72 -> m11_56  [key=2, style=dotted, color=green];
m11_73 -> m11_74  [key=0, style=solid, color=green];
m11_73 -> m11_56  [key=2, style=dotted, color=green];
m11_74 -> m11_75  [key=0, style=solid, color=green];
m11_74 -> m11_43  [key=2, style=dotted, color=green];
m11_75 -> m11_76  [key=0, style=solid, color=green];
m11_75 -> m11_44  [key=2, style=dotted, color=green];
m11_76 -> m11_77  [key=0, style=solid, color=green];
m11_76 -> m11_26  [key=2, style=dotted, color=green];
m11_77 -> m11_67  [key=0, style=bold, color=blue];
m11_102 -> m11_103  [key=0, style=solid, color=green];
m11_103 -> m11_104  [key=0, style=solid, color=green];
m11_103 -> m11_42  [key=2, style=dotted, color=green];
m11_104 -> m11_105  [key=0, style=solid, color=green];
m11_104 -> m11_22  [key=2, style=dotted, color=green];
m11_105 -> m11_106  [key=0, style=solid, color=green];
m11_105 -> m11_30  [key=2, style=dotted, color=green];
m11_106 -> m11_107  [key=0, style=solid, color=green];
m11_106 -> m11_43  [key=2, style=dotted, color=green];
m11_107 -> m11_108  [key=0, style=solid, color=green];
m11_107 -> m11_44  [key=2, style=dotted, color=green];
m11_108 -> m11_109  [key=0, style=solid, color=green];
m11_108 -> m11_26  [key=2, style=dotted, color=green];
m11_109 -> m11_102  [key=0, style=bold, color=blue];
m11_110 -> m11_111  [key=0, style=solid, color=green];
m11_111 -> m11_112  [key=0, style=solid, color=green];
m11_111 -> m11_42  [key=2, style=dotted, color=green];
m11_112 -> m11_113  [key=0, style=solid, color=green];
m11_112 -> m11_22  [key=2, style=dotted, color=green];
m11_113 -> m11_114  [key=0, style=solid, color=green];
m11_113 -> m11_30  [key=2, style=dotted, color=green];
m11_114 -> m11_115  [key=0, style=solid, color=green];
m11_114 -> m11_43  [key=2, style=dotted, color=green];
m11_115 -> m11_116  [key=0, style=solid, color=green];
m11_115 -> m11_44  [key=2, style=dotted, color=green];
m11_116 -> m11_117  [key=0, style=solid, color=green];
m11_116 -> m11_26  [key=2, style=dotted, color=green];
m11_117 -> m11_110  [key=0, style=bold, color=blue];
m11_9 -> m11_10  [key=0, style=solid, color=green];
m11_10 -> m11_11  [key=0, style=solid, color=green];
m11_10 -> m11_13  [key=2, style=dotted, color=green];
m11_11 -> m11_12  [key=0, style=solid, color=green];
m11_12 -> m11_9  [key=0, style=bold, color=blue];
m11_14 -> m11_15  [key=0, style=solid, color=green];
m11_15 -> m11_16  [key=0, style=solid, color=green];
m11_15 -> m11_17  [key=0, style=solid, color=green];
m11_16 -> m11_17  [key=0, style=solid, color=green];
m11_16 -> m11_0  [key=2, style=dotted, color=green];
m11_17 -> m11_14  [key=0, style=bold, color=blue];
m11_22 -> m11_23  [key=0, style=solid, color=green];
m11_22 -> m11_35  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m11_22 -> m11_46  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m11_22 -> m11_58  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m11_22 -> m11_68  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m11_22 -> m11_79  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m11_22 -> m11_87  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m11_22 -> m11_95  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m11_22 -> m11_103  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m11_22 -> m11_111  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m11_23 -> m11_24  [key=0, style=solid, color=green];
m11_23 -> m11_25  [key=2, style=dotted, color=green];
m11_24 -> m11_22  [key=0, style=bold, color=blue];
m11_26 -> m11_27  [key=0, style=solid, color=green];
m11_27 -> m11_28  [key=0, style=solid, color=green];
m11_27 -> m11_29  [key=2, style=dotted, color=green];
m11_28 -> m11_26  [key=0, style=bold, color=blue];
m11_118 -> m11_36  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_37  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_40  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_47  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_48  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_53  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_59  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_60  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_65  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_69  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_70  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_76  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_80  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_81  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_84  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_88  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_89  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_92  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_96  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_97  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_100  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_104  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_105  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_108  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_112  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_113  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m11_118 -> m11_116  [key=1, style=dashed, color=green, label="HangFire.Tests.Client.JobClientFeature"];
m12_8 -> m12_9  [key=0, style=solid, color=green];
m12_9 -> m12_10  [key=0, style=solid, color=green];
m12_9 -> m12_17  [key=2, style=dotted, color=green];
m12_9 -> m12_13  [key=1, style=dashed, color=green, label=connection];
m12_10 -> m12_11  [key=0, style=solid, color=green];
m12_10 -> m12_18  [key=2, style=dotted, color=green];
m12_10 -> m12_23  [key=1, style=dashed, color=green, label="lambda expression"];
m12_10 -> m12_13  [key=1, style=dashed, color=green, label=job];
m12_13 -> m12_14  [key=0, style=solid, color=green];
m12_13 -> m12_21  [key=2, style=dotted, color=green];
m12_11 -> m12_13  [key=1, style=dashed, color=green, label=state];
m12_11 -> m12_12  [key=0, style=solid, color=green];
m12_11 -> m12_19  [key=2, style=dotted, color=green];
m12_12 -> m12_13  [key=0, style=solid, color=green];
m12_12 -> m12_20  [key=2, style=dotted, color=green];
m12_14 -> m12_15  [key=0, style=solid, color=green];
m12_14 -> m12_7  [key=2, style=dotted, color=green];
m12_15 -> m12_16  [key=0, style=solid, color=green];
m12_15 -> m12_22  [key=2, style=dotted, color=green];
m12_16 -> m12_8  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid, color=green];
m12_1 -> m12_2  [key=0, style=solid, color=green];
m12_1 -> m12_3  [key=2, style=dotted, color=green];
m12_1 -> m12_4  [key=1, style=dashed, color=green, label="lambda expression"];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_26 -> m12_27  [key=0, style=solid];
m12_27 -> m12_26  [key=0, style=bold, color=blue];
m12_23 -> m12_24  [key=0, style=solid, color=green];
m12_4 -> m12_5  [key=0, style=solid, color=green];
m12_5 -> m12_6  [key=0, style=solid, color=green];
m12_5 -> m12_7  [key=2, style=dotted, color=green];
m12_6 -> m12_4  [key=0, style=bold, color=blue];
m12_24 -> m12_25  [key=0, style=solid, color=green];
m12_24 -> m12_26  [key=2, style=dotted, color=green];
m12_25 -> m12_23  [key=0, style=bold, color=blue];
m13_55 -> m13_56  [key=0, style=solid];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_39  [key=2, style=dotted];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_22  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_40  [key=2, style=dotted];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_41  [key=2, style=dotted];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_42  [key=2, style=dotted];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_43  [key=2, style=dotted];
m13_62 -> m13_63  [key=0, style=solid];
m13_62 -> m13_26  [key=2, style=dotted];
m13_63 -> m13_55  [key=0, style=bold, color=blue];
m13_26 -> m13_27  [key=0, style=solid];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_29  [key=2, style=dotted];
m13_28 -> m13_26  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_16  [key=3, color=red, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_5  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_6  [key=2, style=dotted];
m13_2 -> m13_7  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_8  [key=2, style=dotted];
m13_4 -> m13_0  [key=0, style=bold, color=blue];
m13_76 -> m13_77  [key=0, style=solid];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_39  [key=2, style=dotted];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_22  [key=2, style=dotted];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_40  [key=2, style=dotted];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_41  [key=2, style=dotted];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_42  [key=2, style=dotted];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_43  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_26  [key=2, style=dotted];
m13_84 -> m13_76  [key=0, style=bold, color=blue];
m13_30 -> m13_31  [key=0, style=solid];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_39  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_22  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_40  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_41  [key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_42  [key=2, style=dotted];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_43  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_26  [key=2, style=dotted];
m13_38 -> m13_30  [key=0, style=bold, color=blue];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_13  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_12 -> m13_9  [key=0, style=bold, color=blue];
m13_44 -> m13_45  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_39  [key=2, style=dotted];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_22  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_40  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_41  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_42  [key=2, style=dotted];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_43  [key=2, style=dotted];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_54  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_26  [key=2, style=dotted];
m13_53 -> m13_44  [key=0, style=bold, color=blue];
m13_64 -> m13_65  [key=0, style=solid];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_39  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_22  [key=2, style=dotted];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_40  [key=2, style=dotted];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_41  [key=2, style=dotted];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_41  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_42  [key=2, style=dotted];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_43  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_42  [key=2, style=dotted];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_43  [key=2, style=dotted];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_26  [key=2, style=dotted];
m13_75 -> m13_64  [key=0, style=bold, color=blue];
m13_85 -> m13_86  [key=0, style=solid];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_39  [key=2, style=dotted];
m13_87 -> m13_88  [key=0, style=solid];
m13_87 -> m13_22  [key=2, style=dotted];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_40  [key=2, style=dotted];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_41  [key=2, style=dotted];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_42  [key=2, style=dotted];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_43  [key=2, style=dotted];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_26  [key=2, style=dotted];
m13_93 -> m13_85  [key=0, style=bold, color=blue];
m13_14 -> m13_15  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid, color=red];
m13_15 -> m13_17  [key=0, style=solid];
m13_16 -> m13_17  [key=0, style=solid, color=red];
m13_16 -> m13_0  [key=2, style=dotted, color=red];
m13_17 -> m13_14  [key=0, style=bold, color=blue];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_21  [key=2, style=dotted];
m13_20 -> m13_18  [key=0, style=bold, color=blue];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_31  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m13_22 -> m13_45  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m13_22 -> m13_56  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m13_22 -> m13_65  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m13_22 -> m13_77  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m13_22 -> m13_86  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_25  [key=2, style=dotted];
m13_24 -> m13_22  [key=0, style=bold, color=blue];
m13_94 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m13_94 -> m13_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [key=1, style=dashed, color=red, label="HangFire.Storage.IWriteOnlyTransaction"];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=0, style=solid, color=red];
m14_3 -> m14_4  [key=0, style=solid, color=red];
m14_2 -> m14_4  [key=0, style=solid];
m14_2 -> m14_5  [key=2, style=dotted];
m14_4 -> m14_0  [key=0, style=bold, color=blue];
m14_6 -> m14_3  [key=1, style=dashed, color=red, label="HangFire.Common.States.StateApplyingContext"];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m16_50 -> m16_51  [key=0, style=solid];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_40  [key=2, style=dotted];
m16_51 -> m16_149  [key=0, style=solid];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_41  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_42  [key=2, style=dotted];
m16_53 -> m16_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_54 -> m16_50  [key=0, style=bold, color=blue];
m16_54 -> m16_96  [key=0, style=solid];
m16_54 -> m16_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m16_54 -> m16_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m16_54 -> m16_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m16_54 -> m16_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m16_92 -> m16_104  [key=0, style=solid];
m16_92 -> m16_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m16_92 -> m16_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m16_104 -> m16_105  [key=0, style=solid];
m16_104 -> m16_55  [key=2, style=dotted];
m16_104 -> m16_107  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_56  [key=2, style=dotted];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_57  [key=2, style=dotted];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_59  [key=2, style=dotted];
m16_108 -> m16_92  [key=0, style=bold, color=blue];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_16  [key=2, style=dotted];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_26  [key=2, style=dotted];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_7  [key=2, style=dotted];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_8  [key=2, style=dotted];
m16_2 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>"];
m16_2 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m16_2 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m16_2 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m16_2 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_9  [key=2, style=dotted];
m16_3 -> m16_5  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_10  [key=2, style=dotted];
m16_4 -> m16_13  [key=0, style=solid];
m16_4 -> m16_14  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_11  [key=2, style=dotted];
m16_5 -> m16_12  [key=2, style=dotted];
m16_5 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_5 -> m16_7  [key=0, style=solid];
m16_6 -> m16_0  [key=0, style=bold, color=blue];
m16_6 -> m16_13  [key=0, style=solid];
m16_6 -> m16_14  [key=2, style=dotted];
m16_22 -> m16_23  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_15  [key=2, style=dotted];
m16_8 -> m16_16  [key=2, style=dotted];
m16_17 -> m16_153  [key=0, style=solid];
m16_17 -> m16_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m16_17 -> m16_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m16_17 -> m16_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m16_17 -> m16_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m16_17 -> m16_18  [key=0, style=solid];
m16_153 -> m16_154  [key=0, style=solid];
m16_153 -> m16_155  [key=0, style=solid];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_157  [key=0, style=solid];
m16_155 -> m16_123  [key=2, style=dotted];
m16_157 -> m16_158  [key=0, style=solid];
m16_157 -> m16_159  [key=0, style=solid];
m16_157 -> m16_124  [key=2, style=dotted];
m16_158 -> m16_159  [key=0, style=solid];
m16_158 -> m16_161  [key=2, style=dotted];
m16_158 -> m16_162  [key=2, style=dotted];
m16_159 -> m16_160  [key=0, style=solid];
m16_159 -> m16_163  [key=2, style=dotted];
m16_154 -> m16_160  [key=0, style=solid];
m16_154 -> m16_14  [key=2, style=dotted];
m16_156 -> m16_160  [key=0, style=solid];
m16_156 -> m16_14  [key=2, style=dotted];
m16_160 -> m16_17  [key=0, style=bold, color=blue];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_49  [key=2, style=dotted];
m16_34 -> m16_50  [key=2, style=dotted];
m16_34 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m16_34 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m16_34 -> m16_44  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_40  [key=2, style=dotted];
m16_35 -> m16_51  [key=2, style=dotted];
m16_35 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m16_35 -> m16_41  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_41  [key=2, style=dotted];
m16_36 -> m16_52  [key=2, style=dotted];
m16_36 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label=context];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_42  [key=2, style=dotted];
m16_37 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_37 -> m16_53  [key=2, style=dotted];
m16_37 -> m16_41  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_42  [key=2, style=dotted];
m16_38 -> m16_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_38 -> m16_54  [key=2, style=dotted];
m16_39 -> m16_34  [key=0, style=bold, color=blue];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_55  [key=2, style=dotted];
m16_39 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_39 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_10 -> m16_9  [key=0, style=solid];
m16_10 -> m16_17  [key=2, style=dotted];
m16_55 -> m16_56  [key=0, style=solid];
m16_25 -> m16_23  [key=0, style=bold, color=blue];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m16_26 -> m16_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m16_26 -> m16_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m16_26 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m16_26 -> m16_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m16_26 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m16_26 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m16_27 -> m16_28  [key=0, style=solid, color=green];
m16_27 -> m16_29  [key=0, style=solid];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_31  [key=0, style=solid];
m16_29 -> m16_22  [key=2, style=dotted];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_33  [key=0, style=solid];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_46  [key=2, style=dotted];
m16_33 -> m16_47  [key=2, style=dotted];
m16_33 -> m16_21  [key=2, style=dotted];
m16_33 -> m16_48  [key=2, style=dotted];
m16_33 -> m16_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_33 -> m16_31  [key=0, style=bold, color=blue];
m16_28 -> m16_45  [key=0, style=solid];
m16_28 -> m16_14  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid, color=green];
m16_28 -> m16_21  [key=2, style=dotted, color=green];
m16_28 -> m16_31  [key=1, style=dashed, color=green, label="lambda expression"];
m16_30 -> m16_45  [key=0, style=solid];
m16_30 -> m16_14  [key=2, style=dotted];
m16_30 -> m16_27  [key=0, style=bold, color=blue];
m16_32 -> m16_45  [key=0, style=solid];
m16_32 -> m16_14  [key=2, style=dotted];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_26  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_58  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_16  [key=2, style=dotted];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_57  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_56  [key=2, style=dotted];
m16_40 -> m16_59  [key=0, style=solid];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_59  [key=2, style=dotted];
m16_45 -> m16_26  [key=0, style=bold, color=blue];
m16_45 -> m16_43  [key=0, style=bold, color=blue];
m16_15 -> m16_13  [key=0, style=bold, color=blue];
m16_7 -> m16_8  [key=0, style=solid];
m16_60 -> m16_40  [key=0, style=bold, color=blue];
m16_60 -> m16_61  [key=0, style=solid];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_13  [key=0, style=solid];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_58  [key=2, style=dotted];
m16_129 -> m16_135  [key=0, style=solid];
m16_129 -> m16_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m16_129 -> m16_138  [key=1, style=dashed, color=darkseagreen4, label=bool];
m16_129 -> m16_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IWriteOnlyTransaction"];
m16_129 -> m16_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m16_129 -> m16_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IWriteOnlyTransaction"];
m16_135 -> m16_136  [key=0, style=solid];
m16_135 -> m16_144  [key=2, style=dotted];
m16_135 -> m16_127  [key=2, style=dotted];
m16_135 -> m16_137  [key=1, style=dashed, color=darkseagreen4, label=properties];
m16_135 -> m16_139  [key=1, style=dashed, color=darkseagreen4, label=properties];
m16_135 -> m16_140  [key=1, style=dashed, color=darkseagreen4, label=properties];
m16_135 -> m16_141  [key=1, style=dashed, color=darkseagreen4, label=properties];
m16_135 -> m16_142  [key=1, style=dashed, color=darkseagreen4, label=properties];
m16_137 -> m16_138  [key=0, style=solid];
m16_137 -> m16_145  [key=2, style=dotted];
m16_138 -> m16_139  [key=0, style=solid];
m16_138 -> m16_140  [key=0, style=solid];
m16_139 -> m16_140  [key=0, style=solid];
m16_139 -> m16_146  [key=2, style=dotted];
m16_140 -> m16_141  [key=0, style=solid];
m16_140 -> m16_145  [key=2, style=dotted];
m16_142 -> m16_143  [key=0, style=solid];
m16_142 -> m16_148  [key=2, style=dotted];
m16_136 -> m16_137  [key=0, style=solid];
m16_136 -> m16_141  [key=1, style=dashed, color=darkseagreen4, label=now];
m16_141 -> m16_142  [key=0, style=solid];
m16_141 -> m16_147  [key=2, style=dotted];
m16_141 -> m16_145  [key=2, style=dotted];
m16_143 -> m16_129  [key=0, style=bold, color=blue];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_11  [key=0, style=solid];
m16_48 -> m16_46  [key=0, style=bold, color=blue];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_25  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_21  [key=2, style=dotted];
m16_19 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_21  [key=2, style=dotted];
m16_18 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_20 -> m16_18  [key=0, style=bold, color=blue];
m16_20 -> m16_17  [key=0, style=bold, color=blue];
m16_24 -> m16_22  [key=0, style=bold, color=blue];
m16_24 -> m16_26  [key=2, style=dotted];
m16_24 -> m16_25  [key=0, style=solid];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_28  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_61 -> m16_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts"];
m16_62 -> m16_60  [key=0, style=bold, color=blue];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_2  [key=0, style=bold, color=blue];
m16_46 -> m16_47  [key=0, style=solid];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_49  [key=2, style=dotted];
m16_57 -> m16_55  [key=0, style=bold, color=blue];
m16_57 -> m16_109  [key=0, style=solid];
m16_57 -> m16_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_57 -> m16_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_57 -> m16_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m16_57 -> m16_113  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m16_57 -> m16_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m16_57 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m16_57 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m16_57 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m16_57 -> m16_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m16_57 -> m16_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m16_57 -> m16_120  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m16_57 -> m16_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_101  [key=0, style=solid];
m16_96 -> m16_98  [key=1, style=dashed, color=darkseagreen4, label=filter];
m16_97 -> m16_98  [key=0, style=solid];
m16_97 -> m16_99  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m16_97 -> m16_100  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m16_98 -> m16_99  [key=0, style=solid];
m16_98 -> m16_102  [key=2, style=dotted];
m16_99 -> m16_100  [key=0, style=solid];
m16_99 -> m16_96  [key=0, style=solid];
m16_100 -> m16_96  [key=0, style=solid];
m16_100 -> m16_103  [key=2, style=dotted];
m16_101 -> m16_54  [key=0, style=bold, color=blue];
m16_109 -> m16_110  [key=0, style=solid];
m16_109 -> m16_115  [key=0, style=solid];
m16_109 -> m16_123  [key=2, style=dotted];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_113  [key=0, style=solid];
m16_110 -> m16_124  [key=2, style=dotted];
m16_111 -> m16_112  [key=0, style=solid];
m16_111 -> m16_113  [key=0, style=solid];
m16_112 -> m16_111  [key=0, style=solid];
m16_112 -> m16_125  [key=2, style=dotted];
m16_113 -> m16_114  [key=0, style=solid];
m16_113 -> m16_115  [key=0, style=solid];
m16_114 -> m16_113  [key=0, style=solid];
m16_114 -> m16_126  [key=2, style=dotted];
m16_115 -> m16_116  [key=0, style=solid];
m16_115 -> m16_119  [key=0, style=solid];
m16_115 -> m16_124  [key=2, style=dotted];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_127  [key=2, style=dotted];
m16_116 -> m16_118  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m16_117 -> m16_118  [key=0, style=solid];
m16_117 -> m16_119  [key=0, style=solid];
m16_118 -> m16_117  [key=0, style=solid];
m16_118 -> m16_128  [key=2, style=dotted];
m16_119 -> m16_120  [key=0, style=solid];
m16_119 -> m16_129  [key=2, style=dotted];
m16_120 -> m16_121  [key=0, style=solid];
m16_120 -> m16_122  [key=0, style=solid];
m16_121 -> m16_120  [key=0, style=solid];
m16_121 -> m16_130  [key=2, style=dotted];
m16_122 -> m16_57  [key=0, style=bold, color=blue];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m16_63 -> m16_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_63 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_63 -> m16_73  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m16_63 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_63 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m16_63 -> m16_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_66  [key=0, style=solid];
m16_64 -> m16_87  [key=2, style=dotted];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_68  [key=0, style=solid];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_88  [key=2, style=dotted];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_89  [key=2, style=dotted];
m16_69 -> m16_72  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m16_69 -> m16_75  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m16_73 -> m16_74  [key=0, style=solid];
m16_73 -> m16_75  [key=0, style=solid];
m16_73 -> m16_90  [key=2, style=dotted];
m16_77 -> m16_78  [key=0, style=solid];
m16_77 -> m16_52  [key=2, style=dotted];
m16_78 -> m16_79  [key=0, style=solid];
m16_78 -> m16_53  [key=2, style=dotted];
m16_78 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m16_82 -> m16_83  [key=0, style=solid];
m16_82 -> m16_53  [key=2, style=dotted];
m16_82 -> m16_52  [key=2, style=dotted];
m16_82 -> m16_93  [key=2, style=dotted];
m16_82 -> d17  [key=2, style=dotted];
m16_65 -> m16_86  [key=0, style=solid];
m16_65 -> m16_14  [key=2, style=dotted];
m16_67 -> m16_86  [key=0, style=solid];
m16_67 -> m16_14  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_72  [key=0, style=solid];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m16_72 -> m16_82  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_91  [key=2, style=dotted];
m16_75 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label=jobMethod];
m16_71 -> m16_86  [key=0, style=solid];
m16_74 -> m16_86  [key=0, style=solid];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_51  [key=2, style=dotted];
m16_76 -> m16_79  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m16_76 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_54  [key=2, style=dotted];
m16_80 -> m16_86  [key=0, style=solid];
m16_80 -> m16_92  [key=2, style=dotted];
m16_81 -> m16_82  [key=0, style=solid];
m16_83 -> m16_86  [key=0, style=solid];
m16_83 -> m16_95  [key=2, style=dotted];
m16_83 -> m16_92  [key=2, style=dotted];
m16_84 -> m16_85  [key=0, style=solid];
m16_85 -> m16_86  [key=0, style=solid];
m16_86 -> m16_63  [key=0, style=bold, color=blue];
m16_149 -> m16_150  [key=0, style=solid];
m16_149 -> m16_151  [key=2, style=dotted];
m16_149 -> m16_152  [key=2, style=dotted];
m16_150 -> m16_51  [key=0, style=bold, color=blue];
m16_12 -> m16_13  [key=0, style=solid];
m16_103 -> m16_131  [key=0, style=solid];
m16_103 -> m16_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateContext"];
m16_131 -> m16_132  [key=0, style=solid];
m16_131 -> m16_55  [key=2, style=dotted];
m16_131 -> m16_133  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_132 -> m16_133  [key=0, style=solid];
m16_132 -> m16_129  [key=2, style=dotted];
m16_133 -> m16_134  [key=0, style=solid];
m16_133 -> m16_59  [key=2, style=dotted];
m16_134 -> m16_103  [key=0, style=bold, color=blue];
m16_164 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_164 -> m16_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m16_165 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m17_26 -> m17_27  [key=0, style=solid, color=green];
m17_26 -> m17_23  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan delay"];
m17_26 -> m17_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m17_26 -> m17_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m17_27 -> m17_28  [key=0, style=solid, color=green];
m17_27 -> m17_29  [key=2, style=dotted, color=green];
m17_28 -> m17_26  [key=0, style=bold, color=blue];
m17_21 -> m17_39  [key=0, style=solid];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_41  [key=2, style=dotted];
m17_39 -> m17_42  [key=2, style=dotted];
m17_40 -> m17_21  [key=0, style=bold, color=blue];
m17_3 -> m17_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m17_4 -> m17_6  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_5 -> m17_3  [key=0, style=bold, color=blue];
m17_6 -> m17_10  [key=0, style=solid, color=green];
m17_6 -> m17_13  [key=1, style=dashed, color=green, label="System.Type"];
m17_6 -> m17_15  [key=1, style=dashed, color=green, label="System.Type"];
m17_6 -> m17_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m17_6 -> m17_3  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m17_6 -> m17_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m17_10 -> m17_11  [key=0, style=solid, color=green];
m17_10 -> m17_12  [key=0, style=solid, color=green];
m17_11 -> m17_16  [key=0, style=solid, color=green];
m17_11 -> m17_17  [key=2, style=dotted, color=green];
m17_12 -> m17_13  [key=0, style=solid, color=green];
m17_12 -> m17_15  [key=1, style=dashed, color=green, label=client];
m17_12 -> m17_18  [key=2, style=dotted, color=green];
m17_13 -> m17_14  [key=0, style=solid, color=green];
m17_13 -> m17_19  [key=2, style=dotted, color=green];
m17_14 -> m17_15  [key=0, style=solid, color=green];
m17_14 -> m17_20  [key=2, style=dotted];
m17_15 -> m17_16  [key=0, style=solid, color=green];
m17_15 -> m17_21  [key=2, style=dotted, color=green];
m17_15 -> m17_22  [key=2, style=dotted, color=green];
m17_16 -> m17_6  [key=0, style=bold, color=blue];
m17_30 -> m17_31  [key=0, style=solid, color=green];
m17_30 -> m17_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m17_31 -> m17_32  [key=0, style=solid, color=green];
m17_31 -> m17_29  [key=2, style=dotted, color=green];
m17_32 -> m17_30  [key=0, style=bold, color=blue];
m17_0 -> m17_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_3  [key=2, style=dotted];
m17_1 -> m17_2  [key=0, style=solid];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_7 -> m17_8  [key=0, style=solid, color=green];
m17_7 -> m17_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m17_8 -> m17_9  [key=0, style=solid, color=green];
m17_8 -> m17_6  [key=2, style=dotted, color=green];
m17_9 -> m17_7  [key=0, style=bold, color=blue];
m17_29 -> m17_33  [key=0, style=solid, color=green];
m17_29 -> m17_34  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m17_29 -> m17_35  [key=1, style=dashed, color=green, label="System.Type"];
m17_29 -> m17_26  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m17_29 -> m17_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m17_29 -> m17_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m17_33 -> m17_34  [key=0, style=solid, color=green];
m17_33 -> m17_18  [key=2, style=dotted, color=green];
m17_33 -> m17_35  [key=1, style=dashed, color=green, label=client];
m17_34 -> m17_35  [key=0, style=solid, color=green];
m17_34 -> m17_37  [key=2, style=dotted, color=green];
m17_34 -> m17_38  [key=2, style=dotted, color=green];
m17_35 -> m17_36  [key=0, style=solid, color=green];
m17_35 -> m17_21  [key=2, style=dotted, color=green];
m17_35 -> m17_22  [key=2, style=dotted, color=green];
m17_36 -> m17_29  [key=0, style=bold, color=blue];
m17_23 -> m17_24  [key=0, style=solid, color=green];
m17_23 -> m17_26  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m17_24 -> m17_25  [key=0, style=solid, color=green];
m17_24 -> m17_26  [key=2, style=dotted, color=green];
m17_25 -> m17_23  [key=0, style=bold, color=blue];
m18_48 -> m18_49  [key=0, style=solid, color=red];
m18_49 -> m18_50  [key=0, style=solid, color=red];
m18_49 -> m18_53  [key=2, style=dotted, color=red];
m18_50 -> m18_51  [key=0, style=solid, color=red];
m18_50 -> m18_14  [key=2, style=dotted, color=red];
m18_50 -> m18_54  [key=1, style=dashed, color=red, label="lambda expression"];
m18_51 -> m18_52  [key=0, style=solid, color=red];
m18_51 -> m18_14  [key=2, style=dotted, color=red];
m18_51 -> m18_60  [key=1, style=dashed, color=red, label="lambda expression"];
m18_52 -> m18_48  [key=0, style=bold, color=blue];
m18_133 -> m18_134  [key=0, style=solid, color=red];
m18_134 -> m18_135  [key=0, style=solid, color=red];
m18_134 -> m18_80  [key=2, style=dotted, color=red];
m18_134 -> m18_138  [key=2, style=dotted, color=red];
m18_135 -> m18_136  [key=0, style=solid, color=red];
m18_135 -> m18_14  [key=2, style=dotted, color=red];
m18_135 -> m18_139  [key=1, style=dashed, color=red, label="lambda expression"];
m18_136 -> m18_137  [key=0, style=solid, color=red];
m18_136 -> m18_14  [key=2, style=dotted, color=red];
m18_136 -> m18_142  [key=1, style=dashed, color=red, label="lambda expression"];
m18_137 -> m18_133  [key=0, style=bold, color=blue];
m18_63 -> m18_64  [key=0, style=solid, color=red];
m18_64 -> m18_65  [key=0, style=solid, color=red];
m18_64 -> m18_68  [key=2, style=dotted, color=red];
m18_65 -> m18_66  [key=0, style=solid, color=red];
m18_65 -> m18_14  [key=2, style=dotted, color=red];
m18_65 -> m18_69  [key=1, style=dashed, color=red, label="lambda expression"];
m18_66 -> m18_67  [key=0, style=solid, color=red];
m18_66 -> m18_14  [key=2, style=dotted, color=red];
m18_66 -> m18_72  [key=1, style=dashed, color=red, label="lambda expression"];
m18_67 -> m18_63  [key=0, style=bold, color=blue];
m18_95 -> m18_96  [key=0, style=solid, color=red];
m18_96 -> m18_97  [key=0, style=solid, color=red];
m18_96 -> m18_80  [key=2, style=dotted, color=red];
m18_96 -> m18_100  [key=2, style=dotted, color=red];
m18_97 -> m18_98  [key=0, style=solid, color=red];
m18_97 -> m18_14  [key=2, style=dotted, color=red];
m18_97 -> m18_101  [key=1, style=dashed, color=red, label="lambda expression"];
m18_98 -> m18_99  [key=0, style=solid, color=red];
m18_98 -> m18_14  [key=2, style=dotted, color=red];
m18_98 -> m18_104  [key=1, style=dashed, color=red, label="lambda expression"];
m18_99 -> m18_95  [key=0, style=bold, color=blue];
m18_114 -> m18_173  [key=0, style=solid, color=red];
m18_173 -> m18_174  [key=0, style=solid, color=red];
m18_173 -> m18_21  [key=2, style=dotted, color=red];
m18_173 -> m18_175  [key=1, style=dashed, color=red, label="lambda expression"];
m18_174 -> m18_114  [key=0, style=bold, color=blue];
m18_118 -> m18_119  [key=0, style=solid, color=red];
m18_119 -> m18_120  [key=0, style=solid, color=red];
m18_119 -> m18_80  [key=2, style=dotted, color=red];
m18_119 -> m18_123  [key=2, style=dotted, color=red];
m18_120 -> m18_121  [key=0, style=solid, color=red];
m18_120 -> m18_14  [key=2, style=dotted, color=red];
m18_120 -> m18_124  [key=1, style=dashed, color=red, label="lambda expression"];
m18_121 -> m18_122  [key=0, style=solid, color=red];
m18_121 -> m18_14  [key=2, style=dotted, color=red];
m18_121 -> m18_130  [key=1, style=dashed, color=red, label="lambda expression"];
m18_122 -> m18_118  [key=0, style=bold, color=blue];
m18_30 -> m18_31  [key=0, style=solid, color=red];
m18_31 -> m18_32  [key=0, style=solid, color=red];
m18_31 -> m18_13  [key=2, style=dotted, color=red];
m18_32 -> m18_30  [key=0, style=bold, color=blue];
m18_107 -> m18_108  [key=0, style=solid, color=red];
m18_108 -> m18_109  [key=0, style=solid, color=red];
m18_108 -> m18_80  [key=2, style=dotted, color=red];
m18_108 -> m18_81  [key=2, style=dotted, color=red];
m18_109 -> m18_110  [key=0, style=solid, color=red];
m18_109 -> m18_14  [key=2, style=dotted, color=red];
m18_109 -> m18_111  [key=1, style=dashed, color=red, label="lambda expression"];
m18_110 -> m18_107  [key=0, style=bold, color=blue];
m18_20 -> m18_162  [key=0, style=solid, color=red];
m18_162 -> m18_163  [key=0, style=solid, color=red];
m18_162 -> m18_21  [key=2, style=dotted, color=red];
m18_162 -> m18_164  [key=1, style=dashed, color=red, label="lambda expression"];
m18_163 -> m18_20  [key=0, style=bold, color=blue];
m18_8 -> m18_9  [key=0, style=solid, color=red];
m18_9 -> m18_10  [key=0, style=solid, color=red];
m18_9 -> m18_13  [key=2, style=dotted, color=red];
m18_10 -> m18_11  [key=0, style=solid, color=red];
m18_10 -> m18_14  [key=2, style=dotted, color=red];
m18_10 -> m18_15  [key=1, style=dashed, color=red, label="lambda expression"];
m18_11 -> m18_12  [key=0, style=solid, color=red];
m18_11 -> m18_14  [key=2, style=dotted, color=red];
m18_11 -> m18_26  [key=1, style=dashed, color=red, label="lambda expression"];
m18_12 -> m18_8  [key=0, style=bold, color=blue];
m18_19 -> m18_157  [key=0, style=solid, color=red];
m18_157 -> m18_158  [key=0, style=solid, color=red];
m18_157 -> m18_21  [key=2, style=dotted, color=red];
m18_157 -> m18_159  [key=1, style=dashed, color=red, label="lambda expression"];
m18_158 -> m18_19  [key=0, style=bold, color=blue];
m18_45 -> m18_46  [key=0, style=solid, color=red];
m18_46 -> m18_47  [key=0, style=solid, color=red];
m18_46 -> m18_38  [key=2, style=dotted, color=red];
m18_47 -> m18_45  [key=0, style=bold, color=blue];
m18_115 -> m18_116  [key=0, style=solid, color=red];
m18_116 -> m18_117  [key=0, style=solid, color=red];
m18_116 -> m18_80  [key=2, style=dotted, color=red];
m18_116 -> m18_100  [key=2, style=dotted, color=red];
m18_117 -> m18_115  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid, color=red];
m18_1 -> m18_2  [key=0, style=solid, color=red];
m18_1 -> m18_4  [key=2, style=dotted, color=red];
m18_2 -> m18_3  [key=0, style=solid, color=red];
m18_3 -> m18_0  [key=0, style=bold, color=blue];
m18_175 -> m18_176  [key=0, style=solid, color=red];
m18_5 -> m18_6  [key=0, style=solid, color=red];
m18_6 -> m18_7  [key=0, style=solid, color=red];
m18_7 -> m18_5  [key=0, style=bold, color=blue];
m18_15 -> m18_16  [key=0, style=solid, color=red];
m18_26 -> m18_27  [key=0, style=solid, color=red];
m18_16 -> m18_17  [key=0, style=solid, color=red];
m18_16 -> m18_18  [key=2, style=dotted, color=red];
m18_16 -> m18_19  [key=2, style=dotted, color=red];
m18_16 -> m18_20  [key=2, style=dotted, color=red];
m18_16 -> m18_21  [key=2, style=dotted, color=red];
m18_16 -> m18_22  [key=2, style=dotted, color=red];
m18_16 -> m18_23  [key=1, style=dashed, color=red, label="lambda expression"];
m18_17 -> m18_15  [key=0, style=bold, color=blue];
m18_23 -> m18_24  [key=0, style=solid, color=red];
m18_24 -> m18_25  [key=0, style=solid, color=red];
m18_25 -> m18_23  [key=0, style=bold, color=blue];
m18_27 -> m18_28  [key=0, style=solid, color=red];
m18_27 -> m18_29  [key=2, style=dotted, color=red];
m18_28 -> m18_26  [key=0, style=bold, color=blue];
m18_39 -> m18_40  [key=0, style=solid, color=red];
m18_42 -> m18_43  [key=0, style=solid, color=red];
m18_40 -> m18_41  [key=0, style=solid, color=red];
m18_40 -> m18_18  [key=2, style=dotted, color=red];
m18_40 -> m18_19  [key=2, style=dotted, color=red];
m18_40 -> m18_20  [key=2, style=dotted, color=red];
m18_40 -> m18_21  [key=2, style=dotted, color=red];
m18_40 -> m18_22  [key=2, style=dotted, color=red];
m18_41 -> m18_39  [key=0, style=bold, color=blue];
m18_43 -> m18_44  [key=0, style=solid, color=red];
m18_43 -> m18_29  [key=2, style=dotted, color=red];
m18_44 -> m18_42  [key=0, style=bold, color=blue];
m18_54 -> m18_55  [key=0, style=solid, color=red];
m18_60 -> m18_61  [key=0, style=solid, color=red];
m18_55 -> m18_56  [key=0, style=solid, color=red];
m18_55 -> m18_18  [key=2, style=dotted, color=red];
m18_55 -> m18_19  [key=2, style=dotted, color=red];
m18_55 -> m18_20  [key=2, style=dotted, color=red];
m18_55 -> m18_21  [key=2, style=dotted, color=red];
m18_55 -> m18_22  [key=2, style=dotted, color=red];
m18_55 -> m18_57  [key=1, style=dashed, color=red, label="lambda expression"];
m18_56 -> m18_54  [key=0, style=bold, color=blue];
m18_57 -> m18_58  [key=0, style=solid, color=red];
m18_58 -> m18_59  [key=0, style=solid, color=red];
m18_59 -> m18_57  [key=0, style=bold, color=blue];
m18_61 -> m18_62  [key=0, style=solid, color=red];
m18_61 -> m18_29  [key=2, style=dotted, color=red];
m18_62 -> m18_60  [key=0, style=bold, color=blue];
m18_69 -> m18_70  [key=0, style=solid, color=red];
m18_72 -> m18_73  [key=0, style=solid, color=red];
m18_70 -> m18_71  [key=0, style=solid, color=red];
m18_70 -> m18_18  [key=2, style=dotted, color=red];
m18_70 -> m18_19  [key=2, style=dotted, color=red];
m18_70 -> m18_20  [key=2, style=dotted, color=red];
m18_70 -> m18_21  [key=2, style=dotted, color=red];
m18_70 -> m18_22  [key=2, style=dotted, color=red];
m18_71 -> m18_69  [key=0, style=bold, color=blue];
m18_73 -> m18_74  [key=0, style=solid, color=red];
m18_73 -> m18_29  [key=2, style=dotted, color=red];
m18_74 -> m18_72  [key=0, style=bold, color=blue];
m18_82 -> m18_83  [key=0, style=solid, color=red];
m18_89 -> m18_90  [key=0, style=solid, color=red];
m18_83 -> m18_84  [key=0, style=solid, color=red];
m18_83 -> m18_18  [key=2, style=dotted, color=red];
m18_83 -> m18_19  [key=2, style=dotted, color=red];
m18_83 -> m18_85  [key=2, style=dotted, color=red];
m18_83 -> m18_21  [key=2, style=dotted, color=red];
m18_83 -> m18_22  [key=2, style=dotted, color=red];
m18_83 -> m18_86  [key=1, style=dashed, color=red, label="lambda expression"];
m18_84 -> m18_82  [key=0, style=bold, color=blue];
m18_86 -> m18_87  [key=0, style=solid, color=red];
m18_87 -> m18_88  [key=0, style=solid, color=red];
m18_88 -> m18_86  [key=0, style=bold, color=blue];
m18_90 -> m18_91  [key=0, style=solid, color=red];
m18_90 -> m18_29  [key=2, style=dotted, color=red];
m18_91 -> m18_89  [key=0, style=bold, color=blue];
m18_101 -> m18_102  [key=0, style=solid, color=red];
m18_104 -> m18_105  [key=0, style=solid, color=red];
m18_102 -> m18_103  [key=0, style=solid, color=red];
m18_102 -> m18_18  [key=2, style=dotted, color=red];
m18_102 -> m18_19  [key=2, style=dotted, color=red];
m18_102 -> m18_85  [key=2, style=dotted, color=red];
m18_102 -> m18_21  [key=2, style=dotted, color=red];
m18_102 -> m18_22  [key=2, style=dotted, color=red];
m18_103 -> m18_101  [key=0, style=bold, color=blue];
m18_105 -> m18_106  [key=0, style=solid, color=red];
m18_105 -> m18_29  [key=2, style=dotted, color=red];
m18_106 -> m18_104  [key=0, style=bold, color=blue];
m18_111 -> m18_112  [key=0, style=solid, color=red];
m18_112 -> m18_113  [key=0, style=solid, color=red];
m18_112 -> m18_21  [key=2, style=dotted, color=red];
m18_112 -> m18_114  [key=2, style=dotted, color=red];
m18_112 -> m18_22  [key=2, style=dotted, color=red];
m18_113 -> m18_111  [key=0, style=bold, color=blue];
m18_124 -> m18_125  [key=0, style=solid, color=red];
m18_130 -> m18_131  [key=0, style=solid, color=red];
m18_125 -> m18_126  [key=0, style=solid, color=red];
m18_125 -> m18_18  [key=2, style=dotted, color=red];
m18_125 -> m18_19  [key=2, style=dotted, color=red];
m18_125 -> m18_85  [key=2, style=dotted, color=red];
m18_125 -> m18_21  [key=2, style=dotted, color=red];
m18_125 -> m18_22  [key=2, style=dotted, color=red];
m18_125 -> m18_127  [key=1, style=dashed, color=red, label="lambda expression"];
m18_126 -> m18_124  [key=0, style=bold, color=blue];
m18_127 -> m18_128  [key=0, style=solid, color=red];
m18_128 -> m18_129  [key=0, style=solid, color=red];
m18_129 -> m18_127  [key=0, style=bold, color=blue];
m18_131 -> m18_132  [key=0, style=solid, color=red];
m18_131 -> m18_29  [key=2, style=dotted, color=red];
m18_132 -> m18_130  [key=0, style=bold, color=blue];
m18_139 -> m18_140  [key=0, style=solid, color=red];
m18_142 -> m18_143  [key=0, style=solid, color=red];
m18_140 -> m18_141  [key=0, style=solid, color=red];
m18_140 -> m18_18  [key=2, style=dotted, color=red];
m18_140 -> m18_19  [key=2, style=dotted, color=red];
m18_140 -> m18_85  [key=2, style=dotted, color=red];
m18_140 -> m18_21  [key=2, style=dotted, color=red];
m18_140 -> m18_22  [key=2, style=dotted, color=red];
m18_141 -> m18_139  [key=0, style=bold, color=blue];
m18_143 -> m18_144  [key=0, style=solid, color=red];
m18_143 -> m18_29  [key=2, style=dotted, color=red];
m18_144 -> m18_142  [key=0, style=bold, color=blue];
m18_149 -> m18_150  [key=0, style=solid, color=red];
m18_149 -> m18_152  [key=2, style=dotted, color=red];
m18_154 -> m18_155  [key=0, style=solid, color=red];
m18_154 -> m18_156  [key=2, style=dotted, color=red];
m18_153 -> m18_154  [key=0, style=solid, color=red];
m18_148 -> m18_149  [key=0, style=solid, color=red];
m18_150 -> m18_151  [key=0, style=solid, color=red];
m18_151 -> m18_148  [key=0, style=bold, color=blue];
m18_155 -> m18_153  [key=0, style=bold, color=blue];
m18_159 -> m18_160  [key=0, style=solid, color=red];
m18_160 -> m18_161  [key=0, style=solid, color=red];
m18_161 -> m18_159  [key=0, style=bold, color=blue];
m18_164 -> m18_165  [key=0, style=solid, color=red];
m18_165 -> m18_166  [key=0, style=solid, color=red];
m18_166 -> m18_164  [key=0, style=bold, color=blue];
m18_169 -> m18_170  [key=0, style=solid, color=red];
m18_170 -> m18_171  [key=0, style=solid, color=red];
m18_170 -> m18_172  [key=2, style=dotted, color=red];
m18_171 -> m18_169  [key=0, style=bold, color=blue];
m18_176 -> m18_177  [key=0, style=solid, color=red];
m18_176 -> m18_172  [key=2, style=dotted, color=red];
m18_177 -> m18_175  [key=0, style=bold, color=blue];
m18_33 -> m18_34  [key=0, style=solid, color=red];
m18_34 -> m18_35  [key=0, style=solid, color=red];
m18_34 -> m18_38  [key=2, style=dotted, color=red];
m18_35 -> m18_36  [key=0, style=solid, color=red];
m18_35 -> m18_14  [key=2, style=dotted, color=red];
m18_35 -> m18_39  [key=1, style=dashed, color=red, label="lambda expression"];
m18_36 -> m18_37  [key=0, style=solid, color=red];
m18_36 -> m18_14  [key=2, style=dotted, color=red];
m18_36 -> m18_42  [key=1, style=dashed, color=red, label="lambda expression"];
m18_37 -> m18_33  [key=0, style=bold, color=blue];
m18_92 -> m18_93  [key=0, style=solid, color=red];
m18_93 -> m18_94  [key=0, style=solid, color=red];
m18_93 -> m18_80  [key=2, style=dotted, color=red];
m18_93 -> m18_81  [key=2, style=dotted, color=red];
m18_94 -> m18_92  [key=0, style=bold, color=blue];
m18_85 -> m18_167  [key=0, style=solid, color=red];
m18_167 -> m18_168  [key=0, style=solid, color=red];
m18_167 -> m18_21  [key=2, style=dotted, color=red];
m18_167 -> m18_169  [key=1, style=dashed, color=red, label="lambda expression"];
m18_168 -> m18_85  [key=0, style=bold, color=blue];
m18_18 -> m18_145  [key=0, style=solid, color=red];
m18_145 -> m18_146  [key=0, style=solid, color=red];
m18_145 -> m18_149  [key=1, style=dashed, color=red, label=string];
m18_145 -> m18_154  [key=1, style=dashed, color=red, label=validator];
m18_145 -> m18_145  [key=3, color=red, style=bold, label="Local variable System.Func<string, bool> validator"];
m18_146 -> m18_147  [key=0, style=solid, color=red];
m18_146 -> m18_21  [key=2, style=dotted, color=red];
m18_146 -> m18_153  [key=1, style=dashed, color=red, label="lambda expression"];
m18_147 -> m18_18  [key=0, style=bold, color=blue];
m18_75 -> m18_76  [key=0, style=solid, color=red];
m18_76 -> m18_77  [key=0, style=solid, color=red];
m18_76 -> m18_80  [key=2, style=dotted, color=red];
m18_76 -> m18_81  [key=2, style=dotted, color=red];
m18_77 -> m18_78  [key=0, style=solid, color=red];
m18_77 -> m18_14  [key=2, style=dotted, color=red];
m18_77 -> m18_82  [key=1, style=dashed, color=red, label="lambda expression"];
m18_78 -> m18_79  [key=0, style=solid, color=red];
m18_78 -> m18_14  [key=2, style=dotted, color=red];
m18_78 -> m18_89  [key=1, style=dashed, color=red, label="lambda expression"];
m18_79 -> m18_75  [key=0, style=bold, color=blue];
m18_178 -> m18_1  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_2  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_6  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_10  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_11  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_35  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_36  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_50  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_51  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_65  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_66  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_77  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_78  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_97  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_98  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_109  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_120  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_121  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_135  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_178 -> m18_136  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m18_179 -> m18_154  [key=1, style=dashed, color=red, label=validator];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=red, label=IRedisClientsManager];
m19_1 -> m19_2  [key=0, style=solid, color=red];
m19_1 -> m19_3  [key=0, style=solid];
m19_2 -> m19_1  [key=0, style=solid, color=red];
m19_2 -> m19_4  [key=2, style=dotted, color=red];
m19_2 -> m19_5  [key=2, style=dotted, color=red];
m19_2 -> m19_6  [key=2, style=dotted, color=red];
m19_3 -> m19_0  [key=0, style=bold, color=blue];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_21  [key=2, style=dotted];
m19_12 -> m19_22  [key=2, style=dotted];
m19_12 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_12 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label=waitHandles];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_23  [key=2, style=dotted];
m19_13 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_13 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_24  [key=2, style=dotted];
m19_14 -> m19_25  [key=2, style=dotted];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_26  [key=2, style=dotted];
m19_15 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_15 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_19  [key=0, style=solid];
m19_16 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label=fetcher];
m19_18 -> m19_20  [key=0, style=solid];
m19_18 -> m19_27  [key=2, style=dotted];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_16  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_28  [key=2, style=dotted];
m19_20 -> m19_11  [key=0, style=bold, color=blue];
m19_29 -> m19_30  [key=0, style=solid];
m19_30 -> m19_31  [key=0, style=solid];
m19_31 -> m19_29  [key=0, style=bold, color=blue];
m19_7 -> m19_8  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_10  [key=2, style=dotted];
m19_9 -> m19_7  [key=0, style=bold, color=blue];
m19_32 -> m19_2  [key=1, style=dashed, color=red, label="HangFire.Server.PrioritizedJobFetcher"];
m19_32 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrioritizedJobFetcher"];
m19_32 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrioritizedJobFetcher"];
m19_32 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrioritizedJobFetcher"];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
}
