digraph  {
n0 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35"];
n1 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", label="Exit Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35"];
n2 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", label="Entry Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="42-42"];
n3 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", label="Exit Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="42-42"];
n4 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", label="Entry Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="50-50"];
n5 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", label="Exit Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="50-50"];
n6 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", label="Entry Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57"];
n7 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", label="Exit Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57"];
n8 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", label="Entry Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65"];
n9 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", label="Exit Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65"];
n10 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", label="Entry Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73"];
n11 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", label="Exit Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73"];
n12 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
n13 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", label="Exit Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
d12 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, label="var serverName = String.Format(''{0}:{1}'', MachineName, Process.GetCurrentProcess().Id)", prediction=0, span="59-59"];
d30 [label="HangFire.BackgroundJobServer", span=""];
d10 [cluster="HangFire.BackgroundJobServer.Start()", label="_server != null", span="54-54"];
d13 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, label="_server = new JobServer(\r\n                RedisFactory.BasicManager,\r\n                serverName, WorkerCount, Queues, JobActivator, PollInterval, TimeSpan.FromSeconds(5))", prediction=1, span="61-63"];
d16 [cluster="System.Diagnostics.Process.GetCurrentProcess()", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
d17 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d14 [cluster="HangFire.BackgroundJobServer.Start()", label="Exit HangFire.BackgroundJobServer.Start()", span="52-52"];
d18 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33"];
d8 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
d3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="MachineName = Environment.MachineName", span="22-22"];
d4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="PollInterval = TimeSpan.FromSeconds(15)", span="23-23"];
d5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="WorkerCount = workerCount", span="25-25"];
d6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Queues = queues ?? new[] { ''default'' }", span="26-26"];
d20 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server != null", span="72-72"];
d21 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server.Dispose()", span="74-74"];
d22 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server = null", span="75-75"];
d28 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Stop()", span="84-84"];
d9 [cluster="HangFire.BackgroundJobServer.Start()", label="Entry HangFire.BackgroundJobServer.Start()", span="52-52"];
d11 [cluster="HangFire.BackgroundJobServer.Start()", label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="56-56"];
d2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20"];
d7 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20"];
d19 [cluster="HangFire.BackgroundJobServer.Stop()", label="Entry HangFire.BackgroundJobServer.Stop()", span="70-70"];
d24 [cluster="HangFire.BackgroundJobServer.Stop()", label="return false;", span="79-79"];
d26 [cluster="HangFire.Server.JobServer.Dispose()", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
d23 [cluster="HangFire.BackgroundJobServer.Stop()", label="return true;", span="77-77"];
d27 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82"];
d29 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82"];
d15 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
d25 [cluster="HangFire.BackgroundJobServer.Stop()", label="Exit HangFire.BackgroundJobServer.Stop()", span="70-70"];
m0_25 [cluster="Unk.OnScenarioStart", file="Client.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m0_29 [cluster="Unk.CollectScenarioErrors", file="Client.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m0_21 [cluster="Unk.OnScenarioEnd", file="Client.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m0_67 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="156-156"];
m0_69 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="160-160"];
m0_70 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs", label="this.FeatureBackground()", span="162-162"];
m0_76 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs", label="this.ScenarioCleanup()", span="178-178"];
m0_77 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="156-156"];
m0_9 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.FeatureTearDown()", span="39-39"];
m0_10 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Client.feature.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m0_11 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Client.feature.cs", label="testRunner = null", span="42-42"];
m0_12 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.FeatureTearDown()", span="39-39"];
m0_94 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="223-223"];
m0_96 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="227-227"];
m0_97 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs", label="this.FeatureBackground()", span="229-229"];
m0_100 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs", label="this.ScenarioCleanup()", span="235-235"];
m0_101 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="223-223"];
m0_5 [cluster="Unk.GetTestRunner", file="Client.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m0_78 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", span="185-185"];
m0_80 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="189-189"];
m0_81 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs", label="this.FeatureBackground()", span="191-191"];
m0_84 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs", label="this.ScenarioCleanup()", span="197-197"];
m0_85 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", span="185-185"];
m0_22 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m0_23 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Client.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m0_24 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m0_26 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66"];
m0_27 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="Client.feature.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m0_28 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66"];
m0_86 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="204-204"];
m0_88 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="208-208"];
m0_89 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs", label="this.FeatureBackground()", span="210-210"];
m0_92 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs", label="this.ScenarioCleanup()", span="216-216"];
m0_93 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="204-204"];
m0_34 [cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", span="83-83"];
m0_36 [cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="87-87"];
m0_37 [cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs", label="this.FeatureBackground()", span="89-89"];
m0_40 [cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs", label="this.ScenarioCleanup()", span="95-95"];
m0_41 [cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", span="83-83"];
m0_13 [cluster="Unk.OnFeatureEnd", file="Client.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m0_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="Client.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m0_14 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.TestInitialize()", span="46-46"];
m0_15 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Client.feature.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client''))", span="48-49"];
m0_16 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Client.feature.cs", label="HangFire.Tests.ClientFeature.FeatureSetup(null)", span="51-51"];
m0_17 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.TestInitialize()", span="46-46"];
m0_18 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56"];
m0_19 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="Client.feature.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m0_20 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56"];
m0_43 [cluster="Unk.When", file="Client.feature.cs", label="Entry Unk.When", span=""];
m0_56 [cluster="Unk.AddRow", file="Client.feature.cs", label="Entry Unk.AddRow", span=""];
m0_57 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="129-129"];
m0_59 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="134-134"];
m0_60 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs", label="this.FeatureBackground()", span="136-136"];
m0_62 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="140-142"];
m0_65 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs", label="this.ScenarioCleanup()", span="149-149"];
m0_66 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="129-129"];
m0_45 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="102-102"];
m0_47 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="106-106"];
m0_48 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs", label="this.FeatureBackground()", span="108-108"];
m0_50 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="112-114"];
m0_53 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs", label="this.ScenarioCleanup()", span="121-121"];
m0_54 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="102-102"];
m0_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="Client.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m0_44 [cluster="Unk.Then", file="Client.feature.cs", label="Entry Unk.Then", span=""];
m0_30 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71"];
m0_32 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71"];
m0_33 [cluster="Unk.Given", file="Client.feature.cs", label="Entry Unk.Given", span=""];
m0_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="Client.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m0_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="Client.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m0_110 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="263-263"];
m0_112 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="267-267"];
m0_113 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs", label="this.FeatureBackground()", span="269-269"];
m0_116 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs", label="this.ScenarioCleanup()", span="275-275"];
m0_117 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="263-263"];
m0_0 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m0_1 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m0_2 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m0_3 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m0_4 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m0_8 [cluster="Unk.OnFeatureStart", file="Client.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m0_102 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs", label="Entry HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="243-243"];
m0_104 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="248-248"];
m0_105 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs", label="this.FeatureBackground()", span="250-250"];
m0_108 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs", label="this.ScenarioCleanup()", span="256-256"];
m0_109 [cluster="HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="Client.feature.cs", label="Exit HangFire.Tests.ClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="243-243"];
m0_118 [file="Client.feature.cs", label="HangFire.Tests.ClientFeature", span=""];
m2_35 [cluster="string.Equals(string)", file="ClientSteps.cs", label="Entry string.Equals(string)", span="0-0"];
m2_111 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175"];
m2_112 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", color=green, community=0, file="ClientSteps.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", prediction=2, span="177-177"];
m2_113 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", color=green, community=0, file="ClientSteps.cs", label="ThenItShouldBeEnqueuedToTheQueue(queue)", prediction=2, span="178-178"];
m2_114 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175"];
m2_42 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="ClientSteps.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113"];
m2_78 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="ClientSteps.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="58-58"];
m2_103 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161"];
m2_104 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", color=green, community=0, file="ClientSteps.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", prediction=2, span="163-163"];
m2_105 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", color=green, community=0, file="ClientSteps.cs", label="ThenItShouldBeScheduledForTomorrow()", prediction=2, span="164-164"];
m2_106 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161"];
m2_76 [cluster="Unk.SortedSetContainsItem", file="ClientSteps.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m2_39 [cluster="Unk.Write", file="ClientSteps.cs", label="Entry Unk.Write", span=""];
m2_54 [cluster="Unk.GetAllEntriesFromHash", file="ClientSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m2_57 [cluster="Unk.IsTrue", file="ClientSteps.cs", label="Entry Unk.IsTrue", span=""];
m2_37 [cluster="HangFire.Perform.Async<TJob>(object)", file="ClientSteps.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="40-40"];
m2_36 [cluster="Unk.Select", file="ClientSteps.cs", label="Entry Unk.Select", span=""];
m2_53 [cluster="string.Format(string, object)", file="ClientSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_80 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129"];
m2_81 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", color=green, community=0, file="ClientSteps.cs", label="Assert.IsNotNull(_exception)", prediction=2, span="131-131"];
m2_82 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", color=green, community=0, file="ClientSteps.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", prediction=2, span="132-132"];
m2_83 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129"];
m2_30 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label=PendingStepException, prediction=8, span="80-80"];
m2_58 [cluster="Unk.>", file="ClientSteps.cs", label="Entry Unk.>", span=""];
m2_77 [cluster="Unk.GetItemScoreInSortedSet", file="ClientSteps.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m2_55 [cluster="Unk.AreNotEqual", file="ClientSteps.cs", label="Entry Unk.AreNotEqual", span=""];
m2_40 [cluster="System.TimeSpan.FromDays(double)", file="ClientSteps.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m2_34 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19"];
m2_43 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="ClientSteps.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128"];
m2_59 [cluster="Unk.AreEqual", file="ClientSteps.cs", label="Entry Unk.AreEqual", span=""];
m2_45 [cluster="Unk.Pending", file="ClientSteps.cs", label="Entry Unk.Pending", span=""];
m2_44 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="ClientSteps.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144"];
m2_87 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136"];
m2_88 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", prediction=9, span="138-138"];
m2_89 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs", label="Assert.AreNotEqual(0, job.Count)", prediction=10, span="139-139"];
m2_90 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", prediction=9, span="140-140"];
m2_91 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", prediction=12, span="142-142"];
m2_92 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", color=green, community=0, file="ClientSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, args)", prediction=9, span="143-143"];
m2_93 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136"];
m2_94 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="ClientSteps.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m2_95 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147"];
m2_96 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", color=green, community=0, file="ClientSteps.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", prediction=2, span="149-149"];
m2_97 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", color=green, community=0, file="ClientSteps.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", prediction=2, span="150-150"];
m2_98 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147"];
m2_79 [cluster="System.DateTime.AddDays(double)", file="ClientSteps.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m2_41 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="ClientSteps.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m2_46 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91"];
m2_47 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", prediction=16, span="93-93"];
m2_48 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs", label="Assert.AreNotEqual(0, job.Count)", prediction=17, span="94-94"];
m2_49 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", prediction=16, span="95-95"];
m2_50 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", prediction=19, span="97-97"];
m2_51 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", color=green, community=0, file="ClientSteps.cs", label="Assert.AreEqual(0, args.Count)", prediction=20, span="98-98"];
m2_52 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91"];
m2_0 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m2_2 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19"];
m2_3 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.Async<TestJob>()'')", prediction=21, span="23-23"];
m2_4 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.Async<TestJob>()", prediction=22, span="25-25"];
m2_5 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.Async<TestJob>(new { ArticleId = 3, Author = \''odinserj\'' })'')", prediction=23, span="27-27"];
m2_6 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.Async<TestJob>(new { ArticleId = 3, Author = ''odinserj'' })", prediction=24, span="29-29"];
m2_9 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.Async(null)'')", prediction=25, span="35-35"];
m2_7 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.Async(typeof(TestJob))'')", prediction=25, span="31-31"];
m2_8 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.Async(typeof (TestJob))", prediction=27, span="33-33"];
m2_10 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.Async(null)", prediction=28, span="37-37"];
m2_28 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.Async<EmptyQueueJob>()", prediction=29, span="73-73"];
m2_11 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.Async(typeof(TestJob), new { ArticleId = 3 })'')", prediction=30, span="39-39"];
m2_13 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.Async(null, new { ArticleId = 3 })'')", prediction=31, span="43-43"];
m2_15 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.In<TestJob>(TimeSpan.FromDays(1))'')", prediction=25, span="47-47"];
m2_17 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })'')", prediction=33, span="51-51"];
m2_19 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.In(TimeSpan.FromDays(1), typeof(TestJob))'')", prediction=25, span="55-55"];
m2_21 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.In(TimeSpan.FromDays(1), typeof(TestJob), new { ArticleId = 3 })'')", prediction=35, span="59-59"];
m2_23 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.Async<CriticalQueueJob>()'')", prediction=25, span="63-63"];
m2_25 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.Async<InvalidQueueJob>()'')", prediction=25, span="67-67"];
m2_12 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.Async(typeof (TestJob), new { ArticleId = 3 })", prediction=38, span="41-41"];
m2_14 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.Async(null, new { ArticleId = 3 })", prediction=39, span="45-45"];
m2_16 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.In<TestJob>(TimeSpan.FromDays(1))", prediction=40, span="49-49"];
m2_18 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })", prediction=41, span="53-53"];
m2_20 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob))", prediction=42, span="57-57"];
m2_22 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { ArticleId = 3 })", prediction=43, span="61-61"];
m2_27 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="code.Equals(''Perform.Async<EmptyQueueJob>()'')", prediction=25, span="71-71"];
m2_24 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.Async<CriticalQueueJob>()", prediction=45, span="65-65"];
m2_26 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="_jobId = Perform.Async<InvalidQueueJob>()", prediction=46, span="69-69"];
m2_29 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="ClientSteps.cs", label="ScenarioContext.Current.Pending()", prediction=47, span="77-77"];
m2_38 [cluster="HangFire.Perform.Async(System.Type)", file="ClientSteps.cs", label="Entry HangFire.Perform.Async(System.Type)", span="55-55"];
m2_32 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ClientSteps.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m2_31 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", color=green, community=0, file="ClientSteps.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", prediction=48, span="4-4"];
m2_33 [cluster="HangFire.Storage.IMonitoringApi.Servers()", file="ClientSteps.cs", label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25"];
m2_60 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102"];
m2_61 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", color=green, community=0, file="ClientSteps.cs", label="ThenItShouldBeEnqueuedToTheQueue(QueueSteps.DefaultQueue)", prediction=2, span="104-104"];
m2_62 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102"];
m2_86 [cluster="Unk.IsInstanceOfType", file="ClientSteps.cs", label="Entry Unk.IsInstanceOfType", span=""];
m2_68 [cluster="Unk.GetAllItemsFromList", file="ClientSteps.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m2_84 [cluster="Unk.IsNotNull", file="ClientSteps.cs", label="Entry Unk.IsNotNull", span=""];
m2_56 [cluster="Unk.Contains", file="ClientSteps.cs", label="Entry Unk.Contains", span=""];
m2_69 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118"];
m2_70 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', _jobId))", prediction=2, span="120-120"];
m2_71 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', _jobId)", prediction=51, span="121-121"];
m2_72 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", prediction=52, span="122-122"];
m2_73 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs", label="Assert.IsTrue(DateTime.UtcNow.Date.AddDays(1) <= timestamp)", prediction=53, span="124-124"];
m2_74 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", color=green, community=0, file="ClientSteps.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", prediction=52, span="125-125"];
m2_75 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118"];
m2_99 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154"];
m2_100 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", color=green, community=0, file="ClientSteps.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", prediction=2, span="156-156"];
m2_101 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", color=green, community=0, file="ClientSteps.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", prediction=2, span="157-157"];
m2_102 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154"];
m2_107 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168"];
m2_108 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", color=green, community=0, file="ClientSteps.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", prediction=2, span="170-170"];
m2_109 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", color=green, community=0, file="ClientSteps.cs", label="ThenItShouldBeScheduledForTomorrow()", prediction=2, span="171-171"];
m2_110 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168"];
m2_63 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108"];
m2_64 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", color=green, community=1, file="ClientSteps.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', name))", prediction=2, span="110-111"];
m2_65 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", color=green, community=0, file="ClientSteps.cs", label="Assert.AreEqual(1, jobIds.Count)", prediction=60, span="113-113"];
m2_66 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", color=green, community=0, file="ClientSteps.cs", label="Assert.AreEqual(_jobId, jobIds[0])", prediction=2, span="114-114"];
m2_67 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108"];
m2_85 [cluster="System.Type.GetType(string, bool)", file="ClientSteps.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m2_115 [file="ClientSteps.cs", label="HangFire.Tests.ClientSteps", span=""];
m5_3 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.Dispose()", span="39-39"];
m5_4 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="DequeuedJobsWatcher.feature.cs", label="Redis.Dispose()", span="41-41"];
m5_5 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.Dispose()", span="39-39"];
m5_113 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_168 [cluster="int.ToString(System.IFormatProvider)", file="DequeuedJobsWatcher.feature.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m5_25 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="95-98"];
m5_12 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49"];
m5_16 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="57-57"];
m5_17 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="queueIndex = (queueIndex + 1) % queues.Length", span="59-59"];
m5_18 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="queueName = queues[queueIndex]", span="60-60"];
m5_14 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="string queueName", span="52-52"];
m5_15 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="var queueIndex = 0", span="53-53"];
m5_21 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="queueIndex == 0", span="65-65"];
m5_19 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="62-62"];
m5_20 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="63-63"];
m5_26 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="return new RedisFetchedJob(Redis, jobId, queueName);", span="104-104"];
m5_22 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="67-70"];
m5_23 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="74-75"];
m5_24 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="jobId == null", span="78-78"];
m5_27 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49"];
m5_35 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107"];
m5_36 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="return Redis.AcquireLock(RedisStorage.Prefix + resource, timeout);", span="109-109"];
m5_37 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107"];
m5_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_98 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m5_131 [cluster="Unk.GetAllItemsFromSortedSet", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.GetAllItemsFromSortedSet", span=""];
m5_50 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="136-138"];
m5_39 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112"];
m5_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var jobId = Guid.NewGuid().ToString()", span="118-118"];
m5_41 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var invocationData = InvocationData.Serialize(job)", span="120-120"];
m5_42 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var storedParameters = new Dictionary<string, string>(parameters)", span="123-123"];
m5_47 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(createdAt))", span="128-128"];
m5_49 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="132-134"];
m5_52 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="return jobId;", span="144-144"];
m5_43 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="storedParameters.Add(''Type'', invocationData.Type)", span="124-124"];
m5_44 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="storedParameters.Add(''Method'', invocationData.Method)", span="125-125"];
m5_45 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="126-126"];
m5_46 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="127-127"];
m5_48 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var transaction = Redis.CreateTransaction()", span="130-130"];
m5_51 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="transaction.Commit()", span="141-141"];
m5_53 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112"];
m5_64 [cluster="Unk.SetRangeInHash", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.SetRangeInHash", span=""];
m5_133 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248"];
m5_134 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DequeuedJobsWatcher.feature.cs", label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="250-252"];
m5_135 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248"];
m5_226 [cluster="Unk.FromNullableStringTimestamp", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m5_96 [cluster="Unk.GetAllEntriesFromHash", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m5_102 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204"];
m5_103 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="jobId == null", span="206-206"];
m5_105 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="var entries = Redis.GetAllEntriesFromHash(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state'', jobId))", span="208-209"];
m5_104 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="throw new ArgumentNullException(''jobId'');", span="206-206"];
m5_106 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="entries.Count == 0", span="211-211"];
m5_108 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="var stateData = new Dictionary<string, string>(entries)", span="213-213"];
m5_111 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="return new StateData\r\n            {\r\n                Name = entries[''State''],\r\n                Reason = entries.ContainsKey(''Reason'') ? entries[''Reason''] : null,\r\n                Data = stateData\r\n            };", span="217-222"];
m5_107 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="return null;", span="211-211"];
m5_109 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="stateData.Remove(''State'')", span="214-214"];
m5_110 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="stateData.Remove(''Reason'')", span="215-215"];
m5_112 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204"];
m5_114 [cluster="Dictionary<string, string>.cstr", file="DequeuedJobsWatcher.feature.cs", label="Entry Dictionary<string, string>.cstr", span=""];
m5_225 [cluster="Unk.FromStringTimestamp", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.FromStringTimestamp", span=""];
m5_11 [cluster="Unk.CreateTransaction", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.CreateTransaction", span=""];
m5_33 [cluster="Unk.SetEntryInHash", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.SetEntryInHash", span=""];
m5_130 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107"];
m5_163 [cluster="Unk.AddItemToSet", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.AddItemToSet", span=""];
m5_193 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328"];
m5_194 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="330-330"];
m5_205 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="utcNow > maxTime.Add(timeOut)", span="361-361"];
m5_195 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="331-331"];
m5_198 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label=serverNames, span="337-337"];
m5_196 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var utcNow = DateTime.UtcNow", span="333-333"];
m5_200 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="341-349"];
m5_203 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label=heartbeats, span="356-356"];
m5_197 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var pipeline = Redis.CreatePipeline()", span="335-335"];
m5_201 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="pipeline.Flush()", span="352-352"];
m5_199 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var name = serverName", span="339-339"];
m5_202 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var removedServerCount = 0", span="355-355"];
m5_207 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="removedServerCount++", span="364-364"];
m5_208 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="return removedServerCount;", span="368-368"];
m5_204 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="358-359"];
m5_206 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="RemoveServer(Redis, heartbeat.Key)", span="363-363"];
m5_209 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328"];
m5_29 [cluster="string.Format(string, object)", file="DequeuedJobsWatcher.feature.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_30 [cluster="Unk.BlockingPopAndPushItemBetweenLists", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
m5_191 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="DequeuedJobsWatcher.feature.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="322-325"];
m5_190 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320"];
m5_192 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320"];
m5_189 [cluster="Unk.RemoveEntry", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.RemoveEntry", span=""];
m5_179 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="312-314"];
m5_176 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304"];
m5_177 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs", label="var transaction = redis.CreateTransaction()", span="306-306"];
m5_178 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="308-310"];
m5_180 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs", label="transaction.Commit()", span="316-316"];
m5_181 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304"];
m5_7 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44"];
m5_8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="DequeuedJobsWatcher.feature.cs", label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="46-46"];
m5_9 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44"];
m5_101 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m5_120 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233"];
m5_121 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="DequeuedJobsWatcher.feature.cs", label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="235-237"];
m5_122 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233"];
m5_68 [cluster="Unk.ExpireEntryIn", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.ExpireEntryIn", span=""];
m5_55 [cluster="System.Guid.ToString()", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Guid.ToString()", span="0-0"];
m5_138 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255"];
m5_139 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs", label="key == null", span="257-257"];
m5_141 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs", label="keyValuePairs == null", span="258-258"];
m5_143 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs", label="Redis.SetRangeInHash(RedisStorage.GetRedisKey(key), keyValuePairs)", span="260-260"];
m5_140 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs", label="throw new ArgumentNullException(''key'');", span="257-257"];
m5_142 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="258-258"];
m5_144 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255"];
m5_212 [cluster="Unk.Flush", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Flush", span=""];
m5_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m5_10 [cluster="RedisWriteOnlyTransaction.cstr", file="DequeuedJobsWatcher.feature.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m5_227 [cluster="Unk.Add", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Add", span=""];
m5_215 [cluster="System.DateTime.Add(System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m5_116 [cluster="HangFire.Storage.StateData.StateData()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Storage.StateData.StateData()", span="21-21"];
m5_151 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272"];
m5_152 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs", label="var transaction = Redis.CreateTransaction()", span="274-274"];
m5_153 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="276-277"];
m5_154 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="279-285"];
m5_155 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs", label="context.Queues", span="287-287"];
m5_157 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="290-292"];
m5_158 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs", label="transaction.Commit()", span="295-295"];
m5_156 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs", label="var queue1 = queue", span="289-289"];
m5_159 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272"];
m5_167 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_224 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m5_34 [cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", span="30-30"];
m5_57 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m5_172 [cluster="Unk.AddItemToList", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.AddItemToList", span=""];
m5_6 [cluster="Unk.Dispose", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Dispose", span=""];
m5_185 [cluster="Unk.RemoveItemFromSet", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m5_213 [cluster="System.DateTime.DateTime(long)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m5_173 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299"];
m5_174 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="DequeuedJobsWatcher.feature.cs", label="RemoveServer(Redis, serverId)", span="301-301"];
m5_175 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299"];
m5_214 [cluster="System.Math.Max(long, long)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m5_69 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147"];
m5_70 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="149-150"];
m5_71 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="storedData.Count == 0", span="152-152"];
m5_78 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="storedData.ContainsKey(''Type'')", span="160-160"];
m5_79 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="type = storedData[''Type'']", span="162-162"];
m5_80 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="storedData.ContainsKey(''Method'')", span="164-164"];
m5_81 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="method = storedData[''Method'']", span="166-166"];
m5_82 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="storedData.ContainsKey(''ParameterTypes'')", span="168-168"];
m5_83 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="parameterTypes = storedData[''ParameterTypes'']", span="170-170"];
m5_84 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="storedData.ContainsKey(''Arguments'')", span="172-172"];
m5_85 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="arguments = storedData[''Arguments'']", span="174-174"];
m5_86 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="storedData.ContainsKey(''CreatedAt'')", span="176-176"];
m5_87 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="createdAt = storedData[''CreatedAt'']", span="178-178"];
m5_94 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                CreatedAt = JobHelper.FromNullableStringTimestamp(createdAt) ?? DateTime.MinValue,\r\n                LoadException = loadException\r\n            };", span="195-201"];
m5_72 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="return null;", span="152-152"];
m5_73 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="string type = null", span="154-154"];
m5_74 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="string method = null", span="155-155"];
m5_90 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="184-184"];
m5_75 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="string parameterTypes = null", span="156-156"];
m5_76 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="string arguments = null", span="157-157"];
m5_77 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="string createdAt = null", span="158-158"];
m5_88 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="Job job = null", span="181-181"];
m5_89 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="JobLoadException loadException = null", span="182-182"];
m5_91 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="job = invocationData.Deserialize()", span="188-188"];
m5_92 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label=JobLoadException, span="190-190"];
m5_93 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="loadException = ex", span="192-192"];
m5_95 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147"];
m5_221 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="345-349"];
m5_66 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="136-138"];
m5_62 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="132-134"];
m5_61 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="132-134"];
m5_65 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="136-138"];
m5_63 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="132-134"];
m5_67 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="136-138"];
m5_161 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="276-277"];
m5_165 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="279-285"];
m5_170 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="290-292"];
m5_160 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="276-277"];
m5_164 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="279-285"];
m5_169 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="290-292"];
m5_162 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="276-277"];
m5_166 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="279-285"];
m5_171 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="290-292"];
m5_183 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="308-310"];
m5_187 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="312-314"];
m5_182 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="308-310"];
m5_186 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="312-314"];
m5_184 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="308-310"];
m5_188 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="312-314"];
m5_222 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="345-349"];
m5_217 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="342-344"];
m5_216 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="342-344"];
m5_218 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="342-344"];
m5_223 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="345-349"];
m5_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32"];
m5_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="DequeuedJobsWatcher.feature.cs", label="Redis = redis", span="34-34"];
m5_2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32"];
m5_32 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m5_137 [cluster="Unk.FirstOrDefault", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.FirstOrDefault", span=""];
m5_145 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263"];
m5_146 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs", label="key == null", span="265-265"];
m5_148 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs", label="var result = Redis.GetAllEntriesFromHash(RedisStorage.GetRedisKey(key))", span="267-267"];
m5_147 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs", label="throw new ArgumentNullException(''key'');", span="265-265"];
m5_149 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs", label="return result.Count != 0 ? result : null;", span="269-269"];
m5_150 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263"];
m5_211 [cluster="Unk.CreatePipeline", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.CreatePipeline", span=""];
m5_118 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="DequeuedJobsWatcher.feature.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="227-230"];
m5_117 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225"];
m5_119 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225"];
m5_54 [cluster="System.Guid.NewGuid()", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m5_123 [cluster="Unk.GetValueFromHash", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.GetValueFromHash", span=""];
m5_60 [cluster="Unk.Commit", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Commit", span=""];
m5_210 [cluster="Unk.GetAllItemsFromSet", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m5_124 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240"];
m5_125 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs", label="key == null", span="242-242"];
m5_127 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs", label="var result = Redis.GetAllItemsFromSortedSet(RedisStorage.GetRedisKey(key))", span="244-244"];
m5_126 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs", label="throw new ArgumentNullException(''key'');", span="242-242"];
m5_128 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs", label="return new HashSet<string>(result);", span="245-245"];
m5_129 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240"];
m5_100 [cluster="HangFire.Storage.JobData.JobData()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Storage.JobData.JobData()", span="21-21"];
m5_99 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m5_219 [cluster="Unk.Format", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Format", span=""];
m5_220 [cluster="Unk.GetValuesFromHash", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.GetValuesFromHash", span=""];
m5_132 [cluster="HashSet<string>.cstr", file="DequeuedJobsWatcher.feature.cs", label="Entry HashSet<string>.cstr", span=""];
m5_59 [cluster="Unk.QueueCommand", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.QueueCommand", span=""];
m5_136 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m5_31 [cluster="Unk.PopAndPushItemBetweenLists", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m5_115 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m5_38 [cluster="Unk.AcquireLock", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.AcquireLock", span=""];
m5_56 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m5_97 [cluster="Unk.ContainsKey", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.ContainsKey", span=""];
m5_228 [file="DequeuedJobsWatcher.feature.cs", label="HangFire.Redis.RedisConnection", span=""];
m5_229 [file="DequeuedJobsWatcher.feature.cs", label=jobId, span=""];
m5_230 [file="DequeuedJobsWatcher.feature.cs", label=storedParameters, span=""];
m5_231 [file="DequeuedJobsWatcher.feature.cs", label="System.TimeSpan", span=""];
m5_232 [file="DequeuedJobsWatcher.feature.cs", label=string, span=""];
m5_233 [file="DequeuedJobsWatcher.feature.cs", label="HangFire.Server.ServerContext", span=""];
m5_234 [file="DequeuedJobsWatcher.feature.cs", label=queue1, span=""];
m5_235 [file="DequeuedJobsWatcher.feature.cs", label=string, span=""];
m5_236 [file="DequeuedJobsWatcher.feature.cs", label=name, span=""];
m5_237 [file="DequeuedJobsWatcher.feature.cs", label=heartbeats, span=""];
m6_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_16 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m6_17 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="String.IsNullOrEmpty(jobId)", span="36-36"];
m6_19 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="jobType == null", span="37-37"];
m6_21 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="state == null", span="38-38"];
m6_23 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="args == null", span="39-39"];
m6_25 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="39-39"];
m6_26 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", color=green, community=0, file="DequeuedJobsWatcherSteps.cs", label="var watcher = new DequeuedJobsWatcher(RedisFactory.BasicManager)", prediction=62, span="41-41"];
m6_27 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="watcher.FindAndRequeueTimedOutJobs()", span="43-43"];
m6_28 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="39-39"];
m6_30 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="32-32"];
m6_18 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="throw new ArgumentNullException(''jobId'');", span="36-36"];
m6_20 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="throw new ArgumentNullException(''jobType'');", span="37-37"];
m6_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="throw new ArgumentNullException(''state'');", span="38-38"];
m6_24 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="throw new ArgumentNullException(''args'');", span="39-39"];
m6_29 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21"];
m6_31 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label=Exception, span="59-59"];
m6_32 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="throw new CreateJobFailedException(''Job creation was failed. See the inner exception for details.'', ex);", span="61-61"];
m6_33 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m6_75 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m6_43 [cluster="HangFire.Client.JobClient.Dispose()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.JobClient.Dispose()", span="65-65"];
m6_44 [cluster="HangFire.Client.JobClient.Dispose()", file="DequeuedJobsWatcherSteps.cs", label="_redis.Dispose()", span="67-67"];
m6_45 [cluster="HangFire.Client.JobClient.Dispose()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Client.JobClient.Dispose()", span="65-65"];
m6_38 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m6_47 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="var job = new Dictionary<string, string>()", span="73-73"];
m6_48 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="job[''Type''] = jobType.AssemblyQualifiedName", span="74-74"];
m6_49 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="75-75"];
m6_50 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="job[''State''] = String.Empty", span="76-76"];
m6_51 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="77-77"];
m6_52 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="return job;", span="79-79"];
m6_53 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m6_35 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m6_73 [cluster="object.GetType()", file="DequeuedJobsWatcherSteps.cs", label="Entry object.GetType()", span="0-0"];
m6_55 [cluster="HangFire.JobHelper.ToJson(object)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="40-40"];
m6_56 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m6_71 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m6_0 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m6_1 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m6_2 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m6_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs", label="redisManager == null", span="20-20"];
m6_5 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs", label="jobCreator == null", span="21-21"];
m6_7 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs", label="_redis = redisManager.GetClient()", span="23-23"];
m6_8 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs", label="_jobCreator = jobCreator", span="24-24"];
m6_4 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs", label="throw new ArgumentNullException(''redisManager'');", span="20-20"];
m6_6 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs", label="throw new ArgumentNullException(''jobCreator'');", span="21-21"];
m6_9 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m6_74 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m6_11 [cluster="Unk.GetClient", file="DequeuedJobsWatcherSteps.cs", label="Entry Unk.GetClient", span=""];
m6_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcherSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_76 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m6_72 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m6_34 [cluster="string.IsNullOrEmpty(string)", file="DequeuedJobsWatcherSteps.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_46 [cluster="Unk.Dispose", file="DequeuedJobsWatcherSteps.cs", label="Entry Unk.Dispose", span=""];
m6_41 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m6_42 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22"];
m6_15 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m6_57 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="var result = new Dictionary<string, string>()", span="84-84"];
m6_58 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="obj == null", span="85-85"];
m6_60 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="TypeDescriptor.GetProperties(obj)", span="87-87"];
m6_61 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="var propertyValue = descriptor.GetValue(obj)", span="89-89"];
m6_59 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="return result;", span="85-85"];
m6_68 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="result.Add(descriptor.Name, value)", span="110-110"];
m6_69 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="return result;", span="113-113"];
m6_67 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="101-106"];
m6_62 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="string value = null", span="90-90"];
m6_63 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="propertyValue != null", span="92-92"];
m6_64 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="96-96"];
m6_65 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="value = converter.ConvertToInvariantString(propertyValue)", span="97-97"];
m6_66 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label=Exception, span="99-99"];
m6_70 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m6_40 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m6_36 [cluster="System.ArgumentException.ArgumentException(string, string)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m6_12 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m6_13 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="DequeuedJobsWatcherSteps.cs", label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30"];
m6_14 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m6_39 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m6_78 [file="DequeuedJobsWatcherSteps.cs", label="HangFire.Client.JobClient", span=""];
m8_0 [cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="IJobClient.cs", label="Entry HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7"];
m8_1 [cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="IJobClient.cs", label="Exit HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7"];
m10_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobClient.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m10_16 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m10_17 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="String.IsNullOrEmpty(jobId)", span="36-36"];
m10_19 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="jobType == null", span="37-37"];
m10_21 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="state == null", span="38-38"];
m10_23 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="args == null", span="39-39"];
m10_25 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="41-41"];
m10_26 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="43-45"];
m10_27 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs", label="var jobParameters = CreateJobParameters(jobType, args)", prediction=63, span="50-50"];
m10_28 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=1, file="JobClient.cs", label="var context = new CreateContext(\r\n                    new ClientJobDescriptor(_redis, jobId, jobParameters, state))", prediction=64, span="52-53"];
m10_30 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs", label="return jobId;", prediction=65, span="57-57"];
m10_18 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentNullException(''jobId'');", span="36-36"];
m10_20 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentNullException(''jobType'');", span="37-37"];
m10_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentNullException(''state'');", span="38-38"];
m10_24 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentNullException(''args'');", span="39-39"];
m10_29 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs", label="_jobCreator.CreateJob(context)", prediction=66, span="55-55"];
m10_31 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", prediction=67, span="33-33"];
m10_32 [cluster="string.IsNullOrEmpty(string)", color=green, community=0, file="JobClient.cs", label="Entry string.IsNullOrEmpty(string)", prediction=68, span="0-0"];
m10_72 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="JobClient.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m10_40 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="Entry HangFire.Client.JobClient.Dispose()", span="58-58"];
m10_41 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="_redis.Dispose()", span="60-60"];
m10_42 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="JobClient.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22"];
m10_36 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="63-63"];
m10_44 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="var job = new Dictionary<string, string>()", span="66-66"];
m10_45 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="job[''Type''] = jobType.AssemblyQualifiedName", span="67-67"];
m10_46 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="68-68"];
m10_47 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="job[''State''] = String.Empty", span="69-69"];
m10_48 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="70-70"];
m10_49 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="return job;", span="72-72"];
m10_50 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="63-63"];
m10_33 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JobClient.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m10_70 [cluster="object.GetType()", file="JobClient.cs", label="Entry object.GetType()", span="0-0"];
m10_52 [cluster="HangFire.JobHelper.ToJson(object)", file="JobClient.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m10_53 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobClient.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m10_68 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="JobClient.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m10_0 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m10_1 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m10_2 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m10_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="redisManager == null", span="20-20"];
m10_5 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="jobCreator == null", span="21-21"];
m10_7 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="_redis = redisManager.GetClient()", span="23-23"];
m10_8 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="_jobCreator = jobCreator", span="24-24"];
m10_4 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="throw new ArgumentNullException(''redisManager'');", span="20-20"];
m10_6 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="throw new ArgumentNullException(''jobCreator'');", span="21-21"];
m10_9 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m10_71 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JobClient.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m10_11 [cluster="Unk.GetClient", file="JobClient.cs", label="Entry Unk.GetClient", span=""];
m10_51 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_73 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="JobClient.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m10_69 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="JobClient.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m10_43 [cluster="Unk.Dispose", file="JobClient.cs", label="Entry Unk.Dispose", span=""];
m10_39 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobClient.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m10_15 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="75-75"];
m10_54 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="var result = new Dictionary<string, string>()", span="77-77"];
m10_55 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="obj == null", span="78-78"];
m10_57 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="TypeDescriptor.GetProperties(obj)", span="80-80"];
m10_58 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="var propertyValue = descriptor.GetValue(obj)", span="82-82"];
m10_56 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="return result;", span="78-78"];
m10_65 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="result.Add(descriptor.Name, value)", span="103-103"];
m10_66 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="return result;", span="106-106"];
m10_64 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="94-99"];
m10_59 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="string value = null", span="83-83"];
m10_60 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="propertyValue != null", span="85-85"];
m10_61 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="89-89"];
m10_62 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="value = converter.ConvertToInvariantString(propertyValue)", span="90-90"];
m10_63 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label=Exception, span="92-92"];
m10_67 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="75-75"];
m10_38 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="JobClient.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m10_34 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JobClient.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m10_12 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m10_13 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs", label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30"];
m10_14 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m10_37 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="JobClient.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m10_75 [file="JobClient.cs", label="HangFire.Client.JobClient", span=""];
m11_25 [cluster="Unk.OnScenarioStart", file="JobClient.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m11_29 [cluster="Unk.CollectScenarioErrors", file="JobClient.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m11_57 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="125-125"];
m11_58 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=1, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''If the arguments were not provided, the \'Args\' parameter contains the empty JSON '' +\r\n                    ''value'', ((string[])(null)))", prediction=69, span="127-128"];
m11_59 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=70, span="130-130"];
m11_60 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=70, span="132-132"];
m11_61 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create an argumentless job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=72, span="134-134"];
m11_62 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=1, file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", prediction=73, span="136-138"];
m11_63 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=1, file="JobClient.feature.cs", label="table2.AddRow(new string[] {\r\n                        ''Args'',\r\n                        ''{}''})", prediction=74, span="139-141"];
m11_64 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table2, ''Then '')", prediction=73, span="143-143"];
m11_65 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=70, span="145-145"];
m11_66 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="125-125"];
m11_21 [cluster="Unk.OnScenarioEnd", file="JobClient.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m11_34 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", span="81-81"];
m11_35 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The client creates the job in the storage'', ((string[])(null)))", prediction=77, span="83-83"];
m11_36 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=70, span="85-85"];
m11_37 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=70, span="87-87"];
m11_38 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=80, span="89-89"];
m11_39 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''the storage contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=81, span="91-91"];
m11_40 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=70, span="93-93"];
m11_41 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", span="81-81"];
m11_30 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="70-70"];
m11_31 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", prediction=83, span="74-74"];
m11_32 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="70-70"];
m11_78 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", span="179-179"];
m11_79 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The given state was applied to the job'', ((string[])(null)))", prediction=84, span="181-181"];
m11_80 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=70, span="183-183"];
m11_81 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=70, span="185-185"];
m11_82 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=87, span="187-187"];
m11_83 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''the given state was applied to it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=88, span="189-189"];
m11_84 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=70, span="191-191"];
m11_85 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", span="179-179"];
m11_5 [cluster="Unk.GetTestRunner", file="JobClient.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m11_18 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="55-55"];
m11_19 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.OnScenarioEnd()", prediction=90, span="57-57"];
m11_20 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="55-55"];
m11_45 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="99-99"];
m11_46 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job contains the \'Type\' parameter equal to the assembly qualified type name'', ((string[])(null)))", prediction=91, span="101-101"];
m11_47 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=70, span="103-103"];
m11_48 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=70, span="105-105"];
m11_49 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=94, span="107-107"];
m11_50 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=1, file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", prediction=95, span="109-111"];
m11_51 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=1, file="JobClient.feature.cs", label="table1.AddRow(new string[] {\r\n                        ''Type'',\r\n                        ''<Assembly qualified name of \'HangFire.Tests.TestJob\' type>''})", prediction=96, span="112-114"];
m11_52 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table1, ''Then '')", prediction=95, span="116-116"];
m11_53 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=70, span="118-118"];
m11_54 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="99-99"];
m11_94 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="215-215"];
m11_95 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty type causes an exception'', ((string[])(null)))", prediction=99, span="217-217"];
m11_96 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=70, span="219-219"];
m11_97 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=70, span="221-221"];
m11_98 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with null type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=102, span="223-223"];
m11_99 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=103, span="225-225"];
m11_100 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=70, span="227-227"];
m11_101 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="215-215"];
m11_86 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="197-197"];
m11_87 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty id causes an exception'', ((string[])(null)))", prediction=105, span="199-199"];
m11_88 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=70, span="201-201"];
m11_89 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=70, span="203-203"];
m11_90 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with an empty id'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=108, span="205-205"];
m11_91 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=109, span="207-207"];
m11_92 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=70, span="209-209"];
m11_93 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="197-197"];
m11_13 [cluster="Unk.OnFeatureEnd", file="JobClient.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m11_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobClient.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m11_0 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m11_1 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobClient.feature.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", prediction=111, span="32-32"];
m11_2 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobClient'', '''', ProgrammingLanguage.CSharp, ((string[])(null)))", prediction=112, span="33-33"];
m11_3 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobClient.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", prediction=113, span="34-34"];
m11_4 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m11_43 [cluster="Unk.When", file="JobClient.feature.cs", label="Entry Unk.When", span=""];
m11_67 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="151-151"];
m11_68 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Arguments are converted to a JSON string and contained in the \'Args\' parameter'', ((string[])(null)))", prediction=114, span="153-153"];
m11_69 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=70, span="155-155"];
m11_70 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=70, span="157-157"];
m11_71 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=1, file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", prediction=117, span="159-161"];
m11_72 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=1, file="JobClient.feature.cs", label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''5''})", prediction=118, span="162-164"];
m11_73 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=1, file="JobClient.feature.cs", label="table3.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Deleted''})", prediction=117, span="165-167"];
m11_74 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with the following arguments:'', ((string)(null)), table3, ''When '')", prediction=117, span="169-169"];
m11_75 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''the job contains all of the above arguments in the JSON format'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=121, span="171-171"];
m11_76 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=70, span="173-173"];
m11_77 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="151-151"];
m11_56 [cluster="Unk.AddRow", file="JobClient.feature.cs", label="Entry Unk.AddRow", span=""];
m11_102 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="234-234"];
m11_103 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=1, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with the type, that is not derived from the \'BackgroundJob\' causes'' +\r\n                    '' an exception'', ((string[])(null)))", prediction=123, span="236-237"];
m11_104 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=70, span="239-239"];
m11_105 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=70, span="241-241"];
m11_106 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with the incorrect type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=126, span="243-243"];
m11_107 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=127, span="245-245"];
m11_108 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=70, span="247-247"];
m11_109 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="234-234"];
m11_110 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="253-253"];
m11_111 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty state causes an exception'', ((string[])(null)))", prediction=129, span="255-255"];
m11_112 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=70, span="257-257"];
m11_113 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=70, span="259-259"];
m11_114 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with an empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=132, span="261-261"];
m11_115 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=133, span="263-263"];
m11_116 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=70, span="265-265"];
m11_117 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="253-253"];
m11_9 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="38-38"];
m11_10 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.OnFeatureEnd()", prediction=135, span="40-40"];
m11_11 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", color=green, community=0, file="JobClient.feature.cs", label="testRunner = null", prediction=136, span="41-41"];
m11_12 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="38-38"];
m11_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m11_44 [cluster="Unk.Then", file="JobClient.feature.cs", label="Entry Unk.Then", span=""];
m11_14 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="45-45"];
m11_15 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", color=green, community=0, file="JobClient.feature.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobClient''))", prediction=137, span="47-48"];
m11_16 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", color=green, community=0, file="JobClient.feature.cs", label="HangFire.Tests.Client.JobClientFeature.FeatureSetup(null)", prediction=138, span="50-50"];
m11_17 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="45-45"];
m11_22 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="60-60"];
m11_23 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=green, community=0, file="JobClient.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", prediction=139, span="62-62"];
m11_24 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="60-60"];
m11_33 [cluster="Unk.Given", file="JobClient.feature.cs", label="Entry Unk.Given", span=""];
m11_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m11_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m11_26 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="65-65"];
m11_27 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.CollectScenarioErrors()", prediction=140, span="67-67"];
m11_28 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="65-65"];
m11_8 [cluster="Unk.OnFeatureStart", file="JobClient.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m11_118 [file="JobClient.feature.cs", label="HangFire.Tests.Client.JobClientFeature", span=""];
m12_3 [cluster="Unk.>", file="JobClientSteps.cs", label="Entry Unk.>", span=""];
m12_8 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="JobClientSteps.cs", label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20"];
m12_9 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs", label="var connection = new Mock<IStorageConnection>()", prediction=141, span="22-22"];
m12_10 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs", label="var job = Job.FromExpression(() => TestMethod())", prediction=142, span="23-23"];
m12_13 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs", label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", prediction=143, span="27-28"];
m12_11 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs", label="var state = new Mock<IState>()", prediction=144, span="24-24"];
m12_12 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", prediction=145, span="25-25"];
m12_14 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs", label="var context = new CreatingContext(createContext)", prediction=146, span="29-29"];
m12_15 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobClientSteps.cs", label="Assert.False(context.Canceled)", prediction=147, span="31-31"];
m12_16 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="JobClientSteps.cs", label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20"];
m12_20 [cluster="Mock<IStateMachineFactory>.cstr", file="JobClientSteps.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m12_19 [cluster="Mock<IState>.cstr", file="JobClientSteps.cs", label="Entry Mock<IState>.cstr", span=""];
m12_22 [cluster="Unk.False", file="JobClientSteps.cs", label="Entry Unk.False", span=""];
m12_7 [cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobClientSteps.cs", label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24"];
m12_18 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobClientSteps.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m12_0 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="JobClientSteps.cs", label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13"];
m12_1 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="JobClientSteps.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatingContext(null))", prediction=148, span="15-16"];
m12_2 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="JobClientSteps.cs", label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13"];
m12_26 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="JobClientSteps.cs", label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34"];
m12_27 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="JobClientSteps.cs", label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34"];
m12_17 [cluster="Mock<IStorageConnection>.cstr", file="JobClientSteps.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m12_23 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="23-23"];
m12_4 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="16-16"];
m12_5 [cluster="lambda expression", color=green, community=0, file="JobClientSteps.cs", label="new CreatingContext(null)", prediction=149, span="16-16"];
m12_6 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="16-16"];
m12_24 [cluster="lambda expression", color=green, community=0, file="JobClientSteps.cs", label="TestMethod()", prediction=150, span="23-23"];
m12_25 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="23-23"];
m12_21 [cluster="CreateContext.cstr", file="JobClientSteps.cs", label="Entry CreateContext.cstr", span=""];
m13_25 [cluster="Unk.OnScenarioStart", file="JobFetcher.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m13_29 [cluster="Unk.CollectScenarioErrors", file="JobFetcher.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m13_21 [cluster="Unk.OnScenarioEnd", file="JobFetcher.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m13_55 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119"];
m13_56 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns null when it tries to dequeue a job from an empty queue'', ((string[])(null)))", span="121-121"];
m13_57 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="123-123"];
m13_58 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.Given(''an empty queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="125-125"];
m13_59 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="127-127"];
m13_60 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="129-129"];
m13_61 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="131-131"];
m13_62 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="133-133"];
m13_63 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119"];
m13_41 [cluster="Unk.And", file="JobFetcher.feature.cs", label="Entry Unk.And", span=""];
m13_54 [cluster="Unk.But", file="JobFetcher.feature.cs", label="Entry Unk.But", span=""];
m13_5 [cluster="Unk.GetTestRunner", file="JobFetcher.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m13_26 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m13_27 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m13_28 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m13_0 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m13_1 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m13_2 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobFetcher'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m13_3 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m13_4 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m13_76 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m13_77 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="169-169"];
m13_78 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="171-171"];
m13_79 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="173-173"];
m13_80 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175"];
m13_81 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177"];
m13_82 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179"];
m13_83 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="181-181"];
m13_84 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m13_30 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m13_31 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns the job payload when it dequeues a job'', ((string[])(null)))", span="77-77"];
m13_32 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m13_33 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m13_34 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m13_35 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m13_36 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher returns the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m13_37 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="89-89"];
m13_38 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m13_9 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m13_10 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m13_11 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs", label="testRunner = null", span="42-42"];
m13_12 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m13_13 [cluster="Unk.OnFeatureEnd", file="JobFetcher.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m13_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobFetcher.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m13_42 [cluster="Unk.When", file="JobFetcher.feature.cs", label="Entry Unk.When", span=""];
m13_44 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m13_45 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98"];
m13_46 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="100-100"];
m13_47 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m13_48 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m13_49 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m13_50 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.Then(''the queue does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m13_51 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.But(''the dequeued jobs list contains it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="110-110"];
m13_52 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="112-112"];
m13_53 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m13_64 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m13_65 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher dequeues jobs in the FIFO order'', ((string[])(null)))", span="142-142"];
m13_66 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="144-144"];
m13_67 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146"];
m13_68 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148"];
m13_69 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="150-150"];
m13_70 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="152-152"];
m13_71 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher returns the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="154-154"];
m13_72 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156"];
m13_73 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher returns the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158"];
m13_74 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="160-160"];
m13_75 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m13_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobFetcher.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m13_43 [cluster="Unk.Then", file="JobFetcher.feature.cs", label="Entry Unk.Then", span=""];
m13_40 [cluster="Unk.Given", file="JobFetcher.feature.cs", label="Entry Unk.Given", span=""];
m13_85 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m13_86 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="190-190"];
m13_87 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="192-192"];
m13_88 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="194-194"];
m13_89 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="196-196"];
m13_90 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m13_91 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m13_92 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="202-202"];
m13_93 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m13_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobFetcher.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m13_14 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m13_15 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49"];
m13_17 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m13_18 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m13_19 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m13_20 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m13_22 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m13_23 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m13_24 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m13_8 [cluster="Unk.OnFeatureStart", file="JobFetcher.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m13_94 [file="JobFetcher.feature.cs", label="HangFire.Tests.JobFetcherFeature", span=""];
m14_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobHelper.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m14_0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobHelper.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m14_1 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobHelper.cs", label="transaction == null", span="27-27"];
m14_2 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobHelper.cs", label="throw new ArgumentNullException(''transaction'');", span="27-27"];
m14_4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobHelper.cs", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m14_6 [file="JobHelper.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m15_0 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="JobManager.feature.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41"];
m15_1 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="JobManager.feature.cs", label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41"];
m16_50 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobServer.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m16_51 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="JobServer.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m16_52 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="JobServer.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m16_53 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="JobServer.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m16_54 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs", label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m16_92 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194"];
m16_104 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="var transaction = _connection.CreateWriteTransaction()", span="198-198"];
m16_105 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="200-202"];
m16_106 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="204-204"];
m16_107 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="return transaction.Commit();", span="206-206"];
m16_108 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194"];
m16_14 [cluster="lambda expression", file="JobServer.cs", label="x.GetConnection()", span="23-23"];
m16_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="JobServer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m16_145 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m16_161 [cluster="System.Collections.Generic.List<T>.List()", file="JobServer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_93 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="JobServer.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m16_87 [cluster="string.IsNullOrWhiteSpace(string)", file="JobServer.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m16_128 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobServer.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m16_59 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="JobServer.cs", label="return new ServerHeartbeat(_storage.Object, ServerId);", span="67-67"];
m16_49 [cluster="Unk.Dispose", file="JobServer.cs", label="Entry Unk.Dispose", span=""];
m16_91 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobServer.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m16_127 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="JobServer.cs", label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="26-26"];
m16_0 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="JobServer.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m16_1 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="JobServer.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m16_2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m16_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="connection == null", span="46-46"];
m16_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="throw new ArgumentNullException(''connection'');", span="46-46"];
m16_5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="stateHandlers == null", span="47-47"];
m16_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="throw new ArgumentNullException(''stateHandlers'');", span="47-47"];
m16_22 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="59-59"];
m16_8 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51"];
m16_17 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServer.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m16_153 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs", label="handler == null", span="289-289"];
m16_155 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs", label="String.IsNullOrEmpty(handler.StateName)", span="290-290"];
m16_157 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs", label="!_handlers.ContainsKey(handler.StateName)", span="292-292"];
m16_158 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs", label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="294-294"];
m16_159 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs", label="_handlers[handler.StateName].Add(handler)", span="297-297"];
m16_154 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs", label="throw new ArgumentNullException(''handler'');", span="289-289"];
m16_156 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs", label="throw new ArgumentNullException(''stateName'');", span="290-290"];
m16_160 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="JobServer.cs", label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="287-287"];
m16_34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84"];
m16_35 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs", label="var filterInfo = GetFilters(method)", span="86-86"];
m16_36 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs", label="var context = new StateContext(jobId, method)", span="87-87"];
m16_37 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs", label="var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88"];
m16_38 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90"];
m16_39 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobServer.cs", label="var transaction = _connection.CreateWriteTransaction()", span="92-92"];
m16_10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="RegisterHandler(handler)", span="54-54"];
m16_21 [cluster="Unk.Select", file="JobServer.cs", label="Entry Unk.Select", span=""];
m16_152 [cluster="System.Func<T, TResult>.Invoke(T)", file="JobServer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m16_125 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobServer.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m16_55 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="62-62"];
m16_25 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="30-30"];
m16_26 [cluster="ServerHeartbeat.cstr", file="JobServer.cs", label="Entry ServerHeartbeat.cstr", span=""];
m16_27 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobServer.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36"];
m16_29 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobServer.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="41-41"];
m16_31 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="39-39"];
m16_33 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="39-39"];
m16_28 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="JobServer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(_storage.Object, null))", prediction=151, span="38-39"];
m16_30 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobServer.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36"];
m16_32 [cluster="lambda expression", file="JobServer.cs", label="new ServerHeartbeat(_storage.Object, null)", span="39-39"];
m16_42 [cluster="Unk.Verify", file="JobServer.cs", label="Entry Unk.Verify", span=""];
m16_44 [cluster="lambda expression", file="JobServer.cs", label="x.GetConnection()", span="51-51"];
m16_41 [cluster="Unk.Execute", file="JobServer.cs", label="Entry Unk.Execute", span=""];
m16_40 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="JobServer.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="65-65"];
m16_43 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="51-51"];
m16_45 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="51-51"];
m16_15 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="23-23"];
m16_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JobServer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m16_95 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobServer.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m16_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="_connection = connection", span="49-49"];
m16_151 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobServer.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m16_60 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="77-77"];
m16_58 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="JobServer.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="9-9"];
m16_144 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m16_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="filters != null", span="57-57"];
m16_123 [cluster="string.IsNullOrEmpty(string)", file="JobServer.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m16_56 [cluster="lambda expression", file="JobServer.cs", label="x.Heartbeat(ServerId)", span="62-62"];
m16_88 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="JobServer.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m16_129 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259"];
m16_135 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="var properties = new Dictionary<string, string>(\r\n                state.GetProperties(context.JobMethod))", span="265-266"];
m16_137 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="properties.Add(''State'', state.StateName)", span="269-269"];
m16_138 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label=appendToJob, span="271-271"];
m16_139 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="transaction.SetJobState(context.JobId, state.StateName, properties)", span="273-273"];
m16_140 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="properties.Add(''Reason'', state.Reason)", span="276-276"];
m16_142 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="transaction.AppendJobHistory(context.JobId, properties)", span="279-279"];
m16_136 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="var now = DateTime.UtcNow", span="267-267"];
m16_141 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="277-277"];
m16_143 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259"];
m16_124 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobServer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m16_9 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label=handlers, span="52-52"];
m16_48 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="52-52"];
m16_23 [cluster="lambda expression", file="JobServer.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59"];
m16_19 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServer.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="32-32"];
m16_18 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(null, ServerId))", span="29-30"];
m16_20 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServer.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m16_24 [cluster="lambda expression", file="JobServer.cs", label="new ServerHeartbeat(null, ServerId)", span="30-30"];
m16_61 [cluster="lambda expression", file="JobServer.cs", label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", span=""];
m16_62 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="77-77"];
m16_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m16_46 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="JobServer.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m16_47 [cluster="System.Reflection.MethodBase.GetParameters()", file="JobServer.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m16_57 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m16_147 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobServer.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m16_148 [cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="JobServer.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="11-11"];
m16_96 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs", label=filters, span="182-182"];
m16_97 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs", label="var oldState = context.CandidateState", span="184-184"];
m16_98 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs", label="filter.OnStateChanging(context)", span="185-185"];
m16_99 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs", label="oldState != context.CandidateState", span="187-187"];
m16_100 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs", label="AppendHistory(context, oldState, false)", span="189-189"];
m16_101 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="JobServer.cs", label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m16_109 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="!String.IsNullOrEmpty(oldState)", span="216-216"];
m16_110 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="_handlers.ContainsKey(oldState)", span="218-218"];
m16_111 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="_handlers[oldState]", span="220-220"];
m16_112 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="handler.Unapply(context)", span="222-222"];
m16_113 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label=stateChangedFilters, span="226-226"];
m16_114 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="filter.OnStateUnapplied(context)", span="228-228"];
m16_115 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="_handlers.ContainsKey(chosenState.StateName)", span="232-232"];
m16_116 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="var stateData = chosenState.GetProperties(context.JobMethod)", span="234-234"];
m16_117 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="_handlers[chosenState.StateName]", span="235-235"];
m16_118 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="handler.Apply(context, stateData)", span="237-237"];
m16_119 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="AppendHistory(context.Transaction, context, chosenState, true)", span="241-241"];
m16_120 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label=stateChangedFilters, span="243-243"];
m16_121 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="filter.OnStateApplied(context)", span="245-245"];
m16_122 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="JobServer.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m16_63 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m16_64 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="String.IsNullOrWhiteSpace(jobId)", span="116-116"];
m16_66 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="state == null", span="117-117"];
m16_68 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="_connection.AcquireJobLock(jobId)", span="119-119"];
m16_69 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123"];
m16_73 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="132-132"];
m16_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="var context = new StateContext(jobId, jobMethod)", span="142-142"];
m16_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143"];
m16_82 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(ex)\r\n                            {\r\n                                Reason = String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId)\r\n                            },\r\n                            currentState,\r\n                            _connection)", span="156-165"];
m16_65 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="throw new ArgumentNullException(''jobId'');", span="116-116"];
m16_67 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="throw new ArgumentNullException(''state'');", span="117-117"];
m16_70 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="jobData == null", span="125-125"];
m16_72 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="var currentState = jobData.State", span="131-131"];
m16_75 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="139-139"];
m16_71 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="return false;", span="128-128"];
m16_74 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="return false;", span="134-134"];
m16_76 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="var filterInfo = GetFilters(jobMethod)", span="140-140"];
m16_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145"];
m16_80 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147"];
m16_81 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label=JobLoadException, span="149-149"];
m16_83 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="167-169"];
m16_84 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label=Exception, span="172-172"];
m16_85 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="throw;", span="174-174"];
m16_86 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="JobServer.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m16_102 [cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobServer.cs", label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m16_130 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="JobServer.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m16_163 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobServer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m16_149 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="JobServer.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="284-284"];
m16_150 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="JobServer.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m16_126 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="JobServer.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m16_12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m16_103 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249"];
m16_131 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="var transaction = _connection.CreateWriteTransaction()", span="252-252"];
m16_132 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="AppendHistory(transaction, context, state, appendToJob)", span="254-254"];
m16_133 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="transaction.Commit()", span="255-255"];
m16_134 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="JobServer.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249"];
m16_162 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobServer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m16_146 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="JobServer.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m16_89 [cluster="HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", file="JobServer.cs", label="Entry HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", span="6-6"];
m16_164 [file="JobServer.cs", label="HangFire.States.StateMachine", span=""];
m16_165 [file="JobServer.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m17_37 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="Perform.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m17_38 [cluster="System.DateTime.Add(System.TimeSpan)", file="Perform.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m17_17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Perform.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m17_41 [cluster="System.Guid.NewGuid()", file="Perform.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m17_26 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113"];
m17_27 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", color=green, community=0, file="Perform.cs", label="return In(delay, typeof(TJob), args);", prediction=152, span="116-116"];
m17_28 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113"];
m17_19 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Perform.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="23-23"];
m17_21 [cluster="HangFire.Perform.GenerateId()", file="Perform.cs", label="Entry HangFire.Perform.GenerateId()", span="157-157"];
m17_39 [cluster="HangFire.Perform.GenerateId()", file="Perform.cs", label="return Guid.NewGuid().ToString();", span="159-159"];
m17_40 [cluster="HangFire.Perform.GenerateId()", file="Perform.cs", label="Exit HangFire.Perform.GenerateId()", span="157-157"];
m17_3 [cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="40-40"];
m17_4 [cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs", label="return Async(typeof(TJob), args);", span="43-43"];
m17_5 [cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs", label="Exit HangFire.Perform.Async<TJob>(object)", span="40-40"];
m17_6 [cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="71-71"];
m17_10 [cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs", label="type == null", prediction=153, span="73-73"];
m17_11 [cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs", label="throw new ArgumentNullException(''type'');", prediction=154, span="75-75"];
m17_12 [cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs", label="var client = new JobClient(RedisFactory.PooledManager)", prediction=155, span="78-78"];
m17_13 [cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs", label="var queue = JobHelper.GetQueue(type)", prediction=156, span="80-80"];
m17_14 [cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", label="var enqueuedState = new EnqueuedState(''Enqueued by the Сlient'', queue)", span="81-81"];
m17_15 [cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs", label="return client.CreateJob(GenerateId(), type, enqueuedState, args);", prediction=155, span="83-83"];
m17_16 [cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", label="Exit HangFire.Perform.Async(System.Type, object)", span="71-71"];
m17_30 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128"];
m17_31 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", color=green, community=0, file="Perform.cs", label="return In(delay, type, null);", prediction=158, span="130-130"];
m17_32 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128"];
m17_0 [cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs", label="Entry HangFire.Perform.Async<TJob>()", span="24-24"];
m17_1 [cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs", label="return Async<TJob>(null);", span="27-27"];
m17_2 [cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs", label="Exit HangFire.Perform.Async<TJob>()", span="24-24"];
m17_7 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="Entry HangFire.Perform.Async(System.Type)", span="55-55"];
m17_8 [cluster="HangFire.Perform.Async(System.Type)", color=green, community=0, file="Perform.cs", label="return Async(type, null);", prediction=159, span="57-57"];
m17_9 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="Exit HangFire.Perform.Async(System.Type)", span="55-55"];
m17_18 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="Perform.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m17_29 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144"];
m17_33 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="Perform.cs", label="var client = new JobClient(RedisFactory.BasicManager)", prediction=160, span="146-146"];
m17_34 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="Perform.cs", label="var scheduledState = new ScheduledState(''Scheduled by the Client'', DateTime.UtcNow.Add(delay))", prediction=161, span="148-148"];
m17_35 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="Perform.cs", label="return client.CreateJob(GenerateId(), type, scheduledState, args);", prediction=160, span="149-149"];
m17_36 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144"];
m17_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="Perform.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m17_20 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="Perform.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m17_42 [cluster="System.Guid.ToString()", file="Perform.cs", label="Entry System.Guid.ToString()", span="0-0"];
m17_23 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96"];
m17_24 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", color=green, community=0, file="Perform.cs", label="return In<TJob>(delay, null);", prediction=163, span="99-99"];
m17_25 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96"];
m18_48 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69"];
m18_52 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69"];
m18_133 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176"];
m18_137 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176"];
m18_138 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="PerformTests.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="55-55"];
m18_63 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85"];
m18_67 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85"];
m18_38 [cluster="HangFire.Perform.Async(System.Type, object)", file="PerformTests.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="31-31"];
m18_95 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124"];
m18_99 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124"];
m18_53 [cluster="HangFire.Perform.Async<TJob>()", file="PerformTests.cs", label="Entry HangFire.Perform.Async<TJob>()", span="13-13"];
m18_114 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219"];
m18_174 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219"];
m18_118 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160"];
m18_122 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160"];
m18_30 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40"];
m18_32 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40"];
m18_21 [cluster="Unk.>", file="PerformTests.cs", label="Entry Unk.>", span=""];
m18_68 [cluster="HangFire.Perform.Async<TJob>(object)", file="PerformTests.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="20-20"];
m18_107 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140"];
m18_110 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140"];
m18_20 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207"];
m18_163 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207"];
m18_81 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="PerformTests.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="61-61"];
m18_100 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="PerformTests.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="66-66"];
m18_80 [cluster="System.TimeSpan.FromDays(double)", file="PerformTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m18_8 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23"];
m18_12 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23"];
m18_19 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202"];
m18_158 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202"];
m18_45 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63"];
m18_47 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63"];
m18_123 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="PerformTests.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="48-48"];
m18_172 [cluster="System.DateTime.AddDays(double)", file="PerformTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m18_152 [cluster="System.Guid.Parse(string)", file="PerformTests.cs", label="Entry System.Guid.Parse(string)", span="0-0"];
m18_29 [cluster="Unk.Dispose", file="PerformTests.cs", label="Entry Unk.Dispose", span=""];
m18_115 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154"];
m18_117 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154"];
m18_0 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14"];
m18_3 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14"];
m18_13 [cluster="HangFire.Perform.Async(System.Type)", file="PerformTests.cs", label="Entry HangFire.Perform.Async(System.Type)", span="26-26"];
m18_175 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="223-223"];
m18_5 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="19-19"];
m18_7 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="19-19"];
m18_15 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="28-32"];
m18_26 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="35-35"];
m18_17 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="28-32"];
m18_23 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="32-32"];
m18_25 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="32-32"];
m18_28 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="35-35"];
m18_39 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="51-55"];
m18_42 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="58-58"];
m18_41 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="51-55"];
m18_44 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="58-58"];
m18_54 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="74-78"];
m18_60 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="81-81"];
m18_56 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="74-78"];
m18_57 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="78-78"];
m18_59 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="78-78"];
m18_62 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="81-81"];
m18_69 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="90-94"];
m18_72 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="97-97"];
m18_71 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="90-94"];
m18_74 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="97-97"];
m18_82 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="106-110"];
m18_89 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="113-113"];
m18_84 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="106-110"];
m18_86 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="110-110"];
m18_88 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="110-110"];
m18_91 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="113-113"];
m18_101 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="129-133"];
m18_104 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="136-136"];
m18_103 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="129-133"];
m18_106 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="136-136"];
m18_111 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="145-149"];
m18_113 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="145-149"];
m18_124 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="165-169"];
m18_130 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="172-172"];
m18_126 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="165-169"];
m18_127 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="169-169"];
m18_129 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="169-169"];
m18_132 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="172-172"];
m18_139 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="181-185"];
m18_142 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="188-188"];
m18_141 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="181-185"];
m18_144 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="188-188"];
m18_153 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="199-199"];
m18_148 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="193-197"];
m18_151 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="193-197"];
m18_155 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="199-199"];
m18_159 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="204-204"];
m18_161 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="204-204"];
m18_164 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="209-209"];
m18_166 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="209-209"];
m18_169 [cluster="lambda expression", file="PerformTests.cs", label="Entry lambda expression", span="216-216"];
m18_171 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="216-216"];
m18_177 [cluster="lambda expression", file="PerformTests.cs", label="Exit lambda expression", span="223-223"];
m18_33 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46"];
m18_37 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46"];
m18_92 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118"];
m18_94 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118"];
m18_85 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212"];
m18_168 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212"];
m18_18 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191"];
m18_147 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191"];
m18_156 [cluster="Unk.validator", file="PerformTests.cs", label="Entry Unk.validator", span=""];
m18_22 [cluster="Unk.CreateJob", file="PerformTests.cs", label="Entry Unk.CreateJob", span=""];
m18_4 [cluster="Mock<IJobClient>.cstr", file="PerformTests.cs", label="Entry Mock<IJobClient>.cstr", span=""];
m18_14 [cluster="Unk.Verify", file="PerformTests.cs", label="Entry Unk.Verify", span=""];
m18_75 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="PerformTests.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101"];
m18_79 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="PerformTests.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101"];
m18_178 [file="PerformTests.cs", label="HangFire.Tests.UnitTests.PerformTests", span=""];
m18_179 [file="PerformTests.cs", label=validator, span=""];
m19_28 [cluster="System.InvalidOperationException.InvalidOperationException()", file="PrioritizedJobFetcher.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m19_4 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="27-27"];
m19_6 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PrioritizedJobFetcher.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m19_22 [cluster="Unk.ToList", file="PrioritizedJobFetcher.cs", label="Entry Unk.ToList", span=""];
m19_25 [cluster="Unk.WaitAny", file="PrioritizedJobFetcher.cs", label="Entry Unk.WaitAny", span=""];
m19_26 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="PrioritizedJobFetcher.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m19_0 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m19_1 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="PrioritizedJobFetcher.cs", label=queues, span="17-17"];
m19_3 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m19_10 [cluster="HangFire.Server.DisposableCollection<T>.Dispose()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.DisposableCollection<T>.Dispose()", span="8-8"];
m19_11 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="29-29"];
m19_12 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="var waitHandles = _fetchers.Select(x => x.JobIsReady).ToList()", span="31-31"];
m19_13 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="waitHandles.Add(cancellationToken.WaitHandle)", span="32-32"];
m19_14 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="WaitHandle.WaitAny(waitHandles.ToArray())", span="34-34"];
m19_15 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="36-36"];
m19_16 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label=_fetchers, span="38-38"];
m19_18 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="return fetcher.DequeueJob(cancellationToken);", span="42-42"];
m19_17 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="fetcher.PrefetchedCount > 0", span="40-40"];
m19_19 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="throw new InvalidOperationException();", span="46-46"];
m19_20 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="29-29"];
m19_23 [cluster="Unk.Add", file="PrioritizedJobFetcher.cs", label="Entry Unk.Add", span=""];
m19_27 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="50-50"];
m19_24 [cluster="Unk.ToArray", file="PrioritizedJobFetcher.cs", label="Entry Unk.ToArray", span=""];
m19_29 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="31-31"];
m19_30 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.JobIsReady", span="31-31"];
m19_31 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="31-31"];
m19_7 [cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.Dispose()", span="24-24"];
m19_8 [cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="PrioritizedJobFetcher.cs", label="_fetchers.Dispose()", span="26-26"];
m19_9 [cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Server.PrioritizedJobFetcher.Dispose()", span="24-24"];
m19_5 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12"];
m19_21 [cluster="Unk.Select", file="PrioritizedJobFetcher.cs", label="Entry Unk.Select", span=""];
m19_32 [file="PrioritizedJobFetcher.cs", label="HangFire.Server.PrioritizedJobFetcher", span=""];
m20_0 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="SchedulePoller.feature.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41"];
m20_1 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="SchedulePoller.feature.cs", label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41"];
m22_0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="ServerSteps.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m22_1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="ServerSteps.cs", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
d30 -> d10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d30 -> d20  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d30 -> d21  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d30 -> d28  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_118 -> m0_36  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_40  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_47  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_48  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_53  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_59  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_60  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_65  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_69  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_76  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_80  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_81  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_84  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_88  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_89  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_92  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_96  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_97  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_100  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_104  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_105  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_108  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_112  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_113  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_118 -> m0_116  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m2_111 -> m2_113  [color=green, key=1, label=string, style=dashed];
m2_80 -> m2_82  [color=green, key=1, label=string, style=dashed];
m2_87 -> m2_90  [color=green, key=1, label=string, style=dashed];
m2_87 -> m2_92  [color=green, key=1, label=Table, style=dashed];
m2_88 -> m2_90  [color=green, key=1, label=job, style=dashed];
m2_41 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m2_41 -> m2_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m2_41 -> m2_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m2_46 -> m2_49  [color=green, key=1, label=string, style=dashed];
m2_47 -> m2_49  [color=green, key=1, label=job, style=dashed];
m2_2 -> m2_7  [color=green, key=1, label=string, style=dashed];
m2_2 -> m2_9  [color=green, key=1, label=string, style=dashed];
m2_2 -> m2_15  [color=green, key=1, label=string, style=dashed];
m2_2 -> m2_19  [color=green, key=1, label=string, style=dashed];
m2_2 -> m2_23  [color=green, key=1, label=string, style=dashed];
m2_2 -> m2_25  [color=green, key=1, label=string, style=dashed];
m2_2 -> m2_27  [color=green, key=1, label=string, style=dashed];
m2_72 -> m2_74  [color=green, key=1, label=timestamp, style=dashed];
m2_64 -> m2_66  [color=green, key=1, label=jobIds, style=dashed];
m2_115 -> m2_61  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_66  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_70  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_81  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_82  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_96  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_97  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_100  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_101  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_104  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_105  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_108  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_109  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_112  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_113  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_115 -> m2_33  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m5_12 -> m5_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_16 -> m5_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_17 -> m5_21  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m5_18 -> m5_26  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m5_22 -> m5_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_22 -> m5_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_23 -> m5_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_23 -> m5_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_50 -> m5_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_39 -> m5_47  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_39 -> m5_50  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_39 -> m5_66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_40 -> m5_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_40 -> m5_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_40 -> m5_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_40 -> m5_66  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_40 -> m5_52  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_41 -> m5_43  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_41 -> m5_44  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_41 -> m5_45  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_41 -> m5_46  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_42 -> m5_44  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_42 -> m5_45  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_42 -> m5_46  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_42 -> m5_47  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_42 -> m5_49  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_42 -> m5_62  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_49 -> m5_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_48 -> m5_50  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_48 -> m5_51  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_108 -> m5_110  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m5_193 -> m5_205  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_194 -> m5_198  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m5_195 -> m5_200  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m5_195 -> m5_222  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m5_195 -> m5_203  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m5_196 -> m5_205  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m5_200 -> m5_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_200 -> m5_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_197 -> m5_200  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_197 -> m5_201  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_199 -> m5_217  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_199 -> m5_222  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_202 -> m5_207  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m5_202 -> m5_208  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m5_207 -> m5_207  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m5_207 -> m5_208  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m5_204 -> m5_206  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m5_206 -> m5_206  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m5_179 -> m5_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_176 -> m5_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_176 -> m5_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_176 -> m5_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_176 -> m5_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_177 -> m5_179  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_177 -> m5_180  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_178 -> m5_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_138 -> m5_141  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m5_138 -> m5_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_151 -> m5_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_151 -> m5_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_151 -> m5_154  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_151 -> m5_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_151 -> m5_155  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m5_151 -> m5_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_151 -> m5_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_152 -> m5_154  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_152 -> m5_157  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_152 -> m5_158  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_153 -> m5_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_154 -> m5_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_157 -> m5_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_156 -> m5_170  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m5_70 -> m5_78  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_70 -> m5_80  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_70 -> m5_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_70 -> m5_84  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_70 -> m5_86  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_228 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_118  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_121  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_134  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_143  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_174  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_191  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_228 -> m5_206  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_229 -> m5_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_229 -> m5_66  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_230 -> m5_62  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_231 -> m5_66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_232 -> m5_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_232 -> m5_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_232 -> m5_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_233 -> m5_165  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m5_234 -> m5_170  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m5_235 -> m5_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_235 -> m5_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_236 -> m5_217  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_236 -> m5_222  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_237 -> m5_222  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m6_16 -> m6_19  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_16 -> m6_21  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_16 -> m6_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_16 -> m6_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_16 -> m6_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_16 -> m6_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_16 -> m6_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_47 -> m6_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_2 -> m6_5  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m6_15 -> m6_58  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_15 -> m6_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_57 -> m6_59  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_57 -> m6_68  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_57 -> m6_69  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_60 -> m6_67  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m6_60 -> m6_68  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m6_61 -> m6_63  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m6_62 -> m6_68  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_78 -> m6_13  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m6_78 -> m6_28  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m6_78 -> m6_29  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m6_78 -> m6_44  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m10_16 -> m10_19  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_16 -> m10_21  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m10_16 -> m10_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m10_16 -> m10_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_16 -> m10_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_16 -> m10_30  [color=green, key=1, label=string, style=dashed];
m10_44 -> m10_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m10_2 -> m10_5  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m10_15 -> m10_55  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_15 -> m10_57  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_54 -> m10_56  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_54 -> m10_65  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_54 -> m10_66  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_57 -> m10_64  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m10_57 -> m10_65  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m10_58 -> m10_60  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m10_59 -> m10_65  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_75 -> m10_13  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m10_75 -> m10_29  [color=green, key=1, label="HangFire.Client.JobClient", style=dashed];
m10_75 -> m10_41  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m11_62 -> m11_64  [color=green, key=1, label=table2, style=dashed];
m11_50 -> m11_52  [color=green, key=1, label=table1, style=dashed];
m11_71 -> m11_73  [color=green, key=1, label=table3, style=dashed];
m11_71 -> m11_74  [color=green, key=1, label=table3, style=dashed];
m11_118 -> m11_36  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_37  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_40  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_47  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_48  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_53  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_59  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_60  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_65  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_69  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_70  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_76  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_80  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_81  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_84  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_88  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_89  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_92  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_96  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_97  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_100  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_104  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_105  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_108  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_112  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_113  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m11_118 -> m11_116  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m12_10 -> m12_23  [color=green, key=1, label="lambda expression", style=dashed];
m12_1 -> m12_4  [color=green, key=1, label="lambda expression", style=dashed];
m13_94 -> m13_32  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_37  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_46  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_52  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_57  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_62  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_66  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_74  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_78  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_83  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_87  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m13_94 -> m13_92  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m16_53 -> m16_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_54 -> m16_98  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m16_54 -> m16_99  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m16_54 -> m16_100  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m16_92 -> m16_106  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m16_104 -> m16_107  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_2 -> m16_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>", style=dashed];
m16_2 -> m16_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m16_2 -> m16_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m16_5 -> m16_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_17 -> m16_155  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m16_17 -> m16_157  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m16_17 -> m16_158  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m16_17 -> m16_159  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m16_34 -> m16_42  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_34 -> m16_44  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_35 -> m16_38  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m16_35 -> m16_41  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m16_36 -> m16_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m16_37 -> m16_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_37 -> m16_41  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m16_38 -> m16_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_39 -> m16_42  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_39 -> m16_43  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_26 -> m16_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m16_26 -> m16_31  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m16_26 -> m16_33  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m16_33 -> m16_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_28 -> m16_31  [color=green, key=1, label="lambda expression", style=dashed];
m16_129 -> m16_137  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m16_129 -> m16_138  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_129 -> m16_139  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m16_129 -> m16_140  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m16_129 -> m16_142  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m16_135 -> m16_137  [color=darkseagreen4, key=1, label=properties, style=dashed];
m16_135 -> m16_139  [color=darkseagreen4, key=1, label=properties, style=dashed];
m16_135 -> m16_140  [color=darkseagreen4, key=1, label=properties, style=dashed];
m16_135 -> m16_141  [color=darkseagreen4, key=1, label=properties, style=dashed];
m16_135 -> m16_142  [color=darkseagreen4, key=1, label=properties, style=dashed];
m16_136 -> m16_141  [color=darkseagreen4, key=1, label=now, style=dashed];
m16_19 -> m16_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_18 -> m16_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_61 -> m16_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_59  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_57 -> m16_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_57 -> m16_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_57 -> m16_112  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m16_57 -> m16_113  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m16_57 -> m16_114  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m16_57 -> m16_115  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m16_57 -> m16_117  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m16_57 -> m16_118  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m16_57 -> m16_119  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m16_57 -> m16_120  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m16_57 -> m16_121  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m16_96 -> m16_98  [color=darkseagreen4, key=1, label=filter, style=dashed];
m16_97 -> m16_99  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m16_97 -> m16_100  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m16_116 -> m16_118  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m16_63 -> m16_66  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m16_63 -> m16_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_63 -> m16_73  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m16_78 -> m16_80  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m16_76 -> m16_79  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m16_76 -> m16_80  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m16_103 -> m16_132  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateContext", style=dashed];
m16_131 -> m16_133  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_164 -> m16_10  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_38  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_41  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_68  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_79  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_80  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_100  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_106  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_110  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_111  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_115  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_117  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_119  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_132  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_149  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_157  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_158  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_164 -> m16_159  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m16_165 -> m16_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m17_6 -> m17_15  [color=green, key=1, label="System.Type", style=dashed];
m17_12 -> m17_15  [color=green, key=1, label=client, style=dashed];
m17_29 -> m17_35  [color=green, key=1, label="System.Type", style=dashed];
m17_33 -> m17_35  [color=green, key=1, label=client, style=dashed];
m19_11 -> m19_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m19_12 -> m19_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_12 -> m19_14  [color=darkseagreen4, key=1, label=waitHandles, style=dashed];
m19_13 -> m19_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m19_13 -> m19_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m19_15 -> m19_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m19_15 -> m19_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m19_16 -> m19_18  [color=darkseagreen4, key=1, label=fetcher, style=dashed];
m19_32 -> m19_8  [color=darkseagreen4, key=1, label="HangFire.Server.PrioritizedJobFetcher", style=dashed];
m19_32 -> m19_16  [color=darkseagreen4, key=1, label="HangFire.Server.PrioritizedJobFetcher", style=dashed];
}
