digraph  {
n0 [label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)"];
n1 [label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)"];
m1_24 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="IStorageConnection.cs"];
m1_33 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="33-33", cluster="HangFire.JobHelper.FromJson<T>(string)", file="IStorageConnection.cs"];
m1_27 [label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="96-96", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs"];
m1_28 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs"];
m1_30 [label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="100-102", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs"];
m1_29 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs"];
m1_31 [label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="96-96", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs"];
m1_0 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="21-21", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_1 [label="Debug.Assert(redis != null)", span="28-28", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_2 [label="Debug.Assert(jobId != null)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_3 [label="Debug.Assert(type != null)", span="30-30", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_4 [label="Debug.Assert(arguments != null)", span="31-31", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="IStorageConnection.cs"];
m1_5 [label="Debug.Assert(state != null)", span="32-32", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_6 [label="_stateMachine = new StateMachine(redis)", span="34-34", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_7 [label="JobId = jobId", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_8 [label="Type = type", span="37-37", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_9 [label="State = state", span="38-38", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_10 [label="_jobParameters[''Type''] = type.AssemblyQualifiedName", span="40-40", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_11 [label="_jobParameters[''Args''] = JobHelper.ToJson(arguments)", span="41-41", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_12 [label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="21-21", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_16 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs"];
m1_17 [label="String.IsNullOrWhiteSpace(name)", span="74-74", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs"];
m1_21 [label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="81-81", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs"];
m1_18 [label="throw new ArgumentNullException(''name'');", span="74-74", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs"];
m1_19 [label=_jobWasCreated, span="76-76", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs"];
m1_20 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="78-78", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs"];
m1_22 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs"];
m1_23 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="IStorageConnection.cs"];
m1_34 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="105-105", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="IStorageConnection.cs"];
m1_35 [label="_jobWasCreated = true", span="107-107", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="IStorageConnection.cs"];
m1_36 [label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="108-108", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="IStorageConnection.cs"];
m1_37 [label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="105-105", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="IStorageConnection.cs"];
m1_15 [label="Entry HangFire.JobHelper.ToJson(object)", span="28-28", cluster="HangFire.JobHelper.ToJson(object)", file="IStorageConnection.cs"];
m1_38 [label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs"];
m1_32 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="IStorageConnection.cs"];
m1_26 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="IStorageConnection.cs"];
m1_13 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="IStorageConnection.cs"];
m1_25 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IStorageConnection.cs"];
m1_14 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="IStorageConnection.cs"];
m1_39 [label="HangFire.Client.ClientJobDescriptor", span="", file="IStorageConnection.cs"];
m2_51 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="156-156", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs"];
m2_86 [label="var changedContext = new StateApplyingContext(stateChangingContext)", span="158-158", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs"];
m2_87 [label="return changedContext.ApplyState(_handlers, stateChangedFilters);", span="159-159", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs"];
m2_88 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="156-156", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs"];
m2_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisConnection.cs"];
m2_81 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RedisConnection.cs"];
m2_117 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RedisConnection.cs"];
m2_83 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="RedisConnection.cs"];
m2_46 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="13-13", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m2_84 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RedisConnection.cs"];
m2_78 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="RedisConnection.cs"];
m2_82 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="91-91", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="RedisConnection.cs"];
m2_45 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="RedisConnection.cs"];
m2_102 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="RedisConnection.cs"];
m2_17 [label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="186-186", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs"];
m2_107 [label="handler == null", span="188-188", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs"];
m2_109 [label="String.IsNullOrEmpty(handler.StateName)", span="189-189", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs"];
m2_111 [label="!_handlers.ContainsKey(handler.StateName)", span="191-191", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs"];
m2_112 [label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="193-193", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs"];
m2_113 [label="_handlers[handler.StateName].Add(handler)", span="196-196", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs"];
m2_108 [label="throw new ArgumentNullException(''handler'');", span="188-188", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs"];
m2_110 [label="throw new ArgumentNullException(''stateName'');", span="189-189", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs"];
m2_114 [label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="186-186", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs"];
m2_0 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="RedisConnection.cs"];
m2_1 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="RedisConnection.cs"];
m2_49 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="RedisConnection.cs"];
m2_106 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="RedisConnection.cs"];
m2_100 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="10-10", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m2_25 [label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38", cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="RedisConnection.cs"];
m2_26 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_27 [label="method == null", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_29 [label="parameters == null", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_31 [label="state == null", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_33 [label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_34 [label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_35 [label="var filterInfo = GetFilters(method)", span="86-86", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_36 [label="var context = new StateContext(jobId, method)", span="87-87", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_37 [label="var changingContext = new StateChangingContext(context, state, ''Created'', _connection)", span="88-88", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_28 [label="throw new ArgumentNullException(''method'');", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_30 [label="throw new ArgumentNullException(''parameters'');", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_32 [label="throw new ArgumentNullException(''state'');", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_40 [label="return jobId;", span="95-95", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_38 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_39 [label="ApplyState(changingContext, filterInfo.StateChangedFilters)", span="93-93", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_41 [label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs"];
m2_15 [label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52", cluster="HangFire.JobStorage.GetStateHandlers()", file="RedisConnection.cs"];
m2_105 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="RedisConnection.cs"];
m2_90 [label="Entry HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="42-42", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs"];
m2_89 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", span="28-28", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="RedisConnection.cs"];
m2_115 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="RedisConnection.cs"];
m2_79 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="22-22", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="RedisConnection.cs"];
m2_101 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="13-13", cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisConnection.cs"];
m2_116 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisConnection.cs"];
m2_44 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="RedisConnection.cs"];
m2_52 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="RedisConnection.cs"];
m2_19 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="lambda expression", file="RedisConnection.cs"];
m2_18 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="RedisConnection.cs"];
m2_20 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="RedisConnection.cs"];
m2_22 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="RedisConnection.cs"];
m2_23 [label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59", cluster="lambda expression", file="RedisConnection.cs"];
m2_24 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="RedisConnection.cs"];
m2_53 [label="x.ParameterType", span="77-77", cluster="lambda expression", file="RedisConnection.cs"];
m2_54 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="RedisConnection.cs"];
m2_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RedisConnection.cs"];
m2_50 [label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="162-162", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs"];
m2_91 [label=filters, span="165-165", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs"];
m2_92 [label="var oldState = context.CandidateState", span="167-167", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs"];
m2_93 [label="filter.OnStateChanging(context)", span="168-168", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs"];
m2_94 [label="oldState != context.CandidateState", span="170-170", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs"];
m2_96 [label="transaction.AppendJobHistory(context.JobId, oldState, context.JobMethod)", span="174-174", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs"];
m2_95 [label="var transaction = _connection.CreateWriteTransaction()", span="172-172", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs"];
m2_97 [label="transaction.Commit()", span="175-175", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs"];
m2_98 [label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="162-162", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs"];
m2_55 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_56 [label="String.IsNullOrWhiteSpace(jobId)", span="101-101", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_58 [label="state == null", span="102-102", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_60 [label="_connection.AcquireJobLock(jobId)", span="104-104", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_61 [label="var jobData = _connection.GetJobStateAndInvocationData(jobId)", span="106-106", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_64 [label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(jobData.State)", span="114-114", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_69 [label="state = new FailedState(ex)\r\n                    {\r\n                        Reason = String.Format(\r\n                            ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                            state.StateName, jobId)\r\n                    }", span="132-137", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_70 [label="var context = new StateContext(jobId, jobMethod)", span="140-140", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_57 [label="throw new ArgumentNullException(''jobId'');", span="101-101", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_59 [label="throw new ArgumentNullException(''state'');", span="102-102", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_62 [label="jobData == null", span="108-108", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_67 [label="jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="123-123", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_71 [label="var stateChangingContext = \r\n                    new StateChangingContext(context, state, jobData.State, _connection)", span="141-142", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_63 [label="return false;", span="111-111", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_65 [label="return false;", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_66 [label="JobMethod jobMethod = null", span="119-119", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_68 [label=JobLoadException, span="125-125", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_72 [label="jobMethod == null", span="144-144", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_74 [label="var filterInfo = GetFilters(jobMethod)", span="149-149", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_73 [label="return ApplyState(stateChangingContext, Enumerable.Empty<IStateChangedFilter>());", span="146-146", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_75 [label="InvokeStateChangingFilters(stateChangingContext, filterInfo.StateChangingFilters)", span="150-150", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_76 [label="return ApplyState(stateChangingContext, filterInfo.StateChangedFilters);", span="152-152", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_77 [label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs"];
m2_99 [label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RedisConnection.cs"];
m2_80 [label="Entry HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", span="23-23", cluster="HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m2_119 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisConnection.cs"];
m2_47 [label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="181-181", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RedisConnection.cs"];
m2_103 [label="return new JobFilterInfo(_getFiltersThunk(method));", span="183-183", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RedisConnection.cs"];
m2_104 [label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="181-181", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RedisConnection.cs"];
m2_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RedisConnection.cs"];
m2_43 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="RedisConnection.cs"];
m2_118 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisConnection.cs"];
m2_48 [label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="RedisConnection.cs"];
m2_42 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisConnection.cs"];
m2_85 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="RedisConnection.cs"];
m2_2 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_3 [label="connection == null", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_5 [label="stateHandlers == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_7 [label="_connection = connection", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_8 [label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_11 [label="filters != null", span="57-57", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_12 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_4 [label="throw new ArgumentNullException(''connection'');", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_6 [label="throw new ArgumentNullException(''stateHandlers'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_9 [label=handlers, span="52-52", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_10 [label="RegisterHandler(handler)", span="54-54", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_13 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs"];
m2_120 [label="HangFire.States.StateMachine", span="", file="RedisConnection.cs"];
m2_121 [label="System.Collections.Generic.IEnumerable<object>", span="", file="RedisConnection.cs"];
m3_72 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_73 [label="var context = CreateContext()", span="93-93", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_74 [label="var contextCopy = new CreateContext(context)", span="94-94", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_75 [label="Assert.Same(context.JobId, contextCopy.JobId)", span="96-96", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_76 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_8 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RedisProcessingJob.cs"];
m3_12 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="RedisProcessingJob.cs"];
m3_9 [label="HangFire.Redis.RedisProcessingJob", span="", cluster="Mock<IState>.cstr", file="RedisProcessingJob.cs"];
m3_167 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs"];
m3_168 [label="var context = CreateContext()", span="228-228", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs"];
m3_169 [label="context.SetJobParameter(''name'', new { key = ''value'' })", span="229-229", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs"];
m3_170 [label="context.CreateJob()", span="231-231", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs"];
m3_171 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>()))", span="233-237", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs"];
m3_172 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs"];
m3_63 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="RedisProcessingJob.cs"];
m3_0 [label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", span="23-23", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs"];
m3_1 [label="jobId == null", span="25-25", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs", color=green, community=0];
m3_2 [label="throw new ArgumentNullException(''jobId'');", span="25-25", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs", color=green, community=0];
m3_3 [label="queue == null", span="26-26", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", color=red, community=0, file="RedisProcessingJob.cs"];
m3_4 [label="throw new ArgumentNullException(''queue'');", span="26-26", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs"];
m3_5 [label="JobId = jobId", span="28-28", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs"];
m3_6 [label="Queue = queue", span="29-29", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs"];
m3_7 [label="Exit HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", span="23-23", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs"];
m3_33 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RedisProcessingJob.cs"];
m3_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _job, _state.Object))", span="43-44", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RedisProcessingJob.cs"];
m3_35 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="46-46", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RedisProcessingJob.cs"];
m3_36 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RedisProcessingJob.cs"];
m3_86 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="RedisProcessingJob.cs"];
m3_87 [label="var context = CreateContext()", span="112-112", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="RedisProcessingJob.cs"];
m3_88 [label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="114-115", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="RedisProcessingJob.cs"];
m3_89 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="RedisProcessingJob.cs"];
m3_28 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RedisProcessingJob.cs"];
m3_147 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs"];
m3_148 [label="var context = CreateContext()", span="202-202", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs"];
m3_149 [label="context.CreateJob()", span="204-204", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs"];
m3_150 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState))", span="206-209", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs"];
m3_151 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs"];
m3_47 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="RedisProcessingJob.cs"];
m3_48 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null))", span="61-63", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="RedisProcessingJob.cs"];
m3_49 [label="Assert.Equal(''initialState'', exception.ParamName)", span="65-65", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="RedisProcessingJob.cs"];
m3_50 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="RedisProcessingJob.cs"];
m3_179 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="RedisProcessingJob.cs"];
m3_90 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="RedisProcessingJob.cs"];
m3_24 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisProcessingJob.cs"];
m3_25 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object))", span="34-35", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisProcessingJob.cs"];
m3_26 [label="Assert.Equal(''connection'', exception.ParamName)", span="37-37", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisProcessingJob.cs"];
m3_27 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisProcessingJob.cs"];
m3_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisProcessingJob.cs"];
m3_120 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs"];
m3_121 [label="var context = CreateContext()", span="157-157", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs"];
m3_122 [label="context.SetJobParameter(''name1'', ''value1'')", span="159-159", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs"];
m3_123 [label="context.SetJobParameter(''name2'', ''value2'')", span="160-160", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs"];
m3_124 [label="Assert.Equal(''value1'', context.GetJobParameter<string>(''name1''))", span="162-162", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs"];
m3_125 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs"];
m3_206 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs"];
m3_207 [label="var context = CreateContext()", span="279-279", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs"];
m3_208 [label="context.CreateJob()", span="280-280", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs"];
m3_209 [label="var contextCopy = new CreateContext(context)", span="282-282", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs"];
m3_210 [label="Assert.Throws<InvalidOperationException>(\r\n                () => contextCopy.SetJobParameter(''name'', ''value''))", span="284-285", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs"];
m3_211 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs"];
m3_62 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="RedisProcessingJob.cs"];
m3_216 [label="return new CreateContext(\r\n                _connection.Object, _stateMachineFactory.Object, _job, _state.Object);", span="294-295", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="RedisProcessingJob.cs"];
m3_217 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="RedisProcessingJob.cs"];
m3_115 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs"];
m3_116 [label="var context = CreateContext()", span="148-148", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs"];
m3_117 [label="context.SetJobParameter(''name'', ''value'')", span="149-149", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs"];
m3_118 [label="Assert.Equal(''value'', context.GetJobParameter<string>(''name''))", span="151-151", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs"];
m3_119 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs"];
m3_196 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs"];
m3_197 [label="_stateMachine.Setup(x => x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object))\r\n                .Returns(''id'')", span="264-266", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs"];
m3_198 [label="var context = CreateContext()", span="268-268", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs"];
m3_199 [label="context.CreateJob()", span="269-269", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs"];
m3_200 [label="var contextCopy = new CreateContext(context)", span="271-271", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs"];
m3_201 [label="Assert.Equal(''id'', contextCopy.JobId)", span="273-273", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs"];
m3_202 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs"];
m3_110 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs"];
m3_111 [label="var context = CreateContext()", span="139-139", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs"];
m3_112 [label="Assert.Equal(default(int), context.GetJobParameter<int>(''one''))", span="141-141", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs"];
m3_113 [label="Assert.Equal(default(string), context.GetJobParameter<string>(''two''))", span="142-142", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs"];
m3_114 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs"];
m3_64 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="RedisProcessingJob.cs"];
m3_54 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs"];
m3_55 [label="var context = CreateContext()", span="71-71", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs"];
m3_56 [label="Assert.Same(_connection.Object, context.Connection)", span="73-73", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs"];
m3_57 [label="Assert.Same(_job, context.Job)", span="74-74", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs"];
m3_58 [label="Assert.Same(_state.Object, context.InitialState)", span="75-75", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs"];
m3_59 [label="Assert.NotNull(context.Items)", span="77-77", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs"];
m3_60 [label="Assert.Null(context.JobId)", span="78-78", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs"];
m3_61 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs"];
m3_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RedisProcessingJob.cs"];
m3_71 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="RedisProcessingJob.cs"];
m3_18 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="RedisProcessingJob.cs"];
m3_215 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="RedisProcessingJob.cs"];
m3_65 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="RedisProcessingJob.cs"];
m3_66 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_67 [label="var context = CreateContext()", span="84-84", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_68 [label="var contextCopy = new CreateContext(context)", span="85-85", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_69 [label="Assert.Same(context.Items, contextCopy.Items)", span="87-87", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_70 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_157 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="RedisProcessingJob.cs"];
m3_212 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_15 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_19 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_16 [label="Method()", span="21-21", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_17 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_20 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_21 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_29 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_30 [label="new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object)", span="35-35", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_31 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_37 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_38 [label="new CreateContext(_connection.Object, null, _job, _state.Object)", span="44-44", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_39 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_44 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_45 [label="new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object)", span="53-53", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_46 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_51 [label="Entry lambda expression", span="62-63", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_52 [label="new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null)", span="62-63", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_53 [label="Exit lambda expression", span="62-63", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_83 [label="context.SetJobParameter(null, null)", span="104-104", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_82 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_84 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_92 [label="context.SetJobParameter(''name'', null)", span="115-115", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_91 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_93 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_100 [label="context.SetJobParameter(''name'', null)", span="125-125", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_99 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_101 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_107 [label="context.GetJobParameter<int>(null)", span="133-133", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_106 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_108 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_138 [label="context.GetJobParameter<int>(''name'')", span="184-184", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_137 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_139 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_155 [label="x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState)", span="206-209", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_154 [label="Entry lambda expression", span="206-209", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_156 [label="Exit lambda expression", span="206-209", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_165 [label="x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState)", span="217-217", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_164 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_166 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_173 [label="Entry lambda expression", span="233-237", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_174 [label="x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>())", span="233-237", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_175 [label="Exit lambda expression", span="233-237", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_176 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_177 [label="d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''", span="236-236", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_178 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_186 [label="context.SetJobParameter(''name'', ''value'')", span="247-247", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_185 [label="Entry lambda expression", span="247-247", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_187 [label="Exit lambda expression", span="247-247", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_194 [label="context.GetJobParameter<string>(''name'')", span="258-258", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_193 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_195 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_203 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_204 [label="x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object)", span="264-265", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_205 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_213 [label="contextCopy.SetJobParameter(''name'', ''value'')", span="285-285", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_214 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="RedisProcessingJob.cs"];
m3_32 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="RedisProcessingJob.cs"];
m3_152 [label="Entry Hangfire.Client.CreateContext.CreateJob()", span="147-147", cluster="Hangfire.Client.CreateContext.CreateJob()", file="RedisProcessingJob.cs"];
m3_85 [label="Entry Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="RedisProcessingJob.cs"];
m3_153 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RedisProcessingJob.cs"];
m3_126 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs"];
m3_127 [label="var context = CreateContext()", span="168-168", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs"];
m3_128 [label="context.SetJobParameter(''name'', ''oldValue'')", span="170-170", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs"];
m3_129 [label="context.SetJobParameter(''name'', ''newValue'')", span="171-171", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs"];
m3_130 [label="Assert.Equal(''newValue'', context.GetJobParameter<string>(''name''))", span="173-173", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs"];
m3_131 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs"];
m3_132 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs"];
m3_133 [label="var context = CreateContext()", span="179-179", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs"];
m3_134 [label="context.SetJobParameter(''name'', ''value'')", span="181-181", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs"];
m3_135 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="183-184", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs"];
m3_136 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs"];
m3_158 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs"];
m3_159 [label="var context = CreateContext()", span="215-215", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs"];
m3_160 [label="_stateMachine\r\n                .Setup(x => x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState))\r\n                .Returns(''id'')", span="216-218", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs"];
m3_161 [label="context.CreateJob()", span="220-220", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs"];
m3_162 [label="Assert.Equal(''id'', context.JobId)", span="222-222", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs"];
m3_163 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs"];
m3_180 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_181 [label="var context = CreateContext()", span="243-243", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_182 [label="context.CreateJob()", span="244-244", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_183 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.SetJobParameter(''name'', ''value''))", span="246-247", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_184 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_94 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs"];
m3_95 [label="var context = CreateContext()", span="121-121", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs"];
m3_96 [label="context.SetJobParameter(''name'', null)", span="122-122", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs"];
m3_97 [label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="124-125", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs"];
m3_98 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs"];
m3_188 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_189 [label="var context = CreateContext()", span="253-253", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_190 [label="context.CreateJob()", span="255-255", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_191 [label="Assert.DoesNotThrow(\r\n                () => context.GetJobParameter<string>(''name''))", span="257-258", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_192 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs"];
m3_109 [label="Entry Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisProcessingJob.cs"];
m3_11 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="RedisProcessingJob.cs"];
m3_77 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs"];
m3_78 [label="var context = CreateContext()", span="102-102", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs"];
m3_79 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="103-104", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs"];
m3_80 [label="Assert.Equal(''name'', exception.ParamName)", span="106-106", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs"];
m3_81 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs"];
m3_140 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_141 [label="var context = CreateContext()", span="190-190", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_142 [label="context.SetJobParameter(''name'', ''value'')", span="191-191", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_143 [label="var contextCopy = new CreateContext(context)", span="192-192", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_144 [label="var value = contextCopy.GetJobParameter<string>(''name'')", span="194-194", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_145 [label="Assert.Equal(''value'', value)", span="196-196", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_146 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs"];
m3_23 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="RedisProcessingJob.cs"];
m3_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="RedisProcessingJob.cs"];
m3_40 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="RedisProcessingJob.cs"];
m3_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object))", span="52-53", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="RedisProcessingJob.cs"];
m3_42 [label="Assert.Equal(''job'', exception.ParamName)", span="55-55", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="RedisProcessingJob.cs"];
m3_43 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="RedisProcessingJob.cs"];
m3_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="RedisProcessingJob.cs"];
m3_102 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs"];
m3_103 [label="var context = CreateContext()", span="131-131", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs"];
m3_104 [label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<int>(null))", span="132-133", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs"];
m3_105 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs"];
m3_218 [label="Hangfire.Core.Tests.Client.CreateContextFacts", span="", file="RedisProcessingJob.cs"];
m3_219 [label=context, span="", file="RedisProcessingJob.cs"];
m3_220 [label=context, span="", file="RedisProcessingJob.cs"];
m3_221 [label=context, span="", file="RedisProcessingJob.cs"];
m3_222 [label=context, span="", file="RedisProcessingJob.cs"];
m3_223 [label=context, span="", file="RedisProcessingJob.cs"];
m3_224 [label=context, span="", file="RedisProcessingJob.cs"];
m3_225 [label=context, span="", file="RedisProcessingJob.cs"];
m3_226 [label=context, span="", file="RedisProcessingJob.cs"];
m3_227 [label=context, span="", file="RedisProcessingJob.cs"];
m3_228 [label=contextCopy, span="", file="RedisProcessingJob.cs"];
m4_17 [label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="29-29", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="RedisProcessingJobFacts.cs"];
m4_18 [label="var processingJob = new RedisProcessingJob(JobId, Queue)", span="31-31", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="RedisProcessingJobFacts.cs"];
m4_19 [label="Assert.Equal(JobId, processingJob.JobId)", span="33-33", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="RedisProcessingJobFacts.cs"];
m4_20 [label="Assert.Equal(Queue, processingJob.Queue)", span="34-34", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="RedisProcessingJobFacts.cs"];
m4_21 [label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="29-29", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="RedisProcessingJobFacts.cs"];
m4_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisProcessingJobFacts.cs"];
m4_0 [label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="11-11", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="RedisProcessingJobFacts.cs"];
m4_1 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(null, Queue))", span="13-14", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="RedisProcessingJobFacts.cs", color=green, community=0];
m4_2 [label="Assert.Equal(''jobId'', exception.ParamName)", span="16-16", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="RedisProcessingJobFacts.cs"];
m4_3 [label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="11-11", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="RedisProcessingJobFacts.cs"];
m4_10 [label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="20-20", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RedisProcessingJobFacts.cs"];
m4_11 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(JobId, null))", span="22-23", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="RedisProcessingJobFacts.cs"];
m4_12 [label="Assert.Equal(''queue'', exception.ParamName)", span="25-25", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="RedisProcessingJobFacts.cs"];
m4_13 [label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="20-20", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RedisProcessingJobFacts.cs"];
m4_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RedisProcessingJobFacts.cs"];
m4_14 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="RedisProcessingJobFacts.cs"];
m4_6 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="RedisProcessingJobFacts.cs"];
m4_7 [label="new RedisProcessingJob(null, Queue)", span="14-14", cluster="lambda expression", color=green, community=0, file="RedisProcessingJobFacts.cs"];
m4_8 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="RedisProcessingJobFacts.cs"];
m4_15 [label="new RedisProcessingJob(JobId, null)", span="23-23", cluster="lambda expression", color=green, community=0, file="RedisProcessingJobFacts.cs"];
m4_16 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="RedisProcessingJobFacts.cs"];
m4_9 [label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", span="23-23", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJobFacts.cs"];
m5_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerConnection.cs"];
m5_119 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m5_120 [label="serverId == null", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m5_122 [label="context == null", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m5_124 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m5_125 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="248-254", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m5_121 [label="throw new ArgumentNullException(''serverId'');", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m5_123 [label="throw new ArgumentNullException(''context'');", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m5_126 [label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m5_97 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m5_98 [label="id == null", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m5_100 [label="name == null", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m5_102 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m5_99 [label="throw new ArgumentNullException(''id'');", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m5_101 [label="throw new ArgumentNullException(''name'');", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m5_103 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m5_127 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs"];
m5_49 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_50 [label="job == null", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_52 [label="parameters == null", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_55 [label="var invocationData = InvocationData.Serialize(job)", span="119-119", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_56 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_57 [label="parameters.Count > 0", span="131-131", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_58 [label="var parameterArray = new object[parameters.Count]", span="133-133", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_60 [label=parameters, span="135-135", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_51 [label="throw new ArgumentNullException(''job'');", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_53 [label="throw new ArgumentNullException(''parameters'');", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_54 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_61 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_64 [label="return jobId;", span="152-152", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_59 [label="int parameterIndex = 0", span="134-134", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_63 [label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_62 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_65 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m5_21 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerConnection.cs"];
m5_0 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs"];
m5_1 [label="connection == null", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs"];
m5_3 [label="options == null", span="38-38", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs"];
m5_5 [label="_connection = connection", span="40-40", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs"];
m5_6 [label="_options = options", span="41-41", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs"];
m5_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs"];
m5_4 [label="throw new ArgumentNullException(''options'');", span="38-38", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs"];
m5_7 [label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs"];
m5_43 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs"];
m5_69 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerConnection.cs"];
m5_72 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_73 [label="id == null", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_76 [label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_74 [label="throw new ArgumentNullException(''id'');", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_75 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_77 [label="jobData == null", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_79 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_80 [label="invocationData.Arguments = jobData.Arguments", span="169-169", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_86 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_78 [label="return null;", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_83 [label="job = invocationData.Deserialize()", span="176-176", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_81 [label="Job job = null", span="171-171", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_82 [label="JobLoadException loadException = null", span="172-172", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_84 [label=JobLoadException, span="178-178", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_85 [label="loadException = ex", span="180-180", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_87 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m5_13 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m5_14 [label="return new SqlServerWriteOnlyTransaction(_connection);", span="51-51", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m5_15 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m5_118 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs"];
m5_44 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerConnection.cs"];
m5_48 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerConnection.cs"];
m5_20 [label="Entry SqlServerDistributedLock.cstr", span="", cluster="SqlServerDistributedLock.cstr", file="SqlServerConnection.cs"];
m5_42 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerConnection.cs"];
m5_68 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs"];
m5_22 [label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_23 [label="queues == null", span="63-63", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_25 [label="queues.Length == 0", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_31 [label="cancellationToken.ThrowIfCancellationRequested()", span="82-82", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_32 [label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="84-87", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_24 [label="throw new ArgumentNullException(''queues'');", span="63-63", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_26 [label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_27 [label="dynamic idAndQueue", span="66-66", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_28 [label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="68-73", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_29 [label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="77-77", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_30 [label="var currentQueryIndex = 0", span="78-78", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_34 [label="currentQueryIndex == fetchConditions.Length - 1", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_37 [label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="98-98", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_35 [label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="93-93", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_33 [label="idAndQueue == null", span="89-89", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_38 [label="idAndQueue == null", span="99-99", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_39 [label="return new SqlServerProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="101-103", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", color=green, community=0];
m5_36 [label="cancellationToken.ThrowIfCancellationRequested()", span="94-94", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_40 [label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m5_138 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m5_139 [label="timeOut.Duration() != timeOut", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m5_140 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="279-279", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m5_141 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="282-284", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m5_142 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m5_12 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerConnection.cs"];
m5_143 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs"];
m5_9 [label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m5_10 [label="_connection.Dispose()", span="46-46", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m5_11 [label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m5_104 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs"];
m5_105 [label="id == null", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", color=red, community=0, file="SqlServerConnection.cs"];
m5_107 [label="queue == null", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", color=red, community=0, file="SqlServerConnection.cs"];
m5_109 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="221-222", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", color=red, community=1, file="SqlServerConnection.cs"];
m5_106 [label="throw new ArgumentNullException(''id'');", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", color=red, community=0, file="SqlServerConnection.cs"];
m5_108 [label="throw new ArgumentNullException(''queue'');", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", color=red, community=0, file="SqlServerConnection.cs"];
m5_110 [label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs"];
m5_90 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m5_91 [label="id == null", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m5_93 [label="name == null", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m5_95 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m5_92 [label="throw new ArgumentNullException(''id'');", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m5_94 [label="throw new ArgumentNullException(''name'');", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m5_96 [label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m5_16 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerConnection.cs"];
m5_111 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m5_112 [label="key == null", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m5_114 [label="toScore < fromScore", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m5_116 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m5_113 [label="throw new ArgumentNullException(''key'');", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m5_115 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m5_117 [label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m5_67 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs"];
m5_17 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs"];
m5_18 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="56-58", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs"];
m5_19 [label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs"];
m5_41 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs"];
m5_70 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerConnection.cs"];
m5_46 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerConnection.cs"];
m5_89 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="SqlServerConnection.cs"];
m5_71 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerConnection.cs"];
m5_88 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs"];
m5_128 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m5_129 [label="serverId == null", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m5_131 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="261-263", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m5_130 [label="throw new ArgumentNullException(''serverId'');", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m5_132 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m5_133 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m5_134 [label="serverId == null", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m5_136 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="270-272", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m5_135 [label="throw new ArgumentNullException(''serverId'');", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m5_137 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m5_47 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", span="23-23", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerConnection.cs"];
m5_45 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs"];
m5_66 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="SqlServerConnection.cs"];
m5_144 [label="HangFire.SqlServer.SqlServerConnection", span="", file="SqlServerConnection.cs"];
m6_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerProcessingJob.cs"];
m6_0 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", span="23-23", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs"];
m6_1 [label="jobId == null", span="25-25", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs", color=green, community=0];
m6_3 [label="queue == null", span="26-26", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs", color=green, community=0];
m6_5 [label="JobId = jobId", span="28-28", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs"];
m6_6 [label="Queue = queue", span="29-29", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs", color=green, community=0];
m6_2 [label="throw new ArgumentNullException(''jobId'');", span="25-25", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs", color=green, community=0];
m6_4 [label="throw new ArgumentNullException(''queue'');", span="26-26", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs", color=green, community=0];
m6_7 [label="Exit HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", span="23-23", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs"];
m6_9 [label="HangFire.SqlServer.SqlServerProcessingJob", span="", file="SqlServerProcessingJob.cs"];
m7_0 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="11-11", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerProcessingJobFacts.cs"];
m7_1 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(null, Queue))", span="13-14", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_2 [label="Assert.Equal(''jobId'', exception.ParamName)", span="16-16", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerProcessingJobFacts.cs"];
m7_3 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="11-11", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerProcessingJobFacts.cs"];
m7_26 [label="Entry HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="SqlServerProcessingJobFacts.cs"];
m7_19 [label="Assert.Equal(JobId, processingJob.JobId)", span="33-33", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerProcessingJobFacts.cs"];
m7_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerProcessingJobFacts.cs"];
m7_17 [label="Exit HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", span="69-69", cluster="HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", file="SqlServerProcessingJobFacts.cs"];
m7_18 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", color=red, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_20 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", file="SqlServerProcessingJobFacts.cs"];
m7_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="SqlServerProcessingJobFacts.cs"];
m7_22 [label="Entry HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="84-84", cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="SqlServerProcessingJobFacts.cs"];
m7_35 [label="yield return filter;", span="96-96", cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_30 [label="var visitedTypes = new HashSet<Type>()", span="87-87", cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_31 [label=filters, span="89-89", cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_34 [label="!visitedTypes.Contains(filterInstanceType) || AllowMultiple(filterInstance)", span="94-94", cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_36 [label="visitedTypes.Add(filterInstanceType)", span="97-97", cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_32 [label="var filterInstance = filter.Instance", span="91-91", cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_33 [label="var filterInstanceType = filterInstance.GetType()", span="92-92", cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_37 [label="Exit HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="84-84", cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="SqlServerProcessingJobFacts.cs"];
m7_42 [label="Entry HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", span="104-104", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_43 [label="x == null && y == null", span="107-107", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_44 [label="return 0;", span="109-109", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_45 [label="x == null", span="111-111", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_46 [label="return -1;", span="113-113", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_47 [label="y == null", span="115-115", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_48 [label="return 1;", span="117-117", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_49 [label="x.Order < y.Order", span="122-122", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_51 [label="x.Order > y.Order", span="126-126", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_53 [label="x.Scope < y.Scope", span="133-133", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_55 [label="x.Scope > y.Scope", span="137-137", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_50 [label="return -1;", span="124-124", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_52 [label="return 1;", span="128-128", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_54 [label="return -1;", span="135-135", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_56 [label="return 1;", span="139-139", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_57 [label="return 0;", span="142-142", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_58 [label="Exit HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", span="104-104", cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs"];
m7_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerProcessingJobFacts.cs"];
m7_39 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SqlServerProcessingJobFacts.cs"];
m7_9 [label="return true;", span="58-58", cluster="HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", file="SqlServerProcessingJobFacts.cs", color=green, community=0];
m7_12 [label="Assert.Equal(''queue'', exception.ParamName)", span="25-25", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerProcessingJobFacts.cs"];
m7_13 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_14 [label="Entry lambda expression", span="23-23", cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_15 [label="new SqlServerProcessingJob(JobId, null)", span="23-23", cluster="lambda expression", color=red, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_16 [label="Exit lambda expression", span="23-23", cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_6 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="SqlServerProcessingJobFacts.cs"];
m7_8 [label="Exit lambda expression", span="14-14", cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_7 [label="new SqlServerProcessingJob(null, Queue)", span="14-14", cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", color=red, community=0];
m7_10 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_11 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(JobId, null))", span="22-23", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerProcessingJobFacts.cs", color=red, community=0];
m7_40 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SqlServerProcessingJobFacts.cs"];
m7_24 [label="fp.GetFilters(method)", span="77-77", cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_28 [label=filter, span="78-78", cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs"];
m7_41 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="SqlServerProcessingJobFacts.cs"];
m7_38 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SqlServerProcessingJobFacts.cs"];
m7_59 [label="HangFire.Common.Filters.JobFilterProviderCollection", span="", file="SqlServerProcessingJobFacts.cs"];
m7_60 [label="HangFire.Common.JobMethod", span="", file="SqlServerProcessingJobFacts.cs"];
m8_82 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="Worker.cs"];
m8_5 [label="var count = 1", span="25-25", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_41 [label="i++", span="88-88", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_0 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs"];
m8_1 [label="context == null", span="29-29", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs"];
m8_2 [label="throw new ArgumentNullException(''context'');", span="29-29", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs"];
m8_3 [label="_context = context", span="31-31", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs"];
m8_4 [label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs"];
m8_10 [label="Exit HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs"];
m8_6 [label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m8_44 [label="var number = count++", span="97-97", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_7 [label="var connection = _context.Storage.GetConnection()", span="36-36", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m8_55 [label="Console.WriteLine(''Press Enter to exit...'')", span="133-133", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_8 [label="var nextJob = connection.FetchNextJob(_context.Queues, cancellationToken)", span="38-38", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m8_9 [label="ProcessJob(nextJob.JobId, connection, _context.PerformanceProcess)", span="42-42", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", color=green, community=0];
m8_11 [label="Entry HangFire.JobStorage.GetConnection()", span="56-56", cluster="HangFire.JobStorage.GetConnection()", color=red, community=0, file="Worker.cs"];
m8_12 [label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs"];
m8_21 [label="IState state", span="85-85", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_22 [label="var jobData = connection.GetJobData(jobId)", span="89-89", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_30 [label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="107-110", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_31 [label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="115-115", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_36 [label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37", cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs"];
m8_37 [label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27", cluster="HangFire.Storage.JobData.EnsureLoaded()", file="Worker.cs"];
m8_42 [label="HangFire.Server.Worker", span="", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_43 [label="var seconds = int.Parse(command.Substring(2))", span="96-96", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_46 [label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="101-101", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_49 [label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="107-107", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_50 [label="var workCount = int.Parse(command.Substring(5))", span="111-111", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_13 [label="Entry HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="64-64", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="Worker.cs"];
m8_14 [label="Entry HangFire.Server.Worker.ToString()", span="59-59", cluster="HangFire.Server.Worker.ToString()", color=red, community=0, file="Worker.cs"];
m8_15 [label="return ''Worker #'' + _context.WorkerNumber;", span="61-61", cluster="HangFire.Server.Worker.ToString()", color=red, community=0, file="Worker.cs"];
m8_17 [label="var stateMachine = _context.StateMachineFactory.Create(connection)", span="69-69", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="Worker.cs"];
m8_18 [label="var processingState = new ProcessingState(_context.ServerId)", span="70-70", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="Worker.cs"];
m8_16 [label="Exit HangFire.Server.Worker.ToString()", span="59-59", cluster="HangFire.Server.Worker.ToString()", color=red, community=0, file="Worker.cs"];
m8_19 [label="!stateMachine.TryToChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="72-75", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="Worker.cs"];
m8_20 [label="return;", span="77-77", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="Worker.cs"];
m8_23 [label="jobData.EnsureLoaded()", span="90-90", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_24 [label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="92-92", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_26 [label="state = new SucceededState()", span="96-96", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_25 [label="process.Run(performContext, jobData.Job)", span="94-94", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_27 [label=JobPerformanceException, span="98-98", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_28 [label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="100-103", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_29 [label=Exception, span="105-105", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_32 [label="Exit HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="64-64", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m8_33 [label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="Worker.cs"];
m8_35 [label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="24-24", cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="Worker.cs"];
m8_34 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="Worker.cs"];
m8_38 [label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35", cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="Worker.cs"];
m8_39 [label="Entry HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="20-20", cluster="HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="Worker.cs"];
m8_40 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="Worker.cs"];
m8_45 [label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="98-98", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_47 [label="BackgroundJob.Enqueue<Services>(x => x.Recurring())", span="103-103", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_48 [label="Console.WriteLine(''Recurring job added'')", span="104-104", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_51 [label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="112-122", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_52 [label="Console.WriteLine(''Jobs enqueued.'')", span="123-123", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_53 [label=Exception, span="125-125", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_54 [label="Console.WriteLine(ex.Message)", span="127-127", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_56 [label="Console.ReadLine()", span="134-134", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_57 [label="Exit ConsoleSample.Program.Main()", span="13-13", cluster="ConsoleSample.Program.Main()", file="Worker.cs"];
m8_61 [label="Entry HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", span="56-56", cluster="HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", file="Worker.cs"];
m8_108 [label="Entry ConsoleSample.Services.EmptyCritical()", span="17-17", cluster="ConsoleSample.Services.EmptyCritical()", file="Worker.cs"];
m8_60 [label="Entry HangFire.Filters.RetryAttribute.RetryAttribute()", span="28-28", cluster="HangFire.Filters.RetryAttribute.RetryAttribute()", file="Worker.cs"];
m8_86 [label="Entry ConsoleSample.Services.Error()", span="22-22", cluster="ConsoleSample.Services.Error()", file="Worker.cs"];
m8_73 [label="Entry HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="138-138", cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="Worker.cs"];
m8_69 [label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="97-97", cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="Worker.cs"];
m8_68 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="Worker.cs"];
m8_72 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="Worker.cs"];
m8_62 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="Worker.cs"];
m8_78 [label="Entry ConsoleSample.Services.Random(int)", span="35-35", cluster="ConsoleSample.Services.Random(int)", file="Worker.cs"];
m8_91 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="Worker.cs"];
m8_66 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="Worker.cs"];
m8_92 [label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="52-52", cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="Worker.cs"];
m8_63 [label="Entry System.Console.ReadLine()", span="0-0", cluster="System.Console.ReadLine()", file="Worker.cs"];
m8_99 [label="Entry ConsoleSample.Services.Recurring()", span="29-29", cluster="ConsoleSample.Services.Recurring()", file="Worker.cs"];
m8_105 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="Worker.cs"];
m8_76 [label="x.Random(number)", span="49-49", cluster="lambda expression", color=red, community=0, file="Worker.cs"];
m8_75 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="Worker.cs"];
m8_79 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="Worker.cs"];
m8_83 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="Worker.cs"];
m8_87 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="Worker.cs"];
m8_94 [label="x.Random(number)", span="98-98", cluster="lambda expression", file="Worker.cs"];
m8_93 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="Worker.cs"];
m8_96 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="Worker.cs"];
m8_100 [label="Entry lambda expression", span="112-122", cluster="lambda expression", file="Worker.cs"];
m8_77 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="Worker.cs"];
m8_80 [label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="66-66", cluster="lambda expression", file="Worker.cs"];
m8_81 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="Worker.cs"];
m8_84 [label="x.Error()", span="81-81", cluster="lambda expression", file="Worker.cs"];
m8_85 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="Worker.cs"];
m8_88 [label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="90-90", cluster="lambda expression", file="Worker.cs"];
m8_89 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="Worker.cs"];
m8_95 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="Worker.cs"];
m8_97 [label="x.Recurring()", span="103-103", cluster="lambda expression", file="Worker.cs"];
m8_98 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="Worker.cs"];
m8_101 [label="i % 2 == 0", span="114-114", cluster="lambda expression", file="Worker.cs"];
m8_102 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="116-116", cluster="lambda expression", file="Worker.cs"];
m8_103 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="120-120", cluster="lambda expression", file="Worker.cs"];
m8_104 [label="Exit lambda expression", span="112-122", cluster="lambda expression", file="Worker.cs"];
m8_109 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="Worker.cs"];
m8_106 [label="x.EmptyCritical()", span="116-116", cluster="lambda expression", file="Worker.cs"];
m8_107 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="Worker.cs"];
m8_110 [label="x.EmptyDefault()", span="120-120", cluster="lambda expression", file="Worker.cs"];
m8_111 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="Worker.cs"];
m8_64 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="Worker.cs"];
m8_74 [label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0", cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="Worker.cs"];
m8_90 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="Worker.cs"];
m8_65 [label="Entry HangFire.BackgroundJobServer.Start()", span="93-93", cluster="HangFire.BackgroundJobServer.Start()", file="Worker.cs"];
m8_59 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="Worker.cs"];
m8_71 [label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="75-75", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="Worker.cs"];
m8_70 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Worker.cs"];
m8_58 [label="Entry ConsoleLogFactory.cstr", span="", cluster="ConsoleLogFactory.cstr", file="Worker.cs"];
m8_112 [label="Entry ConsoleSample.Services.EmptyDefault()", span="12-12", cluster="ConsoleSample.Services.EmptyDefault()", file="Worker.cs"];
m8_67 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="Worker.cs"];
m8_113 [label=number, span="", file="Worker.cs"];
m8_114 [label=number, span="", file="Worker.cs"];
m9_14 [label="Given(String.Format(''a job in the '{0}' queue'', row[''Queue'']))", span="40-40", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs"];
m9_15 [label="i++", span="38-38", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs"];
m9_16 [label="_queues = table.Rows.Select(x => x[''Queue'']).ToList()", span="44-44", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs"];
m9_17 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs"];
m9_57 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="86-86", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="WorkerFacts.cs"];
m9_58 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="92-92", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="WorkerFacts.cs"];
m9_59 [label="Assert.IsNotNull(_exception)", span="94-94", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="WorkerFacts.cs", color=green, community=0];
m9_60 [label="Assert.AreEqual(typeof(OperationCanceledException).Name, _exception.GetType().Name)", span="95-95", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="WorkerFacts.cs"];
m9_61 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="92-92", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="WorkerFacts.cs"];
m9_62 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="WorkerFacts.cs"];
m9_63 [label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="99-99", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="WorkerFacts.cs"];
m9_64 [label=_queues, span="101-101", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="WorkerFacts.cs"];
m9_65 [label="Then(String.Format(''the '{0}' queue is empty'', queue))", span="103-103", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="WorkerFacts.cs"];
m9_25 [label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="48-48", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs"];
m9_29 [label=Exception, span="61-61", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs"];
m9_21 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="WorkerFacts.cs"];
m9_39 [label="this.FeatureBackground()", span="91-91", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs"];
m9_66 [label="Entry Unk.When", span="", cluster="Unk.When", file="WorkerFacts.cs"];
m9_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs"];
m9_26 [label="var cts = new CancellationTokenSource()", span="50-50", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs"];
m9_27 [label="Task.Factory.StartNew(() =>\r\n                {\r\n                    Thread.Sleep(TimeSpan.FromMilliseconds(100)); \r\n                    cts.Cancel();\r\n                })", span="51-55", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs"];
m9_28 [label="_payload = _fetcher.DequeueJob(cts.Token)", span="59-59", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs"];
m9_9 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="WorkerFacts.cs"];
m9_10 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs"];
m9_11 [label="table.Rows", span="36-36", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs"];
m9_12 [label="var i = 0", span="38-38", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs"];
m9_35 [label="Entry lambda expression", span="51-55", cluster="lambda expression", file="WorkerFacts.cs"];
m9_67 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="WorkerFacts.cs"];
m9_68 [label="HangFire.Tests.JobFetcherSteps", span="", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs"];
m9_69 [label=cts, span="", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs"];
m9_70 [label="this.FeatureBackground()", span="156-156", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs"];
m9_71 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs"];
m9_72 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="160-160", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs"];
m9_73 [label="testRunner.Then(''the \'test\' queue should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs"];
m9_74 [label="this.ScenarioCleanup()", span="164-164", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs"];
m9_75 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs"];
m9_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="WorkerFacts.cs"];
m9_34 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="WorkerFacts.cs"];
m9_5 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="WorkerFacts.cs"];
m9_41 [label="this.ScenarioCleanup()", span="95-95", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs"];
m9_0 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs"];
m9_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs"];
m9_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Enqueued state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs"];
m9_54 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs"];
m9_40 [label="testRunner.Then(''the state name should be equal to \'Enqueued\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs"];
m9_18 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", file="WorkerFacts.cs"];
m9_7 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="WorkerFacts.cs"];
m9_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="WorkerFacts.cs"];
m9_55 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="WorkerFacts.cs"];
m9_56 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="WorkerFacts.cs"];
m9_19 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="WorkerFacts.cs"];
m9_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="WorkerFacts.cs"];
m9_22 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="WorkerFacts.cs"];
m9_23 [label="x[''Queue'']", span="44-44", cluster="lambda expression", file="WorkerFacts.cs"];
m9_24 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="WorkerFacts.cs"];
m9_32 [label="testRunner.And(''the Enqueued state with the \'test\' value for the \'queue\' argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="WorkerFacts.cs"];
m9_33 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="WorkerFacts.cs"];
m9_30 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="WorkerFacts.cs"];
m9_31 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="WorkerFacts.cs"];
m9_37 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Enqueued\''', ((string[])(null)))", span="87-87", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs"];
m9_36 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", span="85-85", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs"];
m9_38 [label="this.ScenarioSetup(scenarioInfo)", span="89-89", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs"];
m9_43 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="WorkerFacts.cs"];
m9_45 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs"];
m9_46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="104-104", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs"];
m9_47 [label="this.ScenarioSetup(scenarioInfo)", span="106-106", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs"];
m9_48 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs"];
m9_49 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="WorkerFacts.cs"];
m9_50 [label="Assert.IsNotNull(_payload)", span="79-79", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="WorkerFacts.cs"];
m9_51 [label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", span="80-80", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="WorkerFacts.cs"];
m9_52 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="WorkerFacts.cs"];
m9_53 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="WorkerFacts.cs"];
m9_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="WorkerFacts.cs"];
m9_4 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs"];
m9_42 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", span="85-85", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs"];
m9_8 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="WorkerFacts.cs"];
m9_76 [label="HangFire.Tests.States.EnqueuedStateFeature", span="", file="WorkerFacts.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=0, style=solid];
m1_28 -> m1_23  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=2, style=dotted];
m1_30 -> m1_33  [key=2, style=dotted];
m1_29 -> m1_31  [key=0, style=solid];
m1_29 -> m1_24  [key=2, style=dotted];
m1_31 -> m1_27  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_4  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m1_0 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m1_0 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_0 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m1_0 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_13  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_13  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid, color=red];
m1_3 -> m1_13  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid, color=red];
m1_4 -> m1_13  [key=2, style=dotted, color=red];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_13  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_14  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_15  [key=2, style=dotted];
m1_12 -> m1_0  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=0, style=solid];
m1_17 -> m1_23  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_15  [key=2, style=dotted];
m1_21 -> m1_26  [key=2, style=dotted];
m1_18 -> m1_22  [key=0, style=solid];
m1_18 -> m1_24  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_20 -> m1_25  [key=2, style=dotted];
m1_22 -> m1_16  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=2, style=dotted];
m1_37 -> m1_34  [key=0, style=bold, color=blue];
m1_39 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m1_39 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m2_51 -> m2_86  [key=0, style=solid];
m2_51 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_89  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_90  [key=2, style=dotted];
m2_88 -> m2_51  [key=0, style=bold, color=blue];
m2_17 -> m2_107  [key=0, style=solid];
m2_17 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m2_17 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m2_17 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m2_17 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_109  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_111  [key=0, style=solid];
m2_109 -> m2_115  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_113  [key=0, style=solid];
m2_111 -> m2_116  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_117  [key=2, style=dotted];
m2_112 -> m2_118  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_119  [key=2, style=dotted];
m2_108 -> m2_114  [key=0, style=solid];
m2_108 -> m2_14  [key=2, style=dotted];
m2_110 -> m2_114  [key=0, style=solid];
m2_110 -> m2_14  [key=2, style=dotted];
m2_114 -> m2_17  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m2_26 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_26 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m2_26 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m2_26 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m2_26 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m2_26 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_42  [key=2, style=dotted];
m2_33 -> m2_43  [key=2, style=dotted];
m2_33 -> m2_21  [key=2, style=dotted];
m2_33 -> m2_44  [key=2, style=dotted];
m2_33 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_45  [key=2, style=dotted];
m2_34 -> m2_46  [key=2, style=dotted];
m2_34 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_34 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_47  [key=2, style=dotted];
m2_35 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m2_35 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_48  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_49  [key=2, style=dotted];
m2_37 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m2_28 -> m2_41  [key=0, style=solid];
m2_28 -> m2_14  [key=2, style=dotted];
m2_30 -> m2_41  [key=0, style=solid];
m2_30 -> m2_14  [key=2, style=dotted];
m2_32 -> m2_41  [key=0, style=solid];
m2_32 -> m2_14  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_50  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_51  [key=2, style=dotted];
m2_41 -> m2_26  [key=0, style=bold, color=blue];
m2_52 -> m2_53  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_19 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_18 -> m2_19  [key=0, style=solid];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=2, style=dotted];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_52  [key=0, style=bold, color=blue];
m2_50 -> m2_91  [key=0, style=solid];
m2_50 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_50 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_50 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_50 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_98  [key=0, style=solid];
m2_91 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m2_92 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_99  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_91  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_101  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_100  [key=2, style=dotted];
m2_95 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m2_97 -> m2_91  [key=0, style=solid];
m2_97 -> m2_102  [key=2, style=dotted];
m2_98 -> m2_50  [key=0, style=bold, color=blue];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_55 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_55 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_55 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m2_55 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_55 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=0, style=solid];
m2_56 -> m2_78  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_79  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_80  [key=2, style=dotted];
m2_61 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m2_61 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m2_61 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=0, style=solid];
m2_64 -> m2_81  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_83  [key=2, style=dotted];
m2_69 -> m2_84  [key=2, style=dotted];
m2_69 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_69 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_48  [key=2, style=dotted];
m2_57 -> m2_77  [key=0, style=solid];
m2_57 -> m2_14  [key=2, style=dotted];
m2_59 -> m2_77  [key=0, style=solid];
m2_59 -> m2_14  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_70  [key=0, style=solid];
m2_67 -> m2_82  [key=2, style=dotted];
m2_67 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=jobMethod];
m2_67 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=jobMethod];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_49  [key=2, style=dotted];
m2_71 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label=stateChangingContext];
m2_71 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=stateChangingContext];
m2_71 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=stateChangingContext];
m2_63 -> m2_77  [key=0, style=solid];
m2_65 -> m2_77  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_47  [key=2, style=dotted];
m2_74 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m2_73 -> m2_77  [key=0, style=solid];
m2_73 -> m2_85  [key=2, style=dotted];
m2_73 -> m2_51  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_50  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_51  [key=2, style=dotted];
m2_77 -> m2_55  [key=0, style=bold, color=blue];
m2_47 -> m2_103  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=2, style=dotted];
m2_103 -> m2_106  [key=2, style=dotted];
m2_104 -> m2_47  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>"];
m2_2 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m2_2 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m2_2 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m2_2 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m2_2 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_15  [key=2, style=dotted];
m2_8 -> m2_16  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_4 -> m2_13  [key=0, style=solid];
m2_4 -> m2_14  [key=2, style=dotted];
m2_6 -> m2_13  [key=0, style=solid];
m2_6 -> m2_14  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=0, style=solid];
m2_10 -> m2_9  [key=0, style=solid];
m2_10 -> m2_17  [key=2, style=dotted];
m2_13 -> m2_2  [key=0, style=bold, color=blue];
m2_120 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_120 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_121 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_62  [key=2, style=dotted];
m3_73 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_71  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_63  [key=2, style=dotted];
m3_76 -> m3_72  [key=0, style=bold, color=blue];
m3_9 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisProcessingJob"];
m3_9 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisProcessingJob"];
m3_167 -> m3_168  [key=0, style=solid];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_62  [key=2, style=dotted];
m3_168 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_85  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_152  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_153  [key=2, style=dotted];
m3_171 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_172 -> m3_167  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_8  [key=2, style=dotted];
m3_1 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_3  [key=0, style=solid, color=red];
m3_2 -> m3_9  [key=2, style=dotted];
m3_2 -> m3_7  [key=0, style=solid, color=green];
m3_2 -> m3_8  [key=2, style=dotted, color=green];
m3_3 -> m3_4  [key=0, style=solid, color=red];
m3_3 -> m3_10  [key=2, style=dotted, color=red];
m3_3 -> m3_5  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_7  [key=0, style=solid];
m3_4 -> m3_8  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_12  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_13  [key=2, style=dotted];
m3_6 -> m3_14  [key=2, style=dotted];
m3_6 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_7 -> m3_0  [key=0, style=bold, color=blue];
m3_33 -> m3_34  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_22  [key=2, style=dotted];
m3_34 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_28  [key=2, style=dotted];
m3_36 -> m3_33  [key=0, style=bold, color=blue];
m3_86 -> m3_87  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_62  [key=2, style=dotted];
m3_87 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_90  [key=2, style=dotted];
m3_88 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_89 -> m3_86  [key=0, style=bold, color=blue];
m3_147 -> m3_148  [key=0, style=solid];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_62  [key=2, style=dotted];
m3_148 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_148 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_152  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_153  [key=2, style=dotted];
m3_150 -> m3_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_151 -> m3_147  [key=0, style=bold, color=blue];
m3_47 -> m3_48  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_22  [key=2, style=dotted];
m3_48 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_28  [key=2, style=dotted];
m3_50 -> m3_47  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_3  [key=3, color=red, style=bold, label="Property variable string JobId"];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_22  [key=2, style=dotted];
m3_25 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=2, style=dotted];
m3_27 -> m3_24  [key=0, style=bold, color=blue];
m3_120 -> m3_121  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_62  [key=2, style=dotted];
m3_121 -> m3_123  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_121 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_85  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_85  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_109  [key=2, style=dotted];
m3_124 -> m3_28  [key=2, style=dotted];
m3_125 -> m3_120  [key=0, style=bold, color=blue];
m3_206 -> m3_207  [key=0, style=solid];
m3_207 -> m3_208  [key=0, style=solid];
m3_207 -> m3_62  [key=2, style=dotted];
m3_207 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_152  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_71  [key=2, style=dotted];
m3_209 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m3_210 -> m3_211  [key=0, style=solid];
m3_210 -> m3_22  [key=2, style=dotted];
m3_210 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_211 -> m3_206  [key=0, style=bold, color=blue];
m3_62 -> m3_216  [key=0, style=solid];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_32  [key=2, style=dotted];
m3_217 -> m3_62  [key=0, style=bold, color=blue];
m3_115 -> m3_116  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_62  [key=2, style=dotted];
m3_116 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_85  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_109  [key=2, style=dotted];
m3_118 -> m3_28  [key=2, style=dotted];
m3_119 -> m3_115  [key=0, style=bold, color=blue];
m3_196 -> m3_197  [key=0, style=solid];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_13  [key=2, style=dotted];
m3_197 -> m3_14  [key=2, style=dotted];
m3_197 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_62  [key=2, style=dotted];
m3_198 -> m3_200  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_199 -> m3_200  [key=0, style=solid];
m3_199 -> m3_152  [key=2, style=dotted];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_71  [key=2, style=dotted];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_28  [key=2, style=dotted];
m3_202 -> m3_196  [key=0, style=bold, color=blue];
m3_110 -> m3_111  [key=0, style=solid];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_62  [key=2, style=dotted];
m3_111 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_109  [key=2, style=dotted];
m3_112 -> m3_28  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_109  [key=2, style=dotted];
m3_113 -> m3_28  [key=2, style=dotted];
m3_114 -> m3_110  [key=0, style=bold, color=blue];
m3_54 -> m3_55  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_62  [key=2, style=dotted];
m3_55 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_55 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_55 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_55 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_63  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_63  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_63  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_64  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_65  [key=2, style=dotted];
m3_61 -> m3_54  [key=0, style=bold, color=blue];
m3_18 -> m3_215  [key=0, style=solid];
m3_215 -> m3_18  [key=0, style=bold, color=blue];
m3_66 -> m3_67  [key=0, style=solid];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_62  [key=2, style=dotted];
m3_67 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_71  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_63  [key=2, style=dotted];
m3_70 -> m3_66  [key=0, style=bold, color=blue];
m3_212 -> m3_213  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_17 -> m3_15  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=2, style=dotted];
m3_20 -> m3_23  [key=2, style=dotted];
m3_21 -> m3_19  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [key=2, style=dotted];
m3_31 -> m3_29  [key=0, style=bold, color=blue];
m3_37 -> m3_38  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_32  [key=2, style=dotted];
m3_39 -> m3_37  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_32  [key=2, style=dotted];
m3_46 -> m3_44  [key=0, style=bold, color=blue];
m3_51 -> m3_52  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_32  [key=2, style=dotted];
m3_53 -> m3_51  [key=0, style=bold, color=blue];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_85  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_84 -> m3_82  [key=0, style=bold, color=blue];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_85  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_93 -> m3_91  [key=0, style=bold, color=blue];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_85  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_101 -> m3_99  [key=0, style=bold, color=blue];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_109  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_108 -> m3_106  [key=0, style=bold, color=blue];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_109  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_139 -> m3_137  [key=0, style=bold, color=blue];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_22  [key=2, style=dotted];
m3_155 -> m3_157  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_156 -> m3_154  [key=0, style=bold, color=blue];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_22  [key=2, style=dotted];
m3_165 -> m3_157  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_166 -> m3_164  [key=0, style=bold, color=blue];
m3_173 -> m3_174  [key=0, style=solid];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_22  [key=2, style=dotted];
m3_174 -> m3_157  [key=2, style=dotted];
m3_174 -> m3_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_175 -> m3_173  [key=0, style=bold, color=blue];
m3_176 -> m3_177  [key=0, style=solid];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_179  [key=2, style=dotted];
m3_178 -> m3_176  [key=0, style=bold, color=blue];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_85  [key=2, style=dotted];
m3_185 -> m3_186  [key=0, style=solid];
m3_187 -> m3_185  [key=0, style=bold, color=blue];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_109  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_195 -> m3_193  [key=0, style=bold, color=blue];
m3_203 -> m3_204  [key=0, style=solid];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_22  [key=2, style=dotted];
m3_204 -> m3_157  [key=2, style=dotted];
m3_205 -> m3_203  [key=0, style=bold, color=blue];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_85  [key=2, style=dotted];
m3_214 -> m3_212  [key=0, style=bold, color=blue];
m3_126 -> m3_127  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_62  [key=2, style=dotted];
m3_127 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_127 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_85  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_85  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_109  [key=2, style=dotted];
m3_130 -> m3_28  [key=2, style=dotted];
m3_131 -> m3_126  [key=0, style=bold, color=blue];
m3_132 -> m3_133  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_62  [key=2, style=dotted];
m3_133 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_133 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_85  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_22  [key=2, style=dotted];
m3_135 -> m3_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_136 -> m3_132  [key=0, style=bold, color=blue];
m3_158 -> m3_159  [key=0, style=solid];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_62  [key=2, style=dotted];
m3_159 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_159 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_159 -> m3_162  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> m3_13  [key=2, style=dotted];
m3_160 -> m3_14  [key=2, style=dotted];
m3_160 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_152  [key=2, style=dotted];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_28  [key=2, style=dotted];
m3_163 -> m3_158  [key=0, style=bold, color=blue];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_62  [key=2, style=dotted];
m3_181 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_181 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_152  [key=2, style=dotted];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_22  [key=2, style=dotted];
m3_183 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_184 -> m3_180  [key=0, style=bold, color=blue];
m3_94 -> m3_95  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_62  [key=2, style=dotted];
m3_95 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_95 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_85  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_90  [key=2, style=dotted];
m3_97 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_98 -> m3_94  [key=0, style=bold, color=blue];
m3_188 -> m3_189  [key=0, style=solid];
m3_189 -> m3_190  [key=0, style=solid];
m3_189 -> m3_62  [key=2, style=dotted];
m3_189 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_189 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_190 -> m3_191  [key=0, style=solid];
m3_190 -> m3_152  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_90  [key=2, style=dotted];
m3_191 -> m3_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_192 -> m3_188  [key=0, style=bold, color=blue];
m3_77 -> m3_78  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_62  [key=2, style=dotted];
m3_78 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_22  [key=2, style=dotted];
m3_79 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_28  [key=2, style=dotted];
m3_81 -> m3_77  [key=0, style=bold, color=blue];
m3_140 -> m3_141  [key=0, style=solid];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_62  [key=2, style=dotted];
m3_141 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_85  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_71  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_109  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_28  [key=2, style=dotted];
m3_146 -> m3_140  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_22  [key=2, style=dotted];
m3_41 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_28  [key=2, style=dotted];
m3_43 -> m3_40  [key=0, style=bold, color=blue];
m3_102 -> m3_103  [key=0, style=solid];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_62  [key=2, style=dotted];
m3_103 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_22  [key=2, style=dotted];
m3_104 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_105 -> m3_102  [key=0, style=bold, color=blue];
m3_218 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_218 -> m3_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m3_219 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_220 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_221 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_222 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_223 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_224 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_225 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_226 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_227 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_228 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m4_17 -> m4_18  [key=0, style=solid, color=green];
m4_18 -> m4_19  [key=0, style=solid, color=green];
m4_18 -> m4_9  [key=2, style=dotted, color=green];
m4_18 -> m4_20  [key=1, style=dashed, color=green, label=processingJob];
m4_19 -> m4_20  [key=0, style=solid, color=green];
m4_19 -> m4_5  [key=2, style=dotted, color=green];
m4_20 -> m4_21  [key=0, style=solid, color=green];
m4_20 -> m4_5  [key=2, style=dotted, color=green];
m4_21 -> m4_17  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_4  [key=2, style=dotted, color=green];
m4_1 -> m4_6  [key=1, style=dashed, color=green, label="lambda expression"];
m4_2 -> m4_3  [key=0, style=solid, color=green];
m4_2 -> m4_5  [key=2, style=dotted, color=green];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid, color=green];
m4_11 -> m4_12  [key=0, style=solid, color=green];
m4_11 -> m4_4  [key=2, style=dotted, color=green];
m4_11 -> m4_14  [key=1, style=dashed, color=green, label="lambda expression"];
m4_12 -> m4_13  [key=0, style=solid, color=green];
m4_12 -> m4_5  [key=2, style=dotted, color=green];
m4_13 -> m4_10  [key=0, style=bold, color=blue];
m4_14 -> m4_15  [key=0, style=solid, color=green];
m4_6 -> m4_7  [key=0, style=solid, color=green];
m4_7 -> m4_8  [key=0, style=solid, color=green];
m4_7 -> m4_9  [key=2, style=dotted, color=green];
m4_8 -> m4_6  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid, color=green];
m4_15 -> m4_9  [key=2, style=dotted, color=green];
m4_16 -> m4_14  [key=0, style=bold, color=blue];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_122  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m5_119 -> m5_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m5_119 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_122  [key=0, style=solid];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_124  [key=0, style=solid];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_127  [key=2, style=dotted];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_67  [key=2, style=dotted];
m5_125 -> m5_71  [key=2, style=dotted];
m5_121 -> m5_126  [key=0, style=solid];
m5_121 -> m5_8  [key=2, style=dotted];
m5_123 -> m5_126  [key=0, style=solid];
m5_123 -> m5_8  [key=2, style=dotted];
m5_126 -> m5_119  [key=0, style=bold, color=blue];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_97 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_100  [key=0, style=solid];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_102  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_69  [key=2, style=dotted];
m5_102 -> m5_45  [key=2, style=dotted];
m5_99 -> m5_103  [key=0, style=solid];
m5_99 -> m5_8  [key=2, style=dotted];
m5_101 -> m5_103  [key=0, style=solid];
m5_101 -> m5_8  [key=2, style=dotted];
m5_103 -> m5_97  [key=0, style=bold, color=blue];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m5_49 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m5_49 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m5_49 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m5_49 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m5_49 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_52  [key=0, style=solid];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_54  [key=0, style=solid];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_66  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_67  [key=2, style=dotted];
m5_56 -> m5_68  [key=2, style=dotted];
m5_56 -> m5_69  [key=2, style=dotted];
m5_56 -> m5_70  [key=2, style=dotted];
m5_56 -> m5_48  [key=2, style=dotted];
m5_56 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_56 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_64  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m5_58 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_62  [key=0, style=solid];
m5_51 -> m5_65  [key=0, style=solid];
m5_51 -> m5_8  [key=2, style=dotted];
m5_53 -> m5_65  [key=0, style=solid];
m5_53 -> m5_8  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m5_54 -> m5_54  [key=3, color=darkorchid, style=bold, label="Local variable string createJobSql"];
m5_61 -> m5_60  [key=0, style=solid];
m5_61 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m5_64 -> m5_65  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m5_59 -> m5_30  [key=3, color=darkorchid, style=bold, label="Local variable int parameterIndex"];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_71  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_62  [key=3, color=darkorchid, style=bold, label="Local variable string insertParameterSql"];
m5_65 -> m5_49  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_2 -> m5_7  [key=0, style=solid];
m5_2 -> m5_8  [key=2, style=dotted];
m5_4 -> m5_7  [key=0, style=solid];
m5_4 -> m5_8  [key=2, style=dotted];
m5_7 -> m5_0  [key=0, style=bold, color=blue];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_72 -> m5_77  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.JobData GetJobData"];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_75  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_69  [key=2, style=dotted];
m5_76 -> m5_45  [key=2, style=dotted];
m5_76 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_76 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_76 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_74 -> m5_87  [key=0, style=solid];
m5_74 -> m5_8  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_75  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_79  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_69  [key=2, style=dotted];
m5_79 -> m5_83  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_80 -> m5_81  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_89  [key=2, style=dotted];
m5_78 -> m5_87  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_86  [key=0, style=solid];
m5_83 -> m5_88  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_77  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.Job job"];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_77  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.JobLoadException loadException"];
m5_82 -> m5_84  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.JobLoadException loadException"];
m5_84 -> m5_85  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_87 -> m5_72  [key=0, style=bold, color=blue];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=2, style=dotted];
m5_15 -> m5_13  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_22 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_22 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_25  [key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_27  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_42  [key=2, style=dotted];
m5_31 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_31 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_21  [key=2, style=dotted];
m5_32 -> m5_43  [key=2, style=dotted];
m5_32 -> m5_44  [key=2, style=dotted];
m5_32 -> m5_45  [key=2, style=dotted];
m5_32 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m5_32 -> m5_39  [key=1, style=dashed, color=green, label=idAndQueue];
m5_24 -> m5_40  [key=0, style=solid];
m5_24 -> m5_8  [key=2, style=dotted];
m5_26 -> m5_40  [key=0, style=solid];
m5_26 -> m5_41  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=fetchJobSqlTemplate];
m5_28 -> m5_28  [key=3, color=darkorchid, style=bold, label="Local variable string fetchJobSqlTemplate"];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m5_29 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m5_29 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m5_30 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m5_30 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m5_30 -> m5_30  [key=3, color=darkorchid, style=bold, label="Local variable int currentQueryIndex"];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_37  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_46  [key=2, style=dotted];
m5_35 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_37  [key=0, style=solid];
m5_38 -> m5_30  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid, color=green];
m5_39 -> m5_40  [key=0, style=solid, color=green];
m5_39 -> m5_47  [key=2, style=dotted, color=green];
m5_39 -> m5_48  [key=2, style=dotted, color=green];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_42  [key=2, style=dotted];
m5_36 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_40 -> m5_22  [key=0, style=bold, color=blue];
m5_138 -> m5_139  [key=0, style=solid];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_141  [key=0, style=solid];
m5_139 -> m5_143  [key=2, style=dotted];
m5_139 -> m5_139  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m5_140 -> m5_142  [key=0, style=solid];
m5_140 -> m5_41  [key=2, style=dotted];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_43  [key=2, style=dotted];
m5_141 -> m5_68  [key=2, style=dotted];
m5_141 -> m5_71  [key=2, style=dotted];
m5_141 -> m5_141  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m5_142 -> m5_138  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=2, style=dotted];
m5_11 -> m5_9  [key=0, style=bold, color=blue];
m5_104 -> m5_105  [key=0, style=solid, color=red];
m5_104 -> m5_107  [key=1, style=dashed, color=red, label=string];
m5_104 -> m5_109  [key=1, style=dashed, color=red, label=string];
m5_105 -> m5_106  [key=0, style=solid, color=red];
m5_105 -> m5_107  [key=0, style=solid, color=red];
m5_107 -> m5_108  [key=0, style=solid, color=red];
m5_107 -> m5_109  [key=0, style=solid, color=red];
m5_109 -> m5_110  [key=0, style=solid, color=red];
m5_109 -> m5_71  [key=2, style=dotted, color=red];
m5_106 -> m5_110  [key=0, style=solid, color=red];
m5_106 -> m5_8  [key=2, style=dotted, color=red];
m5_108 -> m5_110  [key=0, style=solid, color=red];
m5_108 -> m5_8  [key=2, style=dotted, color=red];
m5_110 -> m5_104  [key=0, style=bold, color=blue];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_90 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_93  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_95  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_71  [key=2, style=dotted];
m5_92 -> m5_96  [key=0, style=solid];
m5_92 -> m5_8  [key=2, style=dotted];
m5_94 -> m5_96  [key=0, style=solid];
m5_94 -> m5_8  [key=2, style=dotted];
m5_96 -> m5_90  [key=0, style=bold, color=blue];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_114  [key=1, style=dashed, color=darkseagreen4, label=double];
m5_111 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_114  [key=0, style=solid];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_116  [key=0, style=solid];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_69  [key=2, style=dotted];
m5_116 -> m5_45  [key=2, style=dotted];
m5_113 -> m5_117  [key=0, style=solid];
m5_113 -> m5_8  [key=2, style=dotted];
m5_115 -> m5_117  [key=0, style=solid];
m5_115 -> m5_118  [key=2, style=dotted];
m5_117 -> m5_111  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=2, style=dotted];
m5_18 -> m5_21  [key=2, style=dotted];
m5_19 -> m5_17  [key=0, style=bold, color=blue];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_131  [key=0, style=solid];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_71  [key=2, style=dotted];
m5_130 -> m5_132  [key=0, style=solid];
m5_130 -> m5_8  [key=2, style=dotted];
m5_132 -> m5_128  [key=0, style=bold, color=blue];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_136  [key=0, style=solid];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_71  [key=2, style=dotted];
m5_135 -> m5_137  [key=0, style=solid];
m5_135 -> m5_8  [key=2, style=dotted];
m5_137 -> m5_133  [key=0, style=bold, color=blue];
m5_144 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_109  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_144 -> m5_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_0 -> m6_3  [key=1, style=dashed, color=green, label=string];
m6_0 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_6  [key=1, style=dashed, color=green, label=string];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_3  [key=0, style=solid, color=green];
m6_3 -> m6_4  [key=0, style=solid, color=green];
m6_3 -> m6_5  [key=0, style=solid, color=green];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_6 -> m6_7  [key=0, style=solid, color=green];
m6_2 -> m6_7  [key=0, style=solid, color=green];
m6_2 -> m6_8  [key=2, style=dotted, color=green];
m6_4 -> m6_7  [key=0, style=solid, color=green];
m6_4 -> m6_8  [key=2, style=dotted, color=green];
m6_7 -> m6_0  [key=0, style=bold, color=blue];
m6_9 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerProcessingJob"];
m6_9 -> m6_6  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerProcessingJob"];
m7_0 -> m7_1  [key=0, style=solid, color=red];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_4  [key=2, style=dotted, color=red];
m7_1 -> m7_6  [key=1, style=dashed, color=red, label="lambda expression"];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [key=2, style=dotted];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_5  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid, color=red];
m7_17 -> m7_12  [key=0, style=bold, color=blue];
m7_18 -> m7_19  [key=0, style=solid, color=red];
m7_18 -> m7_9  [key=2, style=dotted, color=red];
m7_18 -> m7_20  [key=1, style=dashed, color=red, label=processingJob];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_5  [key=2, style=dotted];
m7_21 -> m7_17  [key=0, style=bold, color=blue];
m7_22 -> m7_30  [key=0, style=solid, color=green];
m7_22 -> m7_35  [key=0, style=bold, color=green];
m7_22 -> m7_31  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>"];
m7_35 -> m7_16  [key=3, color=green, style=bold, label="Parameter variable Hangfire.Client.CreatingContext preContext"];
m7_35 -> m7_36  [key=0, style=solid, color=green];
m7_30 -> m7_31  [key=0, style=solid, color=green];
m7_30 -> m7_38  [key=2, style=dotted, color=green];
m7_30 -> m7_34  [key=1, style=dashed, color=green, label=visitedTypes];
m7_30 -> m7_36  [key=1, style=dashed, color=green, label=visitedTypes];
m7_31 -> m7_35  [key=1, style=dashed, color=green, label=filter];
m7_31 -> m7_32  [key=0, style=solid, color=green];
m7_31 -> m7_37  [key=0, style=solid, color=green];
m7_34 -> m7_35  [key=0, style=solid, color=green];
m7_34 -> m7_31  [key=0, style=solid, color=green];
m7_34 -> m7_40  [key=2, style=dotted, color=green];
m7_34 -> m7_6  [key=2, style=dotted, color=green];
m7_36 -> m7_31  [key=0, style=solid, color=green];
m7_36 -> m7_41  [key=2, style=dotted, color=green];
m7_32 -> m7_34  [key=1, style=dashed, color=green, label=filterInstance];
m7_32 -> m7_33  [key=0, style=solid, color=green];
m7_33 -> m7_34  [key=0, style=solid, color=green];
m7_33 -> m7_36  [key=1, style=dashed, color=green, label=filterInstanceType];
m7_33 -> m7_39  [key=2, style=dotted, color=green];
m7_37 -> m7_22  [key=0, style=bold, color=blue];
m7_42 -> m7_43  [key=0, style=solid, color=green];
m7_42 -> m7_45  [key=1, style=dashed, color=green, label="HangFire.Common.Filters.JobFilter"];
m7_42 -> m7_47  [key=1, style=dashed, color=green, label="HangFire.Common.Filters.JobFilter"];
m7_42 -> m7_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Filters.JobFilter"];
m7_42 -> m7_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Filters.JobFilter"];
m7_42 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Filters.JobFilter"];
m7_42 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Filters.JobFilter"];
m7_43 -> m7_44  [key=0, style=solid, color=green];
m7_43 -> m7_45  [key=0, style=solid, color=green];
m7_44 -> m7_58  [key=0, style=solid, color=green];
m7_45 -> m7_46  [key=0, style=solid, color=green];
m7_45 -> m7_47  [key=0, style=solid, color=green];
m7_46 -> m7_58  [key=0, style=solid, color=green];
m7_47 -> m7_48  [key=0, style=solid, color=green];
m7_47 -> m7_49  [key=0, style=solid, color=green];
m7_48 -> m7_58  [key=0, style=solid, color=green];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_51  [key=0, style=solid];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_53  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_55  [key=0, style=solid];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_57  [key=0, style=solid];
m7_50 -> m7_58  [key=0, style=solid];
m7_52 -> m7_58  [key=0, style=solid];
m7_54 -> m7_58  [key=0, style=solid];
m7_56 -> m7_58  [key=0, style=solid];
m7_57 -> m7_58  [key=0, style=solid];
m7_58 -> m7_42  [key=0, style=bold, color=blue];
m7_9 -> m7_11  [key=0, style=solid, color=green];
m7_12 -> m7_13  [key=0, style=solid, color=green];
m7_12 -> m7_15  [key=1, style=dashed, color=green, label="HangFire.Common.JobMethod"];
m7_12 -> m7_24  [key=1, style=dashed, color=green, label="HangFire.Common.JobMethod"];
m7_12 -> m7_5  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid, color=green];
m7_13 -> m7_15  [key=0, style=solid, color=green];
m7_13 -> m7_10  [key=0, style=bold, color=blue];
m7_14 -> m7_17  [key=0, style=solid, color=green];
m7_14 -> m7_18  [key=2, style=dotted, color=green];
m7_14 -> m7_15  [key=0, style=solid, color=red];
m7_14 -> m7_28  [key=0, style=solid, color=green];
m7_15 -> m7_16  [key=0, style=solid, color=red];
m7_15 -> m7_19  [key=2, style=dotted, color=green];
m7_15 -> m7_20  [key=2, style=dotted, color=green];
m7_15 -> m7_6  [key=1, style=dashed, color=green, label="lambda expression"];
m7_15 -> m7_14  [key=1, style=dashed, color=green, label="lambda expression"];
m7_15 -> m7_9  [key=2, style=dotted, color=red];
m7_16 -> m7_17  [key=0, style=solid, color=green];
m7_16 -> m7_21  [key=2, style=dotted, color=green];
m7_16 -> m7_22  [key=2, style=dotted, color=green];
m7_16 -> m7_14  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid, color=red];
m7_6 -> m7_24  [key=0, style=solid, color=green];
m7_8 -> m7_9  [key=0, style=solid, color=green];
m7_8 -> m7_10  [key=0, style=solid, color=green];
m7_8 -> m7_6  [key=0, style=bold, color=blue];
m7_7 -> m7_8  [key=0, style=solid, color=red];
m7_7 -> m7_10  [key=1, style=dashed, color=green, label=mvcFilter];
m7_7 -> m7_9  [key=2, style=dotted, color=red];
m7_10 -> m7_11  [key=0, style=solid, color=red];
m7_11 -> m7_6  [key=0, style=bold, color=blue];
m7_11 -> m7_12  [key=0, style=solid, color=red];
m7_11 -> m7_4  [key=2, style=dotted, color=red];
m7_11 -> m7_14  [key=1, style=dashed, color=red, label="lambda expression"];
m7_24 -> m7_8  [key=0, style=solid, color=green];
m7_24 -> m7_26  [key=2, style=dotted, color=green];
m7_28 -> m7_16  [key=0, style=solid, color=green];
m7_59 -> m7_15  [key=1, style=dashed, color=green, label="HangFire.Common.Filters.JobFilterProviderCollection"];
m7_60 -> m7_24  [key=1, style=dashed, color=green, label="HangFire.Common.JobMethod"];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=count];
m8_41 -> m8_39  [key=0, style=solid];
m8_41 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_58  [key=2, style=dotted];
m8_1 -> m8_3  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_59  [key=2, style=dotted];
m8_2 -> m8_4  [key=0, style=solid];
m8_2 -> m8_5  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_60  [key=2, style=dotted];
m8_3 -> m8_61  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_62  [key=2, style=dotted];
m8_4 -> m8_10  [key=1, style=dashed, color=red, label=server];
m8_4 -> m8_0  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid, color=red];
m8_10 -> m8_65  [key=2, style=dotted, color=red];
m8_10 -> m8_6  [key=0, style=bold, color=blue];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_55  [key=0, style=solid];
m8_6 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=count];
m8_44 -> m8_94  [key=1, style=dashed, color=darkseagreen4, label=number];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_63  [key=2, style=dotted];
m8_7 -> m8_9  [key=1, style=dashed, color=green, label=connection];
m8_7 -> m8_11  [key=1, style=dashed, color=red, label=command];
m8_7 -> m8_12  [key=1, style=dashed, color=red, label=command];
m8_7 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_7 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_70  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid, color=green];
m8_8 -> m8_55  [key=0, style=solid];
m8_8 -> m8_64  [key=2, style=dotted];
m8_8 -> m8_12  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid, color=green];
m8_9 -> m8_11  [key=0, style=solid, color=red];
m8_9 -> m8_64  [key=2, style=dotted];
m8_9 -> m8_13  [key=2, style=dotted, color=green];
m8_11 -> m8_12  [key=0, style=solid, color=red];
m8_11 -> m8_21  [key=0, style=solid, color=red];
m8_11 -> m8_66  [key=2, style=dotted, color=red];
m8_12 -> m8_13  [key=0, style=solid, color=red];
m8_12 -> m8_67  [key=2, style=dotted, color=red];
m8_12 -> m8_68  [key=2, style=dotted, color=red];
m8_12 -> m8_14  [key=1, style=dashed, color=red, label=workCount];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_30  [key=0, style=solid];
m8_21 -> m8_66  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_67  [key=2, style=dotted];
m8_22 -> m8_68  [key=2, style=dotted];
m8_22 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m8_22 -> m8_36  [key=2, style=dotted];
m8_22 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_36  [key=0, style=solid];
m8_30 -> m8_66  [key=2, style=dotted];
m8_30 -> m8_41  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_67  [key=2, style=dotted];
m8_31 -> m8_68  [key=2, style=dotted];
m8_31 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m8_31 -> m8_35  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_42  [key=0, style=solid];
m8_36 -> m8_66  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_67  [key=2, style=dotted];
m8_37 -> m8_68  [key=2, style=dotted];
m8_37 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_46  [key=0, style=solid];
m8_42 -> m8_66  [key=2, style=dotted];
m8_42 -> m8_9  [key=1, style=dashed, color=green, label="HangFire.Server.Worker"];
m8_42 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_42 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_42 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_42 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_42 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_42 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_42 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_67  [key=2, style=dotted];
m8_43 -> m8_68  [key=2, style=dotted];
m8_43 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=seconds];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_49  [key=0, style=solid];
m8_46 -> m8_66  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_6  [key=0, style=solid];
m8_49 -> m8_66  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_67  [key=2, style=dotted];
m8_50 -> m8_68  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid, color=red];
m8_13 -> m8_15  [key=1, style=dashed, color=red, label=i];
m8_13 -> m8_17  [key=1, style=dashed, color=red, label=i];
m8_13 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_13 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_13 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_13 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IJobPerformanceProcess"];
m8_13 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_14 -> m8_15  [key=0, style=solid, color=red];
m8_14 -> m8_18  [key=0, style=solid, color=red];
m8_15 -> m8_16  [key=0, style=solid, color=red];
m8_15 -> m8_76  [key=1, style=dashed, color=red, label=number];
m8_17 -> m8_14  [key=0, style=solid, color=red];
m8_17 -> m8_17  [key=1, style=dashed, color=red, label=i];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_33  [key=2, style=dotted];
m8_17 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m8_17 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m8_18 -> m8_19  [key=0, style=solid, color=red];
m8_18 -> m8_21  [key=0, style=solid, color=red];
m8_18 -> m8_70  [key=2, style=dotted, color=red];
m8_18 -> m8_34  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid, color=red];
m8_16 -> m8_69  [key=2, style=dotted, color=red];
m8_16 -> m8_75  [key=1, style=dashed, color=red, label="lambda expression"];
m8_16 -> m8_14  [key=0, style=bold, color=blue];
m8_19 -> m8_20  [key=0, style=solid, color=red];
m8_19 -> m8_21  [key=0, style=solid];
m8_19 -> m8_35  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid, color=red];
m8_20 -> m8_70  [key=2, style=dotted, color=red];
m8_20 -> m8_32  [key=0, style=solid];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_23 -> m8_37  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_27  [key=0, style=solid];
m8_24 -> m8_38  [key=2, style=dotted];
m8_26 -> m8_24  [key=0, style=solid];
m8_26 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_26 -> m8_31  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_29  [key=0, style=solid];
m8_26 -> m8_40  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_71  [key=2, style=dotted];
m8_25 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_25 -> m8_39  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_30  [key=0, style=solid];
m8_27 -> m8_70  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_31  [key=0, style=solid];
m8_28 -> m8_41  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_70  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_32 -> m8_13  [key=0, style=bold, color=blue];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_36  [key=0, style=solid];
m8_35 -> m8_33  [key=0, style=solid];
m8_35 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_69  [key=2, style=dotted];
m8_34 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_42  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_69  [key=2, style=dotted];
m8_40 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_72  [key=2, style=dotted];
m8_45 -> m8_73  [key=2, style=dotted];
m8_45 -> m8_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_69  [key=2, style=dotted];
m8_47 -> m8_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_70  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_74  [key=2, style=dotted];
m8_51 -> m8_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_6  [key=0, style=solid];
m8_52 -> m8_70  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_54 -> m8_6  [key=0, style=solid];
m8_54 -> m8_70  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_63  [key=2, style=dotted];
m8_57 -> m8_0  [key=0, style=bold, color=blue];
m8_105 -> m8_106  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid, color=red];
m8_76 -> m8_78  [key=2, style=dotted, color=red];
m8_75 -> m8_76  [key=0, style=solid, color=red];
m8_79 -> m8_80  [key=0, style=solid];
m8_83 -> m8_84  [key=0, style=solid];
m8_87 -> m8_88  [key=0, style=solid];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_78  [key=2, style=dotted];
m8_93 -> m8_94  [key=0, style=solid];
m8_96 -> m8_97  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_77 -> m8_75  [key=0, style=bold, color=blue];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_82  [key=2, style=dotted];
m8_81 -> m8_79  [key=0, style=bold, color=blue];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_86  [key=2, style=dotted];
m8_85 -> m8_83  [key=0, style=bold, color=blue];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_90  [key=2, style=dotted];
m8_88 -> m8_91  [key=2, style=dotted];
m8_88 -> m8_92  [key=2, style=dotted];
m8_89 -> m8_87  [key=0, style=bold, color=blue];
m8_95 -> m8_93  [key=0, style=bold, color=blue];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_99  [key=2, style=dotted];
m8_98 -> m8_96  [key=0, style=bold, color=blue];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_103  [key=0, style=solid];
m8_102 -> m8_104  [key=0, style=solid];
m8_102 -> m8_69  [key=2, style=dotted];
m8_102 -> m8_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_69  [key=2, style=dotted];
m8_103 -> m8_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_104 -> m8_100  [key=0, style=bold, color=blue];
m8_109 -> m8_110  [key=0, style=solid];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_108  [key=2, style=dotted];
m8_107 -> m8_105  [key=0, style=bold, color=blue];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_112  [key=2, style=dotted];
m8_111 -> m8_109  [key=0, style=bold, color=blue];
m8_113 -> m8_76  [key=1, style=dashed, color=red, label=number];
m8_114 -> m8_94  [key=1, style=dashed, color=darkseagreen4, label=number];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_19  [key=2, style=dotted];
m9_14 -> m9_4  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=0, style=solid];
m9_15 -> m9_13  [key=0, style=solid];
m9_15 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_0  [key=2, style=dotted];
m9_16 -> m9_20  [key=2, style=dotted];
m9_16 -> m9_21  [key=2, style=dotted];
m9_16 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_17 -> m9_14  [key=0, style=bold, color=blue];
m9_17 -> m9_10  [key=0, style=bold, color=blue];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_55  [key=0, style=bold, color=blue];
m9_58 -> m9_59  [key=0, style=solid, color=green];
m9_58 -> m9_43  [key=2, style=dotted];
m9_59 -> m9_60  [key=0, style=solid, color=green];
m9_59 -> m9_22  [key=2, style=dotted];
m9_59 -> m9_53  [key=2, style=dotted, color=green];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_30  [key=2, style=dotted];
m9_60 -> m9_62  [key=2, style=dotted];
m9_60 -> m9_54  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_66  [key=2, style=dotted];
m9_61 -> m9_58  [key=0, style=bold, color=blue];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_44  [key=2, style=dotted];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_35  [key=2, style=dotted];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_26  [key=2, style=dotted];
m9_64 -> m9_66  [key=0, style=solid];
m9_65 -> m9_57  [key=0, style=bold, color=blue];
m9_65 -> m9_64  [key=0, style=solid];
m9_65 -> m9_3  [key=2, style=dotted];
m9_65 -> m9_67  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_30  [key=2, style=dotted];
m9_66 -> m9_63  [key=0, style=bold, color=blue];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_8  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label=cts];
m9_26 -> m9_32  [key=2, style=dotted];
m9_26 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label=cts];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=2, style=dotted];
m9_27 -> m9_33  [key=2, style=dotted];
m9_27 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_28 -> m9_26  [key=0, style=bold, color=blue];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_31  [key=0, style=solid];
m9_28 -> m9_34  [key=2, style=dotted];
m9_9 -> m9_10  [key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_13  [key=2, style=dotted];
m9_10 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label=Table];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_16  [key=0, style=solid];
m9_11 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label=row];
m9_11 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label=row];
m9_12 -> m9_9  [key=0, style=bold, color=blue];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_35 -> m9_36  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_43  [key=2, style=dotted];
m9_68 -> m9_59  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m9_68 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_68 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_68 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_68 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_68 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_68 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_68 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_68 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_68 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_22  [key=2, style=dotted];
m9_69 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label=cts];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_30  [key=2, style=dotted];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_66  [key=2, style=dotted];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_35  [key=2, style=dotted];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_44  [key=2, style=dotted];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_26  [key=2, style=dotted];
m9_75 -> m9_67  [key=0, style=bold, color=blue];
m9_13 -> m9_11  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_18  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_26  [key=2, style=dotted];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m9_1 -> m9_3  [key=2, style=dotted];
m9_1 -> m9_4  [key=2, style=dotted];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_7  [key=2, style=dotted];
m9_54 -> m9_45  [key=0, style=bold, color=blue];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_44  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_7 -> m9_5  [key=0, style=bold, color=blue];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [key=2, style=dotted];
m9_6 -> m9_9  [key=2, style=dotted];
m9_55 -> m9_56  [key=0, style=solid];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_54  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_21  [key=2, style=dotted];
m9_20 -> m9_18  [key=0, style=bold, color=blue];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_37  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m9_22 -> m9_46  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m9_22 -> m9_58  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m9_22 -> m9_68  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=2, style=dotted];
m9_24 -> m9_22  [key=0, style=bold, color=blue];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_35  [key=2, style=dotted];
m9_33 -> m9_30  [key=0, style=bold, color=blue];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_25  [key=0, style=bold, color=blue];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_34  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_41  [key=2, style=dotted];
m9_37 -> m9_43  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_39  [key=2, style=dotted];
m9_36 -> m9_40  [key=2, style=dotted];
m9_38 -> m9_35  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_22  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_43  [key=2, style=dotted];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_22  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_30  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_55  [key=2, style=dotted];
m9_49 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label=table1];
m9_49 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label=table1];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_56  [key=2, style=dotted];
m9_50 -> m9_53  [key=2, style=dotted];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_56  [key=2, style=dotted];
m9_51 -> m9_54  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_44  [key=2, style=dotted];
m9_52 -> m9_49  [key=0, style=bold, color=blue];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_26  [key=2, style=dotted];
m9_4 -> m9_0  [key=0, style=bold, color=blue];
m9_42 -> m9_36  [key=0, style=bold, color=blue];
m9_76 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m9_76 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
}
