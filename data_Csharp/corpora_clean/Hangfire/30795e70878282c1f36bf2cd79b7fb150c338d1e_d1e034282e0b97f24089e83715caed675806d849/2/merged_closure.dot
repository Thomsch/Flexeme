digraph  {
n0 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32"];
n1 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32"];
m1_24 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="IStorageConnection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_33 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="IStorageConnection.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="33-33"];
m1_27 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="96-96"];
m1_28 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs", label="String.IsNullOrWhiteSpace(name)", span="98-98"];
m1_30 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs", label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="100-102"];
m1_29 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs", label="throw new ArgumentNullException(''name'');", span="98-98"];
m1_31 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="IStorageConnection.cs", label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="96-96"];
m1_0 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="21-21"];
m1_1 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="Debug.Assert(redis != null)", span="28-28"];
m1_2 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="Debug.Assert(jobId != null)", span="29-29"];
m1_3 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="Debug.Assert(type != null)", span="30-30"];
m1_5 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="Debug.Assert(state != null)", span="32-32"];
m1_6 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="_stateMachine = new StateMachine(redis)", span="34-34"];
m1_7 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="JobId = jobId", span="36-36"];
m1_8 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="Type = type", span="37-37"];
m1_9 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="State = state", span="38-38"];
m1_10 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="_jobParameters[''Type''] = type.AssemblyQualifiedName", span="40-40"];
m1_11 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="_jobParameters[''Args''] = JobHelper.ToJson(arguments)", span="41-41"];
m1_12 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="21-21"];
m1_16 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="72-72"];
m1_17 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs", label="String.IsNullOrWhiteSpace(name)", span="74-74"];
m1_21 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs", label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="81-81"];
m1_18 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs", label="throw new ArgumentNullException(''name'');", span="74-74"];
m1_19 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs", label=_jobWasCreated, span="76-76"];
m1_20 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="78-78"];
m1_22 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="IStorageConnection.cs", label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="72-72"];
m1_23 [cluster="string.IsNullOrWhiteSpace(string)", file="IStorageConnection.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m1_34 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="IStorageConnection.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="105-105"];
m1_35 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="IStorageConnection.cs", label="_jobWasCreated = true", span="107-107"];
m1_36 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="IStorageConnection.cs", label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="108-108"];
m1_37 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="IStorageConnection.cs", label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="105-105"];
m1_15 [cluster="HangFire.JobHelper.ToJson(object)", file="IStorageConnection.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="28-28"];
m1_38 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="IStorageConnection.cs", label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58"];
m1_32 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="IStorageConnection.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_26 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="IStorageConnection.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_13 [cluster="System.Diagnostics.Debug.Assert(bool)", file="IStorageConnection.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m1_25 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IStorageConnection.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_14 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="IStorageConnection.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32"];
m1_39 [file="IStorageConnection.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m2_51 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="156-156"];
m2_86 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs", label="var changedContext = new StateApplyingContext(stateChangingContext)", span="158-158"];
m2_87 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs", label="return changedContext.ApplyState(_handlers, stateChangedFilters);", span="159-159"];
m2_88 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="156-156"];
m2_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisConnection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RedisConnection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m2_117 [cluster="System.Collections.Generic.List<T>.List()", file="RedisConnection.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_83 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="RedisConnection.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m2_46 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="13-13"];
m2_84 [cluster="string.Format(string, object, object)", file="RedisConnection.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_78 [cluster="string.IsNullOrWhiteSpace(string)", file="RedisConnection.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m2_82 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="RedisConnection.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="91-91"];
m2_45 [cluster="System.TimeSpan.FromHours(double)", file="RedisConnection.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m2_102 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="RedisConnection.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="39-39"];
m2_17 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs", label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="186-186"];
m2_107 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs", label="handler == null", span="188-188"];
m2_109 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs", label="String.IsNullOrEmpty(handler.StateName)", span="189-189"];
m2_111 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs", label="!_handlers.ContainsKey(handler.StateName)", span="191-191"];
m2_112 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs", label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="193-193"];
m2_113 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs", label="_handlers[handler.StateName].Add(handler)", span="196-196"];
m2_108 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs", label="throw new ArgumentNullException(''handler'');", span="188-188"];
m2_110 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs", label="throw new ArgumentNullException(''stateName'');", span="189-189"];
m2_114 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisConnection.cs", label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="186-186"];
m2_0 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="RedisConnection.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m2_1 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="RedisConnection.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m2_49 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="RedisConnection.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m2_106 [cluster="System.Func<T, TResult>.Invoke(T)", file="RedisConnection.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_100 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="RedisConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="10-10"];
m2_25 [cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="RedisConnection.cs", label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38"];
m2_26 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m2_27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="method == null", span="69-69"];
m2_29 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="parameters == null", span="70-70"];
m2_31 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="state == null", span="71-71"];
m2_33 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78"];
m2_34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84"];
m2_35 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="var filterInfo = GetFilters(method)", span="86-86"];
m2_36 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="var context = new StateContext(jobId, method)", span="87-87"];
m2_37 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="var changingContext = new StateChangingContext(context, state, ''Created'', _connection)", span="88-88"];
m2_28 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="throw new ArgumentNullException(''method'');", span="69-69"];
m2_30 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="throw new ArgumentNullException(''parameters'');", span="70-70"];
m2_32 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="throw new ArgumentNullException(''state'');", span="71-71"];
m2_40 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="return jobId;", span="95-95"];
m2_38 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90"];
m2_39 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="ApplyState(changingContext, filterInfo.StateChangedFilters)", span="93-93"];
m2_41 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisConnection.cs", label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m2_15 [cluster="HangFire.JobStorage.GetStateHandlers()", file="RedisConnection.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52"];
m2_105 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="RedisConnection.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m2_90 [cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisConnection.cs", label="Entry HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="42-42"];
m2_89 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="RedisConnection.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", span="28-28"];
m2_115 [cluster="string.IsNullOrEmpty(string)", file="RedisConnection.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_79 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="22-22"];
m2_101 [cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisConnection.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="13-13"];
m2_116 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisConnection.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_44 [cluster="Unk.ToJson", file="RedisConnection.cs", label="Entry Unk.ToJson", span=""];
m2_52 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="77-77"];
m2_19 [cluster="lambda expression", file="RedisConnection.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m2_18 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="59-59"];
m2_20 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="59-59"];
m2_22 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="59-59"];
m2_23 [cluster="lambda expression", file="RedisConnection.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59"];
m2_24 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="59-59"];
m2_53 [cluster="lambda expression", file="RedisConnection.cs", label="x.ParameterType", span="77-77"];
m2_54 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="77-77"];
m2_21 [cluster="Unk.Select", file="RedisConnection.cs", label="Entry Unk.Select", span=""];
m2_50 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs", label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="162-162"];
m2_91 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs", label=filters, span="165-165"];
m2_92 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs", label="var oldState = context.CandidateState", span="167-167"];
m2_93 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs", label="filter.OnStateChanging(context)", span="168-168"];
m2_94 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs", label="oldState != context.CandidateState", span="170-170"];
m2_96 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs", label="transaction.AppendJobHistory(context.JobId, oldState, context.JobMethod)", span="174-174"];
m2_95 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs", label="var transaction = _connection.CreateWriteTransaction()", span="172-172"];
m2_97 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs", label="transaction.Commit()", span="175-175"];
m2_98 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisConnection.cs", label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="162-162"];
m2_55 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98"];
m2_56 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="String.IsNullOrWhiteSpace(jobId)", span="101-101"];
m2_58 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="state == null", span="102-102"];
m2_60 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="_connection.AcquireJobLock(jobId)", span="104-104"];
m2_61 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="var jobData = _connection.GetJobStateAndInvocationData(jobId)", span="106-106"];
m2_64 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(jobData.State)", span="114-114"];
m2_69 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="state = new FailedState(ex)\r\n                    {\r\n                        Reason = String.Format(\r\n                            ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                            state.StateName, jobId)\r\n                    }", span="132-137"];
m2_70 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="var context = new StateContext(jobId, jobMethod)", span="140-140"];
m2_57 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="throw new ArgumentNullException(''jobId'');", span="101-101"];
m2_59 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="throw new ArgumentNullException(''state'');", span="102-102"];
m2_62 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="jobData == null", span="108-108"];
m2_67 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="123-123"];
m2_71 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="var stateChangingContext = \r\n                    new StateChangingContext(context, state, jobData.State, _connection)", span="141-142"];
m2_63 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="return false;", span="111-111"];
m2_65 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="return false;", span="116-116"];
m2_66 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="JobMethod jobMethod = null", span="119-119"];
m2_68 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label=JobLoadException, span="125-125"];
m2_72 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="jobMethod == null", span="144-144"];
m2_74 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="var filterInfo = GetFilters(jobMethod)", span="149-149"];
m2_73 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="return ApplyState(stateChangingContext, Enumerable.Empty<IStateChangedFilter>());", span="146-146"];
m2_75 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="InvokeStateChangingFilters(stateChangingContext, filterInfo.StateChangingFilters)", span="150-150"];
m2_76 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="return ApplyState(stateChangingContext, filterInfo.StateChangedFilters);", span="152-152"];
m2_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisConnection.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98"];
m2_99 [cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RedisConnection.cs", label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m2_80 [cluster="HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", span="23-23"];
m2_119 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisConnection.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_47 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RedisConnection.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="181-181"];
m2_103 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RedisConnection.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="183-183"];
m2_104 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RedisConnection.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="181-181"];
m2_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RedisConnection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_43 [cluster="System.Reflection.MethodBase.GetParameters()", file="RedisConnection.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m2_118 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisConnection.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_48 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="RedisConnection.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m2_42 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisConnection.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m2_85 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="RedisConnection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m2_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="connection == null", span="46-46"];
m2_5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="stateHandlers == null", span="47-47"];
m2_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="_connection = connection", span="49-49"];
m2_8 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51"];
m2_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="filters != null", span="57-57"];
m2_12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m2_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="throw new ArgumentNullException(''connection'');", span="46-46"];
m2_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="throw new ArgumentNullException(''stateHandlers'');", span="47-47"];
m2_9 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label=handlers, span="52-52"];
m2_10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="RegisterHandler(handler)", span="54-54"];
m2_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisConnection.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m2_120 [file="RedisConnection.cs", label="HangFire.States.StateMachine", span=""];
m2_121 [file="RedisConnection.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m3_72 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91"];
m3_73 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="93-93"];
m3_74 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs", label="var contextCopy = new CreateContext(context)", span="94-94"];
m3_75 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs", label="Assert.Same(context.JobId, contextCopy.JobId)", span="96-96"];
m3_76 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91"];
m3_8 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RedisProcessingJob.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m3_12 [cluster="Mock<IStateMachineFactory>.cstr", file="RedisProcessingJob.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m3_9 [cluster="Mock<IState>.cstr", file="RedisProcessingJob.cs", label="HangFire.Redis.RedisProcessingJob", span=""];
m3_167 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226"];
m3_168 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="228-228"];
m3_169 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', new { key = ''value'' })", span="229-229"];
m3_170 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs", label="context.CreateJob()", span="231-231"];
m3_171 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs", label="_stateMachine.Verify(x => x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>()))", span="233-237"];
m3_172 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226"];
m3_63 [cluster="Unk.Same", file="RedisProcessingJob.cs", label="Entry Unk.Same", span=""];
m3_0 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs", label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", span="23-23"];
m3_1 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", color=green, community=0, file="RedisProcessingJob.cs", label="jobId == null", prediction=0, span="25-25"];
m3_2 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", color=green, community=0, file="RedisProcessingJob.cs", label="throw new ArgumentNullException(''jobId'');", prediction=0, span="25-25"];
m3_4 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs", label="throw new ArgumentNullException(''queue'');", span="26-26"];
m3_5 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs", label="JobId = jobId", span="28-28"];
m3_6 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs", label="Queue = queue", span="29-29"];
m3_7 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJob.cs", label="Exit HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", span="23-23"];
m3_33 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41"];
m3_34 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RedisProcessingJob.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _job, _state.Object))", span="43-44"];
m3_35 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RedisProcessingJob.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="46-46"];
m3_36 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41"];
m3_86 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110"];
m3_87 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="112-112"];
m3_88 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="RedisProcessingJob.cs", label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="114-115"];
m3_89 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110"];
m3_28 [cluster="Unk.Equal", file="RedisProcessingJob.cs", label="Entry Unk.Equal", span=""];
m3_147 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200"];
m3_148 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="202-202"];
m3_149 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs", label="context.CreateJob()", span="204-204"];
m3_150 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs", label="_stateMachine.Verify(x => x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState))", span="206-209"];
m3_151 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200"];
m3_47 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59"];
m3_48 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="RedisProcessingJob.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null))", span="61-63"];
m3_49 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="RedisProcessingJob.cs", label="Assert.Equal(''initialState'', exception.ParamName)", span="65-65"];
m3_50 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59"];
m3_179 [cluster="Unk.ContainsKey", file="RedisProcessingJob.cs", label="Entry Unk.ContainsKey", span=""];
m3_90 [cluster="Unk.DoesNotThrow", file="RedisProcessingJob.cs", label="Entry Unk.DoesNotThrow", span=""];
m3_24 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32"];
m3_25 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisProcessingJob.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object))", span="34-35"];
m3_26 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisProcessingJob.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="37-37"];
m3_27 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32"];
m3_22 [cluster="Unk.>", file="RedisProcessingJob.cs", label="Entry Unk.>", span=""];
m3_120 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155"];
m3_121 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="157-157"];
m3_122 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name1'', ''value1'')", span="159-159"];
m3_123 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name2'', ''value2'')", span="160-160"];
m3_124 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs", label="Assert.Equal(''value1'', context.GetJobParameter<string>(''name1''))", span="162-162"];
m3_125 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155"];
m3_206 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277"];
m3_207 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="279-279"];
m3_208 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs", label="context.CreateJob()", span="280-280"];
m3_209 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs", label="var contextCopy = new CreateContext(context)", span="282-282"];
m3_210 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => contextCopy.SetJobParameter(''name'', ''value''))", span="284-285"];
m3_211 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277"];
m3_62 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292"];
m3_216 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="RedisProcessingJob.cs", label="return new CreateContext(\r\n                _connection.Object, _stateMachineFactory.Object, _job, _state.Object);", span="294-295"];
m3_217 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292"];
m3_115 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146"];
m3_116 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="148-148"];
m3_117 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', ''value'')", span="149-149"];
m3_118 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs", label="Assert.Equal(''value'', context.GetJobParameter<string>(''name''))", span="151-151"];
m3_119 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146"];
m3_196 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262"];
m3_197 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs", label="_stateMachine.Setup(x => x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object))\r\n                .Returns(''id'')", span="264-266"];
m3_198 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="268-268"];
m3_199 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs", label="context.CreateJob()", span="269-269"];
m3_200 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs", label="var contextCopy = new CreateContext(context)", span="271-271"];
m3_201 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs", label="Assert.Equal(''id'', contextCopy.JobId)", span="273-273"];
m3_202 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262"];
m3_110 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137"];
m3_111 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="139-139"];
m3_112 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs", label="Assert.Equal(default(int), context.GetJobParameter<int>(''one''))", span="141-141"];
m3_113 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs", label="Assert.Equal(default(string), context.GetJobParameter<string>(''two''))", span="142-142"];
m3_114 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137"];
m3_64 [cluster="Unk.NotNull", file="RedisProcessingJob.cs", label="Entry Unk.NotNull", span=""];
m3_54 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69"];
m3_55 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="71-71"];
m3_56 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs", label="Assert.Same(_connection.Object, context.Connection)", span="73-73"];
m3_57 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs", label="Assert.Same(_job, context.Job)", span="74-74"];
m3_58 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs", label="Assert.Same(_state.Object, context.InitialState)", span="75-75"];
m3_59 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs", label="Assert.NotNull(context.Items)", span="77-77"];
m3_60 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs", label="Assert.Null(context.JobId)", span="78-78"];
m3_61 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69"];
m3_13 [cluster="Unk.Setup", file="RedisProcessingJob.cs", label="Entry Unk.Setup", span=""];
m3_71 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="RedisProcessingJob.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37"];
m3_18 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288"];
m3_215 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288"];
m3_65 [cluster="Unk.Null", file="RedisProcessingJob.cs", label="Entry Unk.Null", span=""];
m3_66 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82"];
m3_67 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="84-84"];
m3_68 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs", label="var contextCopy = new CreateContext(context)", span="85-85"];
m3_69 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs", label="Assert.Same(context.Items, contextCopy.Items)", span="87-87"];
m3_70 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82"];
m3_157 [cluster="Unk.CreateInState", file="RedisProcessingJob.cs", label="Entry Unk.CreateInState", span=""];
m3_212 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="285-285"];
m3_15 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="21-21"];
m3_19 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="27-27"];
m3_16 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Method()", span="21-21"];
m3_17 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="21-21"];
m3_20 [cluster="lambda expression", file="RedisProcessingJob.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27"];
m3_21 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="27-27"];
m3_29 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="35-35"];
m3_30 [cluster="lambda expression", file="RedisProcessingJob.cs", label="new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object)", span="35-35"];
m3_31 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="35-35"];
m3_37 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="44-44"];
m3_38 [cluster="lambda expression", file="RedisProcessingJob.cs", label="new CreateContext(_connection.Object, null, _job, _state.Object)", span="44-44"];
m3_39 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="44-44"];
m3_44 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="53-53"];
m3_45 [cluster="lambda expression", file="RedisProcessingJob.cs", label="new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object)", span="53-53"];
m3_46 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="53-53"];
m3_51 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="62-63"];
m3_52 [cluster="lambda expression", file="RedisProcessingJob.cs", label="new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null)", span="62-63"];
m3_53 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="62-63"];
m3_83 [cluster="lambda expression", file="RedisProcessingJob.cs", label="context.SetJobParameter(null, null)", span="104-104"];
m3_82 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="104-104"];
m3_84 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="104-104"];
m3_92 [cluster="lambda expression", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', null)", span="115-115"];
m3_91 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="115-115"];
m3_93 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="115-115"];
m3_100 [cluster="lambda expression", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', null)", span="125-125"];
m3_99 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="125-125"];
m3_101 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="125-125"];
m3_107 [cluster="lambda expression", file="RedisProcessingJob.cs", label="context.GetJobParameter<int>(null)", span="133-133"];
m3_106 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="133-133"];
m3_108 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="133-133"];
m3_138 [cluster="lambda expression", file="RedisProcessingJob.cs", label="context.GetJobParameter<int>(''name'')", span="184-184"];
m3_137 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="184-184"];
m3_139 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="184-184"];
m3_155 [cluster="lambda expression", file="RedisProcessingJob.cs", label="x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState)", span="206-209"];
m3_154 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="206-209"];
m3_156 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="206-209"];
m3_165 [cluster="lambda expression", file="RedisProcessingJob.cs", label="x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState)", span="217-217"];
m3_164 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="217-217"];
m3_166 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="217-217"];
m3_173 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="233-237"];
m3_174 [cluster="lambda expression", file="RedisProcessingJob.cs", label="x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>())", span="233-237"];
m3_175 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="233-237"];
m3_176 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="236-236"];
m3_177 [cluster="lambda expression", file="RedisProcessingJob.cs", label="d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''", span="236-236"];
m3_178 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="236-236"];
m3_186 [cluster="lambda expression", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', ''value'')", span="247-247"];
m3_185 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="247-247"];
m3_187 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="247-247"];
m3_194 [cluster="lambda expression", file="RedisProcessingJob.cs", label="context.GetJobParameter<string>(''name'')", span="258-258"];
m3_193 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="258-258"];
m3_195 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="258-258"];
m3_203 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Entry lambda expression", span="264-265"];
m3_204 [cluster="lambda expression", file="RedisProcessingJob.cs", label="x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object)", span="264-265"];
m3_205 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="264-265"];
m3_213 [cluster="lambda expression", file="RedisProcessingJob.cs", label="contextCopy.SetJobParameter(''name'', ''value'')", span="285-285"];
m3_214 [cluster="lambda expression", file="RedisProcessingJob.cs", label="Exit lambda expression", span="285-285"];
m3_32 [cluster="CreateContext.cstr", file="RedisProcessingJob.cs", label="Entry CreateContext.cstr", span=""];
m3_152 [cluster="Hangfire.Client.CreateContext.CreateJob()", file="RedisProcessingJob.cs", label="Entry Hangfire.Client.CreateContext.CreateJob()", span="147-147"];
m3_85 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="RedisProcessingJob.cs", label="Entry Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m3_153 [cluster="Unk.Verify", file="RedisProcessingJob.cs", label="Entry Unk.Verify", span=""];
m3_126 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166"];
m3_127 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="168-168"];
m3_128 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', ''oldValue'')", span="170-170"];
m3_129 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', ''newValue'')", span="171-171"];
m3_130 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs", label="Assert.Equal(''newValue'', context.GetJobParameter<string>(''name''))", span="173-173"];
m3_131 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166"];
m3_132 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177"];
m3_133 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="179-179"];
m3_134 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', ''value'')", span="181-181"];
m3_135 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="183-184"];
m3_136 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177"];
m3_158 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213"];
m3_159 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="215-215"];
m3_160 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs", label="_stateMachine\r\n                .Setup(x => x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState))\r\n                .Returns(''id'')", span="216-218"];
m3_161 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs", label="context.CreateJob()", span="220-220"];
m3_162 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs", label="Assert.Equal(''id'', context.JobId)", span="222-222"];
m3_163 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213"];
m3_180 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241"];
m3_181 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="243-243"];
m3_182 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="context.CreateJob()", span="244-244"];
m3_183 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => context.SetJobParameter(''name'', ''value''))", span="246-247"];
m3_184 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241"];
m3_94 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119"];
m3_95 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="121-121"];
m3_96 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', null)", span="122-122"];
m3_97 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs", label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="124-125"];
m3_98 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119"];
m3_188 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251"];
m3_189 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="253-253"];
m3_190 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="context.CreateJob()", span="255-255"];
m3_191 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="Assert.DoesNotThrow(\r\n                () => context.GetJobParameter<string>(''name''))", span="257-258"];
m3_192 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251"];
m3_109 [cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisProcessingJob.cs", label="Entry Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m3_11 [cluster="Mock<IStateMachine>.cstr", file="RedisProcessingJob.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m3_77 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100"];
m3_78 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="102-102"];
m3_79 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="103-104"];
m3_80 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs", label="Assert.Equal(''name'', exception.ParamName)", span="106-106"];
m3_81 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100"];
m3_140 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188"];
m3_141 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="190-190"];
m3_142 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs", label="context.SetJobParameter(''name'', ''value'')", span="191-191"];
m3_143 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs", label="var contextCopy = new CreateContext(context)", span="192-192"];
m3_144 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs", label="var value = contextCopy.GetJobParameter<string>(''name'')", span="194-194"];
m3_145 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs", label="Assert.Equal(''value'', value)", span="196-196"];
m3_146 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188"];
m3_23 [cluster="Unk.Create", file="RedisProcessingJob.cs", label="Entry Unk.Create", span=""];
m3_14 [cluster="Unk.Returns", file="RedisProcessingJob.cs", label="Entry Unk.Returns", span=""];
m3_40 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50"];
m3_41 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="RedisProcessingJob.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object))", span="52-53"];
m3_42 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="RedisProcessingJob.cs", label="Assert.Equal(''job'', exception.ParamName)", span="55-55"];
m3_43 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50"];
m3_10 [cluster="Mock<IStorageConnection>.cstr", file="RedisProcessingJob.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m3_102 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129"];
m3_103 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs", label="var context = CreateContext()", span="131-131"];
m3_104 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<int>(null))", span="132-133"];
m3_105 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="RedisProcessingJob.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129"];
m3_218 [file="RedisProcessingJob.cs", label="Hangfire.Core.Tests.Client.CreateContextFacts", span=""];
m3_219 [file="RedisProcessingJob.cs", label=context, span=""];
m3_220 [file="RedisProcessingJob.cs", label=context, span=""];
m3_221 [file="RedisProcessingJob.cs", label=context, span=""];
m3_222 [file="RedisProcessingJob.cs", label=context, span=""];
m3_223 [file="RedisProcessingJob.cs", label=context, span=""];
m3_224 [file="RedisProcessingJob.cs", label=context, span=""];
m3_225 [file="RedisProcessingJob.cs", label=context, span=""];
m3_226 [file="RedisProcessingJob.cs", label=context, span=""];
m3_227 [file="RedisProcessingJob.cs", label=context, span=""];
m3_228 [file="RedisProcessingJob.cs", label=contextCopy, span=""];
m4_17 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="RedisProcessingJobFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="29-29"];
m4_18 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="RedisProcessingJobFacts.cs", label="var processingJob = new RedisProcessingJob(JobId, Queue)", prediction=2, span="31-31"];
m4_19 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="RedisProcessingJobFacts.cs", label="Assert.Equal(JobId, processingJob.JobId)", prediction=3, span="33-33"];
m4_20 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="RedisProcessingJobFacts.cs", label="Assert.Equal(Queue, processingJob.Queue)", prediction=2, span="34-34"];
m4_21 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="RedisProcessingJobFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="29-29"];
m4_4 [cluster="Unk.>", file="RedisProcessingJobFacts.cs", label="Entry Unk.>", span=""];
m4_0 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="RedisProcessingJobFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="11-11"];
m4_1 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="RedisProcessingJobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(null, Queue))", prediction=5, span="13-14"];
m4_2 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="RedisProcessingJobFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", prediction=6, span="16-16"];
m4_3 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="RedisProcessingJobFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="11-11"];
m4_10 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RedisProcessingJobFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="20-20"];
m4_11 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="RedisProcessingJobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(JobId, null))", prediction=7, span="22-23"];
m4_12 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="RedisProcessingJobFacts.cs", label="Assert.Equal(''queue'', exception.ParamName)", prediction=8, span="25-25"];
m4_13 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RedisProcessingJobFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="20-20"];
m4_5 [cluster="Unk.Equal", file="RedisProcessingJobFacts.cs", label="Entry Unk.Equal", span=""];
m4_14 [cluster="lambda expression", file="RedisProcessingJobFacts.cs", label="Entry lambda expression", span="23-23"];
m4_6 [cluster="lambda expression", file="RedisProcessingJobFacts.cs", label="Entry lambda expression", span="14-14"];
m4_7 [cluster="lambda expression", color=green, community=0, file="RedisProcessingJobFacts.cs", label="new RedisProcessingJob(null, Queue)", prediction=9, span="14-14"];
m4_8 [cluster="lambda expression", file="RedisProcessingJobFacts.cs", label="Exit lambda expression", span="14-14"];
m4_15 [cluster="lambda expression", color=green, community=0, file="RedisProcessingJobFacts.cs", label="new RedisProcessingJob(JobId, null)", prediction=10, span="23-23"];
m4_16 [cluster="lambda expression", file="RedisProcessingJobFacts.cs", label="Exit lambda expression", span="23-23"];
m4_9 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="RedisProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", span="23-23"];
m5_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerConnection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_119 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236"];
m5_120 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="serverId == null", span="238-238"];
m5_122 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="context == null", span="239-239"];
m5_124 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246"];
m5_125 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="248-254"];
m5_121 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="238-238"];
m5_123 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''context'');", span="239-239"];
m5_126 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236"];
m5_97 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205"];
m5_98 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="id == null", span="207-207"];
m5_100 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="name == null", span="208-208"];
m5_102 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213"];
m5_99 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="207-207"];
m5_101 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''name'');", span="208-208"];
m5_103 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205"];
m5_127 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m5_49 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106"];
m5_50 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="job == null", span="111-111"];
m5_52 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters == null", span="112-112"];
m5_55 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="var invocationData = InvocationData.Serialize(job)", span="119-119"];
m5_56 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129"];
m5_57 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters.Count > 0", span="131-131"];
m5_58 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="var parameterArray = new object[parameters.Count]", span="133-133"];
m5_60 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label=parameters, span="135-135"];
m5_51 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''job'');", span="111-111"];
m5_53 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''parameters'');", span="112-112"];
m5_54 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117"];
m5_61 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142"];
m5_64 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="return jobId;", span="152-152"];
m5_59 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="int parameterIndex = 0", span="134-134"];
m5_63 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149"];
m5_62 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147"];
m5_65 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106"];
m5_21 [cluster="string.Format(string, object)", file="SqlServerConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
m5_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs", label="connection == null", span="37-37"];
m5_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs", label="options == null", span="38-38"];
m5_5 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs", label="_connection = connection", span="40-40"];
m5_6 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs", label="_options = options", span="41-41"];
m5_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''connection'');", span="37-37"];
m5_4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''options'');", span="38-38"];
m5_7 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
m5_43 [cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m5_69 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m5_72 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155"];
m5_73 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="id == null", span="157-157"];
m5_76 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163"];
m5_74 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="157-157"];
m5_75 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160"];
m5_77 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="jobData == null", span="165-165"];
m5_79 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168"];
m5_80 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="invocationData.Arguments = jobData.Arguments", span="169-169"];
m5_86 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188"];
m5_78 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="return null;", span="165-165"];
m5_83 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="job = invocationData.Deserialize()", span="176-176"];
m5_81 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Job job = null", span="171-171"];
m5_82 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="JobLoadException loadException = null", span="172-172"];
m5_84 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label=JobLoadException, span="178-178"];
m5_85 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="loadException = ex", span="180-180"];
m5_87 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155"];
m5_13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49"];
m5_14 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="return new SqlServerWriteOnlyTransaction(_connection);", span="51-51"];
m5_15 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49"];
m5_118 [cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_44 [cluster="Unk.Query", file="SqlServerConnection.cs", label="Entry Unk.Query", span=""];
m5_48 [cluster="Unk.ToString", file="SqlServerConnection.cs", label="Entry Unk.ToString", span=""];
m5_20 [cluster="SqlServerDistributedLock.cstr", file="SqlServerConnection.cs", label="Entry SqlServerDistributedLock.cstr", span=""];
m5_42 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerConnection.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m5_68 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m5_22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
m5_23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="queues == null", span="63-63"];
m5_25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="queues.Length == 0", span="64-64"];
m5_31 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="82-82"];
m5_32 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="84-87"];
m5_24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''queues'');", span="63-63"];
m5_26 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="64-64"];
m5_27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="dynamic idAndQueue", span="66-66"];
m5_28 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="68-73"];
m5_29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="77-77"];
m5_30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var currentQueryIndex = 0", span="78-78"];
m5_34 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="currentQueryIndex == fetchConditions.Length - 1", span="91-91"];
m5_37 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="98-98"];
m5_35 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="93-93"];
m5_33 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="idAndQueue == null", span="89-89"];
m5_38 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="idAndQueue == null", span="99-99"];
m5_39 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerConnection.cs", label="return new SqlServerProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", prediction=11, span="101-103"];
m5_36 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="94-94"];
m5_40 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
m5_138 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m5_139 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="timeOut.Duration() != timeOut", span="277-277"];
m5_140 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="279-279"];
m5_141 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="282-284"];
m5_142 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m5_12 [cluster="Unk.Dispose", file="SqlServerConnection.cs", label="Entry Unk.Dispose", span=""];
m5_143 [cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m5_9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44"];
m5_10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="_connection.Dispose()", span="46-46"];
m5_11 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44"];
m5_104 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216"];
m5_110 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216"];
m5_90 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191"];
m5_91 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="id == null", span="193-193"];
m5_93 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="name == null", span="194-194"];
m5_95 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202"];
m5_92 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="193-193"];
m5_94 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''name'');", span="194-194"];
m5_96 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191"];
m5_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m5_111 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225"];
m5_112 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="key == null", span="227-227"];
m5_114 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="toScore < fromScore", span="228-228"];
m5_116 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233"];
m5_113 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="227-227"];
m5_115 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228"];
m5_117 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225"];
m5_67 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m5_17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54"];
m5_18 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="56-58"];
m5_19 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54"];
m5_41 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m5_70 [cluster="Unk.Single", file="SqlServerConnection.cs", label="Entry Unk.Single", span=""];
m5_46 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m5_89 [cluster="HangFire.Storage.JobData.JobData()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m5_71 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m5_88 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m5_128 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m5_129 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="serverId == null", span="259-259"];
m5_131 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="261-263"];
m5_130 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="259-259"];
m5_132 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m5_133 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m5_134 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="serverId == null", span="268-268"];
m5_136 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="270-272"];
m5_135 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="268-268"];
m5_137 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m5_47 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", span="23-23"];
m5_45 [cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs", label="Entry Unk.SingleOrDefault", span=""];
m5_66 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m5_144 [file="SqlServerConnection.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m6_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerProcessingJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_0 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", span="23-23"];
m6_1 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="jobId == null", prediction=12, span="25-25"];
m6_3 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="queue == null", prediction=13, span="26-26"];
m6_5 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs", label="JobId = jobId", span="28-28"];
m6_6 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="Queue = queue", prediction=14, span="29-29"];
m6_2 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="throw new ArgumentNullException(''jobId'');", prediction=15, span="25-25"];
m6_4 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="throw new ArgumentNullException(''queue'');", prediction=16, span="26-26"];
m6_7 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="SqlServerProcessingJob.cs", label="Exit HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", span="23-23"];
m6_9 [file="SqlServerProcessingJob.cs", label="HangFire.SqlServer.SqlServerProcessingJob", span=""];
m7_0 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="11-11"];
m7_2 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerProcessingJobFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="16-16"];
m7_3 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="11-11"];
m7_26 [cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34"];
m7_19 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerProcessingJobFacts.cs", label="Assert.Equal(JobId, processingJob.JobId)", span="33-33"];
m7_4 [cluster="Unk.>", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.>", span=""];
m7_17 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", span="69-69"];
m7_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", file="SqlServerProcessingJobFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0"];
m7_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="SqlServerProcessingJobFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m7_22 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="84-84"];
m7_35 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="yield return filter;", prediction=17, span="96-96"];
m7_30 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="var visitedTypes = new HashSet<Type>()", prediction=18, span="87-87"];
m7_31 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label=filters, prediction=17, span="89-89"];
m7_34 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="!visitedTypes.Contains(filterInstanceType) || AllowMultiple(filterInstance)", prediction=18, span="94-94"];
m7_36 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="visitedTypes.Add(filterInstanceType)", prediction=18, span="97-97"];
m7_32 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="var filterInstance = filter.Instance", prediction=18, span="91-91"];
m7_33 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="var filterInstanceType = filterInstance.GetType()", prediction=18, span="92-92"];
m7_37 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="84-84"];
m7_42 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", span="104-104"];
m7_43 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="x == null && y == null", prediction=24, span="107-107"];
m7_44 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="return 0;", prediction=25, span="109-109"];
m7_45 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="x == null", prediction=26, span="111-111"];
m7_46 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="return -1;", prediction=27, span="113-113"];
m7_47 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="y == null", prediction=26, span="115-115"];
m7_48 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="return 1;", prediction=29, span="117-117"];
m7_49 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="x.Order < y.Order", span="122-122"];
m7_51 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="x.Order > y.Order", span="126-126"];
m7_53 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="x.Scope < y.Scope", span="133-133"];
m7_55 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="x.Scope > y.Scope", span="137-137"];
m7_50 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="return -1;", span="124-124"];
m7_52 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="return 1;", span="128-128"];
m7_54 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="return -1;", span="135-135"];
m7_56 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="return 1;", span="139-139"];
m7_57 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="return 0;", span="142-142"];
m7_58 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", span="104-104"];
m7_5 [cluster="Unk.Equal", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.Equal", span=""];
m7_39 [cluster="object.GetType()", file="SqlServerProcessingJobFacts.cs", label="Entry object.GetType()", span="0-0"];
m7_9 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="return true;", prediction=30, span="58-58"];
m7_12 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerProcessingJobFacts.cs", label="Assert.Equal(''queue'', exception.ParamName)", span="25-25"];
m7_13 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", prediction=31, span="20-20"];
m7_14 [cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", prediction=32, span="23-23"];
m7_16 [cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", prediction=33, span="23-23"];
m7_6 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="14-14"];
m7_8 [cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", prediction=34, span="14-14"];
m7_10 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", prediction=35, span="20-20"];
m7_40 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SqlServerProcessingJobFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m7_24 [cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="fp.GetFilters(method)", prediction=36, span="77-77"];
m7_28 [cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label=filter, prediction=37, span="78-78"];
m7_41 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="SqlServerProcessingJobFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m7_38 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SqlServerProcessingJobFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m7_59 [file="SqlServerProcessingJobFacts.cs", label="HangFire.Common.Filters.JobFilterProviderCollection", span=""];
m7_60 [file="SqlServerProcessingJobFacts.cs", label="HangFire.Common.JobMethod", span=""];
m8_82 [cluster="System.Console.WriteLine(string, object)", file="Worker.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m8_5 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="var count = 1", span="25-25"];
m8_41 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="i++", span="88-88"];
m8_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m8_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="context == null", span="29-29"];
m8_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="throw new ArgumentNullException(''context'');", span="29-29"];
m8_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="_context = context", span="31-31"];
m8_4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m8_6 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34"];
m8_44 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="var number = count++", span="97-97"];
m8_7 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="var connection = _context.Storage.GetConnection()", span="36-36"];
m8_55 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="133-133"];
m8_8 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="var nextJob = connection.FetchNextJob(_context.Queues, cancellationToken)", span="38-38"];
m8_9 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=green, community=0, file="Worker.cs", label="ProcessJob(nextJob.JobId, connection, _context.PerformanceProcess)", prediction=38, span="42-42"];
m8_21 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="IState state", span="85-85"];
m8_22 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var jobData = connection.GetJobData(jobId)", span="89-89"];
m8_30 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="107-110"];
m8_31 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="115-115"];
m8_36 [cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37"];
m8_37 [cluster="HangFire.Storage.JobData.EnsureLoaded()", file="Worker.cs", label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27"];
m8_42 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="HangFire.Server.Worker", span=""];
m8_43 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="var seconds = int.Parse(command.Substring(2))", span="96-96"];
m8_46 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="101-101"];
m8_49 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="107-107"];
m8_50 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="var workCount = int.Parse(command.Substring(5))", span="111-111"];
m8_23 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="jobData.EnsureLoaded()", span="90-90"];
m8_24 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="92-92"];
m8_26 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new SucceededState()", span="96-96"];
m8_25 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="process.Run(performContext, jobData.Job)", span="94-94"];
m8_27 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label=JobPerformanceException, span="98-98"];
m8_28 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="100-103"];
m8_29 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label=Exception, span="105-105"];
m8_32 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="Exit HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="64-64"];
m8_33 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="Worker.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m8_35 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="Worker.cs", label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="24-24"];
m8_34 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="Worker.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m8_38 [cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="Worker.cs", label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35"];
m8_39 [cluster="HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="Worker.cs", label="Entry HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="20-20"];
m8_40 [cluster="HangFire.States.SucceededState.SucceededState()", file="Worker.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m8_45 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="98-98"];
m8_47 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="BackgroundJob.Enqueue<Services>(x => x.Recurring())", span="103-103"];
m8_48 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="Console.WriteLine(''Recurring job added'')", span="104-104"];
m8_51 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="112-122"];
m8_52 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="123-123"];
m8_53 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label=Exception, span="125-125"];
m8_54 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="Console.WriteLine(ex.Message)", span="127-127"];
m8_56 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="Console.ReadLine()", span="134-134"];
m8_57 [cluster="ConsoleSample.Program.Main()", file="Worker.cs", label="Exit ConsoleSample.Program.Main()", span="13-13"];
m8_61 [cluster="HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", file="Worker.cs", label="Entry HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", span="56-56"];
m8_108 [cluster="ConsoleSample.Services.EmptyCritical()", file="Worker.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="17-17"];
m8_60 [cluster="HangFire.Filters.RetryAttribute.RetryAttribute()", file="Worker.cs", label="Entry HangFire.Filters.RetryAttribute.RetryAttribute()", span="28-28"];
m8_86 [cluster="ConsoleSample.Services.Error()", file="Worker.cs", label="Entry ConsoleSample.Services.Error()", span="22-22"];
m8_73 [cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="Worker.cs", label="Entry HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="138-138"];
m8_69 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="Worker.cs", label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="97-97"];
m8_68 [cluster="int.Parse(string)", file="Worker.cs", label="Entry int.Parse(string)", span="0-0"];
m8_72 [cluster="System.TimeSpan.FromSeconds(double)", file="Worker.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m8_62 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="Worker.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41"];
m8_78 [cluster="ConsoleSample.Services.Random(int)", file="Worker.cs", label="Entry ConsoleSample.Services.Random(int)", span="35-35"];
m8_91 [cluster="System.Guid.ToString()", file="Worker.cs", label="Entry System.Guid.ToString()", span="0-0"];
m8_66 [cluster="string.StartsWith(string, System.StringComparison)", file="Worker.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m8_92 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="Worker.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="52-52"];
m8_63 [cluster="System.Console.ReadLine()", file="Worker.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m8_99 [cluster="ConsoleSample.Services.Recurring()", file="Worker.cs", label="Entry ConsoleSample.Services.Recurring()", span="29-29"];
m8_105 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="116-116"];
m8_75 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="49-49"];
m8_79 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="66-66"];
m8_83 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="81-81"];
m8_87 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="90-90"];
m8_94 [cluster="lambda expression", file="Worker.cs", label="x.Random(number)", span="98-98"];
m8_93 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="98-98"];
m8_96 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="103-103"];
m8_100 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="112-122"];
m8_77 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="49-49"];
m8_80 [cluster="lambda expression", file="Worker.cs", label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="66-66"];
m8_81 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="66-66"];
m8_84 [cluster="lambda expression", file="Worker.cs", label="x.Error()", span="81-81"];
m8_85 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="81-81"];
m8_88 [cluster="lambda expression", file="Worker.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="90-90"];
m8_89 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="90-90"];
m8_95 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="98-98"];
m8_97 [cluster="lambda expression", file="Worker.cs", label="x.Recurring()", span="103-103"];
m8_98 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="103-103"];
m8_101 [cluster="lambda expression", file="Worker.cs", label="i % 2 == 0", span="114-114"];
m8_102 [cluster="lambda expression", file="Worker.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="116-116"];
m8_103 [cluster="lambda expression", file="Worker.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="120-120"];
m8_104 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="112-122"];
m8_109 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="120-120"];
m8_106 [cluster="lambda expression", file="Worker.cs", label="x.EmptyCritical()", span="116-116"];
m8_107 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="116-116"];
m8_110 [cluster="lambda expression", file="Worker.cs", label="x.EmptyDefault()", span="120-120"];
m8_111 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="120-120"];
m8_64 [cluster="string.Equals(string, System.StringComparison)", file="Worker.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m8_74 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="Worker.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m8_90 [cluster="System.Guid.NewGuid()", file="Worker.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m8_65 [cluster="HangFire.BackgroundJobServer.Start()", file="Worker.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="93-93"];
m8_59 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="Worker.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25"];
m8_71 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="Worker.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="75-75"];
m8_70 [cluster="System.Console.WriteLine(string)", file="Worker.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m8_58 [cluster="ConsoleLogFactory.cstr", file="Worker.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m8_112 [cluster="ConsoleSample.Services.EmptyDefault()", file="Worker.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="12-12"];
m8_67 [cluster="string.Substring(int)", file="Worker.cs", label="Entry string.Substring(int)", span="0-0"];
m8_113 [file="Worker.cs", label=number, span=""];
m8_114 [file="Worker.cs", label=number, span=""];
m9_14 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs", label="Given(String.Format(''a job in the '{0}' queue'', row[''Queue'']))", span="40-40"];
m9_15 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs", label="i++", span="38-38"];
m9_16 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs", label="_queues = table.Rows.Select(x => x[''Queue'']).ToList()", span="44-44"];
m9_17 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34"];
m9_57 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="WorkerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="86-86"];
m9_58 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="WorkerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="92-92"];
m9_59 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", color=green, community=0, file="WorkerFacts.cs", label="Assert.IsNotNull(_exception)", prediction=39, span="94-94"];
m9_60 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="WorkerFacts.cs", label="Assert.AreEqual(typeof(OperationCanceledException).Name, _exception.GetType().Name)", span="95-95"];
m9_61 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="WorkerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="92-92"];
m9_62 [cluster="System.Exception.GetType()", file="WorkerFacts.cs", label="Entry System.Exception.GetType()", span="0-0"];
m9_63 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="WorkerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="99-99"];
m9_64 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="WorkerFacts.cs", label=_queues, span="101-101"];
m9_65 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="WorkerFacts.cs", label="Then(String.Format(''the '{0}' queue is empty'', queue))", span="103-103"];
m9_25 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="48-48"];
m9_29 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs", label=Exception, span="61-61"];
m9_21 [cluster="Unk.ToList", file="WorkerFacts.cs", label="Entry Unk.ToList", span=""];
m9_39 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs", label="this.FeatureBackground()", span="91-91"];
m9_66 [cluster="Unk.When", file="WorkerFacts.cs", label="Entry Unk.When", span=""];
m9_3 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m9_26 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs", label="var cts = new CancellationTokenSource()", span="50-50"];
m9_27 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs", label="Task.Factory.StartNew(() =>\r\n                {\r\n                    Thread.Sleep(TimeSpan.FromMilliseconds(100)); \r\n                    cts.Cancel();\r\n                })", span="51-55"];
m9_28 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="WorkerFacts.cs", label="_payload = _fetcher.DequeueJob(cts.Token)", span="59-59"];
m9_9 [cluster="System.TimeSpan.FromSeconds(double)", file="WorkerFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m9_10 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34"];
m9_11 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs", label="table.Rows", span="36-36"];
m9_12 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="WorkerFacts.cs", label="var i = 0", span="38-38"];
m9_35 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="51-55"];
m9_67 [cluster="Unk.Then", file="WorkerFacts.cs", label="Entry Unk.Then", span=""];
m9_68 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs", label="HangFire.Tests.JobFetcherSteps", span=""];
m9_69 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs", label=cts, span=""];
m9_70 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs", label="this.FeatureBackground()", span="156-156"];
m9_71 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158"];
m9_72 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="160-160"];
m9_73 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs", label="testRunner.Then(''the \'test\' queue should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162"];
m9_74 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs", label="this.ScenarioCleanup()", span="164-164"];
m9_75 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="WorkerFacts.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150"];
m9_13 [cluster="Unk.OnFeatureEnd", file="WorkerFacts.cs", label="Entry Unk.OnFeatureEnd", span=""];
m9_34 [cluster="Unk.Given", file="WorkerFacts.cs", label="Entry Unk.Given", span=""];
m9_5 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="WorkerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28"];
m9_41 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs", label="this.ScenarioCleanup()", span="95-95"];
m9_0 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m9_1 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m9_2 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Enqueued state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m9_54 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m9_40 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs", label="testRunner.Then(''the state name should be equal to \'Enqueued\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93"];
m9_18 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", file="WorkerFacts.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56"];
m9_7 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="WorkerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28"];
m9_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="WorkerFacts.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m9_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="WorkerFacts.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m9_56 [cluster="Unk.AddRow", file="WorkerFacts.cs", label="Entry Unk.AddRow", span=""];
m9_19 [cluster="Unk.Format", file="WorkerFacts.cs", label="Entry Unk.Format", span=""];
m9_20 [cluster="Unk.Select", file="WorkerFacts.cs", label="Entry Unk.Select", span=""];
m9_22 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="44-44"];
m9_23 [cluster="lambda expression", file="WorkerFacts.cs", label="x[''Queue'']", span="44-44"];
m9_24 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="44-44"];
m9_32 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="WorkerFacts.cs", label="testRunner.And(''the Enqueued state with the \'test\' value for the \'queue\' argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77"];
m9_33 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="WorkerFacts.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71"];
m9_30 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="WorkerFacts.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71"];
m9_31 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="WorkerFacts.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m9_37 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Enqueued\''', ((string[])(null)))", span="87-87"];
m9_36 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", span="85-85"];
m9_38 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="89-89"];
m9_43 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="WorkerFacts.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m9_45 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m9_46 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="104-104"];
m9_47 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="106-106"];
m9_48 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="WorkerFacts.cs", label="this.FeatureBackground()", span="108-108"];
m9_49 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="WorkerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77"];
m9_50 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="WorkerFacts.cs", label="Assert.IsNotNull(_payload)", span="79-79"];
m9_51 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="WorkerFacts.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", span="80-80"];
m9_52 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="WorkerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77"];
m9_53 [cluster="Unk.IsNotNull", file="WorkerFacts.cs", label="Entry Unk.IsNotNull", span=""];
m9_44 [cluster="Unk.Then", file="WorkerFacts.cs", label="Entry Unk.Then", span=""];
m9_4 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="WorkerFacts.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m9_42 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", file="WorkerFacts.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.StateNameShouldBeEnqueued()", span="85-85"];
m9_8 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="WorkerFacts.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12"];
m9_76 [file="WorkerFacts.cs", label="HangFire.Tests.States.EnqueuedStateFeature", span=""];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_16 -> m1_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_39 -> m1_19  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_21  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_30  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_36  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m2_51 -> m2_87  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m2_17 -> m2_109  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m2_17 -> m2_111  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m2_17 -> m2_112  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m2_17 -> m2_113  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m2_26 -> m2_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_26 -> m2_31  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m2_33 -> m2_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_34 -> m2_40  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_35 -> m2_38  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m2_35 -> m2_39  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m2_37 -> m2_39  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m2_19 -> m2_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_50 -> m2_93  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m2_50 -> m2_94  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m2_50 -> m2_96  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m2_91 -> m2_93  [color=darkseagreen4, key=1, label=filter, style=dashed];
m2_92 -> m2_94  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m2_92 -> m2_96  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_55 -> m2_58  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m2_55 -> m2_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_55 -> m2_64  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m2_61 -> m2_64  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m2_67 -> m2_72  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m2_71 -> m2_73  [color=darkseagreen4, key=1, label=stateChangingContext, style=dashed];
m2_71 -> m2_75  [color=darkseagreen4, key=1, label=stateChangingContext, style=dashed];
m2_71 -> m2_76  [color=darkseagreen4, key=1, label=stateChangingContext, style=dashed];
m2_74 -> m2_76  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m2_2 -> m2_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>", style=dashed];
m2_2 -> m2_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m2_2 -> m2_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m2_120 -> m2_10  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_38  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_39  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_60  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_73  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_75  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_76  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_87  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_103  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_111  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_112  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_120 -> m2_113  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m2_121 -> m2_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m3_73 -> m3_75  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_168 -> m3_170  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_171 -> m3_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1 -> m3_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_6 -> m3_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_34 -> m3_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_87 -> m3_92  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_88 -> m3_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_148 -> m3_150  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_148 -> m3_155  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_150 -> m3_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_48 -> m3_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_25 -> m3_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_121 -> m3_123  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_121 -> m3_124  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_209 -> m3_213  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m3_210 -> m3_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_116 -> m3_118  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_197 -> m3_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_111 -> m3_113  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_55 -> m3_57  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_55 -> m3_58  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_55 -> m3_59  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_55 -> m3_60  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_67 -> m3_69  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_174 -> m3_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_127 -> m3_129  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_127 -> m3_130  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_133 -> m3_135  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_133 -> m3_138  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_135 -> m3_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_159 -> m3_165  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_159 -> m3_161  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_159 -> m3_162  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_160 -> m3_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_181 -> m3_183  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_181 -> m3_186  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_183 -> m3_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_95 -> m3_97  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_95 -> m3_100  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_97 -> m3_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_189 -> m3_191  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_189 -> m3_194  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_191 -> m3_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_78 -> m3_83  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_79 -> m3_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_41 -> m3_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_103 -> m3_107  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_104 -> m3_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_218 -> m3_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_30  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_150  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_197  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_204  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_218 -> m3_216  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m3_219 -> m3_83  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_220 -> m3_92  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_221 -> m3_100  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_222 -> m3_107  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_223 -> m3_138  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_224 -> m3_155  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_225 -> m3_165  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_226 -> m3_186  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_227 -> m3_194  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_228 -> m3_213  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m4_18 -> m4_20  [color=green, key=1, label=processingJob, style=dashed];
m4_1 -> m4_6  [color=green, key=1, label="lambda expression", style=dashed];
m4_11 -> m4_14  [color=green, key=1, label="lambda expression", style=dashed];
m5_119 -> m5_122  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m5_97 -> m5_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_49 -> m5_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m5_49 -> m5_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m5_49 -> m5_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m5_56 -> m5_64  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_58 -> m5_63  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m5_22 -> m5_25  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_22 -> m5_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_31 -> m5_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_31 -> m5_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_32 -> m5_38  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m5_32 -> m5_39  [color=green, key=1, label=idAndQueue, style=dashed];
m5_29 -> m5_34  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m5_30 -> m5_34  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m5_35 -> m5_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_36 -> m5_36  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_139 -> m5_139  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_90 -> m5_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_111 -> m5_114  [color=darkseagreen4, key=1, label=double, style=dashed];
m5_144 -> m5_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m5_144 -> m5_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m5_144 -> m5_18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m5_144 -> m5_35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m5_144 -> m5_63  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m6_0 -> m6_3  [color=green, key=1, label=string, style=dashed];
m7_22 -> m7_31  [color=green, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>", style=dashed];
m7_30 -> m7_34  [color=green, key=1, label=visitedTypes, style=dashed];
m7_30 -> m7_36  [color=green, key=1, label=visitedTypes, style=dashed];
m7_31 -> m7_35  [color=green, key=1, label=filter, style=dashed];
m7_32 -> m7_34  [color=green, key=1, label=filterInstance, style=dashed];
m7_33 -> m7_36  [color=green, key=1, label=filterInstanceType, style=dashed];
m7_42 -> m7_45  [color=green, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m7_42 -> m7_47  [color=green, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m7_42 -> m7_49  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m7_42 -> m7_51  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m7_42 -> m7_53  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m7_42 -> m7_55  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m7_12 -> m7_24  [color=green, key=1, label="HangFire.Common.JobMethod", style=dashed];
m7_60 -> m7_24  [color=green, key=1, label="HangFire.Common.JobMethod", style=dashed];
m8_41 -> m8_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_44 -> m8_94  [color=darkseagreen4, key=1, label=number, style=dashed];
m8_7 -> m8_9  [color=green, key=1, label=connection, style=dashed];
m8_7 -> m8_21  [color=darkseagreen4, key=1, label=command, style=dashed];
m8_7 -> m8_31  [color=darkseagreen4, key=1, label=command, style=dashed];
m8_7 -> m8_36  [color=darkseagreen4, key=1, label=command, style=dashed];
m8_7 -> m8_37  [color=darkseagreen4, key=1, label=command, style=dashed];
m8_7 -> m8_42  [color=darkseagreen4, key=1, label=command, style=dashed];
m8_7 -> m8_46  [color=darkseagreen4, key=1, label=command, style=dashed];
m8_7 -> m8_49  [color=darkseagreen4, key=1, label=command, style=dashed];
m8_22 -> m8_25  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m8_31 -> m8_33  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m8_37 -> m8_39  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m8_42 -> m8_9  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m8_43 -> m8_45  [color=darkseagreen4, key=1, label=seconds, style=dashed];
m8_25 -> m8_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_32 -> m8_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_35 -> m8_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_34 -> m8_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_38 -> m8_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_40 -> m8_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_45 -> m8_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_47 -> m8_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_51 -> m8_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_102 -> m8_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_103 -> m8_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_114 -> m8_94  [color=darkseagreen4, key=1, label=number, style=dashed];
m9_15 -> m9_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_16 -> m9_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_27 -> m9_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_13  [color=darkseagreen4, key=1, label=row, style=dashed];
m9_11 -> m9_14  [color=darkseagreen4, key=1, label=row, style=dashed];
m9_12 -> m9_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_68 -> m9_59  [color=green, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m9_68 -> m9_6  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m9_68 -> m9_30  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m9_68 -> m9_50  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m9_68 -> m9_51  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m9_68 -> m9_56  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m9_68 -> m9_60  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m9_68 -> m9_64  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m9_49 -> m9_51  [color=darkseagreen4, key=1, label=table1, style=dashed];
m9_49 -> m9_52  [color=darkseagreen4, key=1, label=table1, style=dashed];
m9_76 -> m9_38  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_39  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_41  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_48  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_53  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_59  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_60  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_64  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_69  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m9_76 -> m9_74  [color=darkseagreen4, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
}
