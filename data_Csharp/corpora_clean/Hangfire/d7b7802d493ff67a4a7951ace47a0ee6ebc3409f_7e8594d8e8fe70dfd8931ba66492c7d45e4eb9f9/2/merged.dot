digraph  {
n0 [label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", span="12-12", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n1 [label="string createSql = @''\r\ninsert into HangFire.Counter ([Key], [Value], ExpireAt) \r\nvalues ('key', 1, @expireAt)''", span="14-16", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n2 [label="var connection = CreateConnection()", span="18-18", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n3 [label="connection.Execute(createSql, new { expireAt = DateTime.UtcNow.AddHours(1) })", span="21-21", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n10 [label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", span="35-35", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()"];
n4 [label="var aggregator = CreateAggregator(connection)", span="23-23", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n8 [label="Assert.Equal(1, connection.Query<int>(@''select count(*) from HangFire.AggregatedCounter'').Single())", span="31-31", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n11 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)"];
n12 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
n5 [label="var cts = new CancellationTokenSource()", span="24-24", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n13 [label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", span="40-40", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)"];
n7 [label="aggregator.Execute(cts.Token)", span="28-28", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n6 [label="cts.Cancel()", span="25-25", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n14 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()"];
n15 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()"];
n16 [label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n9 [label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", span="12-12", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n17 [label="Entry Unk.>", span="", cluster="Unk.>"];
n18 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n19 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n20 [label="return ConnectionUtils.CreateConnection();", span="37-37", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()"];
n21 [label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", span="35-35", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()"];
n22 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()"];
n23 [label="var storage = new SqlServerStorage(connection)", span="42-42", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)"];
n24 [label="return new CountersAggregator(storage, TimeSpan.Zero);", span="43-43", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)"];
n26 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="93-93", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)"];
n25 [label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", span="40-40", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)"];
n27 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)"];
d7 [label="var data = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="29-29", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", color=green, community=0];
d4 [label="var job = _connection.Query<Job>(\r\n                @''select InvocationData, State from HangFire.Job where id = @id'',\r\n                new { id = id })\r\n                .SingleOrDefault()", span="22-25", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)"];
d5 [label="job == null", span="27-27", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)"];
d8 [label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = data,\r\n                State = job.State,\r\n            };", span="31-35", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)"];
d10 [label="Entry Unk.>", span="", cluster="Unk.>"];
d23 [label="HangFire.SqlServer.SqlStoredJobs", span=""];
d3 [label="Entry HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", span="20-20", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)"];
d11 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault"];
d6 [label="return null;", span="27-27", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)"];
d9 [label="Exit HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", span="20-20", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)"];
d12 [label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2", cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()"];
d18 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="51-54", cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)"];
d1 [label="_connection = connection", span="17-17", cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)"];
d14 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="40-46", cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)"];
d21 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = payload.Id, queueName = payload.Queue })", span="59-60", cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)"];
d17 [label="Entry HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49", cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)"];
d19 [label="Exit HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49", cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)"];
d0 [label="Entry HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15", cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)"];
d2 [label="Exit HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15", cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)"];
d13 [label="Entry HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", span="38-38", cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)"];
d15 [label="Exit HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", span="38-38", cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)"];
d16 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
d20 [label="Entry HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57", cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)"];
d22 [label="Exit HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57", cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)"];
m1_0 [label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_1 [label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_22 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs"];
m1_23 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs"];
m1_26 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs"];
m1_27 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs"];
m1_2 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs"];
m1_3 [label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs"];
m1_18 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs"];
m1_19 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs"];
m1_28 [label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs"];
m1_29 [label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs"];
m1_32 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", span="50-50", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", file="IWriteOnlyTransaction.cs"];
m1_33 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", span="50-50", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", file="IWriteOnlyTransaction.cs"];
m1_30 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", span="49-49", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", file="IWriteOnlyTransaction.cs"];
m1_31 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", span="49-49", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", file="IWriteOnlyTransaction.cs"];
m1_34 [label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="51-51", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_35 [label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="51-51", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs"];
m1_9 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs"];
m1_12 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_13 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_36 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="53-53", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs"];
m1_37 [label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="53-53", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs"];
m1_10 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m1_11 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m1_20 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs"];
m1_21 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs"];
m1_14 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m1_15 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m1_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m1_5 [label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m1_6 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m1_7 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m1_16 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_17 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_24 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs"];
m1_25 [label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs"];
m2_6 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m2_7 [label="_transaction.Dispose()", span="38-38", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m2_8 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m2_128 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="158-158", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_126 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_127 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="157-157", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_129 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyTransaction.cs"];
m2_90 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="RedisWriteOnlyTransaction.cs"];
m2_65 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyTransaction.cs"];
m2_156 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_157 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="181-182", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_158 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_78 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RedisWriteOnlyTransaction.cs"];
m2_111 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="147-147", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_109 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_110 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="146-146", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_112 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_169 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="191-191", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs"];
m2_170 [label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="194-195", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs"];
m2_171 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="191-191", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs"];
m2_55 [label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="94-95", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_53 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_54 [label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="89-92", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_56 [label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="101-101", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_57 [label="storedData.Add(''State'', state.Name)", span="102-102", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_58 [label="state.Reason != null", span="104-104", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_59 [label="storedData.Add(''Reason'', state.Reason)", span="106-106", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_60 [label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="109-111", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_61 [label="AddJobState(jobId, state)", span="113-113", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_62 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_70 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisWriteOnlyTransaction.cs"];
m2_98 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="RedisWriteOnlyTransaction.cs"];
m2_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RedisWriteOnlyTransaction.cs"];
m2_189 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn))", span="211-212", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", color=red, community=1, file="RedisWriteOnlyTransaction.cs"];
m2_188 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="209-209", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_190 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="209-209", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_74 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="RedisWriteOnlyTransaction.cs"];
m2_108 [label="Entry Unk.IncrementValue", span="", cluster="Unk.IncrementValue", file="RedisWriteOnlyTransaction.cs"];
m2_38 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_39 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="79-80", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_40 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="81-82", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_41 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="83-84", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_42 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_31 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="RedisWriteOnlyTransaction.cs"];
m2_142 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="RedisWriteOnlyTransaction.cs"];
m2_119 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="150-150", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_120 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="152-152", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_121 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="150-150", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_136 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_137 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="163-164", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_138 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_149 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_150 [label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="175-176", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_151 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_63 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisWriteOnlyTransaction.cs"];
m2_9 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs"];
m2_10 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_11 [label="!_transaction.Commit()", span="43-43", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_12 [label="int replayCount = 1", span="49-49", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_13 [label="int maxReplayCount = 3", span="50-50", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_15 [label="replayCount++ >= maxReplayCount", span="54-54", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_14 [label="!_transaction.Replay()", span="52-52", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_16 [label="throw new RedisException(''Transaction commit was failed due to WATCH condition failure. Retry attempts exceeded.'');", span="56-56", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_17 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_176 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="198-198", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="RedisWriteOnlyTransaction.cs"];
m2_177 [label="_transaction.QueueCommand(x => x.IncrementValue(\r\n                RedisStorage.Prefix + key))", span="200-201", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", color=red, community=1, file="RedisWriteOnlyTransaction.cs"];
m2_178 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="198-198", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="RedisWriteOnlyTransaction.cs"];
m2_64 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="RedisWriteOnlyTransaction.cs"];
m2_191 [label="Entry lambda expression", span="211-212", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_28 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="64-66", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_33 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="68-70", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_36 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="72-74", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_27 [label="Entry lambda expression", span="64-66", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_32 [label="Entry lambda expression", span="68-70", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_35 [label="Entry lambda expression", span="72-74", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_29 [label="Exit lambda expression", span="64-66", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_34 [label="Exit lambda expression", span="68-70", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_37 [label="Exit lambda expression", span="72-74", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_44 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="79-80", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_48 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="81-82", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_51 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="83-84", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_43 [label="Entry lambda expression", span="79-80", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_47 [label="Entry lambda expression", span="81-82", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_50 [label="Entry lambda expression", span="83-84", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_45 [label="Exit lambda expression", span="79-80", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_49 [label="Exit lambda expression", span="81-82", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_52 [label="Exit lambda expression", span="83-84", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_68 [label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="89-92", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_72 [label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="94-95", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_76 [label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="109-111", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_67 [label="Entry lambda expression", span="89-92", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_71 [label="Entry lambda expression", span="94-95", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_75 [label="Entry lambda expression", span="109-111", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_69 [label="Exit lambda expression", span="89-92", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_73 [label="Exit lambda expression", span="94-95", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_77 [label="Exit lambda expression", span="109-111", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_87 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="125-127", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_86 [label="Entry lambda expression", span="125-127", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_88 [label="Exit lambda expression", span="125-127", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_96 [label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="132-133", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_100 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="135-136", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_95 [label="Entry lambda expression", span="132-133", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_99 [label="Entry lambda expression", span="135-136", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_97 [label="Exit lambda expression", span="132-133", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_101 [label="Exit lambda expression", span="135-136", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_106 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="141-141", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_105 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_107 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_114 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_117 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="147-147", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_113 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_116 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_115 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_118 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_123 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="152-152", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_122 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_124 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_131 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="157-157", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_134 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="158-158", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_130 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_133 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_132 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_135 [label="Exit lambda expression", span="158-158", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_140 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="163-164", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_139 [label="Entry lambda expression", span="163-164", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_141 [label="Exit lambda expression", span="163-164", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_147 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="169-170", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_146 [label="Entry lambda expression", span="169-170", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_148 [label="Exit lambda expression", span="169-170", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_153 [label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="175-176", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_152 [label="Entry lambda expression", span="175-176", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_154 [label="Exit lambda expression", span="175-176", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_160 [label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="181-182", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_159 [label="Entry lambda expression", span="181-182", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_161 [label="Exit lambda expression", span="181-182", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_166 [label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="187-188", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_165 [label="Entry lambda expression", span="187-188", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_167 [label="Exit lambda expression", span="187-188", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_173 [label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="194-195", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_172 [label="Entry lambda expression", span="194-195", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_174 [label="Exit lambda expression", span="194-195", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_180 [label="x.IncrementValue(\r\n                RedisStorage.Prefix + key)", span="200-201", cluster="lambda expression", color=red, community=1, file="RedisWriteOnlyTransaction.cs"];
m2_179 [label="Entry lambda expression", span="200-201", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_181 [label="Exit lambda expression", span="200-201", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_186 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="206-206", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m2_185 [label="Entry lambda expression", span="206-206", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_187 [label="Exit lambda expression", span="206-206", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_192 [label="x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn)", span="211-212", cluster="lambda expression", color=red, community=1, file="RedisWriteOnlyTransaction.cs"];
m2_193 [label="Exit lambda expression", span="211-212", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_85 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyTransaction.cs"];
m2_143 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs"];
m2_144 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="169-170", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs"];
m2_145 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs"];
m2_182 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="204-204", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="RedisWriteOnlyTransaction.cs"];
m2_183 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="206-206", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m2_184 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="204-204", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="RedisWriteOnlyTransaction.cs"];
m2_102 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="139-139", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_103 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="141-141", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_104 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="139-139", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_168 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="RedisWriteOnlyTransaction.cs"];
m2_24 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_21 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_22 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_23 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_25 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_91 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="130-130", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_92 [label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="132-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_93 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="135-136", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_94 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="130-130", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_89 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlyTransaction.cs"];
m2_46 [label="Entry Unk.Persist", span="", cluster="Unk.Persist", file="RedisWriteOnlyTransaction.cs"];
m2_18 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="RedisWriteOnlyTransaction.cs"];
m2_66 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="116-116", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_79 [label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="120-120", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_80 [label="storedData.Add(''State'', state.Name)", span="121-121", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_81 [label="storedData.Add(''Reason'', state.Reason)", span="122-122", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_83 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="125-127", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_82 [label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="123-123", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_84 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="116-116", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_19 [label="Entry Unk.Replay", span="", cluster="Unk.Replay", file="RedisWriteOnlyTransaction.cs"];
m2_20 [label="Entry RedisException.cstr", span="", cluster="RedisException.cstr", file="RedisWriteOnlyTransaction.cs"];
m2_26 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisWriteOnlyTransaction.cs"];
m2_125 [label="Entry Unk.DecrementValue", span="", cluster="Unk.DecrementValue", file="RedisWriteOnlyTransaction.cs"];
m2_175 [label="Entry Unk.TrimList", span="", cluster="Unk.TrimList", file="RedisWriteOnlyTransaction.cs"];
m2_162 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_163 [label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="187-188", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_164 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_155 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="RedisWriteOnlyTransaction.cs"];
m2_0 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_1 [label="transaction == null", span="31-31", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_3 [label="_transaction = transaction", span="33-33", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_2 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_4 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_194 [label="HangFire.Redis.RedisWriteOnlyTransaction", span="", file="RedisWriteOnlyTransaction.cs"];
m2_195 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_196 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m2_197 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_198 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_199 [label="HangFire.States.State", span="", file="RedisWriteOnlyTransaction.cs"];
m2_200 [label=storedData, span="", file="RedisWriteOnlyTransaction.cs"];
m2_201 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_202 [label=storedData, span="", file="RedisWriteOnlyTransaction.cs"];
m2_203 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_204 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_205 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_206 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_207 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m2_208 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_209 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_210 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m2_211 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_212 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_213 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_214 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_215 [label=double, span="", file="RedisWriteOnlyTransaction.cs"];
m2_216 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_217 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_218 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_219 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_220 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_221 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_222 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_223 [label=int, span="", file="RedisWriteOnlyTransaction.cs"];
m2_224 [label=int, span="", file="RedisWriteOnlyTransaction.cs"];
m2_225 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_226 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_227 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_228 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m3_0 [label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="SqlServerConnection.cs"];
m3_1 [label="ContentType = ''text/css''", span="32-32", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="SqlServerConnection.cs"];
m3_2 [label="ContentEncoding = Encoding.UTF8", span="33-33", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="SqlServerConnection.cs"];
m3_3 [label="Exit HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="SqlServerConnection.cs"];
m3_4 [label="HangFire.Web.StyleSheetHandler", span="", file="SqlServerConnection.cs"];
m5_60 [label="Entry Hangfire.Server.Worker.ToString()", span="161-161", cluster="Hangfire.Server.Worker.ToString()", file="SqlServerWriteOnlyTransaction.cs"];
m5_61 [label="return $''{GetType().Name} #{_workerId.Substring(0, 8)}'';", span="163-163", cluster="Hangfire.Server.Worker.ToString()", file="SqlServerWriteOnlyTransaction.cs"];
m5_62 [label="Exit Hangfire.Server.Worker.ToString()", span="161-161", cluster="Hangfire.Server.Worker.ToString()", file="SqlServerWriteOnlyTransaction.cs"];
m5_83 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="SqlServerWriteOnlyTransaction.cs"];
m5_52 [label="Entry Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="166-166", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_116 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="SqlServerWriteOnlyTransaction.cs"];
m5_16 [label="Entry HangFire.Server.SchedulePoller.Dispose()", span="40-40", cluster="HangFire.Server.SchedulePoller.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m5_59 [label="Entry Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", span="210-210", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="SqlServerWriteOnlyTransaction.cs"];
m5_84 [label="fetchedJob.Requeue()", span="214-214", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="SqlServerWriteOnlyTransaction.cs"];
m5_86 [label="Logger.WarnException($''Failed to immediately re-queue the background job '{fetchedJob.JobId}'. Next invocation may be delayed, if invisibility timeout is used'', ex)", span="218-218", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="SqlServerWriteOnlyTransaction.cs"];
m5_85 [label=Exception, span="216-216", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="SqlServerWriteOnlyTransaction.cs"];
m5_87 [label="Exit Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", span="210-210", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="SqlServerWriteOnlyTransaction.cs"];
m5_46 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="SqlServerWriteOnlyTransaction.cs"];
m5_31 [label="appliedState == null || !appliedState.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="106-106", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_79 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerWriteOnlyTransaction.cs"];
m5_17 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="SqlServerWriteOnlyTransaction.cs"];
m5_18 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SqlServerWriteOnlyTransaction.cs"];
m5_36 [label="state != null", span="125-125", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_37 [label="TryChangeState(context, connection, fetchedJob, state, new[] { ProcessingState.StateName }, CancellationToken.None)", span="128-128", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_38 [label="fetchedJob.RemoveFromQueue()", span="136-136", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_40 [label="context.IsShutdownRequested", span="143-143", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_41 [label="Logger.Info(String.Format(\r\n                            ''Shutdown request requested while processing background job '{0}'. It will be re-queued.'',\r\n                            fetchedJob.JobId))", span="145-147", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_42 [label="Logger.ErrorException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="151-151", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_39 [label=Exception, span="141-141", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_43 [label="Requeue(fetchedJob)", span="154-154", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_44 [label="throw;", span="155-155", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_80 [label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="132-132", cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="SqlServerWriteOnlyTransaction.cs"];
m5_63 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SqlServerWriteOnlyTransaction.cs"];
m5_15 [label="Exit Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="62-62", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="SqlServerWriteOnlyTransaction.cs"];
m5_56 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerWriteOnlyTransaction.cs"];
m5_27 [label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="89-89", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_20 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="SqlServerWriteOnlyTransaction.cs"];
m5_21 [label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_24 [label="var connection = context.Storage.GetConnection()", span="82-82", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_25 [label="var fetchedJob = connection.FetchNextJob(_queues, context.CancellationToken)", span="83-83", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_22 [label="context == null", span="80-80", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_23 [label="throw new ArgumentNullException(nameof(context));", span="80-80", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_26 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="85-85", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_77 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", span="45-45", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_11 [label="_queues = queues.ToArray()", span="71-71", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="SqlServerWriteOnlyTransaction.cs"];
m5_49 [label="thread.Join()", span="97-97", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SqlServerWriteOnlyTransaction.cs"];
m5_89 [label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="280-280", cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="SqlServerWriteOnlyTransaction.cs"];
m5_55 [label="Entry Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="222-222", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_95 [label="var jobToken = new ServerJobCancellationToken(connection, jobId, context.ServerId, _workerId, context.CancellationToken)", span="240-240", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_99 [label="var result = _performer.Perform(performContext)", span="246-246", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_105 [label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="260-263", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_109 [label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during processing of a background job.''\r\n                };", span="272-275", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_94 [label="var backgroundJob = new BackgroundJob(jobId, jobData.Job, jobData.CreatedAt)", span="238-238", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_96 [label="var performContext = new PerformContext(connection, backgroundJob, jobToken)", span="241-241", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_98 [label="var duration = Stopwatch.StartNew()", span="244-244", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_100 [label="duration.Stop()", span="247-247", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_101 [label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="249-249", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_104 [label=JobPerformanceException, span="258-258", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_107 [label="ex is OperationCanceledException && context.IsShutdownRequested", span="267-267", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_90 [label="var jobData = connection.GetJobData(jobId)", span="226-226", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_93 [label="jobData.EnsureLoaded()", span="236-236", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_97 [label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="243-243", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_92 [label="return null;", span="233-233", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_103 [label="return null;", span="256-256", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_108 [label="throw;", span="269-269", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_106 [label=Exception, span="265-265", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_91 [label="jobData == null", span="227-227", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_102 [label=JobAbortedException, span="251-251", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_110 [label="Exit Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="222-222", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_29 [label="var processingState = new ProcessingState(context.ServerId, _workerId)", span="94-94", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_81 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerWriteOnlyTransaction.cs"];
m5_33 [label="fetchedJob.RemoveFromQueue()", span="113-113", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_118 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="SqlServerWriteOnlyTransaction.cs"];
m5_119 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SqlServerWriteOnlyTransaction.cs"];
m5_45 [label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_51 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_111 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_0 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17", cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m5_1 [label="_pollInterval = pollInterval", span="19-19", cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m5_2 [label="Exit HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17", cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m5_34 [label="return;", span="114-114", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_48 [label="thread.Interrupt()", span="96-96", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SqlServerWriteOnlyTransaction.cs"];
m5_64 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m5_54 [label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24", cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="SqlServerWriteOnlyTransaction.cs"];
m5_112 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="SqlServerWriteOnlyTransaction.cs"];
m5_88 [label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25", cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="SqlServerWriteOnlyTransaction.cs"];
m5_30 [label="var appliedState = TryChangeState(\r\n                            context, \r\n                            connection, \r\n                            fetchedJob, \r\n                            processingState, \r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token)", span="96-102", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_19 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="SqlServerWriteOnlyTransaction.cs"];
m5_47 [label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36", cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_50 [label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_53 [label="HangFire.Server.SchedulePoller", span="", cluster="string.Equals(string, System.StringComparison)", file="SqlServerWriteOnlyTransaction.cs"];
m5_13 [label="_stateChanger = stateChanger", span="73-73", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="SqlServerWriteOnlyTransaction.cs"];
m5_32 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="110-110", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_57 [label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204", cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerWriteOnlyTransaction.cs"];
m5_28 [label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="90-92", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_4 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="24-24", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SqlServerWriteOnlyTransaction.cs"];
m5_12 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="SqlServerWriteOnlyTransaction.cs"];
m5_14 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="SqlServerWriteOnlyTransaction.cs"];
m5_9 [label="return true;", span="37-37", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SqlServerWriteOnlyTransaction.cs"];
m5_5 [label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="26-29", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SqlServerWriteOnlyTransaction.cs"];
m5_6 [label="String.IsNullOrEmpty(jobId)", span="31-31", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SqlServerWriteOnlyTransaction.cs"];
m5_7 [label="return false;", span="33-33", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SqlServerWriteOnlyTransaction.cs"];
m5_8 [label="EnqueueScheduledJob(jobId)", span="36-36", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SqlServerWriteOnlyTransaction.cs"];
m5_10 [label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SqlServerWriteOnlyTransaction.cs"];
m5_82 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m5_35 [label="var state = PerformJob(context, connection, fetchedJob.JobId)", span="123-123", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_78 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_117 [label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20", cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="SqlServerWriteOnlyTransaction.cs"];
m5_58 [label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="161-161", cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="SqlServerWriteOnlyTransaction.cs"];
m5_3 [label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SqlServerWriteOnlyTransaction.cs"];
m5_114 [label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_115 [label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", span="36-36", cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_72 [label="context.CancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(retryAttempt))", span="197-197", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m5_66 [label="var retryAttempt = 0", span="176-176", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_71 [label="exception = ex", span="194-194", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_73 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="198-198", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m5_74 [label="retryAttempt++", span="176-176", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_75 [label="return _stateChanger.ChangeState(new StateChangeContext(\r\n                context.Storage,\r\n                connection,\r\n                fetchedJob.JobId,\r\n                new FailedState(exception) { Reason = $''Failed to change state to a '{state.Name}' one due to an exception after {MaxStateChangeAttempts} retry attempts'' },\r\n                expectedStates,\r\n                cancellationToken));", span="201-207", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m5_65 [label="Exception exception = null", span="174-174", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_67 [label="retryAttempt < MaxStateChangeAttempts", span="176-176", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_68 [label="return _stateChanger.ChangeState(new StateChangeContext(\r\n                        context.Storage,\r\n                        connection,\r\n                        fetchedJob.JobId,\r\n                        state,\r\n                        expectedStates,\r\n                        cancellationToken));", span="180-186", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_70 [label="Logger.DebugException(\r\n                        String.Format(''State change attempt {0} of {1} failed due to an error, see inner exception for details'', retryAttempt+1, MaxStateChangeAttempts), \r\n                        ex)", span="190-192", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_69 [label=Exception, span="188-188", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_76 [label="Exit Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="166-166", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m5_113 [label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="SqlServerWriteOnlyTransaction.cs"];
m5_120 [label="Hangfire.Server.Worker", span="", file="SqlServerWriteOnlyTransaction.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=createSql];
n1 -> n1  [key=3, color=darkorchid, style=bold, label="Local variable string createSql"];
n2 -> n3  [key=0, style=solid];
n2 -> n10  [key=2, style=dotted];
n2 -> n4  [key=1, style=dashed, color=darkseagreen4, label=connection];
n2 -> n8  [key=1, style=dashed, color=darkseagreen4, label=connection];
n3 -> n4  [key=0, style=solid];
n3 -> n11  [key=2, style=dotted];
n3 -> n12  [key=2, style=dotted];
n10 -> n20  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n13  [key=2, style=dotted];
n4 -> n7  [key=1, style=dashed, color=darkseagreen4, label=aggregator];
n8 -> n9  [key=0, style=solid];
n8 -> n17  [key=2, style=dotted];
n8 -> n18  [key=2, style=dotted];
n8 -> n19  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n14  [key=2, style=dotted];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label=cts];
n13 -> n23  [key=0, style=solid];
n13 -> n2  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
n7 -> n8  [key=0, style=solid];
n7 -> n16  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n15  [key=2, style=dotted];
n9 -> n0  [key=0, style=bold, color=blue];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=2, style=dotted];
n21 -> n10  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n23 -> n26  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n27  [key=2, style=dotted];
n25 -> n13  [key=0, style=bold, color=blue];
d7 -> d8  [key=0, style=solid, color=green];
d7 -> d10  [key=2, style=dotted, color=green];
d4 -> d7  [key=1, style=dashed, color=green, label=job];
d4 -> d5  [key=0, style=solid];
d4 -> d10  [key=2, style=dotted];
d4 -> d11  [key=2, style=dotted];
d4 -> d8  [key=1, style=dashed, color=darkseagreen4, label=job];
d5 -> d7  [key=0, style=solid, color=green];
d5 -> d6  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d8 -> d12  [key=2, style=dotted];
d23 -> d4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
d23 -> d1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
d23 -> d14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
d23 -> d18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
d23 -> d21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
d3 -> d4  [key=0, style=solid];
d6 -> d9  [key=0, style=solid];
d9 -> d3  [key=0, style=bold, color=blue];
d18 -> d10  [key=2, style=dotted];
d18 -> d11  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d14 -> d16  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d16  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d19 -> d17  [key=0, style=bold, color=blue];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [key=0, style=bold, color=blue];
d13 -> d14  [key=0, style=solid];
d15 -> d13  [key=0, style=bold, color=blue];
d20 -> d21  [key=0, style=solid];
d22 -> d20  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_22  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_26  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_18  [key=0, style=bold, color=blue];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_28  [key=0, style=bold, color=blue];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_32  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_30  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_34  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_8  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_12  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_36  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_10  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_20  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_14  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_16  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_24  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=2, style=dotted];
m2_8 -> m2_6  [key=0, style=bold, color=blue];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_26  [key=2, style=dotted];
m2_128 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_126 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_126 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_26  [key=2, style=dotted];
m2_127 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_129 -> m2_126  [key=0, style=bold, color=blue];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_26  [key=2, style=dotted];
m2_157 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_158 -> m2_156  [key=0, style=bold, color=blue];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_26  [key=2, style=dotted];
m2_111 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_109 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_109 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_26  [key=2, style=dotted];
m2_110 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_112 -> m2_109  [key=0, style=bold, color=blue];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_26  [key=2, style=dotted];
m2_170 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_171 -> m2_169  [key=0, style=bold, color=blue];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_26  [key=2, style=dotted];
m2_55 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_53 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_53 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_53 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_53 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_26  [key=2, style=dotted];
m2_54 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_63  [key=2, style=dotted];
m2_56 -> m2_64  [key=2, style=dotted];
m2_56 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_56 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_56 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_65  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_65  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_26  [key=2, style=dotted];
m2_60 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_66  [key=2, style=dotted];
m2_62 -> m2_53  [key=0, style=bold, color=blue];
m2_189 -> m2_190  [key=0, style=solid, color=red];
m2_189 -> m2_26  [key=2, style=dotted, color=red];
m2_189 -> m2_191  [key=1, style=dashed, color=red, label="lambda expression"];
m2_188 -> m2_189  [key=0, style=solid, color=red];
m2_188 -> m2_192  [key=1, style=dashed, color=red, label=string];
m2_190 -> m2_188  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_26  [key=2, style=dotted];
m2_39 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_26  [key=2, style=dotted];
m2_40 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_26  [key=2, style=dotted];
m2_41 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_42 -> m2_38  [key=0, style=bold, color=blue];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_26  [key=2, style=dotted];
m2_120 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_121 -> m2_119  [key=0, style=bold, color=blue];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_26  [key=2, style=dotted];
m2_137 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_138 -> m2_136  [key=0, style=bold, color=blue];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_26  [key=2, style=dotted];
m2_150 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_151 -> m2_149  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_17  [key=0, style=solid];
m2_11 -> m2_18  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=replayCount];
m2_12 -> m2_12  [key=3, color=darkorchid, style=bold, label="Local variable int replayCount"];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=maxReplayCount];
m2_13 -> m2_13  [key=3, color=darkorchid, style=bold, label="Local variable int maxReplayCount"];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_14  [key=0, style=solid];
m2_15 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=replayCount];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_17  [key=0, style=solid];
m2_14 -> m2_19  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_20  [key=2, style=dotted];
m2_17 -> m2_10  [key=0, style=bold, color=blue];
m2_176 -> m2_177  [key=0, style=solid, color=red];
m2_176 -> m2_180  [key=1, style=dashed, color=red, label=string];
m2_177 -> m2_178  [key=0, style=solid, color=red];
m2_177 -> m2_26  [key=2, style=dotted, color=red];
m2_177 -> m2_179  [key=1, style=dashed, color=red, label="lambda expression"];
m2_178 -> m2_176  [key=0, style=bold, color=blue];
m2_64 -> m2_0  [key=3, color=darkorchid, style=bold, label="Field variable IRedisTransaction _transaction"];
m2_191 -> m2_192  [key=0, style=solid, color=red];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_28 -> m2_31  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_30  [key=2, style=dotted];
m2_33 -> m2_31  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_30  [key=2, style=dotted];
m2_36 -> m2_31  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_29 -> m2_27  [key=0, style=bold, color=blue];
m2_34 -> m2_32  [key=0, style=bold, color=blue];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_30  [key=2, style=dotted];
m2_44 -> m2_46  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_30  [key=2, style=dotted];
m2_48 -> m2_46  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_30  [key=2, style=dotted];
m2_51 -> m2_46  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_45 -> m2_43  [key=0, style=bold, color=blue];
m2_49 -> m2_47  [key=0, style=bold, color=blue];
m2_52 -> m2_50  [key=0, style=bold, color=blue];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_30  [key=2, style=dotted];
m2_68 -> m2_70  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_30  [key=2, style=dotted];
m2_72 -> m2_74  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_30  [key=2, style=dotted];
m2_76 -> m2_78  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid];
m2_69 -> m2_67  [key=0, style=bold, color=blue];
m2_73 -> m2_71  [key=0, style=bold, color=blue];
m2_77 -> m2_75  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_30  [key=2, style=dotted];
m2_87 -> m2_89  [key=2, style=dotted];
m2_87 -> m2_90  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_88 -> m2_86  [key=0, style=bold, color=blue];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_98  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_30  [key=2, style=dotted];
m2_100 -> m2_90  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_97 -> m2_95  [key=0, style=bold, color=blue];
m2_101 -> m2_99  [key=0, style=bold, color=blue];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_107 -> m2_105  [key=0, style=bold, color=blue];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_108  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_31  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_115 -> m2_113  [key=0, style=bold, color=blue];
m2_118 -> m2_116  [key=0, style=bold, color=blue];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_124 -> m2_122  [key=0, style=bold, color=blue];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_125  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_31  [key=2, style=dotted];
m2_130 -> m2_131  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_132 -> m2_130  [key=0, style=bold, color=blue];
m2_135 -> m2_133  [key=0, style=bold, color=blue];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_142  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_141 -> m2_139  [key=0, style=bold, color=blue];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_142  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_148 -> m2_146  [key=0, style=bold, color=blue];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_155  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_154 -> m2_152  [key=0, style=bold, color=blue];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_90  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_161 -> m2_159  [key=0, style=bold, color=blue];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_168  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_167 -> m2_165  [key=0, style=bold, color=blue];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_175  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_174 -> m2_172  [key=0, style=bold, color=blue];
m2_180 -> m2_181  [key=0, style=solid, color=red];
m2_180 -> m2_108  [key=2, style=dotted, color=red];
m2_179 -> m2_180  [key=0, style=solid, color=red];
m2_181 -> m2_179  [key=0, style=bold, color=blue];
m2_186 -> m2_187  [key=0, style=solid, color=red];
m2_186 -> m2_125  [key=2, style=dotted, color=red];
m2_185 -> m2_186  [key=0, style=solid, color=red];
m2_187 -> m2_185  [key=0, style=bold, color=blue];
m2_192 -> m2_193  [key=0, style=solid, color=red];
m2_192 -> m2_31  [key=2, style=dotted, color=red];
m2_193 -> m2_191  [key=0, style=bold, color=blue];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_26  [key=2, style=dotted];
m2_144 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_145 -> m2_143  [key=0, style=bold, color=blue];
m2_182 -> m2_183  [key=0, style=solid, color=red];
m2_182 -> m2_186  [key=1, style=dashed, color=red, label=string];
m2_183 -> m2_184  [key=0, style=solid, color=red];
m2_183 -> m2_26  [key=2, style=dotted, color=red];
m2_183 -> m2_185  [key=1, style=dashed, color=red, label="lambda expression"];
m2_184 -> m2_182  [key=0, style=bold, color=blue];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_26  [key=2, style=dotted];
m2_103 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_104 -> m2_102  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=2, style=dotted];
m2_24 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_21 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_21 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_21 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_21 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_26  [key=2, style=dotted];
m2_22 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_26  [key=2, style=dotted];
m2_23 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_25 -> m2_21  [key=0, style=bold, color=blue];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_91 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_91 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_26  [key=2, style=dotted];
m2_92 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_26  [key=2, style=dotted];
m2_93 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_94 -> m2_91  [key=0, style=bold, color=blue];
m2_66 -> m2_79  [key=0, style=solid];
m2_66 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_66 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_66 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_66 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_66 -> m2_53  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.States.State state"];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_63  [key=2, style=dotted];
m2_79 -> m2_64  [key=2, style=dotted];
m2_79 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_79 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_79 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_79 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_65  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_65  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_26  [key=2, style=dotted];
m2_83 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_85  [key=2, style=dotted];
m2_82 -> m2_65  [key=2, style=dotted];
m2_84 -> m2_66  [key=0, style=bold, color=blue];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_26  [key=2, style=dotted];
m2_163 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_164 -> m2_162  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_2 -> m2_4  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_194 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_177  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_183  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_189  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_195 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_195 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_195 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_196 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_196 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_196 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_197 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_197 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_197 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_198 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_198 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_198 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_199 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_200 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_201 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_202 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_203 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_203 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_204 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_205 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_206 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_206 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_207 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_208 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_209 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_209 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_210 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_211 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_212 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_213 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_214 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_215 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=double];
m2_216 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_217 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_218 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_219 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_220 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_221 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_222 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_223 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_224 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_225 -> m2_180  [key=1, style=dashed, color=red, label=string];
m2_226 -> m2_186  [key=1, style=dashed, color=red, label=string];
m2_227 -> m2_192  [key=1, style=dashed, color=red, label=string];
m2_228 -> m2_192  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.StyleSheetHandler"];
m3_4 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.StyleSheetHandler"];
m5_60 -> m5_61  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_63  [key=2, style=dotted];
m5_61 -> m5_64  [key=2, style=dotted];
m5_62 -> m5_60  [key=0, style=bold, color=blue];
m5_52 -> m5_72  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m5_52 -> m5_73  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m5_52 -> m5_75  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m5_52 -> m5_65  [key=0, style=solid];
m5_52 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_16 -> m5_17  [key=0, style=solid];
m5_59 -> m5_84  [key=0, style=solid];
m5_59 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IFetchedJob"];
m5_84 -> m5_87  [key=0, style=solid];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_88  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_89  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_87 -> m5_59  [key=0, style=bold, color=blue];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_35  [key=0, style=solid];
m5_31 -> m5_53  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_19  [key=2, style=dotted];
m5_18 -> m5_16  [key=0, style=bold, color=blue];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_40  [key=0, style=solid];
m5_37 -> m5_41  [key=0, style=solid];
m5_37 -> m5_42  [key=0, style=solid];
m5_37 -> m5_44  [key=0, style=solid];
m5_37 -> m5_52  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_37  [key=0, style=solid];
m5_38 -> m5_3  [key=2, style=dotted];
m5_38 -> m5_45  [key=0, style=solid];
m5_38 -> m5_54  [key=2, style=dotted];
m5_40 -> m5_44  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_42  [key=0, style=solid];
m5_41 -> m5_44  [key=0, style=solid];
m5_41 -> m5_43  [key=0, style=solid];
m5_41 -> m5_56  [key=2, style=dotted];
m5_41 -> m5_57  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_58  [key=2, style=dotted];
m5_39 -> m5_37  [key=0, style=solid];
m5_39 -> m5_45  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_46  [key=2, style=dotted];
m5_43 -> m5_59  [key=2, style=dotted];
m5_44 -> m5_36  [key=0, style=bold, color=blue];
m5_44 -> m5_45  [key=0, style=solid];
m5_15 -> m5_4  [key=0, style=bold, color=blue];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_49  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_20 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_27  [key=2, style=dotted];
m5_21 -> m5_28  [key=2, style=dotted];
m5_21 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_21 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_21 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_21 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_21 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_21 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_21 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_21 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_21 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_21 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_24 -> m5_26  [key=0, style=solid];
m5_24 -> m5_31  [key=2, style=dotted];
m5_24 -> m5_32  [key=2, style=dotted];
m5_24 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_24 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_24 -> m5_46  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_33  [key=2, style=dotted];
m5_25 -> m5_34  [key=2, style=dotted];
m5_25 -> m5_35  [key=2, style=dotted];
m5_25 -> m5_32  [key=2, style=dotted];
m5_25 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m5_25 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m5_25 -> m5_47  [key=2, style=dotted];
m5_25 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m5_25 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m5_25 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_29  [key=2, style=dotted];
m5_22 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=queue];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_25  [key=0, style=solid];
m5_23 -> m5_30  [key=2, style=dotted];
m5_23 -> m5_45  [key=0, style=solid];
m5_23 -> m5_16  [key=2, style=dotted];
m5_23 -> m5_17  [key=2, style=dotted];
m5_26 -> m5_20  [key=0, style=bold, color=blue];
m5_26 -> m5_48  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_18  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_52  [key=2, style=dotted];
m5_55 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_55 -> m5_90  [key=0, style=solid];
m5_55 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_55 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m5_55 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_114  [key=2, style=dotted];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_117  [key=2, style=dotted];
m5_99 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_105 -> m5_83  [key=2, style=dotted];
m5_105 -> m5_110  [key=0, style=solid];
m5_109 -> m5_83  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_113  [key=2, style=dotted];
m5_94 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=backgroundJob];
m5_96 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_115  [key=2, style=dotted];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_116  [key=2, style=dotted];
m5_98 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label=duration];
m5_98 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=duration];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_118  [key=2, style=dotted];
m5_101 -> m5_110  [key=0, style=solid];
m5_101 -> m5_119  [key=2, style=dotted];
m5_104 -> m5_105  [key=0, style=solid];
m5_107 -> m5_109  [key=0, style=solid];
m5_107 -> m5_108  [key=0, style=solid];
m5_90 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_111  [key=2, style=dotted];
m5_90 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_90 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_112  [key=2, style=dotted];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=latency];
m5_92 -> m5_110  [key=0, style=solid];
m5_103 -> m5_110  [key=0, style=solid];
m5_108 -> m5_110  [key=0, style=solid];
m5_106 -> m5_107  [key=0, style=solid];
m5_91 -> m5_93  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_110 -> m5_55  [key=0, style=bold, color=blue];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_51  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_54  [key=2, style=dotted];
m5_45 -> m5_21  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_34 -> m5_45  [key=0, style=solid];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_51  [key=2, style=dotted];
m5_30 -> m5_52  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.Thread"];
m5_50 -> m5_47  [key=0, style=bold, color=blue];
m5_53 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_13 -> m5_14  [key=0, style=solid];
m5_32 -> m5_48  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_28 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=linkedCts];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_50  [key=2, style=dotted];
m5_4 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_4 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m5_4 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_4 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m5_4 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m5_4 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m5_4 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m5_12 -> m5_13  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_19  [key=2, style=dotted];
m5_14 -> m5_20  [key=2, style=dotted];
m5_9 -> m5_11  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=0, style=solid];
m5_5 -> m5_12  [key=2, style=dotted];
m5_5 -> m5_13  [key=2, style=dotted];
m5_5 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_6 -> m5_15  [key=0, style=solid];
m5_6 -> m5_16  [key=2, style=dotted];
m5_6 -> m5_17  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_8  [key=0, style=solid];
m5_6 -> m5_14  [key=2, style=dotted];
m5_7 -> m5_9  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_10  [key=0, style=solid];
m5_8 -> m5_15  [key=0, style=solid];
m5_8 -> m5_16  [key=2, style=dotted];
m5_8 -> m5_17  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_10 -> m5_15  [key=0, style=solid];
m5_10 -> m5_16  [key=2, style=dotted];
m5_10 -> m5_17  [key=2, style=dotted];
m5_10 -> m5_3  [key=0, style=bold, color=blue];
m5_35 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=state];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_55  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_72 -> m5_73  [key=0, style=solid, color=green];
m5_72 -> m5_81  [key=2, style=dotted, color=green];
m5_72 -> m5_82  [key=2, style=dotted, color=green];
m5_66 -> m5_72  [key=1, style=dashed, color=green, label=retryAttempt];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m5_66 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m5_71 -> m5_72  [key=0, style=solid, color=green];
m5_71 -> m5_75  [key=1, style=dashed, color=green, label=exception];
m5_73 -> m5_74  [key=0, style=solid, color=green];
m5_73 -> m5_48  [key=2, style=dotted, color=green];
m5_74 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m5_74 -> m5_67  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid, color=green];
m5_75 -> m5_77  [key=2, style=dotted, color=green];
m5_75 -> m5_83  [key=2, style=dotted, color=green];
m5_75 -> m5_78  [key=2, style=dotted, color=green];
m5_65 -> m5_75  [key=1, style=dashed, color=green, label=exception];
m5_65 -> m5_66  [key=0, style=solid];
m5_67 -> m5_75  [key=0, style=solid, color=green];
m5_67 -> m5_68  [key=0, style=solid];
m5_68 -> m5_76  [key=0, style=solid];
m5_68 -> m5_77  [key=2, style=dotted];
m5_68 -> m5_78  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_79  [key=2, style=dotted];
m5_70 -> m5_80  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_76 -> m5_52  [key=0, style=bold, color=blue];
m5_120 -> m5_75  [key=1, style=dashed, color=green, label="Hangfire.Server.Worker"];
m5_120 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m5_120 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
}
