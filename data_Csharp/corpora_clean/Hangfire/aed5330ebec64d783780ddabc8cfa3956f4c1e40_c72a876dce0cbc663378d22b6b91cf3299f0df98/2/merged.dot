digraph  {
n0 [label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="36-36", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)"];
n1 [label="client == null", span="38-38", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)"];
n3 [label="return client.Create(methodCall, new EnqueuedState());", span="40-40", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)"];
n2 [label="throw new ArgumentNullException(''client'');", span="38-38", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)"];
n4 [label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="36-36", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)"];
n6 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="Hangfire.States.EnqueuedState.EnqueuedState()"];
n7 [label="Entry Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138", cluster="Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)"];
n5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n8 [label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)"];
n9 [label="client == null", span="56-56", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)"];
n11 [label="return client.Create(methodCall, new EnqueuedState());", span="58-58", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)"];
n10 [label="throw new ArgumentNullException(''client'');", span="56-56", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)"];
n12 [label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)"];
n13 [label="Entry Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158", cluster="Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)"];
n14 [label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
n15 [label="client == null", span="71-71", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
n17 [label="return client.Create(methodCall, new ScheduledState(delay));", span="73-73", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
n16 [label="throw new ArgumentNullException(''client'');", span="71-71", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
n18 [label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
n19 [label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="28-28", cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)"];
n20 [label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)"];
n21 [label="client == null", span="89-89", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)"];
n23 [label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="91-91", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)"];
n22 [label="throw new ArgumentNullException(''client'');", span="89-89", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)"];
n24 [label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)"];
n25 [label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="34-34", cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)"];
n26 [label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
n27 [label="client == null", span="106-106", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
n29 [label="return client.Create(methodCall, new ScheduledState(delay));", span="108-108", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
n28 [label="throw new ArgumentNullException(''client'');", span="106-106", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
n30 [label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
n31 [label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)"];
n32 [label="client == null", span="125-125", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)"];
n34 [label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="127-127", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)"];
n33 [label="throw new ArgumentNullException(''client'');", span="125-125", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)"];
n35 [label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)"];
n36 [label="Entry Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)"];
n37 [label="client == null", span="143-143", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)"];
n39 [label="return client.Create(Job.FromExpression(methodCall), state);", span="145-145", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)"];
n38 [label="throw new ArgumentNullException(''client'');", span="143-143", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)"];
n40 [label="Exit Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)"];
n41 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)"];
n42 [label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41", cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n43 [label="Entry Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158", cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)"];
n44 [label="client == null", span="163-163", cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)"];
n46 [label="return client.Create(Job.FromExpression(methodCall), state);", span="165-165", cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)"];
n45 [label="throw new ArgumentNullException(''client'');", span="163-163", cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)"];
n47 [label="Exit Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158", cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)"];
n48 [label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="191-191", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)"];
n49 [label="Entry Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="177-177", cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)"];
n50 [label="client == null", span="179-179", cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)"];
n52 [label="return client.ChangeState(jobId, state, null);", span="180-180", cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)"];
n51 [label="throw new ArgumentNullException(''client'');", span="179-179", cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)"];
n53 [label="Exit Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="177-177", cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)"];
n54 [label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="54-54", cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
n55 [label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="204-204", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)"];
n56 [label="return Delete(client, jobId, null);", span="206-206", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)"];
n57 [label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="204-204", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)"];
n58 [label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="233-233", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)"];
n59 [label="client == null", span="235-235", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)"];
n62 [label="return client.ChangeState(jobId, state, fromState);", span="238-238", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)"];
n60 [label="throw new ArgumentNullException(''client'');", span="235-235", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)"];
n61 [label="var state = new DeletedState()", span="237-237", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)"];
n64 [label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27", cluster="Hangfire.States.DeletedState.DeletedState()"];
n63 [label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="233-233", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)"];
n65 [label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="249-249", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)"];
n66 [label="return Requeue(client, jobId, null);", span="251-251", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)"];
n67 [label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="249-249", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)"];
n68 [label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="265-265", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)"];
n69 [label="client == null", span="267-267", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)"];
n72 [label="return client.ChangeState(jobId, state, fromState);", span="270-270", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)"];
n70 [label="throw new ArgumentNullException(''client'');", span="267-267", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)"];
n71 [label="var state = new EnqueuedState()", span="269-269", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)"];
n73 [label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="265-265", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)"];
n74 [label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="273-273", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)"];
n75 [label="return ContinueWith(client, parentId, methodCall, new EnqueuedState());", span="276-276", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)"];
n76 [label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="273-273", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)"];
n77 [label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="279-279", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)"];
n78 [label="return ContinueWith(client, parentId, methodCall, nextState, JobContinuationOptions.OnlyOnSucceededState);", span="285-285", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)"];
n79 [label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="279-279", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)"];
n80 [label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="297-297", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)"];
n81 [label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)"];
n82 [label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="294-294", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)"];
n83 [label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)"];
n84 [label="client == null", span="304-304", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)"];
n86 [label="var state = new AwaitingState(parentId, nextState, options)", span="306-306", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)"];
n87 [label="return client.Create(Job.FromExpression(methodCall), state);", span="307-307", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)"];
n85 [label="throw new ArgumentNullException(''client'');", span="304-304", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)"];
n89 [label="Entry Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="40-40", cluster="Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)"];
n88 [label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="297-297", cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)"];
m0_34 [label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120", cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_20 [label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_21 [label="var client = ClientFactory()", span="107-107", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_22 [label="return client.Schedule(methodCall, enqueueAt);", span="108-108", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_23 [label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_64 [label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288", cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs"];
m0_45 [label="Entry Hangfire.BackgroundJob.Requeue(string)", span="178-178", cluster="Hangfire.BackgroundJob.Requeue(string)", file="CachedExpressionCompiler.cs"];
m0_46 [label="var client = ClientFactory()", span="180-180", cluster="Hangfire.BackgroundJob.Requeue(string)", file="CachedExpressionCompiler.cs"];
m0_47 [label="return client.Requeue(jobId);", span="181-181", cluster="Hangfire.BackgroundJob.Requeue(string)", file="CachedExpressionCompiler.cs"];
m0_48 [label="Exit Hangfire.BackgroundJob.Requeue(string)", span="178-178", cluster="Hangfire.BackgroundJob.Requeue(string)", file="CachedExpressionCompiler.cs"];
m0_59 [label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="273-273", cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_24 [label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84", cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_3 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="CachedExpressionCompiler.cs"];
m0_35 [label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149", cluster="Hangfire.BackgroundJob.Delete(string)", file="CachedExpressionCompiler.cs"];
m0_36 [label="var client = ClientFactory()", span="151-151", cluster="Hangfire.BackgroundJob.Delete(string)", file="CachedExpressionCompiler.cs"];
m0_37 [label="return client.Delete(jobId);", span="152-152", cluster="Hangfire.BackgroundJob.Delete(string)", file="CachedExpressionCompiler.cs"];
m0_38 [label="Exit Hangfire.BackgroundJob.Delete(string)", span="149-149", cluster="Hangfire.BackgroundJob.Delete(string)", file="CachedExpressionCompiler.cs"];
m0_9 [label="Entry Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="36-36", cluster="Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_60 [label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs"];
m0_61 [label="var client = ClientFactory()", span="208-208", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs"];
m0_62 [label="return client.ContinueWith(parentId, methodCall, options);", span="209-209", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs"];
m0_63 [label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs"];
m0_49 [label="Entry Hangfire.IBackgroundJobClient.Requeue(string)", span="249-249", cluster="Hangfire.IBackgroundJobClient.Requeue(string)", file="CachedExpressionCompiler.cs"];
m0_8 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="CachedExpressionCompiler.cs"];
m0_54 [label="Entry Hangfire.IBackgroundJobClient.Requeue(string, string)", span="265-265", cluster="Hangfire.IBackgroundJobClient.Requeue(string, string)", file="CachedExpressionCompiler.cs"];
m0_39 [label="Entry Hangfire.IBackgroundJobClient.Delete(string)", span="204-204", cluster="Hangfire.IBackgroundJobClient.Delete(string)", file="CachedExpressionCompiler.cs"];
m0_55 [label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_56 [label="var client = ClientFactory()", span="202-202", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_57 [label="return client.ContinueWith(parentId, methodCall);", span="203-203", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_58 [label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_30 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_31 [label="var client = ClientFactory()", span="137-137", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_32 [label="return client.Schedule(methodCall, enqueueAt);", span="138-138", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_33 [label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs"];
m0_0 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="CachedExpressionCompiler.cs"];
m0_1 [label="new BackgroundJobClient(JobStorage.Current)", span="29-29", cluster="lambda expression", file="CachedExpressionCompiler.cs"];
m0_2 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="CachedExpressionCompiler.cs"];
m0_29 [label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104", cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_50 [label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="194-194", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="CachedExpressionCompiler.cs"];
m0_51 [label="var client = ClientFactory()", span="196-196", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="CachedExpressionCompiler.cs"];
m0_52 [label="return client.Requeue(jobId, fromState);", span="197-197", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="CachedExpressionCompiler.cs"];
m0_53 [label="Exit Hangfire.BackgroundJob.Requeue(string, string)", span="194-194", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="CachedExpressionCompiler.cs"];
m0_40 [label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="165-165", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="CachedExpressionCompiler.cs"];
m0_41 [label="var client = ClientFactory()", span="167-167", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="CachedExpressionCompiler.cs"];
m0_42 [label="return client.Delete(jobId, fromState);", span="168-168", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="CachedExpressionCompiler.cs"];
m0_43 [label="Exit Hangfire.BackgroundJob.Delete(string, string)", span="165-165", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="CachedExpressionCompiler.cs"];
m0_15 [label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_16 [label="var client = ClientFactory()", span="93-93", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_17 [label="return client.Schedule(methodCall, delay);", span="94-94", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_18 [label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_4 [label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_5 [label="var client = ClientFactory()", span="63-63", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_6 [label="return client.Enqueue(methodCall);", span="64-64", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_7 [label="Exit Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs"];
m0_19 [label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69", cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_10 [label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs"];
m0_11 [label="var client = ClientFactory()", span="79-79", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs"];
m0_12 [label="return client.Enqueue(methodCall);", span="80-80", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs"];
m0_13 [label="Exit Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs"];
m0_25 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_26 [label="var client = ClientFactory()", span="122-122", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_27 [label="return client.Schedule(methodCall, delay);", span="123-123", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_28 [label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs"];
m0_14 [label="Entry Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54", cluster="Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs"];
m0_44 [label="Entry Hangfire.IBackgroundJobClient.Delete(string, string)", span="233-233", cluster="Hangfire.IBackgroundJobClient.Delete(string, string)", file="CachedExpressionCompiler.cs"];
m1_92 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="193-193", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_104 [label="var transaction = _connection.CreateWriteTransaction()", span="197-197", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_105 [label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="199-201", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_106 [label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="203-203", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_107 [label="return transaction.Commit();", span="205-205", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_108 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="193-193", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_90 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ConditionalExpressionFingerprint.cs"];
m1_145 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ConditionalExpressionFingerprint.cs"];
m1_161 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ConditionalExpressionFingerprint.cs"];
m1_93 [label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="27-27", cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="ConditionalExpressionFingerprint.cs"];
m1_50 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="ConditionalExpressionFingerprint.cs"];
m1_94 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ConditionalExpressionFingerprint.cs"];
m1_87 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ConditionalExpressionFingerprint.cs"];
m1_89 [label="Entry HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", span="6-6", cluster="HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", file="ConditionalExpressionFingerprint.cs"];
m1_91 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="ConditionalExpressionFingerprint.cs"];
m1_49 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="ConditionalExpressionFingerprint.cs"];
m1_127 [label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="31-31", cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs"];
m1_128 [label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ConditionalExpressionFingerprint.cs"];
m1_146 [label="Entry HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10", cluster="HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="ConditionalExpressionFingerprint.cs"];
m1_17 [label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="286-286", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs"];
m1_153 [label="handler == null", span="288-288", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs"];
m1_155 [label="String.IsNullOrEmpty(handler.StateName)", span="289-289", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs"];
m1_157 [label="!_handlers.ContainsKey(handler.StateName)", span="291-291", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs"];
m1_158 [label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="293-293", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs"];
m1_159 [label="_handlers[handler.StateName].Add(handler)", span="296-296", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs"];
m1_154 [label="throw new ArgumentNullException(''handler'');", span="288-288", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs"];
m1_156 [label="throw new ArgumentNullException(''stateName'');", span="289-289", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs"];
m1_160 [label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="286-286", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs"];
m1_0 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="ConditionalExpressionFingerprint.cs"];
m1_1 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="ConditionalExpressionFingerprint.cs"];
m1_53 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="ConditionalExpressionFingerprint.cs"];
m1_152 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ConditionalExpressionFingerprint.cs"];
m1_125 [label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ConditionalExpressionFingerprint.cs"];
m1_55 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="ConditionalExpressionFingerprint.cs"];
m1_25 [label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38", cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="ConditionalExpressionFingerprint.cs"];
m1_26 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_27 [label="method == null", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_29 [label="parameters == null", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_31 [label="state == null", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_33 [label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_34 [label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_35 [label="var filterInfo = GetFilters(method)", span="86-86", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_36 [label="var context = new StateContext(jobId, method)", span="87-87", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_37 [label="var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_28 [label="throw new ArgumentNullException(''method'');", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_30 [label="throw new ArgumentNullException(''parameters'');", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_32 [label="throw new ArgumentNullException(''state'');", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_42 [label="transaction.Jobs.Persist(jobId)", span="104-104", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_44 [label="return jobId;", span="110-110", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_38 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_41 [label="ApplyState(\r\n                    changedContext, \r\n                    null,\r\n                    changingContext.CandidateState,\r\n                    filterInfo.StateChangedFilters)", span="98-102", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_40 [label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="94-96", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_39 [label="var transaction = _connection.CreateWriteTransaction()", span="92-92", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_43 [label="transaction.Commit()", span="107-107", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_45 [label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs"];
m1_56 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="ConditionalExpressionFingerprint.cs"];
m1_15 [label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52", cluster="HangFire.JobStorage.GetStateHandlers()", file="ConditionalExpressionFingerprint.cs"];
m1_58 [label="Entry HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="8-8", cluster="HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="ConditionalExpressionFingerprint.cs"];
m1_148 [label="Entry HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12", cluster="HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="ConditionalExpressionFingerprint.cs"];
m1_151 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_59 [label="Entry HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13", cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="ConditionalExpressionFingerprint.cs"];
m1_144 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ConditionalExpressionFingerprint.cs"];
m1_123 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ConditionalExpressionFingerprint.cs"];
m1_88 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="ConditionalExpressionFingerprint.cs"];
m1_124 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ConditionalExpressionFingerprint.cs"];
m1_48 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="ConditionalExpressionFingerprint.cs"];
m1_60 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="ConditionalExpressionFingerprint.cs"];
m1_19 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="lambda expression", file="ConditionalExpressionFingerprint.cs"];
m1_18 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="ConditionalExpressionFingerprint.cs"];
m1_20 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="ConditionalExpressionFingerprint.cs"];
m1_22 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="ConditionalExpressionFingerprint.cs"];
m1_23 [label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59", cluster="lambda expression", file="ConditionalExpressionFingerprint.cs"];
m1_24 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="ConditionalExpressionFingerprint.cs"];
m1_61 [label="x.ParameterType", span="77-77", cluster="lambda expression", file="ConditionalExpressionFingerprint.cs"];
m1_62 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="ConditionalExpressionFingerprint.cs"];
m1_147 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ConditionalExpressionFingerprint.cs"];
m1_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ConditionalExpressionFingerprint.cs"];
m1_54 [label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="178-178", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_96 [label=filters, span="181-181", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_97 [label="var oldState = context.CandidateState", span="183-183", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_98 [label="filter.OnStateChanging(context)", span="184-184", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_99 [label="oldState != context.CandidateState", span="186-186", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_100 [label="AppendHistory(context, oldState, false)", span="188-188", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_101 [label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="178-178", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_57 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="209-209", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_109 [label="!String.IsNullOrEmpty(oldState)", span="215-215", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_110 [label="_handlers.ContainsKey(oldState)", span="217-217", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_111 [label="_handlers[oldState]", span="219-219", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_112 [label="handler.Unapply(context)", span="221-221", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_113 [label=stateChangedFilters, span="225-225", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_114 [label="filter.OnStateUnapplied(context)", span="227-227", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_115 [label="_handlers.ContainsKey(chosenState.StateName)", span="231-231", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_116 [label="var stateData = chosenState.GetProperties(context.JobMethod)", span="233-233", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_117 [label="_handlers[chosenState.StateName]", span="234-234", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_118 [label="handler.Apply(context, stateData)", span="236-236", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_119 [label="AppendHistory(context.Transaction, context, chosenState, true)", span="240-240", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_120 [label=stateChangedFilters, span="242-242", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_121 [label="filter.OnStateApplied(context)", span="244-244", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_122 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="209-209", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs"];
m1_63 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_64 [label="String.IsNullOrWhiteSpace(jobId)", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_66 [label="state == null", span="117-117", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_68 [label="_connection.AcquireJobLock(jobId)", span="119-119", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_69 [label="var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_73 [label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="132-132", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_77 [label="var context = new StateContext(jobId, jobMethod)", span="142-142", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_78 [label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_82 [label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(\r\n                                String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId),\r\n                                ex),\r\n                            currentState,\r\n                            _connection)", span="156-164", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_65 [label="throw new ArgumentNullException(''jobId'');", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_67 [label="throw new ArgumentNullException(''state'');", span="117-117", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_70 [label="jobData == null", span="125-125", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_72 [label="var currentState = jobData.State", span="131-131", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_75 [label="var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="139-139", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_71 [label="return false;", span="128-128", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_74 [label="return false;", span="134-134", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_76 [label="var filterInfo = GetFilters(jobMethod)", span="140-140", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_79 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_80 [label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_81 [label=JobLoadException, span="149-149", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_83 [label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="166-168", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_84 [label=Exception, span="171-171", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_85 [label="throw;", span="173-173", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_86 [label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs"];
m1_102 [label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="ConditionalExpressionFingerprint.cs"];
m1_129 [label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="258-258", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_135 [label="var properties = new Dictionary<string, string>(\r\n                state.GetProperties(context.JobMethod))", span="264-265", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_137 [label="properties.Add(''State'', state.StateName)", span="268-268", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_138 [label=appendToJob, span="270-270", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_139 [label="transaction.Jobs.SetState(context.JobId, state.StateName, properties)", span="272-272", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_140 [label="properties.Add(''Reason'', state.Reason)", span="275-275", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_142 [label="transaction.Jobs.AppendHistory(context.JobId, properties)", span="278-278", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_136 [label="var now = DateTime.UtcNow", span="266-266", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_141 [label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="276-276", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_143 [label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="258-258", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_130 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="ConditionalExpressionFingerprint.cs"];
m1_163 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ConditionalExpressionFingerprint.cs"];
m1_51 [label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="281-281", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs"];
m1_149 [label="return new JobFilterInfo(_getFiltersThunk(method));", span="283-283", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs"];
m1_150 [label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="281-281", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs"];
m1_126 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33", cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="ConditionalExpressionFingerprint.cs"];
m1_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ConditionalExpressionFingerprint.cs"];
m1_47 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="ConditionalExpressionFingerprint.cs"];
m1_103 [label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="248-248", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_131 [label="var transaction = _connection.CreateWriteTransaction()", span="251-251", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_132 [label="AppendHistory(transaction, context, state, appendToJob)", span="253-253", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_133 [label="transaction.Commit()", span="254-254", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_134 [label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="248-248", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs"];
m1_162 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ConditionalExpressionFingerprint.cs"];
m1_52 [label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs"];
m1_46 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="ConditionalExpressionFingerprint.cs"];
m1_95 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ConditionalExpressionFingerprint.cs"];
m1_2 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_3 [label="connection == null", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_5 [label="stateHandlers == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_7 [label="_connection = connection", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_8 [label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_11 [label="filters != null", span="57-57", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_12 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_4 [label="throw new ArgumentNullException(''connection'');", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_6 [label="throw new ArgumentNullException(''stateHandlers'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_9 [label=handlers, span="52-52", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_10 [label="RegisterHandler(handler)", span="54-54", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_13 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs"];
m1_164 [label="HangFire.States.StateMachine", span="", file="ConditionalExpressionFingerprint.cs"];
m1_165 [label="System.Collections.Generic.IEnumerable<object>", span="", file="ConditionalExpressionFingerprint.cs"];
m2_98 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="396-396", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ConstantExpressionFingerprint.cs"];
m2_198 [label="AcquireLock(''Set'')", span="398-398", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ConstantExpressionFingerprint.cs"];
m2_199 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="396-396", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ConstantExpressionFingerprint.cs"];
m2_99 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="214-214", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_100 [label="string query = $@''delete from [{_storage.SchemaName}].[Set] where [Key] = @key and Value = @value''", span="216-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_102 [label="QueueCommand(query,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', value))", span="219-221", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_101 [label="AcquireSetLock()", span="218-218", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_103 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="214-214", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_39 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="ConstantExpressionFingerprint.cs"];
m2_54 [label="Entry Hangfire.States.IState.SerializeData()", span="202-202", cluster="Hangfire.States.IState.SerializeData()", file="ConstantExpressionFingerprint.cs"];
m2_8 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="53-53", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs"];
m2_9 [label="_storage.UseTransaction(_dedicatedConnectionFunc(), (connection, transaction) =>\r\n            {\r\n                var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue);\r\n\r\n                foreach (var lockedResource in _lockedResources)\r\n                {\r\n                    commandBatch.Append(\r\n                        ''set nocount on;exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        new SqlParameter(''@resource'', lockedResource));\r\n                }\r\n\r\n                foreach (var command in _commandQueue)\r\n                {\r\n                    commandBatch.Append(command.Item1, command.Item2);\r\n                }\r\n\r\n                commandBatch.Connection = connection;\r\n                commandBatch.Transaction = transaction;\r\n                commandBatch.CommandTimeout = _storage.CommandTimeout;\r\n                commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout;\r\n\r\n                commandBatch.ExecuteNonQuery();\r\n\r\n                foreach (var queueCommand in _queueCommandQueue)\r\n                {\r\n                    queueCommand(connection, transaction);\r\n                }\r\n            })", span="55-82", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs"];
m2_10 [label=_afterCommitCommandQueue, span="84-84", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs"];
m2_11 [label="command()", span="86-86", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs"];
m2_12 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="53-53", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs"];
m2_68 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="ConstantExpressionFingerprint.cs"];
m2_78 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="159-159", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ConstantExpressionFingerprint.cs"];
m2_79 [label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].Counter ([Key], [Value]) values (@key, @value)'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', +1))", span="161-164", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ConstantExpressionFingerprint.cs"];
m2_80 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="159-159", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ConstantExpressionFingerprint.cs"];
m2_67 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ConstantExpressionFingerprint.cs"];
m2_181 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="369-369", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_182 [label="key == null", span="371-371", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_183 [label="throw new ArgumentNullException(nameof(key));", span="371-371", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_186 [label="QueueCommand(query, new SqlParameter(''@key'', key))", span="377-377", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_184 [label="string query = $@''\r\nupdate [{_storage.SchemaName}].[Set] set ExpireAt = null where [Key] = @key''", span="373-374", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_185 [label="AcquireSetLock()", span="376-376", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_187 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="369-369", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_84 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="176-176", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ConstantExpressionFingerprint.cs"];
m2_85 [label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].Counter ([Key], [Value]) values (@key, @value)'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', -1))", span="178-181", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ConstantExpressionFingerprint.cs"];
m2_86 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="176-176", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ConstantExpressionFingerprint.cs"];
m2_188 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="380-380", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs"];
m2_189 [label="key == null", span="382-382", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs"];
m2_190 [label="throw new ArgumentNullException(nameof(key));", span="382-382", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs"];
m2_193 [label="QueueCommand(query, new SqlParameter(''@key'', key))", span="388-388", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs"];
m2_191 [label="string query = $@''\r\nupdate [{_storage.SchemaName}].[List] set ExpireAt = null where [Key] = @key''", span="384-385", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs"];
m2_192 [label="AcquireListLock()", span="387-387", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs"];
m2_194 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="380-380", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs"];
m2_197 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="406-406", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ConstantExpressionFingerprint.cs"];
m2_202 [label="_lockedResources.Add($''{_storage.SchemaName}:{resource}:Lock'')", span="408-408", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ConstantExpressionFingerprint.cs"];
m2_203 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="406-406", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ConstantExpressionFingerprint.cs"];
m2_160 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_161 [label="key == null", span="334-334", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_162 [label="throw new ArgumentNullException(nameof(key));", span="334-334", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_165 [label="QueueCommand(query,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="340-342", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_163 [label="string query = $@''\r\nupdate [{_storage.SchemaName}].[Set] set ExpireAt = @expireAt where [Key] = @key''", span="336-337", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_164 [label="AcquireSetLock()", span="339-339", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_166 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_69 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ConstantExpressionFingerprint.cs"];
m2_128 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="401-401", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ConstantExpressionFingerprint.cs"];
m2_200 [label="AcquireLock(''Hash'')", span="403-403", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ConstantExpressionFingerprint.cs"];
m2_201 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="401-401", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ConstantExpressionFingerprint.cs"];
m2_44 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="ConstantExpressionFingerprint.cs"];
m2_48 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="110-110", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs"];
m2_49 [label="string addAndSetStateSql = \r\n$@''insert into [{_storage.SchemaName}].State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate [{_storage.SchemaName}].Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="112-115", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs"];
m2_50 [label="QueueCommand(addAndSetStateSql,\r\n                new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                new SqlParameter(''@name'', state.Name),\r\n                new SqlParameter(''@reason'', (object)state.Reason?.Substring(0, Math.Min(99, state.Reason.Length)) ?? DBNull.Value),\r\n                new SqlParameter(''@createdAt'', DateTime.UtcNow),\r\n                new SqlParameter(''@data'', (object)JobHelper.ToJson(state.SerializeData()) ?? DBNull.Value),\r\n                new SqlParameter(''@id'', long.Parse(jobId)))", span="117-123", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs"];
m2_51 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="110-110", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs"];
m2_167 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="345-345", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_168 [label="key == null", span="347-347", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_169 [label="throw new ArgumentNullException(nameof(key));", span="347-347", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_172 [label="QueueCommand(query,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="353-355", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_170 [label="string query = $@''\r\nupdate [{_storage.SchemaName}].[List] set ExpireAt = @expireAt where [Key] = @key''", span="349-350", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_171 [label="AcquireListLock()", span="352-352", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_173 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="345-345", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_56 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="126-126", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs"];
m2_57 [label="string addStateSql =\r\n$@''insert into [{_storage.SchemaName}].State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="128-130", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs"];
m2_58 [label="QueueCommand(addStateSql,\r\n                new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                new SqlParameter(''@name'', state.Name),\r\n                new SqlParameter(''@reason'', (object)state.Reason?.Substring(0, Math.Min(99, state.Reason.Length)) ?? DBNull.Value),\r\n                new SqlParameter(''@createdAt'', DateTime.UtcNow),\r\n                new SqlParameter(''@data'', (object)JobHelper.ToJson(state.SerializeData()) ?? DBNull.Value))", span="132-137", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs"];
m2_59 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="126-126", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs"];
m2_87 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="184-184", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_88 [label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', -1),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="186-190", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_89 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="184-184", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_146 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="309-309", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_147 [label="key == null", span="311-311", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_148 [label="throw new ArgumentNullException(nameof(key));", span="311-311", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_151 [label="QueueCommand(query, new SqlParameter(''@key'', key))", span="316-316", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_149 [label="string query = $@''delete from [{_storage.SchemaName}].[Set] where [Key] = @key''", span="313-313", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_150 [label="AcquireSetLock()", span="315-315", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_152 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="309-309", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs"];
m2_90 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_91 [label="AddToSet(key, value, 0.0)", span="195-195", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_92 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_31 [label="Entry SqlParameter.cstr", span="", cluster="SqlParameter.cstr", file="ConstantExpressionFingerprint.cs"];
m2_104 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="224-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_105 [label="AcquireListLock()", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_106 [label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].List ([Key], Value) values (@key, @value);'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', value))", span="227-230", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_107 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="224-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_34 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ConstantExpressionFingerprint.cs"];
m2_52 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="ConstantExpressionFingerprint.cs"];
m2_77 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="ConstantExpressionFingerprint.cs"];
m2_60 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="140-140", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_61 [label="var provider = _storage.QueueProviders.GetProvider(queue)", span="142-142", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_63 [label="_queueCommandQueue.Enqueue((connection, transaction) => persistentQueue.Enqueue(\r\n                connection,\r\n#if !NETFULL\r\n                transaction,\r\n#endif\r\n                queue,\r\n                jobId))", span="145-151", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_62 [label="var persistentQueue = provider.GetJobQueue()", span="143-143", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_64 [label="persistentQueue.GetType() == typeof(SqlServerJobQueue)", span="153-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_65 [label="_afterCommitCommandQueue.Enqueue(() => SqlServerJobQueue.NewItemInQueueEvent.Set())", span="155-155", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_66 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="140-140", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_7 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="ConstantExpressionFingerprint.cs"];
m2_14 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="ConstantExpressionFingerprint.cs"];
m2_30 [label="Entry Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", span="29-29", cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="ConstantExpressionFingerprint.cs"];
m2_32 [label="Entry Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", span="51-51", cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="ConstantExpressionFingerprint.cs"];
m2_73 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="ConstantExpressionFingerprint.cs"];
m2_53 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ConstantExpressionFingerprint.cs"];
m2_81 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="167-167", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_82 [label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', +1),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="169-173", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_83 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="167-167", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_93 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="198-198", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs"];
m2_94 [label="string addSql =\r\n$@'';merge [{_storage.SchemaName}].[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="200-205", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs"];
m2_96 [label="QueueCommand(addSql,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', value),\r\n                new SqlParameter(''@score'', score))", span="208-211", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs"];
m2_95 [label="AcquireSetLock()", span="207-207", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs"];
m2_97 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="198-198", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs"];
m2_118 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="258-258", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_119 [label="key == null", span="260-260", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_120 [label="throw new ArgumentNullException(nameof(key));", span="260-260", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_121 [label="keyValuePairs == null", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_122 [label="throw new ArgumentNullException(nameof(keyValuePairs));", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_125 [label=keyValuePairs, span="272-272", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_126 [label="QueueCommand(sql,\r\n                    new SqlParameter(''@key'', key),\r\n                    new SqlParameter(''@field'', pair.Key),\r\n                    new SqlParameter(''@value'', (object)pair.Value ?? DBNull.Value))", span="274-277", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_123 [label="string sql =\r\n$@'';merge [{_storage.SchemaName}].Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="263-268", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_124 [label="AcquireHashLock()", span="270-270", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_127 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="258-258", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs"];
m2_129 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="281-281", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_130 [label="key == null", span="283-283", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_131 [label="throw new ArgumentNullException(nameof(key));", span="283-283", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_134 [label="QueueCommand(query, new SqlParameter(''@key'', key))", span="288-288", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_132 [label="string query = $@''delete from [{_storage.SchemaName}].Hash where [Key] = @key''", span="285-285", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_133 [label="AcquireHashLock()", span="287-287", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_135 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="281-281", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_33 [label="Entry Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", span="75-75", cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="ConstantExpressionFingerprint.cs"];
m2_38 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_45 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="103-103", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ConstantExpressionFingerprint.cs"];
m2_46 [label="QueueCommand(\r\n                $@''update [{_storage.SchemaName}].Job set ExpireAt = NULL where Id = @id'',\r\n                new SqlParameter(''@id'', long.Parse(jobId)))", span="105-107", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ConstantExpressionFingerprint.cs"];
m2_47 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="103-103", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ConstantExpressionFingerprint.cs"];
m2_43 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="ConstantExpressionFingerprint.cs"];
m2_153 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_154 [label="key == null", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_155 [label="throw new ArgumentNullException(nameof(key));", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_158 [label="QueueCommand(query,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="327-329", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_156 [label="string query = $@''\r\nupdate [{_storage.SchemaName}].[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="323-324", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_157 [label="AcquireHashLock()", span="326-326", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_159 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_40 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", span="98-98", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", file="ConstantExpressionFingerprint.cs"];
m2_41 [label="_commandQueue.Enqueue(new Tuple<string, SqlParameter[]>(commandText, parameters))", span="100-100", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", file="ConstantExpressionFingerprint.cs"];
m2_42 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", span="98-98", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", file="ConstantExpressionFingerprint.cs"];
m2_55 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ConstantExpressionFingerprint.cs"];
m2_35 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="90-90", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_36 [label="QueueCommand(\r\n                $@''update [{_storage.SchemaName}].Job set ExpireAt = @expireAt where Id = @id'',\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)),\r\n                new SqlParameter(''@id'', long.Parse(jobId)))", span="92-95", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_37 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="90-90", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs"];
m2_74 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_16 [label="Entry lambda expression", span="55-82", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_17 [label="var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue)", span="57-57", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_22 [label="commandBatch.Connection = connection", span="71-71", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_23 [label="commandBatch.Transaction = transaction", span="72-72", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_28 [label="queueCommand(connection, transaction)", span="80-80", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_18 [label=_lockedResources, span="59-59", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_19 [label="commandBatch.Append(\r\n                        ''set nocount on;exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        new SqlParameter(''@resource'', lockedResource))", span="61-63", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_21 [label="commandBatch.Append(command.Item1, command.Item2)", span="68-68", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_24 [label="commandBatch.CommandTimeout = _storage.CommandTimeout", span="73-73", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_25 [label="commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout", span="74-74", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_26 [label="commandBatch.ExecuteNonQuery()", span="76-76", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_20 [label=_commandQueue, span="66-66", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_27 [label=_queueCommandQueue, span="78-78", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_29 [label="Exit lambda expression", span="55-82", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_71 [label="persistentQueue.Enqueue(\r\n                connection,\r\n#if !NETFULL\r\n                transaction,\r\n#endif\r\n                queue,\r\n                jobId)", span="145-151", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_70 [label="Entry lambda expression", span="145-151", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_72 [label="Exit lambda expression", span="145-151", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_75 [label="SqlServerJobQueue.NewItemInQueueEvent.Set()", span="155-155", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_76 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="ConstantExpressionFingerprint.cs"];
m2_136 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="291-291", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_137 [label="key == null", span="293-293", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_138 [label="throw new ArgumentNullException(nameof(key));", span="293-293", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_139 [label="items == null", span="294-294", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_140 [label="throw new ArgumentNullException(nameof(items));", span="294-294", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_143 [label=items, span="303-303", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_144 [label="QueueCommand(query, new SqlParameter(''@key'', key), new SqlParameter(''@value'', item))", span="305-305", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_141 [label="string query =\r\n$@''insert into [{_storage.SchemaName}].[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="297-299", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_142 [label="AcquireSetLock()", span="301-301", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_145 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="291-291", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs"];
m2_204 [label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="ConstantExpressionFingerprint.cs"];
m2_15 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="ConstantExpressionFingerprint.cs"];
m2_0 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs"];
m2_1 [label="storage == null", span="47-47", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs"];
m2_2 [label="throw new ArgumentNullException(nameof(storage));", span="47-47", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs"];
m2_3 [label="_storage = storage", span="49-49", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs"];
m2_4 [label="_dedicatedConnectionFunc = dedicatedConnectionFunc", span="50-50", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs"];
m2_5 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs"];
m2_109 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="233-233", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_110 [label="AcquireListLock()", span="235-235", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_111 [label="QueueCommand(\r\n                $@''delete from [{_storage.SchemaName}].List where [Key] = @key and Value = @value'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', value))", span="236-239", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_112 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="233-233", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConstantExpressionFingerprint.cs"];
m2_108 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="391-391", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ConstantExpressionFingerprint.cs"];
m2_195 [label="AcquireLock(''List'')", span="393-393", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ConstantExpressionFingerprint.cs"];
m2_196 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="391-391", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ConstantExpressionFingerprint.cs"];
m2_174 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="358-358", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_175 [label="key == null", span="360-360", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_176 [label="throw new ArgumentNullException(nameof(key));", span="360-360", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_179 [label="QueueCommand(query, new SqlParameter(''@key'', key))", span="366-366", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_177 [label="string query = $@''\r\nupdate [{_storage.SchemaName}].Hash set ExpireAt = null where [Key] = @key''", span="362-363", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_178 [label="AcquireHashLock()", span="365-365", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_180 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="358-358", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs"];
m2_13 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="ConstantExpressionFingerprint.cs"];
m2_113 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs"];
m2_114 [label="string trimSql =\r\n$@'';with cte as (\r\n    select row_number() over (order by Id desc) as row_num\r\n    from [{_storage.SchemaName}].List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="244-249", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs"];
m2_116 [label="QueueCommand(trimSql,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@start'', keepStartingFrom + 1),\r\n                new SqlParameter(''@end'', keepEndingAt + 1))", span="252-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs"];
m2_115 [label="AcquireListLock()", span="251-251", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs"];
m2_117 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs"];
m2_205 [label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="ConstantExpressionFingerprint.cs"];
m2_206 [label=string, span="", file="ConstantExpressionFingerprint.cs"];
m2_207 [label=string, span="", file="ConstantExpressionFingerprint.cs"];
m2_208 [label=persistentQueue, span="", file="ConstantExpressionFingerprint.cs"];
m3_6 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="DefaultExpressionFingerprint.cs"];
m3_2 [label="Entry HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", span="23-23", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="DefaultExpressionFingerprint.cs"];
m3_3 [label="DefaultExpressionFingerprint other = obj as DefaultExpressionFingerprint", span="25-25", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="DefaultExpressionFingerprint.cs"];
m3_4 [label="return (other != null)\r\n                   && this.Equals(other);", span="26-27", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="DefaultExpressionFingerprint.cs"];
m3_5 [label="Exit HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", span="23-23", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="DefaultExpressionFingerprint.cs"];
m3_0 [label="Entry HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="DefaultExpressionFingerprint.cs"];
m3_1 [label="Exit HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="DefaultExpressionFingerprint.cs"];
m3_7 [label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint", span="", file="DefaultExpressionFingerprint.cs"];
m5_229 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", span="278-278", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", file="ElectStateContextFacts.cs"];
m5_230 [label="_disposed = true", span="280-280", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", file="ElectStateContextFacts.cs"];
m5_231 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", span="278-278", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", file="ElectStateContextFacts.cs"];
m5_157 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping'''", span="335-337", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_34 [label="var process = CreateProcess()", span="52-52", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs"];
m5_35 [label="process.Run(_context.Object)", span="54-54", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs"];
m5_36 [label="Assert.True(_methodInvoked)", span="56-56", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs"];
m5_37 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs"];
m5_96 [label="Assert.True(_methodInvoked)", span="139-139", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs"];
m5_97 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs"];
m5_98 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_15 [label="Entry Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", span="35-35", cluster="Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", file="ElectStateContextFacts.cs"];
m5_16 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", span="36-36", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", file="ElectStateContextFacts.cs"];
m5_17 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", span="86-86", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs"];
m5_18 [label="existingConnection == null", span="88-88", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs"];
m5_19 [label="throw new ArgumentNullException(nameof(existingConnection));", span="88-88", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs"];
m5_20 [label="options == null", span="89-89", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs"];
m5_21 [label="throw new ArgumentNullException(nameof(options));", span="89-89", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs"];
m5_22 [label="_existingConnection = existingConnection", span="91-91", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs"];
m5_79 [label="x.Value", span="137-137", cluster="lambda expression", file="ElectStateContextFacts.cs", color=green, community=0];
m5_24 [label="Initialize()", span="94-94", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs", color=green, community=0];
m5_251 [label="return new CoreJobPerformanceProcess(_activator.Object);", span="321-321", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", file="ElectStateContextFacts.cs"];
m5_252 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", file="ElectStateContextFacts.cs"];
m5_99 [label="MethodWithDateTimeArgument(SomeDateTime)", span="132-132", cluster="lambda expression", file="ElectStateContextFacts.cs", color=red, community=0];
m5_105 [label="var process = CreateProcess()", span="149-149", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ElectStateContextFacts.cs"];
m5_106 [label="process.Run(_context.Object)", span="151-151", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ElectStateContextFacts.cs"];
m5_104 [label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ElectStateContextFacts.cs"];
m5_40 [label="x.InstanceMethod()", span="51-51", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_42 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_41 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_43 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ElectStateContextFacts.cs"];
m5_123 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_74 [label="Assert.True(_methodInvoked)", span="104-104", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs"];
m5_81 [label="_methodInvoked = false", span="111-111", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs"];
m5_82 [label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="112-112", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_83 [label="var type = typeof(CoreJobPerformanceProcessFacts)", span="114-114", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs"];
m5_122 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="ElectStateContextFacts.cs"];
m5_113 [label="Exit lambda expression", span="226-235", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_114 [label="Entry Unk.BeginTransaction", span="", cluster="Unk.BeginTransaction", file="ElectStateContextFacts.cs"];
m5_115 [label="Entry Unk.func", span="", cluster="Unk.func", file="ElectStateContextFacts.cs"];
m5_116 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="ElectStateContextFacts.cs"];
m5_117 [label="var connection = _existingConnection ?? new SqlConnection(_connectionString)", span="241-241", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs"];
m5_118 [label="connection.State == ConnectionState.Closed", span="243-243", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs"];
m5_119 [label="connection.Open()", span="245-245", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs"];
m5_164 [label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs"];
m5_186 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="ElectStateContextFacts.cs"];
m5_248 [label="throw new InvalidOperationException(''exception'');", span="316-316", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="ElectStateContextFacts.cs"];
m5_249 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="ElectStateContextFacts.cs"];
m5_216 [label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="584-584", cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="ElectStateContextFacts.cs"];
m5_238 [label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24", cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="ElectStateContextFacts.cs"];
m5_45 [label="_context.BackgroundJob.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ElectStateContextFacts.cs"];
m5_47 [label="process.Run(_context.Object)", span="66-66", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_46 [label="var process = CreateProcess()", span="64-64", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ElectStateContextFacts.cs"];
m5_48 [label="Assert.True(_disposed)", span="68-68", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_50 [label="Entry lambda expression", span="63-63", cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_51 [label="x.Method()", span="63-63", cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_55 [label="_methodInvoked = false", span="75-75", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_56 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_57 [label="var process = CreateProcess()", span="77-77", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_54 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_59 [label="Assert.True(_methodInvoked)", span="83-83", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_58 [label="process.Run(_context.Object)", span="80-80", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_49 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_52 [label="Exit lambda expression", span="63-63", cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_53 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_60 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="ElectStateContextFacts.cs"];
m5_101 [label="action(connection, transaction)", span="202-202", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_239 [label="_methodInvoked = true", span="296-296", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ElectStateContextFacts.cs"];
m5_240 [label="Assert.Equal(SomeDateTime, argument)", span="298-298", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ElectStateContextFacts.cs"];
m5_241 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ElectStateContextFacts.cs"];
m5_5 [label="options == null", span="63-63", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs", color=green, community=0];
m5_65 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs"];
m5_11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ElectStateContextFacts.cs"];
m5_199 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="ElectStateContextFacts.cs"];
m5_236 [label="token.ThrowIfCancellationRequested()", span="291-291", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="ElectStateContextFacts.cs"];
m5_237 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="ElectStateContextFacts.cs"];
m5_207 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs"];
m5_208 [label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs"];
m5_209 [label="var process = CreateProcess()", span="240-240", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs"];
m5_210 [label="var result = process.Run(_context.Object)", span="242-242", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs"];
m5_211 [label="Assert.Equal(''Return value'', result)", span="244-244", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs"];
m5_212 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs"];
m5_146 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_30 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="109-109", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="ElectStateContextFacts.cs"];
m5_242 [label="_methodInvoked = true", span="303-303", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", file="ElectStateContextFacts.cs"];
m5_243 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", file="ElectStateContextFacts.cs"];
m5_172 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background'''", span="357-359", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_224 [label="_methodInvoked = true", span="269-269", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="ElectStateContextFacts.cs"];
m5_225 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="ElectStateContextFacts.cs"];
m5_23 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContextFacts.cs"];
m5_25 [label="Entry Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="41-41", cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="ElectStateContextFacts.cs"];
m5_78 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_66 [label="_methodInvoked = false", span="90-90", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs"];
m5_176 [label="Hangfire.SqlServer.SqlServerStorage", span="", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs"];
m5_177 [label="System.Action<DbConnection>", span="", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs"];
m5_178 [label="System.Action<DbConnection, DbTransaction>", span="", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs"];
m5_179 [label="IsolationLevel?", span="", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs"];
m5_180 [label="System.Func<DbConnection, DbTransaction, T>", span="", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs"];
m5_181 [label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs"];
m5_182 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs"];
m5_190 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs"];
m5_191 [label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs"];
m5_192 [label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs"];
m5_193 [label="var process = CreateProcess()", span="229-229", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs"];
m5_194 [label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context.Object))", span="232-233", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs"];
m5_195 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs"];
m5_95 [label="process.Run(_context.Object)", span="136-136", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs"];
m5_31 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs"];
m5_32 [label="_methodInvoked = false", span="50-50", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs"];
m5_221 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", span="259-259", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", file="ElectStateContextFacts.cs"];
m5_222 [label="_disposed = true", span="261-261", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", file="ElectStateContextFacts.cs"];
m5_223 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", span="259-259", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", file="ElectStateContextFacts.cs"];
m5_67 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="ElectStateContextFacts.cs"];
m5_68 [label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="92-92", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs"];
m5_69 [label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="135-135", cluster="lambda expression", file="ElectStateContextFacts.cs", color=green, community=0];
m5_71 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_70 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="95-95", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs"];
m5_72 [label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="136-136", cluster="lambda expression", file="ElectStateContextFacts.cs", color=green, community=0];
m5_73 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_75 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_219 [label="_methodInvoked = true", span="256-256", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="ElectStateContextFacts.cs"];
m5_220 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="ElectStateContextFacts.cs"];
m5_145 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_132 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_29 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_61 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_102 [label="return true;", span="203-203", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_103 [label="Exit lambda expression", span="200-204", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_107 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="ElectStateContextFacts.cs"];
m5_108 [label="Entry lambda expression", span="226-235", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_165 [label="var process = CreateProcess()", span="202-202", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs"];
m5_12 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="ElectStateContextFacts.cs"];
m5_13 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", span="283-283", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="ElectStateContextFacts.cs"];
m5_14 [label="Entry Hangfire.SqlServer.SqlServerStorage.Initialize()", span="264-264", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="ElectStateContextFacts.cs"];
m5_27 [label="return new SqlServerMonitoringApi(this, _options.DashboardJobListLimit);", span="106-106", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ElectStateContextFacts.cs"];
m5_28 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="104-104", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ElectStateContextFacts.cs"];
m5_39 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ElectStateContextFacts.cs"];
m5_62 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ElectStateContextFacts.cs"];
m5_63 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="ElectStateContextFacts.cs"];
m5_100 [label="Entry lambda expression", span="200-204", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_109 [label="var transaction = connection.BeginTransaction(isolationLevel ?? IsolationLevel.ReadCommitted)", span="228-228", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_110 [label="var result = func(connection, transaction)", span="230-230", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_111 [label="transaction.Commit()", span="231-231", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_127 [label="Entry Unk.ReferenceEquals", span="", cluster="Unk.ReferenceEquals", file="ElectStateContextFacts.cs"];
m5_131 [label="Exit Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="256-256", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ElectStateContextFacts.cs"];
m5_130 [label="connection.Dispose()", span="260-260", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ElectStateContextFacts.cs"];
m5_124 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="251-251", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="ElectStateContextFacts.cs"];
m5_125 [label="return connection != null && ReferenceEquals(connection, _existingConnection);", span="253-253", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="ElectStateContextFacts.cs"];
m5_128 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="256-256", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ElectStateContextFacts.cs"];
m5_129 [label="connection != null && !IsExistingConnection(connection)", span="258-258", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ElectStateContextFacts.cs"];
m5_140 [label="Exit lambda expression", span="268-271", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_143 [label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="280-280", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ElectStateContextFacts.cs"];
m5_147 [label="return nameOrConnectionString;", span="299-299", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="ElectStateContextFacts.cs"];
m5_141 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(DbConnection, string)", span="38-38", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(DbConnection, string)", file="ElectStateContextFacts.cs"];
m5_142 [label="var defaultQueueProvider = new SqlServerJobQueueProvider(this, _options)", span="279-279", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ElectStateContextFacts.cs"];
m5_144 [label="Exit Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="277-277", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ElectStateContextFacts.cs"];
m5_148 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", span="283-283", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="ElectStateContextFacts.cs"];
m5_160 [label="Exit lambda expression", span="333-344", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_159 [label="return new Metric(value.ToString(''N0''));", span="343-343", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_161 [label="Entry Unk.>", span="", cluster="Unk.>", file="ElectStateContextFacts.cs"];
m5_169 [label="return sqlStorage.UseConnection(null, connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="355-366", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_174 [label="return new Metric(value.ToString(''N0''));", span="365-365", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_173 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="361-363", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_170 [label="Exit lambda expression", span="350-367", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_171 [label="Entry lambda expression", span="355-366", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_175 [label="Exit lambda expression", span="355-366", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_183 [label="Entry lambda expression", span="213-213", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_188 [label="process.Run(_context.Object)", span="217-217", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_187 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_184 [label="ExceptionMethod()", span="213-213", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_185 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_189 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_196 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_200 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_205 [label="process.Run(_context.Object)", span="233-233", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_204 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_197 [label="CancelableJob(JobCancellationToken.Null)", span="227-227", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_198 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_201 [label="x.ThrowIfCancellationRequested()", span="228-228", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_202 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_206 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_213 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_214 [label="x.FunctionReturningValue()", span="239-239", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_215 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_76 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_77 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="ElectStateContextFacts.cs"];
m5_80 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs"];
m5_85 [label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs"];
m5_139 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ElectStateContextFacts.cs"];
m5_86 [label="var process = CreateProcess()", span="118-118", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs"];
m5_153 [label="var process = CreateProcess()", span="189-189", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs"];
m5_88 [label="Assert.True(_methodInvoked)", span="124-124", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs"];
m5_138 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs"];
m5_87 [label="process.Run(_context.Object)", span="121-121", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs"];
m5_150 [label="var type = typeof(JobFacts)", span="186-186", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs"];
m5_151 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs"];
m5_154 [label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", span="191-192", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs"];
m5_156 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs"];
m5_166 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="204-205", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs"];
m5_167 [label="Assert.True(_methodInvoked)", span="207-207", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs"];
m5_149 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs"];
m5_152 [label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs"];
m5_158 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="ElectStateContextFacts.cs"];
m5_168 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs"];
m5_112 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ElectStateContextFacts.cs"];
m5_4 [label="throw new ArgumentNullException(nameof(nameOrConnectionString));", span="62-62", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs"];
m5_2 [label="_context = new PerformContextMock()", span="22-22", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ElectStateContextFacts.cs"];
m5_3 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ElectStateContextFacts.cs"];
m5_6 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new CoreJobPerformanceProcess(null))", span="28-30", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_8 [label="Assert.Equal(''activator'', exception.ParamName)", span="32-32", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="ElectStateContextFacts.cs", color=red, community=0];
m5_9 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="ElectStateContextFacts.cs"];
m5_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="ElectStateContextFacts.cs"];
m5_33 [label="_context.BackgroundJob.Job = Job.FromExpression<CoreJobPerformanceProcessFacts>(x => x.InstanceMethod())", span="51-51", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs"];
m5_84 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", span="180-180", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", file="ElectStateContextFacts.cs"];
m5_89 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ElectStateContextFacts.cs"];
m5_90 [label="DbConnection connection = null", span="182-182", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", file="ElectStateContextFacts.cs"];
m5_162 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="ElectStateContextFacts.cs"];
m5_163 [label="Entry Metric.cstr", span="", cluster="Metric.cstr", file="ElectStateContextFacts.cs"];
m5_120 [label="return connection;", span="248-248", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs"];
m5_64 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="ElectStateContextFacts.cs"];
m5_244 [label="_methodInvoked = true", span="308-308", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ElectStateContextFacts.cs"];
m5_245 [label="Assert.Equal(''hello'', stringArg)", span="310-310", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ElectStateContextFacts.cs"];
m5_246 [label="Assert.Equal(5, intArg)", span="311-311", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ElectStateContextFacts.cs"];
m5_247 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ElectStateContextFacts.cs"];
m5_250 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ElectStateContextFacts.cs"];
m5_91 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs"];
m5_92 [label="_methodInvoked = false", span="131-131", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs"];
m5_93 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="132-132", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs", color=red, community=0];
m5_226 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="ElectStateContextFacts.cs"];
m5_227 [label="throw new InvalidOperationException();", span="274-274", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="ElectStateContextFacts.cs"];
m5_228 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="ElectStateContextFacts.cs"];
m5_217 [label="_methodInvoked = true", span="249-249", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="ElectStateContextFacts.cs"];
m5_218 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="ElectStateContextFacts.cs"];
m5_44 [label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204", cluster="Hangfire.Logging.ILog.Info(string)", file="ElectStateContextFacts.cs"];
m5_121 [label="Exit Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="239-239", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs"];
m5_235 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="ElectStateContextFacts.cs"];
m5_38 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="54-54", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ElectStateContextFacts.cs"];
m5_0 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ElectStateContextFacts.cs"];
m5_1 [label="_activator = new Mock<JobActivator>() { CallBase = true }", span="21-21", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", color=red, community=0, file="ElectStateContextFacts.cs"];
m5_137 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="179-180", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs"];
m5_253 [label="Entry CoreJobPerformanceProcess.cstr", span="", cluster="CoreJobPerformanceProcess.cstr", file="ElectStateContextFacts.cs"];
m5_94 [label="var process = CreateProcess()", span="133-133", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs"];
m5_133 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs"];
m5_134 [label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs"];
m5_135 [label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs"];
m5_136 [label="var process = CreateProcess()", span="177-177", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs"];
m5_126 [label="Entry Unk.ActivateJob", span="", cluster="Unk.ActivateJob", file="ElectStateContextFacts.cs"];
m5_155 [label="Assert.NotNull(exception.InnerException)", span="194-194", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs"];
m5_203 [label="Entry Unk.ThrowIfCancellationRequested", span="", cluster="Unk.ThrowIfCancellationRequested", file="ElectStateContextFacts.cs"];
m5_232 [label="_methodInvoked = true", span="285-285", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ElectStateContextFacts.cs"];
m5_233 [label="Assert.Null(argument)", span="286-286", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ElectStateContextFacts.cs"];
m5_234 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ElectStateContextFacts.cs"];
m5_26 [label="Entry Unk.True", span="", cluster="Unk.True", file="ElectStateContextFacts.cs"];
m5_254 [label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", span="", file="ElectStateContextFacts.cs"];
m5_255 [label=process, span="", file="ElectStateContextFacts.cs"];
m5_256 [label=process, span="", file="ElectStateContextFacts.cs"];
m5_257 [label=process, span="", file="ElectStateContextFacts.cs"];
m5_258 [label=process, span="", file="ElectStateContextFacts.cs"];
m5_259 [label=process, span="", file="ElectStateContextFacts.cs"];
m5_260 [label=process, span="", file="ElectStateContextFacts.cs"];
m6_0 [label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="11-11", cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="ExpressionFingerprint.cs"];
m6_1 [label="Exit HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="11-11", cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="ExpressionFingerprint.cs"];
m7_0 [label="Entry HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs"];
m7_1 [label="transaction == null", span="9-9", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs"];
m7_3 [label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(''hangfire:failed'', jobId))", span="11-11", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs"];
m7_2 [label="throw new ArgumentNullException(''transaction'');", span="9-9", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs"];
m7_4 [label="Exit HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs"];
m7_6 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ExpressionFingerprintChain.cs"];
m7_7 [label="Entry lambda expression", span="11-11", cluster="lambda expression", file="ExpressionFingerprintChain.cs"];
m7_8 [label="x.RemoveItemFromSortedSet(''hangfire:failed'', jobId)", span="11-11", cluster="lambda expression", file="ExpressionFingerprintChain.cs"];
m7_9 [label="Exit lambda expression", span="11-11", cluster="lambda expression", file="ExpressionFingerprintChain.cs"];
m7_10 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="ExpressionFingerprintChain.cs"];
m7_11 [label=string, span="", file="ExpressionFingerprintChain.cs"];
m8_6 [label="Entry HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", span="37-37", cluster="HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", file="FingerprintingExpressionVisitor.cs"];
m8_7 [label="ProcessRequest()", span="39-39", cluster="HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", file="FingerprintingExpressionVisitor.cs"];
m8_8 [label="Exit HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", span="37-37", cluster="HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", file="FingerprintingExpressionVisitor.cs"];
m8_3 [label="Entry HttpContextWrapper.cstr", span="", cluster="HttpContextWrapper.cstr", file="FingerprintingExpressionVisitor.cs"];
m8_0 [label="Entry HangFire.Web.GenericHandler.GenericHandler()", span="22-22", cluster="HangFire.Web.GenericHandler.GenericHandler()", file="FingerprintingExpressionVisitor.cs"];
m8_1 [label="Context = new HttpContextWrapper(HttpContext.Current)", span="24-24", cluster="HangFire.Web.GenericHandler.GenericHandler()", file="FingerprintingExpressionVisitor.cs"];
m8_2 [label="Exit HangFire.Web.GenericHandler.GenericHandler()", span="22-22", cluster="HangFire.Web.GenericHandler.GenericHandler()", file="FingerprintingExpressionVisitor.cs"];
m8_4 [label="Entry HangFire.Web.GenericHandler.ProcessRequest()", span="35-35", cluster="HangFire.Web.GenericHandler.ProcessRequest()", file="FingerprintingExpressionVisitor.cs"];
m8_5 [label="Exit HangFire.Web.GenericHandler.ProcessRequest()", span="35-35", cluster="HangFire.Web.GenericHandler.ProcessRequest()", file="FingerprintingExpressionVisitor.cs"];
m8_9 [label="HangFire.Web.GenericHandler", span="", file="FingerprintingExpressionVisitor.cs"];
m11_14 [label="Entry System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", file="HoistingExpressionVisitor.cs"];
m11_9 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="HoistingExpressionVisitor.cs"];
m11_0 [label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="HoistingExpressionVisitor.cs"];
m11_1 [label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="HoistingExpressionVisitor.cs"];
m11_13 [label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0", cluster="System.Linq.Expressions.Expression.Constant(object)", file="HoistingExpressionVisitor.cs"];
m11_2 [label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m11_3 [label="var visitor = new HoistingExpressionVisitor<TIn, TOut>()", span="25-25", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m11_4 [label="var rewrittenBodyExpr = visitor.Visit(expr.Body)", span="26-26", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m11_5 [label="var rewrittenLambdaExpr = Expression.Lambda<Hoisted<TIn, TOut>>(rewrittenBodyExpr, expr.Parameters[0], _hoistedConstantsParamExpr)", span="27-27", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m11_6 [label="return rewrittenLambdaExpr;", span="28-28", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m11_7 [label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m11_10 [label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="HoistingExpressionVisitor.cs"];
m11_11 [label="return Expression.Convert(Expression.Property(_hoistedConstantsParamExpr, ''Item'', Expression.Constant(_numConstantsProcessed++)), node.Type);", span="34-34", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="HoistingExpressionVisitor.cs"];
m11_12 [label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="HoistingExpressionVisitor.cs"];
m11_15 [label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="HoistingExpressionVisitor.cs"];
m11_8 [label="Entry System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", span="0-0", cluster="System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", file="HoistingExpressionVisitor.cs"];
m11_16 [label="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>", span="", file="HoistingExpressionVisitor.cs"];
m12_0 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="24-24", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IndexExpressionFingerprint.cs"];
m12_1 [label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="24-24", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IndexExpressionFingerprint.cs"];
m13_0 [label="Entry HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", span="49-49", cluster="HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", file="JobFilterAttribute.cs"];
m13_1 [label="return MultiuseAttributeCache.GetOrAdd(\r\n                attributeType,\r\n                type => type.GetCustomAttributes(typeof(AttributeUsageAttribute), true)\r\n                            .Cast<AttributeUsageAttribute>()\r\n                            .First()\r\n                            .AllowMultiple);", span="51-56", cluster="HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", file="JobFilterAttribute.cs"];
m13_2 [label="Exit HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", span="49-49", cluster="HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", file="JobFilterAttribute.cs"];
m13_3 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", file="JobFilterAttribute.cs"];
m13_8 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JobFilterAttribute.cs"];
m13_9 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JobFilterAttribute.cs"];
m13_4 [label="Entry lambda expression", span="53-56", cluster="lambda expression", file="JobFilterAttribute.cs"];
m13_5 [label="type.GetCustomAttributes(typeof(AttributeUsageAttribute), true)\r\n                            .Cast<AttributeUsageAttribute>()\r\n                            .First()\r\n                            .AllowMultiple", span="53-56", cluster="lambda expression", file="JobFilterAttribute.cs"];
m13_6 [label="Exit lambda expression", span="53-56", cluster="lambda expression", file="JobFilterAttribute.cs"];
m13_7 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="JobFilterAttribute.cs"];
m14_6 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="JobFilterAttributeFacts.cs"];
m14_7 [label="filterAttribute.Object.Order = -2", span="14-14", cluster="lambda expression", color=green, community=0, file="JobFilterAttributeFacts.cs"];
m14_8 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="JobFilterAttributeFacts.cs"];
m14_5 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobFilterAttributeFacts.cs"];
m14_4 [label="Entry Mock<JobFilterAttribute>.cstr", span="", cluster="Mock<JobFilterAttribute>.cstr", file="JobFilterAttributeFacts.cs"];
m14_0 [label="Entry HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", span="10-10", cluster="HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", file="JobFilterAttributeFacts.cs"];
m14_1 [label="var filterAttribute = new Mock<JobFilterAttribute>() { CallBase = true }", span="12-12", cluster="HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", color=green, community=0, file="JobFilterAttributeFacts.cs"];
m14_2 [label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => filterAttribute.Object.Order = -2)", span="13-14", cluster="HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", color=green, community=1, file="JobFilterAttributeFacts.cs"];
m14_3 [label="Exit HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", span="10-10", cluster="HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", file="JobFilterAttributeFacts.cs"];
m14_9 [label=filterAttribute, span="", file="JobFilterAttributeFacts.cs"];
m15_6 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="LambdaExpressionFingerprint.cs"];
m15_2 [label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs"];
m15_3 [label="LambdaExpressionFingerprint other = obj as LambdaExpressionFingerprint", span="25-25", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs"];
m15_4 [label="return (other != null)\r\n                   && this.Equals(other);", span="26-27", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs"];
m15_5 [label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs"];
m15_0 [label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs"];
m15_1 [label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs"];
m15_7 [label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", span="", file="LambdaExpressionFingerprint.cs"];
m16_34 [label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120", cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_20 [label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_21 [label="var client = ClientFactory()", span="107-107", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_22 [label="return client.Schedule(methodCall, enqueueAt);", span="108-108", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_23 [label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_64 [label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288", cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs"];
m16_45 [label="Entry Hangfire.BackgroundJob.Requeue(string)", span="178-178", cluster="Hangfire.BackgroundJob.Requeue(string)", file="MemberExpressionFingerprint.cs"];
m16_46 [label="var client = ClientFactory()", span="180-180", cluster="Hangfire.BackgroundJob.Requeue(string)", file="MemberExpressionFingerprint.cs"];
m16_47 [label="return client.Requeue(jobId);", span="181-181", cluster="Hangfire.BackgroundJob.Requeue(string)", file="MemberExpressionFingerprint.cs"];
m16_48 [label="Exit Hangfire.BackgroundJob.Requeue(string)", span="178-178", cluster="Hangfire.BackgroundJob.Requeue(string)", file="MemberExpressionFingerprint.cs"];
m16_59 [label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="273-273", cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_24 [label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84", cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_3 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="MemberExpressionFingerprint.cs"];
m16_35 [label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149", cluster="Hangfire.BackgroundJob.Delete(string)", file="MemberExpressionFingerprint.cs"];
m16_36 [label="var client = ClientFactory()", span="151-151", cluster="Hangfire.BackgroundJob.Delete(string)", file="MemberExpressionFingerprint.cs"];
m16_37 [label="return client.Delete(jobId);", span="152-152", cluster="Hangfire.BackgroundJob.Delete(string)", file="MemberExpressionFingerprint.cs"];
m16_38 [label="Exit Hangfire.BackgroundJob.Delete(string)", span="149-149", cluster="Hangfire.BackgroundJob.Delete(string)", file="MemberExpressionFingerprint.cs"];
m16_9 [label="Entry Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="36-36", cluster="Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_60 [label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs"];
m16_61 [label="var client = ClientFactory()", span="208-208", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs"];
m16_62 [label="return client.ContinueWith(parentId, methodCall, options);", span="209-209", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs"];
m16_63 [label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs"];
m16_49 [label="Entry Hangfire.IBackgroundJobClient.Requeue(string)", span="249-249", cluster="Hangfire.IBackgroundJobClient.Requeue(string)", file="MemberExpressionFingerprint.cs"];
m16_8 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="MemberExpressionFingerprint.cs"];
m16_54 [label="Entry Hangfire.IBackgroundJobClient.Requeue(string, string)", span="265-265", cluster="Hangfire.IBackgroundJobClient.Requeue(string, string)", file="MemberExpressionFingerprint.cs"];
m16_39 [label="Entry Hangfire.IBackgroundJobClient.Delete(string)", span="204-204", cluster="Hangfire.IBackgroundJobClient.Delete(string)", file="MemberExpressionFingerprint.cs"];
m16_55 [label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_56 [label="var client = ClientFactory()", span="202-202", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_57 [label="return client.ContinueWith(parentId, methodCall);", span="203-203", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_58 [label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_30 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_31 [label="var client = ClientFactory()", span="137-137", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_32 [label="return client.Schedule(methodCall, enqueueAt);", span="138-138", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_33 [label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs"];
m16_0 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="MemberExpressionFingerprint.cs"];
m16_1 [label="new BackgroundJobClient(JobStorage.Current)", span="29-29", cluster="lambda expression", file="MemberExpressionFingerprint.cs"];
m16_2 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="MemberExpressionFingerprint.cs"];
m16_29 [label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104", cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_50 [label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="194-194", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="MemberExpressionFingerprint.cs"];
m16_51 [label="var client = ClientFactory()", span="196-196", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="MemberExpressionFingerprint.cs"];
m16_52 [label="return client.Requeue(jobId, fromState);", span="197-197", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="MemberExpressionFingerprint.cs"];
m16_53 [label="Exit Hangfire.BackgroundJob.Requeue(string, string)", span="194-194", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="MemberExpressionFingerprint.cs"];
m16_40 [label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="165-165", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="MemberExpressionFingerprint.cs"];
m16_41 [label="var client = ClientFactory()", span="167-167", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="MemberExpressionFingerprint.cs"];
m16_42 [label="return client.Delete(jobId, fromState);", span="168-168", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="MemberExpressionFingerprint.cs"];
m16_43 [label="Exit Hangfire.BackgroundJob.Delete(string, string)", span="165-165", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="MemberExpressionFingerprint.cs"];
m16_15 [label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_16 [label="var client = ClientFactory()", span="93-93", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_17 [label="return client.Schedule(methodCall, delay);", span="94-94", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_18 [label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_4 [label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_5 [label="var client = ClientFactory()", span="63-63", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_6 [label="return client.Enqueue(methodCall);", span="64-64", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_7 [label="Exit Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs"];
m16_19 [label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69", cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_10 [label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs"];
m16_11 [label="var client = ClientFactory()", span="79-79", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs"];
m16_12 [label="return client.Enqueue(methodCall);", span="80-80", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs"];
m16_13 [label="Exit Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs"];
m16_25 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_26 [label="var client = ClientFactory()", span="122-122", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_27 [label="return client.Schedule(methodCall, delay);", span="123-123", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_28 [label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs"];
m16_14 [label="Entry Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54", cluster="Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs"];
m16_44 [label="Entry Hangfire.IBackgroundJobClient.Delete(string, string)", span="233-233", cluster="Hangfire.IBackgroundJobClient.Delete(string, string)", file="MemberExpressionFingerprint.cs"];
m17_9 [label="Entry HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs"];
m17_10 [label="combiner.AddObject(Method)", span="39-39", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs"];
m17_11 [label="base.AddToHashCodeCombiner(combiner)", span="40-40", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs"];
m17_12 [label="Exit HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs"];
m17_13 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="MethodCallExpressionFingerprint.cs"];
m17_8 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="MethodCallExpressionFingerprint.cs"];
m17_3 [label="Entry HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs"];
m17_4 [label="MethodCallExpressionFingerprint other = obj as MethodCallExpressionFingerprint", span="31-31", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs"];
m17_5 [label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="32-34", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs"];
m17_6 [label="Exit HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs"];
m17_7 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="MethodCallExpressionFingerprint.cs"];
m17_14 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs"];
m17_0 [label="Entry HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="MethodCallExpressionFingerprint.cs"];
m17_1 [label="Method = method", span="23-23", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="MethodCallExpressionFingerprint.cs"];
m17_2 [label="Exit HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="MethodCallExpressionFingerprint.cs"];
m17_15 [label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint", span="", file="MethodCallExpressionFingerprint.cs"];
m18_12 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="46-46", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="ParameterExpressionFingerprint.cs"];
m18_3 [label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", span="25-25", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs"];
m18_4 [label="ParameterExpressionFingerprint other = obj as ParameterExpressionFingerprint", span="27-27", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs"];
m18_5 [label="return (other != null)\r\n                   && (this.ParameterIndex == other.ParameterIndex)\r\n                   && this.Equals(other);", span="28-30", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs"];
m18_6 [label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", span="25-25", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs"];
m18_7 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ParameterExpressionFingerprint.cs"];
m18_8 [label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="33-33", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m18_9 [label="combiner.AddInt32(ParameterIndex)", span="35-35", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m18_10 [label="base.AddToHashCodeCombiner(combiner)", span="36-36", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m18_11 [label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="33-33", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m18_13 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m18_0 [label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", span="16-16", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="ParameterExpressionFingerprint.cs"];
m18_1 [label="ParameterIndex = parameterIndex", span="19-19", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="ParameterExpressionFingerprint.cs"];
m18_2 [label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", span="16-16", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="ParameterExpressionFingerprint.cs"];
m18_14 [label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", span="", file="ParameterExpressionFingerprint.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n6  [key=2, style=dotted];
n3 -> n7  [key=2, style=dotted];
n2 -> n4  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n4 -> n0  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n6  [key=2, style=dotted];
n11 -> n13  [key=2, style=dotted];
n10 -> n12  [key=0, style=solid];
n10 -> n5  [key=2, style=dotted];
n12 -> n8  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n14 -> n17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=2, style=dotted];
n17 -> n7  [key=2, style=dotted];
n16 -> n18  [key=0, style=solid];
n16 -> n5  [key=2, style=dotted];
n18 -> n14  [key=0, style=bold, color=blue];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=2, style=dotted];
n23 -> n7  [key=2, style=dotted];
n23 -> n23  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
n22 -> n24  [key=0, style=solid];
n22 -> n5  [key=2, style=dotted];
n24 -> n20  [key=0, style=bold, color=blue];
n26 -> n27  [key=0, style=solid];
n26 -> n29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n19  [key=2, style=dotted];
n29 -> n13  [key=2, style=dotted];
n28 -> n30  [key=0, style=solid];
n28 -> n5  [key=2, style=dotted];
n30 -> n26  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n31 -> n34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n25  [key=2, style=dotted];
n34 -> n13  [key=2, style=dotted];
n34 -> n34  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
n33 -> n35  [key=0, style=solid];
n33 -> n5  [key=2, style=dotted];
n35 -> n31  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n36 -> n39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=2, style=dotted];
n39 -> n42  [key=2, style=dotted];
n38 -> n40  [key=0, style=solid];
n38 -> n5  [key=2, style=dotted];
n40 -> n36  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n43 -> n46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=2, style=dotted];
n46 -> n42  [key=2, style=dotted];
n45 -> n47  [key=0, style=solid];
n45 -> n5  [key=2, style=dotted];
n47 -> n43  [key=0, style=bold, color=blue];
n49 -> n50  [key=0, style=solid];
n49 -> n52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n50 -> n51  [key=0, style=solid];
n50 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=2, style=dotted];
n51 -> n53  [key=0, style=solid];
n51 -> n5  [key=2, style=dotted];
n53 -> n49  [key=0, style=bold, color=blue];
n55 -> n56  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n56 -> n58  [key=2, style=dotted];
n57 -> n55  [key=0, style=bold, color=blue];
n58 -> n59  [key=0, style=solid];
n58 -> n62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n59 -> n60  [key=0, style=solid];
n59 -> n61  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n54  [key=2, style=dotted];
n60 -> n63  [key=0, style=solid];
n60 -> n5  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n64  [key=2, style=dotted];
n63 -> n58  [key=0, style=bold, color=blue];
n65 -> n66  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n68  [key=2, style=dotted];
n67 -> n65  [key=0, style=bold, color=blue];
n68 -> n69  [key=0, style=solid];
n68 -> n72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n69 -> n70  [key=0, style=solid];
n69 -> n71  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n72 -> n54  [key=2, style=dotted];
n70 -> n73  [key=0, style=solid];
n70 -> n5  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n6  [key=2, style=dotted];
n73 -> n68  [key=0, style=bold, color=blue];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n6  [key=2, style=dotted];
n75 -> n77  [key=2, style=dotted];
n76 -> n74  [key=0, style=bold, color=blue];
n77 -> n78  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n80  [key=2, style=dotted];
n79 -> n77  [key=0, style=bold, color=blue];
n80 -> n84  [key=0, style=solid];
n80 -> n86  [key=1, style=dashed, color=darkseagreen4, label=string];
n80 -> n87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
n81 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n6  [key=2, style=dotted];
n82 -> n80  [key=2, style=dotted];
n83 -> n81  [key=0, style=bold, color=blue];
n84 -> n85  [key=0, style=solid];
n84 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n89  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n41  [key=2, style=dotted];
n87 -> n42  [key=2, style=dotted];
n85 -> n88  [key=0, style=solid];
n85 -> n5  [key=2, style=dotted];
n88 -> n80  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_8  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=2, style=dotted];
m0_23 -> m0_20  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_8  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [key=2, style=dotted];
m0_48 -> m0_45  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_8  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [key=2, style=dotted];
m0_38 -> m0_35  [key=0, style=bold, color=blue];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_8  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=2, style=dotted];
m0_63 -> m0_60  [key=0, style=bold, color=blue];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_8  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_59  [key=2, style=dotted];
m0_58 -> m0_55  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_8  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_33 -> m0_30  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_8  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_54  [key=2, style=dotted];
m0_53 -> m0_50  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_8  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=2, style=dotted];
m0_43 -> m0_40  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_8  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=2, style=dotted];
m0_18 -> m0_15  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_8  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_9  [key=2, style=dotted];
m0_7 -> m0_4  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_8  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=2, style=dotted];
m0_13 -> m0_10  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_8  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_28 -> m0_25  [key=0, style=bold, color=blue];
m1_92 -> m1_104  [key=0, style=solid];
m1_92 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m1_92 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_55  [key=2, style=dotted];
m1_104 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_56  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_57  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_59  [key=2, style=dotted];
m1_108 -> m1_92  [key=0, style=bold, color=blue];
m1_17 -> m1_153  [key=0, style=solid];
m1_17 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m1_17 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m1_17 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m1_17 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_155  [key=0, style=solid];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_157  [key=0, style=solid];
m1_155 -> m1_123  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_159  [key=0, style=solid];
m1_157 -> m1_124  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_161  [key=2, style=dotted];
m1_158 -> m1_162  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_163  [key=2, style=dotted];
m1_154 -> m1_160  [key=0, style=solid];
m1_154 -> n5  [key=2, style=dotted];
m1_156 -> m1_160  [key=0, style=solid];
m1_156 -> n5  [key=2, style=dotted];
m1_160 -> m1_17  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_26 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m1_26 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m1_26 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_26 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m1_26 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m1_26 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_46  [key=2, style=dotted];
m1_33 -> m1_47  [key=2, style=dotted];
m1_33 -> m1_21  [key=2, style=dotted];
m1_33 -> m1_48  [key=2, style=dotted];
m1_33 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_49  [key=2, style=dotted];
m1_34 -> m1_50  [key=2, style=dotted];
m1_34 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_34 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_34 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_51  [key=2, style=dotted];
m1_35 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m1_35 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_52  [key=2, style=dotted];
m1_36 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=context];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_53  [key=2, style=dotted];
m1_37 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m1_28 -> m1_45  [key=0, style=solid];
m1_28 -> n5  [key=2, style=dotted];
m1_30 -> m1_45  [key=0, style=solid];
m1_30 -> n5  [key=2, style=dotted];
m1_32 -> m1_45  [key=0, style=solid];
m1_32 -> n5  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_58  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_54  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_57  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_56  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_55  [key=2, style=dotted];
m1_39 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_39 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_59  [key=2, style=dotted];
m1_45 -> m1_26  [key=0, style=bold, color=blue];
m1_60 -> m1_61  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_19 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_18 -> m1_19  [key=0, style=solid];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_61 -> m1_62  [key=0, style=solid];
m1_62 -> m1_60  [key=0, style=bold, color=blue];
m1_54 -> m1_96  [key=0, style=solid];
m1_54 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m1_54 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m1_54 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m1_54 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_101  [key=0, style=solid];
m1_96 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=filter];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m1_97 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_102  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_96  [key=0, style=solid];
m1_100 -> m1_96  [key=0, style=solid];
m1_100 -> m1_103  [key=2, style=dotted];
m1_101 -> m1_54  [key=0, style=bold, color=blue];
m1_57 -> m1_109  [key=0, style=solid];
m1_57 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_57 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_57 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m1_57 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m1_57 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m1_57 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m1_57 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m1_57 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m1_57 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m1_57 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m1_57 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m1_57 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_115  [key=0, style=solid];
m1_109 -> m1_123  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_113  [key=0, style=solid];
m1_110 -> m1_124  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_113  [key=0, style=solid];
m1_112 -> m1_111  [key=0, style=solid];
m1_112 -> m1_125  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_115  [key=0, style=solid];
m1_114 -> m1_113  [key=0, style=solid];
m1_114 -> m1_126  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_119  [key=0, style=solid];
m1_115 -> m1_124  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_127  [key=2, style=dotted];
m1_116 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_119  [key=0, style=solid];
m1_118 -> m1_117  [key=0, style=solid];
m1_118 -> m1_128  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_129  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=0, style=solid];
m1_121 -> m1_120  [key=0, style=solid];
m1_121 -> m1_130  [key=2, style=dotted];
m1_122 -> m1_57  [key=0, style=bold, color=blue];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m1_63 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_63 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_63 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m1_63 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_63 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m1_63 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [key=0, style=solid];
m1_64 -> m1_87  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_88  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_89  [key=2, style=dotted];
m1_69 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m1_69 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_75  [key=0, style=solid];
m1_73 -> m1_90  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_52  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_53  [key=2, style=dotted];
m1_78 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_53  [key=2, style=dotted];
m1_82 -> m1_52  [key=2, style=dotted];
m1_82 -> m1_93  [key=2, style=dotted];
m1_82 -> m1_94  [key=2, style=dotted];
m1_65 -> m1_86  [key=0, style=solid];
m1_65 -> n5  [key=2, style=dotted];
m1_67 -> m1_86  [key=0, style=solid];
m1_67 -> n5  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m1_72 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_91  [key=2, style=dotted];
m1_75 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label=jobMethod];
m1_71 -> m1_86  [key=0, style=solid];
m1_74 -> m1_86  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_51  [key=2, style=dotted];
m1_76 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m1_76 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_54  [key=2, style=dotted];
m1_80 -> m1_86  [key=0, style=solid];
m1_80 -> m1_92  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_83 -> m1_86  [key=0, style=solid];
m1_83 -> m1_95  [key=2, style=dotted];
m1_83 -> m1_92  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_85 -> m1_86  [key=0, style=solid];
m1_86 -> m1_63  [key=0, style=bold, color=blue];
m1_129 -> m1_135  [key=0, style=solid];
m1_129 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m1_129 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_129 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IAtomicWriteTransaction"];
m1_129 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m1_129 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IAtomicWriteTransaction"];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_144  [key=2, style=dotted];
m1_135 -> m1_127  [key=2, style=dotted];
m1_135 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=properties];
m1_135 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label=properties];
m1_135 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label=properties];
m1_135 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label=properties];
m1_135 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label=properties];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_145  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_140  [key=0, style=solid];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_146  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_145  [key=2, style=dotted];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_148  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label=now];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_147  [key=2, style=dotted];
m1_141 -> m1_145  [key=2, style=dotted];
m1_143 -> m1_129  [key=0, style=bold, color=blue];
m1_51 -> m1_149  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_151  [key=2, style=dotted];
m1_149 -> m1_152  [key=2, style=dotted];
m1_150 -> m1_51  [key=0, style=bold, color=blue];
m1_103 -> m1_131  [key=0, style=solid];
m1_103 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateContext"];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_55  [key=2, style=dotted];
m1_131 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_129  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_59  [key=2, style=dotted];
m1_134 -> m1_103  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>"];
m1_2 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m1_2 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m1_2 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m1_2 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m1_2 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_15  [key=2, style=dotted];
m1_8 -> m1_16  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_4 -> m1_13  [key=0, style=solid];
m1_4 -> n5  [key=2, style=dotted];
m1_6 -> m1_13  [key=0, style=solid];
m1_6 -> n5  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_10 -> m1_9  [key=0, style=solid];
m1_10 -> m1_17  [key=2, style=dotted];
m1_13 -> m1_2  [key=0, style=bold, color=blue];
m1_164 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_164 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m1_165 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m2_98 -> m2_198  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_197  [key=2, style=dotted];
m2_199 -> m2_98  [key=0, style=bold, color=blue];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_31  [key=2, style=dotted];
m2_102 -> m2_40  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_98  [key=2, style=dotted];
m2_103 -> m2_99  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_13  [key=2, style=dotted];
m2_9 -> m2_14  [key=2, style=dotted];
m2_9 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=0, style=solid];
m2_11 -> m2_10  [key=0, style=solid];
m2_11 -> m2_15  [key=2, style=dotted];
m2_12 -> m2_8  [key=0, style=bold, color=blue];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_31  [key=2, style=dotted];
m2_79 -> m2_40  [key=2, style=dotted];
m2_80 -> m2_78  [key=0, style=bold, color=blue];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_181 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_184  [key=0, style=solid];
m2_183 -> m2_187  [key=0, style=solid];
m2_183 -> n5  [key=2, style=dotted];
m2_183 -> m2_7  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_31  [key=2, style=dotted];
m2_186 -> m2_40  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_98  [key=2, style=dotted];
m2_187 -> m2_181  [key=0, style=bold, color=blue];
m2_84 -> m2_85  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_31  [key=2, style=dotted];
m2_85 -> m2_40  [key=2, style=dotted];
m2_86 -> m2_84  [key=0, style=bold, color=blue];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_188 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_191  [key=0, style=solid];
m2_190 -> m2_194  [key=0, style=solid];
m2_190 -> n5  [key=2, style=dotted];
m2_190 -> m2_7  [key=2, style=dotted];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_31  [key=2, style=dotted];
m2_193 -> m2_40  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_108  [key=2, style=dotted];
m2_194 -> m2_188  [key=0, style=bold, color=blue];
m2_197 -> m2_202  [key=0, style=solid];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_204  [key=2, style=dotted];
m2_203 -> m2_197  [key=0, style=bold, color=blue];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_162  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_160 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_163  [key=0, style=solid];
m2_162 -> m2_166  [key=0, style=solid];
m2_162 -> n5  [key=2, style=dotted];
m2_162 -> m2_7  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_31  [key=2, style=dotted];
m2_165 -> m2_38  [key=2, style=dotted];
m2_165 -> m2_40  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_98  [key=2, style=dotted];
m2_166 -> m2_160  [key=0, style=bold, color=blue];
m2_128 -> m2_200  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_197  [key=2, style=dotted];
m2_201 -> m2_128  [key=0, style=bold, color=blue];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_50  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_31  [key=2, style=dotted];
m2_50 -> m2_39  [key=2, style=dotted];
m2_50 -> m2_52  [key=2, style=dotted];
m2_50 -> m2_53  [key=2, style=dotted];
m2_50 -> m2_54  [key=2, style=dotted];
m2_50 -> m2_55  [key=2, style=dotted];
m2_50 -> m2_40  [key=2, style=dotted];
m2_51 -> m2_48  [key=0, style=bold, color=blue];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_167 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_170  [key=0, style=solid];
m2_169 -> m2_173  [key=0, style=solid];
m2_169 -> n5  [key=2, style=dotted];
m2_169 -> m2_7  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_31  [key=2, style=dotted];
m2_172 -> m2_38  [key=2, style=dotted];
m2_172 -> m2_40  [key=2, style=dotted];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_108  [key=2, style=dotted];
m2_173 -> m2_167  [key=0, style=bold, color=blue];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_31  [key=2, style=dotted];
m2_58 -> m2_39  [key=2, style=dotted];
m2_58 -> m2_52  [key=2, style=dotted];
m2_58 -> m2_53  [key=2, style=dotted];
m2_58 -> m2_54  [key=2, style=dotted];
m2_58 -> m2_55  [key=2, style=dotted];
m2_58 -> m2_40  [key=2, style=dotted];
m2_59 -> m2_56  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_31  [key=2, style=dotted];
m2_88 -> m2_38  [key=2, style=dotted];
m2_88 -> m2_40  [key=2, style=dotted];
m2_89 -> m2_87  [key=0, style=bold, color=blue];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_146 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_149  [key=0, style=solid];
m2_148 -> m2_152  [key=0, style=solid];
m2_148 -> n5  [key=2, style=dotted];
m2_148 -> m2_7  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_31  [key=2, style=dotted];
m2_151 -> m2_40  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_98  [key=2, style=dotted];
m2_152 -> m2_146  [key=0, style=bold, color=blue];
m2_90 -> m2_91  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=2, style=dotted];
m2_92 -> m2_90  [key=0, style=bold, color=blue];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_108  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_31  [key=2, style=dotted];
m2_106 -> m2_40  [key=2, style=dotted];
m2_107 -> m2_104  [key=0, style=bold, color=blue];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_60 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_67  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_44  [key=2, style=dotted];
m2_63 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_68  [key=2, style=dotted];
m2_62 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m2_62 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=0, style=solid];
m2_64 -> m2_69  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_44  [key=2, style=dotted];
m2_65 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_66 -> m2_60  [key=0, style=bold, color=blue];
m2_81 -> m2_82  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_31  [key=2, style=dotted];
m2_82 -> m2_38  [key=2, style=dotted];
m2_82 -> m2_40  [key=2, style=dotted];
m2_83 -> m2_81  [key=0, style=bold, color=blue];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_31  [key=2, style=dotted];
m2_96 -> m2_40  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_98  [key=2, style=dotted];
m2_97 -> m2_93  [key=0, style=bold, color=blue];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_118 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m2_118 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m2_118 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m2_118 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_121  [key=0, style=solid];
m2_120 -> m2_127  [key=0, style=solid];
m2_120 -> n5  [key=2, style=dotted];
m2_120 -> m2_7  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_123  [key=0, style=solid];
m2_122 -> m2_127  [key=0, style=solid];
m2_122 -> n5  [key=2, style=dotted];
m2_122 -> m2_7  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_127  [key=0, style=solid];
m2_126 -> m2_125  [key=0, style=solid];
m2_126 -> m2_31  [key=2, style=dotted];
m2_126 -> m2_40  [key=2, style=dotted];
m2_126 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=pair];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=sql];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_128  [key=2, style=dotted];
m2_127 -> m2_118  [key=0, style=bold, color=blue];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_129 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_132  [key=0, style=solid];
m2_131 -> m2_135  [key=0, style=solid];
m2_131 -> n5  [key=2, style=dotted];
m2_131 -> m2_7  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_31  [key=2, style=dotted];
m2_134 -> m2_40  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_128  [key=2, style=dotted];
m2_135 -> m2_129  [key=0, style=bold, color=blue];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_31  [key=2, style=dotted];
m2_46 -> m2_39  [key=2, style=dotted];
m2_46 -> m2_40  [key=2, style=dotted];
m2_47 -> m2_45  [key=0, style=bold, color=blue];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_153 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_156  [key=0, style=solid];
m2_155 -> m2_159  [key=0, style=solid];
m2_155 -> n5  [key=2, style=dotted];
m2_155 -> m2_7  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_31  [key=2, style=dotted];
m2_158 -> m2_38  [key=2, style=dotted];
m2_158 -> m2_40  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_128  [key=2, style=dotted];
m2_159 -> m2_153  [key=0, style=bold, color=blue];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [key=2, style=dotted];
m2_41 -> m2_44  [key=2, style=dotted];
m2_42 -> m2_40  [key=0, style=bold, color=blue];
m2_35 -> m2_36  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_31  [key=2, style=dotted];
m2_36 -> m2_38  [key=2, style=dotted];
m2_36 -> m2_39  [key=2, style=dotted];
m2_36 -> m2_40  [key=2, style=dotted];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m2_16 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=DbTransaction];
m2_16 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_30  [key=2, style=dotted];
m2_17 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m2_17 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m2_17 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m2_17 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m2_17 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m2_17 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m2_17 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_28 -> m2_27  [key=0, style=solid];
m2_28 -> m2_34  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=0, style=solid];
m2_19 -> m2_18  [key=0, style=solid];
m2_19 -> m2_31  [key=2, style=dotted];
m2_19 -> m2_32  [key=2, style=dotted];
m2_21 -> m2_20  [key=0, style=solid];
m2_21 -> m2_32  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_33  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_29 -> m2_16  [key=0, style=bold, color=blue];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_73  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_72 -> m2_70  [key=0, style=bold, color=blue];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_77  [key=2, style=dotted];
m2_76 -> m2_74  [key=0, style=bold, color=blue];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_136 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m2_136 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m2_136 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m2_136 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [key=0, style=solid];
m2_138 -> m2_145  [key=0, style=solid];
m2_138 -> n5  [key=2, style=dotted];
m2_138 -> m2_7  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_141  [key=0, style=solid];
m2_140 -> m2_145  [key=0, style=solid];
m2_140 -> n5  [key=2, style=dotted];
m2_140 -> m2_7  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_145  [key=0, style=solid];
m2_144 -> m2_143  [key=0, style=solid];
m2_144 -> m2_31  [key=2, style=dotted];
m2_144 -> m2_40  [key=2, style=dotted];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_98  [key=2, style=dotted];
m2_145 -> m2_136  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m2_0 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="System.Func<DbConnection>"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=0, style=solid];
m2_2 -> n5  [key=2, style=dotted];
m2_2 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_108  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_31  [key=2, style=dotted];
m2_111 -> m2_40  [key=2, style=dotted];
m2_112 -> m2_109  [key=0, style=bold, color=blue];
m2_108 -> m2_195  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_197  [key=2, style=dotted];
m2_196 -> m2_108  [key=0, style=bold, color=blue];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_174 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_177  [key=0, style=solid];
m2_176 -> m2_180  [key=0, style=solid];
m2_176 -> n5  [key=2, style=dotted];
m2_176 -> m2_7  [key=2, style=dotted];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_31  [key=2, style=dotted];
m2_179 -> m2_40  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_128  [key=2, style=dotted];
m2_180 -> m2_174  [key=0, style=bold, color=blue];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_31  [key=2, style=dotted];
m2_116 -> m2_40  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_108  [key=2, style=dotted];
m2_117 -> m2_113  [key=0, style=bold, color=blue];
m2_205 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_200  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_205 -> m2_202  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_206 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_207 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_208 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [key=2, style=dotted];
m3_5 -> m3_2  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_7 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint"];
m5_229 -> m5_230  [key=0, style=solid];
m5_230 -> m5_231  [key=0, style=solid];
m5_231 -> m5_229  [key=0, style=bold, color=blue];
m5_157 -> m5_158  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_36  [key=0, style=bold, color=crimson];
m5_34 -> m5_24  [key=2, style=dotted];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_38  [key=2, style=dotted];
m5_35 -> m5_25  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_39  [key=2, style=dotted];
m5_36 -> m5_26  [key=2, style=dotted];
m5_37 -> m5_34  [key=0, style=bold, color=blue];
m5_37 -> m5_31  [key=0, style=bold, color=blue];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection, DbTransaction>"];
m5_96 -> m5_26  [key=2, style=dotted];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_99  [key=2, style=dotted];
m5_97 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_97 -> m5_91  [key=0, style=bold, color=blue];
m5_98 -> m5_96  [key=0, style=bold, color=blue];
m5_98 -> m5_99  [key=0, style=solid, color=red];
m5_98 -> m5_69  [key=0, style=solid, color=green];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m5_17 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m5_17 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m5_17 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m5_17 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_23  [key=2, style=dotted];
m5_18 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_18 -> m5_20  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_24  [key=2, style=dotted];
m5_19 -> m5_11  [key=2, style=dotted];
m5_19 -> m5_12  [key=2, style=dotted];
m5_19 -> m5_25  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_25  [key=2, style=dotted];
m5_20 -> m5_22  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_26  [key=2, style=dotted];
m5_21 -> m5_11  [key=2, style=dotted];
m5_21 -> m5_12  [key=2, style=dotted];
m5_21 -> m5_25  [key=0, style=solid];
m5_22 -> m5_16  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid, color=green];
m5_24 -> m5_251  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid, color=green];
m5_24 -> m5_14  [key=2, style=dotted, color=green];
m5_251 -> m5_252  [key=0, style=solid];
m5_251 -> m5_253  [key=2, style=dotted];
m5_252 -> m5_24  [key=0, style=bold, color=blue];
m5_99 -> m5_105  [key=0, style=solid];
m5_99 -> m5_109  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m5_99 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label="System.Func<DbConnection, DbTransaction, T>"];
m5_99 -> m5_100  [key=0, style=solid, color=red];
m5_99 -> m5_101  [key=2, style=dotted, color=red];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_107  [key=2, style=dotted];
m5_105 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_105 -> m5_24  [key=2, style=dotted];
m5_106 -> m5_99  [key=0, style=bold, color=blue];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_25  [key=2, style=dotted];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_23  [key=2, style=dotted];
m5_104 -> m5_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_40 -> m5_42  [key=1, style=dashed, color=green, label="Hangfire.Logging.ILog"];
m5_40 -> m5_41  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid, color=green];
m5_42 -> m5_44  [key=2, style=dotted, color=green];
m5_42 -> m5_217  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid, color=green];
m5_41 -> m5_44  [key=2, style=dotted];
m5_41 -> m5_39  [key=0, style=bold, color=blue];
m5_43 -> m5_40  [key=0, style=bold, color=blue];
m5_43 -> m5_44  [key=0, style=solid];
m5_123 -> m5_124  [key=0, style=solid];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_26  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid, color=green];
m5_81 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection>"];
m5_82 -> m5_83  [key=0, style=solid, color=green];
m5_82 -> m5_84  [key=2, style=dotted, color=green];
m5_82 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m5_82 -> m5_90  [key=2, style=dotted];
m5_83 -> m5_81  [key=0, style=bold, color=blue];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label=type];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_108  [key=0, style=bold, color=blue];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_120  [key=2, style=dotted];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_121  [key=2, style=dotted];
m5_115 -> m5_122  [key=2, style=dotted];
m5_115 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_23  [key=2, style=dotted];
m5_116 -> m5_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_24  [key=2, style=dotted];
m5_117 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_117 -> m5_122  [key=2, style=dotted];
m5_117 -> m5_119  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_117 -> m5_120  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_10  [key=2, style=dotted];
m5_118 -> m5_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_118 -> m5_120  [key=0, style=solid];
m5_119 -> m5_113  [key=0, style=bold, color=blue];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_123  [key=2, style=dotted];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> n48  [key=2, style=dotted];
m5_164 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_186 -> m5_248  [key=0, style=solid];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_250  [key=2, style=dotted];
m5_249 -> m5_186  [key=0, style=bold, color=blue];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> n48  [key=2, style=dotted];
m5_45 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_47 -> m5_48  [key=0, style=solid, color=green];
m5_47 -> m5_61  [key=2, style=dotted, color=green];
m5_47 -> m5_62  [key=2, style=dotted, color=green];
m5_47 -> m5_63  [key=2, style=dotted, color=green];
m5_47 -> m5_98  [key=1, style=dashed, color=green, label="lambda expression"];
m5_47 -> m5_71  [key=1, style=dashed, color=green, label="lambda expression"];
m5_47 -> m5_75  [key=1, style=dashed, color=green, label="lambda expression"];
m5_47 -> m5_78  [key=1, style=dashed, color=green, label="lambda expression"];
m5_47 -> m5_50  [key=1, style=dashed, color=green, label=parts];
m5_47 -> m5_51  [key=1, style=dashed, color=green, label=parts];
m5_47 -> m5_55  [key=1, style=dashed, color=green, label=parts];
m5_47 -> m5_56  [key=1, style=dashed, color=green, label=parts];
m5_47 -> m5_25  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid, color=green];
m5_46 -> m5_57  [key=1, style=dashed, color=green, label=canNotParseMessage];
m5_46 -> m5_59  [key=1, style=dashed, color=green, label=canNotParseMessage];
m5_46 -> m5_24  [key=2, style=dotted];
m5_48 -> m5_57  [key=1, style=dashed, color=green, label=builder];
m5_48 -> m5_49  [key=0, style=solid, color=green];
m5_48 -> m5_64  [key=2, style=dotted, color=green];
m5_48 -> m5_51  [key=1, style=dashed, color=green, label=builder];
m5_48 -> m5_52  [key=1, style=dashed, color=green, label=builder];
m5_48 -> m5_53  [key=1, style=dashed, color=green, label=builder];
m5_48 -> m5_56  [key=1, style=dashed, color=green, label=builder];
m5_48 -> m5_26  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid, color=green];
m5_50 -> m5_49  [key=0, style=solid, color=green];
m5_50 -> m5_65  [key=2, style=dotted, color=green];
m5_51 -> m5_52  [key=0, style=solid, color=green];
m5_51 -> m5_66  [key=2, style=dotted, color=green];
m5_51 -> m5_53  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid, color=green];
m5_55 -> m5_54  [key=0, style=solid, color=green];
m5_55 -> m5_65  [key=2, style=dotted, color=green];
m5_56 -> m5_57  [key=0, style=solid, color=green];
m5_56 -> m5_66  [key=2, style=dotted, color=green];
m5_56 -> m5_23  [key=2, style=dotted];
m5_56 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_57 -> m5_60  [key=0, style=solid, color=green];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_24  [key=2, style=dotted];
m5_54 -> m5_57  [key=0, style=solid, color=green];
m5_54 -> m5_55  [key=0, style=solid, color=green];
m5_54 -> m5_56  [key=1, style=dashed, color=green, label=alias];
m5_59 -> m5_60  [key=0, style=solid, color=green];
m5_59 -> m5_26  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid, color=green];
m5_58 -> m5_25  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid, color=green];
m5_49 -> m5_51  [key=1, style=dashed, color=green, label=alias];
m5_49 -> m5_52  [key=0, style=solid, color=green];
m5_49 -> m5_43  [key=0, style=bold, color=blue];
m5_52 -> m5_53  [key=0, style=solid, color=green];
m5_52 -> m5_54  [key=0, style=solid, color=green];
m5_52 -> m5_50  [key=0, style=bold, color=blue];
m5_53 -> m5_54  [key=0, style=solid, color=green];
m5_53 -> m5_67  [key=2, style=dotted, color=green];
m5_53 -> m5_219  [key=0, style=solid];
m5_60 -> m5_45  [key=0, style=bold, color=blue];
m5_60 -> m5_54  [key=0, style=bold, color=blue];
m5_101 -> m5_239  [key=0, style=solid];
m5_101 -> m5_240  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_104  [key=2, style=dotted];
m5_239 -> m5_240  [key=0, style=solid];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_11  [key=2, style=dotted];
m5_241 -> m5_101  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid, color=green];
m5_5 -> m5_7  [key=0, style=solid, color=green];
m5_65 -> m5_66  [key=0, style=solid];
m5_199 -> m5_236  [key=0, style=solid];
m5_236 -> m5_237  [key=0, style=solid];
m5_236 -> m5_238  [key=2, style=dotted];
m5_237 -> m5_199  [key=0, style=bold, color=blue];
m5_207 -> m5_208  [key=0, style=solid];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> n48  [key=2, style=dotted];
m5_208 -> m5_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_209 -> m5_210  [key=0, style=solid];
m5_209 -> m5_24  [key=2, style=dotted];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_25  [key=2, style=dotted];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_11  [key=2, style=dotted];
m5_212 -> m5_207  [key=0, style=bold, color=blue];
m5_146 -> m5_147  [key=0, style=solid];
m5_30 -> m5_242  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_242 -> m5_243  [key=0, style=solid];
m5_243 -> m5_30  [key=0, style=bold, color=blue];
m5_172 -> m5_224  [key=0, style=solid];
m5_172 -> m5_173  [key=0, style=solid];
m5_224 -> m5_225  [key=0, style=solid];
m5_225 -> m5_172  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid, color=green];
m5_25 -> m5_17  [key=0, style=bold, color=blue];
m5_78 -> m5_79  [key=0, style=solid, color=green];
m5_66 -> m5_67  [key=0, style=solid];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_7  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_24  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_42  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_47  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_82  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_176 -> m5_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_23  [key=2, style=dotted];
m5_177 -> m5_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_177 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection>"];
m5_178 -> m5_179  [key=0, style=solid];
m5_178 -> m5_24  [key=2, style=dotted];
m5_178 -> m5_188  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_178 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection, DbTransaction>"];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_10  [key=2, style=dotted];
m5_179 -> m5_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_179 -> m5_181  [key=1, style=dashed, color=darkseagreen4, label=thrownException];
m5_179 -> m5_109  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m5_180 -> m5_181  [key=0, style=solid];
m5_180 -> m5_10  [key=2, style=dotted];
m5_180 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label="System.Func<DbConnection, DbTransaction, T>"];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_11  [key=2, style=dotted];
m5_182 -> m5_176  [key=0, style=bold, color=blue];
m5_190 -> m5_191  [key=0, style=solid];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_23  [key=2, style=dotted];
m5_191 -> m5_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_121  [key=2, style=dotted];
m5_192 -> m5_10  [key=2, style=dotted];
m5_192 -> m5_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_24  [key=2, style=dotted];
m5_193 -> m5_205  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_10  [key=2, style=dotted];
m5_194 -> m5_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_195 -> m5_190  [key=0, style=bold, color=blue];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_25  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_33  [key=2, style=dotted];
m5_32 -> m5_30  [key=0, style=bold, color=blue];
m5_32 -> m5_33  [key=0, style=solid];
m5_221 -> m5_222  [key=0, style=solid];
m5_222 -> m5_223  [key=0, style=solid];
m5_223 -> m5_221  [key=0, style=bold, color=blue];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_76  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_77  [key=2, style=dotted];
m5_68 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=type];
m5_69 -> m5_100  [key=0, style=solid, color=green];
m5_69 -> m5_61  [key=2, style=dotted, color=green];
m5_71 -> m5_72  [key=0, style=solid, color=green];
m5_71 -> m5_79  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_78  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid, color=green];
m5_72 -> m5_24  [key=2, style=dotted];
m5_72 -> m5_74  [key=2, style=dotted, color=green];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_25  [key=2, style=dotted];
m5_73 -> m5_71  [key=0, style=bold, color=blue];
m5_75 -> m5_65  [key=0, style=bold, color=blue];
m5_75 -> m5_76  [key=0, style=solid, color=green];
m5_219 -> m5_220  [key=0, style=solid];
m5_220 -> m5_53  [key=0, style=bold, color=blue];
m5_145 -> m5_143  [key=0, style=bold, color=blue];
m5_132 -> m5_130  [key=0, style=bold, color=blue];
m5_29 -> m5_27  [key=0, style=bold, color=blue];
m5_61 -> m5_62  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_100  [key=0, style=bold, color=blue];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_26  [key=2, style=dotted];
m5_108 -> m5_102  [key=0, style=bold, color=blue];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_24  [key=2, style=dotted];
m5_165 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=2, style=dotted];
m5_13 -> m5_147  [key=0, style=solid];
m5_14 -> m5_12  [key=0, style=bold, color=blue];
m5_14 -> m5_133  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=2, style=dotted];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_30  [key=2, style=dotted];
m5_28 -> m5_26  [key=0, style=bold, color=blue];
m5_39 -> m5_40  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_64  [key=2, style=dotted];
m5_63 -> m5_61  [key=0, style=bold, color=blue];
m5_100 -> m5_98  [key=0, style=bold, color=blue];
m5_100 -> m5_101  [key=0, style=solid];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_114  [key=2, style=dotted];
m5_109 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_112  [key=2, style=dotted];
m5_110 -> m5_115  [key=2, style=dotted];
m5_111 -> m5_109  [key=0, style=bold, color=blue];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_116  [key=2, style=dotted];
m5_127 -> m5_128  [key=0, style=solid];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_25  [key=2, style=dotted];
m5_131 -> m5_128  [key=0, style=bold, color=blue];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_132  [key=2, style=dotted];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_10  [key=2, style=dotted];
m5_124 -> m5_126  [key=2, style=dotted];
m5_125 -> m5_123  [key=0, style=bold, color=blue];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_127  [key=2, style=dotted];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_42  [key=2, style=dotted];
m5_128 -> m5_130  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m5_129 -> m5_127  [key=0, style=bold, color=blue];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_131  [key=0, style=solid];
m5_129 -> m5_124  [key=2, style=dotted];
m5_140 -> m5_141  [key=0, style=solid];
m5_140 -> m5_138  [key=0, style=bold, color=blue];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_146  [key=2, style=dotted];
m5_147 -> m5_148  [key=0, style=solid];
m5_147 -> m5_25  [key=2, style=dotted];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_10  [key=2, style=dotted];
m5_141 -> m5_126  [key=2, style=dotted];
m5_142 -> m5_140  [key=0, style=bold, color=blue];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_145  [key=2, style=dotted];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_42  [key=2, style=dotted];
m5_144 -> m5_137  [key=0, style=bold, color=blue];
m5_148 -> m5_146  [key=0, style=bold, color=blue];
m5_148 -> m5_13  [key=0, style=bold, color=blue];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_25  [key=2, style=dotted];
m5_160 -> m5_156  [key=0, style=bold, color=blue];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_163  [key=2, style=dotted];
m5_159 -> m5_164  [key=2, style=dotted];
m5_161 -> m5_159  [key=0, style=bold, color=blue];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_84  [key=2, style=dotted];
m5_169 -> m5_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_25  [key=2, style=dotted];
m5_174 -> m5_163  [key=2, style=dotted];
m5_174 -> m5_164  [key=2, style=dotted];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> m5_161  [key=2, style=dotted];
m5_173 -> m5_162  [key=2, style=dotted];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_172  [key=2, style=dotted];
m5_170 -> m5_165  [key=0, style=bold, color=blue];
m5_171 -> m5_169  [key=0, style=bold, color=blue];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_173  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m5_175 -> m5_173  [key=0, style=bold, color=blue];
m5_175 -> m5_171  [key=0, style=bold, color=blue];
m5_183 -> m5_184  [key=0, style=solid];
m5_188 -> m5_189  [key=0, style=solid];
m5_188 -> m5_25  [key=2, style=dotted];
m5_187 -> m5_188  [key=0, style=solid];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_186  [key=2, style=dotted];
m5_185 -> m5_183  [key=0, style=bold, color=blue];
m5_189 -> m5_187  [key=0, style=bold, color=blue];
m5_196 -> m5_197  [key=0, style=solid];
m5_200 -> m5_201  [key=0, style=solid];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_25  [key=2, style=dotted];
m5_204 -> m5_205  [key=0, style=solid];
m5_197 -> m5_198  [key=0, style=solid];
m5_197 -> m5_199  [key=2, style=dotted];
m5_198 -> m5_196  [key=0, style=bold, color=blue];
m5_201 -> m5_202  [key=0, style=solid];
m5_201 -> m5_203  [key=2, style=dotted];
m5_202 -> m5_200  [key=0, style=bold, color=blue];
m5_206 -> m5_204  [key=0, style=bold, color=blue];
m5_213 -> m5_214  [key=0, style=solid];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_216  [key=2, style=dotted];
m5_215 -> m5_213  [key=0, style=bold, color=blue];
m5_76 -> m5_77  [key=0, style=solid, color=green];
m5_77 -> m5_75  [key=0, style=bold, color=blue];
m5_80 -> m5_78  [key=0, style=bold, color=blue];
m5_80 -> m5_81  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_79  [key=2, style=dotted];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_141  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_89  [key=2, style=dotted];
m5_86 -> m5_24  [key=2, style=dotted];
m5_153 -> m5_84  [key=2, style=dotted];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_153 -> m5_24  [key=2, style=dotted];
m5_153 -> m5_160  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_88 -> m5_85  [key=0, style=bold, color=blue];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_26  [key=2, style=dotted];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_133  [key=0, style=bold, color=blue];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_25  [key=2, style=dotted];
m5_150 -> m5_153  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label=type];
m5_151 -> m5_153  [key=0, style=solid];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_78  [key=2, style=dotted];
m5_154 -> m5_149  [key=0, style=bold, color=blue];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_10  [key=2, style=dotted];
m5_154 -> m5_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_158  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m5_156 -> m5_149  [key=0, style=bold, color=blue];
m5_166 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m5_166 -> m5_167  [key=0, style=solid];
m5_166 -> m5_10  [key=2, style=dotted];
m5_166 -> m5_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_167 -> m5_169  [key=0, style=solid];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_26  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_152 -> m5_154  [key=0, style=solid];
m5_152 -> m5_155  [key=2, style=dotted];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_157  [key=2, style=dotted];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_161  [key=2, style=dotted];
m5_158 -> m5_162  [key=2, style=dotted];
m5_168 -> m5_170  [key=0, style=solid];
m5_168 -> m5_155  [key=2, style=dotted];
m5_168 -> m5_162  [key=0, style=bold, color=blue];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_232  [key=0, style=solid];
m5_112 -> m5_233  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_112 -> m5_104  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] argument"];
m5_4 -> m5_10  [key=0, style=solid];
m5_4 -> m5_11  [key=2, style=dotted];
m5_4 -> m5_12  [key=2, style=dotted];
m5_2 -> m5_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m5_2 -> m5_6  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m5_2 -> m5_7  [key=1, style=dashed, color=green, label=string];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_2 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m5_3 -> m5_5  [key=0, style=solid, color=green];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_6 -> m5_10  [key=0, style=solid, color=green];
m5_6 -> m5_11  [key=2, style=dotted, color=green];
m5_6 -> m5_12  [key=2, style=dotted, color=green];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid, color=red];
m5_7 -> m5_13  [key=2, style=dotted, color=green];
m5_7 -> m5_10  [key=2, style=dotted];
m5_7 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_8 -> m5_9  [key=0, style=solid, color=red];
m5_8 -> m5_11  [key=2, style=dotted, color=red];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_14  [key=2, style=dotted];
m5_9 -> m5_6  [key=0, style=bold, color=blue];
m5_10 -> m5_2  [key=0, style=bold, color=blue];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> n48  [key=2, style=dotted];
m5_33 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_78  [key=2, style=dotted];
m5_84 -> m5_90  [key=0, style=solid];
m5_84 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m5_84 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label="System.Func<DbConnection, T>"];
m5_89 -> m5_80  [key=0, style=bold, color=blue];
m5_90 -> m5_91  [key=0, style=solid];
m5_162 -> m5_163  [key=0, style=solid];
m5_163 -> m5_164  [key=0, style=solid];
m5_120 -> m5_121  [key=0, style=solid];
m5_64 -> m5_244  [key=0, style=solid];
m5_64 -> m5_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_64 -> m5_246  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_64 -> m5_56  [key=3, color=darkorchid, style=bold, label="Parameter variable int intArg"];
m5_244 -> m5_245  [key=0, style=solid];
m5_245 -> m5_246  [key=0, style=solid];
m5_245 -> m5_11  [key=2, style=dotted];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_11  [key=2, style=dotted];
m5_247 -> m5_64  [key=0, style=bold, color=blue];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_94  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid, color=red];
m5_92 -> m5_95  [key=2, style=dotted];
m5_93 -> m5_84  [key=0, style=bold, color=blue];
m5_93 -> m5_94  [key=0, style=solid, color=red];
m5_93 -> m5_23  [key=2, style=dotted, color=red];
m5_93 -> m5_98  [key=1, style=dashed, color=red, label="lambda expression"];
m5_226 -> m5_227  [key=0, style=solid];
m5_227 -> m5_228  [key=0, style=solid];
m5_227 -> m5_120  [key=2, style=dotted];
m5_228 -> m5_226  [key=0, style=bold, color=blue];
m5_217 -> m5_218  [key=0, style=solid];
m5_218 -> m5_42  [key=0, style=bold, color=blue];
m5_44 -> m5_45  [key=0, style=solid];
m5_121 -> m5_94  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=red];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_1 -> m5_4  [key=2, style=dotted, color=red];
m5_137 -> m5_142  [key=0, style=solid];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_10  [key=2, style=dotted];
m5_137 -> m5_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_94 -> m5_117  [key=0, style=solid];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_24  [key=2, style=dotted];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_135  [key=0, style=solid];
m5_134 -> m5_81  [key=2, style=dotted];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_134 -> m5_121  [key=2, style=dotted];
m5_134 -> m5_139  [key=2, style=dotted];
m5_134 -> m5_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_137  [key=2, style=dotted];
m5_135 -> m5_23  [key=2, style=dotted];
m5_135 -> m5_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_136 -> m5_14  [key=0, style=bold, color=blue];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_24  [key=2, style=dotted];
m5_136 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_126 -> m5_124  [key=0, style=bold, color=blue];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_158  [key=2, style=dotted];
m5_232 -> m5_233  [key=0, style=solid];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_235  [key=2, style=dotted];
m5_234 -> m5_112  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid];
m5_254 -> m5_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_93  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_99  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_205  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_208  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_254 -> m5_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m5_255 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_256 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_257 -> m5_160  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_258 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_259 -> m5_188  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_260 -> m5_205  [key=1, style=dashed, color=darkseagreen4, label=process];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m7_0 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_6  [key=2, style=dotted];
m7_3 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_2 -> m7_4  [key=0, style=solid];
m7_2 -> n5  [key=2, style=dotted];
m7_4 -> m7_0  [key=0, style=bold, color=blue];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_10  [key=2, style=dotted];
m7_9 -> m7_7  [key=0, style=bold, color=blue];
m7_11 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_4  [key=2, style=dotted];
m8_8 -> m8_6  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_4  [key=0, style=bold, color=blue];
m8_9 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.GenericHandler"];
m8_9 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.GenericHandler"];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Func<TIn, TOut>>"];
m11_2 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Func<TIn, TOut>>"];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_0  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_8  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_9  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_2  [key=0, style=bold, color=blue];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_13  [key=2, style=dotted];
m11_11 -> m11_14  [key=2, style=dotted];
m11_11 -> m11_15  [key=2, style=dotted];
m11_12 -> m11_10  [key=0, style=bold, color=blue];
m11_16 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>"];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_1 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=2, style=dotted];
m13_5 -> m13_8  [key=2, style=dotted];
m13_5 -> m13_9  [key=2, style=dotted];
m13_6 -> m13_4  [key=0, style=bold, color=blue];
m14_6 -> m14_7  [key=0, style=solid, color=green];
m14_7 -> m14_7  [key=1, style=dashed, color=green, label=filterAttribute];
m14_7 -> m14_8  [key=0, style=solid, color=green];
m14_8 -> m14_6  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid, color=green];
m14_1 -> m14_2  [key=0, style=solid, color=green];
m14_1 -> m14_4  [key=2, style=dotted, color=green];
m14_2 -> m14_3  [key=0, style=solid, color=green];
m14_2 -> m14_5  [key=2, style=dotted, color=green];
m14_2 -> m14_6  [key=1, style=dashed, color=green, label="lambda expression"];
m14_2 -> m14_7  [key=1, style=dashed, color=green, label=filterAttribute];
m14_3 -> m14_0  [key=0, style=bold, color=blue];
m14_9 -> m14_7  [key=1, style=dashed, color=green, label=filterAttribute];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_6  [key=2, style=dotted];
m15_5 -> m15_2  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m15_7 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint"];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_8  [key=2, style=dotted];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_24  [key=2, style=dotted];
m16_23 -> m16_20  [key=0, style=bold, color=blue];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_8  [key=2, style=dotted];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_49  [key=2, style=dotted];
m16_48 -> m16_45  [key=0, style=bold, color=blue];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_8  [key=2, style=dotted];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_39  [key=2, style=dotted];
m16_38 -> m16_35  [key=0, style=bold, color=blue];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_8  [key=2, style=dotted];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_64  [key=2, style=dotted];
m16_63 -> m16_60  [key=0, style=bold, color=blue];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_8  [key=2, style=dotted];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_59  [key=2, style=dotted];
m16_58 -> m16_55  [key=0, style=bold, color=blue];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_8  [key=2, style=dotted];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_34  [key=2, style=dotted];
m16_33 -> m16_30  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_2 -> m16_0  [key=0, style=bold, color=blue];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_8  [key=2, style=dotted];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_54  [key=2, style=dotted];
m16_53 -> m16_50  [key=0, style=bold, color=blue];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_8  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_44  [key=2, style=dotted];
m16_43 -> m16_40  [key=0, style=bold, color=blue];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_17  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_8  [key=2, style=dotted];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_19  [key=2, style=dotted];
m16_18 -> m16_15  [key=0, style=bold, color=blue];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_8  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_9  [key=2, style=dotted];
m16_7 -> m16_4  [key=0, style=bold, color=blue];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_8  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_14  [key=2, style=dotted];
m16_13 -> m16_10  [key=0, style=bold, color=blue];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_27  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_8  [key=2, style=dotted];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_29  [key=2, style=dotted];
m16_28 -> m16_25  [key=0, style=bold, color=blue];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_13  [key=2, style=dotted];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_14  [key=2, style=dotted];
m17_12 -> m17_9  [key=0, style=bold, color=blue];
m17_3 -> m17_4  [key=0, style=solid];
m17_4 -> m17_5  [key=0, style=solid];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_7  [key=2, style=dotted];
m17_5 -> m17_8  [key=2, style=dotted];
m17_6 -> m17_3  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_15 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint"];
m17_15 -> m17_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint"];
m17_15 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint"];
m17_15 -> m17_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint"];
m18_3 -> m18_4  [key=0, style=solid];
m18_4 -> m18_5  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_7  [key=2, style=dotted];
m18_6 -> m18_3  [key=0, style=bold, color=blue];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_12  [key=2, style=dotted];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_13  [key=2, style=dotted];
m18_11 -> m18_8  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_14 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint"];
m18_14 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint"];
m18_14 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint"];
m18_14 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint"];
}
