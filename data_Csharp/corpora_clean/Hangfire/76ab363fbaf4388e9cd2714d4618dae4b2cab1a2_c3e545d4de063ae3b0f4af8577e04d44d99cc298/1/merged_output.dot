digraph  {
n0 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Entry HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
n1 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="transaction.InsertToList(''succeeded'', context.JobId)", span="26-26"];
n2 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="transaction.TrimList(''succeeded'', 0, 99)", span="27-27"];
n4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
n3 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Exit HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
n5 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
n6 [cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Entry HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="30-30"];
n7 [cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="transaction.RemoveFromList(''succeeded'', context.JobId)", span="33-33"];
n8 [cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Exit HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="30-30"];
n9 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45"];
m0_0 [cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs", label="Entry HangFire.Storage.IAtomicWriteTransaction.Commit()", span="12-12"];
m0_1 [cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs", label="Exit HangFire.Storage.IAtomicWriteTransaction.Commit()", span="12-12"];
m3_13 [cluster="Unk.Commit", file="RedisAtomicWriteTransaction.cs", label="Entry Unk.Commit", span=""];
m3_17 [cluster="Unk.Dispose", file="RedisAtomicWriteTransaction.cs", label="Entry Unk.Dispose", span=""];
m3_0 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m3_1 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="_transaction = transaction", span="11-11"];
m3_2 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="var storage = new RedisStoredValues(_transaction)", span="13-13"];
m3_3 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Values = storage", span="15-15"];
m3_4 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Sets = storage", span="16-16"];
m3_5 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Lists = storage", span="17-17"];
m3_6 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Queues = storage", span="18-18"];
m3_7 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Jobs = storage", span="19-19"];
m3_8 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m3_14 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33"];
m3_15 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs", label="_transaction.Dispose()", span="35-35"];
m3_16 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33"];
m3_10 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28"];
m3_11 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs", label="return _transaction.Commit();", span="30-30"];
m3_12 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28"];
m3_9 [cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15"];
m3_18 [file="RedisAtomicWriteTransaction.cs", label="HangFire.Redis.RedisAtomicWriteTransaction", span=""];
m4_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisStoredValues.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisStoredValues.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_12 [cluster="System.Collections.Generic.List<T>.List()", file="RedisStoredValues.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisStoredValues.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_10 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RedisStoredValues.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m4_21 [cluster="System.Collections.Generic.List<T>.ToArray()", file="RedisStoredValues.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m4_14 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisStoredValues.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_15 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="RedisStoredValues.cs", label="Entry HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40"];
m4_18 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="RedisStoredValues.cs", label="11: return _handlers[stateName].ToArray();", span="47-47"];
m4_16 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="RedisStoredValues.cs", label="stateName == null || !_handlers.ContainsKey(stateName)", span="42-42"];
m4_17 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="RedisStoredValues.cs", label="11: return Enumerable.Empty<IStateHandler>();", span="44-44"];
m4_19 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="RedisStoredValues.cs", label="Exit HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40"];
m4_0 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs", label="Entry HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27"];
m4_5 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs", label="!_handlers.ContainsKey(handler.StateName)", span="32-32"];
m4_6 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs", label="_handlers.Add(handler.StateName, new List<IStateHandler>())", span="34-34"];
m4_7 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs", label="_handlers[handler.StateName].Add(handler)", span="37-37"];
m4_3 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs", label="handler.StateName == null", span="30-30"];
m4_1 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs", label="handler == null", span="29-29"];
m4_4 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs", label="throw new ArgumentException(''The StateName property of the given state handler must be non null.'', ''handler'');", span="30-30"];
m4_2 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs", label="throw new ArgumentNullException(''handler'');", span="29-29"];
m4_8 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs", label="Exit HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27"];
m4_20 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="RedisStoredValues.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m4_22 [file="RedisStoredValues.cs", label="HangFire.States.StateHandlerCollection", span=""];
m5_24 [cluster="Unk.>", file="SqlServerFetcher.cs", label="Entry Unk.>", span=""];
m5_29 [cluster="int.ToString()", file="SqlServerFetcher.cs", label="Entry int.ToString()", span="0-0"];
m5_26 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerFetcher.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m5_0 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19"];
m5_1 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs", label="_connection = connection", span="21-21"];
m5_2 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs", label="_queues = queues", span="22-22"];
m5_3 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs", label="Exit HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19"];
m5_27 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerFetcher.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m5_25 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerFetcher.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m5_20 [cluster="Unk.Query", file="SqlServerFetcher.cs", label="Entry Unk.Query", span=""];
m5_28 [cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="SqlServerFetcher.cs", label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23"];
m5_21 [cluster="Unk.SingleOrDefault", file="SqlServerFetcher.cs", label="Entry Unk.SingleOrDefault", span=""];
m5_4 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25"];
m5_12 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="SqlServerFetcher.cs", label="47: queueName = idAndQueue.Queue", span="57-57"];
m5_7 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="var idAndQueue = _connection.Query(@''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt is null\r\nand Queue in @queues'',\r\n                    new { queues = _queues })\r\n                    .SingleOrDefault()", span="33-40"];
m5_11 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="job = _connection.Query<Job>(\r\n                        @''select Id, InvocationData, Arguments from HangFire.Job where Id = @id'',\r\n                        parameters)\r\n                        .SingleOrDefault()", span="52-55"];
m5_13 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="job == null", span="60-60"];
m5_18 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="return new JobPayload(job.Id.ToString(), queueName, invocationData)\r\n            {\r\n                Arguments = job.Arguments\r\n            };", span="71-74"];
m5_6 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="string queueName = null", span="28-28"];
m5_8 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="idAndQueue != null", span="42-42"];
m5_10 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="parameters.Add(''@id'', idAndQueue.JobId, dbType: DbType.Int32)", span="50-50"];
m5_9 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="var parameters = new DynamicParameters()", span="49-49"];
m5_16 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="job == null", span="67-67"];
m5_17 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="69-69"];
m5_5 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="Job job = null", span="27-27"];
m5_14 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="62-62"];
m5_15 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="return null;", span="64-64"];
m5_19 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="Exit HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25"];
m5_22 [cluster="DynamicParameters.cstr", file="SqlServerFetcher.cs", label="Entry DynamicParameters.cstr", span=""];
m5_23 [cluster="Unk.Add", file="SqlServerFetcher.cs", label="Entry Unk.Add", span=""];
m5_30 [file="SqlServerFetcher.cs", label="HangFire.SqlServer.SqlServerFetcher", span=""];
m6_94 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_86 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164"];
m6_87 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="166-168"];
m6_88 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="var result = new List<ServerDto>()", span="170-170"];
m6_89 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label=servers, span="172-172"];
m6_91 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="175-182"];
m6_92 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="return result;", span="185-185"];
m6_90 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="174-174"];
m6_93 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164"];
m6_233 [cluster="System.DateTime.ToString(string)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m6_79 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154"];
m6_80 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="return GetTimelineStats(''succeeded'');", span="156-156"];
m6_81 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154"];
m6_0 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20"];
m6_1 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs", label="_connection = connection", span="22-22"];
m6_2 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs", label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="23-25"];
m6_3 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="27-27"];
m6_4 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20"];
m6_59 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m6_234 [cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_60 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128"];
m6_66 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="130-130"];
m6_67 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs", label="return JobMethod.Deserialize(data);", span="134-134"];
m6_68 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs", label=JobLoadException, span="136-136"];
m6_69 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs", label="return null;", span="138-138"];
m6_70 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128"];
m6_138 [cluster="List<KeyValuePair<string, DequeuedJobDto>>.cstr", file="SqlServerMonitoringApi.cs", label="Entry List<KeyValuePair<string, DequeuedJobDto>>.cstr", span=""];
m6_162 [cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToDictionary", span=""];
m6_71 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m6_78 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m6_119 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerMonitoringApi.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m6_229 [cluster="Unk.ElementAt", file="SqlServerMonitoringApi.cs", label="Entry Unk.ElementAt", span=""];
m6_141 [cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m6_174 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346"];
m6_175 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="return GetNumberOfJobsByStateName(SucceededState.Name);", span="348-348"];
m6_176 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346"];
m6_8 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30"];
m6_9 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="_transaction.Complete()", span="32-32"];
m6_10 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="_transaction.Dispose()", span="33-33"];
m6_11 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="_connection.Dispose()", span="34-34"];
m6_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30"];
m6_50 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110"];
m6_51 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="114-114"];
m6_52 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label=jobs, span="116-116"];
m6_54 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var dto = selector(DeserializeJobMethod(job.InvocationData), stateData)", span="119-119"];
m6_55 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="121-122"];
m6_56 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="return new JobList<TDto>(result);", span="125-125"];
m6_53 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="118-118"];
m6_57 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110"];
m6_62 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m6_43 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m6_129 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m6_102 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m6_22 [cluster="Unk.>", file="SqlServerMonitoringApi.cs", label="Entry Unk.>", span=""];
m6_161 [cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs", label="Entry Unk.SingleOrDefault", span=""];
m6_42 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7"];
m6_83 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159"];
m6_84 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="return GetTimelineStats(''failed'');", span="161-161"];
m6_85 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159"];
m6_177 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351"];
m6_178 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="var stats = new StatisticsDto()", span="353-353"];
m6_179 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=red, community=0, file="SqlServerMonitoringApi.cs", label="27: string sql = @''\r\nselect [State], count(id) as [Count] From HangFire.Job group by [State]\r\nselect count(Id) from HangFire.Server\r\nselect count(distinct Queue) from HangFire.JobQueue\r\nselect IntValue from HangFire.Value where [Key] = 'stats:succeeded'\r\n''", span="355-360"];
m6_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.Name)", span="368-368"];
m6_184 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Failed = getCountIfExists(FailedState.Name)", span="369-369"];
m6_185 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Processing = getCountIfExists(ProcessingState.Name)", span="370-370"];
m6_186 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.Name)", span="371-371"];
m6_187 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Servers = multi.Read<int>().Single()", span="373-373"];
m6_188 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Queues = multi.Read<int>().Single()", span="374-374"];
m6_189 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=red, community=0, file="SqlServerMonitoringApi.cs", label="28: stats.Succeeded = multi.Read<int>().SingleOrDefault()", span="376-376"];
m6_190 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="return stats;", span="379-379"];
m6_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="var multi = _connection.QueryMultiple(sql)", span="362-362"];
m6_181 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="364-364"];
m6_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366"];
m6_191 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351"];
m6_63 [cluster="int.ToString()", file="SqlServerMonitoringApi.cs", label="Entry int.ToString()", span="0-0"];
m6_103 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56"];
m6_192 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2"];
m6_194 [cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_27 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="60-60"];
m6_28 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="return GetNumberOfJobsByStateName(FailedState.Name);", span="62-62"];
m6_29 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="60-60"];
m6_95 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5"];
m6_226 [cluster="Unk.Query", file="SqlServerMonitoringApi.cs", label="Entry Unk.Query", span=""];
m6_142 [cluster="Unk.DeserializeJobMethod", file="SqlServerMonitoringApi.cs", label="Entry Unk.DeserializeJobMethod", span=""];
m6_7 [cluster="Unk.EnlistTransaction", file="SqlServerMonitoringApi.cs", label="Entry Unk.EnlistTransaction", span=""];
m6_5 [cluster="TransactionScope.cstr", file="SqlServerMonitoringApi.cs", label="Entry TransactionScope.cstr", span=""];
m6_35 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78"];
m6_36 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return GetJobs(\r\n                from, count,\r\n                ProcessingState.Name,\r\n                (method, stateData) => new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                });", span="80-88"];
m6_37 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78"];
m6_140 [cluster="Unk.ToString", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToString", span=""];
m6_146 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382"];
m6_205 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow", span="384-384"];
m6_212 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="392-392"];
m6_206 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", span="385-385"];
m6_209 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", span="388-388"];
m6_210 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddHours(-1)", span="389-389"];
m6_207 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="386-386"];
m6_219 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i < dates.Count", span="404-404"];
m6_221 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="result.Add(dates[i], value)", span="407-407"];
m6_208 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i < 24", span="386-386"];
m6_211 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i++", span="386-386"];
m6_213 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="39: var valuesMap = _connection.Query(\r\n                @''select [Key], IntValue from HangFire.Value where [Key] in @keys'',\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.IntValue)", span="393-396"];
m6_214 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label=keys, span="398-398"];
m6_215 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="!valuesMap.ContainsKey(key)", span="400-400"];
m6_216 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="valuesMap.Add(key, 0)", span="400-400"];
m6_220 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="406-406"];
m6_217 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="403-403"];
m6_218 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="404-404"];
m6_223 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="return result;", span="410-410"];
m6_222 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i++", span="404-404"];
m6_224 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382"];
m6_261 [cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m6_227 [cluster="Unk.Add", file="SqlServerMonitoringApi.cs", label="Entry Unk.Add", span=""];
m6_13 [cluster="Unk.Complete", file="SqlServerMonitoringApi.cs", label="Entry Unk.Complete", span=""];
m6_82 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="413-413"];
m6_241 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow.Date", span="415-415"];
m6_248 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="426-426"];
m6_242 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var startDate = endDate.AddDays(-7)", span="416-416"];
m6_244 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="startDate <= endDate", span="419-419"];
m6_245 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", span="421-421"];
m6_246 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddDays(-1)", span="422-422"];
m6_243 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", span="417-417"];
m6_247 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="425-425"];
m6_257 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="result.Add(dates[i], value)", span="442-442"];
m6_255 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i < stringDates.Count", span="439-439"];
m6_249 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="27: var valuesMap = _connection.Query(\r\n                @''select [Key], IntValue from HangFire.Value where [Key] in @keys'',\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.IntValue)", span="428-431"];
m6_250 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label=keys, span="433-433"];
m6_251 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="!valuesMap.ContainsKey(key)", span="435-435"];
m6_252 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="valuesMap.Add(key, 0)", span="435-435"];
m6_256 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="441-441"];
m6_253 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="438-438"];
m6_254 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="439-439"];
m6_259 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="return result;", span="445-445"];
m6_258 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i++", span="439-439"];
m6_260 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="413-413"];
m6_150 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315"];
m6_151 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.JobHistory where JobId = @id order by CreatedAt desc''", span="317-320"];
m6_152 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="322-322"];
m6_153 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="var job = multi.Read<Job>().SingleOrDefault()", span="324-324"];
m6_156 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="327-327"];
m6_157 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="var history =\r\n                    multi.Read<JobHistory>()\r\n                        .ToList()\r\n                        .Select(x => JobHelper.FromJson<Dictionary<string, string>>(x.Data))\r\n                        .ToList()", span="328-332"];
m6_154 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="job == null", span="325-325"];
m6_158 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="return new JobDetailsDto\r\n                {\r\n                    Arguments = JobHelper.FromJson<string[]>(job.Arguments),\r\n                    CreatedAt = job.CreatedAt,\r\n                    State = job.State,\r\n                    Method = DeserializeJobMethod(job.InvocationData),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", span="334-342"];
m6_155 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="return null;", span="325-325"];
m6_159 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315"];
m6_228 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_65 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7"];
m6_14 [cluster="Unk.Dispose", file="SqlServerMonitoringApi.cs", label="Entry Unk.Dispose", span=""];
m6_164 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6"];
m6_24 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", span="51-51"];
m6_25 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs", label="return _connection.Query<int>(\r\n                @''select count(JobId) from HangFire.JobQueue ''\r\n                + @''where Queue = @queue and FetchedAt is not NULL'',\r\n                new { queue = queue })\r\n                .Single();", span="53-57"];
m6_26 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", span="51-51"];
m6_19 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42"];
m6_20 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="return _connection.Query<int>(\r\n                @''select count(JobId) from HangFire.JobQueue '' \r\n                + @''where Queue = @queue and FetchedAt is NULL'',\r\n                new { queue = queue })\r\n                .Single();", span="44-48"];
m6_21 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42"];
m6_6 [cluster="TransactionOptions.cstr", file="SqlServerMonitoringApi.cs", label="Entry TransactionOptions.cstr", span=""];
m6_49 [cluster="Unk.DeserializeJobs", file="SqlServerMonitoringApi.cs", label="Entry Unk.DeserializeJobs", span=""];
m6_147 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310"];
m6_148 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="return GetHourlyTimelineStats(''failed'');", span="312-312"];
m6_149 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310"];
m6_272 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="431-431"];
m6_39 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="83-88"];
m6_40 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", span="83-88"];
m6_41 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="83-88"];
m6_75 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="147-151"];
m6_76 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="147-151"];
m6_77 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="147-151"];
m6_99 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="194-201"];
m6_100 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="194-201"];
m6_101 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="194-201"];
m6_107 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="210-214"];
m6_108 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="210-214"];
m6_109 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="210-214"];
m6_126 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="266-270"];
m6_127 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                }", span="266-270"];
m6_128 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="266-270"];
m6_165 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="327-327"];
m6_168 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="327-327"];
m6_171 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="331-331"];
m6_166 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Name", span="327-327"];
m6_167 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="327-327"];
m6_169 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Value", span="327-327"];
m6_170 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="327-327"];
m6_172 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="JobHelper.FromJson<Dictionary<string, string>>(x.Data)", span="331-331"];
m6_173 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="331-331"];
m6_195 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="364-364"];
m6_198 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="364-364"];
m6_202 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366"];
m6_196 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.State", span="364-364"];
m6_197 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="364-364"];
m6_199 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Count", span="364-364"];
m6_200 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="364-364"];
m6_201 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="366-366"];
m6_203 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="366-366"];
m6_231 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="392-392"];
m6_230 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="392-392"];
m6_235 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="396-396"];
m6_238 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="396-396"];
m6_232 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="392-392"];
m6_236 [cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs", label="15: (string)x.Key", span="396-396"];
m6_237 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="396-396"];
m6_239 [cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs", label="9: (long)x.IntValue", span="396-396"];
m6_240 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="396-396"];
m6_266 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="426-426"];
m6_262 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="425-425"];
m6_265 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="426-426"];
m6_269 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="431-431"];
m6_263 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.ToString(''yyyy-MM-dd'')", span="425-425"];
m6_264 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="425-425"];
m6_267 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="426-426"];
m6_270 [cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: (string)x.Key", span="431-431"];
m6_271 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="431-431"];
m6_273 [cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs", label="13: (long)x.IntValue", span="431-431"];
m6_274 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="431-431"];
m6_32 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="73-73"];
m6_33 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="return GetNumberOfJobsByStateName(ProcessingState.Name);", span="75-75"];
m6_34 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="73-73"];
m6_143 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305"];
m6_144 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="return GetHourlyTimelineStats(''succeeded'');", span="307-307"];
m6_145 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305"];
m6_163 [cluster="Unk.Select", file="SqlServerMonitoringApi.cs", label="Entry Unk.Select", span=""];
m6_225 [cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m6_120 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m6_193 [cluster="Unk.Read", file="SqlServerMonitoringApi.cs", label="Entry Unk.Read", span=""];
m6_58 [cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m6_23 [cluster="Unk.Single", file="SqlServerMonitoringApi.cs", label="Entry Unk.Single", span=""];
m6_15 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37"];
m6_16 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="return GetNumberOfJobsByStateName(ScheduledState.Name);", span="39-39"];
m6_17 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37"];
m6_38 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91"];
m6_44 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="string jobsSql = @''\r\nselect * from (select *, row_number() over (order by CreatedAt desc) as row_num\r\nfrom HangFire.Job where State = @stateName) as j where j.row_num between @start and @end\r\n''", span="97-100"];
m6_45 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var jobs = _connection.Query<Job>(\r\n                jobsSql,\r\n                new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                .ToList()", span="102-105"];
m6_46 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="return DeserializeJobs(jobs, selector);", span="107-107"];
m6_47 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91"];
m6_48 [cluster="Unk.ToList", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToList", span=""];
m6_64 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_160 [cluster="Unk.QueryMultiple", file="SqlServerMonitoringApi.cs", label="Entry Unk.QueryMultiple", span=""];
m6_110 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7"];
m6_111 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224"];
m6_112 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="string queuesAndStatusSql = @''\r\nselect distinct [Queue],\r\n	(select count(JobId) from HangFire.JobQueue as a where q.Queue = a.Queue and a.FetchedAt is null) as Enqueued,\r\n	(select count(JobId) from HangFire.JobQueue as b where q.Queue = b.Queue and b.FetchedAt is not null) as Fetched\r\nfrom HangFire.[JobQueue] as q\r\n''", span="226-231"];
m6_113 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var queues = _connection.Query<QueueStatusDto>(queuesAndStatusSql).ToList()", span="233-233"];
m6_114 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="234-234"];
m6_115 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label=queues, span="236-236"];
m6_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=red, community=0, file="SqlServerMonitoringApi.cs", label="19: result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue.Queue,\r\n                    Length = queue.Enqueued,\r\n                    Dequeued = queue.Fetched,\r\n                    FirstJobs = new List<KeyValuePair<string, EnqueuedJobDto>>() // TODO: implement\r\n                })", span="238-244"];
m6_117 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="return result;", span="247-247"];
m6_118 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224"];
m6_268 [cluster="Unk.Format", file="SqlServerMonitoringApi.cs", label="Entry Unk.Format", span=""];
m6_104 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204"];
m6_105 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.Name,\r\n                (method, stateData) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="206-214"];
m6_106 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204"];
m6_18 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65"];
m6_30 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="return _connection.Query<int>(\r\n                @''select count(Id) from HangFire.Job where State = @state'',\r\n                new { state = stateName })\r\n                .Single();", span="67-70"];
m6_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65"];
m6_61 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="SqlServerMonitoringApi.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m6_96 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188"];
m6_97 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                FailedState.Name,\r\n                (method, stateData) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                });", span="190-201"];
m6_98 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188"];
m6_72 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142"];
m6_73 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.Name,\r\n                (method, stateData) => new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="144-151"];
m6_74 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142"];
m6_139 [cluster="KeyValuePair<string, DequeuedJobDto>.cstr", file="SqlServerMonitoringApi.cs", label="Entry KeyValuePair<string, DequeuedJobDto>.cstr", span=""];
m6_121 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250"];
m6_122 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="string enqueuedJobsSql = @''\r\nselect * from\r\n(select j.*, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is null) as r\r\nwhere r.row_num between @start and @end''", span="252-257"];
m6_123 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var jobs = _connection.Query<Job>(\r\n                enqueuedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="259-262"];
m6_124 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (method, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                });", span="264-270"];
m6_125 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250"];
m6_204 [cluster="Unk.ContainsKey", file="SqlServerMonitoringApi.cs", label="Entry Unk.ContainsKey", span=""];
m6_130 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273"];
m6_131 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="string fetchedJobsSql = @''\r\nselect * from\r\n(select j.*, jq.FetchedAt, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is not null) as r\r\nwhere r.row_num between @start and @end''", span="275-280"];
m6_132 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var jobs = _connection.Query<Job>(\r\n                fetchedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="282-285"];
m6_133 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var result = new List<KeyValuePair<string, DequeuedJobDto>>(jobs.Count)", span="287-287"];
m6_134 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label=jobs, span="289-289"];
m6_135 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="result.Add(new KeyValuePair<string, DequeuedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new DequeuedJobDto\r\n                    {\r\n                        Method = DeserializeJobMethod(job.InvocationData),\r\n                        State = job.State,\r\n                        CreatedAt = job.CreatedAt,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="291-299"];
m6_136 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="return new JobList<DequeuedJobDto>(result);", span="302-302"];
m6_137 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273"];
m6_275 [file="SqlServerMonitoringApi.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m6_276 [file="SqlServerMonitoringApi.cs", label=countByStates, span=""];
m6_277 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m6_278 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m7_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerStorage.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_35 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m7_36 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="return new SqlStorageConnection(this, CreateAndOpenConnection());", span="71-71"];
m7_37 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m7_34 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20"];
m7_26 [cluster="object.GetType()", file="SqlServerStorage.cs", label="Entry object.GetType()", span="0-0"];
m7_38 [cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="16-16"];
m7_28 [cluster="string.Replace(string, string)", file="SqlServerStorage.cs", label="Entry string.Replace(string, string)", span="0-0"];
m7_24 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m7_53 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="var connection = CreateAndOpenConnection()", span="91-91"];
m7_54 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="93-93"];
m7_55 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="94-94"];
m7_56 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m7_45 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="SqlServerStorage.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m7_57 [cluster="Unk.>", file="SqlServerStorage.cs", label="Entry Unk.>", span=""];
m7_52 [cluster="Unk.Open", file="SqlServerStorage.cs", label="Entry Unk.Open", span=""];
m7_51 [cluster="SqlConnection.cstr", file="SqlServerStorage.cs", label="Entry SqlConnection.cstr", span=""];
m7_27 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m7_59 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="100-100"];
m7_60 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="var reader = new StreamReader(stream)", span="101-101"];
m7_61 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="return reader.ReadToEnd();", span="103-103"];
m7_62 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m7_63 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerStorage.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m7_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m7_32 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="return new SqlServerMonitoringApi(CreateAndOpenConnection());", span="66-66"];
m7_33 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m7_44 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="SqlServerStorage.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m7_2 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30"];
m7_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="connectionString == null", span="32-32"];
m7_5 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="options == null", span="33-33"];
m7_7 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="_options = options", span="35-35"];
m7_8 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="_connectionString = connectionString", span="36-36"];
m7_9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="options.PrepareSchemaIfNecessary", span="38-38"];
m7_4 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''connectionString'');", span="32-32"];
m7_6 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''options'');", span="33-33"];
m7_10 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="PrepareSchemaIfNecessary()", span="40-40"];
m7_11 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30"];
m7_39 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m7_40 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="76-76"];
m7_41 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new ServerWatchdog(this);", span="77-77"];
m7_42 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new ExpirationManager(this);", span="78-78"];
m7_43 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m7_0 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25"];
m7_1 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25"];
m7_58 [cluster="Unk.Single", file="SqlServerStorage.cs", label="Entry Unk.Single", span=""];
m7_64 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerStorage.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m7_30 [cluster="Unk.Execute", file="SqlServerStorage.cs", label="Entry Unk.Execute", span=""];
m7_29 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m7_47 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="var connection = new SqlConnection(_connectionString)", span="83-83"];
m7_48 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="connection.Open()", span="84-84"];
m7_49 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="return connection;", span="86-86"];
m7_50 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m7_65 [cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerStorage.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m7_23 [cluster="Unk.Debug", file="SqlServerStorage.cs", label="Entry Unk.Debug", span=""];
m7_46 [cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="26-26"];
m7_13 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m7_14 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Log.Debug(''Start installing HangFire SQL objects...'')", span="46-46"];
m7_15 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="!IsSqlEditionSupported(_connectionString)", span="48-48"];
m7_16 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="50-50"];
m7_17 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="var script = GetStringResource(GetType().Assembly, ''HangFire.SqlServer.Install.sql'')", span="53-53"];
m7_18 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", color=red, community=0, file="SqlServerStorage.cs", label="13: script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 1;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="54-54"];
m7_19 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="var connection = CreateAndOpenConnection()", span="56-56"];
m7_20 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="connection.Execute(script)", span="58-58"];
m7_21 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Log.Debug(''HangFire SQL objects installed.'')", span="61-61"];
m7_22 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m7_25 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerStorage.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m7_66 [file="SqlServerStorage.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m8_17 [cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49"];
m8_18 [cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="SqlStoredJobs.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="51-54"];
m8_19 [cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49"];
m8_10 [cluster="Unk.>", file="SqlStoredJobs.cs", label="Entry Unk.>", span=""];
m8_16 [cluster="Unk.Execute", file="SqlStoredJobs.cs", label="Entry Unk.Execute", span=""];
m8_13 [cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", span="38-38"];
m8_14 [cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="SqlStoredJobs.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="40-46"];
m8_15 [cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", span="38-38"];
m8_3 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", span="20-20"];
m8_4 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="var job = _connection.Query<Job>(\r\n                @''select InvocationData, State from HangFire.Job where id = @id'',\r\n                new { id = id })\r\n                .SingleOrDefault()", span="22-25"];
m8_5 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="job == null", span="27-27"];
m8_7 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="var data = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="29-29"];
m8_8 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = data,\r\n                State = job.State,\r\n            };", span="31-35"];
m8_6 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="return null;", span="27-27"];
m8_9 [cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", span="20-20"];
m8_0 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15"];
m8_1 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStoredJobs.cs", label="_connection = connection", span="17-17"];
m8_2 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15"];
m8_11 [cluster="Unk.SingleOrDefault", file="SqlStoredJobs.cs", label="Entry Unk.SingleOrDefault", span=""];
m8_12 [cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="SqlStoredJobs.cs", label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2"];
m8_20 [cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="SqlStoredJobs.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57"];
m8_21 [cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="SqlStoredJobs.cs", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = payload.Id, queueName = payload.Queue })", span="60-61"];
m8_22 [cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="SqlStoredJobs.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57"];
m8_23 [file="SqlStoredJobs.cs", label="HangFire.SqlServer.SqlStoredJobs", span=""];
m9_27 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="64-64"];
m9_28 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="66-68"];
m9_29 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="64-64"];
m9_3 [cluster="HangFire.SqlServer.SqlWriteTransaction.Dispose()", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.Dispose()", span="24-24"];
m9_4 [cluster="HangFire.SqlServer.SqlWriteTransaction.Dispose()", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.Dispose()", span="24-24"];
m9_34 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="71-71"];
m9_35 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="73-75"];
m9_36 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="71-71"];
m9_53 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="93-93"];
m9_54 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="95-97"];
m9_55 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="93-93"];
m9_22 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlWriteTransaction.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m9_0 [cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19"];
m9_1 [cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlWriteTransaction.cs", label="_connection = connection", span="21-21"];
m9_2 [cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19"];
m9_62 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs", label="Entry HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="5-5"];
m9_18 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="53-53"];
m9_19 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs", label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="55-57"];
m9_20 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="59-61"];
m9_21 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="53-53"];
m9_82 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="133-133"];
m9_83 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs", label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="135-138"];
m9_84 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                trimSql, \r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="140-142"];
m9_85 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="133-133"];
m9_5 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.Commit()", span="34-34"];
m9_6 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadCommitted })", span="36-38"];
m9_7 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="40-40"];
m9_10 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label="transaction.Complete()", span="47-47"];
m9_8 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label=_commandQueue, span="42-42"];
m9_9 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label="command(_connection)", span="44-44"];
m9_11 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label="return true;", span="50-50"];
m9_12 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.Commit()", span="34-34"];
m9_15 [cluster="Unk.EnlistTransaction", file="SqlWriteTransaction.cs", label="Entry Unk.EnlistTransaction", span=""];
m9_16 [cluster="System.Action<T>.Invoke(T)", file="SqlWriteTransaction.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m9_13 [cluster="TransactionScope.cstr", file="SqlWriteTransaction.cs", label="Entry TransactionScope.cstr", span=""];
m9_70 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="119-119"];
m9_71 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="121-123"];
m9_72 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="119-119"];
m9_76 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="126-126"];
m9_77 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="128-130"];
m9_78 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="126-126"];
m9_59 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="100-100"];
m9_60 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="SqlWriteTransaction.cs", label="((IWriteableStoredSets)this).Add(key, value, 0.0)", span="102-102"];
m9_61 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="100-100"];
m9_17 [cluster="Unk.Complete", file="SqlWriteTransaction.cs", label="Entry Unk.Complete", span=""];
m9_33 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlWriteTransaction.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m9_109 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="189-189"];
m9_110 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", color=red, community=0, file="SqlWriteTransaction.cs", label="36: _commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="191-193"];
m9_111 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="189-189"];
m9_47 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="85-85"];
m9_48 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="87-90"];
m9_49 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="85-85"];
m9_14 [cluster="TransactionOptions.cstr", file="SqlWriteTransaction.cs", label="Entry TransactionOptions.cstr", span=""];
m9_112 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="191-193"];
m9_24 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="59-61"];
m9_23 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="59-61"];
m9_25 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="59-61"];
m9_31 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="66-68"];
m9_30 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="66-68"];
m9_32 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="66-68"];
m9_38 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="73-75"];
m9_37 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="73-75"];
m9_39 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="73-75"];
m9_44 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="80-82"];
m9_43 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="80-82"];
m9_45 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="80-82"];
m9_51 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="87-90"];
m9_50 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="87-90"];
m9_52 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="87-90"];
m9_57 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="95-97"];
m9_56 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="95-97"];
m9_58 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="95-97"];
m9_68 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                addSql, \r\n                new { key, value, score })", span="114-116"];
m9_67 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="114-116"];
m9_69 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="114-116"];
m9_74 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="121-123"];
m9_73 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="121-123"];
m9_75 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="121-123"];
m9_80 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="128-130"];
m9_79 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="128-130"];
m9_81 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="128-130"];
m9_87 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(\r\n                trimSql, \r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="140-142"];
m9_86 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="140-142"];
m9_88 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="140-142"];
m9_95 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="var affectedRows = x.Execute(updateSql, new { key })", span="158-158"];
m9_97 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="162-162"];
m9_94 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="156-164"];
m9_96 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="affectedRows == 0", span="160-160"];
m9_98 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="156-164"];
m9_105 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="var affectedRows = x.Execute(updateSql, new { key })", span="180-180"];
m9_107 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="184-184"];
m9_104 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="178-186"];
m9_106 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="affectedRows == 0", span="182-182"];
m9_108 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="178-186"];
m9_113 [cluster="lambda expression", color=red, community=0, file="SqlWriteTransaction.cs", label="36: x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="191-193"];
m9_114 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="191-193"];
m9_40 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="78-78"];
m9_41 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="80-82"];
m9_42 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="78-78"];
m9_99 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="167-167"];
m9_100 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="169-174"];
m9_102 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="178-186"];
m9_101 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs", label="string updateSql = @''\r\nupdate HangFire.Value with (xlock) set IntValue = IntValue - 1 where [Key] = @key''", span="175-176"];
m9_103 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="167-167"];
m9_46 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlWriteTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m9_63 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="105-105"];
m9_64 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs", label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="107-112"];
m9_65 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x => x.Execute(\r\n                addSql, \r\n                new { key, value, score }))", span="114-116"];
m9_66 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="105-105"];
m9_89 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", span="145-145"];
m9_90 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="147-152"];
m9_92 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs", label="_commandQueue.Enqueue(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="156-164"];
m9_91 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs", label="string updateSql = @''\r\nupdate HangFire.Value with (xlock) set IntValue = IntValue + 1 where [Key] = @key''", span="153-154"];
m9_93 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", span="145-145"];
m9_26 [cluster="Unk.Execute", file="SqlWriteTransaction.cs", label="Entry Unk.Execute", span=""];
m9_115 [file="SqlWriteTransaction.cs", label="HangFire.SqlServer.SqlWriteTransaction", span=""];
m9_116 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_117 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_118 [file="SqlWriteTransaction.cs", label=enqueueJobSql, span=""];
m9_119 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_120 [file="SqlWriteTransaction.cs", label="System.TimeSpan", span=""];
m9_121 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_122 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_123 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_124 [file="SqlWriteTransaction.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m9_125 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_126 [file="SqlWriteTransaction.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m9_127 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_128 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_129 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_130 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_131 [file="SqlWriteTransaction.cs", label=double, span=""];
m9_132 [file="SqlWriteTransaction.cs", label=addSql, span=""];
m9_133 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_134 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_135 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_136 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_137 [file="SqlWriteTransaction.cs", label=int, span=""];
m9_138 [file="SqlWriteTransaction.cs", label=int, span=""];
m9_139 [file="SqlWriteTransaction.cs", label=trimSql, span=""];
m9_140 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_141 [file="SqlWriteTransaction.cs", label=updateSql, span=""];
m9_142 [file="SqlWriteTransaction.cs", label=insertSql, span=""];
m9_143 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_144 [file="SqlWriteTransaction.cs", label=updateSql, span=""];
m9_145 [file="SqlWriteTransaction.cs", label=insertSql, span=""];
m9_146 [file="SqlWriteTransaction.cs", label=string, span=""];
m9_147 [file="SqlWriteTransaction.cs", label="System.TimeSpan", span=""];
m10_26 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66"];
m10_27 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m10_28 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66"];
m10_25 [cluster="Unk.OnScenarioStart", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.OnScenarioStart", span=""];
m10_29 [cluster="Unk.CollectScenarioErrors", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m10_21 [cluster="Unk.OnScenarioEnd", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.OnScenarioEnd", span=""];
m10_22 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m10_23 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=red, community=0, file="StatisticsHistoryFilterAttribute.cs", label="1: testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m10_24 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m10_113 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", span="268-268"];
m10_114 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job is being enqueued on it\'s actual queue after timing out'', ((string[])(null)))", span="270-270"];
m10_115 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="272-272"];
m10_116 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''a dequeued job from the \'test\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="274-274"];
m10_117 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="276-276"];
m10_118 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="278-278"];
m10_119 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="280-280"];
m10_120 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="282-282"];
m10_121 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", span="268-268"];
m10_53 [cluster="Unk.And", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.And", span=""];
m10_112 [cluster="Unk.But", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.But", span=""];
m10_5 [cluster="Unk.GetTestRunner", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.GetTestRunner", span=""];
m10_132 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="314-314"];
m10_133 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Succeeded job of non-existing type will not be moved to the failed state'', ((string[])(null)))", span="316-316"];
m10_134 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="318-318"];
m10_135 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="320-320"];
m10_136 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="322-322"];
m10_137 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="324-324"];
m10_138 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="326-326"];
m10_139 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="328-328"];
m10_140 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="330-330"];
m10_141 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="332-332"];
m10_142 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="314-314"];
m10_13 [cluster="Unk.OnFeatureEnd", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.OnFeatureEnd", span=""];
m10_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m10_90 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="214-214"];
m10_91 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job\'s state is changed to the Enqueued when the job is being timed out after proc'' +\r\n                    ''eeding to the Processing state'', new string[] {\r\n                        ''checkpoint-3''})", span="216-218"];
m10_92 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="220-220"];
m10_93 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="222-222"];
m10_94 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it\'s state is Processing'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="224-224"];
m10_95 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="226-226"];
m10_96 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="228-228"];
m10_97 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''the job moved to the Enqueued state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="230-230"];
m10_98 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="232-232"];
m10_99 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="234-234"];
m10_100 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="214-214"];
m10_78 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="184-184"];
m10_79 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out jobs in the \'Fetched\' state should be re-queued'', new string[] {\r\n                        ''checkpoint-2''})", span="186-187"];
m10_80 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="189-189"];
m10_81 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="191-191"];
m10_82 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193"];
m10_83 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="195-195"];
m10_84 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="197-197"];
m10_85 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="199-199"];
m10_86 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="201-201"];
m10_87 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the job does not have the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="203-203"];
m10_88 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="205-205"];
m10_89 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="184-184"];
m10_40 [cluster="Unk.When", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.When", span=""];
m10_42 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="97-97"];
m10_43 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Non-timed out job in the \'Checked\' state should not be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="99-100"];
m10_44 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="102-102"];
m10_45 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="104-104"];
m10_46 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was checked a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="106-106"];
m10_47 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="108-108"];
m10_48 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="110-110"];
m10_49 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="112-112"];
m10_50 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="114-114"];
m10_51 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="116-116"];
m10_52 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="97-97"];
m10_101 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="242-242"];
m10_102 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job in the Succeeded state does not move to the Enqueued state'', new string[] {\r\n                        ''checkpoint-4''})", span="244-245"];
m10_103 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="247-247"];
m10_104 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="249-249"];
m10_105 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="251-251"];
m10_106 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="253-253"];
m10_107 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="255-255"];
m10_108 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="257-257"];
m10_109 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="259-259"];
m10_110 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="261-261"];
m10_111 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="242-242"];
m10_0 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m10_1 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m10_2 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Re-queueing of timed out jobs'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m10_3 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m10_4 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m10_14 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", span="46-46"];
m10_15 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", color=red, community=0, file="StatisticsHistoryFilterAttribute.cs", label="42: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Re-queueing of timed out jobs''))", span="48-49"];
m10_16 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", color=green, community=0, file="StatisticsHistoryFilterAttribute.cs", label="42: HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(null)", span="51-51"];
m10_17 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", span="46-46"];
m10_38 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="StatisticsHistoryFilterAttribute.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m10_9 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", span="39-39"];
m10_10 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", color=red, community=0, file="StatisticsHistoryFilterAttribute.cs", label="17: testRunner.OnFeatureEnd()", span="41-41"];
m10_11 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", color=green, community=0, file="StatisticsHistoryFilterAttribute.cs", label="32: testRunner = null", span="42-42"];
m10_12 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", span="39-39"];
m10_65 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="152-152"];
m10_66 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job by the \'checked\' flag in the \'Fetched\' state should not be re-queue'' +\r\n                    ''d'', new string[] {\r\n                        ''checkpoint-2''})", span="154-156"];
m10_67 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="158-158"];
m10_68 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="160-160"];
m10_69 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="162-162"];
m10_70 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was fetched a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164"];
m10_71 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="166-166"];
m10_72 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="168-168"];
m10_73 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="170-170"];
m10_74 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="172-172"];
m10_75 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="174-174"];
m10_76 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="176-176"];
m10_77 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="152-152"];
m10_41 [cluster="Unk.Then", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.Then", span=""];
m10_39 [cluster="Unk.Given", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.Given", span=""];
m10_54 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="124-124"];
m10_55 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed job in the \'Checked\' state should be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="126-127"];
m10_56 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="129-129"];
m10_57 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="131-131"];
m10_58 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="133-133"];
m10_59 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="135-135"];
m10_60 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="137-137"];
m10_61 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="139-139"];
m10_62 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141"];
m10_63 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="143-143"];
m10_64 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="124-124"];
m10_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="StatisticsHistoryFilterAttribute.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m10_18 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", span="56-56"];
m10_19 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", color=green, community=0, file="StatisticsHistoryFilterAttribute.cs", label="42: testRunner.OnScenarioEnd()", span="58-58"];
m10_20 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", span="56-56"];
m10_8 [cluster="Unk.OnFeatureStart", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.OnFeatureStart", span=""];
m10_122 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="290-290"];
m10_123 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When the server could not find the job\'s type, the job is moved to the Failed sta'' +\r\n                    ''te'', ((string[])(null)))", span="292-293"];
m10_124 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="295-295"];
m10_125 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="297-297"];
m10_126 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="299-299"];
m10_127 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="301-301"];
m10_128 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''the job moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="303-303"];
m10_129 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="305-305"];
m10_130 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="307-307"];
m10_131 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="290-290"];
m10_30 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="76-76"];
m10_31 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''A job in the implicit \'Dequeued\' state moved to the \'Checked\' state'', new string[] {\r\n                        ''checkpoint-1-1''})", span="78-79"];
m10_32 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="81-81"];
m10_33 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="83-83"];
m10_34 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m10_35 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs", label="testRunner.Then(''it marks the job as \'checked\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m10_36 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs", label="this.ScenarioCleanup()", span="89-89"];
m10_37 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="76-76"];
m10_143 [file="StatisticsHistoryFilterAttribute.cs", label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", span=""];
m11_12 [cluster="HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Increment(string)", span="6-6"];
m11_7 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m11_9 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SucceededState.cs", label="42: context.Transaction.Values.Increment(''stats:succeeded'')", span="50-50"];
m11_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="context.Transaction.Jobs.Expire(context.JobId, JobExpirationTimeout)", span="49-49"];
m11_10 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m11_0 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="SucceededState.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42"];
m11_1 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="SucceededState.cs", label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42"];
m11_2 [cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="SucceededState.cs", label="Entry HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55"];
m11_3 [cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="SucceededState.cs", label="Exit HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55"];
m11_18 [cluster="HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="8-8"];
m11_17 [cluster="HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="7-7"];
m11_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="53-53"];
m11_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededState.cs", label="42: context.Transaction.Values.Decrement(''stats:succeeded'')", span="55-55"];
m11_15 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="context.Transaction.Jobs.Persist(context.JobId)", span="56-56"];
m11_16 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="53-53"];
m11_11 [cluster="HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="7-7"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=2, style=dotted];
n8 -> n6  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_9  [key=2, style=dotted];
m3_2 -> m3_4  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_2 -> m3_5  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_2 -> m3_6  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_2 -> m3_7  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_0  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=2, style=dotted];
m3_16 -> m3_14  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_12 -> m3_10  [color=blue, key=0, style=bold];
m3_18 -> m3_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m3_18 -> m3_2  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m3_18 -> m3_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m3_18 -> m3_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m3_18 -> m3_5  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m3_18 -> m3_6  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m3_18 -> m3_7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m3_18 -> m3_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m3_18 -> m3_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m4_15 -> m4_18  [color=green, key=1, label=string, style=dashed];
m4_15 -> m4_16  [key=0, style=solid];
m4_18 -> m4_19  [color=green, key=0, style=solid];
m4_18 -> m4_21  [color=green, key=2, style=dotted];
m4_16 -> m4_18  [color=green, key=0, style=solid];
m4_16 -> m4_17  [color=green, key=0, style=solid];
m4_16 -> m4_11  [key=2, style=dotted];
m4_17 -> m4_19  [color=green, key=0, style=solid];
m4_17 -> m4_20  [color=green, key=2, style=dotted];
m4_19 -> m4_15  [color=blue, key=0, style=bold];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label="HangFire.States.IStateHandler", style=dashed];
m4_0 -> m4_6  [color=darkseagreen4, key=1, label="HangFire.States.IStateHandler", style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label="HangFire.States.IStateHandler", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="HangFire.States.IStateHandler", style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=0, style=solid];
m4_5 -> m4_11  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_12  [key=2, style=dotted];
m4_6 -> m4_13  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_14  [key=2, style=dotted];
m4_3 -> m4_5  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_4 -> m4_8  [key=0, style=solid];
m4_4 -> m4_10  [key=2, style=dotted];
m4_2 -> m4_8  [key=0, style=solid];
m4_2 -> m4_9  [key=2, style=dotted];
m4_8 -> m4_0  [color=blue, key=0, style=bold];
m4_22 -> m4_18  [color=green, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m4_22 -> m4_5  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m4_22 -> m4_6  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m4_22 -> m4_7  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m4_22 -> m4_16  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_0  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_12 -> m5_13  [color=green, key=0, style=solid];
m5_12 -> m5_18  [color=green, key=1, label=queueName, style=dashed];
m5_7 -> m5_12  [color=green, key=1, label=idAndQueue, style=dashed];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_20  [key=2, style=dotted];
m5_7 -> m5_21  [key=2, style=dotted];
m5_7 -> m5_10  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m5_11 -> m5_12  [color=green, key=0, style=solid];
m5_11 -> m5_24  [key=2, style=dotted];
m5_11 -> m5_21  [key=2, style=dotted];
m5_11 -> m5_13  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_11 -> m5_16  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_11 -> m5_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_11 -> m5_18  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_16  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_28  [key=2, style=dotted];
m5_18 -> m5_29  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_18  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m5_6 -> m5_5  [color=darkorchid, key=3, label="Local variable string queueName", style=bold];
m5_8 -> m5_13  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_23  [key=2, style=dotted];
m5_9 -> m5_11  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_22  [key=2, style=dotted];
m5_16 -> m5_6  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_27  [key=2, style=dotted];
m5_5 -> m5_13  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_5 -> m5_18  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_16  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_5 -> m5_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_5 -> m5_5  [color=darkorchid, key=3, label="Local variable HangFire.SqlServer.Entities.Job job", style=bold];
m5_14 -> m5_16  [key=0, style=solid];
m5_14 -> m5_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_25  [key=2, style=dotted];
m5_14 -> m5_26  [key=2, style=dotted];
m5_15 -> m5_19  [key=0, style=solid];
m5_19 -> m5_4  [color=blue, key=0, style=bold];
m5_30 -> m5_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m5_30 -> m5_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m5_30 -> m5_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m5_30 -> m5_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_88  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.ServerDto> Servers", style=bold];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_22  [key=2, style=dotted];
m6_87 -> m6_48  [key=2, style=dotted];
m6_87 -> m6_89  [color=darkseagreen4, key=1, label=servers, style=dashed];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_94  [key=2, style=dotted];
m6_88 -> m6_91  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_88 -> m6_92  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_92  [key=0, style=solid];
m6_89 -> m6_91  [color=darkseagreen4, key=1, label=server, style=dashed];
m6_91 -> m6_89  [key=0, style=solid];
m6_91 -> m6_95  [key=2, style=dotted];
m6_91 -> m6_64  [key=2, style=dotted];
m6_92 -> m6_93  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_22  [key=2, style=dotted];
m6_93 -> m6_86  [color=blue, key=0, style=bold];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_82  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount", style=bold];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_82  [key=2, style=dotted];
m6_81 -> m6_79  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_60 -> m6_66  [key=0, style=solid];
m6_60 -> m6_69  [color=darkorchid, key=3, label="method methodReturn HangFire.Common.JobMethod DeserializeJobMethod", style=bold];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_59  [key=2, style=dotted];
m6_67 -> m6_70  [key=0, style=solid];
m6_67 -> m6_71  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_70 -> m6_60  [color=blue, key=0, style=bold];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_18  [color=darkorchid, key=3, label="method methodReturn long SucceededListCount", style=bold];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_18  [key=2, style=dotted];
m6_176 -> m6_174  [color=blue, key=0, style=bold];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_13  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_14  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_14  [key=2, style=dotted];
m6_12 -> m6_8  [color=blue, key=0, style=bold];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>", style=dashed];
m6_50 -> m6_54  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_58  [key=2, style=dotted];
m6_51 -> m6_55  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_51 -> m6_56  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_56  [key=0, style=solid];
m6_52 -> m6_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_52 -> m6_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_60  [key=2, style=dotted];
m6_54 -> m6_61  [key=2, style=dotted];
m6_55 -> m6_52  [key=0, style=solid];
m6_55 -> m6_62  [key=2, style=dotted];
m6_55 -> m6_63  [key=2, style=dotted];
m6_55 -> m6_64  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_65  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_59  [key=2, style=dotted];
m6_57 -> m6_50  [color=blue, key=0, style=bold];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_82  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount", style=bold];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_82  [key=2, style=dotted];
m6_85 -> m6_83  [color=blue, key=0, style=bold];
m6_177 -> m6_178  [key=0, style=solid];
m6_178 -> m6_179  [color=red, key=0, style=solid];
m6_178 -> m6_192  [key=2, style=dotted];
m6_178 -> m6_183  [color=darkseagreen4, key=1, label=stats, style=dashed];
m6_178 -> m6_184  [color=darkseagreen4, key=1, label=stats, style=dashed];
m6_178 -> m6_185  [color=darkseagreen4, key=1, label=stats, style=dashed];
m6_178 -> m6_186  [color=darkseagreen4, key=1, label=stats, style=dashed];
m6_178 -> m6_187  [color=darkseagreen4, key=1, label=stats, style=dashed];
m6_178 -> m6_188  [color=darkseagreen4, key=1, label=stats, style=dashed];
m6_178 -> m6_189  [color=red, key=1, label=stats, style=dashed];
m6_178 -> m6_190  [color=darkseagreen4, key=1, label=stats, style=dashed];
m6_179 -> m6_180  [color=red, key=0, style=solid];
m6_179 -> m6_179  [color=red, key=3, label="Local variable string sql", style=bold];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_194  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_194  [key=2, style=dotted];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_194  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_194  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_22  [key=2, style=dotted];
m6_187 -> m6_23  [key=2, style=dotted];
m6_188 -> m6_189  [color=red, key=0, style=solid];
m6_188 -> m6_22  [key=2, style=dotted];
m6_188 -> m6_23  [key=2, style=dotted];
m6_189 -> m6_190  [color=red, key=0, style=solid];
m6_189 -> m6_22  [color=red, key=2, style=dotted];
m6_189 -> m6_161  [color=red, key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_160  [key=2, style=dotted];
m6_180 -> m6_187  [color=darkseagreen4, key=1, label=multi, style=dashed];
m6_180 -> m6_188  [color=darkseagreen4, key=1, label=multi, style=dashed];
m6_180 -> m6_189  [color=red, key=1, label=multi, style=dashed];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_193  [key=2, style=dotted];
m6_181 -> m6_162  [key=2, style=dotted];
m6_181 -> m6_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_181 -> m6_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_181 -> m6_202  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_202  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_182 -> m6_184  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m6_182 -> m6_185  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m6_182 -> m6_186  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m6_182 -> m6_182  [color=darkorchid, key=3, label="Local variable System.Func<string, int> getCountIfExists", style=bold];
m6_191 -> m6_177  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_18  [color=darkorchid, key=3, label="method methodReturn long FailedCount", style=bold];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_18  [key=2, style=dotted];
m6_29 -> m6_27  [color=blue, key=0, style=bold];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_38  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs", style=bold];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_38  [key=2, style=dotted];
m6_36 -> m6_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_37 -> m6_35  [color=blue, key=0, style=bold];
m6_146 -> m6_205  [key=0, style=solid];
m6_146 -> m6_212  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_146 -> m6_231  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_146 -> m6_80  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m6_146 -> m6_84  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m6_146 -> m6_217  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats", style=bold];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_209  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_205 -> m6_210  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_212 -> m6_213  [color=red, key=0, style=solid];
m6_212 -> m6_163  [key=2, style=dotted];
m6_212 -> m6_48  [key=2, style=dotted];
m6_212 -> m6_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_212 -> m6_214  [color=darkseagreen4, key=1, label=keys, style=dashed];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_94  [key=2, style=dotted];
m6_206 -> m6_209  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_206 -> m6_212  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_206 -> m6_219  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_206 -> m6_221  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_64  [key=2, style=dotted];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_225  [key=2, style=dotted];
m6_210 -> m6_210  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_211  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_207 -> m6_207  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_223  [key=0, style=solid];
m6_219 -> m6_207  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_227  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_212  [key=0, style=solid];
m6_211 -> m6_208  [key=0, style=solid];
m6_211 -> m6_211  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_213 -> m6_214  [color=red, key=0, style=solid];
m6_213 -> m6_226  [color=red, key=2, style=dotted];
m6_213 -> m6_162  [color=red, key=2, style=dotted];
m6_213 -> m6_235  [color=red, key=1, label="lambda expression", style=dashed];
m6_213 -> m6_238  [color=red, key=1, label="lambda expression", style=dashed];
m6_213 -> m6_215  [color=red, key=1, label=valuesMap, style=dashed];
m6_213 -> m6_216  [color=red, key=1, label=valuesMap, style=dashed];
m6_213 -> m6_220  [color=red, key=1, label=valuesMap, style=dashed];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_217  [key=0, style=solid];
m6_214 -> m6_216  [color=darkseagreen4, key=1, label=key, style=dashed];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_214  [key=0, style=solid];
m6_215 -> m6_204  [key=2, style=dotted];
m6_216 -> m6_214  [key=0, style=solid];
m6_216 -> m6_227  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_229  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_228  [key=2, style=dotted];
m6_217 -> m6_221  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_217 -> m6_223  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_220  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_218 -> m6_221  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_218 -> m6_222  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_223 -> m6_224  [key=0, style=solid];
m6_222 -> m6_219  [key=0, style=solid];
m6_222 -> m6_222  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_224 -> m6_146  [color=blue, key=0, style=bold];
m6_82 -> m6_241  [key=0, style=solid];
m6_82 -> m6_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_82 -> m6_266  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_82 -> m6_80  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m6_82 -> m6_84  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m6_82 -> m6_253  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats", style=bold];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_244  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_241 -> m6_245  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_241 -> m6_246  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_248 -> m6_249  [color=red, key=0, style=solid];
m6_248 -> m6_163  [key=2, style=dotted];
m6_248 -> m6_48  [key=2, style=dotted];
m6_248 -> m6_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_248 -> m6_250  [color=darkseagreen4, key=1, label=keys, style=dashed];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_261  [key=2, style=dotted];
m6_242 -> m6_244  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_247  [key=0, style=solid];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_64  [key=2, style=dotted];
m6_246 -> m6_244  [key=0, style=solid];
m6_246 -> m6_261  [key=2, style=dotted];
m6_246 -> m6_246  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_94  [key=2, style=dotted];
m6_243 -> m6_245  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_243 -> m6_247  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_243 -> m6_257  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_163  [key=2, style=dotted];
m6_247 -> m6_48  [key=2, style=dotted];
m6_247 -> m6_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_247 -> m6_255  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_227  [key=2, style=dotted];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_259  [key=0, style=solid];
m6_255 -> m6_207  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m6_249 -> m6_250  [color=red, key=0, style=solid];
m6_249 -> m6_226  [color=red, key=2, style=dotted];
m6_249 -> m6_162  [color=red, key=2, style=dotted];
m6_249 -> m6_269  [color=red, key=1, label="lambda expression", style=dashed];
m6_249 -> m6_272  [color=red, key=1, label="lambda expression", style=dashed];
m6_249 -> m6_251  [color=red, key=1, label=valuesMap, style=dashed];
m6_249 -> m6_252  [color=red, key=1, label=valuesMap, style=dashed];
m6_249 -> m6_256  [color=red, key=1, label=valuesMap, style=dashed];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_253  [key=0, style=solid];
m6_250 -> m6_252  [color=darkseagreen4, key=1, label=key, style=dashed];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_250  [key=0, style=solid];
m6_251 -> m6_204  [key=2, style=dotted];
m6_252 -> m6_250  [key=0, style=solid];
m6_252 -> m6_227  [key=2, style=dotted];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_229  [key=2, style=dotted];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_228  [key=2, style=dotted];
m6_253 -> m6_257  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_253 -> m6_259  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_256  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_254 -> m6_257  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_254 -> m6_258  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_259 -> m6_260  [key=0, style=solid];
m6_258 -> m6_255  [key=0, style=solid];
m6_258 -> m6_258  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_260 -> m6_82  [color=blue, key=0, style=bold];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_152  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_150 -> m6_69  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobDetailsDto JobDetails", style=bold];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_151  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_160  [key=2, style=dotted];
m6_152 -> m6_156  [color=darkseagreen4, key=1, label=multi, style=dashed];
m6_152 -> m6_157  [color=darkseagreen4, key=1, label=multi, style=dashed];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_22  [key=2, style=dotted];
m6_153 -> m6_161  [key=2, style=dotted];
m6_153 -> m6_158  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_22  [key=2, style=dotted];
m6_156 -> m6_162  [key=2, style=dotted];
m6_156 -> m6_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_156 -> m6_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_156 -> m6_158  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_22  [key=2, style=dotted];
m6_157 -> m6_48  [key=2, style=dotted];
m6_157 -> m6_163  [key=2, style=dotted];
m6_157 -> m6_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_156  [key=0, style=solid];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_164  [key=2, style=dotted];
m6_158 -> m6_22  [key=2, style=dotted];
m6_158 -> m6_142  [key=2, style=dotted];
m6_155 -> m6_159  [key=0, style=solid];
m6_159 -> m6_150  [color=blue, key=0, style=bold];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_22  [key=2, style=dotted];
m6_25 -> m6_23  [key=2, style=dotted];
m6_26 -> m6_24  [color=blue, key=0, style=bold];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=2, style=dotted];
m6_20 -> m6_23  [key=2, style=dotted];
m6_21 -> m6_19  [color=blue, key=0, style=bold];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_146  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs", style=bold];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_146  [key=2, style=dotted];
m6_149 -> m6_147  [color=blue, key=0, style=bold];
m6_272 -> m6_273  [color=red, key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_42  [key=2, style=dotted];
m6_40 -> m6_43  [key=2, style=dotted];
m6_41 -> m6_39  [color=blue, key=0, style=bold];
m6_75 -> m6_76  [key=0, style=solid];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_78  [key=2, style=dotted];
m6_76 -> m6_43  [key=2, style=dotted];
m6_77 -> m6_75  [color=blue, key=0, style=bold];
m6_99 -> m6_100  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_102  [key=2, style=dotted];
m6_100 -> m6_103  [key=2, style=dotted];
m6_101 -> m6_99  [color=blue, key=0, style=bold];
m6_107 -> m6_108  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_110  [key=2, style=dotted];
m6_108 -> m6_103  [key=2, style=dotted];
m6_109 -> m6_107  [color=blue, key=0, style=bold];
m6_126 -> m6_127  [key=0, style=solid];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_129  [key=2, style=dotted];
m6_127 -> m6_103  [key=2, style=dotted];
m6_128 -> m6_126  [color=blue, key=0, style=bold];
m6_165 -> m6_166  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_171 -> m6_172  [key=0, style=solid];
m6_166 -> m6_167  [key=0, style=solid];
m6_167 -> m6_165  [color=blue, key=0, style=bold];
m6_169 -> m6_170  [key=0, style=solid];
m6_170 -> m6_168  [color=blue, key=0, style=bold];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_22  [key=2, style=dotted];
m6_173 -> m6_171  [color=blue, key=0, style=bold];
m6_195 -> m6_196  [key=0, style=solid];
m6_198 -> m6_199  [key=0, style=solid];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_204  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_197 -> m6_195  [color=blue, key=0, style=bold];
m6_199 -> m6_200  [key=0, style=solid];
m6_200 -> m6_198  [color=blue, key=0, style=bold];
m6_201 -> m6_202  [key=0, style=solid];
m6_203 -> m6_201  [color=blue, key=0, style=bold];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_233  [key=2, style=dotted];
m6_231 -> m6_234  [key=2, style=dotted];
m6_230 -> m6_231  [key=0, style=solid];
m6_235 -> m6_236  [color=red, key=0, style=solid];
m6_238 -> m6_239  [color=red, key=0, style=solid];
m6_232 -> m6_230  [color=blue, key=0, style=bold];
m6_236 -> m6_237  [color=red, key=0, style=solid];
m6_237 -> m6_235  [color=blue, key=0, style=bold];
m6_239 -> m6_240  [color=red, key=0, style=solid];
m6_240 -> m6_238  [color=blue, key=0, style=bold];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_268  [key=2, style=dotted];
m6_262 -> m6_263  [key=0, style=solid];
m6_265 -> m6_266  [key=0, style=solid];
m6_269 -> m6_270  [color=red, key=0, style=solid];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_233  [key=2, style=dotted];
m6_264 -> m6_262  [color=blue, key=0, style=bold];
m6_267 -> m6_265  [color=blue, key=0, style=bold];
m6_270 -> m6_271  [color=red, key=0, style=solid];
m6_271 -> m6_269  [color=blue, key=0, style=bold];
m6_273 -> m6_274  [color=red, key=0, style=solid];
m6_274 -> m6_272  [color=blue, key=0, style=bold];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_18  [color=darkorchid, key=3, label="method methodReturn long ProcessingCount", style=bold];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_18  [key=2, style=dotted];
m6_34 -> m6_32  [color=blue, key=0, style=bold];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_146  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs", style=bold];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_146  [key=2, style=dotted];
m6_145 -> m6_143  [color=blue, key=0, style=bold];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_18  [color=darkorchid, key=3, label="method methodReturn long ScheduledCount", style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=2, style=dotted];
m6_17 -> m6_15  [color=blue, key=0, style=bold];
m6_38 -> m6_44  [key=0, style=solid];
m6_38 -> m6_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_38 -> m6_46  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_44  [color=darkorchid, key=3, label="Local variable string jobsSql", style=bold];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_22  [key=2, style=dotted];
m6_45 -> m6_48  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_49  [key=2, style=dotted];
m6_47 -> m6_38  [color=blue, key=0, style=bold];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_114  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> Queues", style=bold];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_112  [color=darkorchid, key=3, label="Local variable string queuesAndStatusSql", style=bold];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_22  [key=2, style=dotted];
m6_113 -> m6_48  [key=2, style=dotted];
m6_113 -> m6_115  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_119  [key=2, style=dotted];
m6_114 -> m6_116  [color=red, key=1, label=result, style=dashed];
m6_114 -> m6_117  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_115 -> m6_116  [color=red, key=0, style=solid];
m6_115 -> m6_117  [key=0, style=solid];
m6_116 -> m6_115  [color=red, key=0, style=solid];
m6_116 -> m6_120  [color=red, key=2, style=dotted];
m6_116 -> m6_94  [color=red, key=2, style=dotted];
m6_116 -> m6_64  [color=red, key=2, style=dotted];
m6_117 -> m6_118  [key=0, style=solid];
m6_118 -> m6_111  [color=blue, key=0, style=bold];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_38  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.SucceededJobDto> SucceededJobs", style=bold];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_38  [key=2, style=dotted];
m6_105 -> m6_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_106 -> m6_104  [color=blue, key=0, style=bold];
m6_18 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_22  [key=2, style=dotted];
m6_30 -> m6_23  [key=2, style=dotted];
m6_31 -> m6_18  [color=blue, key=0, style=bold];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_38  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FailedJobDto> FailedJobs", style=bold];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_38  [key=2, style=dotted];
m6_97 -> m6_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_98 -> m6_96  [color=blue, key=0, style=bold];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_38  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ScheduleDto> ScheduledJobs", style=bold];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_38  [key=2, style=dotted];
m6_73 -> m6_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_74 -> m6_72  [color=blue, key=0, style=bold];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_122  [color=darkorchid, key=3, label="Local variable string enqueuedJobsSql", style=bold];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_22  [key=2, style=dotted];
m6_123 -> m6_48  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_49  [key=2, style=dotted];
m6_124 -> m6_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_125 -> m6_121  [color=blue, key=0, style=bold];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_131  [color=darkorchid, key=3, label="Local variable string fetchedJobsSql", style=bold];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_22  [key=2, style=dotted];
m6_132 -> m6_48  [key=2, style=dotted];
m6_132 -> m6_134  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_138  [key=2, style=dotted];
m6_133 -> m6_135  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_133 -> m6_136  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_136  [key=0, style=solid];
m6_135 -> m6_134  [key=0, style=solid];
m6_135 -> m6_139  [key=2, style=dotted];
m6_135 -> m6_140  [key=2, style=dotted];
m6_135 -> m6_141  [key=2, style=dotted];
m6_135 -> m6_142  [key=2, style=dotted];
m6_135 -> m6_64  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_65  [key=2, style=dotted];
m6_137 -> m6_130  [color=blue, key=0, style=bold];
m6_275 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_20  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_33  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_45  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_46  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_73  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_80  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_84  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_87  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_97  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_105  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_113  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_123  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_124  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_132  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_135  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_144  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_148  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_152  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_158  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_175  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_180  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_213  [color=red, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_275 -> m6_249  [color=red, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m6_276 -> m6_202  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m6_277 -> m6_231  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_278 -> m6_266  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_35 -> m7_36  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_38  [key=2, style=dotted];
m7_36 -> m7_29  [key=2, style=dotted];
m7_37 -> m7_35  [color=blue, key=0, style=bold];
m7_24 -> m7_53  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_29  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_57  [key=2, style=dotted];
m7_54 -> m7_58  [key=2, style=dotted];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_24  [color=blue, key=0, style=bold];
m7_27 -> m7_59  [key=0, style=solid];
m7_27 -> m7_17  [color=darkorchid, key=3, label="Parameter variable string resourceName", style=bold];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_63  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_64  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_65  [key=2, style=dotted];
m7_62 -> m7_27  [color=blue, key=0, style=bold];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=2, style=dotted];
m7_32 -> m7_29  [key=2, style=dotted];
m7_33 -> m7_31  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m7_2 -> m7_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m7_2 -> m7_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_2 -> m7_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=0, style=solid];
m7_4 -> m7_11  [key=0, style=solid];
m7_4 -> m7_12  [key=2, style=dotted];
m7_6 -> m7_11  [key=0, style=solid];
m7_6 -> m7_12  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_13  [key=2, style=dotted];
m7_11 -> m7_2  [color=blue, key=0, style=bold];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_41  [color=crimson, key=0, style=bold];
m7_39 -> m7_42  [color=crimson, key=0, style=bold];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_44  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_45  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_46  [key=2, style=dotted];
m7_43 -> m7_39  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_29 -> m7_47  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_51  [key=2, style=dotted];
m7_47 -> m7_49  [color=darkseagreen4, key=1, label=connection, style=dashed];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_52  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_29  [color=blue, key=0, style=bold];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_23  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_17  [key=0, style=solid];
m7_15 -> m7_24  [key=2, style=dotted];
m7_16 -> m7_22  [key=0, style=solid];
m7_16 -> m7_25  [key=2, style=dotted];
m7_17 -> m7_18  [color=red, key=0, style=solid];
m7_17 -> m7_26  [key=2, style=dotted];
m7_17 -> m7_27  [key=2, style=dotted];
m7_18 -> m7_19  [color=red, key=0, style=solid];
m7_18 -> m7_28  [color=red, key=2, style=dotted];
m7_18 -> m7_18  [color=red, key=1, label=script, style=dashed];
m7_18 -> m7_20  [color=red, key=1, label=script, style=dashed];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_29  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_30  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_23  [key=2, style=dotted];
m7_22 -> m7_13  [color=blue, key=0, style=bold];
m7_66 -> m7_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_19  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_32  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m7_66 -> m7_53  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_10  [key=2, style=dotted];
m8_18 -> m8_11  [key=2, style=dotted];
m8_19 -> m8_17  [color=blue, key=0, style=bold];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [key=2, style=dotted];
m8_15 -> m8_13  [color=blue, key=0, style=bold];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.StateAndInvocationData GetStateAndInvocationData", style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_10  [key=2, style=dotted];
m8_4 -> m8_11  [key=2, style=dotted];
m8_4 -> m8_7  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_4 -> m8_8  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_10  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_12  [key=2, style=dotted];
m8_6 -> m8_9  [key=0, style=solid];
m8_9 -> m8_3  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_16  [key=2, style=dotted];
m8_22 -> m8_20  [color=blue, key=0, style=bold];
m8_23 -> m8_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredJobs", style=dashed];
m8_23 -> m8_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredJobs", style=dashed];
m8_23 -> m8_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredJobs", style=dashed];
m8_23 -> m8_18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredJobs", style=dashed];
m8_23 -> m8_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredJobs", style=dashed];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_22  [key=2, style=dotted];
m9_28 -> m9_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_29 -> m9_27  [color=blue, key=0, style=bold];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_3  [color=blue, key=0, style=bold];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_22  [key=2, style=dotted];
m9_35 -> m9_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_36 -> m9_34  [color=blue, key=0, style=bold];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_22  [key=2, style=dotted];
m9_54 -> m9_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_55 -> m9_53  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_18 -> m9_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_24  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
m9_19 -> m9_19  [color=darkorchid, key=3, label="Local variable string enqueueJobSql", style=bold];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_22  [key=2, style=dotted];
m9_20 -> m9_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_21 -> m9_18  [color=blue, key=0, style=bold];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_84  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_82 -> m9_87  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_87  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m9_83 -> m9_83  [color=darkorchid, key=3, label="Local variable string trimSql", style=bold];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_22  [key=2, style=dotted];
m9_84 -> m9_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_85 -> m9_82  [color=blue, key=0, style=bold];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_11  [color=darkorchid, key=3, label="method methodReturn bool Commit", style=bold];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_13  [key=2, style=dotted];
m9_6 -> m9_14  [key=2, style=dotted];
m9_6 -> m9_10  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_15  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_17  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [key=0, style=solid];
m9_9 -> m9_8  [key=0, style=solid];
m9_9 -> m9_16  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_5  [color=blue, key=0, style=bold];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_22  [key=2, style=dotted];
m9_71 -> m9_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_72 -> m9_70  [color=blue, key=0, style=bold];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_22  [key=2, style=dotted];
m9_77 -> m9_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_78 -> m9_76  [color=blue, key=0, style=bold];
m9_59 -> m9_60  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_62  [key=2, style=dotted];
m9_61 -> m9_59  [color=blue, key=0, style=bold];
m9_109 -> m9_110  [color=red, key=0, style=solid];
m9_109 -> m9_113  [color=red, key=1, label=string, style=dashed];
m9_110 -> m9_111  [color=red, key=0, style=solid];
m9_110 -> m9_22  [color=red, key=2, style=dotted];
m9_110 -> m9_112  [color=red, key=1, label="lambda expression", style=dashed];
m9_111 -> m9_109  [color=blue, key=0, style=bold];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_22  [key=2, style=dotted];
m9_48 -> m9_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_49 -> m9_47  [color=blue, key=0, style=bold];
m9_112 -> m9_113  [color=red, key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_25 -> m9_23  [color=blue, key=0, style=bold];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=2, style=dotted];
m9_31 -> m9_26  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_32 -> m9_30  [color=blue, key=0, style=bold];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_26  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_39 -> m9_37  [color=blue, key=0, style=bold];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_46  [key=2, style=dotted];
m9_44 -> m9_26  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_45 -> m9_43  [color=blue, key=0, style=bold];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_46  [key=2, style=dotted];
m9_51 -> m9_26  [key=2, style=dotted];
m9_50 -> m9_51  [key=0, style=solid];
m9_52 -> m9_50  [color=blue, key=0, style=bold];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_26  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_58 -> m9_56  [color=blue, key=0, style=bold];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_26  [key=2, style=dotted];
m9_67 -> m9_68  [key=0, style=solid];
m9_69 -> m9_67  [color=blue, key=0, style=bold];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_26  [key=2, style=dotted];
m9_73 -> m9_74  [key=0, style=solid];
m9_75 -> m9_73  [color=blue, key=0, style=bold];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_26  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_81 -> m9_79  [color=blue, key=0, style=bold];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_26  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_88 -> m9_86  [color=blue, key=0, style=bold];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_26  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_26  [key=2, style=dotted];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_97  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_98  [key=0, style=solid];
m9_98 -> m9_94  [color=blue, key=0, style=bold];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_26  [key=2, style=dotted];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_26  [key=2, style=dotted];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_107  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_108  [key=0, style=solid];
m9_108 -> m9_104  [color=blue, key=0, style=bold];
m9_113 -> m9_114  [color=red, key=0, style=solid];
m9_113 -> m9_33  [color=red, key=2, style=dotted];
m9_113 -> m9_26  [color=red, key=2, style=dotted];
m9_114 -> m9_112  [color=blue, key=0, style=bold];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_22  [key=2, style=dotted];
m9_41 -> m9_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_42 -> m9_40  [color=blue, key=0, style=bold];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_99 -> m9_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_99 -> m9_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_102  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m9_100 -> m9_107  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m9_100 -> m9_90  [color=darkorchid, key=3, label="Local variable string insertSql", style=bold];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_22  [key=2, style=dotted];
m9_102 -> m9_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_105  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m9_101 -> m9_107  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m9_101 -> m9_101  [color=darkorchid, key=3, label="Local variable string updateSql", style=bold];
m9_103 -> m9_99  [color=blue, key=0, style=bold];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_63 -> m9_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_68  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m9_64 -> m9_64  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_22  [key=2, style=dotted];
m9_65 -> m9_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_66 -> m9_63  [color=blue, key=0, style=bold];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_89 -> m9_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_89 -> m9_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_92  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m9_90 -> m9_97  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m9_90 -> m9_90  [color=darkorchid, key=3, label="Local variable string insertSql", style=bold];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_22  [key=2, style=dotted];
m9_92 -> m9_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_95  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m9_91 -> m9_97  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m9_91 -> m9_91  [color=darkorchid, key=3, label="Local variable string updateSql", style=bold];
m9_93 -> m9_89  [color=blue, key=0, style=bold];
m9_115 -> m9_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_20  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_48  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_54  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_60  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_65  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_71  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_77  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_84  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_92  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_102  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_115 -> m9_110  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m9_116 -> m9_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_117 -> m9_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_118 -> m9_24  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
m9_119 -> m9_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_120 -> m9_31  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m9_121 -> m9_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_122 -> m9_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_123 -> m9_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_124 -> m9_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m9_125 -> m9_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_126 -> m9_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m9_127 -> m9_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_128 -> m9_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_129 -> m9_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_130 -> m9_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_131 -> m9_68  [color=darkseagreen4, key=1, label=double, style=dashed];
m9_132 -> m9_68  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m9_133 -> m9_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_134 -> m9_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_135 -> m9_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_136 -> m9_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_137 -> m9_87  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_138 -> m9_87  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_139 -> m9_87  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m9_140 -> m9_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_140 -> m9_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_141 -> m9_95  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m9_141 -> m9_97  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m9_142 -> m9_97  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m9_143 -> m9_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_143 -> m9_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_144 -> m9_105  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m9_144 -> m9_107  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m9_145 -> m9_107  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m9_146 -> m9_113  [color=red, key=1, label=string, style=dashed];
m9_147 -> m9_113  [color=red, key=1, label="System.TimeSpan", style=dashed];
m10_26 -> m10_27  [key=0, style=solid];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=2, style=dotted];
m10_28 -> m10_26  [color=blue, key=0, style=bold];
m10_22 -> m10_23  [color=red, key=0, style=solid];
m10_22 -> m10_31  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_22 -> m10_43  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_22 -> m10_55  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_22 -> m10_66  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_22 -> m10_79  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_22 -> m10_91  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_22 -> m10_102  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_22 -> m10_114  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_22 -> m10_123  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_22 -> m10_133  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m10_23 -> m10_24  [color=red, key=0, style=solid];
m10_23 -> m10_25  [color=red, key=2, style=dotted];
m10_24 -> m10_22  [color=blue, key=0, style=bold];
m10_113 -> m10_114  [key=0, style=solid];
m10_114 -> m10_115  [key=0, style=solid];
m10_114 -> m10_38  [key=2, style=dotted];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_22  [key=2, style=dotted];
m10_116 -> m10_117  [key=0, style=solid];
m10_116 -> m10_53  [key=2, style=dotted];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_53  [key=2, style=dotted];
m10_118 -> m10_119  [key=0, style=solid];
m10_118 -> m10_40  [key=2, style=dotted];
m10_119 -> m10_120  [key=0, style=solid];
m10_119 -> m10_41  [key=2, style=dotted];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_26  [key=2, style=dotted];
m10_121 -> m10_113  [color=blue, key=0, style=bold];
m10_132 -> m10_133  [key=0, style=solid];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_38  [key=2, style=dotted];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_22  [key=2, style=dotted];
m10_135 -> m10_136  [key=0, style=solid];
m10_135 -> m10_39  [key=2, style=dotted];
m10_136 -> m10_137  [key=0, style=solid];
m10_136 -> m10_53  [key=2, style=dotted];
m10_137 -> m10_138  [key=0, style=solid];
m10_137 -> m10_53  [key=2, style=dotted];
m10_138 -> m10_139  [key=0, style=solid];
m10_138 -> m10_40  [key=2, style=dotted];
m10_139 -> m10_140  [key=0, style=solid];
m10_139 -> m10_41  [key=2, style=dotted];
m10_140 -> m10_141  [key=0, style=solid];
m10_140 -> m10_112  [key=2, style=dotted];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_26  [key=2, style=dotted];
m10_142 -> m10_132  [color=blue, key=0, style=bold];
m10_90 -> m10_91  [key=0, style=solid];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_38  [key=2, style=dotted];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_22  [key=2, style=dotted];
m10_93 -> m10_94  [key=0, style=solid];
m10_93 -> m10_39  [key=2, style=dotted];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_53  [key=2, style=dotted];
m10_95 -> m10_96  [key=0, style=solid];
m10_95 -> m10_53  [key=2, style=dotted];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_40  [key=2, style=dotted];
m10_97 -> m10_98  [key=0, style=solid];
m10_97 -> m10_41  [key=2, style=dotted];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_53  [key=2, style=dotted];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_26  [key=2, style=dotted];
m10_100 -> m10_90  [color=blue, key=0, style=bold];
m10_78 -> m10_79  [key=0, style=solid];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_38  [key=2, style=dotted];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_22  [key=2, style=dotted];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_39  [key=2, style=dotted];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_53  [key=2, style=dotted];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_40  [key=2, style=dotted];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_41  [key=2, style=dotted];
m10_85 -> m10_86  [key=0, style=solid];
m10_85 -> m10_53  [key=2, style=dotted];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_53  [key=2, style=dotted];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_53  [key=2, style=dotted];
m10_88 -> m10_89  [key=0, style=solid];
m10_88 -> m10_26  [key=2, style=dotted];
m10_89 -> m10_78  [color=blue, key=0, style=bold];
m10_42 -> m10_43  [key=0, style=solid];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_38  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_22  [key=2, style=dotted];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_39  [key=2, style=dotted];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_53  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_40  [key=2, style=dotted];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_41  [key=2, style=dotted];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_53  [key=2, style=dotted];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_53  [key=2, style=dotted];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_26  [key=2, style=dotted];
m10_52 -> m10_42  [color=blue, key=0, style=bold];
m10_101 -> m10_102  [key=0, style=solid];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_38  [key=2, style=dotted];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_22  [key=2, style=dotted];
m10_104 -> m10_105  [key=0, style=solid];
m10_104 -> m10_39  [key=2, style=dotted];
m10_105 -> m10_106  [key=0, style=solid];
m10_105 -> m10_53  [key=2, style=dotted];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_53  [key=2, style=dotted];
m10_107 -> m10_108  [key=0, style=solid];
m10_107 -> m10_40  [key=2, style=dotted];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_41  [key=2, style=dotted];
m10_109 -> m10_110  [key=0, style=solid];
m10_109 -> m10_112  [key=2, style=dotted];
m10_110 -> m10_111  [key=0, style=solid];
m10_110 -> m10_26  [key=2, style=dotted];
m10_111 -> m10_101  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_16  [color=green, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_5  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_6  [key=2, style=dotted];
m10_2 -> m10_7  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_0  [color=blue, key=0, style=bold];
m10_14 -> m10_15  [color=red, key=0, style=solid];
m10_15 -> m10_16  [color=green, key=0, style=solid];
m10_15 -> m10_17  [color=red, key=0, style=solid];
m10_16 -> m10_17  [color=green, key=0, style=solid];
m10_16 -> m10_0  [color=green, key=2, style=dotted];
m10_17 -> m10_14  [color=blue, key=0, style=bold];
m10_9 -> m10_10  [color=red, key=0, style=solid];
m10_10 -> m10_11  [color=green, key=0, style=solid];
m10_10 -> m10_13  [color=red, key=2, style=dotted];
m10_11 -> m10_12  [color=green, key=0, style=solid];
m10_12 -> m10_9  [color=blue, key=0, style=bold];
m10_65 -> m10_66  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_38  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_22  [key=2, style=dotted];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_39  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_53  [key=2, style=dotted];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_53  [key=2, style=dotted];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_40  [key=2, style=dotted];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_41  [key=2, style=dotted];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_53  [key=2, style=dotted];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_53  [key=2, style=dotted];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_53  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_26  [key=2, style=dotted];
m10_77 -> m10_65  [color=blue, key=0, style=bold];
m10_54 -> m10_55  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_38  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_22  [key=2, style=dotted];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_39  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_53  [key=2, style=dotted];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_40  [key=2, style=dotted];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_41  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_53  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_53  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_26  [key=2, style=dotted];
m10_64 -> m10_54  [color=blue, key=0, style=bold];
m10_18 -> m10_19  [color=green, key=0, style=solid];
m10_19 -> m10_20  [color=green, key=0, style=solid];
m10_19 -> m10_21  [color=green, key=2, style=dotted];
m10_20 -> m10_18  [color=blue, key=0, style=bold];
m10_122 -> m10_123  [key=0, style=solid];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_38  [key=2, style=dotted];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_22  [key=2, style=dotted];
m10_125 -> m10_126  [key=0, style=solid];
m10_125 -> m10_39  [key=2, style=dotted];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_53  [key=2, style=dotted];
m10_127 -> m10_128  [key=0, style=solid];
m10_127 -> m10_40  [key=2, style=dotted];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_41  [key=2, style=dotted];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_53  [key=2, style=dotted];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_26  [key=2, style=dotted];
m10_131 -> m10_122  [color=blue, key=0, style=bold];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_38  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_22  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_39  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_40  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_41  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_26  [key=2, style=dotted];
m10_37 -> m10_30  [color=blue, key=0, style=bold];
m10_143 -> m10_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_36  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_44  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_51  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_56  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_63  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_67  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_76  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_80  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_88  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_92  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_99  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_103  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_110  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_115  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_120  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_124  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_130  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_134  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m10_143 -> m10_141  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m11_7 -> m11_9  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m11_7 -> m11_8  [key=0, style=solid];
m11_9 -> m11_10  [color=green, key=0, style=solid];
m11_9 -> m11_12  [color=green, key=2, style=dotted];
m11_8 -> m11_9  [color=green, key=0, style=solid];
m11_8 -> m11_11  [key=2, style=dotted];
m11_10 -> m11_7  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_2  [color=blue, key=0, style=bold];
m11_13 -> m11_14  [color=green, key=0, style=solid];
m11_13 -> m11_15  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m11_14 -> m11_15  [color=green, key=0, style=solid];
m11_14 -> m11_17  [color=green, key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_18  [key=2, style=dotted];
m11_16 -> m11_13  [color=blue, key=0, style=bold];
}
