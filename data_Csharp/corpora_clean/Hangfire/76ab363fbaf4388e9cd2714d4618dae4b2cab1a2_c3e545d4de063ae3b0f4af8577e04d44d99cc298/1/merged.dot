digraph  {
n0 [label="Entry HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n1 [label="transaction.InsertToList(''succeeded'', context.JobId)", span="26-26", cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n2 [label="transaction.TrimList(''succeeded'', 0, 99)", span="27-27", cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)"];
n3 [label="Exit HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n5 [label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)"];
n6 [label="Entry HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="30-30", cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n7 [label="transaction.RemoveFromList(''succeeded'', context.JobId)", span="33-33", cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n8 [label="Exit HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="30-30", cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n9 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)"];
m0_0 [label="Entry HangFire.Storage.IAtomicWriteTransaction.Commit()", span="12-12", cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs"];
m0_1 [label="Exit HangFire.Storage.IAtomicWriteTransaction.Commit()", span="12-12", cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs"];
m3_13 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="RedisAtomicWriteTransaction.cs"];
m3_17 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RedisAtomicWriteTransaction.cs"];
m3_0 [label="Entry HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_1 [label="_transaction = transaction", span="11-11", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_2 [label="var storage = new RedisStoredValues(_transaction)", span="13-13", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_3 [label="Values = storage", span="15-15", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_4 [label="Sets = storage", span="16-16", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_5 [label="Lists = storage", span="17-17", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_6 [label="Queues = storage", span="18-18", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_7 [label="Jobs = storage", span="19-19", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_8 [label="Exit HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_14 [label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs"];
m3_15 [label="_transaction.Dispose()", span="35-35", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs"];
m3_16 [label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs"];
m3_10 [label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs"];
m3_11 [label="return _transaction.Commit();", span="30-30", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs"];
m3_12 [label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs"];
m3_9 [label="Entry HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15", cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs"];
m3_18 [label="HangFire.Redis.RedisAtomicWriteTransaction", span="", file="RedisAtomicWriteTransaction.cs"];
m4_11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisStoredValues.cs"];
m4_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisStoredValues.cs"];
m4_12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RedisStoredValues.cs"];
m4_13 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisStoredValues.cs"];
m4_10 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="RedisStoredValues.cs"];
m4_21 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="RedisStoredValues.cs"];
m4_14 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisStoredValues.cs"];
m4_15 [label="Entry HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40", cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="RedisStoredValues.cs"];
m4_18 [label="return _handlers[stateName].ToArray();", span="47-47", cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="RedisStoredValues.cs"];
m4_16 [label="stateName == null || !_handlers.ContainsKey(stateName)", span="42-42", cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="RedisStoredValues.cs"];
m4_17 [label="return Enumerable.Empty<IStateHandler>();", span="44-44", cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="RedisStoredValues.cs"];
m4_19 [label="Exit HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40", cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="RedisStoredValues.cs"];
m4_0 [label="Entry HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs"];
m4_5 [label="!_handlers.ContainsKey(handler.StateName)", span="32-32", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs"];
m4_6 [label="_handlers.Add(handler.StateName, new List<IStateHandler>())", span="34-34", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs"];
m4_7 [label="_handlers[handler.StateName].Add(handler)", span="37-37", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs"];
m4_3 [label="handler.StateName == null", span="30-30", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs"];
m4_1 [label="handler == null", span="29-29", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs"];
m4_4 [label="throw new ArgumentException(''The StateName property of the given state handler must be non null.'', ''handler'');", span="30-30", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs"];
m4_2 [label="throw new ArgumentNullException(''handler'');", span="29-29", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs"];
m4_8 [label="Exit HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="RedisStoredValues.cs"];
m4_20 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="RedisStoredValues.cs"];
m4_22 [label="HangFire.States.StateHandlerCollection", span="", file="RedisStoredValues.cs"];
m5_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerFetcher.cs"];
m5_29 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="SqlServerFetcher.cs"];
m5_26 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerFetcher.cs"];
m5_0 [label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs"];
m5_1 [label="_connection = connection", span="21-21", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs"];
m5_2 [label="_queues = queues", span="22-22", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs"];
m5_3 [label="Exit HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs"];
m5_27 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerFetcher.cs"];
m5_25 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerFetcher.cs"];
m5_20 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerFetcher.cs"];
m5_28 [label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23", cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="SqlServerFetcher.cs"];
m5_21 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerFetcher.cs"];
m5_4 [label="Entry HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_12 [label="queueName = idAndQueue.Queue", span="57-57", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="SqlServerFetcher.cs"];
m5_7 [label="var idAndQueue = _connection.Query(@''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt is null\r\nand Queue in @queues'',\r\n                    new { queues = _queues })\r\n                    .SingleOrDefault()", span="33-40", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_11 [label="job = _connection.Query<Job>(\r\n                        @''select Id, InvocationData, Arguments from HangFire.Job where Id = @id'',\r\n                        parameters)\r\n                        .SingleOrDefault()", span="52-55", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_13 [label="job == null", span="60-60", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_18 [label="return new JobPayload(job.Id.ToString(), queueName, invocationData)\r\n            {\r\n                Arguments = job.Arguments\r\n            };", span="71-74", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_6 [label="string queueName = null", span="28-28", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_8 [label="idAndQueue != null", span="42-42", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_10 [label="parameters.Add(''@id'', idAndQueue.JobId, dbType: DbType.Int32)", span="50-50", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_9 [label="var parameters = new DynamicParameters()", span="49-49", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_16 [label="job == null", span="67-67", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_17 [label="var invocationData = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="69-69", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_5 [label="Job job = null", span="27-27", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_14 [label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="62-62", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_15 [label="return null;", span="64-64", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_19 [label="Exit HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs"];
m5_22 [label="Entry DynamicParameters.cstr", span="", cluster="DynamicParameters.cstr", file="SqlServerFetcher.cs"];
m5_23 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerFetcher.cs"];
m5_30 [label="HangFire.SqlServer.SqlServerFetcher", span="", file="SqlServerFetcher.cs"];
m6_94 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SqlServerMonitoringApi.cs"];
m6_86 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m6_87 [label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="166-168", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m6_88 [label="var result = new List<ServerDto>()", span="170-170", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m6_89 [label=servers, span="172-172", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m6_91 [label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="175-182", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m6_92 [label="return result;", span="185-185", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m6_90 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="174-174", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m6_93 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m6_233 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="SqlServerMonitoringApi.cs"];
m6_79 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m6_80 [label="return GetTimelineStats(''succeeded'');", span="156-156", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m6_81 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m6_0 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs"];
m6_1 [label="_connection = connection", span="22-22", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs"];
m6_2 [label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="23-25", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs"];
m6_3 [label="_connection.EnlistTransaction(Transaction.Current)", span="27-27", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs"];
m6_4 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs"];
m6_59 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerMonitoringApi.cs"];
m6_234 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs"];
m6_60 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m6_66 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="130-130", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m6_67 [label="return JobMethod.Deserialize(data);", span="134-134", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m6_68 [label=JobLoadException, span="136-136", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m6_69 [label="return null;", span="138-138", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m6_70 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m6_138 [label="Entry List<KeyValuePair<string, DequeuedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, DequeuedJobDto>>.cstr", file="SqlServerMonitoringApi.cs"];
m6_162 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs"];
m6_71 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="SqlServerMonitoringApi.cs"];
m6_78 [label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="SqlServerMonitoringApi.cs"];
m6_119 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerMonitoringApi.cs"];
m6_229 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="SqlServerMonitoringApi.cs"];
m6_141 [label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="SqlServerMonitoringApi.cs"];
m6_174 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m6_175 [label="return GetNumberOfJobsByStateName(SucceededState.Name);", span="348-348", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m6_176 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m6_8 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m6_9 [label="_transaction.Complete()", span="32-32", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m6_10 [label="_transaction.Dispose()", span="33-33", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m6_11 [label="_connection.Dispose()", span="34-34", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m6_12 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m6_50 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_51 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="114-114", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_52 [label=jobs, span="116-116", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_54 [label="var dto = selector(DeserializeJobMethod(job.InvocationData), stateData)", span="119-119", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_55 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="121-122", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_56 [label="return new JobList<TDto>(result);", span="125-125", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_53 [label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="118-118", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_57 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_62 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SqlServerMonitoringApi.cs"];
m6_43 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="SqlServerMonitoringApi.cs"];
m6_129 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerMonitoringApi.cs"];
m6_102 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SqlServerMonitoringApi.cs"];
m6_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerMonitoringApi.cs"];
m6_161 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs"];
m6_42 [label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="SqlServerMonitoringApi.cs"];
m6_83 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m6_84 [label="return GetTimelineStats(''failed'');", span="161-161", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m6_85 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m6_177 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_178 [label="var stats = new StatisticsDto()", span="353-353", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_179 [label="string sql = @''\r\nselect [State], count(id) as [Count] From HangFire.Job group by [State]\r\nselect count(Id) from HangFire.Server\r\nselect count(distinct Queue) from HangFire.JobQueue\r\nselect IntValue from HangFire.Value where [Key] = 'stats:succeeded'\r\n''", span="355-360", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m6_183 [label="stats.Enqueued = getCountIfExists(EnqueuedState.Name)", span="368-368", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_184 [label="stats.Failed = getCountIfExists(FailedState.Name)", span="369-369", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_185 [label="stats.Processing = getCountIfExists(ProcessingState.Name)", span="370-370", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_186 [label="stats.Scheduled = getCountIfExists(ScheduledState.Name)", span="371-371", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_187 [label="stats.Servers = multi.Read<int>().Single()", span="373-373", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_188 [label="stats.Queues = multi.Read<int>().Single()", span="374-374", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_189 [label="stats.Succeeded = multi.Read<int>().SingleOrDefault()", span="376-376", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m6_190 [label="return stats;", span="379-379", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_180 [label="var multi = _connection.QueryMultiple(sql)", span="362-362", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_181 [label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="364-364", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_182 [label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_191 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m6_63 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="SqlServerMonitoringApi.cs"];
m6_103 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerMonitoringApi.cs"];
m6_192 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SqlServerMonitoringApi.cs"];
m6_194 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerMonitoringApi.cs"];
m6_27 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="60-60", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m6_28 [label="return GetNumberOfJobsByStateName(FailedState.Name);", span="62-62", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m6_29 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="60-60", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m6_95 [label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="SqlServerMonitoringApi.cs"];
m6_226 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerMonitoringApi.cs"];
m6_142 [label="Entry Unk.DeserializeJobMethod", span="", cluster="Unk.DeserializeJobMethod", file="SqlServerMonitoringApi.cs"];
m6_7 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="SqlServerMonitoringApi.cs"];
m6_5 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlServerMonitoringApi.cs"];
m6_35 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_36 [label="return GetJobs(\r\n                from, count,\r\n                ProcessingState.Name,\r\n                (method, stateData) => new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                });", span="80-88", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_37 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_140 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerMonitoringApi.cs"];
m6_146 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_205 [label="var endDate = DateTime.UtcNow", span="384-384", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_212 [label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="392-392", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_206 [label="var dates = new List<DateTime>()", span="385-385", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_209 [label="dates.Add(endDate)", span="388-388", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_210 [label="endDate = endDate.AddHours(-1)", span="389-389", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_207 [label="var i = 0", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_219 [label="i < dates.Count", span="404-404", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_221 [label="result.Add(dates[i], value)", span="407-407", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_208 [label="i < 24", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_211 [label="i++", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_213 [label="var valuesMap = _connection.Query(\r\n                @''select [Key], IntValue from HangFire.Value where [Key] in @keys'',\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.IntValue)", span="393-396", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m6_214 [label=keys, span="398-398", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_215 [label="!valuesMap.ContainsKey(key)", span="400-400", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_216 [label="valuesMap.Add(key, 0)", span="400-400", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_220 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="406-406", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_217 [label="var result = new Dictionary<DateTime, long>()", span="403-403", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_218 [label="var i = 0", span="404-404", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_223 [label="return result;", span="410-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_222 [label="i++", span="404-404", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_224 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_261 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs"];
m6_227 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerMonitoringApi.cs"];
m6_13 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerMonitoringApi.cs"];
m6_82 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="413-413", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_241 [label="var endDate = DateTime.UtcNow.Date", span="415-415", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_248 [label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="426-426", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_242 [label="var startDate = endDate.AddDays(-7)", span="416-416", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_244 [label="startDate <= endDate", span="419-419", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_245 [label="dates.Add(endDate)", span="421-421", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_246 [label="endDate = endDate.AddDays(-1)", span="422-422", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_243 [label="var dates = new List<DateTime>()", span="417-417", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_247 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="425-425", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_257 [label="result.Add(dates[i], value)", span="442-442", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_255 [label="i < stringDates.Count", span="439-439", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_249 [label="var valuesMap = _connection.Query(\r\n                @''select [Key], IntValue from HangFire.Value where [Key] in @keys'',\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.IntValue)", span="428-431", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m6_250 [label=keys, span="433-433", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_251 [label="!valuesMap.ContainsKey(key)", span="435-435", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_252 [label="valuesMap.Add(key, 0)", span="435-435", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_256 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="441-441", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_253 [label="var result = new Dictionary<DateTime, long>()", span="438-438", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_254 [label="var i = 0", span="439-439", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_259 [label="return result;", span="445-445", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_258 [label="i++", span="439-439", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_260 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="413-413", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m6_150 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_151 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.JobHistory where JobId = @id order by CreatedAt desc''", span="317-320", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_152 [label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="322-322", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_153 [label="var job = multi.Read<Job>().SingleOrDefault()", span="324-324", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_156 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="327-327", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_157 [label="var history =\r\n                    multi.Read<JobHistory>()\r\n                        .ToList()\r\n                        .Select(x => JobHelper.FromJson<Dictionary<string, string>>(x.Data))\r\n                        .ToList()", span="328-332", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_154 [label="job == null", span="325-325", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_158 [label="return new JobDetailsDto\r\n                {\r\n                    Arguments = JobHelper.FromJson<string[]>(job.Arguments),\r\n                    CreatedAt = job.CreatedAt,\r\n                    State = job.State,\r\n                    Method = DeserializeJobMethod(job.InvocationData),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", span="334-342", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_155 [label="return null;", span="325-325", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_159 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m6_228 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs"];
m6_65 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerMonitoringApi.cs"];
m6_14 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerMonitoringApi.cs"];
m6_164 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SqlServerMonitoringApi.cs"];
m6_24 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", span="51-51", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs"];
m6_25 [label="return _connection.Query<int>(\r\n                @''select count(JobId) from HangFire.JobQueue ''\r\n                + @''where Queue = @queue and FetchedAt is not NULL'',\r\n                new { queue = queue })\r\n                .Single();", span="53-57", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs"];
m6_26 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", span="51-51", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs"];
m6_19 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m6_20 [label="return _connection.Query<int>(\r\n                @''select count(JobId) from HangFire.JobQueue '' \r\n                + @''where Queue = @queue and FetchedAt is NULL'',\r\n                new { queue = queue })\r\n                .Single();", span="44-48", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m6_21 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m6_6 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SqlServerMonitoringApi.cs"];
m6_49 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="SqlServerMonitoringApi.cs"];
m6_147 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m6_148 [label="return GetHourlyTimelineStats(''failed'');", span="312-312", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m6_149 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m6_272 [label="Entry lambda expression", span="431-431", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_39 [label="Entry lambda expression", span="83-88", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_40 [label="new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", span="83-88", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_41 [label="Exit lambda expression", span="83-88", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_75 [label="Entry lambda expression", span="147-151", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_76 [label="new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="147-151", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_77 [label="Exit lambda expression", span="147-151", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_99 [label="Entry lambda expression", span="194-201", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_100 [label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="194-201", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_101 [label="Exit lambda expression", span="194-201", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_107 [label="Entry lambda expression", span="210-214", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_108 [label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="210-214", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_109 [label="Exit lambda expression", span="210-214", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_126 [label="Entry lambda expression", span="266-270", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_127 [label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                }", span="266-270", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_128 [label="Exit lambda expression", span="266-270", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_165 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_168 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_171 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_166 [label="x.Name", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_167 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_169 [label="x.Value", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_170 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_172 [label="JobHelper.FromJson<Dictionary<string, string>>(x.Data)", span="331-331", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_173 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_195 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_198 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_202 [label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_196 [label="x.State", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_197 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_199 [label="x.Count", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_200 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_201 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_203 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_231 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="392-392", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_230 [label="Entry lambda expression", span="392-392", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_235 [label="Entry lambda expression", span="396-396", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_238 [label="Entry lambda expression", span="396-396", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_232 [label="Exit lambda expression", span="392-392", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_236 [label="(string)x.Key", span="396-396", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m6_237 [label="Exit lambda expression", span="396-396", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_239 [label="(long)x.IntValue", span="396-396", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m6_240 [label="Exit lambda expression", span="396-396", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_266 [label="String.Format(''stats:{0}:{1}'', type, x)", span="426-426", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_262 [label="Entry lambda expression", span="425-425", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_265 [label="Entry lambda expression", span="426-426", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_269 [label="Entry lambda expression", span="431-431", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_263 [label="x.ToString(''yyyy-MM-dd'')", span="425-425", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_264 [label="Exit lambda expression", span="425-425", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_267 [label="Exit lambda expression", span="426-426", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_270 [label="(string)x.Key", span="431-431", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m6_271 [label="Exit lambda expression", span="431-431", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_273 [label="(long)x.IntValue", span="431-431", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m6_274 [label="Exit lambda expression", span="431-431", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m6_32 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="73-73", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs"];
m6_33 [label="return GetNumberOfJobsByStateName(ProcessingState.Name);", span="75-75", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs"];
m6_34 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="73-73", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs"];
m6_143 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m6_144 [label="return GetHourlyTimelineStats(''succeeded'');", span="307-307", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m6_145 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m6_163 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerMonitoringApi.cs"];
m6_225 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs"];
m6_120 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerMonitoringApi.cs"];
m6_193 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="SqlServerMonitoringApi.cs"];
m6_58 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerMonitoringApi.cs"];
m6_23 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerMonitoringApi.cs"];
m6_15 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m6_16 [label="return GetNumberOfJobsByStateName(ScheduledState.Name);", span="39-39", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m6_17 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m6_38 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_44 [label="string jobsSql = @''\r\nselect * from (select *, row_number() over (order by CreatedAt desc) as row_num\r\nfrom HangFire.Job where State = @stateName) as j where j.row_num between @start and @end\r\n''", span="97-100", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_45 [label="var jobs = _connection.Query<Job>(\r\n                jobsSql,\r\n                new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                .ToList()", span="102-105", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_46 [label="return DeserializeJobs(jobs, selector);", span="107-107", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_47 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m6_48 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerMonitoringApi.cs"];
m6_64 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs"];
m6_160 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="SqlServerMonitoringApi.cs"];
m6_110 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SqlServerMonitoringApi.cs"];
m6_111 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m6_112 [label="string queuesAndStatusSql = @''\r\nselect distinct [Queue],\r\n	(select count(JobId) from HangFire.JobQueue as a where q.Queue = a.Queue and a.FetchedAt is null) as Enqueued,\r\n	(select count(JobId) from HangFire.JobQueue as b where q.Queue = b.Queue and b.FetchedAt is not null) as Fetched\r\nfrom HangFire.[JobQueue] as q\r\n''", span="226-231", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m6_113 [label="var queues = _connection.Query<QueueStatusDto>(queuesAndStatusSql).ToList()", span="233-233", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m6_114 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="234-234", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m6_115 [label=queues, span="236-236", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m6_116 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue.Queue,\r\n                    Length = queue.Enqueued,\r\n                    Dequeued = queue.Fetched,\r\n                    FirstJobs = new List<KeyValuePair<string, EnqueuedJobDto>>() // TODO: implement\r\n                })", span="238-244", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m6_117 [label="return result;", span="247-247", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m6_118 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m6_268 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="SqlServerMonitoringApi.cs"];
m6_104 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_105 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.Name,\r\n                (method, stateData) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="206-214", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_106 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_18 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs"];
m6_30 [label="return _connection.Query<int>(\r\n                @''select count(Id) from HangFire.Job where State = @state'',\r\n                new { state = stateName })\r\n                .Single();", span="67-70", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs"];
m6_31 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs"];
m6_61 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="SqlServerMonitoringApi.cs"];
m6_96 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_97 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                FailedState.Name,\r\n                (method, stateData) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                });", span="190-201", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_98 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_72 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_73 [label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.Name,\r\n                (method, stateData) => new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="144-151", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_74 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m6_139 [label="Entry KeyValuePair<string, DequeuedJobDto>.cstr", span="", cluster="KeyValuePair<string, DequeuedJobDto>.cstr", file="SqlServerMonitoringApi.cs"];
m6_121 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_122 [label="string enqueuedJobsSql = @''\r\nselect * from\r\n(select j.*, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is null) as r\r\nwhere r.row_num between @start and @end''", span="252-257", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_123 [label="var jobs = _connection.Query<Job>(\r\n                enqueuedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="259-262", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_124 [label="return DeserializeJobs(\r\n                jobs,\r\n                (method, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                });", span="264-270", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_125 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_204 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerMonitoringApi.cs"];
m6_130 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_131 [label="string fetchedJobsSql = @''\r\nselect * from\r\n(select j.*, jq.FetchedAt, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is not null) as r\r\nwhere r.row_num between @start and @end''", span="275-280", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_132 [label="var jobs = _connection.Query<Job>(\r\n                fetchedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="282-285", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_133 [label="var result = new List<KeyValuePair<string, DequeuedJobDto>>(jobs.Count)", span="287-287", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_134 [label=jobs, span="289-289", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_135 [label="result.Add(new KeyValuePair<string, DequeuedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new DequeuedJobDto\r\n                    {\r\n                        Method = DeserializeJobMethod(job.InvocationData),\r\n                        State = job.State,\r\n                        CreatedAt = job.CreatedAt,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="291-299", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_136 [label="return new JobList<DequeuedJobDto>(result);", span="302-302", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_137 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m6_275 [label="HangFire.SqlServer.SqlServerMonitoringApi", span="", file="SqlServerMonitoringApi.cs"];
m6_276 [label=countByStates, span="", file="SqlServerMonitoringApi.cs"];
m6_277 [label=string, span="", file="SqlServerMonitoringApi.cs"];
m6_278 [label=string, span="", file="SqlServerMonitoringApi.cs"];
m7_12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerStorage.cs"];
m7_35 [label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69", cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs"];
m7_36 [label="return new SqlStorageConnection(this, CreateAndOpenConnection());", span="71-71", cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs"];
m7_37 [label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69", cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs"];
m7_34 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerStorage.cs"];
m7_26 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SqlServerStorage.cs"];
m7_38 [label="Entry HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="16-16", cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlServerStorage.cs"];
m7_28 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="SqlServerStorage.cs"];
m7_24 [label="Entry HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs"];
m7_53 [label="var connection = CreateAndOpenConnection()", span="91-91", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs"];
m7_54 [label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="93-93", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs"];
m7_55 [label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="94-94", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs"];
m7_56 [label="Exit HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs"];
m7_45 [label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33", cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="SqlServerStorage.cs"];
m7_57 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerStorage.cs"];
m7_52 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="SqlServerStorage.cs"];
m7_51 [label="Entry SqlConnection.cstr", span="", cluster="SqlConnection.cstr", file="SqlServerStorage.cs"];
m7_27 [label="Entry HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs"];
m7_59 [label="var stream = assembly.GetManifestResourceStream(resourceName)", span="100-100", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs"];
m7_60 [label="var reader = new StreamReader(stream)", span="101-101", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs"];
m7_61 [label="return reader.ReadToEnd();", span="103-103", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs"];
m7_62 [label="Exit HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs"];
m7_63 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerStorage.cs"];
m7_31 [label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64", cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs"];
m7_32 [label="return new SqlServerMonitoringApi(CreateAndOpenConnection());", span="66-66", cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs"];
m7_33 [label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64", cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs"];
m7_44 [label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34", cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="SqlServerStorage.cs"];
m7_2 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_3 [label="connectionString == null", span="32-32", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_5 [label="options == null", span="33-33", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_7 [label="_options = options", span="35-35", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_8 [label="_connectionString = connectionString", span="36-36", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_9 [label="options.PrepareSchemaIfNecessary", span="38-38", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_4 [label="throw new ArgumentNullException(''connectionString'');", span="32-32", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_6 [label="throw new ArgumentNullException(''options'');", span="33-33", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_10 [label="PrepareSchemaIfNecessary()", span="40-40", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_11 [label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m7_39 [label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m7_40 [label="yield return new SchedulePoller(this, _options.PollInterval);", span="76-76", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m7_41 [label="yield return new ServerWatchdog(this);", span="77-77", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m7_42 [label="yield return new ExpirationManager(this);", span="78-78", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m7_43 [label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m7_0 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs"];
m7_1 [label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs"];
m7_58 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerStorage.cs"];
m7_64 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerStorage.cs"];
m7_30 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerStorage.cs"];
m7_29 [label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m7_47 [label="var connection = new SqlConnection(_connectionString)", span="83-83", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m7_48 [label="connection.Open()", span="84-84", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m7_49 [label="return connection;", span="86-86", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m7_50 [label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m7_65 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerStorage.cs"];
m7_23 [label="Entry Unk.Debug", span="", cluster="Unk.Debug", file="SqlServerStorage.cs"];
m7_46 [label="Entry HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="26-26", cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs"];
m7_13 [label="Entry HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs"];
m7_14 [label="Log.Debug(''Start installing HangFire SQL objects...'')", span="46-46", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs"];
m7_15 [label="!IsSqlEditionSupported(_connectionString)", span="48-48", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs"];
m7_16 [label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="50-50", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs"];
m7_17 [label="var script = GetStringResource(GetType().Assembly, ''HangFire.SqlServer.Install.sql'')", span="53-53", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs"];
m7_18 [label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 1;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="54-54", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", color=red, community=0, file="SqlServerStorage.cs"];
m7_19 [label="var connection = CreateAndOpenConnection()", span="56-56", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs"];
m7_20 [label="connection.Execute(script)", span="58-58", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs"];
m7_21 [label="Log.Debug(''HangFire SQL objects installed.'')", span="61-61", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs"];
m7_22 [label="Exit HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs"];
m7_25 [label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0", cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerStorage.cs"];
m7_66 [label="HangFire.SqlServer.SqlServerStorage", span="", file="SqlServerStorage.cs"];
m8_17 [label="Entry HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49", cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="SqlStoredJobs.cs"];
m8_18 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="51-54", cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="SqlStoredJobs.cs"];
m8_19 [label="Exit HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49", cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="SqlStoredJobs.cs"];
m8_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlStoredJobs.cs"];
m8_16 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlStoredJobs.cs"];
m8_13 [label="Entry HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", span="38-38", cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="SqlStoredJobs.cs"];
m8_14 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="40-46", cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="SqlStoredJobs.cs"];
m8_15 [label="Exit HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", span="38-38", cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="SqlStoredJobs.cs"];
m8_3 [label="Entry HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", span="20-20", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs"];
m8_4 [label="var job = _connection.Query<Job>(\r\n                @''select InvocationData, State from HangFire.Job where id = @id'',\r\n                new { id = id })\r\n                .SingleOrDefault()", span="22-25", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs"];
m8_5 [label="job == null", span="27-27", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs"];
m8_7 [label="var data = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="29-29", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs"];
m8_8 [label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = data,\r\n                State = job.State,\r\n            };", span="31-35", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs"];
m8_6 [label="return null;", span="27-27", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs"];
m8_9 [label="Exit HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", span="20-20", cluster="HangFire.SqlServer.SqlStoredJobs.GetStateAndInvocationData(string)", file="SqlStoredJobs.cs"];
m8_0 [label="Entry HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15", cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStoredJobs.cs"];
m8_1 [label="_connection = connection", span="17-17", cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStoredJobs.cs"];
m8_2 [label="Exit HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15", cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStoredJobs.cs"];
m8_11 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlStoredJobs.cs"];
m8_12 [label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2", cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="SqlStoredJobs.cs"];
m8_20 [label="Entry HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57", cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="SqlStoredJobs.cs"];
m8_21 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = payload.Id, queueName = payload.Queue })", span="60-61", cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="SqlStoredJobs.cs"];
m8_22 [label="Exit HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57", cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="SqlStoredJobs.cs"];
m8_23 [label="HangFire.SqlServer.SqlStoredJobs", span="", file="SqlStoredJobs.cs"];
m9_27 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="64-64", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SqlWriteTransaction.cs"];
m9_28 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="66-68", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SqlWriteTransaction.cs"];
m9_29 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="64-64", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SqlWriteTransaction.cs"];
m9_3 [label="Entry HangFire.SqlServer.SqlWriteTransaction.Dispose()", span="24-24", cluster="HangFire.SqlServer.SqlWriteTransaction.Dispose()", file="SqlWriteTransaction.cs"];
m9_4 [label="Exit HangFire.SqlServer.SqlWriteTransaction.Dispose()", span="24-24", cluster="HangFire.SqlServer.SqlWriteTransaction.Dispose()", file="SqlWriteTransaction.cs"];
m9_34 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="71-71", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SqlWriteTransaction.cs"];
m9_35 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="73-75", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SqlWriteTransaction.cs"];
m9_36 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="71-71", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SqlWriteTransaction.cs"];
m9_53 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="93-93", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="SqlWriteTransaction.cs"];
m9_54 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="95-97", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="SqlWriteTransaction.cs"];
m9_55 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="93-93", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="SqlWriteTransaction.cs"];
m9_22 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlWriteTransaction.cs"];
m9_0 [label="Entry HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19", cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlWriteTransaction.cs"];
m9_1 [label="_connection = connection", span="21-21", cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlWriteTransaction.cs"];
m9_2 [label="Exit HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19", cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlWriteTransaction.cs"];
m9_62 [label="Entry HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="5-5", cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs"];
m9_18 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="53-53", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs"];
m9_19 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="55-57", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs"];
m9_20 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="59-61", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs"];
m9_21 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="53-53", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs"];
m9_82 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="133-133", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs"];
m9_83 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="135-138", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs"];
m9_84 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                trimSql, \r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="140-142", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs"];
m9_85 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="133-133", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs"];
m9_5 [label="Entry HangFire.SqlServer.SqlWriteTransaction.Commit()", span="34-34", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs"];
m9_6 [label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadCommitted })", span="36-38", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs"];
m9_7 [label="_connection.EnlistTransaction(Transaction.Current)", span="40-40", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs"];
m9_10 [label="transaction.Complete()", span="47-47", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs"];
m9_8 [label=_commandQueue, span="42-42", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs"];
m9_9 [label="command(_connection)", span="44-44", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs"];
m9_11 [label="return true;", span="50-50", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs"];
m9_12 [label="Exit HangFire.SqlServer.SqlWriteTransaction.Commit()", span="34-34", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs"];
m9_15 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="SqlWriteTransaction.cs"];
m9_16 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlWriteTransaction.cs"];
m9_13 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlWriteTransaction.cs"];
m9_70 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="119-119", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="SqlWriteTransaction.cs"];
m9_71 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="121-123", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="SqlWriteTransaction.cs"];
m9_72 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="119-119", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="SqlWriteTransaction.cs"];
m9_76 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="126-126", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="SqlWriteTransaction.cs"];
m9_77 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="128-130", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="SqlWriteTransaction.cs"];
m9_78 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="126-126", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="SqlWriteTransaction.cs"];
m9_59 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="100-100", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="SqlWriteTransaction.cs"];
m9_60 [label="((IWriteableStoredSets)this).Add(key, value, 0.0)", span="102-102", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="SqlWriteTransaction.cs"];
m9_61 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="100-100", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="SqlWriteTransaction.cs"];
m9_17 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlWriteTransaction.cs"];
m9_33 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlWriteTransaction.cs"];
m9_109 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="189-189", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="SqlWriteTransaction.cs"];
m9_110 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="191-193", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", color=red, community=0, file="SqlWriteTransaction.cs"];
m9_111 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="189-189", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="SqlWriteTransaction.cs"];
m9_47 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="85-85", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs"];
m9_48 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="87-90", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs"];
m9_49 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="85-85", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs"];
m9_14 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SqlWriteTransaction.cs"];
m9_112 [label="Entry lambda expression", span="191-193", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_24 [label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="59-61", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_23 [label="Entry lambda expression", span="59-61", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_25 [label="Exit lambda expression", span="59-61", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_31 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="66-68", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_30 [label="Entry lambda expression", span="66-68", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_32 [label="Exit lambda expression", span="66-68", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_38 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="73-75", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_37 [label="Entry lambda expression", span="73-75", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_39 [label="Exit lambda expression", span="73-75", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_44 [label="x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="80-82", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_43 [label="Entry lambda expression", span="80-82", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_45 [label="Exit lambda expression", span="80-82", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_51 [label="x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="87-90", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_50 [label="Entry lambda expression", span="87-90", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_52 [label="Exit lambda expression", span="87-90", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_57 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="95-97", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_56 [label="Entry lambda expression", span="95-97", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_58 [label="Exit lambda expression", span="95-97", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_68 [label="x.Execute(\r\n                addSql, \r\n                new { key, value, score })", span="114-116", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_67 [label="Entry lambda expression", span="114-116", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_69 [label="Exit lambda expression", span="114-116", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_74 [label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="121-123", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_73 [label="Entry lambda expression", span="121-123", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_75 [label="Exit lambda expression", span="121-123", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_80 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="128-130", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_79 [label="Entry lambda expression", span="128-130", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_81 [label="Exit lambda expression", span="128-130", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_87 [label="x.Execute(\r\n                trimSql, \r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="140-142", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_86 [label="Entry lambda expression", span="140-142", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_88 [label="Exit lambda expression", span="140-142", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_95 [label="var affectedRows = x.Execute(updateSql, new { key })", span="158-158", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_97 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="162-162", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_94 [label="Entry lambda expression", span="156-164", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_96 [label="affectedRows == 0", span="160-160", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_98 [label="Exit lambda expression", span="156-164", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_105 [label="var affectedRows = x.Execute(updateSql, new { key })", span="180-180", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_107 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="184-184", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_104 [label="Entry lambda expression", span="178-186", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_106 [label="affectedRows == 0", span="182-182", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_108 [label="Exit lambda expression", span="178-186", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_113 [label="x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="191-193", cluster="lambda expression", color=red, community=0, file="SqlWriteTransaction.cs"];
m9_114 [label="Exit lambda expression", span="191-193", cluster="lambda expression", file="SqlWriteTransaction.cs"];
m9_40 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="78-78", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs"];
m9_41 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="80-82", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs"];
m9_42 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="78-78", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs"];
m9_99 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="167-167", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs"];
m9_100 [label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="169-174", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs"];
m9_102 [label="_commandQueue.Enqueue(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="178-186", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs"];
m9_101 [label="string updateSql = @''\r\nupdate HangFire.Value with (xlock) set IntValue = IntValue - 1 where [Key] = @key''", span="175-176", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs"];
m9_103 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="167-167", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs"];
m9_46 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlWriteTransaction.cs"];
m9_63 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="105-105", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs"];
m9_64 [label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="107-112", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs"];
m9_65 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                addSql, \r\n                new { key, value, score }))", span="114-116", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs"];
m9_66 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="105-105", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs"];
m9_89 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", span="145-145", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs"];
m9_90 [label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="147-152", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs"];
m9_92 [label="_commandQueue.Enqueue(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="156-164", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs"];
m9_91 [label="string updateSql = @''\r\nupdate HangFire.Value with (xlock) set IntValue = IntValue + 1 where [Key] = @key''", span="153-154", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs"];
m9_93 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", span="145-145", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs"];
m9_26 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlWriteTransaction.cs"];
m9_115 [label="HangFire.SqlServer.SqlWriteTransaction", span="", file="SqlWriteTransaction.cs"];
m9_116 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_117 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_118 [label=enqueueJobSql, span="", file="SqlWriteTransaction.cs"];
m9_119 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_120 [label="System.TimeSpan", span="", file="SqlWriteTransaction.cs"];
m9_121 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_122 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_123 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_124 [label="System.Collections.Generic.Dictionary<string, string>", span="", file="SqlWriteTransaction.cs"];
m9_125 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_126 [label="System.Collections.Generic.Dictionary<string, string>", span="", file="SqlWriteTransaction.cs"];
m9_127 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_128 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_129 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_130 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_131 [label=double, span="", file="SqlWriteTransaction.cs"];
m9_132 [label=addSql, span="", file="SqlWriteTransaction.cs"];
m9_133 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_134 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_135 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_136 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_137 [label=int, span="", file="SqlWriteTransaction.cs"];
m9_138 [label=int, span="", file="SqlWriteTransaction.cs"];
m9_139 [label=trimSql, span="", file="SqlWriteTransaction.cs"];
m9_140 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_141 [label=updateSql, span="", file="SqlWriteTransaction.cs"];
m9_142 [label=insertSql, span="", file="SqlWriteTransaction.cs"];
m9_143 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_144 [label=updateSql, span="", file="SqlWriteTransaction.cs"];
m9_145 [label=insertSql, span="", file="SqlWriteTransaction.cs"];
m9_146 [label=string, span="", file="SqlWriteTransaction.cs"];
m9_147 [label="System.TimeSpan", span="", file="SqlWriteTransaction.cs"];
m10_26 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="StatisticsHistoryFilterAttribute.cs"];
m10_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="StatisticsHistoryFilterAttribute.cs"];
m10_28 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="StatisticsHistoryFilterAttribute.cs"];
m10_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="StatisticsHistoryFilterAttribute.cs"];
m10_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="StatisticsHistoryFilterAttribute.cs"];
m10_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="StatisticsHistoryFilterAttribute.cs"];
m10_22 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StatisticsHistoryFilterAttribute.cs"];
m10_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=red, community=0, file="StatisticsHistoryFilterAttribute.cs"];
m10_24 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StatisticsHistoryFilterAttribute.cs"];
m10_113 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", span="268-268", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs"];
m10_114 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job is being enqueued on it\'s actual queue after timing out'', ((string[])(null)))", span="270-270", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs"];
m10_115 [label="this.ScenarioSetup(scenarioInfo)", span="272-272", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs"];
m10_116 [label="testRunner.And(''a dequeued job from the \'test\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="274-274", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs"];
m10_117 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="276-276", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs"];
m10_118 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="278-278", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs"];
m10_119 [label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="280-280", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs"];
m10_120 [label="this.ScenarioCleanup()", span="282-282", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs"];
m10_121 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", span="268-268", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="StatisticsHistoryFilterAttribute.cs"];
m10_53 [label="Entry Unk.And", span="", cluster="Unk.And", file="StatisticsHistoryFilterAttribute.cs"];
m10_112 [label="Entry Unk.But", span="", cluster="Unk.But", file="StatisticsHistoryFilterAttribute.cs"];
m10_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="StatisticsHistoryFilterAttribute.cs"];
m10_132 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="314-314", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_133 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Succeeded job of non-existing type will not be moved to the failed state'', ((string[])(null)))", span="316-316", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_134 [label="this.ScenarioSetup(scenarioInfo)", span="318-318", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_135 [label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="320-320", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_136 [label="testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="322-322", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_137 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="324-324", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_138 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="326-326", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_139 [label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="328-328", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_140 [label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="330-330", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_141 [label="this.ScenarioCleanup()", span="332-332", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_142 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="314-314", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="StatisticsHistoryFilterAttribute.cs"];
m10_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="StatisticsHistoryFilterAttribute.cs"];
m10_90 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="214-214", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_91 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job\'s state is changed to the Enqueued when the job is being timed out after proc'' +\r\n                    ''eeding to the Processing state'', new string[] {\r\n                        ''checkpoint-3''})", span="216-218", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_92 [label="this.ScenarioSetup(scenarioInfo)", span="220-220", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_93 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="222-222", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_94 [label="testRunner.And(''it\'s state is Processing'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="224-224", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_95 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="226-226", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_96 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="228-228", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_97 [label="testRunner.Then(''the job moved to the Enqueued state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="230-230", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_98 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="232-232", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_99 [label="this.ScenarioCleanup()", span="234-234", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_100 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="214-214", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_78 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="184-184", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_79 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out jobs in the \'Fetched\' state should be re-queued'', new string[] {\r\n                        ''checkpoint-2''})", span="186-187", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_80 [label="this.ScenarioSetup(scenarioInfo)", span="189-189", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_81 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="191-191", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_82 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_83 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="195-195", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_84 [label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="197-197", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_85 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="199-199", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_86 [label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="201-201", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_87 [label="testRunner.And(''the job does not have the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="203-203", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_88 [label="this.ScenarioCleanup()", span="205-205", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_89 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="184-184", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_40 [label="Entry Unk.When", span="", cluster="Unk.When", file="StatisticsHistoryFilterAttribute.cs"];
m10_42 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="97-97", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_43 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Non-timed out job in the \'Checked\' state should not be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="99-100", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_44 [label="this.ScenarioSetup(scenarioInfo)", span="102-102", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_45 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="104-104", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_46 [label="testRunner.And(''it was checked a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="106-106", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_47 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="108-108", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_48 [label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="110-110", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_49 [label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="112-112", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_50 [label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="114-114", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_51 [label="this.ScenarioCleanup()", span="116-116", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_52 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="97-97", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_101 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="242-242", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_102 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job in the Succeeded state does not move to the Enqueued state'', new string[] {\r\n                        ''checkpoint-4''})", span="244-245", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_103 [label="this.ScenarioSetup(scenarioInfo)", span="247-247", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_104 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="249-249", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_105 [label="testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="251-251", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_106 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="253-253", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_107 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="255-255", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_108 [label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="257-257", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_109 [label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="259-259", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_110 [label="this.ScenarioCleanup()", span="261-261", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_111 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="242-242", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_0 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs"];
m10_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs"];
m10_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Re-queueing of timed out jobs'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs"];
m10_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs"];
m10_4 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StatisticsHistoryFilterAttribute.cs"];
m10_14 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="StatisticsHistoryFilterAttribute.cs"];
m10_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Re-queueing of timed out jobs''))", span="48-49", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", color=red, community=0, file="StatisticsHistoryFilterAttribute.cs"];
m10_16 [label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="StatisticsHistoryFilterAttribute.cs", color=green, community=0];
m10_17 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="StatisticsHistoryFilterAttribute.cs"];
m10_38 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="StatisticsHistoryFilterAttribute.cs"];
m10_9 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="StatisticsHistoryFilterAttribute.cs"];
m10_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", color=red, community=0, file="StatisticsHistoryFilterAttribute.cs"];
m10_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", color=green, community=0, file="StatisticsHistoryFilterAttribute.cs"];
m10_12 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="StatisticsHistoryFilterAttribute.cs"];
m10_65 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="152-152", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_66 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job by the \'checked\' flag in the \'Fetched\' state should not be re-queue'' +\r\n                    ''d'', new string[] {\r\n                        ''checkpoint-2''})", span="154-156", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_67 [label="this.ScenarioSetup(scenarioInfo)", span="158-158", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_68 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="160-160", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_69 [label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="162-162", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_70 [label="testRunner.And(''it was fetched a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_71 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="166-166", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_72 [label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="168-168", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_73 [label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="170-170", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_74 [label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="172-172", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_75 [label="testRunner.And(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="174-174", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_76 [label="this.ScenarioCleanup()", span="176-176", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_77 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="152-152", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_41 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="StatisticsHistoryFilterAttribute.cs"];
m10_39 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="StatisticsHistoryFilterAttribute.cs"];
m10_54 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="124-124", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_55 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed job in the \'Checked\' state should be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="126-127", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_56 [label="this.ScenarioSetup(scenarioInfo)", span="129-129", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_57 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="131-131", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_58 [label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="133-133", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_59 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="135-135", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_60 [label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="137-137", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_61 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="139-139", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_62 [label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_63 [label="this.ScenarioCleanup()", span="143-143", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_64 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="124-124", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="StatisticsHistoryFilterAttribute.cs"];
m10_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="StatisticsHistoryFilterAttribute.cs"];
m10_18 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", file="StatisticsHistoryFilterAttribute.cs"];
m10_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", color=green, community=0, file="StatisticsHistoryFilterAttribute.cs"];
m10_20 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", file="StatisticsHistoryFilterAttribute.cs"];
m10_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="StatisticsHistoryFilterAttribute.cs"];
m10_122 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="290-290", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_123 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When the server could not find the job\'s type, the job is moved to the Failed sta'' +\r\n                    ''te'', ((string[])(null)))", span="292-293", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_124 [label="this.ScenarioSetup(scenarioInfo)", span="295-295", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_125 [label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="297-297", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_126 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="299-299", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_127 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="301-301", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_128 [label="testRunner.Then(''the job moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="303-303", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_129 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="305-305", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_130 [label="this.ScenarioCleanup()", span="307-307", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_131 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="290-290", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_30 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="76-76", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''A job in the implicit \'Dequeued\' state moved to the \'Checked\' state'', new string[] {\r\n                        ''checkpoint-1-1''})", span="78-79", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_32 [label="this.ScenarioSetup(scenarioInfo)", span="81-81", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_33 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="83-83", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_34 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_35 [label="testRunner.Then(''it marks the job as \'checked\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_36 [label="this.ScenarioCleanup()", span="89-89", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_37 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="76-76", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="StatisticsHistoryFilterAttribute.cs"];
m10_143 [label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", span="", file="StatisticsHistoryFilterAttribute.cs"];
m11_12 [label="Entry HangFire.Storage.IWriteableStoredValues.Increment(string)", span="6-6", cluster="HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SucceededState.cs"];
m11_7 [label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m11_9 [label="context.Transaction.Values.Increment(''stats:succeeded'')", span="50-50", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SucceededState.cs"];
m11_8 [label="context.Transaction.Jobs.Expire(context.JobId, JobExpirationTimeout)", span="49-49", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m11_10 [label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m11_0 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="SucceededState.cs"];
m11_1 [label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="SucceededState.cs"];
m11_2 [label="Entry HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55", cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="SucceededState.cs"];
m11_3 [label="Exit HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55", cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="SucceededState.cs"];
m11_18 [label="Entry HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="8-8", cluster="HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SucceededState.cs"];
m11_17 [label="Entry HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="7-7", cluster="HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SucceededState.cs"];
m11_13 [label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="53-53", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs"];
m11_14 [label="context.Transaction.Values.Decrement(''stats:succeeded'')", span="55-55", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededState.cs"];
m11_15 [label="context.Transaction.Jobs.Persist(context.JobId)", span="56-56", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs"];
m11_16 [label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="53-53", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs"];
m11_11 [label="Entry HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="7-7", cluster="HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SucceededState.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IWriteOnlyTransaction"];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=2, style=dotted];
n8 -> n6  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_9  [key=2, style=dotted];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=storage];
m3_2 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=storage];
m3_2 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=storage];
m3_2 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label=storage];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_0  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=2, style=dotted];
m3_16 -> m3_14  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_12 -> m3_10  [key=0, style=bold, color=blue];
m3_18 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m3_18 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m3_18 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m3_18 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m3_18 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m3_18 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m3_18 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m3_18 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m3_18 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m4_15 -> m4_18  [key=1, style=dashed, color=green, label=string];
m4_15 -> m4_16  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid, color=green];
m4_18 -> m4_21  [key=2, style=dotted, color=green];
m4_16 -> m4_18  [key=0, style=solid, color=green];
m4_16 -> m4_17  [key=0, style=solid, color=green];
m4_16 -> m4_11  [key=2, style=dotted];
m4_17 -> m4_19  [key=0, style=solid, color=green];
m4_17 -> m4_20  [key=2, style=dotted, color=green];
m4_19 -> m4_15  [key=0, style=bold, color=blue];
m4_0 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateHandler"];
m4_0 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateHandler"];
m4_0 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateHandler"];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateHandler"];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=0, style=solid];
m4_5 -> m4_11  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_12  [key=2, style=dotted];
m4_6 -> m4_13  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_14  [key=2, style=dotted];
m4_3 -> m4_5  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_4 -> m4_8  [key=0, style=solid];
m4_4 -> m4_10  [key=2, style=dotted];
m4_2 -> m4_8  [key=0, style=solid];
m4_2 -> m4_9  [key=2, style=dotted];
m4_8 -> m4_0  [key=0, style=bold, color=blue];
m4_22 -> m4_18  [key=1, style=dashed, color=green, label="HangFire.States.StateHandlerCollection"];
m4_22 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
m4_22 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
m4_22 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
m4_22 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_12 -> m5_13  [key=0, style=solid, color=green];
m5_12 -> m5_18  [key=1, style=dashed, color=green, label=queueName];
m5_7 -> m5_12  [key=1, style=dashed, color=green, label=idAndQueue];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_20  [key=2, style=dotted];
m5_7 -> m5_21  [key=2, style=dotted];
m5_7 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_11 -> m5_24  [key=2, style=dotted];
m5_11 -> m5_21  [key=2, style=dotted];
m5_11 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_11 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_11 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_11 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_16  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_28  [key=2, style=dotted];
m5_18 -> m5_29  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m5_6 -> m5_5  [key=3, color=darkorchid, style=bold, label="Local variable string queueName"];
m5_8 -> m5_13  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_23  [key=2, style=dotted];
m5_9 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_22  [key=2, style=dotted];
m5_16 -> m5_6  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_27  [key=2, style=dotted];
m5_5 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_5 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_5 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_5 -> m5_5  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.SqlServer.Entities.Job job"];
m5_14 -> m5_16  [key=0, style=solid];
m5_14 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_25  [key=2, style=dotted];
m5_14 -> m5_26  [key=2, style=dotted];
m5_15 -> m5_19  [key=0, style=solid];
m5_19 -> m5_4  [key=0, style=bold, color=blue];
m5_30 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerFetcher"];
m5_30 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerFetcher"];
m5_30 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerFetcher"];
m5_30 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerFetcher"];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_88  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.ServerDto> Servers"];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_22  [key=2, style=dotted];
m6_87 -> m6_48  [key=2, style=dotted];
m6_87 -> m6_89  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_94  [key=2, style=dotted];
m6_88 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_88 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_92  [key=0, style=solid];
m6_89 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label=server];
m6_91 -> m6_89  [key=0, style=solid];
m6_91 -> m6_95  [key=2, style=dotted];
m6_91 -> m6_64  [key=2, style=dotted];
m6_92 -> m6_93  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_22  [key=2, style=dotted];
m6_93 -> m6_86  [key=0, style=bold, color=blue];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_82  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_82  [key=2, style=dotted];
m6_81 -> m6_79  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_60 -> m6_66  [key=0, style=solid];
m6_60 -> m6_69  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Common.JobMethod DeserializeJobMethod"];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_59  [key=2, style=dotted];
m6_67 -> m6_70  [key=0, style=solid];
m6_67 -> m6_71  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_70 -> m6_60  [key=0, style=bold, color=blue];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_18  [key=3, color=darkorchid, style=bold, label="method methodReturn long SucceededListCount"];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_18  [key=2, style=dotted];
m6_176 -> m6_174  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_13  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_14  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_14  [key=2, style=dotted];
m6_12 -> m6_8  [key=0, style=bold, color=blue];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>"];
m6_50 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_58  [key=2, style=dotted];
m6_51 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_51 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_56  [key=0, style=solid];
m6_52 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_52 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_60  [key=2, style=dotted];
m6_54 -> m6_61  [key=2, style=dotted];
m6_55 -> m6_52  [key=0, style=solid];
m6_55 -> m6_62  [key=2, style=dotted];
m6_55 -> m6_63  [key=2, style=dotted];
m6_55 -> m6_64  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_65  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_59  [key=2, style=dotted];
m6_57 -> m6_50  [key=0, style=bold, color=blue];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_82  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount"];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_82  [key=2, style=dotted];
m6_85 -> m6_83  [key=0, style=bold, color=blue];
m6_177 -> m6_178  [key=0, style=solid];
m6_178 -> m6_179  [key=0, style=solid, color=red];
m6_178 -> m6_192  [key=2, style=dotted];
m6_178 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_178 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_178 -> m6_185  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_178 -> m6_186  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_178 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_178 -> m6_188  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_178 -> m6_189  [key=1, style=dashed, color=red, label=stats];
m6_178 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_179 -> m6_180  [key=0, style=solid, color=red];
m6_179 -> m6_179  [key=3, color=red, style=bold, label="Local variable string sql"];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_194  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_194  [key=2, style=dotted];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_194  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_194  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_22  [key=2, style=dotted];
m6_187 -> m6_23  [key=2, style=dotted];
m6_188 -> m6_189  [key=0, style=solid, color=red];
m6_188 -> m6_22  [key=2, style=dotted];
m6_188 -> m6_23  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid, color=red];
m6_189 -> m6_22  [key=2, style=dotted, color=red];
m6_189 -> m6_161  [key=2, style=dotted, color=red];
m6_190 -> m6_191  [key=0, style=solid];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_160  [key=2, style=dotted];
m6_180 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label=multi];
m6_180 -> m6_188  [key=1, style=dashed, color=darkseagreen4, label=multi];
m6_180 -> m6_189  [key=1, style=dashed, color=red, label=multi];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_193  [key=2, style=dotted];
m6_181 -> m6_162  [key=2, style=dotted];
m6_181 -> m6_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_181 -> m6_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_181 -> m6_202  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_202  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_182 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m6_182 -> m6_185  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m6_182 -> m6_186  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m6_182 -> m6_182  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, int> getCountIfExists"];
m6_191 -> m6_177  [key=0, style=bold, color=blue];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_18  [key=3, color=darkorchid, style=bold, label="method methodReturn long FailedCount"];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_18  [key=2, style=dotted];
m6_29 -> m6_27  [key=0, style=bold, color=blue];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_38  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs"];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_38  [key=2, style=dotted];
m6_36 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_37 -> m6_35  [key=0, style=bold, color=blue];
m6_146 -> m6_205  [key=0, style=solid];
m6_146 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_146 -> m6_231  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_146 -> m6_80  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m6_146 -> m6_84  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m6_146 -> m6_217  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats"];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_209  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_205 -> m6_210  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_212 -> m6_213  [key=0, style=solid, color=red];
m6_212 -> m6_163  [key=2, style=dotted];
m6_212 -> m6_48  [key=2, style=dotted];
m6_212 -> m6_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_212 -> m6_214  [key=1, style=dashed, color=darkseagreen4, label=keys];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_94  [key=2, style=dotted];
m6_206 -> m6_209  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_206 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_206 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_206 -> m6_221  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_64  [key=2, style=dotted];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_225  [key=2, style=dotted];
m6_210 -> m6_210  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_207 -> m6_207  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_223  [key=0, style=solid];
m6_219 -> m6_207  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_227  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_212  [key=0, style=solid];
m6_211 -> m6_208  [key=0, style=solid];
m6_211 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_213 -> m6_214  [key=0, style=solid, color=red];
m6_213 -> m6_226  [key=2, style=dotted, color=red];
m6_213 -> m6_162  [key=2, style=dotted, color=red];
m6_213 -> m6_235  [key=1, style=dashed, color=red, label="lambda expression"];
m6_213 -> m6_238  [key=1, style=dashed, color=red, label="lambda expression"];
m6_213 -> m6_215  [key=1, style=dashed, color=red, label=valuesMap];
m6_213 -> m6_216  [key=1, style=dashed, color=red, label=valuesMap];
m6_213 -> m6_220  [key=1, style=dashed, color=red, label=valuesMap];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_217  [key=0, style=solid];
m6_214 -> m6_216  [key=1, style=dashed, color=darkseagreen4, label=key];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_214  [key=0, style=solid];
m6_215 -> m6_204  [key=2, style=dotted];
m6_216 -> m6_214  [key=0, style=solid];
m6_216 -> m6_227  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_229  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_228  [key=2, style=dotted];
m6_217 -> m6_221  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_217 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_218 -> m6_221  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_218 -> m6_222  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_223 -> m6_224  [key=0, style=solid];
m6_222 -> m6_219  [key=0, style=solid];
m6_222 -> m6_222  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_224 -> m6_146  [key=0, style=bold, color=blue];
m6_82 -> m6_241  [key=0, style=solid];
m6_82 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_82 -> m6_266  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_82 -> m6_80  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m6_82 -> m6_84  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m6_82 -> m6_253  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_244  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_241 -> m6_245  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_241 -> m6_246  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_248 -> m6_249  [key=0, style=solid, color=red];
m6_248 -> m6_163  [key=2, style=dotted];
m6_248 -> m6_48  [key=2, style=dotted];
m6_248 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_248 -> m6_250  [key=1, style=dashed, color=darkseagreen4, label=keys];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_261  [key=2, style=dotted];
m6_242 -> m6_244  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_247  [key=0, style=solid];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_64  [key=2, style=dotted];
m6_246 -> m6_244  [key=0, style=solid];
m6_246 -> m6_261  [key=2, style=dotted];
m6_246 -> m6_246  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_94  [key=2, style=dotted];
m6_243 -> m6_245  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_243 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_243 -> m6_257  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_163  [key=2, style=dotted];
m6_247 -> m6_48  [key=2, style=dotted];
m6_247 -> m6_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_247 -> m6_255  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_227  [key=2, style=dotted];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_259  [key=0, style=solid];
m6_255 -> m6_207  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m6_249 -> m6_250  [key=0, style=solid, color=red];
m6_249 -> m6_226  [key=2, style=dotted, color=red];
m6_249 -> m6_162  [key=2, style=dotted, color=red];
m6_249 -> m6_269  [key=1, style=dashed, color=red, label="lambda expression"];
m6_249 -> m6_272  [key=1, style=dashed, color=red, label="lambda expression"];
m6_249 -> m6_251  [key=1, style=dashed, color=red, label=valuesMap];
m6_249 -> m6_252  [key=1, style=dashed, color=red, label=valuesMap];
m6_249 -> m6_256  [key=1, style=dashed, color=red, label=valuesMap];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_253  [key=0, style=solid];
m6_250 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label=key];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_250  [key=0, style=solid];
m6_251 -> m6_204  [key=2, style=dotted];
m6_252 -> m6_250  [key=0, style=solid];
m6_252 -> m6_227  [key=2, style=dotted];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_229  [key=2, style=dotted];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_228  [key=2, style=dotted];
m6_253 -> m6_257  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_253 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_256  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_254 -> m6_257  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_254 -> m6_258  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_259 -> m6_260  [key=0, style=solid];
m6_258 -> m6_255  [key=0, style=solid];
m6_258 -> m6_258  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_260 -> m6_82  [key=0, style=bold, color=blue];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_150 -> m6_69  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobDetailsDto JobDetails"];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_151  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_160  [key=2, style=dotted];
m6_152 -> m6_156  [key=1, style=dashed, color=darkseagreen4, label=multi];
m6_152 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label=multi];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_22  [key=2, style=dotted];
m6_153 -> m6_161  [key=2, style=dotted];
m6_153 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_22  [key=2, style=dotted];
m6_156 -> m6_162  [key=2, style=dotted];
m6_156 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_156 -> m6_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_156 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_22  [key=2, style=dotted];
m6_157 -> m6_48  [key=2, style=dotted];
m6_157 -> m6_163  [key=2, style=dotted];
m6_157 -> m6_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_156  [key=0, style=solid];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_164  [key=2, style=dotted];
m6_158 -> m6_22  [key=2, style=dotted];
m6_158 -> m6_142  [key=2, style=dotted];
m6_155 -> m6_159  [key=0, style=solid];
m6_159 -> m6_150  [key=0, style=bold, color=blue];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_22  [key=2, style=dotted];
m6_25 -> m6_23  [key=2, style=dotted];
m6_26 -> m6_24  [key=0, style=bold, color=blue];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=2, style=dotted];
m6_20 -> m6_23  [key=2, style=dotted];
m6_21 -> m6_19  [key=0, style=bold, color=blue];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_146  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs"];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_146  [key=2, style=dotted];
m6_149 -> m6_147  [key=0, style=bold, color=blue];
m6_272 -> m6_273  [key=0, style=solid, color=red];
m6_39 -> m6_40  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_42  [key=2, style=dotted];
m6_40 -> m6_43  [key=2, style=dotted];
m6_41 -> m6_39  [key=0, style=bold, color=blue];
m6_75 -> m6_76  [key=0, style=solid];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_78  [key=2, style=dotted];
m6_76 -> m6_43  [key=2, style=dotted];
m6_77 -> m6_75  [key=0, style=bold, color=blue];
m6_99 -> m6_100  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_102  [key=2, style=dotted];
m6_100 -> m6_103  [key=2, style=dotted];
m6_101 -> m6_99  [key=0, style=bold, color=blue];
m6_107 -> m6_108  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_110  [key=2, style=dotted];
m6_108 -> m6_103  [key=2, style=dotted];
m6_109 -> m6_107  [key=0, style=bold, color=blue];
m6_126 -> m6_127  [key=0, style=solid];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_129  [key=2, style=dotted];
m6_127 -> m6_103  [key=2, style=dotted];
m6_128 -> m6_126  [key=0, style=bold, color=blue];
m6_165 -> m6_166  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_171 -> m6_172  [key=0, style=solid];
m6_166 -> m6_167  [key=0, style=solid];
m6_167 -> m6_165  [key=0, style=bold, color=blue];
m6_169 -> m6_170  [key=0, style=solid];
m6_170 -> m6_168  [key=0, style=bold, color=blue];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_22  [key=2, style=dotted];
m6_173 -> m6_171  [key=0, style=bold, color=blue];
m6_195 -> m6_196  [key=0, style=solid];
m6_198 -> m6_199  [key=0, style=solid];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_204  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_197 -> m6_195  [key=0, style=bold, color=blue];
m6_199 -> m6_200  [key=0, style=solid];
m6_200 -> m6_198  [key=0, style=bold, color=blue];
m6_201 -> m6_202  [key=0, style=solid];
m6_203 -> m6_201  [key=0, style=bold, color=blue];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_233  [key=2, style=dotted];
m6_231 -> m6_234  [key=2, style=dotted];
m6_230 -> m6_231  [key=0, style=solid];
m6_235 -> m6_236  [key=0, style=solid, color=red];
m6_238 -> m6_239  [key=0, style=solid, color=red];
m6_232 -> m6_230  [key=0, style=bold, color=blue];
m6_236 -> m6_237  [key=0, style=solid, color=red];
m6_237 -> m6_235  [key=0, style=bold, color=blue];
m6_239 -> m6_240  [key=0, style=solid, color=red];
m6_240 -> m6_238  [key=0, style=bold, color=blue];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_268  [key=2, style=dotted];
m6_262 -> m6_263  [key=0, style=solid];
m6_265 -> m6_266  [key=0, style=solid];
m6_269 -> m6_270  [key=0, style=solid, color=red];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_233  [key=2, style=dotted];
m6_264 -> m6_262  [key=0, style=bold, color=blue];
m6_267 -> m6_265  [key=0, style=bold, color=blue];
m6_270 -> m6_271  [key=0, style=solid, color=red];
m6_271 -> m6_269  [key=0, style=bold, color=blue];
m6_273 -> m6_274  [key=0, style=solid, color=red];
m6_274 -> m6_272  [key=0, style=bold, color=blue];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_18  [key=3, color=darkorchid, style=bold, label="method methodReturn long ProcessingCount"];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_18  [key=2, style=dotted];
m6_34 -> m6_32  [key=0, style=bold, color=blue];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_146  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_146  [key=2, style=dotted];
m6_145 -> m6_143  [key=0, style=bold, color=blue];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_18  [key=3, color=darkorchid, style=bold, label="method methodReturn long ScheduledCount"];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=2, style=dotted];
m6_17 -> m6_15  [key=0, style=bold, color=blue];
m6_38 -> m6_44  [key=0, style=solid];
m6_38 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_38 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_44  [key=3, color=darkorchid, style=bold, label="Local variable string jobsSql"];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_22  [key=2, style=dotted];
m6_45 -> m6_48  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_49  [key=2, style=dotted];
m6_47 -> m6_38  [key=0, style=bold, color=blue];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_114  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> Queues"];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_112  [key=3, color=darkorchid, style=bold, label="Local variable string queuesAndStatusSql"];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_22  [key=2, style=dotted];
m6_113 -> m6_48  [key=2, style=dotted];
m6_113 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_119  [key=2, style=dotted];
m6_114 -> m6_116  [key=1, style=dashed, color=red, label=result];
m6_114 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_115 -> m6_116  [key=0, style=solid, color=red];
m6_115 -> m6_117  [key=0, style=solid];
m6_116 -> m6_115  [key=0, style=solid, color=red];
m6_116 -> m6_120  [key=2, style=dotted, color=red];
m6_116 -> m6_94  [key=2, style=dotted, color=red];
m6_116 -> m6_64  [key=2, style=dotted, color=red];
m6_117 -> m6_118  [key=0, style=solid];
m6_118 -> m6_111  [key=0, style=bold, color=blue];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_38  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.SucceededJobDto> SucceededJobs"];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_38  [key=2, style=dotted];
m6_105 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_106 -> m6_104  [key=0, style=bold, color=blue];
m6_18 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_22  [key=2, style=dotted];
m6_30 -> m6_23  [key=2, style=dotted];
m6_31 -> m6_18  [key=0, style=bold, color=blue];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_38  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FailedJobDto> FailedJobs"];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_38  [key=2, style=dotted];
m6_97 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_98 -> m6_96  [key=0, style=bold, color=blue];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_38  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ScheduleDto> ScheduledJobs"];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_38  [key=2, style=dotted];
m6_73 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_74 -> m6_72  [key=0, style=bold, color=blue];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_122  [key=3, color=darkorchid, style=bold, label="Local variable string enqueuedJobsSql"];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_22  [key=2, style=dotted];
m6_123 -> m6_48  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_49  [key=2, style=dotted];
m6_124 -> m6_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_125 -> m6_121  [key=0, style=bold, color=blue];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_131  [key=3, color=darkorchid, style=bold, label="Local variable string fetchedJobsSql"];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_22  [key=2, style=dotted];
m6_132 -> m6_48  [key=2, style=dotted];
m6_132 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_138  [key=2, style=dotted];
m6_133 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_133 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_136  [key=0, style=solid];
m6_135 -> m6_134  [key=0, style=solid];
m6_135 -> m6_139  [key=2, style=dotted];
m6_135 -> m6_140  [key=2, style=dotted];
m6_135 -> m6_141  [key=2, style=dotted];
m6_135 -> m6_142  [key=2, style=dotted];
m6_135 -> m6_64  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_65  [key=2, style=dotted];
m6_137 -> m6_130  [key=0, style=bold, color=blue];
m6_275 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_180  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_213  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_275 -> m6_249  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m6_276 -> m6_202  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m6_277 -> m6_231  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_278 -> m6_266  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_35 -> m7_36  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_38  [key=2, style=dotted];
m7_36 -> m7_29  [key=2, style=dotted];
m7_37 -> m7_35  [key=0, style=bold, color=blue];
m7_24 -> m7_53  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_29  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_57  [key=2, style=dotted];
m7_54 -> m7_58  [key=2, style=dotted];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_24  [key=0, style=bold, color=blue];
m7_27 -> m7_59  [key=0, style=solid];
m7_27 -> m7_17  [key=3, color=darkorchid, style=bold, label="Parameter variable string resourceName"];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_63  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_64  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_65  [key=2, style=dotted];
m7_62 -> m7_27  [key=0, style=bold, color=blue];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=2, style=dotted];
m7_32 -> m7_29  [key=2, style=dotted];
m7_33 -> m7_31  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m7_2 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m7_2 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_2 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=0, style=solid];
m7_4 -> m7_11  [key=0, style=solid];
m7_4 -> m7_12  [key=2, style=dotted];
m7_6 -> m7_11  [key=0, style=solid];
m7_6 -> m7_12  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_13  [key=2, style=dotted];
m7_11 -> m7_2  [key=0, style=bold, color=blue];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_41  [key=0, style=bold, color=crimson];
m7_39 -> m7_42  [key=0, style=bold, color=crimson];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_44  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_45  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_46  [key=2, style=dotted];
m7_43 -> m7_39  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m7_29 -> m7_47  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_51  [key=2, style=dotted];
m7_47 -> m7_49  [key=1, style=dashed, color=darkseagreen4, label=connection];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_52  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_29  [key=0, style=bold, color=blue];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_23  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_17  [key=0, style=solid];
m7_15 -> m7_24  [key=2, style=dotted];
m7_16 -> m7_22  [key=0, style=solid];
m7_16 -> m7_25  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid, color=red];
m7_17 -> m7_26  [key=2, style=dotted];
m7_17 -> m7_27  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid, color=red];
m7_18 -> m7_28  [key=2, style=dotted, color=red];
m7_18 -> m7_18  [key=1, style=dashed, color=red, label=script];
m7_18 -> m7_20  [key=1, style=dashed, color=red, label=script];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_29  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_30  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_23  [key=2, style=dotted];
m7_22 -> m7_13  [key=0, style=bold, color=blue];
m7_66 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m7_66 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_10  [key=2, style=dotted];
m8_18 -> m8_11  [key=2, style=dotted];
m8_19 -> m8_17  [key=0, style=bold, color=blue];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [key=2, style=dotted];
m8_15 -> m8_13  [key=0, style=bold, color=blue];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.StateAndInvocationData GetStateAndInvocationData"];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_10  [key=2, style=dotted];
m8_4 -> m8_11  [key=2, style=dotted];
m8_4 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_4 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_10  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_12  [key=2, style=dotted];
m8_6 -> m8_9  [key=0, style=solid];
m8_9 -> m8_3  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_16  [key=2, style=dotted];
m8_22 -> m8_20  [key=0, style=bold, color=blue];
m8_23 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
m8_23 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
m8_23 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
m8_23 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
m8_23 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStoredJobs"];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_22  [key=2, style=dotted];
m9_28 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_29 -> m9_27  [key=0, style=bold, color=blue];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_3  [key=0, style=bold, color=blue];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_22  [key=2, style=dotted];
m9_35 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_36 -> m9_34  [key=0, style=bold, color=blue];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_22  [key=2, style=dotted];
m9_54 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_55 -> m9_53  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_18 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m9_19 -> m9_19  [key=3, color=darkorchid, style=bold, label="Local variable string enqueueJobSql"];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_22  [key=2, style=dotted];
m9_20 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_21 -> m9_18  [key=0, style=bold, color=blue];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_82 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m9_83 -> m9_83  [key=3, color=darkorchid, style=bold, label="Local variable string trimSql"];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_22  [key=2, style=dotted];
m9_84 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_85 -> m9_82  [key=0, style=bold, color=blue];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Commit"];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_13  [key=2, style=dotted];
m9_6 -> m9_14  [key=2, style=dotted];
m9_6 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_15  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_17  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [key=0, style=solid];
m9_9 -> m9_8  [key=0, style=solid];
m9_9 -> m9_16  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_5  [key=0, style=bold, color=blue];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_22  [key=2, style=dotted];
m9_71 -> m9_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_72 -> m9_70  [key=0, style=bold, color=blue];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_22  [key=2, style=dotted];
m9_77 -> m9_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_78 -> m9_76  [key=0, style=bold, color=blue];
m9_59 -> m9_60  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_62  [key=2, style=dotted];
m9_61 -> m9_59  [key=0, style=bold, color=blue];
m9_109 -> m9_110  [key=0, style=solid, color=red];
m9_109 -> m9_113  [key=1, style=dashed, color=red, label=string];
m9_110 -> m9_111  [key=0, style=solid, color=red];
m9_110 -> m9_22  [key=2, style=dotted, color=red];
m9_110 -> m9_112  [key=1, style=dashed, color=red, label="lambda expression"];
m9_111 -> m9_109  [key=0, style=bold, color=blue];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_22  [key=2, style=dotted];
m9_48 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_49 -> m9_47  [key=0, style=bold, color=blue];
m9_112 -> m9_113  [key=0, style=solid, color=red];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_25 -> m9_23  [key=0, style=bold, color=blue];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=2, style=dotted];
m9_31 -> m9_26  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_32 -> m9_30  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_26  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_39 -> m9_37  [key=0, style=bold, color=blue];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_46  [key=2, style=dotted];
m9_44 -> m9_26  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_45 -> m9_43  [key=0, style=bold, color=blue];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_46  [key=2, style=dotted];
m9_51 -> m9_26  [key=2, style=dotted];
m9_50 -> m9_51  [key=0, style=solid];
m9_52 -> m9_50  [key=0, style=bold, color=blue];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_26  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_58 -> m9_56  [key=0, style=bold, color=blue];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_26  [key=2, style=dotted];
m9_67 -> m9_68  [key=0, style=solid];
m9_69 -> m9_67  [key=0, style=bold, color=blue];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_26  [key=2, style=dotted];
m9_73 -> m9_74  [key=0, style=solid];
m9_75 -> m9_73  [key=0, style=bold, color=blue];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_26  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_81 -> m9_79  [key=0, style=bold, color=blue];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_26  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_88 -> m9_86  [key=0, style=bold, color=blue];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_26  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_26  [key=2, style=dotted];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_98  [key=0, style=solid];
m9_98 -> m9_94  [key=0, style=bold, color=blue];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_26  [key=2, style=dotted];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_26  [key=2, style=dotted];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_108  [key=0, style=solid];
m9_108 -> m9_104  [key=0, style=bold, color=blue];
m9_113 -> m9_114  [key=0, style=solid, color=red];
m9_113 -> m9_33  [key=2, style=dotted, color=red];
m9_113 -> m9_26  [key=2, style=dotted, color=red];
m9_114 -> m9_112  [key=0, style=bold, color=blue];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_22  [key=2, style=dotted];
m9_41 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_42 -> m9_40  [key=0, style=bold, color=blue];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_99 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_99 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_102  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m9_100 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m9_100 -> m9_90  [key=3, color=darkorchid, style=bold, label="Local variable string insertSql"];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_22  [key=2, style=dotted];
m9_102 -> m9_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m9_101 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m9_101 -> m9_101  [key=3, color=darkorchid, style=bold, label="Local variable string updateSql"];
m9_103 -> m9_99  [key=0, style=bold, color=blue];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_63 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m9_64 -> m9_64  [key=3, color=darkorchid, style=bold, label="Local variable string addSql"];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_22  [key=2, style=dotted];
m9_65 -> m9_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_66 -> m9_63  [key=0, style=bold, color=blue];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_89 -> m9_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_89 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m9_90 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m9_90 -> m9_90  [key=3, color=darkorchid, style=bold, label="Local variable string insertSql"];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_22  [key=2, style=dotted];
m9_92 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_95  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m9_91 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m9_91 -> m9_91  [key=3, color=darkorchid, style=bold, label="Local variable string updateSql"];
m9_93 -> m9_89  [key=0, style=bold, color=blue];
m9_115 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_115 -> m9_110  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlWriteTransaction"];
m9_116 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_117 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_118 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m9_119 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_120 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_121 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_122 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_123 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_124 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m9_125 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_126 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m9_127 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_128 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_129 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_130 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_131 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label=double];
m9_132 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m9_133 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_134 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_135 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_136 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_137 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_138 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_139 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m9_140 -> m9_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_140 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_141 -> m9_95  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m9_141 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m9_142 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m9_143 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_143 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_144 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m9_144 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m9_145 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m9_146 -> m9_113  [key=1, style=dashed, color=red, label=string];
m9_147 -> m9_113  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m10_26 -> m10_27  [key=0, style=solid];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=2, style=dotted];
m10_28 -> m10_26  [key=0, style=bold, color=blue];
m10_22 -> m10_23  [key=0, style=solid, color=red];
m10_22 -> m10_31  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_43  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_55  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_66  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_79  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_91  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_102  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_114  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_123  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_133  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_23 -> m10_24  [key=0, style=solid, color=red];
m10_23 -> m10_25  [key=2, style=dotted, color=red];
m10_24 -> m10_22  [key=0, style=bold, color=blue];
m10_113 -> m10_114  [key=0, style=solid];
m10_114 -> m10_115  [key=0, style=solid];
m10_114 -> m10_38  [key=2, style=dotted];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_22  [key=2, style=dotted];
m10_116 -> m10_117  [key=0, style=solid];
m10_116 -> m10_53  [key=2, style=dotted];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_53  [key=2, style=dotted];
m10_118 -> m10_119  [key=0, style=solid];
m10_118 -> m10_40  [key=2, style=dotted];
m10_119 -> m10_120  [key=0, style=solid];
m10_119 -> m10_41  [key=2, style=dotted];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_26  [key=2, style=dotted];
m10_121 -> m10_113  [key=0, style=bold, color=blue];
m10_132 -> m10_133  [key=0, style=solid];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_38  [key=2, style=dotted];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_22  [key=2, style=dotted];
m10_135 -> m10_136  [key=0, style=solid];
m10_135 -> m10_39  [key=2, style=dotted];
m10_136 -> m10_137  [key=0, style=solid];
m10_136 -> m10_53  [key=2, style=dotted];
m10_137 -> m10_138  [key=0, style=solid];
m10_137 -> m10_53  [key=2, style=dotted];
m10_138 -> m10_139  [key=0, style=solid];
m10_138 -> m10_40  [key=2, style=dotted];
m10_139 -> m10_140  [key=0, style=solid];
m10_139 -> m10_41  [key=2, style=dotted];
m10_140 -> m10_141  [key=0, style=solid];
m10_140 -> m10_112  [key=2, style=dotted];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_26  [key=2, style=dotted];
m10_142 -> m10_132  [key=0, style=bold, color=blue];
m10_90 -> m10_91  [key=0, style=solid];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_38  [key=2, style=dotted];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_22  [key=2, style=dotted];
m10_93 -> m10_94  [key=0, style=solid];
m10_93 -> m10_39  [key=2, style=dotted];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_53  [key=2, style=dotted];
m10_95 -> m10_96  [key=0, style=solid];
m10_95 -> m10_53  [key=2, style=dotted];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_40  [key=2, style=dotted];
m10_97 -> m10_98  [key=0, style=solid];
m10_97 -> m10_41  [key=2, style=dotted];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_53  [key=2, style=dotted];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_26  [key=2, style=dotted];
m10_100 -> m10_90  [key=0, style=bold, color=blue];
m10_78 -> m10_79  [key=0, style=solid];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_38  [key=2, style=dotted];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_22  [key=2, style=dotted];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_39  [key=2, style=dotted];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_53  [key=2, style=dotted];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_40  [key=2, style=dotted];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_41  [key=2, style=dotted];
m10_85 -> m10_86  [key=0, style=solid];
m10_85 -> m10_53  [key=2, style=dotted];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_53  [key=2, style=dotted];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_53  [key=2, style=dotted];
m10_88 -> m10_89  [key=0, style=solid];
m10_88 -> m10_26  [key=2, style=dotted];
m10_89 -> m10_78  [key=0, style=bold, color=blue];
m10_42 -> m10_43  [key=0, style=solid];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_38  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_22  [key=2, style=dotted];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_39  [key=2, style=dotted];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_53  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_40  [key=2, style=dotted];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_41  [key=2, style=dotted];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_53  [key=2, style=dotted];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_53  [key=2, style=dotted];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_26  [key=2, style=dotted];
m10_52 -> m10_42  [key=0, style=bold, color=blue];
m10_101 -> m10_102  [key=0, style=solid];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_38  [key=2, style=dotted];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_22  [key=2, style=dotted];
m10_104 -> m10_105  [key=0, style=solid];
m10_104 -> m10_39  [key=2, style=dotted];
m10_105 -> m10_106  [key=0, style=solid];
m10_105 -> m10_53  [key=2, style=dotted];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_53  [key=2, style=dotted];
m10_107 -> m10_108  [key=0, style=solid];
m10_107 -> m10_40  [key=2, style=dotted];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_41  [key=2, style=dotted];
m10_109 -> m10_110  [key=0, style=solid];
m10_109 -> m10_112  [key=2, style=dotted];
m10_110 -> m10_111  [key=0, style=solid];
m10_110 -> m10_26  [key=2, style=dotted];
m10_111 -> m10_101  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_16  [key=3, color=green, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_5  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_6  [key=2, style=dotted];
m10_2 -> m10_7  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_14 -> m10_15  [key=0, style=solid, color=red];
m10_15 -> m10_16  [key=0, style=solid, color=green];
m10_15 -> m10_17  [key=0, style=solid, color=red];
m10_16 -> m10_17  [key=0, style=solid, color=green];
m10_16 -> m10_0  [key=2, style=dotted, color=green];
m10_17 -> m10_14  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid, color=red];
m10_10 -> m10_11  [key=0, style=solid, color=green];
m10_10 -> m10_13  [key=2, style=dotted, color=red];
m10_11 -> m10_12  [key=0, style=solid, color=green];
m10_12 -> m10_9  [key=0, style=bold, color=blue];
m10_65 -> m10_66  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_38  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_22  [key=2, style=dotted];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_39  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_53  [key=2, style=dotted];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_53  [key=2, style=dotted];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_40  [key=2, style=dotted];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_41  [key=2, style=dotted];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_53  [key=2, style=dotted];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_53  [key=2, style=dotted];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_53  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_26  [key=2, style=dotted];
m10_77 -> m10_65  [key=0, style=bold, color=blue];
m10_54 -> m10_55  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_38  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_22  [key=2, style=dotted];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_39  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_53  [key=2, style=dotted];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_40  [key=2, style=dotted];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_41  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_53  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_53  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_26  [key=2, style=dotted];
m10_64 -> m10_54  [key=0, style=bold, color=blue];
m10_18 -> m10_19  [key=0, style=solid, color=green];
m10_19 -> m10_20  [key=0, style=solid, color=green];
m10_19 -> m10_21  [key=2, style=dotted, color=green];
m10_20 -> m10_18  [key=0, style=bold, color=blue];
m10_122 -> m10_123  [key=0, style=solid];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_38  [key=2, style=dotted];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_22  [key=2, style=dotted];
m10_125 -> m10_126  [key=0, style=solid];
m10_125 -> m10_39  [key=2, style=dotted];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_53  [key=2, style=dotted];
m10_127 -> m10_128  [key=0, style=solid];
m10_127 -> m10_40  [key=2, style=dotted];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_41  [key=2, style=dotted];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_53  [key=2, style=dotted];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_26  [key=2, style=dotted];
m10_131 -> m10_122  [key=0, style=bold, color=blue];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_38  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_22  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_39  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_40  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_41  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_26  [key=2, style=dotted];
m10_37 -> m10_30  [key=0, style=bold, color=blue];
m10_143 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m10_143 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m11_7 -> m11_9  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateApplyingContext"];
m11_7 -> m11_8  [key=0, style=solid];
m11_9 -> m11_10  [key=0, style=solid, color=green];
m11_9 -> m11_12  [key=2, style=dotted, color=green];
m11_8 -> m11_9  [key=0, style=solid, color=green];
m11_8 -> m11_11  [key=2, style=dotted];
m11_10 -> m11_7  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_2  [key=0, style=bold, color=blue];
m11_13 -> m11_14  [key=0, style=solid, color=green];
m11_13 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m11_14 -> m11_15  [key=0, style=solid, color=green];
m11_14 -> m11_17  [key=2, style=dotted, color=green];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_18  [key=2, style=dotted];
m11_16 -> m11_13  [key=0, style=bold, color=blue];
}
