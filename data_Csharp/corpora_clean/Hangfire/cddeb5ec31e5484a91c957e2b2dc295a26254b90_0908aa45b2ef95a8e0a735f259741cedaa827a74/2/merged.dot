digraph  {
n216 [label="HangFire.Tests.ClientFiltersFeature", span=""];
n0 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client filters'', ''\r\n  As a user, I expect that all defined client filters are executing\r\n  using th'' +\r\n                    ''e following rules, when I create a job.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner"];
n3 [label="testRunner.OnFeatureStart(featureInfo)", span="36-36", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr"];
n7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)"];
n4 [label="Exit HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart"];
n9 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", span="40-40", cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()"];
n10 [label="testRunner.OnFeatureEnd()", span="42-42", cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()"];
n11 [label="testRunner = null", span="43-43", cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()"];
n13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd"];
n12 [label="Exit HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", span="40-40", cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()"];
n14 [label="Entry HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()"];
n15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client filters''))", span="49-50", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()"];
n16 [label="HangFire.Tests.ClientFiltersFeature.FeatureSetup(null)", span="52-52", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()"];
n17 [label="Exit HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()"];
n18 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="57-57", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()"];
n19 [label="testRunner.OnScenarioEnd()", span="59-59", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()"];
n20 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="57-57", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()"];
n21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd"];
n22 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
n23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
n24 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
n25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart"];
n26 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()"];
n27 [label="testRunner.CollectScenarioErrors()", span="69-69", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()"];
n28 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()"];
n29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors"];
n30 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()"];
n31 [label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-76", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()"];
n32 [label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()"];
n33 [label="Entry Unk.Given", span="", cluster="Unk.Given"];
n34 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n35 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filters should be executed when I create a job'', ((string[])(null)))", span="86-86", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n36 [label="this.ScenarioSetup(scenarioInfo)", span="88-88", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n47 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr"];
n37 [label="this.FeatureBackground()", span="90-90", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n38 [label="testRunner.Given(''the client filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="92-92", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n39 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="94-94", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n40 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="96-97", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n48 [label="Entry Unk.When", span="", cluster="Unk.When"];
n41 [label="table1.AddRow(new string[] {\r\n                        ''test::OnCreating''})", span="98-99", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n49 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr"];
n42 [label="table1.AddRow(new string[] {\r\n                        ''test::OnCreated''})", span="100-101", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n43 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table1, ''Then '')", span="103-103", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n50 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow"];
n44 [label="testRunner.And(''the storage should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="105-105", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n51 [label="Entry Unk.Then", span="", cluster="Unk.Then"];
n45 [label="this.ScenarioCleanup()", span="107-107", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n52 [label="Entry Unk.And", span="", cluster="Unk.And"];
n46 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
n53 [label="Entry HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n54 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple client filters should be executed depending on their order'', ((string[])(null)))", span="116-116", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n55 [label="this.ScenarioSetup(scenarioInfo)", span="118-118", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n56 [label="this.FeatureBackground()", span="120-120", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n57 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="122-122", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n58 [label="testRunner.And(''the client filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="124-124", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n59 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="126-126", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n60 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="128-129", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n61 [label="table2.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="130-131", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n62 [label="table2.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="132-133", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n63 [label="table2.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="134-135", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n64 [label="table2.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="136-137", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n65 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table2, ''Then '')", span="139-139", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n66 [label="this.ScenarioCleanup()", span="141-141", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n67 [label="Exit HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
n68 [label="Entry HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n69 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should be able to set a job parameter in the client filter'', ((string[])(null)))", span="150-150", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n70 [label="this.ScenarioSetup(scenarioInfo)", span="152-152", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n71 [label="this.FeatureBackground()", span="154-154", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n72 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="156-158", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n73 [label="table3.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="159-161", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n74 [label="table3.AddRow(new string[] {\r\n                        ''UICulture'',\r\n                        ''ru-RU''})", span="162-164", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n75 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table3, ''Given '')", span="166-167", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n76 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="169-169", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n77 [label="testRunner.Then(''it should have all of the above parameters encoded as JSON string'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="171-171", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n78 [label="this.ScenarioCleanup()", span="173-173", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n79 [label="Exit HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
n80 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n81 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name, an exception should be thrown'', ((string[])(null)))", span="182-182", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n82 [label="this.ScenarioSetup(scenarioInfo)", span="184-184", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n83 [label="this.FeatureBackground()", span="186-186", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n84 [label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="188-190", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n85 [label="table4.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-US''})", span="191-193", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n86 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table4, ''Given '')", span="195-196", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n87 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n88 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n89 [label="this.ScenarioCleanup()", span="202-202", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n90 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
n91 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n92 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter should be able to read the parameters that were set by one of the p'' +\r\n                    ''revious filters'', ((string[])(null)))", span="212-213", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n93 [label="this.ScenarioSetup(scenarioInfo)", span="215-215", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n94 [label="this.FeatureBackground()", span="217-217", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n95 [label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="219-221", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n96 [label="table5.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-GB''})", span="222-224", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n97 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table5, ''Given '')", span="226-227", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n98 [label="testRunner.And(''the client filter \'second\' that reads all of the above parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="229-229", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n99 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="231-231", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n100 [label="testRunner.Then(''the \'second\' client filter got the actual values of the parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="233-233", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n101 [label="this.ScenarioCleanup()", span="235-235", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n102 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
n103 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n104 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name in the GetParameter method call, a'' +\r\n                    ''n exception should be thrown'', ((string[])(null)))", span="245-246", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n105 [label="this.ScenarioSetup(scenarioInfo)", span="248-248", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n106 [label="this.FeatureBackground()", span="250-250", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n107 [label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="252-254", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n108 [label="table6.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-GB''})", span="255-257", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n109 [label="testRunner.Given(''the client filter \'first\' that gets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table6, ''Given '')", span="259-260", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n110 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="262-262", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n111 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="264-264", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n112 [label="this.ScenarioCleanup()", span="266-266", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n113 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
n114 [label="Entry HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n115 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should not be able to set parameters after the job was created'', ((string[])(null)))", span="275-275", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n116 [label="this.ScenarioSetup(scenarioInfo)", span="277-277", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n117 [label="this.FeatureBackground()", span="279-279", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n118 [label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="281-283", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n119 [label="table7.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="284-286", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n120 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreated met'' +\r\n                    ''hod:'', ((string)(null)), table7, ''Given '')", span="288-289", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n121 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="291-291", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n122 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="293-293", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n123 [label="this.ScenarioCleanup()", span="295-295", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n124 [label="Exit HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
n125 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n126 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter cancels the creation of the job, it should not be created'', ((string[])(null)))", span="304-304", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n127 [label="this.ScenarioSetup(scenarioInfo)", span="306-306", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n128 [label="this.FeatureBackground()", span="308-308", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n129 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="310-310", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n130 [label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="312-312", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n131 [label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="314-314", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n132 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="316-316", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n133 [label="testRunner.Then(''the storage should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="318-318", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n134 [label="TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="320-321", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n135 [label="table8.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="322-323", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n136 [label="table8.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="324-325", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n137 [label="table8.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="326-327", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n138 [label="testRunner.And(''only the following client filter methods should be executed:'', ((string)(null)), table8, ''And '')", span="329-329", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n139 [label="this.ScenarioCleanup()", span="331-331", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n140 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
n141 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n142 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter\'s OnCreated could be skipped if there was an exception'', ((string[])(null)))", span="340-340", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n143 [label="this.ScenarioSetup(scenarioInfo)", span="342-342", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n144 [label="this.FeatureBackground()", span="344-344", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n145 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="346-346", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n146 [label="testRunner.And(''the client filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="348-348", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n147 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="350-350", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n148 [label="TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="352-353", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n149 [label="table9.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="354-355", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n150 [label="table9.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="356-357", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n151 [label="table9.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="358-359", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n152 [label="testRunner.Then(''only the following client filter methods should be executed:'', ((string)(null)), table9, ''Then '')", span="361-361", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n153 [label="this.ScenarioCleanup()", span="363-363", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n154 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
n155 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n156 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client filter handles an exception, it should not be thrown outside'', ((string[])(null)))", span="372-372", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n157 [label="this.ScenarioSetup(scenarioInfo)", span="374-374", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n158 [label="this.FeatureBackground()", span="376-376", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n159 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="378-378", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n160 [label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="380-380", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n161 [label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="382-382", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n162 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="384-384", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n163 [label="TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="386-387", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n164 [label="table10.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="388-389", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n165 [label="table10.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="390-391", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n166 [label="table10.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="392-393", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n167 [label="table10.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="394-395", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n168 [label="table10.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="396-397", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n169 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table10, ''Then '')", span="399-399", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n170 [label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="401-401", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n171 [label="this.ScenarioCleanup()", span="403-403", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n172 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n173 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
n174 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters should be executed when there was an exception while cre'' +\r\n                    ''ating a job'', ((string[])(null)))", span="413-414", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
n175 [label="this.ScenarioSetup(scenarioInfo)", span="416-416", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
n176 [label="this.FeatureBackground()", span="418-418", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
n177 [label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="420-420", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
n178 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="422-422", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", color=red, community=0];
n179 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="424-424", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", color=red, community=0];
n180 [label="testRunner.Then(''the client exception filter should be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="426-426", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
n181 [label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="428-428", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
n182 [label="this.ScenarioCleanup()", span="430-430", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
n183 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
n184 [label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n185 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple exception filters should be executed depending on their order'', ((string[])(null)))", span="439-439", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=red, community=0];
n186 [label="this.ScenarioSetup(scenarioInfo)", span="441-441", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n187 [label="this.FeatureBackground()", span="443-443", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n188 [label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="445-445", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n189 [label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="447-447", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n190 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="449-449", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=red, community=0];
n191 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="451-451", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=red, community=0];
n192 [label="TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="453-454", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n193 [label="table11.AddRow(new string[] {\r\n                        ''first''})", span="455-456", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=red, community=1];
n194 [label="table11.AddRow(new string[] {\r\n                        ''second''})", span="457-458", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n195 [label="testRunner.Then(''the client exception filters should be executed in the following order:'', ((string)(null)), table11, ''Then '')", span="460-460", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n196 [label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="462-462", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n197 [label="this.ScenarioCleanup()", span="464-464", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n198 [label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
n199 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n200 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client exception filter handles an exception, it should not be thrown outs'' +\r\n                    ''ide'', ((string[])(null)))", span="474-475", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n201 [label="this.ScenarioSetup(scenarioInfo)", span="477-477", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n202 [label="this.FeatureBackground()", span="479-479", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n203 [label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="481-481", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n204 [label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="483-483", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n205 [label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="485-485", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n206 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="487-487", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=red, community=0];
n207 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="489-489", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=red, community=0];
n208 [label="TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="491-492", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n209 [label="table12.AddRow(new string[] {\r\n                        ''first''})", span="493-494", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=red, community=0];
n210 [label="table12.AddRow(new string[] {\r\n                        ''second''})", span="495-496", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n211 [label="table12.AddRow(new string[] {\r\n                        ''third''})", span="497-498", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=red, community=0];
n212 [label="testRunner.Then(''the following client exception filters should be executed:'', ((string)(null)), table12, ''Then '')", span="500-500", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n213 [label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="502-502", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n214 [label="this.ScenarioCleanup()", span="504-504", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
n215 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
m0_0 [label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42", cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="ClientJobDescriptor.cs"];
m0_1 [label="return Activator.CreateInstance(jobType);", span="44-44", cluster="Hangfire.JobActivator.ActivateJob(System.Type)", color=red, community=0, file="ClientJobDescriptor.cs"];
m0_2 [label="Exit Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42", cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="ClientJobDescriptor.cs"];
m0_3 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="ClientJobDescriptor.cs"];
m1_0 [label="Entry HangFire.Tests.CustomJob.Perform()", span="10-10", cluster="HangFire.Tests.CustomJob.Perform()", file="CustomJob.cs"];
m1_1 [label="LastArticleId = ArticleId", span="12-12", cluster="HangFire.Tests.CustomJob.Perform()", color=green, community=0, file="CustomJob.cs"];
m1_2 [label="LastAuthor = Author", span="13-13", cluster="HangFire.Tests.CustomJob.Perform()", color=green, community=0, file="CustomJob.cs"];
m1_3 [label="Exit HangFire.Tests.CustomJob.Perform()", span="10-10", cluster="HangFire.Tests.CustomJob.Perform()", file="CustomJob.cs"];
m1_4 [label="HangFire.Tests.CustomJob", span="", file="CustomJob.cs"];
m5_16 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnqueuedJobsPage.generated.cs"];
m5_18 [label="Entry Hangfire.Common.Job.Validate()", span="207-207", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_76 [label="Method.DeclaringType == null", span="209-209", cluster="Hangfire.Common.Job.Validate()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_77 [label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="211-211", cluster="Hangfire.Common.Job.Validate()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_78 [label="!Method.DeclaringType.IsAssignableFrom(Type)", span="214-214", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_79 [label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="216-219", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_80 [label="!Method.IsPublic", span="222-222", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_81 [label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="224-224", cluster="Hangfire.Common.Job.Validate()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_82 [label="typeof (Task).IsAssignableFrom(Method.ReturnType)", span="227-227", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_83 [label="throw new NotSupportedException(''Async methods are not supported. Please make them synchronous before using them in background.'');", span="229-229", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_84 [label="var parameters = Method.GetParameters()", span="232-232", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_85 [label="parameters.Length != Arguments.Length", span="234-234", cluster="Hangfire.Common.Job.Validate()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_87 [label=parameters, span="239-239", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_86 [label="throw new ArgumentException(''Argument count must be equal to method parameter count.'');", span="236-236", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_88 [label="parameter.IsOut", span="245-245", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_90 [label="parameter.ParameterType.IsByRef", span="251-251", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_89 [label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="247-248", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_91 [label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="253-254", cluster="Hangfire.Common.Job.Validate()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_92 [label="Exit Hangfire.Common.Job.Validate()", span="207-207", cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs"];
m5_95 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="EnqueuedJobsPage.generated.cs"];
m5_165 [label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="EnqueuedJobsPage.generated.cs"];
m5_33 [label="Entry Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="281-281", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_107 [label="var parameters = Method.GetParameters()", span="285-285", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_115 [label="value = cancellationToken", span="297-297", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_108 [label="var result = new List<object>(Arguments.Length)", span="286-286", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_110 [label="i < parameters.Length", span="288-288", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_111 [label="var parameter = parameters[i]", span="290-290", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_109 [label="var i = 0", span="288-288", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_122 [label="result.Add(value)", span="323-323", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_124 [label="return result.ToArray();", span="326-326", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_112 [label="var argument = Arguments[i]", span="291-291", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_123 [label="i++", span="288-288", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_114 [label="typeof (IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="295-295", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_116 [label="value = argument != null\r\n								? JobHelper.FromJson(argument, parameter.ParameterType)\r\n								: null", span="303-305", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_118 [label="parameter.ParameterType == typeof (object)", span="309-309", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_120 [label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="317-317", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_113 [label="object value", span="293-293", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_119 [label="value = argument", span="313-313", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_121 [label="value = converter.ConvertFromInvariantString(argument)", span="318-318", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_117 [label=Exception, span="307-307", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_125 [label=Exception, span="328-328", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_126 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="330-332", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_127 [label="Exit Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="281-281", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_47 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="EnqueuedJobsPage.generated.cs"];
m5_93 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="EnqueuedJobsPage.generated.cs"];
m5_173 [label="Entry Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25", cluster="Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs"];
m5_66 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="EnqueuedJobsPage.generated.cs"];
m5_105 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="EnqueuedJobsPage.generated.cs"];
m5_35 [label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="121-121", cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="EnqueuedJobsPage.generated.cs"];
m5_36 [label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="123-125", cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_37 [label="Exit Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="121-121", cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="EnqueuedJobsPage.generated.cs"];
m5_32 [label="Entry Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="259-259", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs"];
m5_97 [label="var instance = activator.ActivateJob(Type)", span="263-263", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs"];
m5_98 [label="instance == null", span="265-265", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs"];
m5_100 [label="return instance;", span="271-271", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_99 [label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="267-268", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs"];
m5_101 [label=Exception, span="273-273", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs"];
m5_102 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during job activation.'',\r\n                    ex);", span="275-277", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs"];
m5_103 [label="Exit Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="259-259", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs"];
m5_2 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="69-69", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_3 [label="type == null", span="71-71", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_5 [label="method == null", span="72-72", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_7 [label="arguments == null", span="73-73", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_9 [label="method.ContainsGenericParameters", span="75-75", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_11 [label="Type = type", span="80-80", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_12 [label="Method = method", span="81-81", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_13 [label="Arguments = arguments", span="82-82", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_4 [label="throw new ArgumentNullException(''type'');", span="71-71", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_6 [label="throw new ArgumentNullException(''method'');", span="72-72", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_8 [label="throw new ArgumentNullException(''arguments'');", span="73-73", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_10 [label="throw new ArgumentException(''Job method can not contain unassigned generic type parameters.'', ''method'');", span="77-77", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_14 [label="Validate()", span="84-84", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_15 [label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="69-69", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs"];
m5_46 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="EnqueuedJobsPage.generated.cs"];
m5_94 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="EnqueuedJobsPage.generated.cs"];
m5_19 [label="Entry Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="95-95", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_20 [label="activator == null", span="97-97", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_22 [label="cancellationToken == null", span="98-98", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_27 [label="instance = Activate(activator)", span="107-107", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_28 [label="var deserializedArguments = DeserializeArguments(cancellationToken)", span="110-110", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_21 [label="throw new ArgumentNullException(''activator'');", span="97-97", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_23 [label="throw new ArgumentNullException(''cancellationToken'');", span="98-98", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_24 [label="object instance = null", span="100-100", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_25 [label="object result = null", span="102-102", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_29 [label="result = InvokeMethod(instance, deserializedArguments)", span="111-111", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_26 [label="!Method.IsStatic", span="105-105", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_30 [label="return result;", span="118-118", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_31 [label="Exit Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="95-95", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m5_38 [label="Entry Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33", cluster="Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="EnqueuedJobsPage.generated.cs"];
m5_64 [label="Entry Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="409-409", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs"];
m5_167 [label="Debug.Assert(expression != null)", span="411-411", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs"];
m5_168 [label="var constantExpression = expression as ConstantExpression", span="413-413", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs"];
m5_171 [label="return CachedExpressionCompiler.Evaluate(expression);", span="420-420", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs"];
m5_169 [label="constantExpression != null", span="415-415", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs"];
m5_170 [label="return constantExpression.Value;", span="417-417", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs"];
m5_172 [label="Exit Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="409-409", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs"];
m5_161 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="EnqueuedJobsPage.generated.cs"];
m5_163 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="EnqueuedJobsPage.generated.cs"];
m5_65 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EnqueuedJobsPage.generated.cs"];
m5_34 [label="Entry Hangfire.Common.Job.InvokeMethod(object, object[])", span="336-336", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs"];
m5_134 [label="return Method.Invoke(instance, deserializedArguments);", span="340-340", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs"];
m5_135 [label=TargetInvocationException, span="342-342", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs"];
m5_136 [label="ex.InnerException is OperationCanceledException", span="344-344", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs"];
m5_137 [label="throw ex.InnerException;", span="349-349", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs"];
m5_138 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="352-354", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs"];
m5_139 [label="Exit Hangfire.Common.Job.InvokeMethod(object, object[])", span="336-336", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs"];
m5_130 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="EnqueuedJobsPage.generated.cs"];
m5_140 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="EnqueuedJobsPage.generated.cs"];
m5_67 [label="Entry Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="376-376", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_149 [label="Debug.Assert(callExpression != null)", span="378-378", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_150 [label="var arguments = callExpression.Arguments.Select(GetExpressionValue).ToArray()", span="380-380", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_151 [label="var serializedArguments = new List<string>(arguments.Length)", span="382-382", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_152 [label=arguments, span="383-383", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_158 [label="serializedArguments.Add(value)", span="403-403", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_159 [label="return serializedArguments.ToArray();", span="406-406", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_153 [label="string value = null", span="385-385", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_154 [label="argument != null", span="387-387", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_155 [label="argument is DateTime", span="389-389", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_156 [label="value = ((DateTime) argument).ToString(''o'', CultureInfo.InvariantCulture)", span="391-391", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_157 [label="value = JobHelper.ToJson(argument)", span="395-395", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_160 [label="Exit Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="376-376", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs"];
m5_133 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="EnqueuedJobsPage.generated.cs"];
m5_104 [label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42", cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="EnqueuedJobsPage.generated.cs"];
m5_63 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)", file="EnqueuedJobsPage.generated.cs"];
m5_68 [label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="191-191", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs"];
m5_69 [label="methodCall == null", span="193-193", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_71 [label="var callExpression = methodCall.Body as MethodCallExpression", span="195-195", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs"];
m5_70 [label="throw new ArgumentNullException(''methodCall'');", span="193-193", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_72 [label="callExpression == null", span="196-196", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs"];
m5_74 [label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="201-204", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_73 [label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="198-198", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs"];
m5_75 [label="Exit Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="191-191", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs"];
m5_39 [label="Entry Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="135-135", cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="EnqueuedJobsPage.generated.cs"];
m5_44 [label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="137-139", cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="EnqueuedJobsPage.generated.cs"];
m5_45 [label="Exit Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="135-135", cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="EnqueuedJobsPage.generated.cs"];
m5_166 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="EnqueuedJobsPage.generated.cs"];
m5_43 [label="Entry Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38", cluster="Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="EnqueuedJobsPage.generated.cs"];
m5_162 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="EnqueuedJobsPage.generated.cs"];
m5_128 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="EnqueuedJobsPage.generated.cs"];
m5_17 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="EnqueuedJobsPage.generated.cs"];
m5_164 [label="Entry List<string>.cstr", span="", cluster="List<string>.cstr", file="EnqueuedJobsPage.generated.cs"];
m5_129 [label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46", cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="EnqueuedJobsPage.generated.cs"];
m5_132 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="EnqueuedJobsPage.generated.cs"];
m5_106 [label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="EnqueuedJobsPage.generated.cs"];
m5_40 [label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="128-128", cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="EnqueuedJobsPage.generated.cs"];
m5_41 [label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="130-132", cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_42 [label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="128-128", cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="EnqueuedJobsPage.generated.cs"];
m5_141 [label="Entry Hangfire.Common.Job.Dispose(object)", span="358-358", cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs"];
m5_142 [label="var disposable = instance as IDisposable", span="362-362", cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs"];
m5_143 [label="disposable != null", span="363-363", cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs"];
m5_144 [label="disposable.Dispose()", span="365-365", cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs"];
m5_145 [label=Exception, span="368-368", cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs"];
m5_146 [label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="370-372", cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs"];
m5_147 [label="Exit Hangfire.Common.Job.Dispose(object)", span="358-358", cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs"];
m5_131 [label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="EnqueuedJobsPage.generated.cs"];
m5_174 [label="Entry Hangfire.Common.Job.ToString()", span="423-423", cluster="Hangfire.Common.Job.ToString()", file="EnqueuedJobsPage.generated.cs"];
m5_175 [label="return String.Format(''{0}.{1}'', Type.ToGenericTypeString(), Method.Name);", span="425-425", cluster="Hangfire.Common.Job.ToString()", file="EnqueuedJobsPage.generated.cs"];
m5_176 [label="Exit Hangfire.Common.Job.ToString()", span="423-423", cluster="Hangfire.Common.Job.ToString()", file="EnqueuedJobsPage.generated.cs"];
m5_96 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="EnqueuedJobsPage.generated.cs"];
m5_0 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="49-49", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="EnqueuedJobsPage.generated.cs"];
m5_1 [label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="49-49", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="EnqueuedJobsPage.generated.cs"];
m5_148 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="EnqueuedJobsPage.generated.cs"];
m5_177 [label="Entry System.Type.ToGenericTypeString()", span="8-8", cluster="System.Type.ToGenericTypeString()", file="EnqueuedJobsPage.generated.cs"];
m5_48 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_49 [label="methodCall == null", span="151-151", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_51 [label="var callExpression = methodCall.Body as MethodCallExpression", span="153-153", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_50 [label="throw new ArgumentNullException(''methodCall'');", span="151-151", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_52 [label="callExpression == null", span="154-154", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_55 [label="callExpression.Object != null", span="161-161", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m5_56 [label="var objectValue = GetExpressionValue(callExpression.Object)", span="163-163", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_60 [label="type = callExpression.Method.DeclaringType", span="173-173", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_61 [label="return new Job(\r\n                type, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="178-181", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_53 [label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="156-156", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_54 [label="Type type", span="159-159", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_57 [label="objectValue == null", span="164-164", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_59 [label="type = objectValue.GetType()", span="169-169", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_58 [label="throw new InvalidOperationException(''Expression object should not be null.'');", span="166-166", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_62 [label="Exit Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m5_178 [label="Hangfire.Common.Job", span="", file="EnqueuedJobsPage.generated.cs"];
m6_6 [label="Exit HangFire.Filters.GlobalJobFilterCollection.Clear()", span="43-43", cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="GlobalJobFilterCollection.cs"];
m6_7 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="GlobalJobFilterCollection.cs"];
m6_8 [label="Entry HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", span="53-53", cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs"];
m6_9 [label="return _filters.Contains(filter);", span="55-55", cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs", color=green, community=0];
m6_10 [label="Exit HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", span="53-53", cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs"];
m6_12 [label="Entry HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", span="62-62", cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs"];
m6_13 [label="_filters.RemoveAll(x => x == filter)", span="64-64", cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs"];
m6_4 [label="Entry HangFire.Filters.GlobalJobFilterCollection.Clear()", span="43-43", cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="GlobalJobFilterCollection.cs"];
m6_22 [label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="GlobalJobFilterCollection.cs"];
m6_14 [label="Exit HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", span="62-62", cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs"];
m6_0 [label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="35-35", cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs"];
m6_1 [label="_filters.Add(filter)", span="37-37", cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs", color=green, community=0];
m6_2 [label="Exit HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="35-35", cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs"];
m6_3 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="GlobalJobFilterCollection.cs"];
m6_19 [label="Entry HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", span="67-67", cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="GlobalJobFilterCollection.cs"];
m6_20 [label="return _filters.GetEnumerator();", span="69-69", cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="GlobalJobFilterCollection.cs"];
m6_21 [label="Exit HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", span="67-67", cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="GlobalJobFilterCollection.cs"];
m6_11 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="GlobalJobFilterCollection.cs"];
m6_5 [label="_filters.Clear()", span="45-45", cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="GlobalJobFilterCollection.cs", color=green, community=0];
m6_15 [label="Entry System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", file="GlobalJobFilterCollection.cs"];
m6_16 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m6_17 [label="x == filter", span="64-64", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m6_18 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m6_23 [label="Entry HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", span="72-72", cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", file="GlobalJobFilterCollection.cs"];
m6_24 [label="return GetEnumerator();", span="74-74", cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", color=green, community=0, file="GlobalJobFilterCollection.cs"];
m6_25 [label="Exit HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", span="72-72", cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", file="GlobalJobFilterCollection.cs"];
m6_26 [label="HangFire.Filters.GlobalJobFilterCollection", span="", file="GlobalJobFilterCollection.cs"];
m6_27 [label="HangFire.Filters.IJobFilter", span="", file="GlobalJobFilterCollection.cs"];
m7_6 [label="Entry HangFire.PreserveCultureFilter.PreserveCultureFilter()", span="8-8", cluster="HangFire.PreserveCultureFilter.PreserveCultureFilter()", file="HangFireConfig.cs"];
m7_8 [label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="55-55", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs"];
m7_9 [label="transaction.IncrementCounter(''stats:succeeded'')", span="58-58", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs"];
m7_10 [label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="55-55", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs"];
m7_12 [label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="61-61", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs"];
m7_13 [label="transaction.DecrementCounter(''stats:succeeded'')", span="64-64", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs"];
m7_14 [label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="61-61", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs"];
m7_5 [label="Exit HangFire.States.SucceededState.Serialize()", span="45-45", cluster="HangFire.States.SucceededState.Serialize()", file="HangFireConfig.cs"];
m7_0 [label="Entry HangFire.States.SucceededState.SucceededState()", span="28-28", cluster="HangFire.States.SucceededState.SucceededState()", file="HangFireConfig.cs"];
m7_3 [label="Entry HangFire.States.SucceededState.Serialize()", span="45-45", cluster="HangFire.States.SucceededState.Serialize()", color=green, community=0, file="HangFireConfig.cs"];
m7_2 [label="Exit HangFire.States.SucceededState.SucceededState()", span="28-28", cluster="HangFire.States.SucceededState.SucceededState()", file="HangFireConfig.cs"];
m7_1 [label="SucceededAt = DateTime.UtcNow", span="30-30", cluster="HangFire.States.SucceededState.SucceededState()", file="HangFireConfig.cs"];
m7_4 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="47-50", cluster="HangFire.States.SucceededState.Serialize()", file="HangFireConfig.cs"];
m7_7 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="HangFireConfig.cs"];
m7_11 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="19-19", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="HangFireConfig.cs"];
m7_15 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="21-21", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="HangFireConfig.cs"];
m7_16 [label="HangFire.States.SucceededState", span="", file="HangFireConfig.cs"];
m8_75 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="HistoryStatisticsFilter.cs"];
m8_110 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", span="214-214", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", file="HistoryStatisticsFilter.cs"];
m8_111 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="216-220", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", file="HistoryStatisticsFilter.cs"];
m8_112 [label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''critical'', invocationData = '''', arguments = '''' }\r\n                    });\r\n\r\n                var critical = storageConnection.FetchNextJob(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                Assert.NotNull(critical.JobId);\r\n                Assert.Equal(''critical'', critical.Queue);\r\n\r\n                var @default = storageConnection.FetchNextJob(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                Assert.NotNull(@default.JobId);\r\n                Assert.Equal(''default'', @default.Queue);\r\n            })", span="222-245", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", file="HistoryStatisticsFilter.cs"];
m8_113 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", span="214-214", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", file="HistoryStatisticsFilter.cs"];
m8_128 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Sample(string, string)", span="254-254", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Sample(string, string)", file="HistoryStatisticsFilter.cs"];
m8_129 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Sample(string, string)", span="254-254", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Sample(string, string)", file="HistoryStatisticsFilter.cs"];
m8_3 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="HistoryStatisticsFilter.cs"];
m8_9 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="HistoryStatisticsFilter.cs"];
m8_0 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", span="16-16", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="HistoryStatisticsFilter.cs"];
m8_1 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.FetchNextJob(null, CreateTimingOutCancellationToken()));\r\n\r\n                Assert.Equal(''queues'', exception.ParamName);\r\n            })", span="18-24", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="HistoryStatisticsFilter.cs"];
m8_2 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", span="16-16", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="HistoryStatisticsFilter.cs"];
m8_34 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="HistoryStatisticsFilter.cs"];
m8_45 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(int)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(int)", file="HistoryStatisticsFilter.cs"];
m8_126 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="HistoryStatisticsFilter.cs"];
m8_8 [label="Entry Unk.>", span="", cluster="Unk.>", file="HistoryStatisticsFilter.cs"];
m8_15 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", span="28-28", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="HistoryStatisticsFilter.cs"];
m8_16 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentException>(\r\n                    () => connection.FetchNextJob(new string[0], CreateTimingOutCancellationToken()));\r\n\r\n                Assert.Equal(''queues'', exception.ParamName);\r\n            })", span="30-36", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="HistoryStatisticsFilter.cs"];
m8_17 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", span="28-28", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="HistoryStatisticsFilter.cs"];
m8_25 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", span="40-40", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="HistoryStatisticsFilter.cs"];
m8_26 [label="UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource();\r\n                cts.Cancel();\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => connection.FetchNextJob(DefaultQueues, cts.Token));\r\n            })", span="42-49", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="HistoryStatisticsFilter.cs"];
m8_27 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", span="40-40", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="HistoryStatisticsFilter.cs"];
m8_127 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="HistoryStatisticsFilter.cs"];
m8_38 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="53-53", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="HistoryStatisticsFilter.cs"];
m8_39 [label="UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource(200);\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => connection.FetchNextJob(DefaultQueues, cts.Token));\r\n            })", span="55-61", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="HistoryStatisticsFilter.cs"];
m8_40 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="53-53", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="HistoryStatisticsFilter.cs"];
m8_86 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="HistoryStatisticsFilter.cs"];
m8_49 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", span="65-65", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs"];
m8_50 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="67-69", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs"];
m8_51 [label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        jobId = 1,\r\n                        queue = ''default''\r\n                    });\r\n\r\n                // Act\r\n                var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', payload.JobId);\r\n                Assert.Equal(''default'', payload.Queue);\r\n            })", span="72-90", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs"];
m8_52 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", span="65-65", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs"];
m8_73 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="HistoryStatisticsFilter.cs"];
m8_88 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", span="159-159", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="HistoryStatisticsFilter.cs"];
m8_89 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="161-165", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="HistoryStatisticsFilter.cs"];
m8_90 [label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' }\r\n                    });\r\n                // Act\r\n                var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                var otherJobFetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId != @id'',\r\n                    new { id = payload.JobId }).Single();\r\n\r\n                Assert.Null(otherJobFetchedAt);\r\n            })", span="168-188", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="HistoryStatisticsFilter.cs"];
m8_91 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", span="159-159", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="HistoryStatisticsFilter.cs"];
m8_14 [label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="HistoryStatisticsFilter.cs"];
m8_77 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", span="127-127", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs"];
m8_78 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue, FetchedAt)\r\nvalues (scope_identity(), @queue, @fetchedAt)''", span="129-133", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs"];
m8_79 [label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        queue = ''default'',\r\n                        fetchedAt = DateTime.UtcNow.AddDays(-1),\r\n                        invocationData = '''',\r\n                        arguments = ''''\r\n                    });\r\n\r\n                // Act\r\n                var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.NotEmpty(payload.JobId);\r\n            })", span="136-155", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs"];
m8_80 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", span="127-127", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs"];
m8_98 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="HistoryStatisticsFilter.cs"];
m8_33 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="HistoryStatisticsFilter.cs"];
m8_53 [label="Entry Unk.UseConnections", span="", cluster="Unk.UseConnections", file="HistoryStatisticsFilter.cs"];
m8_114 [label="Entry lambda expression", span="222-245", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_4 [label="Entry lambda expression", span="18-24", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_5 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.FetchNextJob(null, CreateTimingOutCancellationToken()))", span="20-21", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_11 [label="connection.FetchNextJob(null, CreateTimingOutCancellationToken())", span="21-21", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_6 [label="Assert.Equal(''queues'', exception.ParamName)", span="23-23", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_10 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_7 [label="Exit lambda expression", span="18-24", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_12 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_18 [label="Entry lambda expression", span="30-36", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_19 [label="var exception = Assert.Throws<ArgumentException>(\r\n                    () => connection.FetchNextJob(new string[0], CreateTimingOutCancellationToken()))", span="32-33", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_23 [label="connection.FetchNextJob(new string[0], CreateTimingOutCancellationToken())", span="33-33", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_20 [label="Assert.Equal(''queues'', exception.ParamName)", span="35-35", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_22 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_21 [label="Exit lambda expression", span="30-36", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_24 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_28 [label="Entry lambda expression", span="42-49", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_29 [label="var cts = new CancellationTokenSource()", span="44-44", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_31 [label="Assert.Throws<OperationCanceledException>(\r\n                    () => connection.FetchNextJob(DefaultQueues, cts.Token))", span="47-48", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_36 [label="connection.FetchNextJob(DefaultQueues, cts.Token)", span="48-48", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_30 [label="cts.Cancel()", span="45-45", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_32 [label="Exit lambda expression", span="42-49", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_35 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_37 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_41 [label="Entry lambda expression", span="55-61", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_42 [label="var cts = new CancellationTokenSource(200)", span="57-57", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_43 [label="Assert.Throws<OperationCanceledException>(\r\n                    () => connection.FetchNextJob(DefaultQueues, cts.Token))", span="59-60", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_47 [label="connection.FetchNextJob(DefaultQueues, cts.Token)", span="60-60", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_44 [label="Exit lambda expression", span="55-61", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_46 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_48 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_55 [label="connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        jobId = 1,\r\n                        queue = ''default''\r\n                    })", span="74-80", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_54 [label="Entry lambda expression", span="72-90", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_56 [label="var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="83-85", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_57 [label="Assert.Equal(''1'', payload.JobId)", span="88-88", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_58 [label="Assert.Equal(''default'', payload.Queue)", span="89-89", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_59 [label="Exit lambda expression", span="72-90", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_66 [label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { invocationData = '''', arguments = '''', queue = ''default'' })", span="105-107", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_65 [label="Entry lambda expression", span="103-123", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_67 [label="var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="110-112", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_69 [label="var fetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId = @id'',\r\n                    new { id = payload.JobId }).Single()", span="117-119", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_68 [label="Assert.NotNull(payload)", span="115-115", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_70 [label="Assert.NotNull(fetchedAt)", span="121-121", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_71 [label="Assert.True(fetchedAt > DateTime.UtcNow.AddMinutes(-1))", span="122-122", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_72 [label="Exit lambda expression", span="103-123", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_82 [label="connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        queue = ''default'',\r\n                        fetchedAt = DateTime.UtcNow.AddDays(-1),\r\n                        invocationData = '''',\r\n                        arguments = ''''\r\n                    })", span="138-146", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_81 [label="Entry lambda expression", span="136-155", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_83 [label="var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="149-151", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_84 [label="Assert.NotEmpty(payload.JobId)", span="154-154", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_85 [label="Exit lambda expression", span="136-155", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_93 [label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' }\r\n                    })", span="170-176", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_92 [label="Entry lambda expression", span="168-188", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_94 [label="var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="178-180", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_95 [label="var otherJobFetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId != @id'',\r\n                    new { id = payload.JobId }).Single()", span="183-185", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_96 [label="Assert.Null(otherJobFetchedAt)", span="187-187", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_97 [label="Exit lambda expression", span="168-188", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_104 [label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' })", span="202-204", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_103 [label="Entry lambda expression", span="200-210", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_105 [label="Assert.Throws<OperationCanceledException>(\r\n                    () => storageConnection.FetchNextJob(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()))", span="206-209", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_108 [label="storageConnection.FetchNextJob(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken())", span="207-209", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_106 [label="Exit lambda expression", span="200-210", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_107 [label="Entry lambda expression", span="207-209", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_109 [label="Exit lambda expression", span="207-209", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_115 [label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''critical'', invocationData = '''', arguments = '''' }\r\n                    })", span="224-230", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_116 [label="var critical = storageConnection.FetchNextJob(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken())", span="232-234", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_119 [label="var @default = storageConnection.FetchNextJob(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken())", span="239-241", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_117 [label="Assert.NotNull(critical.JobId)", span="236-236", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_118 [label="Assert.Equal(''critical'', critical.Queue)", span="237-237", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_120 [label="Assert.NotNull(@default.JobId)", span="243-243", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_121 [label="Assert.Equal(''default'', @default.Queue)", span="244-244", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_122 [label="Exit lambda expression", span="222-245", cluster="lambda expression", file="HistoryStatisticsFilter.cs"];
m8_87 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="HistoryStatisticsFilter.cs"];
m8_74 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="HistoryStatisticsFilter.cs"];
m8_13 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", span="248-248", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", file="HistoryStatisticsFilter.cs"];
m8_123 [label="var source = new CancellationTokenSource(TimeSpan.FromSeconds(10))", span="250-250", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", file="HistoryStatisticsFilter.cs"];
m8_124 [label="return source.Token;", span="251-251", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", file="HistoryStatisticsFilter.cs"];
m8_125 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", span="248-248", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", file="HistoryStatisticsFilter.cs"];
m8_99 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="192-192", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="HistoryStatisticsFilter.cs"];
m8_100 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="194-198", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="HistoryStatisticsFilter.cs"];
m8_101 [label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' });\r\n                \r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => storageConnection.FetchNextJob(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()));\r\n            })", span="200-210", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="HistoryStatisticsFilter.cs"];
m8_102 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="192-192", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="HistoryStatisticsFilter.cs"];
m8_76 [label="Entry Unk.True", span="", cluster="Unk.True", file="HistoryStatisticsFilter.cs"];
m8_60 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="HistoryStatisticsFilter.cs"];
m8_61 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", span="94-94", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="HistoryStatisticsFilter.cs"];
m8_62 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="96-100", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="HistoryStatisticsFilter.cs"];
m8_63 [label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new { invocationData = '''', arguments = '''', queue = ''default'' });\r\n\r\n                // Act\r\n                var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.NotNull(payload);\r\n\r\n                var fetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId = @id'',\r\n                    new { id = payload.JobId }).Single();\r\n\r\n                Assert.NotNull(fetchedAt);\r\n                Assert.True(fetchedAt > DateTime.UtcNow.AddMinutes(-1));\r\n            })", span="103-123", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="HistoryStatisticsFilter.cs"];
m8_64 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", span="94-94", cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="HistoryStatisticsFilter.cs"];
m8_130 [label="HangFire.SqlServer.Tests.ConnectionFacts", span="", file="HistoryStatisticsFilter.cs"];
m8_131 [label="HangFire.SqlServer.SqlServerConnection", span="", file="HistoryStatisticsFilter.cs"];
m8_132 [label="HangFire.SqlServer.SqlServerConnection", span="", file="HistoryStatisticsFilter.cs"];
m8_133 [label="HangFire.SqlServer.SqlServerConnection", span="", file="HistoryStatisticsFilter.cs"];
m8_134 [label=cts, span="", file="HistoryStatisticsFilter.cs"];
m8_135 [label="HangFire.SqlServer.SqlServerConnection", span="", file="HistoryStatisticsFilter.cs"];
m8_136 [label=cts, span="", file="HistoryStatisticsFilter.cs"];
m8_137 [label=arrangeSql, span="", file="HistoryStatisticsFilter.cs"];
m8_138 [label=arrangeSql, span="", file="HistoryStatisticsFilter.cs"];
m8_139 [label=arrangeSql, span="", file="HistoryStatisticsFilter.cs"];
m8_140 [label=arrangeSql, span="", file="HistoryStatisticsFilter.cs"];
m8_141 [label=arrangeSql, span="", file="HistoryStatisticsFilter.cs"];
m8_142 [label="HangFire.SqlServer.SqlServerConnection", span="", file="HistoryStatisticsFilter.cs"];
m8_143 [label=arrangeSql, span="", file="HistoryStatisticsFilter.cs"];
m9_0 [label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="11-11", cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="IClientExceptionFilter.cs"];
m9_1 [label="Exit HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="11-11", cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="IClientExceptionFilter.cs"];
m10_2 [label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="17-17", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="IClientFilter.cs"];
m10_3 [label="Exit HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="17-17", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="IClientFilter.cs"];
m10_0 [label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="11-11", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="IClientFilter.cs"];
m10_1 [label="Exit HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="11-11", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="IClientFilter.cs"];
m13_0 [label="Entry HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="11-11", cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="IServerExceptionFilter.cs"];
m13_1 [label="Exit HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="11-11", cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="IServerExceptionFilter.cs"];
m14_0 [label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="11-11", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="IServerFilter.cs"];
m14_1 [label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="11-11", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="IServerFilter.cs"];
m14_2 [label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="17-17", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="IServerFilter.cs"];
m14_3 [label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="17-17", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="IServerFilter.cs"];
m15_2 [label="Entry HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="26-26", cluster="HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="IStateChangedFilter.cs"];
m15_3 [label="Exit HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="26-26", cluster="HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="IStateChangedFilter.cs"];
m15_0 [label="Entry HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="17-17", cluster="HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="IStateChangedFilter.cs"];
m15_1 [label="Exit HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="17-17", cluster="HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="IStateChangedFilter.cs"];
m16_0 [label="Entry HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", span="21-21", cluster="HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="IStateChangingFilter.cs"];
m16_1 [label="Exit HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", span="21-21", cluster="HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="IStateChangingFilter.cs"];
m17_60 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="108-108", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m17_61 [label="_stateMock = new Mock<JobState>(''SomeReason'')", span="110-110", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m17_62 [label="_stateMock.Setup(x => x.StateName).Returns(''Test'')", span="111-111", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m17_63 [label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="112-112", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m17_64 [label="_client.CreateJob(\r\n                    JobSteps.DefaultJobId,\r\n                    typeof(TestJob),\r\n                    _stateMock.Object,\r\n                    _arguments)", span="116-120", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m17_65 [label=Exception, span="122-122", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m17_66 [label="_exception = ex", span="124-124", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m17_67 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="108-108", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m17_0 [label="Entry HangFire.Tests.JobClientSteps.GivenAClient()", span="30-30", cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs"];
m17_1 [label="_client = new JobClient(\r\n                RedisFactory.BasicManager,\r\n                new JobCreator(_clientFilters, _exceptionFilters))", span="32-34", cluster="HangFire.Tests.JobClientSteps.GivenAClient()", color=red, community=0, file="JobClientSteps.cs"];
m17_2 [label="Exit HangFire.Tests.JobClientSteps.GivenAClient()", span="30-30", cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs"];
m17_9 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JobClientSteps.cs"];
m17_53 [label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="95-95", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs"];
m17_54 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults))", span="97-97", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", color=red, community=0, file="JobClientSteps.cs"];
m17_55 [label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="95-95", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs"];
m17_154 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="JobClientSteps.cs"];
m17_133 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="JobClientSteps.cs"];
m17_23 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="JobClientSteps.cs"];
m17_124 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JobClientSteps.cs"];
m17_56 [label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="12-12", cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobClientSteps.cs"];
m17_19 [label="Entry HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="62-62", cluster="HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs"];
m17_20 [label="_parameters = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="64-64", cluster="HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs"];
m17_21 [label="_clientFilters.Add(new TestFilter(\r\n                name, \r\n                _clientFilterResults, \r\n                setOnCreatingParameters: _parameters))", span="66-69", cluster="HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", color=red, community=1, file="JobClientSteps.cs"];
m17_22 [label="Exit HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="62-62", cluster="HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs"];
m17_115 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", span="194-194", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs"];
m17_116 [label="_client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), new Mock<JobState>(''1'').Object, null)", span="198-198", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs"];
m17_117 [label=Exception, span="200-200", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs"];
m17_118 [label="_exception = ex", span="202-202", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs"];
m17_119 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", span="194-194", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs"];
m17_68 [label="Entry Mock<JobState>.cstr", span="", cluster="Mock<JobState>.cstr", file="JobClientSteps.cs"];
m17_196 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobClientSteps.cs"];
m17_99 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="155-155", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs"];
m17_100 [label="_client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, new {})", span="159-159", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs"];
m17_101 [label=Exception, span="161-161", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs"];
m17_102 [label="_exception = ex", span="163-163", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs"];
m17_103 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="155-155", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs"];
m17_174 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="277-277", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs"];
m17_175 [label="Assert.AreNotEqual(0, _exceptionFilterResults.Count)", span="279-279", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs"];
m17_176 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="277-277", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs"];
m17_146 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobClientSteps.cs"];
m17_166 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="265-265", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m17_167 [label="Assert.AreEqual(table.RowCount, _clientFilterResults.Count)", span="267-267", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m17_169 [label="i < table.RowCount", span="269-269", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m17_170 [label="var method = table.Rows[i][''Method'']", span="271-271", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m17_168 [label="var i = 0", span="269-269", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m17_171 [label="Assert.AreEqual(method, _clientFilterResults[i])", span="272-272", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m17_172 [label="i++", span="269-269", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m17_173 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="265-265", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m17_144 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobClientSteps.cs"];
m17_13 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="50-50", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m17_14 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, false, true))", span="52-52", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", color=red, community=0, file="JobClientSteps.cs"];
m17_15 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="50-50", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m17_80 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="129-129", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs"];
m17_81 [label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="131-131", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs"];
m17_82 [label="When(''I create a job'')", span="132-132", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs"];
m17_83 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="129-129", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs"];
m17_177 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JobClientSteps.cs"];
m17_10 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="44-44", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs"];
m17_11 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, true))", span="46-46", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", color=red, community=0, file="JobClientSteps.cs"];
m17_12 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="44-44", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs"];
m17_197 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterGotTheActualValuesOfTheParameters(string)", span="313-313", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterGotTheActualValuesOfTheParameters(string)", file="JobClientSteps.cs"];
m17_198 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterGotTheActualValuesOfTheParameters(string)", span="313-313", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterGotTheActualValuesOfTheParameters(string)", file="JobClientSteps.cs"];
m17_5 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", span="38-38", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs"];
m17_6 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults))", span="40-40", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", color=red, community=0, file="JobClientSteps.cs"];
m17_7 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", span="38-38", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs"];
m17_30 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatReadsAllOfTheAboveParameters(string)", span="73-73", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatReadsAllOfTheAboveParameters(string)", file="JobClientSteps.cs"];
m17_31 [label="_clientFilters.Add(new TestFilter(\r\n                name, _clientFilterResults, readParameters: _parameters))", span="75-76", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatReadsAllOfTheAboveParameters(string)", color=red, community=1, file="JobClientSteps.cs"];
m17_32 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatReadsAllOfTheAboveParameters(string)", span="73-73", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatReadsAllOfTheAboveParameters(string)", file="JobClientSteps.cs"];
m17_128 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JobClientSteps.cs"];
m17_91 [label="Entry HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="136-136", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs"];
m17_92 [label="_clientFilters.Add(new TestFilter(''buggy'', _clientFilterResults, true))", span="138-138", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", color=red, community=0, file="JobClientSteps.cs"];
m17_93 [label="Exit HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="136-136", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs"];
m17_104 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="168-168", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs"];
m17_105 [label="_client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), null, new {})", span="172-172", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs"];
m17_106 [label=Exception, span="174-174", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs"];
m17_107 [label="_exception = ex", span="176-176", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs"];
m17_108 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="168-168", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs"];
m17_145 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JobClientSteps.cs"];
m17_129 [label="Entry HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="219-219", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs"];
m17_130 [label="var job = Redis.Client.GetAllEntriesFromHash(''hangfire:job:'' + JobSteps.DefaultJobId)", span="221-221", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs"];
m17_131 [label="DictionaryAssert.ContainsFollowingItems(table, job)", span="222-222", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs"];
m17_132 [label="Exit HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="219-219", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs"];
m17_43 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", span="87-87", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", file="JobClientSteps.cs"];
m17_44 [label="_parameters = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="89-89", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", file="JobClientSteps.cs"];
m17_45 [label="_clientFilters.Add(new TestFilter(\r\n                name, _clientFilterResults, setOnCreatedParameters: _parameters))", span="90-91", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", color=red, community=1, file="JobClientSteps.cs"];
m17_46 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", span="87-87", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", file="JobClientSteps.cs"];
m17_189 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JobClientSteps.cs"];
m17_110 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="181-181", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs"];
m17_111 [label="_client.CreateJob(JobSteps.DefaultJobId, typeof(JobClientSteps), new Mock<JobState>(''1'').Object, new {})", span="185-185", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs"];
m17_112 [label=Exception, span="187-187", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs"];
m17_113 [label="_exception = ex", span="189-189", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs"];
m17_114 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="181-181", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs"];
m17_3 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="31-31", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClientSteps.cs"];
m17_147 [label="Entry HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="242-242", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs"];
m17_148 [label="_stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId),\r\n                Times.Once)", span="244-246", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs"];
m17_149 [label="Exit HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="242-242", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs"];
m17_79 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="JobClientSteps.cs"];
m17_135 [label="Entry HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="226-226", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m17_136 [label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="228-230", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m17_137 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="231-231", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m17_138 [label="Assert.AreEqual(_arguments.Count, args.Count)", span="233-233", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m17_140 [label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="236-236", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m17_139 [label=_arguments, span="234-234", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m17_141 [label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="237-237", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m17_142 [label="Exit HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="226-226", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m17_16 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="56-56", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs"];
m17_17 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, true, false, false))", span="58-58", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", color=red, community=0, file="JobClientSteps.cs"];
m17_18 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="56-56", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs"];
m17_71 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClientSteps.cs"];
m17_162 [label="Entry HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="257-257", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs"];
m17_163 [label="Assert.IsNotNull(_exception)", span="259-259", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs"];
m17_164 [label="Assert.IsInstanceOfType(_exception, typeof(CreateJobFailedException))", span="260-260", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs"];
m17_165 [label="Exit HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="257-257", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs"];
m17_69 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobClientSteps.cs"];
m17_161 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="JobClientSteps.cs"];
m17_125 [label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="213-213", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs"];
m17_126 [label="Assert.IsFalse(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="215-215", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs"];
m17_127 [label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="213-213", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs"];
m17_160 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="JobClientSteps.cs"];
m17_57 [label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="101-101", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m17_58 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults, true))", span="103-103", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", color=red, community=0, file="JobClientSteps.cs"];
m17_59 [label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="101-101", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m17_120 [label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="207-207", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs"];
m17_121 [label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="209-209", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs"];
m17_122 [label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="207-207", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs"];
m17_151 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="JobClientSteps.cs"];
m17_24 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="JobClientSteps.cs"];
m17_27 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="JobClientSteps.cs"];
m17_25 [label="x[''Name'']", span="64-64", cluster="lambda expression", file="JobClientSteps.cs"];
m17_26 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="JobClientSteps.cs"];
m17_28 [label="x[''Value'']", span="64-64", cluster="lambda expression", file="JobClientSteps.cs"];
m17_29 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="JobClientSteps.cs"];
m17_37 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="JobClientSteps.cs"];
m17_40 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="JobClientSteps.cs"];
m17_38 [label="x[''Name'']", span="82-82", cluster="lambda expression", file="JobClientSteps.cs"];
m17_39 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="JobClientSteps.cs"];
m17_41 [label="x[''Value'']", span="82-82", cluster="lambda expression", file="JobClientSteps.cs"];
m17_42 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="JobClientSteps.cs"];
m17_47 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="JobClientSteps.cs"];
m17_50 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="JobClientSteps.cs"];
m17_48 [label="x[''Name'']", span="89-89", cluster="lambda expression", file="JobClientSteps.cs"];
m17_49 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="JobClientSteps.cs"];
m17_51 [label="x[''Value'']", span="89-89", cluster="lambda expression", file="JobClientSteps.cs"];
m17_52 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="JobClientSteps.cs"];
m17_73 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="JobClientSteps.cs"];
m17_76 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="JobClientSteps.cs"];
m17_74 [label="x.StateName", span="111-111", cluster="lambda expression", file="JobClientSteps.cs"];
m17_75 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="JobClientSteps.cs"];
m17_77 [label="x.GetProperties()", span="112-112", cluster="lambda expression", file="JobClientSteps.cs"];
m17_78 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="JobClientSteps.cs"];
m17_85 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="JobClientSteps.cs"];
m17_88 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="JobClientSteps.cs"];
m17_86 [label="x[''Name'']", span="131-131", cluster="lambda expression", file="JobClientSteps.cs"];
m17_87 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="JobClientSteps.cs"];
m17_89 [label="x[''Value'']", span="131-131", cluster="lambda expression", file="JobClientSteps.cs"];
m17_90 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="JobClientSteps.cs"];
m17_152 [label="x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="245-245", cluster="lambda expression", file="JobClientSteps.cs"];
m17_153 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="JobClientSteps.cs"];
m17_159 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JobClientSteps.cs"];
m17_155 [label="Entry HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="250-250", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs"];
m17_156 [label="Assert.IsNotNull(_exception)", span="252-252", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs"];
m17_157 [label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="253-253", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs"];
m17_158 [label="Exit HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="250-250", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs"];
m17_178 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="284-284", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m17_179 [label="Assert.AreEqual(table.RowCount, _exceptionFilterResults.Count)", span="286-286", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m17_181 [label="i < table.RowCount", span="288-288", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m17_182 [label="var filter = table.Rows[i][''Filter'']", span="290-290", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m17_180 [label="var i = 0", span="288-288", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m17_183 [label="Assert.AreEqual(filter, _exceptionFilterResults[i])", span="291-291", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m17_184 [label="i++", span="288-288", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m17_185 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="284-284", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m17_150 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobClientSteps.cs"];
m17_143 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="JobClientSteps.cs"];
m17_186 [label="Entry HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="296-296", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs"];
m17_187 [label="Assert.IsNull(_exception)", span="298-298", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs"];
m17_188 [label="Exit HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="296-296", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs"];
m17_134 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="JobClientSteps.cs"];
m17_70 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="JobClientSteps.cs"];
m17_8 [label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="18-18", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="JobClientSteps.cs"];
m17_33 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="80-80", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs"];
m17_34 [label="_parameters = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="82-82", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs"];
m17_35 [label="GivenTheClientFilterThatReadsAllOfTheAboveParameters(name)", span="83-83", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs"];
m17_36 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="80-80", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs"];
m17_72 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="JobClientSteps.cs"];
m17_94 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="142-142", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs"];
m17_95 [label="_client.CreateJob(null, typeof(TestJob), new Mock<JobState>(''1'').Object, new {})", span="146-146", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs"];
m17_96 [label=Exception, span="148-148", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs"];
m17_97 [label="_exception = ex", span="150-150", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs"];
m17_98 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="142-142", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs"];
m17_4 [label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobClientSteps.cs"];
m17_109 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="65-65", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClientSteps.cs"];
m17_123 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="JobClientSteps.cs"];
m17_190 [label="Entry HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", span="302-302", cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs"];
m17_191 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="304-304", cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs"];
m17_192 [label=_parameters, span="305-305", cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs"];
m17_193 [label="Assert.IsTrue(job.ContainsKey(parameter.Key))", span="307-307", cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs"];
m17_194 [label="Assert.AreEqual(parameter.Value, JobHelper.FromJson<string>(job[parameter.Key]))", span="308-308", cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs"];
m17_195 [label="Exit HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", span="302-302", cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs"];
m17_199 [label="HangFire.Tests.JobClientSteps", span="", file="JobClientSteps.cs"];
m18_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobCreator.cs"];
m18_24 [label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs"];
m18_65 [label=filters, span="117-117", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=red, community=0, file="JobCreator.cs"];
m18_66 [label="filter.OnClientException(context)", span="119-119", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", color=green, community=0];
m18_67 [label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs"];
m18_64 [label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="17-17", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="JobCreator.cs"];
m18_23 [label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="12-12", cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="JobCreator.cs"];
m18_3 [label="Entry HangFire.Client.JobCreator.JobCreator()", span="20-20", cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs"];
m18_0 [label="Entry HangFire.Client.JobCreator.JobCreator()", span="12-12", cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs"];
m18_1 [label="Current = new JobCreator()", span="14-14", cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs"];
m18_2 [label="Exit HangFire.Client.JobCreator.JobCreator()", span="12-12", cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs"];
m18_4 [label="Exit HangFire.Client.JobCreator.JobCreator()", span="20-20", cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs"];
m18_45 [label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_46 [label="filter.OnCreating(preContext)", span="79-79", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_47 [label="preContext.Canceled", span="80-80", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_48 [label="return new CreatedContext(\r\n                    preContext, true, null);", span="82-83", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_51 [label="postContext = continuation()", span="90-90", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_54 [label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="95-96", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_55 [label="filter.OnCreated(postContext)", span="98-98", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_59 [label="filter.OnCreated(postContext)", span="108-108", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_49 [label="var wasError = false", span="86-86", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_50 [label="CreatedContext postContext", span="87-87", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_52 [label=Exception, span="92-92", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_58 [label="!wasError", span="106-106", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_53 [label="wasError = true", span="94-94", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_56 [label="!postContext.ExceptionHandled", span="100-100", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_60 [label="return postContext;", span="111-111", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_57 [label="throw;", span="102-102", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_61 [label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs"];
m18_14 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m18_15 [label="CreateWithFilters(context, context.JobDescriptor, _clientFilters)", span="42-42", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", color=red, community=0, file="JobCreator.cs"];
m18_17 [label="var exceptionContext = new ClientExceptionContext(context, ex)", span="46-46", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m18_16 [label=Exception, span="44-44", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", color=green, community=0];
m18_18 [label="InvokeExceptionFilters(exceptionContext, _clientExceptionFilters)", span="48-48", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", color=red, community=0, file="JobCreator.cs"];
m18_19 [label="!exceptionContext.ExceptionHandled", span="49-49", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m18_20 [label="throw;", span="51-51", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m18_21 [label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m18_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobCreator.cs"];
m18_33 [label="Entry Unk.thunk", span="", cluster="Unk.thunk", file="JobCreator.cs"];
m18_30 [label="Entry HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="10-10", cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m18_38 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="105-105", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="JobCreator.cs"];
m18_68 [label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="11-11", cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="JobCreator.cs"];
m18_39 [label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="12-12", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="JobCreator.cs"];
m18_62 [label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="11-11", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="JobCreator.cs"];
m18_5 [label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs"];
m18_6 [label="clientFilters == null", span="31-31", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs"];
m18_8 [label="clientExceptionFilters == null", span="32-32", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=red, community=0, file="JobCreator.cs"];
m18_10 [label="_clientFilters = clientFilters", span="34-34", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs"];
m18_11 [label="_clientExceptionFilters = clientExceptionFilters", span="35-35", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs"];
m18_7 [label="throw new ArgumentNullException(''clientFilters'');", span="31-31", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs"];
m18_9 [label="throw new ArgumentNullException(''clientExceptionFilters'');", span="32-32", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=red, community=0, file="JobCreator.cs"];
m18_12 [label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs"];
m18_63 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JobCreator.cs"];
m18_42 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="JobCreator.cs"];
m18_35 [label="jobDescriptor.Create()", span="64-64", cluster="lambda expression", file="JobCreator.cs"];
m18_36 [label="return new CreatedContext(createContext, false, null);", span="65-65", cluster="lambda expression", file="JobCreator.cs"];
m18_43 [label="InvokeClientFilter(filter, preContext, next)", span="69-69", cluster="lambda expression", file="JobCreator.cs"];
m18_40 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="JobCreator.cs"];
m18_34 [label="Entry lambda expression", span="62-66", cluster="lambda expression", file="JobCreator.cs"];
m18_37 [label="Exit lambda expression", span="62-66", cluster="lambda expression", file="JobCreator.cs"];
m18_41 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="JobCreator.cs"];
m18_44 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="JobCreator.cs"];
m18_32 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="JobCreator.cs"];
m18_22 [label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs"];
m18_25 [label="var preContext = new CreatingContext(createContext)", span="61-61", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs"];
m18_26 [label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Create();\r\n                return new CreatedContext(createContext, false, null);\r\n            }", span="62-66", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs"];
m18_27 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="68-69", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs"];
m18_28 [label="thunk()", span="71-71", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs"];
m18_29 [label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs"];
m18_69 [label="HangFire.Client.JobCreator", span="", file="JobCreator.cs"];
m18_70 [label="HangFire.Client.ClientJobDescriptor", span="", file="JobCreator.cs"];
m18_71 [label="HangFire.Client.CreateContext", span="", file="JobCreator.cs"];
m18_72 [label=preContext, span="", file="JobCreator.cs"];
m18_73 [label="System.Func<HangFire.Filters.CreatedContext>", span="", file="JobCreator.cs"];
m18_74 [label="HangFire.Filters.IClientFilter", span="", file="JobCreator.cs"];
m27_35 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="JobManager.feature.cs"];
m27_30 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobManager.feature.cs"];
m27_0 [label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_28 [label="WriteLiteral(''        </tbody>\n    </table>\n'')", span="230-230", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs"];
m27_9 [label=servers, span="123-123", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_23 [label="Write(JobHelper.ToTimestamp(server.Heartbeat.Value))", span="195-195", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs"];
m27_22 [label="WriteLiteral(''                            <span data-moment=\'''')", span="190-190", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_24 [label="WriteLiteral(''\''>\n                                '')", span="200-200", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs"];
m27_25 [label="Write(server.Heartbeat)", span="205-205", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs"];
m27_26 [label="WriteLiteral(''\n                            </span>\n'')", span="210-210", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs"];
m27_27 [label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="220-220", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs"];
m27_21 [label="server.Heartbeat.HasValue", span="184-184", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_1 [label="WriteLiteral(''\n'')", span="61-61", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_2 [label="Layout = new LayoutPage { Title = ''Servers'' }", span="74-74", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_5 [label="WriteLiteral(''\n'')", span="83-83", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_7 [label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        There are no active servers. Backgr'' +\r\n''ound tasks will not be processed.\n    </div>\n'')", span="94-95", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_8 [label="WriteLiteral(@''    <table class=''''table''''>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Workers</th>\n                <th>Queues</th>\n                <th>Started</th>\n                <th>Heartbeat</th>\n            </tr>\n        </thead>\n        <tbody>\n'')", span="107-118", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_10 [label="WriteLiteral(''                <tr>\n                    <td>'')", span="129-129", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_11 [label="Write(server.Name.ToUpperInvariant())", span="134-134", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_12 [label="WriteLiteral(''</td>\n                    <td>'')", span="139-139", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_13 [label="Write(server.WorkersCount)", span="144-144", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_14 [label="WriteLiteral(''</td>\n                    <td>'')", span="149-149", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_15 [label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="154-154", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_16 [label="WriteLiteral(''</td>\n                    <td data-moment=\'''')", span="159-159", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_17 [label="Write(JobHelper.ToTimestamp(server.StartedAt))", span="164-164", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_18 [label="WriteLiteral(''\''>'')", span="169-169", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_19 [label="Write(server.StartedAt)", span="174-174", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_20 [label="WriteLiteral(''</td>\n                    <td>\n'')", span="179-179", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_4 [label="IList<ServerDto> servers = monitor.Servers()", span="77-77", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_3 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_6 [label="servers.Count == 0", span="88-88", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_29 [label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs"];
m27_38 [label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40", cluster="HangFire.Web.HtmlHelper.Raw(string)", file="JobManager.feature.cs"];
m27_33 [label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25", cluster="HangFire.Storage.IMonitoringApi.Servers()", file="JobManager.feature.cs"];
m27_32 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobManager.feature.cs"];
m27_40 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobManager.feature.cs"];
m27_34 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="JobManager.feature.cs"];
m27_31 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobManager.feature.cs"];
m27_37 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="JobManager.feature.cs"];
m27_39 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="JobManager.feature.cs"];
m27_36 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobManager.feature.cs"];
m27_41 [label="HangFire.Web.Pages.ServersPage", span="", file="JobManager.feature.cs"];
m28_33 [label="Entry HangFire.JobActivator.JobActivator()", span="4-4", cluster="HangFire.JobActivator.JobActivator()", file="JobManagerSteps.cs"];
m28_10 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JobManagerSteps.cs"];
m28_4 [label="Entry HangFire.Tests.JobManagerSteps.GivenAManager()", span="26-26", cluster="HangFire.Tests.JobManagerSteps.GivenAManager()", file="JobManagerSteps.cs"];
m28_5 [label="Exit HangFire.Tests.JobManagerSteps.GivenAManager()", span="26-26", cluster="HangFire.Tests.JobManagerSteps.GivenAManager()", file="JobManagerSteps.cs"];
m28_43 [label="Entry HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", span="92-92", cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", file="JobManagerSteps.cs"];
m28_44 [label="Assert.IsFalse(TestJob.Performed)", span="94-94", cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", file="JobManagerSteps.cs"];
m28_45 [label="Exit HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", span="92-92", cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", file="JobManagerSteps.cs"];
m28_42 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JobManagerSteps.cs"];
m28_23 [label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="12-12", cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobManagerSteps.cs"];
m28_61 [label="Entry HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", span="123-123", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", file="JobManagerSteps.cs"];
m28_62 [label="Assert.AreNotEqual(0, _exceptionResults.Count)", span="125-125", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", file="JobManagerSteps.cs"];
m28_63 [label="Exit HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", span="123-123", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", file="JobManagerSteps.cs"];
m28_47 [label="Entry HangFire.Tests.JobManagerSteps.ThenThereShouldBeNoPerformingActions()", span="98-98", cluster="HangFire.Tests.JobManagerSteps.ThenThereShouldBeNoPerformingActions()", file="JobManagerSteps.cs"];
m28_48 [label="Exit HangFire.Tests.JobManagerSteps.ThenThereShouldBeNoPerformingActions()", span="98-98", cluster="HangFire.Tests.JobManagerSteps.ThenThereShouldBeNoPerformingActions()", file="JobManagerSteps.cs"];
m28_20 [label="Entry HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilter(string)", span="56-56", cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilter(string)", file="JobManagerSteps.cs"];
m28_21 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionResults))", span="58-58", cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilter(string)", color=red, community=0, file="JobManagerSteps.cs"];
m28_22 [label="Exit HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilter(string)", span="56-56", cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilter(string)", file="JobManagerSteps.cs"];
m28_64 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JobManagerSteps.cs"];
m28_0 [label="Entry HangFire.Tests.JobManagerSteps.BeforeScenario()", span="19-19", cluster="HangFire.Tests.JobManagerSteps.BeforeScenario()", file="JobManagerSteps.cs"];
m28_1 [label="TestJob.Performed = false", span="21-21", cluster="HangFire.Tests.JobManagerSteps.BeforeScenario()", file="JobManagerSteps.cs"];
m28_2 [label="TestJob.Disposed = false", span="22-22", cluster="HangFire.Tests.JobManagerSteps.BeforeScenario()", file="JobManagerSteps.cs"];
m28_3 [label="Exit HangFire.Tests.JobManagerSteps.BeforeScenario()", span="19-19", cluster="HangFire.Tests.JobManagerSteps.BeforeScenario()", file="JobManagerSteps.cs"];
m28_46 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JobManagerSteps.cs"];
m28_60 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JobManagerSteps.cs"];
m28_65 [label="Entry HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="130-130", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs"];
m28_66 [label="Assert.AreEqual(table.RowCount, _exceptionResults.Count)", span="132-132", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs"];
m28_68 [label="i < table.RowCount", span="134-134", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs"];
m28_69 [label="var filter = table.Rows[i][''Filter'']", span="136-136", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs"];
m28_67 [label="var i = 0", span="134-134", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs"];
m28_70 [label="Assert.AreEqual(filter, _exceptionResults[i])", span="137-137", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs"];
m28_71 [label="i++", span="134-134", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs"];
m28_72 [label="Exit HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="130-130", cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs"];
m28_24 [label="Entry HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", span="62-62", cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", file="JobManagerSteps.cs"];
m28_25 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionResults, true))", span="64-64", cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", color=red, community=0, file="JobManagerSteps.cs"];
m28_26 [label="Exit HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", span="62-62", cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", file="JobManagerSteps.cs"];
m28_14 [label="Entry HangFire.Tests.JobManagerSteps.GivenAServerFilterThatThrowsAnException(string)", span="44-44", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatThrowsAnException(string)", file="JobManagerSteps.cs"];
m28_15 [label="_serverFilters.Add(new TestFilter(name, _serverResults, true))", span="46-46", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatThrowsAnException(string)", color=red, community=0, file="JobManagerSteps.cs"];
m28_16 [label="Exit HangFire.Tests.JobManagerSteps.GivenAServerFilterThatThrowsAnException(string)", span="44-44", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatThrowsAnException(string)", file="JobManagerSteps.cs"];
m28_34 [label="Entry HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="20-20", cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobManagerSteps.cs"];
m28_49 [label="Entry HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", span="104-104", cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", file="JobManagerSteps.cs"];
m28_50 [label="Assert.IsTrue(TestJob.Disposed)", span="106-106", cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", file="JobManagerSteps.cs"];
m28_51 [label="Exit HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", span="104-104", cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", file="JobManagerSteps.cs"];
m28_17 [label="Entry HangFire.Tests.JobManagerSteps.GivenAServerFilterThatHandlesAnException(string)", span="50-50", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatHandlesAnException(string)", file="JobManagerSteps.cs"];
m28_18 [label="_serverFilters.Add(new TestFilter(name, _serverResults, false, false, true))", span="52-52", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatHandlesAnException(string)", color=red, community=0, file="JobManagerSteps.cs"];
m28_19 [label="Exit HangFire.Tests.JobManagerSteps.GivenAServerFilterThatHandlesAnException(string)", span="50-50", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatHandlesAnException(string)", file="JobManagerSteps.cs"];
m28_39 [label="Entry HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", span="86-86", cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", file="JobManagerSteps.cs"];
m28_40 [label="Assert.IsTrue(TestJob.Performed)", span="88-88", cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", file="JobManagerSteps.cs"];
m28_41 [label="Exit HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", span="86-86", cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", file="JobManagerSteps.cs"];
m28_37 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobManagerSteps.cs"];
m28_27 [label="Entry HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", span="68-68", cluster="HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", file="JobManagerSteps.cs"];
m28_28 [label="var context = new ServerContext(\r\n                ServerSteps.DefaultServerName,\r\n                new JobActivator(),\r\n                new JobPerformer(_serverFilters, _exceptionFilters))", span="70-73", cluster="HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", color=red, community=0, file="JobManagerSteps.cs"];
m28_29 [label="var manager = new JobManager(\r\n                new JobFetcher(RedisFactory.BasicManager, QueueSteps.DefaultQueue),\r\n                RedisFactory.BasicManager,\r\n                context,\r\n                1)", span="75-79", cluster="HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", file="JobManagerSteps.cs"];
m28_30 [label="manager.ProcessNextJob(new CancellationTokenSource().Token)", span="81-81", cluster="HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", file="JobManagerSteps.cs"];
m28_31 [label="Exit HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", span="68-68", cluster="HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", file="JobManagerSteps.cs"];
m28_11 [label="Entry HangFire.Tests.JobManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", span="38-38", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", file="JobManagerSteps.cs"];
m28_12 [label="_serverFilters.Add(new TestFilter(name, _serverResults, false, true))", span="40-40", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", color=red, community=0, file="JobManagerSteps.cs"];
m28_13 [label="Exit HangFire.Tests.JobManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", span="38-38", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", file="JobManagerSteps.cs"];
m28_38 [label="Entry HangFire.Server.JobManager.ProcessNextJob(System.Threading.CancellationToken)", span="57-57", cluster="HangFire.Server.JobManager.ProcessNextJob(System.Threading.CancellationToken)", file="JobManagerSteps.cs"];
m28_6 [label="Entry HangFire.Tests.JobManagerSteps.GivenAServerFilter(string)", span="32-32", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilter(string)", file="JobManagerSteps.cs"];
m28_7 [label="_serverFilters.Add(new TestFilter(name, _serverResults))", span="34-34", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilter(string)", color=red, community=0, file="JobManagerSteps.cs"];
m28_8 [label="Exit HangFire.Tests.JobManagerSteps.GivenAServerFilter(string)", span="32-32", cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilter(string)", file="JobManagerSteps.cs"];
m28_32 [label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9", cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobManagerSteps.cs"];
m28_9 [label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="18-18", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="JobManagerSteps.cs"];
m28_35 [label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", span="18-18", cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", file="JobManagerSteps.cs"];
m28_52 [label="Entry HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", span="111-111", cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs"];
m28_53 [label="Assert.AreEqual(table.RowCount, _serverResults.Count)", span="113-113", cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs"];
m28_55 [label="i < table.RowCount", span="115-115", cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs"];
m28_56 [label="var method = table.Rows[i][''Method'']", span="117-117", cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs"];
m28_54 [label="var i = 0", span="115-115", cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs"];
m28_57 [label="Assert.AreEqual(method, _serverResults[i])", span="118-118", cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs"];
m28_58 [label="i++", span="115-115", cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs"];
m28_59 [label="Exit HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", span="111-111", cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs"];
m28_36 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="JobManagerSteps.cs"];
m28_73 [label="HangFire.Tests.JobManagerSteps", span="", file="JobManagerSteps.cs"];
m29_7 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="JobPerformer.cs"];
m29_8 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="JobPerformer.cs"];
m29_6 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="JobPerformer.cs"];
m29_0 [label="Entry Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs"];
m29_1 [label="StateContextValue = new StateContextMock()", span="13-13", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs"];
m29_2 [label="NewStateValue = new Mock<IState>().Object", span="14-14", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs"];
m29_4 [label="_context = new Lazy<ApplyStateContext>(\r\n                () => new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue))", span="17-21", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", color=green, community=0, file="JobPerformer.cs"];
m29_3 [label="HangFire.Storage.Monitoring.ScheduleDto", span="", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs"];
m29_5 [label="Exit Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs"];
m29_9 [label="Entry lambda expression", span="18-21", cluster="lambda expression", file="JobPerformer.cs"];
m29_10 [label="new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue)", span="18-21", cluster="lambda expression", color=green, community=0, file="JobPerformer.cs"];
m29_11 [label="Exit lambda expression", span="18-21", cluster="lambda expression", file="JobPerformer.cs"];
m29_12 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="23-23", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="JobPerformer.cs"];
m29_13 [label="Hangfire.Core.Tests.ApplyStateContextMock", span="", file="JobPerformer.cs"];
m31_4 [label="Entry HangFire.Web.SingleResourceHandler.WriteResponse()", span="31-31", cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="JobStorage.cs"];
m31_5 [label="WriteResource(_assembly, _resourceName)", span="33-33", cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="JobStorage.cs"];
m31_6 [label="Exit HangFire.Web.SingleResourceHandler.WriteResponse()", span="31-31", cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="JobStorage.cs"];
m31_7 [label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", span="50-50", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", file="JobStorage.cs"];
m31_0 [label="Entry HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25", cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="JobStorage.cs"];
m31_1 [label="_assembly = assembly", span="27-27", cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="JobStorage.cs"];
m31_2 [label="_resourceName = resourceName", span="28-28", cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="JobStorage.cs"];
m31_3 [label="Exit HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25", cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="JobStorage.cs"];
m31_8 [label="HangFire.Web.SingleResourceHandler", span="", file="JobStorage.cs"];
m32_11 [label="Entry Unk.CreateLogger", span="", cluster="Unk.CreateLogger", file="PreserveCultureFilter.cs"];
m32_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="PreserveCultureFilter.cs"];
m32_10 [label="Entry AspNetCoreLog.cstr", span="", cluster="AspNetCoreLog.cstr", file="PreserveCultureFilter.cs"];
m32_7 [label="Entry Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", span="33-33", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="PreserveCultureFilter.cs"];
m32_8 [label="return new AspNetCoreLog(_loggerFactory.CreateLogger(name));", span="35-35", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="PreserveCultureFilter.cs"];
m32_9 [label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", span="33-33", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="PreserveCultureFilter.cs"];
m32_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="PreserveCultureFilter.cs"];
m32_0 [label="Entry Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs"];
m32_1 [label="loggerFactory == null", span="29-29", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs"];
m32_2 [label="throw new ArgumentNullException(nameof(loggerFactory));", span="29-29", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs"];
m32_3 [label="_loggerFactory = loggerFactory", span="30-30", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs"];
m32_4 [label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs"];
m32_12 [label="Hangfire.AspNetCore.AspNetCoreLogProvider", span="", file="PreserveCultureFilter.cs"];
m34_52 [label="Entry HangFire.Web.RazorPage.Write(object)", span="60-60", cluster="HangFire.Web.RazorPage.Write(object)", file="ProcessingJobsPage.generated.cs"];
m34_44 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ProcessingJobsPage.generated.cs"];
m34_42 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="53-53", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ProcessingJobsPage.generated.cs"];
m34_0 [label="Entry HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="29-29", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_1 [label="WriteLiteral(''\r\n'')", span="33-33", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_2 [label="Layout = new LayoutPage { Title = ''Processing Jobs'' }", span="41-41", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_3 [label="int from, perPage", span="43-43", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="45-45", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="46-46", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_6 [label="var pager = new Pager(from, perPage, JobStorage.ProcessingCount())\r\n    {\r\n        BasePageUrl = Request.LinkTo(''/processing'')\r\n    }", span="48-51", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_7 [label="var processingJobs = JobStorage.ProcessingJobs(pager.FromRecord, pager.RecordsPerPage)", span="53-53", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_9 [label="pager.TotalPageCount == 0", span="64-64", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_11 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="85-85", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_40 [label="Write(RenderPartial(new Paginator(pager)))", span="277-277", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_8 [label="WriteLiteral(''\r\n'')", span="59-59", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_13 [label=processingJobs, span="114-114", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_10 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No jobs are being processed right now'' +\r\n''.\r\n    </div>\r\n'')", span="70-71", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_12 [label="WriteLiteral(@''    <table class=''''table''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>Job type</th>\r\n                <th>Args</th>\r\n                <th>Server</th>\r\n                <th>Started</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="98-109", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=red, community=1, file="ProcessingJobsPage.generated.cs"];
m34_14 [label="WriteLiteral(''                <tr class=\'''')", span="120-120", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_39 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="265-265", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_15 [label="Write(!job.Value.InProcessingState ? ''obsolete-data'' : null)", span="125-125", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_16 [label="WriteLiteral(''\''>\r\n                    <td>\r\n                        <a href=\'''')", span="130-130", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_17 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="135-135", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_18 [label="WriteLiteral(''\''>\r\n                            '')", span="140-140", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_19 [label="Write(HtmlHelper.JobId(job.Key))", span="145-145", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_20 [label="WriteLiteral(''\r\n                        </a>\r\n'')", span="150-150", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_21 [label="!job.Value.InProcessingState", span="155-155", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_22 [label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="161-162", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_23 [label="WriteLiteral(''                    </td>\r\n                    <td>\r\n                        '')", span="172-172", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_24 [label="Write(HtmlHelper.QueueLabel(job.Value.Queue))", span="177-177", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_25 [label="WriteLiteral(''&nbsp;'')", span="182-182", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_26 [label="Write(HtmlHelper.JobType(job.Value.Type))", span="187-187", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_27 [label="WriteLiteral(''\r\n                    </td>\r\n                    <td>\r\n                        <p'' +\r\n''re class=\''pre-args\''>'')", span="192-193", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=red, community=1, file="ProcessingJobsPage.generated.cs"];
m34_28 [label="Write(HtmlHelper.FormatProperties(job.Value.Args))", span="198-198", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=red, community=0, file="ProcessingJobsPage.generated.cs"];
m34_29 [label="WriteLiteral(''</pre>\r\n                    </td>\r\n                    <td>\r\n                    '' +\r\n''    '')", span="203-204", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=red, community=1, file="ProcessingJobsPage.generated.cs"];
m34_30 [label="Write(job.Value.ServerName)", span="209-209", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_31 [label="WriteLiteral(''\r\n                    </td>\r\n                    <td>\r\n'')", span="214-214", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_32 [label="job.Value.StartedAt.HasValue", span="219-219", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_33 [label="WriteLiteral(''                            <span data-moment=\'''')", span="225-225", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_38 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="255-255", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_34 [label="Write(JobHelper.ToStringTimestamp(job.Value.StartedAt.Value))", span="230-230", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_35 [label="WriteLiteral(''\''>\r\n                                '')", span="235-235", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_36 [label="Write(job.Value.StartedAt)", span="240-240", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_37 [label="WriteLiteral(''\r\n                            </span>\r\n'')", span="245-245", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_41 [label="Exit HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="29-29", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m34_54 [label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="39-39", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ProcessingJobsPage.generated.cs"];
m34_56 [label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="34-34", cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingJobsPage.generated.cs"];
m34_43 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ProcessingJobsPage.generated.cs"];
m34_49 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ProcessingJobsPage.generated.cs"];
m34_48 [label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="63-63", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="ProcessingJobsPage.generated.cs"];
m34_51 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ProcessingJobsPage.generated.cs"];
m34_47 [label="Entry HttpRequestBase.LinkTo(string)", span="8-8", cluster="HttpRequestBase.LinkTo(string)", file="ProcessingJobsPage.generated.cs"];
m34_53 [label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17", cluster="HangFire.Web.HtmlHelper.JobId(string)", file="ProcessingJobsPage.generated.cs"];
m34_46 [label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="55-55", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="ProcessingJobsPage.generated.cs"];
m34_55 [label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22", cluster="HangFire.Web.HtmlHelper.JobType(string)", file="ProcessingJobsPage.generated.cs"];
m34_58 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ProcessingJobsPage.generated.cs"];
m34_50 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="73-73", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ProcessingJobsPage.generated.cs"];
m34_57 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="51-51", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingJobsPage.generated.cs"];
m34_45 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="13-13", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ProcessingJobsPage.generated.cs"];
m34_59 [label="HangFire.Web.Pages.ProcessingJobsPage", span="", file="ProcessingJobsPage.generated.cs"];
m35_162 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="178-178", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs"];
m35_163 [label="var worker = CreateWorker()", span="180-180", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs"];
m35_164 [label="worker.Execute(_context.Object)", span="182-182", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs"];
m35_165 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="184-190", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs"];
m35_166 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="178-178", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs"];
m35_70 [label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", span="92-92", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs"];
m35_72 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="Program.cs"];
m35_71 [label="Entry HangFire.Client.Filters.IClientFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="27-27", cluster="HangFire.Client.Filters.IClientFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="Program.cs"];
m35_73 [label="Entry HangFire.Client.Filters.IClientFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="33-33", cluster="HangFire.Client.Filters.IClientFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="Program.cs"];
m35_17 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="50-50", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs"];
m35_77 [label="Entry HangFire.Client.Filters.IClientExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", span="27-27", cluster="HangFire.Client.Filters.IClientExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="Program.cs"];
m35_79 [label="System.Collections.Generic.IEnumerable<object>", span="", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="Program.cs"];
m35_78 [label="HangFire.Client.JobCreator", span="", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="Program.cs"];
m35_80 [label="HangFire.Client.CreateContext", span="", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="Program.cs"];
m35_20 [label=Exception, span="58-58", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs"];
m35_18 [label="var filterInfo = GetFilters(context.JobMethod)", span="52-52", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs"];
m35_40 [label="Entry Unk.FetchNextJob", span="", cluster="Unk.FetchNextJob", file="Program.cs"];
m35_65 [label="!postContext.ExceptionHandled", span="118-118", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs"];
m35_286 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="Program.cs"];
m35_243 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="278-278", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs"];
m35_245 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="282-284", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs"];
m35_246 [label="var worker = CreateWorker()", span="286-286", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs"];
m35_247 [label="worker.Execute(_context.Object)", span="289-289", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs"];
m35_248 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="292-296", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs"];
m35_244 [label="var exception = new InvalidOperationException()", span="281-281", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs"];
m35_249 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="278-278", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs"];
m35_232 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="264-264", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs"];
m35_233 [label="var worker = CreateWorker()", span="266-266", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs"];
m35_234 [label="worker.Execute(_context.Object)", span="268-268", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs"];
m35_235 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="270-274", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs"];
m35_236 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="264-264", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs"];
m35_173 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="194-194", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs"];
m35_174 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>()))\r\n                .Returns(false)", span="197-203", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs"];
m35_175 [label="var worker = CreateWorker()", span="205-205", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs"];
m35_176 [label="worker.Execute(_context.Object)", span="208-208", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs"];
m35_177 [label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="211-213", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs"];
m35_178 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="194-194", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs"];
m35_28 [label="Entry Mock<IStateMachineFactoryFactory>.cstr", span="", cluster="Mock<IStateMachineFactoryFactory>.cstr", file="Program.cs"];
m35_185 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="217-217", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs"];
m35_186 [label="var worker = CreateWorker()", span="219-219", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs"];
m35_187 [label="worker.Execute(_context.Object)", span="221-221", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs"];
m35_188 [label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="223-225", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs"];
m35_189 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="217-217", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs"];
m35_219 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="Program.cs"];
m35_147 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="Program.cs"];
m35_132 [label="Entry Unk.Requeue", span="", cluster="Unk.Requeue", file="Program.cs"];
m35_250 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="Program.cs"];
m35_39 [label="Entry HangFire.Client.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24", cluster="HangFire.Client.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="Program.cs"];
m35_113 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="121-121", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs"];
m35_114 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="123-125", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs"];
m35_115 [label="var worker = CreateWorker()", span="127-127", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs"];
m35_116 [label="Assert.Throws<InvalidOperationException>(\r\n                () => worker.Execute(_context.Object))", span="129-130", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs"];
m35_117 [label="_fetchedJob.Verify(x => x.RemoveFromQueue(), Times.Never)", span="132-132", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs"];
m35_118 [label="_fetchedJob.Verify(x => x.Requeue())", span="133-133", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs"];
m35_119 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="121-121", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs"];
m35_212 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="248-248", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs"];
m35_213 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<JobAbortedException>()", span="251-252", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs"];
m35_214 [label="var worker = CreateWorker()", span="254-254", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs"];
m35_215 [label="Assert.DoesNotThrow(() => worker.Execute(_context.Object))", span="257-257", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs"];
m35_216 [label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="259-259", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs"];
m35_217 [label="_fetchedJob.Verify(x => x.Requeue(), Times.Never)", span="260-260", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs"];
m35_218 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="248-248", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs"];
m35_33 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="Program.cs"];
m35_90 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="341-341", cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="Program.cs"];
m35_293 [label="return new Worker(_workerContext.Object, _process.Object, _stateMachineFactoryFactory.Object);", span="343-343", cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="Program.cs"];
m35_294 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="341-341", cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="Program.cs"];
m35_61 [label=Exception, span="110-110", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs"];
m35_63 [label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="113-114", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", color=green, community=0, file="Program.cs"];
m35_62 [label="wasError = true", span="112-112", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs"];
m35_64 [label="filter.OnCreated(postContext)", span="116-116", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs"];
m35_60 [label="postContext = continuation()", span="108-108", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs"];
m35_262 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="300-300", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs"];
m35_264 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="304-306", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs"];
m35_265 [label="var worker = CreateWorker()", span="308-308", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs"];
m35_266 [label="worker.Execute(_context.Object)", span="311-311", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs"];
m35_267 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="314-318", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs"];
m35_263 [label="var exception = new InvalidOperationException()", span="303-303", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs"];
m35_268 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="300-300", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs"];
m35_42 [label="x.GetJobData(JobId)", span="44-44", cluster="lambda expression", file="Program.cs"];
m35_24 [label="throw;", span="65-65", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs"];
m35_16 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="27-27", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs"];
m35_47 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="Program.cs"];
m35_5 [label="_connection = new Mock<IStorageConnection>()", span="34-34", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs"];
m35_6 [label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="35-35", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs"];
m35_7 [label="_fetchedJob = new Mock<IFetchedJob>()", span="37-37", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs"];
m35_8 [label="_fetchedJob.Setup(x => x.JobId).Returns(JobId)", span="38-38", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs"];
m35_32 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="Program.cs"];
m35_41 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="Program.cs"];
m35_0 [label="Entry HangFire.Client.JobCreator.JobCreator()", span="29-29", cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs"];
m35_1 [label="Instance = new JobCreator()", span="31-31", cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs"];
m35_2 [label="Exit HangFire.Client.JobCreator.JobCreator()", span="29-29", cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs"];
m35_3 [label="Entry HangFire.Client.JobCreator.JobCreator()", span="37-37", cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs"];
m35_4 [label="Exit HangFire.Client.JobCreator.JobCreator()", span="37-37", cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs"];
m35_9 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="Program.cs"];
m35_10 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="46-46", cluster="lambda expression", file="Program.cs"];
m35_11 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="Program.cs"];
m35_12 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Program.cs"];
m35_13 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="Program.cs"];
m35_14 [label="new JobFilter(f, JobFilterScope.Type, null)", span="46-46", cluster="lambda expression", file="Program.cs"];
m35_15 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="Program.cs"];
m35_56 [label="preContext.Canceled", span="98-98", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs"];
m35_140 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="Program.cs"];
m35_54 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="56-60", cluster="lambda expression", file="Program.cs"];
m35_55 [label="Exit lambda expression", span="56-60", cluster="lambda expression", file="Program.cs"];
m35_57 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="Program.cs"];
m35_68 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="Program.cs"];
m35_58 [label="x.CreateFactory(It.IsNotNull<JobStorage>())", span="64-64", cluster="lambda expression", file="Program.cs"];
m35_59 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="Program.cs"];
m35_67 [label="new Worker(null, _process.Object, _stateMachineFactoryFactory.Object)", span="72-72", cluster="lambda expression", file="Program.cs"];
m35_69 [label="Entry Worker.cstr", span="", cluster="Worker.cstr", file="Program.cs"];
m35_66 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="Program.cs"];
m35_22 [label="InvokeExceptionFilters(exceptionContext, filterInfo.ClientExceptionFilters)", span="62-62", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs"];
m35_19 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", file="Program.cs"];
m35_21 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="Program.cs"];
m35_23 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="Program.cs"];
m35_25 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="Program.cs"];
m35_251 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="Program.cs"];
m35_99 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="Program.cs"];
m35_279 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="322-322", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs"];
m35_280 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException(''asd'', new Exception()) })", span="325-326", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs"];
m35_281 [label="var worker = CreateWorker()", span="328-328", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs"];
m35_282 [label="worker.Execute(_context.Object)", span="331-331", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs"];
m35_283 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="334-338", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs"];
m35_284 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="322-322", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs"];
m35_112 [label="Entry Unk.RemoveFromQueue", span="", cluster="Unk.RemoveFromQueue", file="Program.cs"];
m35_276 [label="Entry lambda expression", span="316-316", cluster="lambda expression", file="Program.cs"];
m35_44 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="Program.cs"];
m35_45 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="Program.cs"];
m35_52 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="Program.cs"];
m35_49 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="Program.cs"];
m35_43 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="Program.cs"];
m35_46 [label="Method()", span="47-47", cluster="lambda expression", file="Program.cs"];
m35_50 [label="x.Create(_connection.Object)", span="53-53", cluster="lambda expression", file="Program.cs"];
m35_51 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="Program.cs"];
m35_53 [label="Entry lambda expression", span="56-60", cluster="lambda expression", file="Program.cs"];
m35_37 [label="thunk()", span="89-89", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs"];
m35_75 [label="filter.OnClientException(context)", span="137-137", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="Program.cs"];
m35_82 [label="System.Func<HangFire.Client.Filters.CreatedContext>", span="", cluster="lambda expression", file="Program.cs"];
m35_107 [label="x.FetchNextJob(_workerContext.Queues, _context.CancellationTokenSource.Token)", span="114-114", cluster="lambda expression", file="Program.cs"];
m35_124 [label="worker.Execute(_context.Object)", span="130-130", cluster="lambda expression", file="Program.cs"];
m35_157 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.ServerId),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="170-174", cluster="lambda expression", file="Program.cs"];
m35_160 [label="state.ServerId == _context.ServerId", span="172-172", cluster="lambda expression", file="Program.cs"];
m35_204 [label="worker.Execute(_context.Object)", span="238-238", cluster="lambda expression", file="Program.cs"];
m35_224 [label="worker.Execute(_context.Object)", span="257-257", cluster="lambda expression", file="Program.cs"];
m35_121 [label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="124-124", cluster="lambda expression", file="Program.cs"];
m35_142 [label="x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="141-142", cluster="lambda expression", file="Program.cs"];
m35_145 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="146-146", cluster="lambda expression", file="Program.cs"];
m35_149 [label="x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="150-151", cluster="lambda expression", file="Program.cs"];
m35_168 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="184-190", cluster="lambda expression", file="Program.cs"];
m35_180 [label="x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>())", span="198-202", cluster="lambda expression", file="Program.cs"];
m35_183 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="212-212", cluster="lambda expression", file="Program.cs"];
m35_191 [label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="223-225", cluster="lambda expression", file="Program.cs"];
m35_201 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="232-232", cluster="lambda expression", file="Program.cs"];
m35_207 [label="x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="242-242", cluster="lambda expression", file="Program.cs"];
m35_221 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="251-251", cluster="lambda expression", file="Program.cs"];
m35_238 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="270-274", cluster="lambda expression", file="Program.cs"];
m35_256 [label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="292-296", cluster="lambda expression", file="Program.cs"];
m35_253 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="283-283", cluster="lambda expression", file="Program.cs"];
m35_274 [label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="314-318", cluster="lambda expression", file="Program.cs"];
m35_271 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="305-305", cluster="lambda expression", file="Program.cs"];
m35_291 [label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="334-338", cluster="lambda expression", file="Program.cs"];
m35_29 [label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", span="132-132", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="Program.cs"];
m35_36 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="86-87", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs"];
m35_38 [label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", span="75-75", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs"];
m35_74 [label="filters.Reverse()", span="135-135", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="Program.cs"];
m35_76 [label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", span="132-132", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="Program.cs"];
m35_81 [label=preContext, span="", cluster="lambda expression", file="Program.cs"];
m35_83 [label="HangFire.Client.Filters.IClientFilter", span="", cluster="lambda expression", file="Program.cs"];
m35_93 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="Program.cs"];
m35_96 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="Program.cs"];
m35_106 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="Program.cs"];
m35_108 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="Program.cs"];
m35_109 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="Program.cs"];
m35_120 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="Program.cs"];
m35_123 [label="Entry lambda expression", span="130-130", cluster="lambda expression", file="Program.cs"];
m35_125 [label="Exit lambda expression", span="130-130", cluster="lambda expression", file="Program.cs"];
m35_126 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="Program.cs"];
m35_129 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="Program.cs"];
m35_141 [label="Entry lambda expression", span="141-142", cluster="lambda expression", file="Program.cs"];
m35_144 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="Program.cs"];
m35_148 [label="Entry lambda expression", span="150-151", cluster="lambda expression", file="Program.cs"];
m35_156 [label="Entry lambda expression", span="170-174", cluster="lambda expression", file="Program.cs"];
m35_158 [label="Exit lambda expression", span="170-174", cluster="lambda expression", file="Program.cs"];
m35_159 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="Program.cs"];
m35_161 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="Program.cs"];
m35_167 [label="Entry lambda expression", span="184-190", cluster="lambda expression", file="Program.cs"];
m35_179 [label="Entry lambda expression", span="198-202", cluster="lambda expression", file="Program.cs"];
m35_182 [label="Entry lambda expression", span="212-212", cluster="lambda expression", file="Program.cs"];
m35_190 [label="Entry lambda expression", span="223-225", cluster="lambda expression", file="Program.cs"];
m35_200 [label="Entry lambda expression", span="232-232", cluster="lambda expression", file="Program.cs"];
m35_203 [label="Entry lambda expression", span="238-238", cluster="lambda expression", file="Program.cs"];
m35_205 [label="Exit lambda expression", span="238-238", cluster="lambda expression", file="Program.cs"];
m35_206 [label="Entry lambda expression", span="242-242", cluster="lambda expression", file="Program.cs"];
m35_209 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="Program.cs"];
m35_220 [label="Entry lambda expression", span="251-251", cluster="lambda expression", file="Program.cs"];
m35_223 [label="Entry lambda expression", span="257-257", cluster="lambda expression", file="Program.cs"];
m35_225 [label="Exit lambda expression", span="257-257", cluster="lambda expression", file="Program.cs"];
m35_226 [label="Entry lambda expression", span="259-259", cluster="lambda expression", file="Program.cs"];
m35_229 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="Program.cs"];
m35_237 [label="Entry lambda expression", span="270-274", cluster="lambda expression", file="Program.cs"];
m35_252 [label="Entry lambda expression", span="283-283", cluster="lambda expression", file="Program.cs"];
m35_255 [label="Entry lambda expression", span="292-296", cluster="lambda expression", file="Program.cs"];
m35_270 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="Program.cs"];
m35_273 [label="Entry lambda expression", span="314-318", cluster="lambda expression", file="Program.cs"];
m35_287 [label="Entry lambda expression", span="325-325", cluster="lambda expression", file="Program.cs"];
m35_290 [label="Entry lambda expression", span="334-338", cluster="lambda expression", file="Program.cs"];
m35_122 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="Program.cs"];
m35_143 [label="Exit lambda expression", span="141-142", cluster="lambda expression", file="Program.cs"];
m35_146 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="Program.cs"];
m35_150 [label="Exit lambda expression", span="150-151", cluster="lambda expression", file="Program.cs"];
m35_169 [label="Exit lambda expression", span="184-190", cluster="lambda expression", file="Program.cs"];
m35_170 [label="Entry lambda expression", span="188-189", cluster="lambda expression", file="Program.cs"];
m35_181 [label="Exit lambda expression", span="198-202", cluster="lambda expression", file="Program.cs"];
m35_184 [label="Exit lambda expression", span="212-212", cluster="lambda expression", file="Program.cs"];
m35_192 [label="Exit lambda expression", span="223-225", cluster="lambda expression", file="Program.cs"];
m35_202 [label="Exit lambda expression", span="232-232", cluster="lambda expression", file="Program.cs"];
m35_208 [label="Exit lambda expression", span="242-242", cluster="lambda expression", file="Program.cs"];
m35_222 [label="Exit lambda expression", span="251-251", cluster="lambda expression", file="Program.cs"];
m35_239 [label="Exit lambda expression", span="270-274", cluster="lambda expression", file="Program.cs"];
m35_240 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="Program.cs"];
m35_257 [label="Exit lambda expression", span="292-296", cluster="lambda expression", file="Program.cs"];
m35_258 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="Program.cs"];
m35_254 [label="Exit lambda expression", span="283-283", cluster="lambda expression", file="Program.cs"];
m35_275 [label="Exit lambda expression", span="314-318", cluster="lambda expression", file="Program.cs"];
m35_272 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="Program.cs"];
m35_292 [label="Exit lambda expression", span="334-338", cluster="lambda expression", file="Program.cs"];
m35_30 [label="return new JobFilterInfo(_getFiltersThunk(method));", span="72-72", cluster="HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", file="Program.cs"];
m35_35 [label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                context.CreateJob();\r\n                return new CreatedContext(context, false, null);\r\n            }", span="80-84", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs"];
m35_34 [label="var preContext = new CreatingContext(context)", span="79-79", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs", color=red, community=0];
m35_95 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="Program.cs"];
m35_94 [label="x.GetConnection()", span="102-102", cluster="lambda expression", file="Program.cs"];
m35_98 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="Program.cs"];
m35_97 [label="x.Dispose()", span="103-103", cluster="lambda expression", file="Program.cs"];
m35_111 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="Program.cs"];
m35_110 [label="x.RemoveFromQueue()", span="117-117", cluster="lambda expression", file="Program.cs"];
m35_128 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="Program.cs"];
m35_127 [label="x.RemoveFromQueue()", span="132-132", cluster="lambda expression", file="Program.cs"];
m35_131 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="Program.cs"];
m35_130 [label="x.Requeue()", span="133-133", cluster="lambda expression", file="Program.cs"];
m35_211 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="Program.cs"];
m35_210 [label="x.Requeue()", span="244-244", cluster="lambda expression", file="Program.cs"];
m35_228 [label="Exit lambda expression", span="259-259", cluster="lambda expression", file="Program.cs"];
m35_227 [label="x.RemoveFromQueue()", span="259-259", cluster="lambda expression", file="Program.cs"];
m35_231 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="Program.cs"];
m35_230 [label="x.Requeue()", span="260-260", cluster="lambda expression", file="Program.cs"];
m35_259 [label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="294-294", cluster="lambda expression", file="Program.cs"];
m35_277 [label="state.Exception == exception && state.Reason == ''hello''", span="316-316", cluster="lambda expression", file="Program.cs"];
m35_289 [label="Exit lambda expression", span="325-325", cluster="lambda expression", file="Program.cs"];
m35_288 [label="x.GetJobData(JobId)", span="325-325", cluster="lambda expression", file="Program.cs"];
m35_172 [label="Exit lambda expression", span="188-189", cluster="lambda expression", file="Program.cs"];
m35_171 [label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="188-189", cluster="lambda expression", file="Program.cs"];
m35_242 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="Program.cs"];
m35_241 [label="states.Length == 1 && states[0] == ProcessingState.StateName", span="273-273", cluster="lambda expression", file="Program.cs"];
m35_260 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="Program.cs"];
m35_278 [label="Exit lambda expression", span="316-316", cluster="lambda expression", file="Program.cs"];
m35_151 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="164-164", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs"];
m35_152 [label="var worker = CreateWorker()", span="166-166", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs"];
m35_153 [label="worker.Execute(_context.Object)", span="168-168", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs"];
m35_154 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.ServerId),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="170-174", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs"];
m35_155 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="164-164", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs"];
m35_26 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Program.cs"];
m35_31 [label="Exit HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", span="70-70", cluster="HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", file="Program.cs"];
m35_261 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="Program.cs"];
m35_92 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="Program.cs"];
m35_133 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="137-137", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs"];
m35_134 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="140-144", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs"];
m35_135 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="146-147", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs"];
m35_136 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="149-153", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs"];
m35_137 [label="var worker = CreateWorker()", span="155-155", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs"];
m35_138 [label="worker.Execute(_context.Object)", span="158-158", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs"];
m35_139 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="137-137", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs"];
m35_100 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="107-107", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs"];
m35_101 [label="var worker = CreateWorker()", span="109-109", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs"];
m35_102 [label="worker.Execute(_context.Object)", span="111-111", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs"];
m35_103 [label="_connection.Verify(\r\n                x => x.FetchNextJob(_workerContext.Queues, _context.CancellationTokenSource.Token),\r\n                Times.Once)", span="113-115", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs"];
m35_104 [label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="117-117", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs"];
m35_105 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="107-107", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs"];
m35_48 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="346-346", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="Program.cs"];
m35_269 [label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="Program.cs"];
m35_27 [label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", span="75-75", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs"];
m35_285 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="Program.cs"];
m35_193 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="229-229", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs"];
m35_194 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<OperationCanceledException>()", span="232-233", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs"];
m35_195 [label="var worker = CreateWorker()", span="235-235", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs"];
m35_196 [label="Assert.Throws<OperationCanceledException>(() => worker.Execute(_context.Object))", span="238-238", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs"];
m35_197 [label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="241-243", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs"];
m35_198 [label="_fetchedJob.Verify(x => x.Requeue())", span="244-244", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs"];
m35_199 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="229-229", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs"];
m35_91 [label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="59-59", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Program.cs"];
m35_295 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="346-346", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="Program.cs"];
m35_84 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="96-96", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs"];
m35_85 [label="var worker = CreateWorker()", span="98-98", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs"];
m35_86 [label="worker.Execute(_context.Object)", span="100-100", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs"];
m35_87 [label="_context.Storage.Verify(x => x.GetConnection(), Times.Once)", span="102-102", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs"];
m35_88 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="103-103", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs"];
m35_89 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="96-96", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs"];
m35_296 [label="Hangfire.Core.Tests.Server.WorkerFacts", span="", file="Program.cs"];
m35_297 [label=worker, span="", file="Program.cs"];
m35_298 [label=worker, span="", file="Program.cs"];
m35_299 [label=worker, span="", file="Program.cs"];
m35_300 [label=exception, span="", file="Program.cs"];
m35_301 [label=exception, span="", file="Program.cs"];
m37_0 [label="Entry HangFire.RedisFactory.RedisFactory()", span="10-10", cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs"];
m37_1 [label="Host = String.Format(''{0}:{1}'', RedisNativeClient.DefaultHost, RedisNativeClient.DefaultPort)", span="12-12", cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs"];
m37_2 [label="Db = (int) RedisNativeClient.DefaultDb", span="13-13", cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs"];
m37_3 [label="_pooledManager = new Lazy<IRedisClientsManager>(\r\n                () => new PooledRedisClientManager(Db, Host))", span="15-16", cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs"];
m37_4 [label="_basicManager = new Lazy<IRedisClientsManager>(() => \r\n                new BasicRedisClientManager(Db, Host))", span="18-19", cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs"];
m37_5 [label="Exit HangFire.RedisFactory.RedisFactory()", span="10-10", cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs"];
m37_15 [label="Entry BasicRedisClientManager.cstr", span="", cluster="BasicRedisClientManager.cstr", file="RedisFactory.cs"];
m37_11 [label="Entry PooledRedisClientManager.cstr", span="", cluster="PooledRedisClientManager.cstr", file="RedisFactory.cs"];
m37_6 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RedisFactory.cs"];
m37_7 [label="Entry Lazy<IRedisClientsManager>.cstr", span="", cluster="Lazy<IRedisClientsManager>.cstr", file="RedisFactory.cs"];
m37_12 [label="Entry lambda expression", span="18-19", cluster="lambda expression", file="RedisFactory.cs"];
m37_8 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="RedisFactory.cs"];
m37_9 [label="new PooledRedisClientManager(Db, Host)", span="16-16", cluster="lambda expression", file="RedisFactory.cs"];
m37_10 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="RedisFactory.cs"];
m37_13 [label="new BasicRedisClientManager(Db, Host)", span="19-19", cluster="lambda expression", file="RedisFactory.cs"];
m37_14 [label="Exit lambda expression", span="18-19", cluster="lambda expression", file="RedisFactory.cs"];
m39_7 [label="Entry Hangfire.Common.GlobalJobFilterCollection.GlobalJobFilterCollection()", span="37-37", cluster="Hangfire.Common.GlobalJobFilterCollection.GlobalJobFilterCollection()", file="RetryJobsFilter.cs"];
m39_9 [label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56", cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="RetryJobsFilter.cs"];
m39_12 [label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="36-36", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="RetryJobsFilter.cs"];
m39_11 [label="Entry Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", span="25-25", cluster="Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", file="RetryJobsFilter.cs"];
m39_8 [label="Entry Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", span="25-25", cluster="Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", file="RetryJobsFilter.cs"];
m39_10 [label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="21-21", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RetryJobsFilter.cs"];
m39_0 [label="Entry Hangfire.GlobalJobFilters.GlobalJobFilters()", span="25-25", cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs"];
m39_1 [label="Filters = new GlobalJobFilterCollection()", span="27-27", cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs"];
m39_2 [label="Filters.Add(new CaptureCultureAttribute())", span="28-28", cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs"];
m39_3 [label="Filters.Add(new AutomaticRetryAttribute())", span="29-29", cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs"];
m39_4 [label="Filters.Add(new StatisticsHistoryAttribute())", span="30-30", cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs"];
m39_5 [label="Filters.Add(new ContinuationsSupportAttribute())", span="31-31", cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs"];
m39_6 [label="Exit Hangfire.GlobalJobFilters.GlobalJobFilters()", span="25-25", cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs"];
m40_15 [label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="25-25", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_16 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisFetchedJob(null, JobId, Queue))", span="27-28", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_17 [label="Assert.Equal(''connection'', exception.ParamName)", span="30-30", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_18 [label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="25-25", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_45 [label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", span="61-61", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs"];
m40_46 [label="var processingJob = CreateProcessingJob()", span="63-63", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs"];
m40_47 [label="processingJob.Dispose()", span="65-65", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs"];
m40_48 [label="_transaction.Verify(x => x.Commit())", span="67-67", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs"];
m40_49 [label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", span="61-61", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs"];
m40_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ScheduledJobsPage.generated.cs"];
m40_6 [label="Entry Mock<IRedisClient>.cstr", span="", cluster="Mock<IRedisClient>.cstr", file="ScheduledJobsPage.generated.cs"];
m40_50 [label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", span="70-70", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", file="ScheduledJobsPage.generated.cs"];
m40_57 [label="return new RedisFetchedJob(_redisConnection, JobId, Queue);", span="72-72", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", file="ScheduledJobsPage.generated.cs"];
m40_58 [label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", span="70-70", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", file="ScheduledJobsPage.generated.cs"];
m40_39 [label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="52-52", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs"];
m40_40 [label="var processingJob = new RedisProcessingJob(JobId, Queue)", span="54-54", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs"];
m40_41 [label="Assert.Equal(JobId, processingJob.JobId)", span="56-56", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs"];
m40_42 [label="Assert.Equal(Queue, processingJob.Queue)", span="57-57", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs"];
m40_43 [label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="52-52", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs"];
m40_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="ScheduledJobsPage.generated.cs"];
m40_44 [label="Entry RedisProcessingJob.cstr", span="", cluster="RedisProcessingJob.cstr", file="ScheduledJobsPage.generated.cs"];
m40_0 [label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", span="14-14", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs"];
m40_1 [label="_redis = new Mock<IRedisClient>()", span="16-16", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs"];
m40_2 [label="_transaction = new Mock<IRedisTransaction>()", span="17-17", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs"];
m40_3 [label="_redis.Setup(x => x.CreateTransaction()).Returns(_transaction.Object)", span="19-19", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs"];
m40_4 [label="_redisConnection = new RedisConnection(_redis.Object)", span="21-21", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs"];
m40_5 [label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", span="14-14", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs"];
m40_10 [label="Entry RedisConnection.cstr", span="", cluster="RedisConnection.cstr", file="ScheduledJobsPage.generated.cs"];
m40_7 [label="Entry Mock<IRedisTransaction>.cstr", span="", cluster="Mock<IRedisTransaction>.cstr", file="ScheduledJobsPage.generated.cs"];
m40_8 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ScheduledJobsPage.generated.cs"];
m40_51 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ScheduledJobsPage.generated.cs"];
m40_32 [label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="43-43", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_33 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisFetchedJob(_redisConnection, JobId, null))", span="45-46", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_34 [label="Assert.Equal(''queue'', exception.ParamName)", span="48-48", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_35 [label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="43-43", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_53 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_11 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_12 [label="x.CreateTransaction()", span="19-19", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_13 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_21 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_22 [label="new RedisFetchedJob(null, JobId, Queue)", span="28-28", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_23 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_29 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_30 [label="new RedisFetchedJob(_redisConnection, null, Queue)", span="37-37", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_31 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_36 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_37 [label="new RedisFetchedJob(_redisConnection, JobId, null)", span="46-46", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_38 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_54 [label="x.Commit()", span="67-67", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_55 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m40_56 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="ScheduledJobsPage.generated.cs"];
m40_24 [label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(HangFire.Redis.RedisConnection, string, string)", span="25-25", cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(HangFire.Redis.RedisConnection, string, string)", file="ScheduledJobsPage.generated.cs"];
m40_9 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ScheduledJobsPage.generated.cs"];
m40_52 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ScheduledJobsPage.generated.cs"];
m40_14 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="ScheduledJobsPage.generated.cs"];
m40_25 [label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="34-34", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_26 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisFetchedJob(_redisConnection, null, Queue))", span="36-37", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_27 [label="Assert.Equal(''jobId'', exception.ParamName)", span="39-39", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_28 [label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="34-34", cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ScheduledJobsPage.generated.cs"];
m40_59 [label="HangFire.Redis.Tests.RedisFetchedJobFacts", span="", file="ScheduledJobsPage.generated.cs"];
m42_0 [label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="ServerFilters.feature.cs"];
m42_1 [label="Queue = queue", span="6-6", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="ServerFilters.feature.cs"];
m42_2 [label="Exit HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="ServerFilters.feature.cs"];
m42_3 [label="HangFire.Web.Pages.FetchedJobsPage", span="", file="ServerFilters.feature.cs"];
m44_30 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachine.cs"];
m44_144 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="StateMachine.cs"];
m44_131 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs"];
m44_56 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="StateMachine.cs"];
m44_50 [label="Entry HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="175-175", cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_114 [label="var transaction = _redis.CreateTransaction()", span="178-178", cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_115 [label="AppendHistory(transaction, jobId, state, appendToJob)", span="180-180", cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_116 [label="transaction.Commit()", span="181-181", cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_117 [label="Exit HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="175-175", cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_16 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs"];
m44_17 [label="redis == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs"];
m44_19 [label="stateDescriptors == null", span="48-48", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs"];
m44_21 [label="stateChangedFilters == null", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs"];
m44_23 [label="stateAppliedFilters == null", span="50-50", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs"];
m44_25 [label="_redis = redis", span="52-52", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs"];
m44_26 [label="_stateDescriptors = stateDescriptors", span="53-53", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs"];
m44_27 [label="_stateChangedFilters = stateChangedFilters", span="54-54", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs"];
m44_28 [label="_stateAppliedFilters = stateAppliedFilters", span="55-55", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs"];
m44_18 [label="throw new ArgumentNullException(''redis'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs"];
m44_20 [label="throw new ArgumentNullException(''stateDescriptors'');", span="48-48", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs"];
m44_22 [label="throw new ArgumentNullException(''stateChangedFilters'');", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs"];
m44_24 [label="throw new ArgumentNullException(''stateAppliedFilters'');", span="50-50", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs"];
m44_29 [label="Exit HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs"];
m44_82 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="StateMachine.cs"];
m44_7 [label="Entry HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", span="21-21", cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="StateMachine.cs"];
m44_11 [label="Descriptors.Add(stateName, descriptor)", span="24-24", cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="StateMachine.cs"];
m44_12 [label="Exit HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", span="21-21", cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="StateMachine.cs"];
m44_105 [label="Entry HangFire.States.JobStateDescriptor.Unapply(IRedisTransaction, string)", span="6-6", cluster="HangFire.States.JobStateDescriptor.Unapply(IRedisTransaction, string)", file="StateMachine.cs"];
m44_60 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="StateMachine.cs"];
m44_66 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="98-98", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_67 [label="state == null", span="101-101", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_69 [label="_redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', jobId), TimeSpan.FromMinutes(1))", span="103-104", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_70 [label="var currentState = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId), ''State'')", span="106-107", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_73 [label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="114-114", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_76 [label="var oldState = state", span="121-121", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_77 [label="state = filter.OnStateChanging(_redis, jobId, oldState)", span="122-122", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_79 [label="AppendHistory(jobId, oldState, false)", span="126-126", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_80 [label="return ApplyState(jobId, currentState, state);", span="130-130", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs"];
m44_68 [label="throw new ArgumentNullException(''state'');", span="101-101", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_71 [label="currentState == null", span="109-109", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_72 [label="return false;", span="111-111", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_74 [label="return false;", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_75 [label=_stateChangedFilters, span="119-119", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs"];
m44_78 [label="oldState != state", span="124-124", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_81 [label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="98-98", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs"];
m44_136 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="StateMachine.cs"];
m44_55 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateMachine.cs"];
m44_143 [label="Entry HangFire.JobHelper.ToJson(object)", span="28-28", cluster="HangFire.JobHelper.ToJson(object)", file="StateMachine.cs"];
m44_132 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="51-51", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="StateMachine.cs"];
m44_14 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="StateMachine.cs"];
m44_15 [label="Exit HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="StateMachine.cs"];
m44_113 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="StateMachine.cs"];
m44_86 [label="Entry HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", span="134-134", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="StateMachine.cs"];
m44_87 [label="var transaction = _redis.CreateTransaction()", span="139-139", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="StateMachine.cs"];
m44_88 [label="ApplyState(jobId, currentState, newState, transaction)", span="141-141", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", color=red, community=0, file="StateMachine.cs"];
m44_89 [label="return transaction.Commit();", span="143-143", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="StateMachine.cs"];
m44_90 [label="Exit HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", span="134-134", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="StateMachine.cs"];
m44_106 [label="Entry HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="26-26", cluster="HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="StateMachine.cs"];
m44_8 [label="Entry HangFire.States.ProcessingState.Descriptor.Descriptor()", span="35-35", cluster="HangFire.States.ProcessingState.Descriptor.Descriptor()", file="StateMachine.cs"];
m44_9 [label="Entry HangFire.States.ScheduledState.Descriptor.Descriptor()", span="37-37", cluster="HangFire.States.ScheduledState.Descriptor.Descriptor()", file="StateMachine.cs"];
m44_34 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    TimeSpan.FromHours(1)))", span="69-71", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_31 [label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_32 [label="var transaction = _redis.CreateTransaction()", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_33 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    parameters))", span="65-67", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_37 [label="var oldState = state", span="78-78", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_38 [label="state = filter.OnStateChanging(_redis, jobId, oldState)", span="79-79", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_40 [label="AppendHistory(jobId, oldState, false)", span="83-83", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_42 [label="ApplyState(jobId, null, state, transaction)", span="89-89", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="StateMachine.cs"];
m44_43 [label="transaction.QueueCommand(x =>\r\n                    ((IRedisNativeClient)x).Persist(String.Format(''hangfire:job:{0}'', jobId)))", span="91-92", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_35 [label="transaction.Commit()", span="73-73", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_36 [label=_stateChangedFilters, span="76-76", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="StateMachine.cs"];
m44_41 [label="var transaction = _redis.CreateTransaction()", span="87-87", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_39 [label="oldState != state", span="81-81", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_44 [label="return transaction.Commit();", span="94-94", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_45 [label="Exit HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs"];
m44_61 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="StateMachine.cs"];
m44_95 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId)))", span="156-157", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_91 [label="Entry HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", span="147-147", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_92 [label="!String.IsNullOrEmpty(currentState)", span="149-149", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_93 [label="_stateDescriptors.ContainsKey(currentState)", span="151-151", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_94 [label="_stateDescriptors[currentState].Unapply(transaction, jobId)", span="153-153", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_97 [label="filter.OnStateUnapplied(transaction, jobId, currentState)", span="161-161", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_98 [label="AppendHistory(transaction, jobId, newState, true)", span="165-165", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_99 [label="newState.Apply(transaction, jobId)", span="167-167", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_101 [label="filter.OnStateApplied(transaction, jobId, newState)", span="171-171", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_96 [label=_stateAppliedFilters, span="159-159", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", color=red, community=0, file="StateMachine.cs"];
m44_100 [label=_stateAppliedFilters, span="169-169", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", color=red, community=0, file="StateMachine.cs"];
m44_102 [label="Exit HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", span="147-147", cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs"];
m44_123 [label="transaction.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName))", span="195-198", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_107 [label="Entry HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="185-185", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_119 [label="var properties = new Dictionary<string, string>(state.GetProperties())", span="188-188", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_121 [label="properties.Add(''State'', state.StateName)", span="191-191", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_122 [label=appendToJob, span="193-193", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_124 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties))", span="200-202", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_125 [label="properties.Add(''Reason'', state.Reason)", span="205-205", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_127 [label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties)))", span="208-210", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_120 [label="var now = DateTime.UtcNow", span="189-189", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_126 [label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="206-206", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_128 [label="Exit HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="185-185", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m44_6 [label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="39-39", cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="StateMachine.cs"];
m44_129 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="StateMachine.cs"];
m44_103 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="StateMachine.cs"];
m44_104 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs"];
m44_140 [label="Entry lambda expression", span="208-210", cluster="lambda expression", file="StateMachine.cs"];
m44_53 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    parameters)", span="65-67", cluster="lambda expression", file="StateMachine.cs"];
m44_58 [label="x.ExpireEntryIn(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    TimeSpan.FromHours(1))", span="69-71", cluster="lambda expression", file="StateMachine.cs"];
m44_63 [label="((IRedisNativeClient)x).Persist(String.Format(''hangfire:job:{0}'', jobId))", span="92-92", cluster="lambda expression", file="StateMachine.cs"];
m44_52 [label="Entry lambda expression", span="65-67", cluster="lambda expression", file="StateMachine.cs"];
m44_57 [label="Entry lambda expression", span="69-71", cluster="lambda expression", file="StateMachine.cs"];
m44_62 [label="Entry lambda expression", span="91-92", cluster="lambda expression", file="StateMachine.cs"];
m44_54 [label="Exit lambda expression", span="65-67", cluster="lambda expression", file="StateMachine.cs"];
m44_59 [label="Exit lambda expression", span="69-71", cluster="lambda expression", file="StateMachine.cs"];
m44_64 [label="Exit lambda expression", span="91-92", cluster="lambda expression", file="StateMachine.cs"];
m44_111 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId))", span="156-157", cluster="lambda expression", file="StateMachine.cs"];
m44_110 [label="Entry lambda expression", span="156-157", cluster="lambda expression", file="StateMachine.cs"];
m44_112 [label="Exit lambda expression", span="156-157", cluster="lambda expression", file="StateMachine.cs"];
m44_134 [label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName)", span="195-198", cluster="lambda expression", file="StateMachine.cs"];
m44_138 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties)", span="200-202", cluster="lambda expression", file="StateMachine.cs"];
m44_141 [label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties))", span="208-210", cluster="lambda expression", file="StateMachine.cs"];
m44_133 [label="Entry lambda expression", span="195-198", cluster="lambda expression", file="StateMachine.cs"];
m44_137 [label="Entry lambda expression", span="200-202", cluster="lambda expression", file="StateMachine.cs"];
m44_135 [label="Exit lambda expression", span="195-198", cluster="lambda expression", file="StateMachine.cs"];
m44_139 [label="Exit lambda expression", span="200-202", cluster="lambda expression", file="StateMachine.cs"];
m44_142 [label="Exit lambda expression", span="208-210", cluster="lambda expression", file="StateMachine.cs"];
m44_108 [label="Entry HangFire.States.JobState.Apply(IRedisTransaction, string)", span="16-16", cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="StateMachine.cs"];
m44_85 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="StateMachine.cs"];
m44_49 [label="Entry HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", span="21-21", cluster="HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="StateMachine.cs"];
m44_0 [label="Entry HangFire.States.StateMachine.StateMachine()", span="13-13", cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs"];
m44_1 [label="RegisterStateDescriptor(FailedState.Name, new FailedState.Descriptor())", span="15-15", cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs"];
m44_2 [label="RegisterStateDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="16-16", cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs"];
m44_3 [label="RegisterStateDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="17-17", cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs"];
m44_4 [label="RegisterStateDescriptor(SucceededState.Name, new SucceededState.Descriptor())", span="18-18", cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs"];
m44_5 [label="Exit HangFire.States.StateMachine.StateMachine()", span="13-13", cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs"];
m44_65 [label="Entry Unk.Persist", span="", cluster="Unk.Persist", file="StateMachine.cs"];
m44_48 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateMachine.cs"];
m44_84 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="StateMachine.cs"];
m44_109 [label="Entry HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="17-17", cluster="HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="StateMachine.cs"];
m44_10 [label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="47-47", cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="StateMachine.cs"];
m44_47 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="StateMachine.cs"];
m44_13 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs"];
m44_118 [label="Entry Unk.AppendHistory", span="", cluster="Unk.AppendHistory", file="StateMachine.cs"];
m44_51 [label="Entry Unk.ApplyState", span="", cluster="Unk.ApplyState", file="StateMachine.cs"];
m44_83 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="StateMachine.cs"];
m44_46 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="StateMachine.cs"];
m44_130 [label="Entry HangFire.States.JobState.GetProperties()", span="18-18", cluster="HangFire.States.JobState.GetProperties()", file="StateMachine.cs"];
m44_145 [label="HangFire.States.StateMachine", span="", file="StateMachine.cs"];
m44_146 [label=string, span="", file="StateMachine.cs"];
m44_147 [label="System.Collections.Generic.IDictionary<string, string>", span="", file="StateMachine.cs"];
m44_148 [label=string, span="", file="StateMachine.cs"];
m44_149 [label=string, span="", file="StateMachine.cs"];
m44_150 [label="HangFire.States.JobState", span="", file="StateMachine.cs"];
m44_151 [label=properties, span="", file="StateMachine.cs"];
m45_21 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs"];
m45_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateSteps.cs"];
m45_7 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StateSteps.cs"];
m45_22 [label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="StateSteps.cs"];
m45_13 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateSteps.cs"];
m45_12 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="StateSteps.cs"];
m45_8 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="StateSteps.cs"];
m45_9 [label="var state = new FailedState(new Exception())", span="19-19", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="StateSteps.cs"];
m45_10 [label="Assert.Equal(FailedState.Name, state.StateName)", span="20-20", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="StateSteps.cs"];
m45_11 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="StateSteps.cs"];
m45_0 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="StateSteps.cs"];
m45_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="12-13", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="StateSteps.cs"];
m45_2 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="StateSteps.cs"];
m45_4 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="StateSteps.cs"];
m45_5 [label="new FailedState(null)", span="13-13", cluster="lambda expression", file="StateSteps.cs"];
m45_6 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="StateSteps.cs"];
m45_19 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="StateSteps.cs"];
m45_20 [label="Entry HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", span="36-36", cluster="HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", file="StateSteps.cs"];
m45_14 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="StateSteps.cs"];
m45_15 [label="var state = new FailedState(new Exception(''Message''))", span="26-26", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", color=red, community=0, file="StateSteps.cs"];
m45_16 [label="var data = state.GetData(null)", span="27-27", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", color=red, community=0, file="StateSteps.cs"];
m45_17 [label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', ''<UtcNow timestamp>'' },\r\n                    { ''ExceptionType'', ''System.Exception'' },\r\n                    { ''ExceptionMessage'', ''Message'' },\r\n                    { ''ExceptionDetails'', ''<Non-empty>'' }\r\n                }, \r\n                data)", span="29-37", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", color=red, community=0, file="StateSteps.cs"];
m45_18 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="StateSteps.cs"];
m47_53 [label="Console.ReadLine()", span="130-130", cluster="ConsoleSample.Program.Main()", file="SucceededJobs.generated.cs"];
m47_78 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="SucceededJobs.generated.cs"];
m47_0 [label="Entry HangFire.Web.Pages.SucceededJobs.Execute()", span="29-29", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_1 [label="WriteLiteral(''\r\n\r\n'')", span="33-33", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_2 [label="Layout = new LayoutPage { Title = ''Succeeded Jobs'' }", span="41-41", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_3 [label="int from, perPage", span="43-43", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="45-45", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="46-46", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_10 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No succeeded jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="70-71", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_6 [label="var pager = new Pager(from, perPage, JobStorage.SucceededListCount())\r\n    {\r\n        BasePageUrl = Request.LinkTo(''/succeeded'')\r\n    }", span="48-51", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_44 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", color=red, community=0, file="SucceededJobs.generated.cs"];
m47_7 [label="var succeededJobs = JobStorage.SucceededJobs(pager.FromRecord, pager.RecordsPerPage)", span="53-53", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_52 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="SucceededJobs.generated.cs"];
m47_8 [label="WriteLiteral(''\r\n'')", span="59-59", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_9 [label="pager.TotalPageCount == 0", span="64-64", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_11 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="85-85", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_12 [label="WriteLiteral(''    <table class=\''table\''>\r\n        <thead>\r\n            <tr>\r\n                <th'' +\r\n''>Id</th>\r\n                <th>Job type</th>\r\n                <th>Succeeded</th>\r'' +\r\n''\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="98-100", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", color=green, community=0];
m47_21 [label="job.Value != null && !job.Value.InSucceededState", span="146-146", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_22 [label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="152-153", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_30 [label="WriteLiteral(''\r\n                        </td>\r\n'')", span="207-207", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_31 [label="WriteLiteral(''                        <td>\r\n'')", span="211-211", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_36 [label="Write(job.Value.SucceededAt)", span="237-237", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_37 [label="WriteLiteral(''\r\n                                </span>\r\n'')", span="242-242", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_42 [label="Exit HangFire.Web.Pages.SucceededJobs.Execute()", span="29-29", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_43 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="53-53", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SucceededJobs.generated.cs"];
m47_46 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="13-13", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededJobs.generated.cs"];
m47_47 [label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="551-551", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SucceededJobs.generated.cs"];
m47_13 [label=succeededJobs, span="105-105", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_14 [label="WriteLiteral(''                <tr class=\'''')", span="111-111", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_15 [label="Write(job.Value != null && !job.Value.InSucceededState ? ''obsolete-data'' : null)", span="116-116", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_17 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="126-126", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_18 [label="WriteLiteral(''\''>\r\n                            '')", span="131-131", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_16 [label="WriteLiteral(''\''>\r\n                    <td>\r\n                        <a href=\'''')", span="121-121", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_19 [label="Write(HtmlHelper.JobId(job.Key))", span="136-136", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_20 [label="WriteLiteral(''\r\n                        </a>\r\n'')", span="141-141", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_23 [label="WriteLiteral(''                    </td>\r\n\r\n'')", span="163-163", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_24 [label="job.Value == null", span="168-168", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_26 [label="WriteLiteral(''                        <td>\r\n                            '')", span="187-187", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_25 [label="WriteLiteral(''                        <td colspan=\''3\''><em>Job was expired.</em>\r\n              '' +\r\n''          </td>\r\n'')", span="174-175", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_27 [label="Write(HtmlHelper.QueueLabel(job.Value.Queue))", span="192-192", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_28 [label="WriteLiteral(''&nbsp;'')", span="197-197", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_29 [label="Write(HtmlHelper.JobType(job.Value.Type))", span="202-202", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_32 [label="job.Value.SucceededAt.HasValue", span="216-216", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_33 [label="WriteLiteral(''                                <span  data-moment=\'''')", span="222-222", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_35 [label="WriteLiteral(''\''>\r\n                                    '')", span="232-232", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_34 [label="Write(JobHelper.ToStringTimestamp(job.Value.SucceededAt.Value))", span="227-227", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_38 [label="WriteLiteral(''                        </td>\r\n'')", span="252-252", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_39 [label="WriteLiteral(''                </tr>\r\n'')", span="262-262", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_41 [label="Write(RenderPartial(new Paginator(pager)))", span="284-284", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_40 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="272-272", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs"];
m47_45 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", color=red, community=0, file="SucceededJobs.generated.cs"];
m47_48 [label="Entry HttpRequestBase.LinkTo(string)", span="8-8", cluster="HttpRequestBase.LinkTo(string)", color=red, community=0, file="SucceededJobs.generated.cs"];
m47_49 [label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="232-232", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SucceededJobs.generated.cs"];
m47_50 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SucceededJobs.generated.cs"];
m47_51 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="73-73", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SucceededJobs.generated.cs"];
m47_54 [label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17", cluster="HangFire.Web.HtmlHelper.JobId(string)", file="SucceededJobs.generated.cs"];
m47_55 [label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="39-39", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededJobs.generated.cs"];
m47_69 [label="Entry HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="147-147", cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SucceededJobs.generated.cs"];
m47_57 [label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SucceededJobs.generated.cs"];
m47_100 [label="Entry ConsoleSample.Services.EmptyCritical()", span="16-16", cluster="ConsoleSample.Services.EmptyCritical()", file="SucceededJobs.generated.cs"];
m47_82 [label="Entry ConsoleSample.Services.Error()", span="21-21", cluster="ConsoleSample.Services.Error()", file="SucceededJobs.generated.cs"];
m47_64 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="SucceededJobs.generated.cs"];
m47_68 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SucceededJobs.generated.cs"];
m47_74 [label="Entry ConsoleSample.Services.Random(int)", span="28-28", cluster="ConsoleSample.Services.Random(int)", file="SucceededJobs.generated.cs"];
m47_87 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="SucceededJobs.generated.cs"];
m47_62 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="SucceededJobs.generated.cs"];
m47_58 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SucceededJobs.generated.cs"];
m47_88 [label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="45-45", cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="SucceededJobs.generated.cs"];
m47_59 [label="HangFire.Web.Pages.SucceededJobs", span="", cluster="System.Console.ReadLine()", file="SucceededJobs.generated.cs"];
m47_65 [label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededJobs.generated.cs"];
m47_97 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_72 [label="x.Random(number)", span="51-51", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_71 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_75 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_79 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_83 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_90 [label="x.Random(number)", span="100-100", cluster="lambda expression", color=red, community=0, file="SucceededJobs.generated.cs"];
m47_89 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_92 [label="Entry lambda expression", span="108-118", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_73 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_76 [label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="68-68", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_77 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_80 [label="x.Error()", span="83-83", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_81 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_84 [label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="92-92", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_85 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_91 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_93 [label="i % 2 == 0", span="110-110", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_94 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="112-112", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_95 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="116-116", cluster="lambda expression", color=red, community=0, file="SucceededJobs.generated.cs"];
m47_96 [label="Exit lambda expression", span="108-118", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_101 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_98 [label="x.EmptyCritical()", span="112-112", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_99 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_102 [label="x.EmptyDefault()", span="116-116", cluster="lambda expression", color=red, community=0, file="SucceededJobs.generated.cs"];
m47_103 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="SucceededJobs.generated.cs"];
m47_60 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="SucceededJobs.generated.cs"];
m47_70 [label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0", cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="SucceededJobs.generated.cs"];
m47_86 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="SucceededJobs.generated.cs"];
m47_61 [label="Entry HangFire.BackgroundJobServer.Start()", span="60-60", cluster="HangFire.BackgroundJobServer.Start()", file="SucceededJobs.generated.cs"];
m47_56 [label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22", cluster="HangFire.Web.HtmlHelper.JobType(string)", file="SucceededJobs.generated.cs"];
m47_67 [label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="59-59", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SucceededJobs.generated.cs"];
m47_66 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="SucceededJobs.generated.cs"];
m47_104 [label="Entry ConsoleSample.Services.EmptyDefault()", span="11-11", cluster="ConsoleSample.Services.EmptyDefault()", file="SucceededJobs.generated.cs"];
m47_63 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="SucceededJobs.generated.cs"];
m47_105 [label=number, span="", file="SucceededJobs.generated.cs"];
m47_106 [label=number, span="", file="SucceededJobs.generated.cs"];
m48_5 [label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs"];
m48_6 [label="transaction.RemoveFromSet(''failed'', context.JobId)", span="22-22", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs"];
m48_7 [label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs"];
m48_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="TestFilter.cs"];
m48_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="TestFilter.cs"];
m48_0 [label="Entry HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs"];
m48_1 [label="transaction.AddToSet(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="13-16", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=red, community=0, file="TestFilter.cs"];
m48_2 [label="Exit HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs"];
m48_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="TestFilter.cs"];
n216 -> n36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n176  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n186  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n187  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n201  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n216 -> n214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
n0 -> n1  [key=0, style=solid];
n0 -> n16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
n1 -> n2  [key=0, style=solid];
n1 -> n5  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n2 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n4 -> n0  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n12 -> n9  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n0  [key=2, style=dotted];
n17 -> n14  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n20 -> n18  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n22 -> n35  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n54  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n69  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n81  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n92  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n104  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n115  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n126  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n142  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n156  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n174  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n185  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n200  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=2, style=dotted];
n24 -> n22  [key=0, style=bold, color=blue];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=2, style=dotted];
n28 -> n26  [key=0, style=bold, color=blue];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=2, style=dotted];
n32 -> n30  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n47  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n22  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n30  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n33  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n48  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n49  [key=2, style=dotted];
n40 -> n42  [key=1, style=dashed, color=darkseagreen4, label=table1];
n40 -> n43  [key=1, style=dashed, color=darkseagreen4, label=table1];
n41 -> n42  [key=0, style=solid];
n41 -> n50  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n50  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n51  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n52  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n26  [key=2, style=dotted];
n46 -> n34  [key=0, style=bold, color=blue];
n53 -> n54  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n54 -> n47  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n22  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n30  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n33  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n52  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n48  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n49  [key=2, style=dotted];
n60 -> n62  [key=1, style=dashed, color=darkseagreen4, label=table2];
n60 -> n63  [key=1, style=dashed, color=darkseagreen4, label=table2];
n60 -> n64  [key=1, style=dashed, color=darkseagreen4, label=table2];
n60 -> n65  [key=1, style=dashed, color=darkseagreen4, label=table2];
n61 -> n62  [key=0, style=solid];
n61 -> n50  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n50  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n50  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n50  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n51  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n66 -> n26  [key=2, style=dotted];
n67 -> n53  [key=0, style=bold, color=blue];
n68 -> n69  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n47  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n22  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n30  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n49  [key=2, style=dotted];
n72 -> n74  [key=1, style=dashed, color=darkseagreen4, label=table3];
n72 -> n75  [key=1, style=dashed, color=darkseagreen4, label=table3];
n73 -> n74  [key=0, style=solid];
n73 -> n50  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n50  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n33  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n76 -> n48  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n51  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n26  [key=2, style=dotted];
n79 -> n68  [key=0, style=bold, color=blue];
n80 -> n81  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n81 -> n47  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n22  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n30  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n49  [key=2, style=dotted];
n84 -> n86  [key=1, style=dashed, color=darkseagreen4, label=table4];
n85 -> n86  [key=0, style=solid];
n85 -> n50  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n33  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n48  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n51  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n26  [key=2, style=dotted];
n90 -> n80  [key=0, style=bold, color=blue];
n91 -> n92  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n92 -> n47  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n22  [key=2, style=dotted];
n94 -> n95  [key=0, style=solid];
n94 -> n30  [key=2, style=dotted];
n95 -> n96  [key=0, style=solid];
n95 -> n49  [key=2, style=dotted];
n95 -> n97  [key=1, style=dashed, color=darkseagreen4, label=table5];
n96 -> n97  [key=0, style=solid];
n96 -> n50  [key=2, style=dotted];
n97 -> n98  [key=0, style=solid];
n97 -> n33  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n52  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n48  [key=2, style=dotted];
n100 -> n101  [key=0, style=solid];
n100 -> n51  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n101 -> n26  [key=2, style=dotted];
n102 -> n91  [key=0, style=bold, color=blue];
n103 -> n104  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n47  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n22  [key=2, style=dotted];
n106 -> n107  [key=0, style=solid];
n106 -> n30  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n49  [key=2, style=dotted];
n107 -> n109  [key=1, style=dashed, color=darkseagreen4, label=table6];
n108 -> n109  [key=0, style=solid];
n108 -> n50  [key=2, style=dotted];
n109 -> n110  [key=0, style=solid];
n109 -> n33  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n48  [key=2, style=dotted];
n111 -> n112  [key=0, style=solid];
n111 -> n51  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n26  [key=2, style=dotted];
n113 -> n103  [key=0, style=bold, color=blue];
n114 -> n115  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n115 -> n47  [key=2, style=dotted];
n116 -> n117  [key=0, style=solid];
n116 -> n22  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n30  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n49  [key=2, style=dotted];
n118 -> n120  [key=1, style=dashed, color=darkseagreen4, label=table7];
n119 -> n120  [key=0, style=solid];
n119 -> n50  [key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n120 -> n33  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n121 -> n48  [key=2, style=dotted];
n122 -> n123  [key=0, style=solid];
n122 -> n51  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n26  [key=2, style=dotted];
n124 -> n114  [key=0, style=bold, color=blue];
n125 -> n126  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n126 -> n47  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n22  [key=2, style=dotted];
n128 -> n129  [key=0, style=solid];
n128 -> n30  [key=2, style=dotted];
n129 -> n130  [key=0, style=solid];
n129 -> n33  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n52  [key=2, style=dotted];
n131 -> n132  [key=0, style=solid];
n131 -> n52  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n48  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n51  [key=2, style=dotted];
n134 -> n135  [key=0, style=solid];
n134 -> n49  [key=2, style=dotted];
n134 -> n136  [key=1, style=dashed, color=darkseagreen4, label=table8];
n134 -> n137  [key=1, style=dashed, color=darkseagreen4, label=table8];
n134 -> n138  [key=1, style=dashed, color=darkseagreen4, label=table8];
n135 -> n136  [key=0, style=solid];
n135 -> n50  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n136 -> n50  [key=2, style=dotted];
n137 -> n138  [key=0, style=solid];
n137 -> n50  [key=2, style=dotted];
n138 -> n139  [key=0, style=solid];
n138 -> n52  [key=2, style=dotted];
n139 -> n140  [key=0, style=solid];
n139 -> n26  [key=2, style=dotted];
n140 -> n125  [key=0, style=bold, color=blue];
n141 -> n142  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n47  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n22  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n30  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n33  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n146 -> n52  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n147 -> n48  [key=2, style=dotted];
n148 -> n149  [key=0, style=solid];
n148 -> n49  [key=2, style=dotted];
n148 -> n150  [key=1, style=dashed, color=darkseagreen4, label=table9];
n148 -> n151  [key=1, style=dashed, color=darkseagreen4, label=table9];
n148 -> n152  [key=1, style=dashed, color=darkseagreen4, label=table9];
n149 -> n150  [key=0, style=solid];
n149 -> n50  [key=2, style=dotted];
n150 -> n151  [key=0, style=solid];
n150 -> n50  [key=2, style=dotted];
n151 -> n152  [key=0, style=solid];
n151 -> n50  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n152 -> n51  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n26  [key=2, style=dotted];
n154 -> n141  [key=0, style=bold, color=blue];
n155 -> n156  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n156 -> n47  [key=2, style=dotted];
n157 -> n158  [key=0, style=solid];
n157 -> n22  [key=2, style=dotted];
n158 -> n159  [key=0, style=solid];
n158 -> n30  [key=2, style=dotted];
n159 -> n160  [key=0, style=solid];
n159 -> n33  [key=2, style=dotted];
n160 -> n161  [key=0, style=solid];
n160 -> n52  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n52  [key=2, style=dotted];
n162 -> n163  [key=0, style=solid];
n162 -> n48  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n49  [key=2, style=dotted];
n163 -> n165  [key=1, style=dashed, color=darkseagreen4, label=table10];
n163 -> n166  [key=1, style=dashed, color=darkseagreen4, label=table10];
n163 -> n167  [key=1, style=dashed, color=darkseagreen4, label=table10];
n163 -> n168  [key=1, style=dashed, color=darkseagreen4, label=table10];
n163 -> n169  [key=1, style=dashed, color=darkseagreen4, label=table10];
n164 -> n165  [key=0, style=solid];
n164 -> n50  [key=2, style=dotted];
n165 -> n166  [key=0, style=solid];
n165 -> n50  [key=2, style=dotted];
n166 -> n167  [key=0, style=solid];
n166 -> n50  [key=2, style=dotted];
n167 -> n168  [key=0, style=solid];
n167 -> n50  [key=2, style=dotted];
n168 -> n169  [key=0, style=solid];
n168 -> n50  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n169 -> n51  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n52  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n26  [key=2, style=dotted];
n172 -> n155  [key=0, style=bold, color=blue];
n173 -> n174  [key=0, style=solid];
n174 -> n175  [key=0, style=solid];
n174 -> n47  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n22  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n176 -> n30  [key=2, style=dotted];
n177 -> n178  [key=0, style=solid, color=red];
n177 -> n33  [key=2, style=dotted];
n178 -> n179  [key=0, style=solid, color=red];
n178 -> n48  [key=2, style=dotted, color=red];
n179 -> n180  [key=0, style=solid, color=red];
n179 -> n52  [key=2, style=dotted, color=red];
n180 -> n181  [key=0, style=solid];
n180 -> n51  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n52  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n182 -> n26  [key=2, style=dotted];
n183 -> n173  [key=0, style=bold, color=blue];
n184 -> n185  [key=0, style=solid, color=red];
n185 -> n186  [key=0, style=solid, color=red];
n185 -> n47  [key=2, style=dotted, color=red];
n186 -> n187  [key=0, style=solid];
n186 -> n22  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n30  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n188 -> n33  [key=2, style=dotted];
n189 -> n190  [key=0, style=solid, color=red];
n189 -> n52  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid, color=red];
n190 -> n48  [key=2, style=dotted, color=red];
n191 -> n192  [key=0, style=solid, color=red];
n191 -> n52  [key=2, style=dotted, color=red];
n192 -> n193  [key=0, style=solid, color=red];
n192 -> n49  [key=2, style=dotted];
n192 -> n194  [key=1, style=dashed, color=darkseagreen4, label=table11];
n192 -> n195  [key=1, style=dashed, color=darkseagreen4, label=table11];
n193 -> n194  [key=0, style=solid, color=red];
n193 -> n50  [key=2, style=dotted, color=red];
n194 -> n195  [key=0, style=solid];
n194 -> n50  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n195 -> n51  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n52  [key=2, style=dotted];
n197 -> n198  [key=0, style=solid];
n197 -> n26  [key=2, style=dotted];
n198 -> n184  [key=0, style=bold, color=blue];
n199 -> n200  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n200 -> n47  [key=2, style=dotted];
n201 -> n202  [key=0, style=solid];
n201 -> n22  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n202 -> n30  [key=2, style=dotted];
n203 -> n204  [key=0, style=solid];
n203 -> n33  [key=2, style=dotted];
n204 -> n205  [key=0, style=solid];
n204 -> n52  [key=2, style=dotted];
n205 -> n206  [key=0, style=solid, color=red];
n205 -> n52  [key=2, style=dotted];
n206 -> n207  [key=0, style=solid, color=red];
n206 -> n48  [key=2, style=dotted, color=red];
n207 -> n208  [key=0, style=solid, color=red];
n207 -> n52  [key=2, style=dotted, color=red];
n208 -> n209  [key=0, style=solid, color=red];
n208 -> n49  [key=2, style=dotted];
n208 -> n210  [key=1, style=dashed, color=darkseagreen4, label=table12];
n208 -> n211  [key=1, style=dashed, color=red, label=table12];
n208 -> n212  [key=1, style=dashed, color=darkseagreen4, label=table12];
n209 -> n210  [key=0, style=solid, color=red];
n209 -> n50  [key=2, style=dotted, color=red];
n210 -> n211  [key=0, style=solid, color=red];
n210 -> n50  [key=2, style=dotted];
n211 -> n212  [key=0, style=solid, color=red];
n211 -> n50  [key=2, style=dotted, color=red];
n212 -> n213  [key=0, style=solid];
n212 -> n51  [key=2, style=dotted];
n213 -> n214  [key=0, style=solid];
n213 -> n52  [key=2, style=dotted];
n214 -> n215  [key=0, style=solid];
n214 -> n26  [key=2, style=dotted];
n215 -> n199  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=red];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_1 -> m0_3  [key=2, style=dotted, color=red];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_4 -> m1_1  [key=1, style=dashed, color=green, label="HangFire.Tests.CustomJob"];
m1_4 -> m1_2  [key=1, style=dashed, color=green, label="HangFire.Tests.CustomJob"];
m5_18 -> m5_76  [key=0, style=solid, color=red];
m5_76 -> m5_77  [key=0, style=solid, color=red];
m5_76 -> m5_78  [key=0, style=solid, color=red];
m5_77 -> m5_92  [key=0, style=solid, color=red];
m5_77 -> m5_63  [key=2, style=dotted, color=red];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_80  [key=0, style=solid];
m5_78 -> m5_93  [key=2, style=dotted];
m5_79 -> m5_92  [key=0, style=solid];
m5_79 -> m5_94  [key=2, style=dotted];
m5_79 -> m5_95  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid, color=red];
m5_80 -> m5_82  [key=0, style=solid];
m5_81 -> m5_92  [key=0, style=solid, color=red];
m5_81 -> m5_63  [key=2, style=dotted, color=red];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_84  [key=0, style=solid];
m5_82 -> m5_93  [key=2, style=dotted];
m5_83 -> m5_92  [key=0, style=solid];
m5_83 -> m5_63  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid, color=red];
m5_84 -> m5_96  [key=2, style=dotted];
m5_84 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m5_85 -> m5_86  [key=0, style=solid, color=red];
m5_85 -> m5_87  [key=0, style=solid, color=red];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_92  [key=0, style=solid];
m5_87 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_86 -> m5_92  [key=0, style=solid];
m5_86 -> m5_94  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_90  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid, color=red];
m5_90 -> m5_87  [key=0, style=solid];
m5_89 -> m5_92  [key=0, style=solid];
m5_89 -> m5_63  [key=2, style=dotted];
m5_91 -> m5_92  [key=0, style=solid, color=red];
m5_91 -> m5_63  [key=2, style=dotted, color=red];
m5_92 -> m5_18  [key=0, style=bold, color=blue];
m5_33 -> m5_107  [key=0, style=solid];
m5_33 -> m5_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IJobCancellationToken"];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_96  [key=2, style=dotted];
m5_107 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m5_107 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m5_115 -> m5_122  [key=0, style=solid];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_128  [key=2, style=dotted];
m5_108 -> m5_122  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_108 -> m5_124  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_124  [key=0, style=solid];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_114  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_111 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_111 -> m5_118  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_111 -> m5_120  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_109 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_109 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_132  [key=2, style=dotted];
m5_124 -> m5_127  [key=0, style=solid];
m5_124 -> m5_133  [key=2, style=dotted];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_112 -> m5_119  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_112 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_123 -> m5_110  [key=0, style=solid];
m5_123 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_116  [key=0, style=solid];
m5_114 -> m5_93  [key=2, style=dotted];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_122  [key=0, style=solid];
m5_116 -> m5_129  [key=2, style=dotted];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_120  [key=0, style=solid];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_130  [key=2, style=dotted];
m5_113 -> m5_114  [key=0, style=solid];
m5_119 -> m5_122  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_131  [key=2, style=dotted];
m5_117 -> m5_118  [key=0, style=solid];
m5_125 -> m5_126  [key=0, style=solid];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_106  [key=2, style=dotted];
m5_127 -> m5_33  [key=0, style=bold, color=blue];
m5_35 -> m5_36  [key=0, style=solid, color=red];
m5_36 -> m5_37  [key=0, style=solid, color=red];
m5_36 -> m5_38  [key=2, style=dotted, color=red];
m5_36 -> m5_39  [key=2, style=dotted, color=red];
m5_37 -> m5_35  [key=0, style=bold, color=blue];
m5_32 -> m5_97  [key=0, style=solid];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_104  [key=2, style=dotted];
m5_97 -> m5_100  [key=1, style=dashed, color=red, label=instance];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_100  [key=0, style=solid, color=red];
m5_100 -> m5_103  [key=0, style=solid, color=red];
m5_99 -> m5_103  [key=0, style=solid];
m5_99 -> m5_65  [key=2, style=dotted];
m5_99 -> m5_105  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_106  [key=2, style=dotted];
m5_103 -> m5_32  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_2 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_2 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_2 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_2 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_2 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_4 -> m5_15  [key=0, style=solid];
m5_4 -> m5_16  [key=2, style=dotted];
m5_6 -> m5_15  [key=0, style=solid];
m5_6 -> m5_16  [key=2, style=dotted];
m5_8 -> m5_15  [key=0, style=solid];
m5_8 -> m5_16  [key=2, style=dotted];
m5_10 -> m5_15  [key=0, style=solid];
m5_10 -> m5_17  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_18  [key=2, style=dotted];
m5_15 -> m5_2  [key=0, style=bold, color=blue];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IJobCancellationToken"];
m5_19 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobActivator"];
m5_19 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IJobCancellationToken"];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_32  [key=2, style=dotted];
m5_27 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_33  [key=2, style=dotted];
m5_21 -> m5_31  [key=0, style=solid];
m5_21 -> m5_16  [key=2, style=dotted];
m5_23 -> m5_31  [key=0, style=solid];
m5_23 -> m5_16  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_25 -> m5_26  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_34  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_19  [key=0, style=bold, color=blue];
m5_64 -> m5_167  [key=0, style=solid];
m5_64 -> m5_168  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m5_64 -> m5_171  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_161  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_168 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=constantExpression];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_173  [key=2, style=dotted];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_171  [key=0, style=solid];
m5_170 -> m5_172  [key=0, style=solid];
m5_172 -> m5_64  [key=0, style=bold, color=blue];
m5_34 -> m5_134  [key=0, style=solid];
m5_134 -> m5_139  [key=0, style=solid];
m5_134 -> m5_140  [key=2, style=dotted];
m5_135 -> m5_136  [key=0, style=solid];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_138  [key=0, style=solid];
m5_137 -> m5_139  [key=0, style=solid];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_106  [key=2, style=dotted];
m5_139 -> m5_34  [key=0, style=bold, color=blue];
m5_67 -> m5_149  [key=0, style=solid];
m5_67 -> m5_150  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.MethodCallExpression"];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_161  [key=2, style=dotted];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_162  [key=2, style=dotted];
m5_150 -> m5_163  [key=2, style=dotted];
m5_150 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_164  [key=2, style=dotted];
m5_151 -> m5_158  [key=1, style=dashed, color=darkseagreen4, label=serializedArguments];
m5_151 -> m5_159  [key=1, style=dashed, color=darkseagreen4, label=serializedArguments];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_159  [key=0, style=solid];
m5_152 -> m5_154  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_152 -> m5_155  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_152 -> m5_156  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_152 -> m5_157  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_158 -> m5_152  [key=0, style=solid];
m5_158 -> m5_132  [key=2, style=dotted];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_133  [key=2, style=dotted];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_158  [key=1, style=dashed, color=darkseagreen4, label=value];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_158  [key=0, style=solid];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_157  [key=0, style=solid];
m5_156 -> m5_158  [key=0, style=solid];
m5_156 -> m5_165  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_166  [key=2, style=dotted];
m5_160 -> m5_67  [key=0, style=bold, color=blue];
m5_68 -> m5_69  [key=0, style=solid, color=red];
m5_68 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m5_69 -> m5_70  [key=0, style=solid, color=red];
m5_69 -> m5_71  [key=0, style=solid, color=red];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_74  [key=1, style=dashed, color=red, label=callExpression];
m5_70 -> m5_75  [key=0, style=solid, color=red];
m5_70 -> m5_16  [key=2, style=dotted, color=red];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_74  [key=0, style=solid, color=red];
m5_74 -> m5_75  [key=0, style=solid, color=red];
m5_74 -> m5_2  [key=2, style=dotted, color=red];
m5_74 -> m5_67  [key=2, style=dotted, color=red];
m5_73 -> m5_75  [key=0, style=solid];
m5_73 -> m5_63  [key=2, style=dotted];
m5_75 -> m5_68  [key=0, style=bold, color=blue];
m5_39 -> m5_44  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [key=2, style=dotted];
m5_44 -> m5_47  [key=2, style=dotted];
m5_45 -> m5_39  [key=0, style=bold, color=blue];
m5_40 -> m5_41  [key=0, style=solid, color=red];
m5_41 -> m5_42  [key=0, style=solid, color=red];
m5_41 -> m5_43  [key=2, style=dotted, color=red];
m5_41 -> m5_39  [key=2, style=dotted, color=red];
m5_42 -> m5_40  [key=0, style=bold, color=blue];
m5_141 -> m5_142  [key=0, style=solid];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label=disposable];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_145  [key=0, style=solid];
m5_143 -> m5_147  [key=0, style=solid];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_147  [key=0, style=solid];
m5_144 -> m5_148  [key=2, style=dotted];
m5_145 -> m5_146  [key=0, style=solid];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_106  [key=2, style=dotted];
m5_147 -> m5_141  [key=0, style=bold, color=blue];
m5_174 -> m5_175  [key=0, style=solid];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_177  [key=2, style=dotted];
m5_175 -> m5_95  [key=2, style=dotted];
m5_176 -> m5_174  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_48 -> m5_49  [key=0, style=solid, color=red];
m5_48 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m5_49 -> m5_50  [key=0, style=solid, color=red];
m5_49 -> m5_51  [key=0, style=solid, color=red];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_55  [key=1, style=dashed, color=red, label=callExpression];
m5_51 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_51 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_51 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_50 -> m5_62  [key=0, style=solid, color=red];
m5_50 -> m5_16  [key=2, style=dotted, color=red];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_54  [key=0, style=solid];
m5_55 -> m5_56  [key=0, style=solid, color=red];
m5_55 -> m5_60  [key=0, style=solid, color=red];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_64  [key=2, style=dotted];
m5_56 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=objectValue];
m5_60 -> m5_61  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_2  [key=2, style=dotted];
m5_61 -> m5_67  [key=2, style=dotted];
m5_53 -> m5_62  [key=0, style=solid];
m5_53 -> m5_63  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid, color=red];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_59  [key=0, style=solid];
m5_59 -> m5_61  [key=0, style=solid];
m5_59 -> m5_66  [key=2, style=dotted];
m5_58 -> m5_62  [key=0, style=solid];
m5_58 -> m5_65  [key=2, style=dotted];
m5_62 -> m5_48  [key=0, style=bold, color=blue];
m5_178 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_36  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m5_178 -> m5_41  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m5_178 -> m5_76  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m5_178 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_85  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m5_178 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_175  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_4  [key=2, style=dotted];
m6_7 -> m6_11  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_8 -> m6_12  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid, color=green];
m6_9 -> m6_13  [key=2, style=dotted];
m6_9 -> m6_14  [key=2, style=dotted];
m6_9 -> m6_11  [key=2, style=dotted, color=green];
m6_10 -> m6_6  [key=0, style=bold, color=blue];
m6_10 -> m6_8  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.IJobFilter"];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_13 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_4 -> m6_5  [key=0, style=solid, color=green];
m6_14 -> m6_12  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_4  [key=2, style=dotted];
m6_1 -> m6_3  [key=2, style=dotted, color=green];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=2, style=dotted];
m6_21 -> m6_19  [key=0, style=bold, color=blue];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_5 -> m6_7  [key=2, style=dotted, color=green];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_18 -> m6_16  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid, color=green];
m6_23 -> m6_19  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m6_24 -> m6_25  [key=0, style=solid, color=green];
m6_24 -> m6_19  [key=2, style=dotted, color=green];
m6_25 -> m6_23  [key=0, style=bold, color=blue];
m6_26 -> m6_1  [key=1, style=dashed, color=green, label="HangFire.Filters.GlobalJobFilterCollection"];
m6_26 -> m6_5  [key=1, style=dashed, color=green, label="HangFire.Filters.GlobalJobFilterCollection"];
m6_26 -> m6_9  [key=1, style=dashed, color=green, label="HangFire.Filters.GlobalJobFilterCollection"];
m6_26 -> m6_24  [key=1, style=dashed, color=green, label="HangFire.Filters.GlobalJobFilterCollection"];
m6_26 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.GlobalJobFilterCollection"];
m6_26 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.GlobalJobFilterCollection"];
m6_27 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.IJobFilter"];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=2, style=dotted];
m7_10 -> m7_8  [key=0, style=bold, color=blue];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_15  [key=2, style=dotted];
m7_14 -> m7_12  [key=0, style=bold, color=blue];
m7_5 -> m7_3  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid, color=green];
m7_3 -> m7_6  [key=2, style=dotted, color=green];
m7_3 -> m7_7  [key=2, style=dotted, color=green];
m7_2 -> m7_3  [key=0, style=solid, color=green];
m7_2 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_1 -> m7_2  [key=0, style=solid];
m7_4 -> m7_0  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_6  [key=2, style=dotted];
m7_4 -> m7_7  [key=2, style=dotted];
m7_16 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m7_16 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m8_110 -> m8_111  [key=0, style=solid];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_53  [key=2, style=dotted];
m8_112 -> m8_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_113 -> m8_110  [key=0, style=bold, color=blue];
m8_128 -> m8_129  [key=0, style=solid];
m8_129 -> m8_128  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_3  [key=2, style=dotted];
m8_16 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_17 -> m8_15  [key=0, style=bold, color=blue];
m8_25 -> m8_26  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_3  [key=2, style=dotted];
m8_26 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_27 -> m8_25  [key=0, style=bold, color=blue];
m8_38 -> m8_39  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_3  [key=2, style=dotted];
m8_39 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_40 -> m8_38  [key=0, style=bold, color=blue];
m8_49 -> m8_50  [key=0, style=solid];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_53  [key=2, style=dotted];
m8_51 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_52 -> m8_49  [key=0, style=bold, color=blue];
m8_88 -> m8_89  [key=0, style=solid];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_93  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_53  [key=2, style=dotted];
m8_90 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_91 -> m8_88  [key=0, style=bold, color=blue];
m8_77 -> m8_78  [key=0, style=solid];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_53  [key=2, style=dotted];
m8_79 -> m8_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_80 -> m8_77  [key=0, style=bold, color=blue];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_114 -> m8_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_8  [key=2, style=dotted];
m8_5 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_14  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_9  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_7 -> m8_4  [key=0, style=bold, color=blue];
m8_12 -> m8_10  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_8  [key=2, style=dotted];
m8_19 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_13  [key=2, style=dotted];
m8_23 -> m8_14  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_9  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_21 -> m8_18  [key=0, style=bold, color=blue];
m8_24 -> m8_22  [key=0, style=bold, color=blue];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_28 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_33  [key=2, style=dotted];
m8_29 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=cts];
m8_29 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=cts];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_8  [key=2, style=dotted];
m8_31 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_14  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_34  [key=2, style=dotted];
m8_32 -> m8_28  [key=0, style=bold, color=blue];
m8_35 -> m8_36  [key=0, style=solid];
m8_37 -> m8_35  [key=0, style=bold, color=blue];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_41 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_45  [key=2, style=dotted];
m8_42 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label=cts];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_8  [key=2, style=dotted];
m8_43 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_14  [key=2, style=dotted];
m8_44 -> m8_41  [key=0, style=bold, color=blue];
m8_46 -> m8_47  [key=0, style=solid];
m8_48 -> m8_46  [key=0, style=bold, color=blue];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_60  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_13  [key=2, style=dotted];
m8_56 -> m8_14  [key=2, style=dotted];
m8_56 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=payload];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_9  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_9  [key=2, style=dotted];
m8_59 -> m8_54  [key=0, style=bold, color=blue];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_60  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_65 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_13  [key=2, style=dotted];
m8_67 -> m8_14  [key=2, style=dotted];
m8_67 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label=payload];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_8  [key=2, style=dotted];
m8_69 -> m8_74  [key=2, style=dotted];
m8_69 -> m8_71  [key=1, style=dashed, color=darkseagreen4, label=fetchedAt];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_73  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_73  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_75  [key=2, style=dotted];
m8_71 -> m8_76  [key=2, style=dotted];
m8_72 -> m8_65  [key=0, style=bold, color=blue];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_86  [key=2, style=dotted];
m8_82 -> m8_60  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_13  [key=2, style=dotted];
m8_83 -> m8_14  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_87  [key=2, style=dotted];
m8_85 -> m8_81  [key=0, style=bold, color=blue];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_60  [key=2, style=dotted];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_92 -> m8_95  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_13  [key=2, style=dotted];
m8_94 -> m8_14  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_8  [key=2, style=dotted];
m8_95 -> m8_74  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_98  [key=2, style=dotted];
m8_97 -> m8_92  [key=0, style=bold, color=blue];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_60  [key=2, style=dotted];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_103 -> m8_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_8  [key=2, style=dotted];
m8_105 -> m8_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_13  [key=2, style=dotted];
m8_108 -> m8_14  [key=2, style=dotted];
m8_106 -> m8_103  [key=0, style=bold, color=blue];
m8_107 -> m8_108  [key=0, style=solid];
m8_109 -> m8_107  [key=0, style=bold, color=blue];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_60  [key=2, style=dotted];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_13  [key=2, style=dotted];
m8_116 -> m8_14  [key=2, style=dotted];
m8_116 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label=critical];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_13  [key=2, style=dotted];
m8_119 -> m8_14  [key=2, style=dotted];
m8_119 -> m8_121  [key=1, style=dashed, color=darkseagreen4, label="@default"];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_73  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_9  [key=2, style=dotted];
m8_120 -> m8_121  [key=0, style=solid];
m8_120 -> m8_73  [key=2, style=dotted];
m8_121 -> m8_122  [key=0, style=solid];
m8_121 -> m8_9  [key=2, style=dotted];
m8_122 -> m8_114  [key=0, style=bold, color=blue];
m8_13 -> m8_123  [key=0, style=solid];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_126  [key=2, style=dotted];
m8_123 -> m8_127  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_125 -> m8_13  [key=0, style=bold, color=blue];
m8_99 -> m8_100  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_104  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_53  [key=2, style=dotted];
m8_101 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_102 -> m8_99  [key=0, style=bold, color=blue];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_53  [key=2, style=dotted];
m8_63 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_64 -> m8_61  [key=0, style=bold, color=blue];
m8_130 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_130 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_130 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_130 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_130 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_130 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_130 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_130 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_130 -> m8_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_130 -> m8_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m8_131 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_132 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_133 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_134 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=cts];
m8_135 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_136 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label=cts];
m8_137 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_138 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_139 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_140 -> m8_93  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_141 -> m8_104  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m8_142 -> m8_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m8_143 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_2  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_2  [key=0, style=bold, color=blue];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_2  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m17_60 -> m17_61  [key=0, style=solid];
m17_61 -> m17_62  [key=0, style=solid];
m17_61 -> m17_68  [key=2, style=dotted];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_69  [key=2, style=dotted];
m17_62 -> m17_70  [key=2, style=dotted];
m17_62 -> m17_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_69  [key=2, style=dotted];
m17_63 -> m17_71  [key=2, style=dotted];
m17_63 -> m17_70  [key=2, style=dotted];
m17_63 -> m17_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_67  [key=0, style=solid];
m17_64 -> m17_72  [key=2, style=dotted];
m17_65 -> m17_66  [key=0, style=solid];
m17_66 -> m17_67  [key=0, style=solid];
m17_67 -> m17_60  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid, color=red];
m17_1 -> m17_2  [key=0, style=solid, color=red];
m17_1 -> m17_3  [key=2, style=dotted, color=red];
m17_1 -> m17_4  [key=2, style=dotted, color=red];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_53 -> m17_54  [key=0, style=solid, color=red];
m17_54 -> m17_55  [key=0, style=solid, color=red];
m17_54 -> m17_56  [key=2, style=dotted, color=red];
m17_54 -> m17_9  [key=2, style=dotted, color=red];
m17_55 -> m17_53  [key=0, style=bold, color=blue];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_21  [key=1, style=dashed, color=red, label=string];
m17_20 -> m17_21  [key=0, style=solid, color=red];
m17_20 -> m17_23  [key=2, style=dotted];
m17_20 -> m17_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_20 -> m17_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_21 -> m17_22  [key=0, style=solid, color=red];
m17_21 -> m17_8  [key=2, style=dotted, color=red];
m17_21 -> m17_9  [key=2, style=dotted, color=red];
m17_22 -> m17_19  [key=0, style=bold, color=blue];
m17_115 -> m17_116  [key=0, style=solid];
m17_116 -> m17_117  [key=0, style=solid];
m17_116 -> m17_119  [key=0, style=solid];
m17_116 -> m17_68  [key=2, style=dotted];
m17_116 -> m17_72  [key=2, style=dotted];
m17_117 -> m17_118  [key=0, style=solid];
m17_118 -> m17_119  [key=0, style=solid];
m17_119 -> m17_115  [key=0, style=bold, color=blue];
m17_99 -> m17_100  [key=0, style=solid];
m17_100 -> m17_101  [key=0, style=solid];
m17_100 -> m17_103  [key=0, style=solid];
m17_100 -> m17_68  [key=2, style=dotted];
m17_100 -> m17_72  [key=2, style=dotted];
m17_101 -> m17_102  [key=0, style=solid];
m17_102 -> m17_103  [key=0, style=solid];
m17_103 -> m17_99  [key=0, style=bold, color=blue];
m17_174 -> m17_175  [key=0, style=solid];
m17_175 -> m17_176  [key=0, style=solid];
m17_175 -> m17_177  [key=2, style=dotted];
m17_176 -> m17_174  [key=0, style=bold, color=blue];
m17_166 -> m17_167  [key=0, style=solid];
m17_166 -> m17_169  [key=1, style=dashed, color=darkseagreen4, label=Table];
m17_166 -> m17_170  [key=1, style=dashed, color=darkseagreen4, label=Table];
m17_167 -> m17_168  [key=0, style=solid];
m17_167 -> m17_145  [key=2, style=dotted];
m17_169 -> m17_170  [key=0, style=solid];
m17_169 -> m17_173  [key=0, style=solid];
m17_169 -> m17_169  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m17_170 -> m17_171  [key=0, style=solid];
m17_168 -> m17_169  [key=0, style=solid];
m17_168 -> m17_170  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_168 -> m17_171  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_168 -> m17_172  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_171 -> m17_172  [key=0, style=solid];
m17_171 -> m17_145  [key=2, style=dotted];
m17_172 -> m17_169  [key=0, style=solid];
m17_172 -> m17_172  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_173 -> m17_166  [key=0, style=bold, color=blue];
m17_13 -> m17_14  [key=0, style=solid, color=red];
m17_14 -> m17_15  [key=0, style=solid, color=red];
m17_14 -> m17_8  [key=2, style=dotted, color=red];
m17_14 -> m17_9  [key=2, style=dotted, color=red];
m17_15 -> m17_13  [key=0, style=bold, color=blue];
m17_80 -> m17_81  [key=0, style=solid];
m17_81 -> m17_82  [key=0, style=solid];
m17_81 -> m17_23  [key=2, style=dotted];
m17_81 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_81 -> m17_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_82 -> m17_83  [key=0, style=solid];
m17_82 -> n48  [key=2, style=dotted];
m17_83 -> m17_80  [key=0, style=bold, color=blue];
m17_10 -> m17_11  [key=0, style=solid, color=red];
m17_11 -> m17_12  [key=0, style=solid, color=red];
m17_11 -> m17_8  [key=2, style=dotted, color=red];
m17_11 -> m17_9  [key=2, style=dotted, color=red];
m17_12 -> m17_10  [key=0, style=bold, color=blue];
m17_197 -> m17_198  [key=0, style=solid];
m17_198 -> m17_197  [key=0, style=bold, color=blue];
m17_5 -> m17_6  [key=0, style=solid, color=red];
m17_6 -> m17_7  [key=0, style=solid, color=red];
m17_6 -> m17_8  [key=2, style=dotted, color=red];
m17_6 -> m17_9  [key=2, style=dotted, color=red];
m17_7 -> m17_5  [key=0, style=bold, color=blue];
m17_30 -> m17_31  [key=0, style=solid, color=red];
m17_30 -> m17_33  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m17_31 -> m17_32  [key=0, style=solid, color=red];
m17_31 -> m17_8  [key=2, style=dotted, color=red];
m17_31 -> m17_9  [key=2, style=dotted, color=red];
m17_32 -> m17_30  [key=0, style=bold, color=blue];
m17_91 -> m17_92  [key=0, style=solid, color=red];
m17_92 -> m17_93  [key=0, style=solid, color=red];
m17_92 -> m17_8  [key=2, style=dotted, color=red];
m17_92 -> m17_9  [key=2, style=dotted, color=red];
m17_93 -> m17_91  [key=0, style=bold, color=blue];
m17_104 -> m17_105  [key=0, style=solid];
m17_105 -> m17_106  [key=0, style=solid];
m17_105 -> m17_108  [key=0, style=solid];
m17_105 -> m17_109  [key=2, style=dotted];
m17_106 -> m17_107  [key=0, style=solid];
m17_107 -> m17_108  [key=0, style=solid];
m17_108 -> m17_104  [key=0, style=bold, color=blue];
m17_129 -> m17_130  [key=0, style=solid];
m17_129 -> m17_131  [key=1, style=dashed, color=darkseagreen4, label=Table];
m17_130 -> m17_131  [key=0, style=solid];
m17_130 -> m17_133  [key=2, style=dotted];
m17_131 -> m17_132  [key=0, style=solid];
m17_131 -> m17_134  [key=2, style=dotted];
m17_132 -> m17_129  [key=0, style=bold, color=blue];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_45  [key=1, style=dashed, color=red, label=string];
m17_44 -> m17_45  [key=0, style=solid, color=red];
m17_44 -> m17_23  [key=2, style=dotted];
m17_44 -> m17_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_44 -> m17_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_45 -> m17_46  [key=0, style=solid, color=red];
m17_45 -> m17_8  [key=2, style=dotted, color=red];
m17_45 -> m17_9  [key=2, style=dotted, color=red];
m17_46 -> m17_43  [key=0, style=bold, color=blue];
m17_110 -> m17_111  [key=0, style=solid];
m17_111 -> m17_112  [key=0, style=solid];
m17_111 -> m17_114  [key=0, style=solid];
m17_111 -> m17_68  [key=2, style=dotted];
m17_111 -> m17_72  [key=2, style=dotted];
m17_112 -> m17_113  [key=0, style=solid];
m17_113 -> m17_114  [key=0, style=solid];
m17_114 -> m17_110  [key=0, style=bold, color=blue];
m17_147 -> m17_148  [key=0, style=solid];
m17_148 -> m17_149  [key=0, style=solid];
m17_148 -> m17_150  [key=2, style=dotted];
m17_148 -> m17_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_149 -> m17_147  [key=0, style=bold, color=blue];
m17_135 -> m17_136  [key=0, style=solid];
m17_136 -> m17_137  [key=0, style=solid];
m17_136 -> m17_143  [key=2, style=dotted];
m17_137 -> m17_138  [key=0, style=solid];
m17_137 -> m17_144  [key=2, style=dotted];
m17_137 -> m17_140  [key=1, style=dashed, color=darkseagreen4, label=args];
m17_138 -> m17_139  [key=0, style=solid];
m17_138 -> m17_145  [key=2, style=dotted];
m17_140 -> m17_141  [key=0, style=solid];
m17_140 -> m17_146  [key=2, style=dotted];
m17_140 -> m17_124  [key=2, style=dotted];
m17_140 -> m17_140  [key=1, style=dashed, color=darkseagreen4, label=pair];
m17_139 -> m17_140  [key=0, style=solid];
m17_139 -> m17_142  [key=0, style=solid];
m17_141 -> m17_139  [key=0, style=solid];
m17_141 -> m17_145  [key=2, style=dotted];
m17_141 -> m17_141  [key=1, style=dashed, color=darkseagreen4, label=pair];
m17_142 -> m17_135  [key=0, style=bold, color=blue];
m17_16 -> m17_17  [key=0, style=solid, color=red];
m17_17 -> m17_18  [key=0, style=solid, color=red];
m17_17 -> m17_8  [key=2, style=dotted, color=red];
m17_17 -> m17_9  [key=2, style=dotted, color=red];
m17_18 -> m17_16  [key=0, style=bold, color=blue];
m17_162 -> m17_163  [key=0, style=solid];
m17_163 -> m17_164  [key=0, style=solid];
m17_163 -> m17_159  [key=2, style=dotted];
m17_164 -> m17_165  [key=0, style=solid];
m17_164 -> m17_161  [key=2, style=dotted];
m17_165 -> m17_162  [key=0, style=bold, color=blue];
m17_125 -> m17_126  [key=0, style=solid];
m17_126 -> m17_127  [key=0, style=solid];
m17_126 -> m17_123  [key=2, style=dotted];
m17_126 -> m17_128  [key=2, style=dotted];
m17_127 -> m17_125  [key=0, style=bold, color=blue];
m17_57 -> m17_58  [key=0, style=solid, color=red];
m17_58 -> m17_59  [key=0, style=solid, color=red];
m17_58 -> m17_56  [key=2, style=dotted, color=red];
m17_58 -> m17_9  [key=2, style=dotted, color=red];
m17_59 -> m17_57  [key=0, style=bold, color=blue];
m17_120 -> m17_121  [key=0, style=solid];
m17_121 -> m17_122  [key=0, style=solid];
m17_121 -> m17_123  [key=2, style=dotted];
m17_121 -> m17_124  [key=2, style=dotted];
m17_122 -> m17_120  [key=0, style=bold, color=blue];
m17_151 -> m17_152  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_27 -> m17_28  [key=0, style=solid];
m17_25 -> m17_26  [key=0, style=solid];
m17_26 -> m17_24  [key=0, style=bold, color=blue];
m17_28 -> m17_29  [key=0, style=solid];
m17_29 -> m17_27  [key=0, style=bold, color=blue];
m17_37 -> m17_38  [key=0, style=solid];
m17_40 -> m17_41  [key=0, style=solid];
m17_38 -> m17_39  [key=0, style=solid];
m17_39 -> m17_37  [key=0, style=bold, color=blue];
m17_41 -> m17_42  [key=0, style=solid];
m17_42 -> m17_40  [key=0, style=bold, color=blue];
m17_47 -> m17_48  [key=0, style=solid];
m17_50 -> m17_51  [key=0, style=solid];
m17_48 -> m17_49  [key=0, style=solid];
m17_49 -> m17_47  [key=0, style=bold, color=blue];
m17_51 -> m17_52  [key=0, style=solid];
m17_52 -> m17_50  [key=0, style=bold, color=blue];
m17_73 -> m17_74  [key=0, style=solid];
m17_76 -> m17_77  [key=0, style=solid];
m17_74 -> m17_75  [key=0, style=solid];
m17_75 -> m17_73  [key=0, style=bold, color=blue];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_79  [key=2, style=dotted];
m17_78 -> m17_76  [key=0, style=bold, color=blue];
m17_85 -> m17_86  [key=0, style=solid];
m17_88 -> m17_89  [key=0, style=solid];
m17_86 -> m17_87  [key=0, style=solid];
m17_87 -> m17_85  [key=0, style=bold, color=blue];
m17_89 -> m17_90  [key=0, style=solid];
m17_90 -> m17_88  [key=0, style=bold, color=blue];
m17_152 -> m17_153  [key=0, style=solid];
m17_152 -> m17_144  [key=2, style=dotted];
m17_152 -> m17_154  [key=2, style=dotted];
m17_153 -> m17_151  [key=0, style=bold, color=blue];
m17_155 -> m17_156  [key=0, style=solid];
m17_155 -> m17_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_156 -> m17_157  [key=0, style=solid];
m17_156 -> m17_159  [key=2, style=dotted];
m17_157 -> m17_158  [key=0, style=solid];
m17_157 -> m17_160  [key=2, style=dotted];
m17_157 -> m17_161  [key=2, style=dotted];
m17_158 -> m17_155  [key=0, style=bold, color=blue];
m17_178 -> m17_179  [key=0, style=solid];
m17_178 -> m17_181  [key=1, style=dashed, color=darkseagreen4, label=Table];
m17_178 -> m17_182  [key=1, style=dashed, color=darkseagreen4, label=Table];
m17_179 -> m17_180  [key=0, style=solid];
m17_179 -> m17_145  [key=2, style=dotted];
m17_181 -> m17_182  [key=0, style=solid];
m17_181 -> m17_185  [key=0, style=solid];
m17_181 -> m17_169  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m17_182 -> m17_183  [key=0, style=solid];
m17_180 -> m17_181  [key=0, style=solid];
m17_180 -> m17_182  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_180 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_180 -> m17_184  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_183 -> m17_184  [key=0, style=solid];
m17_183 -> m17_145  [key=2, style=dotted];
m17_184 -> m17_181  [key=0, style=solid];
m17_184 -> m17_184  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_185 -> m17_178  [key=0, style=bold, color=blue];
m17_186 -> m17_187  [key=0, style=solid];
m17_187 -> m17_188  [key=0, style=solid];
m17_187 -> m17_189  [key=2, style=dotted];
m17_188 -> m17_186  [key=0, style=bold, color=blue];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_23  [key=2, style=dotted];
m17_34 -> m17_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_34 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_35 -> m17_36  [key=0, style=solid];
m17_35 -> m17_30  [key=2, style=dotted];
m17_36 -> m17_33  [key=0, style=bold, color=blue];
m17_94 -> m17_95  [key=0, style=solid];
m17_95 -> m17_96  [key=0, style=solid];
m17_95 -> m17_98  [key=0, style=solid];
m17_95 -> m17_68  [key=2, style=dotted];
m17_95 -> m17_72  [key=2, style=dotted];
m17_96 -> m17_97  [key=0, style=solid];
m17_97 -> m17_98  [key=0, style=solid];
m17_98 -> m17_94  [key=0, style=bold, color=blue];
m17_190 -> m17_191  [key=0, style=solid];
m17_191 -> m17_192  [key=0, style=solid];
m17_191 -> m17_196  [key=2, style=dotted];
m17_191 -> m17_133  [key=2, style=dotted];
m17_191 -> m17_193  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_191 -> m17_194  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_192 -> m17_193  [key=0, style=solid];
m17_192 -> m17_195  [key=0, style=solid];
m17_193 -> m17_194  [key=0, style=solid];
m17_193 -> m17_123  [key=2, style=dotted];
m17_193 -> m17_124  [key=2, style=dotted];
m17_193 -> m17_193  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m17_194 -> m17_192  [key=0, style=solid];
m17_194 -> m17_144  [key=2, style=dotted];
m17_194 -> m17_145  [key=2, style=dotted];
m17_194 -> m17_194  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m17_195 -> m17_190  [key=0, style=bold, color=blue];
m17_199 -> m17_1  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_6  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_11  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_14  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_17  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_21  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_31  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_45  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_54  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_58  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_92  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_138  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_164  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_167  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_179  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_187  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m17_199 -> m17_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m18_24 -> m18_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.ClientExceptionContext"];
m18_24 -> m18_65  [key=0, style=solid, color=red];
m18_65 -> m18_66  [key=0, style=solid, color=green];
m18_65 -> m18_67  [key=0, style=solid, color=red];
m18_66 -> m18_65  [key=0, style=solid, color=green];
m18_66 -> m18_68  [key=2, style=dotted, color=green];
m18_67 -> m18_24  [key=0, style=bold, color=blue];
m18_3 -> m18_4  [key=0, style=solid];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_4 -> m18_3  [key=0, style=bold, color=blue];
m18_45 -> m18_46  [key=0, style=solid];
m18_45 -> m18_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatingContext"];
m18_45 -> m18_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatingContext"];
m18_45 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Filters.CreatedContext>"];
m18_45 -> m18_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatingContext"];
m18_45 -> m18_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.IClientFilter"];
m18_45 -> m18_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.IClientFilter"];
m18_45 -> m18_50  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Filters.CreatedContext InvokeClientFilter"];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_62  [key=2, style=dotted];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_49  [key=0, style=solid];
m18_48 -> m18_61  [key=0, style=solid];
m18_48 -> m18_39  [key=2, style=dotted];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_58  [key=0, style=solid];
m18_51 -> m18_63  [key=2, style=dotted];
m18_54 -> m18_55  [key=0, style=solid];
m18_54 -> m18_39  [key=2, style=dotted];
m18_54 -> m18_56  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m18_54 -> m18_59  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m18_54 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m18_55 -> m18_56  [key=0, style=solid];
m18_55 -> m18_64  [key=2, style=dotted];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_64  [key=2, style=dotted];
m18_49 -> m18_50  [key=0, style=solid];
m18_49 -> m18_49  [key=3, color=darkorchid, style=bold, label="Local variable bool wasError"];
m18_50 -> m18_51  [key=0, style=solid];
m18_52 -> m18_53  [key=0, style=solid];
m18_58 -> m18_59  [key=0, style=solid];
m18_58 -> m18_60  [key=0, style=solid];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_58  [key=1, style=dashed, color=darkseagreen4, label=wasError];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_58  [key=0, style=solid];
m18_60 -> m18_61  [key=0, style=solid];
m18_57 -> m18_61  [key=0, style=solid];
m18_61 -> m18_45  [key=0, style=bold, color=blue];
m18_14 -> m18_15  [key=0, style=solid, color=red];
m18_14 -> m18_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m18_15 -> m18_16  [key=0, style=solid, color=green];
m18_15 -> m18_21  [key=0, style=solid, color=red];
m18_15 -> m18_22  [key=2, style=dotted, color=red];
m18_17 -> m18_18  [key=0, style=solid, color=red];
m18_17 -> m18_23  [key=2, style=dotted];
m18_17 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label=exceptionContext];
m18_16 -> m18_17  [key=0, style=solid, color=green];
m18_18 -> m18_19  [key=0, style=solid, color=red];
m18_18 -> m18_24  [key=2, style=dotted, color=red];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_21  [key=0, style=solid];
m18_20 -> m18_21  [key=0, style=solid];
m18_21 -> m18_14  [key=0, style=bold, color=blue];
m18_5 -> m18_6  [key=0, style=solid, color=green];
m18_5 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>"];
m18_5 -> m18_10  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>"];
m18_5 -> m18_11  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>"];
m18_6 -> m18_7  [key=0, style=solid, color=green];
m18_6 -> m18_8  [key=0, style=solid, color=green];
m18_8 -> m18_9  [key=0, style=solid, color=red];
m18_8 -> m18_10  [key=0, style=solid, color=green];
m18_10 -> m18_11  [key=0, style=solid, color=green];
m18_11 -> m18_12  [key=0, style=solid, color=green];
m18_7 -> m18_12  [key=0, style=solid, color=green];
m18_7 -> m18_13  [key=2, style=dotted, color=green];
m18_9 -> m18_12  [key=0, style=solid, color=red];
m18_9 -> m18_13  [key=2, style=dotted, color=red];
m18_12 -> m18_5  [key=0, style=bold, color=blue];
m18_42 -> m18_43  [key=0, style=solid];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_38  [key=2, style=dotted];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_39  [key=2, style=dotted];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_45  [key=2, style=dotted];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_27  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Filters.CreatedContext>"];
m18_40 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Filters.CreatedContext>"];
m18_34 -> m18_35  [key=0, style=solid];
m18_37 -> m18_34  [key=0, style=bold, color=blue];
m18_41 -> m18_40  [key=0, style=bold, color=blue];
m18_44 -> m18_42  [key=0, style=bold, color=blue];
m18_22 -> m18_25  [key=0, style=solid];
m18_22 -> m18_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m18_22 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m18_22 -> m18_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m18_22 -> m18_27  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>"];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_30  [key=2, style=dotted];
m18_25 -> m18_27  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m18_25 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_26  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<HangFire.Filters.CreatedContext> continuation"];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_31  [key=2, style=dotted];
m18_27 -> m18_32  [key=2, style=dotted];
m18_27 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_33  [key=2, style=dotted];
m18_29 -> m18_22  [key=0, style=bold, color=blue];
m18_69 -> m18_10  [key=1, style=dashed, color=green, label="HangFire.Client.JobCreator"];
m18_69 -> m18_11  [key=1, style=dashed, color=green, label="HangFire.Client.JobCreator"];
m18_69 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m18_69 -> m18_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m18_70 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m18_71 -> m18_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m18_72 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m18_73 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Filters.CreatedContext>"];
m18_74 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.IClientFilter"];
m27_0 -> m27_1  [key=0, style=solid];
m27_28 -> m27_29  [key=0, style=solid, color=green];
m27_28 -> m27_30  [key=2, style=dotted, color=green];
m27_9 -> m27_28  [key=0, style=solid, color=green];
m27_9 -> m27_23  [key=1, style=dashed, color=green, label=server];
m27_9 -> m27_25  [key=1, style=dashed, color=green, label=server];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_11  [key=1, style=dashed, color=darkseagreen4, label=server];
m27_9 -> m27_13  [key=1, style=dashed, color=darkseagreen4, label=server];
m27_9 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label=server];
m27_9 -> m27_17  [key=1, style=dashed, color=darkseagreen4, label=server];
m27_9 -> m27_19  [key=1, style=dashed, color=darkseagreen4, label=server];
m27_9 -> m27_21  [key=1, style=dashed, color=darkseagreen4, label=server];
m27_23 -> m27_24  [key=0, style=solid, color=green];
m27_23 -> m27_40  [key=2, style=dotted, color=green];
m27_23 -> m27_35  [key=2, style=dotted, color=green];
m27_22 -> m27_23  [key=0, style=solid, color=green];
m27_22 -> m27_30  [key=2, style=dotted];
m27_24 -> m27_25  [key=0, style=solid, color=green];
m27_24 -> m27_30  [key=2, style=dotted, color=green];
m27_25 -> m27_26  [key=0, style=solid, color=green];
m27_25 -> m27_35  [key=2, style=dotted, color=green];
m27_26 -> m27_27  [key=0, style=solid, color=green];
m27_26 -> m27_30  [key=2, style=dotted, color=green];
m27_27 -> m27_9  [key=0, style=solid, color=green];
m27_27 -> m27_30  [key=2, style=dotted, color=green];
m27_21 -> m27_27  [key=0, style=solid, color=green];
m27_21 -> m27_22  [key=0, style=solid];
m27_1 -> m27_30  [key=2, style=dotted];
m27_1 -> m27_2  [key=0, style=solid];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_31  [key=2, style=dotted];
m27_5 -> m27_30  [key=2, style=dotted];
m27_5 -> m27_6  [key=0, style=solid];
m27_7 -> m27_29  [key=0, style=solid];
m27_7 -> m27_30  [key=2, style=dotted];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_30  [key=2, style=dotted];
m27_10 -> m27_30  [key=2, style=dotted];
m27_10 -> m27_11  [key=0, style=solid];
m27_11 -> m27_35  [key=2, style=dotted];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_34  [key=2, style=dotted];
m27_12 -> m27_30  [key=2, style=dotted];
m27_12 -> m27_13  [key=0, style=solid];
m27_13 -> m27_35  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_14 -> m27_30  [key=2, style=dotted];
m27_14 -> m27_15  [key=0, style=solid];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_36  [key=2, style=dotted];
m27_15 -> m27_37  [key=2, style=dotted];
m27_15 -> m27_38  [key=2, style=dotted];
m27_15 -> m27_39  [key=2, style=dotted];
m27_16 -> m27_30  [key=2, style=dotted];
m27_16 -> m27_17  [key=0, style=solid];
m27_17 -> m27_40  [key=2, style=dotted];
m27_17 -> m27_35  [key=2, style=dotted];
m27_17 -> m27_18  [key=0, style=solid];
m27_18 -> m27_30  [key=2, style=dotted];
m27_18 -> m27_19  [key=0, style=solid];
m27_19 -> m27_35  [key=2, style=dotted];
m27_19 -> m27_20  [key=0, style=solid];
m27_20 -> m27_30  [key=2, style=dotted];
m27_20 -> m27_21  [key=0, style=solid];
m27_4 -> m27_9  [key=1, style=dashed, color=darkseagreen4, label=servers];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_33  [key=2, style=dotted];
m27_4 -> m27_6  [key=1, style=dashed, color=darkseagreen4, label=servers];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_32  [key=2, style=dotted];
m27_6 -> m27_7  [key=0, style=solid];
m27_6 -> m27_8  [key=0, style=solid];
m27_29 -> m27_0  [key=0, style=bold, color=blue];
m27_41 -> m27_28  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_25  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_27  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_24  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_26  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_41 -> m27_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m28_4 -> m28_5  [key=0, style=solid];
m28_5 -> m28_4  [key=0, style=bold, color=blue];
m28_43 -> m28_44  [key=0, style=solid];
m28_44 -> m28_45  [key=0, style=solid];
m28_44 -> m28_46  [key=2, style=dotted];
m28_45 -> m28_43  [key=0, style=bold, color=blue];
m28_61 -> m28_62  [key=0, style=solid];
m28_62 -> m28_63  [key=0, style=solid];
m28_62 -> m28_64  [key=2, style=dotted];
m28_63 -> m28_61  [key=0, style=bold, color=blue];
m28_47 -> m28_48  [key=0, style=solid];
m28_48 -> m28_47  [key=0, style=bold, color=blue];
m28_20 -> m28_21  [key=0, style=solid, color=red];
m28_21 -> m28_22  [key=0, style=solid, color=red];
m28_21 -> m28_23  [key=2, style=dotted, color=red];
m28_21 -> m28_10  [key=2, style=dotted, color=red];
m28_22 -> m28_20  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_0  [key=0, style=bold, color=blue];
m28_65 -> m28_66  [key=0, style=solid];
m28_65 -> m28_68  [key=1, style=dashed, color=darkseagreen4, label=Table];
m28_65 -> m28_69  [key=1, style=dashed, color=darkseagreen4, label=Table];
m28_66 -> m28_67  [key=0, style=solid];
m28_66 -> m28_60  [key=2, style=dotted];
m28_68 -> m28_69  [key=0, style=solid];
m28_68 -> m28_72  [key=0, style=solid];
m28_68 -> m28_55  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m28_69 -> m28_70  [key=0, style=solid];
m28_67 -> m28_68  [key=0, style=solid];
m28_67 -> m28_69  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_67 -> m28_70  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_67 -> m28_71  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_70 -> m28_71  [key=0, style=solid];
m28_70 -> m28_60  [key=2, style=dotted];
m28_71 -> m28_68  [key=0, style=solid];
m28_71 -> m28_71  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_72 -> m28_65  [key=0, style=bold, color=blue];
m28_24 -> m28_25  [key=0, style=solid, color=red];
m28_25 -> m28_26  [key=0, style=solid, color=red];
m28_25 -> m28_23  [key=2, style=dotted, color=red];
m28_25 -> m28_10  [key=2, style=dotted, color=red];
m28_26 -> m28_24  [key=0, style=bold, color=blue];
m28_14 -> m28_15  [key=0, style=solid, color=red];
m28_15 -> m28_16  [key=0, style=solid, color=red];
m28_15 -> m28_9  [key=2, style=dotted, color=red];
m28_15 -> m28_10  [key=2, style=dotted, color=red];
m28_16 -> m28_14  [key=0, style=bold, color=blue];
m28_49 -> m28_50  [key=0, style=solid];
m28_50 -> m28_51  [key=0, style=solid];
m28_50 -> m28_42  [key=2, style=dotted];
m28_51 -> m28_49  [key=0, style=bold, color=blue];
m28_17 -> m28_18  [key=0, style=solid, color=red];
m28_18 -> m28_19  [key=0, style=solid, color=red];
m28_18 -> m28_9  [key=2, style=dotted, color=red];
m28_18 -> m28_10  [key=2, style=dotted, color=red];
m28_19 -> m28_17  [key=0, style=bold, color=blue];
m28_39 -> m28_40  [key=0, style=solid];
m28_40 -> m28_41  [key=0, style=solid];
m28_40 -> m28_42  [key=2, style=dotted];
m28_41 -> m28_39  [key=0, style=bold, color=blue];
m28_27 -> m28_28  [key=0, style=solid, color=red];
m28_28 -> m28_29  [key=0, style=solid, color=red];
m28_28 -> m28_32  [key=2, style=dotted, color=red];
m28_28 -> m28_33  [key=2, style=dotted, color=red];
m28_28 -> m28_34  [key=2, style=dotted, color=red];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_35  [key=2, style=dotted];
m28_29 -> m28_36  [key=2, style=dotted];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> m28_37  [key=2, style=dotted];
m28_30 -> m28_38  [key=2, style=dotted];
m28_31 -> m28_27  [key=0, style=bold, color=blue];
m28_11 -> m28_12  [key=0, style=solid, color=red];
m28_12 -> m28_13  [key=0, style=solid, color=red];
m28_12 -> m28_9  [key=2, style=dotted, color=red];
m28_12 -> m28_10  [key=2, style=dotted, color=red];
m28_13 -> m28_11  [key=0, style=bold, color=blue];
m28_6 -> m28_7  [key=0, style=solid, color=red];
m28_7 -> m28_8  [key=0, style=solid, color=red];
m28_7 -> m28_9  [key=2, style=dotted, color=red];
m28_7 -> m28_10  [key=2, style=dotted, color=red];
m28_8 -> m28_6  [key=0, style=bold, color=blue];
m28_52 -> m28_53  [key=0, style=solid];
m28_52 -> m28_55  [key=1, style=dashed, color=darkseagreen4, label=Table];
m28_52 -> m28_56  [key=1, style=dashed, color=darkseagreen4, label=Table];
m28_53 -> m28_54  [key=0, style=solid];
m28_53 -> m28_60  [key=2, style=dotted];
m28_55 -> m28_56  [key=0, style=solid];
m28_55 -> m28_59  [key=0, style=solid];
m28_55 -> m28_55  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m28_56 -> m28_57  [key=0, style=solid];
m28_54 -> m28_55  [key=0, style=solid];
m28_54 -> m28_56  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_54 -> m28_57  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_54 -> m28_58  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_57 -> m28_58  [key=0, style=solid];
m28_57 -> m28_60  [key=2, style=dotted];
m28_58 -> m28_55  [key=0, style=solid];
m28_58 -> m28_58  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_59 -> m28_52  [key=0, style=bold, color=blue];
m28_73 -> m28_7  [key=1, style=dashed, color=red, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_12  [key=1, style=dashed, color=red, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_15  [key=1, style=dashed, color=red, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_18  [key=1, style=dashed, color=red, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_21  [key=1, style=dashed, color=red, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_25  [key=1, style=dashed, color=red, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_28  [key=1, style=dashed, color=red, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobManagerSteps"];
m28_73 -> m28_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobManagerSteps"];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_6  [key=2, style=dotted];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
m29_2 -> m29_3  [key=0, style=solid];
m29_2 -> m29_7  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid, color=green];
m29_4 -> m29_8  [key=2, style=dotted, color=green];
m29_3 -> m29_4  [key=0, style=solid, color=green];
m29_3 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.Monitoring.ScheduleDto"];
m29_5 -> m29_0  [key=0, style=bold, color=blue];
m29_9 -> m29_10  [key=0, style=solid, color=green];
m29_10 -> m29_11  [key=0, style=solid, color=green];
m29_10 -> m29_12  [key=2, style=dotted, color=green];
m29_11 -> m29_9  [key=0, style=bold, color=blue];
m29_13 -> m29_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m29_13 -> m29_10  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m29_13 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m29_13 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m29_13 -> m29_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m31_4 -> m31_5  [key=0, style=solid];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_7  [key=2, style=dotted];
m31_6 -> m31_4  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_1 -> m31_2  [key=0, style=solid];
m31_2 -> m31_3  [key=0, style=solid];
m31_3 -> m31_0  [key=0, style=bold, color=blue];
m31_8 -> m31_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.SingleResourceHandler"];
m31_8 -> m31_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.SingleResourceHandler"];
m31_8 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.SingleResourceHandler"];
m32_7 -> m32_8  [key=0, style=solid];
m32_8 -> m32_9  [key=0, style=solid];
m32_8 -> m32_10  [key=2, style=dotted];
m32_8 -> m32_11  [key=2, style=dotted];
m32_9 -> m32_7  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label=ILoggerFactory];
m32_0 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label=ILoggerFactory];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=0, style=solid];
m32_2 -> m32_4  [key=0, style=solid];
m32_2 -> m32_5  [key=2, style=dotted];
m32_2 -> m32_6  [key=2, style=dotted];
m32_3 -> m32_4  [key=0, style=solid];
m32_4 -> m32_0  [key=0, style=bold, color=blue];
m32_12 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AspNetCore.AspNetCoreLogProvider"];
m32_12 -> m32_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AspNetCore.AspNetCoreLogProvider"];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_42  [key=2, style=dotted];
m34_2 -> m34_3  [key=0, style=solid];
m34_2 -> m34_43  [key=2, style=dotted];
m34_3 -> m34_4  [key=0, style=solid];
m34_4 -> m34_5  [key=0, style=solid];
m34_4 -> m34_44  [key=2, style=dotted];
m34_4 -> m34_6  [key=1, style=dashed, color=darkseagreen4, label=from];
m34_5 -> m34_6  [key=0, style=solid];
m34_5 -> m34_44  [key=2, style=dotted];
m34_6 -> m34_7  [key=0, style=solid];
m34_6 -> m34_45  [key=2, style=dotted];
m34_6 -> m34_46  [key=2, style=dotted];
m34_6 -> m34_47  [key=2, style=dotted];
m34_6 -> m34_9  [key=1, style=dashed, color=darkseagreen4, label=pager];
m34_6 -> m34_11  [key=1, style=dashed, color=darkseagreen4, label=pager];
m34_6 -> m34_40  [key=1, style=dashed, color=darkseagreen4, label=pager];
m34_7 -> m34_8  [key=0, style=solid];
m34_7 -> m34_48  [key=2, style=dotted];
m34_7 -> m34_13  [key=1, style=dashed, color=darkseagreen4, label=processingJobs];
m34_9 -> m34_10  [key=0, style=solid];
m34_9 -> m34_11  [key=0, style=solid];
m34_11 -> m34_12  [key=0, style=solid, color=red];
m34_11 -> m34_49  [key=2, style=dotted];
m34_11 -> m34_50  [key=2, style=dotted];
m34_11 -> m34_51  [key=2, style=dotted];
m34_40 -> m34_41  [key=0, style=solid];
m34_40 -> m34_58  [key=2, style=dotted];
m34_40 -> m34_50  [key=2, style=dotted];
m34_40 -> m34_51  [key=2, style=dotted];
m34_8 -> m34_9  [key=0, style=solid];
m34_8 -> m34_42  [key=2, style=dotted];
m34_13 -> m34_14  [key=0, style=solid];
m34_13 -> m34_39  [key=0, style=solid];
m34_13 -> m34_15  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_10 -> m34_41  [key=0, style=solid];
m34_10 -> m34_42  [key=2, style=dotted];
m34_12 -> m34_13  [key=0, style=solid, color=red];
m34_12 -> m34_42  [key=2, style=dotted, color=red];
m34_14 -> m34_15  [key=0, style=solid];
m34_14 -> m34_42  [key=2, style=dotted];
m34_39 -> m34_40  [key=0, style=solid];
m34_39 -> m34_42  [key=2, style=dotted];
m34_15 -> m34_16  [key=0, style=solid];
m34_15 -> m34_52  [key=2, style=dotted];
m34_15 -> m34_15  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_15 -> m34_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_16 -> m34_17  [key=0, style=solid];
m34_16 -> m34_42  [key=2, style=dotted];
m34_17 -> m34_18  [key=0, style=solid];
m34_17 -> m34_47  [key=2, style=dotted];
m34_17 -> m34_52  [key=2, style=dotted];
m34_17 -> m34_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_17 -> m34_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_18 -> m34_19  [key=0, style=solid];
m34_18 -> m34_42  [key=2, style=dotted];
m34_19 -> m34_20  [key=0, style=solid];
m34_19 -> m34_53  [key=2, style=dotted];
m34_19 -> m34_51  [key=2, style=dotted];
m34_19 -> m34_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_19 -> m34_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_20 -> m34_21  [key=0, style=solid];
m34_20 -> m34_42  [key=2, style=dotted];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_23  [key=0, style=solid];
m34_21 -> m34_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_21 -> m34_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_22 -> m34_23  [key=0, style=solid];
m34_22 -> m34_42  [key=2, style=dotted];
m34_23 -> m34_24  [key=0, style=solid];
m34_23 -> m34_42  [key=2, style=dotted];
m34_24 -> m34_25  [key=0, style=solid];
m34_24 -> m34_54  [key=2, style=dotted];
m34_24 -> m34_51  [key=2, style=dotted];
m34_24 -> m34_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_24 -> m34_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_25 -> m34_26  [key=0, style=solid];
m34_25 -> m34_42  [key=2, style=dotted];
m34_26 -> m34_27  [key=0, style=solid, color=red];
m34_26 -> m34_55  [key=2, style=dotted];
m34_26 -> m34_52  [key=2, style=dotted];
m34_26 -> m34_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_26 -> m34_28  [key=1, style=dashed, color=red, label=job];
m34_27 -> m34_28  [key=0, style=solid, color=red];
m34_27 -> m34_42  [key=2, style=dotted, color=red];
m34_28 -> m34_29  [key=0, style=solid, color=red];
m34_28 -> m34_56  [key=2, style=dotted, color=red];
m34_28 -> m34_52  [key=2, style=dotted, color=red];
m34_28 -> m34_28  [key=1, style=dashed, color=red, label=job];
m34_28 -> m34_30  [key=1, style=dashed, color=red, label=job];
m34_29 -> m34_30  [key=0, style=solid, color=red];
m34_29 -> m34_42  [key=2, style=dotted, color=red];
m34_30 -> m34_31  [key=0, style=solid];
m34_30 -> m34_52  [key=2, style=dotted];
m34_30 -> m34_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_30 -> m34_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_31 -> m34_32  [key=0, style=solid];
m34_31 -> m34_42  [key=2, style=dotted];
m34_32 -> m34_33  [key=0, style=solid];
m34_32 -> m34_38  [key=0, style=solid];
m34_32 -> m34_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_32 -> m34_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_33 -> m34_34  [key=0, style=solid];
m34_33 -> m34_42  [key=2, style=dotted];
m34_38 -> m34_13  [key=0, style=solid];
m34_38 -> m34_42  [key=2, style=dotted];
m34_34 -> m34_35  [key=0, style=solid];
m34_34 -> m34_57  [key=2, style=dotted];
m34_34 -> m34_52  [key=2, style=dotted];
m34_34 -> m34_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_34 -> m34_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_35 -> m34_36  [key=0, style=solid];
m34_35 -> m34_42  [key=2, style=dotted];
m34_36 -> m34_37  [key=0, style=solid];
m34_36 -> m34_52  [key=2, style=dotted];
m34_36 -> m34_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_37 -> m34_38  [key=0, style=solid];
m34_37 -> m34_42  [key=2, style=dotted];
m34_41 -> m34_0  [key=0, style=bold, color=blue];
m34_59 -> m34_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_12  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_27  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_28  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_29  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m34_59 -> m34_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m35_162 -> m35_163  [key=0, style=solid];
m35_163 -> m35_164  [key=0, style=solid];
m35_163 -> m35_90  [key=2, style=dotted];
m35_164 -> m35_165  [key=0, style=solid];
m35_164 -> m35_91  [key=2, style=dotted];
m35_165 -> m35_166  [key=0, style=solid];
m35_165 -> m35_92  [key=2, style=dotted];
m35_165 -> m35_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_166 -> m35_162  [key=0, style=bold, color=blue];
m35_70 -> m35_71  [key=0, style=solid];
m35_70 -> m35_54  [key=0, style=bold, color=blue];
m35_72 -> m35_65  [key=2, style=dotted];
m35_72 -> m35_73  [key=0, style=solid];
m35_71 -> m35_39  [key=2, style=dotted];
m35_71 -> m35_72  [key=0, style=solid];
m35_71 -> m35_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_73 -> m35_70  [key=0, style=bold, color=blue];
m35_17 -> m35_18  [key=0, style=solid];
m35_17 -> m35_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m35_17 -> m35_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m35_77 -> m35_78  [key=0, style=solid];
m35_79 -> m35_65  [key=2, style=dotted];
m35_79 -> m35_80  [key=0, style=solid];
m35_79 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m35_78 -> m35_39  [key=2, style=dotted];
m35_78 -> m35_79  [key=0, style=solid];
m35_78 -> m35_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_78 -> m35_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m35_78 -> m35_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m35_78 -> m35_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m35_80 -> m35_77  [key=0, style=bold, color=blue];
m35_80 -> m35_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m35_80 -> m35_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m35_20 -> m35_21  [key=0, style=solid];
m35_18 -> m35_19  [key=0, style=solid];
m35_18 -> m35_26  [key=2, style=dotted];
m35_18 -> m35_22  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m35_65 -> m35_66  [key=0, style=solid];
m35_65 -> m35_67  [key=0, style=solid];
m35_243 -> m35_244  [key=0, style=solid];
m35_245 -> m35_246  [key=0, style=solid];
m35_245 -> m35_22  [key=2, style=dotted];
m35_245 -> m35_251  [key=2, style=dotted];
m35_245 -> m35_252  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_246 -> m35_247  [key=0, style=solid];
m35_246 -> m35_90  [key=2, style=dotted];
m35_247 -> m35_248  [key=0, style=solid];
m35_247 -> m35_91  [key=2, style=dotted];
m35_248 -> m35_249  [key=0, style=solid];
m35_248 -> m35_92  [key=2, style=dotted];
m35_248 -> m35_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_244 -> m35_245  [key=0, style=solid];
m35_244 -> m35_248  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_244 -> m35_256  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_244 -> m35_250  [key=2, style=dotted];
m35_244 -> m35_259  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_249 -> m35_243  [key=0, style=bold, color=blue];
m35_232 -> m35_233  [key=0, style=solid];
m35_233 -> m35_234  [key=0, style=solid];
m35_233 -> m35_90  [key=2, style=dotted];
m35_234 -> m35_235  [key=0, style=solid];
m35_234 -> m35_91  [key=2, style=dotted];
m35_235 -> m35_236  [key=0, style=solid];
m35_235 -> m35_92  [key=2, style=dotted];
m35_235 -> m35_237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_236 -> m35_232  [key=0, style=bold, color=blue];
m35_173 -> m35_174  [key=0, style=solid];
m35_174 -> m35_175  [key=0, style=solid];
m35_174 -> m35_22  [key=2, style=dotted];
m35_174 -> m35_23  [key=2, style=dotted];
m35_174 -> m35_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_175 -> m35_176  [key=0, style=solid];
m35_175 -> m35_90  [key=2, style=dotted];
m35_176 -> m35_177  [key=0, style=solid];
m35_176 -> m35_91  [key=2, style=dotted];
m35_177 -> m35_178  [key=0, style=solid];
m35_177 -> m35_92  [key=2, style=dotted];
m35_177 -> m35_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_178 -> m35_173  [key=0, style=bold, color=blue];
m35_185 -> m35_186  [key=0, style=solid];
m35_186 -> m35_187  [key=0, style=solid];
m35_186 -> m35_90  [key=2, style=dotted];
m35_187 -> m35_188  [key=0, style=solid];
m35_187 -> m35_91  [key=2, style=dotted];
m35_188 -> m35_189  [key=0, style=solid];
m35_188 -> m35_92  [key=2, style=dotted];
m35_188 -> m35_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_189 -> m35_185  [key=0, style=bold, color=blue];
m35_113 -> m35_114  [key=0, style=solid];
m35_114 -> m35_39  [key=2, style=dotted];
m35_114 -> m35_115  [key=0, style=solid];
m35_114 -> m35_22  [key=2, style=dotted];
m35_114 -> m35_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_115 -> m35_116  [key=0, style=solid];
m35_115 -> m35_90  [key=2, style=dotted];
m35_115 -> m35_124  [key=1, style=dashed, color=darkseagreen4, label=worker];
m35_116 -> m35_39  [key=2, style=dotted];
m35_116 -> m35_117  [key=0, style=solid];
m35_116 -> m35_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_117 -> m35_118  [key=0, style=solid];
m35_117 -> m35_92  [key=2, style=dotted];
m35_117 -> m35_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_118 -> m35_119  [key=0, style=solid];
m35_118 -> m35_92  [key=2, style=dotted];
m35_118 -> m35_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_119 -> m35_113  [key=0, style=bold, color=blue];
m35_212 -> m35_213  [key=0, style=solid];
m35_213 -> m35_39  [key=2, style=dotted];
m35_213 -> m35_214  [key=0, style=solid];
m35_213 -> m35_22  [key=2, style=dotted];
m35_213 -> m35_220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_214 -> m35_215  [key=0, style=solid];
m35_214 -> m35_90  [key=2, style=dotted];
m35_214 -> m35_224  [key=1, style=dashed, color=darkseagreen4, label=worker];
m35_215 -> m35_216  [key=0, style=solid];
m35_215 -> m35_219  [key=2, style=dotted];
m35_215 -> m35_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_216 -> m35_217  [key=0, style=solid];
m35_216 -> m35_92  [key=2, style=dotted];
m35_216 -> m35_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_217 -> m35_218  [key=0, style=solid];
m35_217 -> m35_92  [key=2, style=dotted];
m35_217 -> m35_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_218 -> m35_212  [key=0, style=bold, color=blue];
m35_33 -> m35_34  [key=0, style=solid];
m35_90 -> m35_293  [key=0, style=solid];
m35_293 -> m35_294  [key=0, style=solid];
m35_293 -> m35_69  [key=2, style=dotted];
m35_294 -> m35_90  [key=0, style=bold, color=blue];
m35_61 -> m35_62  [key=0, style=solid];
m35_63 -> m35_64  [key=0, style=solid, color=green];
m35_63 -> m35_65  [key=2, style=dotted, color=green];
m35_63 -> m35_48  [key=2, style=dotted];
m35_63 -> m35_68  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m35_63 -> m35_69  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m35_62 -> m35_63  [key=0, style=solid, color=green];
m35_62 -> m35_39  [key=2, style=dotted];
m35_62 -> m35_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_62 -> m35_67  [key=1, style=dashed, color=darkseagreen4, label=wasError];
m35_64 -> m35_61  [key=0, style=bold, color=blue];
m35_64 -> m35_65  [key=0, style=solid];
m35_64 -> m35_73  [key=2, style=dotted];
m35_60 -> m35_61  [key=0, style=solid];
m35_60 -> m35_67  [key=0, style=solid];
m35_60 -> m35_72  [key=2, style=dotted];
m35_262 -> m35_263  [key=0, style=solid];
m35_264 -> m35_265  [key=0, style=solid];
m35_264 -> m35_22  [key=2, style=dotted];
m35_264 -> m35_269  [key=2, style=dotted];
m35_264 -> m35_251  [key=2, style=dotted];
m35_264 -> m35_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_265 -> m35_266  [key=0, style=solid];
m35_265 -> m35_90  [key=2, style=dotted];
m35_266 -> m35_267  [key=0, style=solid];
m35_266 -> m35_91  [key=2, style=dotted];
m35_267 -> m35_268  [key=0, style=solid];
m35_267 -> m35_92  [key=2, style=dotted];
m35_267 -> m35_273  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_263 -> m35_264  [key=0, style=solid];
m35_263 -> m35_267  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_263 -> m35_274  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_263 -> m35_250  [key=2, style=dotted];
m35_263 -> m35_277  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_268 -> m35_262  [key=0, style=bold, color=blue];
m35_42 -> m35_43  [key=0, style=solid];
m35_42 -> m35_44  [key=2, style=dotted];
m35_24 -> m35_25  [key=0, style=solid];
m35_16 -> m35_0  [key=0, style=bold, color=blue];
m35_47 -> m35_45  [key=0, style=bold, color=blue];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m35_5 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m35_5 -> m35_21  [key=2, style=dotted];
m35_6 -> m35_7  [key=0, style=solid];
m35_6 -> m35_8  [key=0, style=solid];
m35_6 -> m35_22  [key=2, style=dotted];
m35_6 -> m35_23  [key=2, style=dotted];
m35_6 -> m35_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_24  [key=2, style=dotted];
m35_8 -> m35_5  [key=0, style=bold, color=blue];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_22  [key=2, style=dotted];
m35_8 -> m35_23  [key=2, style=dotted];
m35_8 -> m35_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_41 -> m35_42  [key=0, style=solid];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_17  [key=2, style=dotted];
m35_1 -> m35_3  [key=2, style=dotted];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_18  [key=2, style=dotted];
m35_2 -> m35_0  [key=0, style=bold, color=blue];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_19  [key=2, style=dotted];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_20  [key=2, style=dotted];
m35_4 -> m35_3  [key=0, style=bold, color=blue];
m35_9 -> m35_10  [key=0, style=solid];
m35_9 -> m35_22  [key=2, style=dotted];
m35_9 -> m35_23  [key=2, style=dotted];
m35_9 -> m35_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_22  [key=2, style=dotted];
m35_10 -> m35_25  [key=2, style=dotted];
m35_10 -> m35_26  [key=2, style=dotted];
m35_10 -> m35_23  [key=2, style=dotted];
m35_10 -> m35_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_10 -> m35_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_10 -> m35_12  [key=2, style=dotted];
m35_10 -> m35_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_11 -> m35_12  [key=0, style=solid];
m35_11 -> m35_27  [key=2, style=dotted];
m35_11 -> m35_9  [key=0, style=bold, color=blue];
m35_12 -> m35_13  [key=0, style=solid];
m35_12 -> m35_22  [key=2, style=dotted];
m35_12 -> m35_23  [key=2, style=dotted];
m35_12 -> m35_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_22  [key=2, style=dotted];
m35_13 -> m35_23  [key=2, style=dotted];
m35_13 -> m35_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_28  [key=2, style=dotted];
m35_14 -> m35_16  [key=2, style=dotted];
m35_15 -> m35_16  [key=0, style=solid];
m35_15 -> m35_22  [key=2, style=dotted];
m35_15 -> m35_23  [key=2, style=dotted];
m35_15 -> m35_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_15 -> m35_13  [key=0, style=bold, color=blue];
m35_56 -> m35_57  [key=0, style=solid];
m35_56 -> m35_58  [key=0, style=solid];
m35_54 -> m35_55  [key=0, style=solid];
m35_54 -> m35_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m35_54 -> m35_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m35_54 -> m35_60  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Client.Filters.CreatedContext>"];
m35_54 -> m35_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m35_54 -> m35_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.IClientFilter"];
m35_54 -> m35_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.IClientFilter"];
m35_54 -> m35_39  [key=2, style=dotted];
m35_55 -> m35_56  [key=0, style=solid];
m35_55 -> m35_71  [key=2, style=dotted];
m35_55 -> m35_53  [key=0, style=bold, color=blue];
m35_57 -> m35_70  [key=0, style=solid];
m35_57 -> m35_48  [key=2, style=dotted];
m35_57 -> m35_58  [key=0, style=solid];
m35_68 -> m35_69  [key=0, style=solid];
m35_68 -> m35_73  [key=2, style=dotted];
m35_68 -> m35_66  [key=0, style=bold, color=blue];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_39  [key=2, style=dotted];
m35_58 -> m35_60  [key=2, style=dotted];
m35_59 -> m35_60  [key=0, style=solid];
m35_59 -> m35_57  [key=0, style=bold, color=blue];
m35_67 -> m35_68  [key=0, style=solid];
m35_67 -> m35_69  [key=0, style=solid];
m35_69 -> m35_70  [key=0, style=solid];
m35_66 -> m35_70  [key=0, style=solid];
m35_66 -> m35_67  [key=0, style=solid];
m35_22 -> m35_23  [key=0, style=solid];
m35_22 -> m35_29  [key=2, style=dotted];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_25  [key=0, style=solid];
m35_19 -> m35_27  [key=2, style=dotted];
m35_21 -> m35_22  [key=0, style=solid];
m35_21 -> m35_28  [key=2, style=dotted];
m35_21 -> m35_23  [key=1, style=dashed, color=darkseagreen4, label=exceptionContext];
m35_23 -> m35_24  [key=0, style=solid];
m35_23 -> m35_25  [key=0, style=solid];
m35_25 -> m35_17  [key=0, style=bold, color=blue];
m35_279 -> m35_280  [key=0, style=solid];
m35_280 -> m35_281  [key=0, style=solid];
m35_280 -> m35_22  [key=2, style=dotted];
m35_280 -> m35_25  [key=2, style=dotted];
m35_280 -> m35_285  [key=2, style=dotted];
m35_280 -> m35_286  [key=2, style=dotted];
m35_280 -> m35_23  [key=2, style=dotted];
m35_280 -> m35_287  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_281 -> m35_282  [key=0, style=solid];
m35_281 -> m35_90  [key=2, style=dotted];
m35_282 -> m35_283  [key=0, style=solid];
m35_282 -> m35_91  [key=2, style=dotted];
m35_283 -> m35_284  [key=0, style=solid];
m35_283 -> m35_92  [key=2, style=dotted];
m35_283 -> m35_290  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_284 -> m35_279  [key=0, style=bold, color=blue];
m35_276 -> m35_277  [key=0, style=solid];
m35_44 -> m35_45  [key=0, style=solid];
m35_44 -> m35_47  [key=2, style=dotted];
m35_45 -> m35_46  [key=0, style=solid];
m35_45 -> m35_48  [key=2, style=dotted];
m35_52 -> m35_53  [key=0, style=solid];
m35_52 -> m35_54  [key=2, style=dotted];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_36  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Client.Filters.CreatedContext>"];
m35_49 -> m35_52  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Client.Filters.CreatedContext>"];
m35_43 -> m35_44  [key=0, style=solid];
m35_43 -> m35_41  [key=0, style=bold, color=blue];
m35_46 -> m35_43  [key=0, style=bold, color=blue];
m35_46 -> m35_47  [key=0, style=solid];
m35_46 -> m35_48  [key=2, style=dotted];
m35_50 -> m35_49  [key=0, style=bold, color=blue];
m35_50 -> m35_29  [key=0, style=bold, color=blue];
m35_50 -> m35_51  [key=0, style=solid];
m35_50 -> m35_52  [key=2, style=dotted];
m35_51 -> m35_52  [key=0, style=solid];
m35_51 -> m35_49  [key=0, style=bold, color=blue];
m35_53 -> m35_51  [key=0, style=bold, color=blue];
m35_53 -> m35_54  [key=0, style=solid];
m35_37 -> m35_39  [key=2, style=dotted];
m35_37 -> m35_38  [key=0, style=solid];
m35_37 -> m35_40  [key=2, style=dotted];
m35_37 -> m35_42  [key=2, style=dotted];
m35_75 -> m35_76  [key=0, style=solid];
m35_75 -> m35_69  [key=2, style=dotted];
m35_75 -> m35_74  [key=0, style=solid];
m35_75 -> m35_77  [key=2, style=dotted];
m35_82 -> m35_83  [key=0, style=solid];
m35_82 -> m35_69  [key=2, style=dotted];
m35_82 -> m35_52  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Client.Filters.CreatedContext>"];
m35_107 -> m35_108  [key=0, style=solid];
m35_107 -> m35_40  [key=2, style=dotted];
m35_124 -> m35_125  [key=0, style=solid];
m35_124 -> m35_91  [key=2, style=dotted];
m35_157 -> m35_39  [key=2, style=dotted];
m35_157 -> m35_158  [key=0, style=solid];
m35_157 -> m35_56  [key=2, style=dotted];
m35_157 -> m35_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_160 -> m35_161  [key=0, style=solid];
m35_204 -> m35_205  [key=0, style=solid];
m35_204 -> m35_91  [key=2, style=dotted];
m35_224 -> m35_225  [key=0, style=solid];
m35_224 -> m35_91  [key=2, style=dotted];
m35_121 -> m35_39  [key=2, style=dotted];
m35_121 -> m35_122  [key=0, style=solid];
m35_121 -> m35_56  [key=2, style=dotted];
m35_142 -> m35_39  [key=2, style=dotted];
m35_142 -> m35_143  [key=0, style=solid];
m35_142 -> m35_56  [key=2, style=dotted];
m35_145 -> m35_39  [key=2, style=dotted];
m35_145 -> m35_146  [key=0, style=solid];
m35_145 -> m35_147  [key=2, style=dotted];
m35_149 -> m35_39  [key=2, style=dotted];
m35_149 -> m35_150  [key=0, style=solid];
m35_149 -> m35_56  [key=2, style=dotted];
m35_168 -> m35_39  [key=2, style=dotted];
m35_168 -> m35_169  [key=0, style=solid];
m35_168 -> m35_56  [key=2, style=dotted];
m35_168 -> m35_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_180 -> m35_39  [key=2, style=dotted];
m35_180 -> m35_181  [key=0, style=solid];
m35_180 -> m35_56  [key=2, style=dotted];
m35_183 -> m35_39  [key=2, style=dotted];
m35_183 -> m35_184  [key=0, style=solid];
m35_183 -> m35_147  [key=2, style=dotted];
m35_191 -> m35_39  [key=2, style=dotted];
m35_191 -> m35_192  [key=0, style=solid];
m35_191 -> m35_147  [key=2, style=dotted];
m35_201 -> m35_39  [key=2, style=dotted];
m35_201 -> m35_202  [key=0, style=solid];
m35_201 -> m35_147  [key=2, style=dotted];
m35_207 -> m35_39  [key=2, style=dotted];
m35_207 -> m35_208  [key=0, style=solid];
m35_207 -> m35_56  [key=2, style=dotted];
m35_221 -> m35_39  [key=2, style=dotted];
m35_221 -> m35_222  [key=0, style=solid];
m35_221 -> m35_147  [key=2, style=dotted];
m35_238 -> m35_39  [key=2, style=dotted];
m35_238 -> m35_239  [key=0, style=solid];
m35_238 -> m35_56  [key=2, style=dotted];
m35_238 -> m35_240  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_256 -> m35_39  [key=2, style=dotted];
m35_256 -> m35_257  [key=0, style=solid];
m35_256 -> m35_56  [key=2, style=dotted];
m35_256 -> m35_258  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_253 -> m35_39  [key=2, style=dotted];
m35_253 -> m35_254  [key=0, style=solid];
m35_253 -> m35_147  [key=2, style=dotted];
m35_274 -> m35_39  [key=2, style=dotted];
m35_274 -> m35_275  [key=0, style=solid];
m35_274 -> m35_56  [key=2, style=dotted];
m35_274 -> m35_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_271 -> m35_39  [key=2, style=dotted];
m35_271 -> m35_272  [key=0, style=solid];
m35_271 -> m35_147  [key=2, style=dotted];
m35_291 -> m35_39  [key=2, style=dotted];
m35_291 -> m35_292  [key=0, style=solid];
m35_291 -> m35_56  [key=2, style=dotted];
m35_29 -> m35_30  [key=0, style=solid];
m35_29 -> m35_74  [key=0, style=solid];
m35_29 -> m35_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.ClientExceptionContext"];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_40  [key=2, style=dotted];
m35_36 -> m35_41  [key=2, style=dotted];
m35_36 -> m35_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_38 -> m35_36  [key=0, style=bold, color=blue];
m35_38 -> m35_27  [key=0, style=bold, color=blue];
m35_74 -> m35_75  [key=0, style=solid];
m35_74 -> m35_76  [key=0, style=solid];
m35_74 -> m35_40  [key=2, style=dotted];
m35_76 -> m35_74  [key=0, style=bold, color=blue];
m35_76 -> m35_29  [key=0, style=bold, color=blue];
m35_81 -> m35_82  [key=0, style=solid];
m35_81 -> m35_52  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m35_83 -> m35_81  [key=0, style=bold, color=blue];
m35_83 -> m35_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.IClientFilter"];
m35_93 -> m35_94  [key=0, style=solid];
m35_96 -> m35_97  [key=0, style=solid];
m35_106 -> m35_107  [key=0, style=solid];
m35_108 -> m35_106  [key=0, style=bold, color=blue];
m35_109 -> m35_110  [key=0, style=solid];
m35_120 -> m35_121  [key=0, style=solid];
m35_123 -> m35_124  [key=0, style=solid];
m35_125 -> m35_123  [key=0, style=bold, color=blue];
m35_126 -> m35_127  [key=0, style=solid];
m35_129 -> m35_130  [key=0, style=solid];
m35_141 -> m35_142  [key=0, style=solid];
m35_144 -> m35_145  [key=0, style=solid];
m35_148 -> m35_149  [key=0, style=solid];
m35_156 -> m35_157  [key=0, style=solid];
m35_158 -> m35_156  [key=0, style=bold, color=blue];
m35_159 -> m35_160  [key=0, style=solid];
m35_161 -> m35_159  [key=0, style=bold, color=blue];
m35_167 -> m35_168  [key=0, style=solid];
m35_179 -> m35_180  [key=0, style=solid];
m35_182 -> m35_183  [key=0, style=solid];
m35_190 -> m35_191  [key=0, style=solid];
m35_200 -> m35_201  [key=0, style=solid];
m35_203 -> m35_204  [key=0, style=solid];
m35_205 -> m35_203  [key=0, style=bold, color=blue];
m35_206 -> m35_207  [key=0, style=solid];
m35_209 -> m35_210  [key=0, style=solid];
m35_220 -> m35_221  [key=0, style=solid];
m35_223 -> m35_224  [key=0, style=solid];
m35_225 -> m35_223  [key=0, style=bold, color=blue];
m35_226 -> m35_227  [key=0, style=solid];
m35_229 -> m35_230  [key=0, style=solid];
m35_237 -> m35_238  [key=0, style=solid];
m35_252 -> m35_253  [key=0, style=solid];
m35_255 -> m35_256  [key=0, style=solid];
m35_270 -> m35_271  [key=0, style=solid];
m35_273 -> m35_274  [key=0, style=solid];
m35_287 -> m35_288  [key=0, style=solid];
m35_290 -> m35_291  [key=0, style=solid];
m35_122 -> m35_120  [key=0, style=bold, color=blue];
m35_143 -> m35_141  [key=0, style=bold, color=blue];
m35_146 -> m35_144  [key=0, style=bold, color=blue];
m35_150 -> m35_148  [key=0, style=bold, color=blue];
m35_169 -> m35_167  [key=0, style=bold, color=blue];
m35_170 -> m35_171  [key=0, style=solid];
m35_181 -> m35_179  [key=0, style=bold, color=blue];
m35_184 -> m35_182  [key=0, style=bold, color=blue];
m35_192 -> m35_190  [key=0, style=bold, color=blue];
m35_202 -> m35_200  [key=0, style=bold, color=blue];
m35_208 -> m35_206  [key=0, style=bold, color=blue];
m35_222 -> m35_220  [key=0, style=bold, color=blue];
m35_239 -> m35_237  [key=0, style=bold, color=blue];
m35_240 -> m35_241  [key=0, style=solid];
m35_257 -> m35_255  [key=0, style=bold, color=blue];
m35_258 -> m35_259  [key=0, style=solid];
m35_254 -> m35_252  [key=0, style=bold, color=blue];
m35_275 -> m35_273  [key=0, style=bold, color=blue];
m35_272 -> m35_270  [key=0, style=bold, color=blue];
m35_292 -> m35_290  [key=0, style=bold, color=blue];
m35_30 -> m35_50  [key=0, style=solid];
m35_30 -> m35_32  [key=2, style=dotted];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_33  [key=2, style=dotted];
m35_35 -> m35_33  [key=0, style=bold, color=blue];
m35_35 -> m35_36  [key=0, style=solid];
m35_34 -> m35_35  [key=0, style=solid, color=red];
m35_34 -> m35_39  [key=2, style=dotted, color=red];
m35_34 -> m35_36  [key=1, style=dashed, color=red, label=preContext];
m35_34 -> m35_52  [key=1, style=dashed, color=red, label=preContext];
m35_95 -> m35_93  [key=0, style=bold, color=blue];
m35_94 -> m35_95  [key=0, style=solid];
m35_94 -> m35_32  [key=2, style=dotted];
m35_98 -> m35_96  [key=0, style=bold, color=blue];
m35_97 -> m35_98  [key=0, style=solid];
m35_97 -> m35_99  [key=2, style=dotted];
m35_111 -> m35_109  [key=0, style=bold, color=blue];
m35_110 -> m35_111  [key=0, style=solid];
m35_110 -> m35_112  [key=2, style=dotted];
m35_128 -> m35_126  [key=0, style=bold, color=blue];
m35_127 -> m35_128  [key=0, style=solid];
m35_127 -> m35_112  [key=2, style=dotted];
m35_131 -> m35_129  [key=0, style=bold, color=blue];
m35_130 -> m35_131  [key=0, style=solid];
m35_130 -> m35_132  [key=2, style=dotted];
m35_211 -> m35_209  [key=0, style=bold, color=blue];
m35_210 -> m35_211  [key=0, style=solid];
m35_210 -> m35_132  [key=2, style=dotted];
m35_228 -> m35_226  [key=0, style=bold, color=blue];
m35_227 -> m35_228  [key=0, style=solid];
m35_227 -> m35_112  [key=2, style=dotted];
m35_231 -> m35_229  [key=0, style=bold, color=blue];
m35_230 -> m35_231  [key=0, style=solid];
m35_230 -> m35_132  [key=2, style=dotted];
m35_259 -> m35_260  [key=0, style=solid];
m35_259 -> m35_261  [key=2, style=dotted];
m35_277 -> m35_278  [key=0, style=solid];
m35_289 -> m35_287  [key=0, style=bold, color=blue];
m35_288 -> m35_289  [key=0, style=solid];
m35_288 -> m35_44  [key=2, style=dotted];
m35_172 -> m35_170  [key=0, style=bold, color=blue];
m35_171 -> m35_172  [key=0, style=solid];
m35_242 -> m35_240  [key=0, style=bold, color=blue];
m35_241 -> m35_242  [key=0, style=solid];
m35_260 -> m35_258  [key=0, style=bold, color=blue];
m35_278 -> m35_276  [key=0, style=bold, color=blue];
m35_151 -> m35_152  [key=0, style=solid];
m35_152 -> m35_153  [key=0, style=solid];
m35_152 -> m35_90  [key=2, style=dotted];
m35_153 -> m35_154  [key=0, style=solid];
m35_153 -> m35_91  [key=2, style=dotted];
m35_154 -> m35_155  [key=0, style=solid];
m35_154 -> m35_92  [key=2, style=dotted];
m35_154 -> m35_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_155 -> m35_151  [key=0, style=bold, color=blue];
m35_26 -> m35_30  [key=0, style=solid];
m35_31 -> m35_26  [key=0, style=bold, color=blue];
m35_133 -> m35_134  [key=0, style=solid];
m35_134 -> m35_135  [key=0, style=solid];
m35_134 -> m35_22  [key=2, style=dotted];
m35_134 -> m35_140  [key=2, style=dotted];
m35_134 -> m35_23  [key=2, style=dotted];
m35_134 -> m35_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_135 -> m35_136  [key=0, style=solid];
m35_135 -> m35_22  [key=2, style=dotted];
m35_135 -> m35_140  [key=2, style=dotted];
m35_135 -> m35_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_136 -> m35_137  [key=0, style=solid];
m35_136 -> m35_22  [key=2, style=dotted];
m35_136 -> m35_140  [key=2, style=dotted];
m35_136 -> m35_23  [key=2, style=dotted];
m35_136 -> m35_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_137 -> m35_138  [key=0, style=solid];
m35_137 -> m35_90  [key=2, style=dotted];
m35_138 -> m35_139  [key=0, style=solid];
m35_138 -> m35_91  [key=2, style=dotted];
m35_139 -> m35_133  [key=0, style=bold, color=blue];
m35_100 -> m35_101  [key=0, style=solid];
m35_101 -> m35_102  [key=0, style=solid];
m35_101 -> m35_90  [key=2, style=dotted];
m35_102 -> m35_103  [key=0, style=solid];
m35_102 -> m35_91  [key=2, style=dotted];
m35_103 -> m35_104  [key=0, style=solid];
m35_103 -> m35_92  [key=2, style=dotted];
m35_103 -> m35_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_104 -> m35_105  [key=0, style=solid];
m35_104 -> m35_92  [key=2, style=dotted];
m35_104 -> m35_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_105 -> m35_100  [key=0, style=bold, color=blue];
m35_48 -> m35_295  [key=0, style=solid];
m35_27 -> m35_34  [key=0, style=solid, color=red];
m35_27 -> m35_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m35_27 -> m35_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m35_27 -> m35_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m35_27 -> m35_36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>"];
m35_193 -> m35_194  [key=0, style=solid];
m35_194 -> m35_39  [key=2, style=dotted];
m35_194 -> m35_195  [key=0, style=solid];
m35_194 -> m35_22  [key=2, style=dotted];
m35_194 -> m35_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_195 -> m35_196  [key=0, style=solid];
m35_195 -> m35_90  [key=2, style=dotted];
m35_195 -> m35_204  [key=1, style=dashed, color=darkseagreen4, label=worker];
m35_196 -> m35_39  [key=2, style=dotted];
m35_196 -> m35_197  [key=0, style=solid];
m35_196 -> m35_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_197 -> m35_198  [key=0, style=solid];
m35_197 -> m35_92  [key=2, style=dotted];
m35_197 -> m35_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_198 -> m35_199  [key=0, style=solid];
m35_198 -> m35_92  [key=2, style=dotted];
m35_198 -> m35_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_199 -> m35_193  [key=0, style=bold, color=blue];
m35_295 -> m35_48  [key=0, style=bold, color=blue];
m35_84 -> m35_85  [key=0, style=solid];
m35_85 -> m35_86  [key=0, style=solid];
m35_85 -> m35_90  [key=2, style=dotted];
m35_86 -> m35_87  [key=0, style=solid];
m35_86 -> m35_91  [key=2, style=dotted];
m35_87 -> m35_88  [key=0, style=solid];
m35_87 -> m35_92  [key=2, style=dotted];
m35_87 -> m35_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_88 -> m35_89  [key=0, style=solid];
m35_88 -> m35_92  [key=2, style=dotted];
m35_88 -> m35_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_89 -> m35_84  [key=0, style=bold, color=blue];
m35_296 -> m35_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_175  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_186  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_197  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_214  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_217  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_245  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_246  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_247  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_264  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_265  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_266  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_267  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_282  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_283  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_296 -> m35_293  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m35_297 -> m35_124  [key=1, style=dashed, color=darkseagreen4, label=worker];
m35_298 -> m35_204  [key=1, style=dashed, color=darkseagreen4, label=worker];
m35_299 -> m35_224  [key=1, style=dashed, color=darkseagreen4, label=worker];
m35_300 -> m35_256  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_300 -> m35_259  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_301 -> m35_274  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_301 -> m35_277  [key=1, style=dashed, color=darkseagreen4, label=exception];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_2  [key=0, style=solid];
m37_1 -> m37_6  [key=2, style=dotted];
m37_2 -> m37_3  [key=0, style=solid];
m37_3 -> m37_4  [key=0, style=solid];
m37_3 -> m37_7  [key=2, style=dotted];
m37_4 -> m37_5  [key=0, style=solid];
m37_4 -> m37_7  [key=2, style=dotted];
m37_5 -> m37_0  [key=0, style=bold, color=blue];
m37_12 -> m37_13  [key=0, style=solid];
m37_8 -> m37_9  [key=0, style=solid];
m37_9 -> m37_10  [key=0, style=solid];
m37_9 -> m37_11  [key=2, style=dotted];
m37_10 -> m37_8  [key=0, style=bold, color=blue];
m37_13 -> m37_14  [key=0, style=solid];
m37_13 -> m37_15  [key=2, style=dotted];
m37_14 -> m37_12  [key=0, style=bold, color=blue];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> m39_7  [key=2, style=dotted];
m39_2 -> m39_3  [key=0, style=solid];
m39_2 -> m39_8  [key=2, style=dotted];
m39_2 -> m39_9  [key=2, style=dotted];
m39_3 -> m39_4  [key=0, style=solid];
m39_3 -> m39_10  [key=2, style=dotted];
m39_3 -> m39_9  [key=2, style=dotted];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_11  [key=2, style=dotted];
m39_4 -> m39_9  [key=2, style=dotted];
m39_5 -> m39_6  [key=0, style=solid];
m39_5 -> m39_12  [key=2, style=dotted];
m39_5 -> m39_9  [key=2, style=dotted];
m39_6 -> m39_0  [key=0, style=bold, color=blue];
m40_15 -> m40_16  [key=0, style=solid];
m40_16 -> m40_17  [key=0, style=solid];
m40_16 -> m40_19  [key=2, style=dotted];
m40_16 -> m40_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_17 -> m40_18  [key=0, style=solid];
m40_17 -> m40_20  [key=2, style=dotted];
m40_18 -> m40_15  [key=0, style=bold, color=blue];
m40_45 -> m40_46  [key=0, style=solid];
m40_46 -> m40_47  [key=0, style=solid];
m40_46 -> m40_50  [key=2, style=dotted];
m40_47 -> m40_48  [key=0, style=solid];
m40_47 -> m40_51  [key=2, style=dotted];
m40_48 -> m40_49  [key=0, style=solid];
m40_48 -> m40_52  [key=2, style=dotted];
m40_48 -> m40_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_49 -> m40_45  [key=0, style=bold, color=blue];
m40_50 -> m40_57  [key=0, style=solid];
m40_57 -> m40_58  [key=0, style=solid];
m40_57 -> m40_24  [key=2, style=dotted];
m40_58 -> m40_50  [key=0, style=bold, color=blue];
m40_39 -> m40_40  [key=0, style=solid];
m40_40 -> m40_41  [key=0, style=solid];
m40_40 -> m40_44  [key=2, style=dotted];
m40_40 -> m40_42  [key=1, style=dashed, color=darkseagreen4, label=processingJob];
m40_41 -> m40_42  [key=0, style=solid];
m40_41 -> m40_20  [key=2, style=dotted];
m40_42 -> m40_43  [key=0, style=solid];
m40_42 -> m40_20  [key=2, style=dotted];
m40_43 -> m40_39  [key=0, style=bold, color=blue];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> m40_6  [key=2, style=dotted];
m40_2 -> m40_3  [key=0, style=solid];
m40_2 -> m40_7  [key=2, style=dotted];
m40_3 -> m40_4  [key=0, style=solid];
m40_3 -> m40_8  [key=2, style=dotted];
m40_3 -> m40_9  [key=2, style=dotted];
m40_3 -> m40_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_4 -> m40_5  [key=0, style=solid];
m40_4 -> m40_10  [key=2, style=dotted];
m40_5 -> m40_0  [key=0, style=bold, color=blue];
m40_32 -> m40_33  [key=0, style=solid];
m40_33 -> m40_34  [key=0, style=solid];
m40_33 -> m40_19  [key=2, style=dotted];
m40_33 -> m40_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_34 -> m40_35  [key=0, style=solid];
m40_34 -> m40_20  [key=2, style=dotted];
m40_35 -> m40_32  [key=0, style=bold, color=blue];
m40_53 -> m40_54  [key=0, style=solid];
m40_11 -> m40_12  [key=0, style=solid];
m40_12 -> m40_13  [key=0, style=solid];
m40_12 -> m40_14  [key=2, style=dotted];
m40_13 -> m40_11  [key=0, style=bold, color=blue];
m40_21 -> m40_22  [key=0, style=solid];
m40_22 -> m40_23  [key=0, style=solid];
m40_22 -> m40_24  [key=2, style=dotted];
m40_23 -> m40_21  [key=0, style=bold, color=blue];
m40_29 -> m40_30  [key=0, style=solid];
m40_30 -> m40_31  [key=0, style=solid];
m40_30 -> m40_24  [key=2, style=dotted];
m40_31 -> m40_29  [key=0, style=bold, color=blue];
m40_36 -> m40_37  [key=0, style=solid];
m40_37 -> m40_38  [key=0, style=solid];
m40_37 -> m40_24  [key=2, style=dotted];
m40_38 -> m40_36  [key=0, style=bold, color=blue];
m40_54 -> m40_55  [key=0, style=solid];
m40_54 -> m40_56  [key=2, style=dotted];
m40_55 -> m40_53  [key=0, style=bold, color=blue];
m40_25 -> m40_26  [key=0, style=solid];
m40_26 -> m40_27  [key=0, style=solid];
m40_26 -> m40_19  [key=2, style=dotted];
m40_26 -> m40_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_27 -> m40_28  [key=0, style=solid];
m40_27 -> m40_20  [key=2, style=dotted];
m40_28 -> m40_25  [key=0, style=bold, color=blue];
m40_59 -> m40_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m40_59 -> m40_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisFetchedJobFacts"];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_2 -> m42_0  [key=0, style=bold, color=blue];
m42_3 -> m42_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m44_50 -> m44_114  [key=0, style=solid];
m44_50 -> m44_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_114 -> m44_115  [key=0, style=solid];
m44_114 -> m44_46  [key=2, style=dotted];
m44_114 -> m44_116  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m44_115 -> m44_116  [key=0, style=solid];
m44_115 -> m44_118  [key=2, style=dotted];
m44_116 -> m44_117  [key=0, style=solid];
m44_116 -> m44_48  [key=2, style=dotted];
m44_117 -> m44_50  [key=0, style=bold, color=blue];
m44_16 -> m44_17  [key=0, style=solid];
m44_16 -> m44_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>"];
m44_16 -> m44_21  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>"];
m44_16 -> m44_23  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>"];
m44_16 -> m44_25  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m44_16 -> m44_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>"];
m44_16 -> m44_27  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>"];
m44_16 -> m44_28  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>"];
m44_17 -> m44_18  [key=0, style=solid];
m44_17 -> m44_19  [key=0, style=solid];
m44_19 -> m44_20  [key=0, style=solid];
m44_19 -> m44_21  [key=0, style=solid, color=red];
m44_21 -> m44_22  [key=0, style=solid, color=red];
m44_21 -> m44_23  [key=0, style=solid, color=red];
m44_23 -> m44_24  [key=0, style=solid, color=red];
m44_23 -> m44_25  [key=0, style=solid, color=red];
m44_25 -> m44_26  [key=0, style=solid];
m44_26 -> m44_27  [key=0, style=solid, color=red];
m44_27 -> m44_28  [key=0, style=solid, color=red];
m44_28 -> m44_29  [key=0, style=solid, color=red];
m44_18 -> m44_29  [key=0, style=solid];
m44_18 -> m44_30  [key=2, style=dotted];
m44_20 -> m44_29  [key=0, style=solid];
m44_20 -> m44_30  [key=2, style=dotted];
m44_22 -> m44_29  [key=0, style=solid, color=red];
m44_22 -> m44_30  [key=2, style=dotted, color=red];
m44_24 -> m44_29  [key=0, style=solid, color=red];
m44_24 -> m44_30  [key=2, style=dotted, color=red];
m44_29 -> m44_16  [key=0, style=bold, color=blue];
m44_7 -> m44_11  [key=0, style=solid];
m44_11 -> m44_12  [key=0, style=solid];
m44_11 -> m44_13  [key=2, style=dotted];
m44_12 -> m44_7  [key=0, style=bold, color=blue];
m44_66 -> m44_67  [key=0, style=solid];
m44_66 -> m44_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_66 -> m44_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_66 -> m44_73  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m44_66 -> m44_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m44_66 -> m44_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_66 -> m44_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_66 -> m44_80  [key=1, style=dashed, color=red, label=string];
m44_66 -> m44_40  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ChangeState"];
m44_67 -> m44_68  [key=0, style=solid];
m44_67 -> m44_69  [key=0, style=solid];
m44_69 -> m44_70  [key=0, style=solid];
m44_69 -> m44_55  [key=2, style=dotted];
m44_69 -> m44_82  [key=2, style=dotted];
m44_69 -> m44_83  [key=2, style=dotted];
m44_70 -> m44_71  [key=0, style=solid];
m44_70 -> m44_55  [key=2, style=dotted];
m44_70 -> m44_84  [key=2, style=dotted];
m44_70 -> m44_73  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m44_70 -> m44_80  [key=1, style=dashed, color=red, label=currentState];
m44_73 -> m44_74  [key=0, style=solid];
m44_73 -> m44_75  [key=0, style=solid, color=red];
m44_73 -> m44_85  [key=2, style=dotted];
m44_76 -> m44_77  [key=0, style=solid];
m44_76 -> m44_78  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m44_76 -> m44_79  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m44_77 -> m44_78  [key=0, style=solid];
m44_77 -> m44_49  [key=2, style=dotted];
m44_77 -> m44_80  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m44_79 -> m44_75  [key=0, style=solid, color=red];
m44_79 -> m44_50  [key=2, style=dotted];
m44_80 -> m44_81  [key=0, style=solid, color=red];
m44_80 -> m44_51  [key=2, style=dotted, color=red];
m44_68 -> m44_81  [key=0, style=solid];
m44_68 -> m44_30  [key=2, style=dotted];
m44_71 -> m44_72  [key=0, style=solid];
m44_71 -> m44_73  [key=0, style=solid];
m44_72 -> m44_81  [key=0, style=solid];
m44_74 -> m44_81  [key=0, style=solid];
m44_75 -> m44_76  [key=0, style=solid, color=red];
m44_75 -> m44_80  [key=0, style=solid, color=red];
m44_75 -> m44_77  [key=1, style=dashed, color=red, label=filter];
m44_78 -> m44_79  [key=0, style=solid];
m44_78 -> m44_75  [key=0, style=solid, color=red];
m44_81 -> m44_66  [key=0, style=bold, color=blue];
m44_14 -> m44_15  [key=0, style=solid];
m44_15 -> m44_14  [key=0, style=bold, color=blue];
m44_86 -> m44_87  [key=0, style=solid];
m44_86 -> m44_88  [key=1, style=dashed, color=red, label=string];
m44_87 -> m44_88  [key=0, style=solid, color=red];
m44_87 -> m44_46  [key=2, style=dotted];
m44_87 -> m44_89  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m44_88 -> m44_89  [key=0, style=solid, color=red];
m44_88 -> m44_51  [key=2, style=dotted, color=red];
m44_89 -> m44_90  [key=0, style=solid];
m44_89 -> m44_48  [key=2, style=dotted];
m44_90 -> m44_86  [key=0, style=bold, color=blue];
m44_34 -> m44_35  [key=0, style=solid];
m44_34 -> m44_47  [key=2, style=dotted];
m44_34 -> m44_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_31 -> m44_32  [key=0, style=solid];
m44_31 -> m44_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_31 -> m44_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_31 -> m44_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_31 -> m44_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_31 -> m44_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m44_31 -> m44_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_31 -> m44_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_31 -> m44_42  [key=1, style=dashed, color=red, label=string];
m44_31 -> m44_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_31 -> m44_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_32 -> m44_33  [key=0, style=solid];
m44_32 -> m44_46  [key=2, style=dotted];
m44_32 -> m44_34  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m44_32 -> m44_35  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m44_33 -> m44_34  [key=0, style=solid];
m44_33 -> m44_47  [key=2, style=dotted];
m44_33 -> m44_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_37 -> m44_38  [key=0, style=solid];
m44_37 -> m44_39  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m44_37 -> m44_40  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m44_38 -> m44_39  [key=0, style=solid];
m44_38 -> m44_49  [key=2, style=dotted];
m44_38 -> m44_42  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m44_40 -> m44_36  [key=0, style=solid, color=red];
m44_40 -> m44_50  [key=2, style=dotted];
m44_42 -> m44_43  [key=0, style=solid, color=red];
m44_42 -> m44_51  [key=2, style=dotted, color=red];
m44_43 -> m44_44  [key=0, style=solid];
m44_43 -> m44_47  [key=2, style=dotted];
m44_43 -> m44_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_35 -> m44_36  [key=0, style=solid, color=red];
m44_35 -> m44_48  [key=2, style=dotted];
m44_36 -> m44_37  [key=0, style=solid, color=red];
m44_36 -> m44_41  [key=0, style=solid, color=red];
m44_36 -> m44_38  [key=1, style=dashed, color=red, label=filter];
m44_41 -> m44_42  [key=0, style=solid, color=red];
m44_41 -> m44_46  [key=2, style=dotted];
m44_41 -> m44_43  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m44_41 -> m44_44  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m44_39 -> m44_40  [key=0, style=solid];
m44_39 -> m44_36  [key=0, style=solid, color=red];
m44_44 -> m44_45  [key=0, style=solid];
m44_44 -> m44_48  [key=2, style=dotted];
m44_45 -> m44_31  [key=0, style=bold, color=blue];
m44_95 -> m44_96  [key=0, style=solid, color=red];
m44_95 -> m44_47  [key=2, style=dotted];
m44_95 -> m44_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_91 -> m44_92  [key=0, style=solid];
m44_91 -> m44_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_91 -> m44_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_91 -> m44_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_91 -> m44_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_91 -> m44_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_91 -> m44_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_91 -> m44_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_91 -> m44_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_92 -> m44_93  [key=0, style=solid];
m44_92 -> m44_98  [key=0, style=solid];
m44_92 -> m44_103  [key=2, style=dotted];
m44_93 -> m44_94  [key=0, style=solid];
m44_93 -> m44_95  [key=0, style=solid];
m44_93 -> m44_104  [key=2, style=dotted];
m44_94 -> m44_95  [key=0, style=solid];
m44_94 -> m44_105  [key=2, style=dotted];
m44_97 -> m44_96  [key=0, style=solid, color=red];
m44_97 -> m44_106  [key=2, style=dotted];
m44_98 -> m44_99  [key=0, style=solid];
m44_98 -> m44_107  [key=2, style=dotted];
m44_99 -> m44_100  [key=0, style=solid, color=red];
m44_99 -> m44_108  [key=2, style=dotted];
m44_101 -> m44_100  [key=0, style=solid, color=red];
m44_101 -> m44_109  [key=2, style=dotted];
m44_96 -> m44_97  [key=0, style=solid, color=red];
m44_96 -> m44_98  [key=0, style=solid, color=red];
m44_100 -> m44_101  [key=0, style=solid, color=red];
m44_100 -> m44_102  [key=0, style=solid, color=red];
m44_102 -> m44_91  [key=0, style=bold, color=blue];
m44_123 -> m44_124  [key=0, style=solid];
m44_123 -> m44_47  [key=2, style=dotted];
m44_123 -> m44_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_107 -> m44_119  [key=0, style=solid];
m44_107 -> m44_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m44_107 -> m44_122  [key=1, style=dashed, color=darkseagreen4, label=bool];
m44_107 -> m44_123  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m44_107 -> m44_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_107 -> m44_124  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m44_107 -> m44_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_107 -> m44_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m44_107 -> m44_127  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m44_107 -> m44_141  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_119 -> m44_120  [key=0, style=solid];
m44_119 -> m44_129  [key=2, style=dotted];
m44_119 -> m44_130  [key=2, style=dotted];
m44_119 -> m44_121  [key=1, style=dashed, color=darkseagreen4, label=properties];
m44_119 -> m44_124  [key=1, style=dashed, color=darkseagreen4, label=properties];
m44_119 -> m44_138  [key=1, style=dashed, color=darkseagreen4, label=properties];
m44_119 -> m44_125  [key=1, style=dashed, color=darkseagreen4, label=properties];
m44_119 -> m44_126  [key=1, style=dashed, color=darkseagreen4, label=properties];
m44_119 -> m44_127  [key=1, style=dashed, color=darkseagreen4, label=properties];
m44_119 -> m44_141  [key=1, style=dashed, color=darkseagreen4, label=properties];
m44_121 -> m44_122  [key=0, style=solid];
m44_121 -> m44_131  [key=2, style=dotted];
m44_122 -> m44_123  [key=0, style=solid];
m44_122 -> m44_125  [key=0, style=solid];
m44_124 -> m44_125  [key=0, style=solid];
m44_124 -> m44_47  [key=2, style=dotted];
m44_124 -> m44_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_125 -> m44_126  [key=0, style=solid];
m44_125 -> m44_131  [key=2, style=dotted];
m44_127 -> m44_128  [key=0, style=solid];
m44_127 -> m44_47  [key=2, style=dotted];
m44_127 -> m44_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_120 -> m44_121  [key=0, style=solid];
m44_120 -> m44_126  [key=1, style=dashed, color=darkseagreen4, label=now];
m44_126 -> m44_127  [key=0, style=solid];
m44_126 -> m44_132  [key=2, style=dotted];
m44_126 -> m44_131  [key=2, style=dotted];
m44_128 -> m44_107  [key=0, style=bold, color=blue];
m44_140 -> m44_141  [key=0, style=solid];
m44_53 -> m44_54  [key=0, style=solid];
m44_53 -> m44_55  [key=2, style=dotted];
m44_53 -> m44_56  [key=2, style=dotted];
m44_58 -> m44_59  [key=0, style=solid];
m44_58 -> m44_55  [key=2, style=dotted];
m44_58 -> m44_60  [key=2, style=dotted];
m44_58 -> m44_61  [key=2, style=dotted];
m44_63 -> m44_64  [key=0, style=solid];
m44_63 -> m44_55  [key=2, style=dotted];
m44_63 -> m44_65  [key=2, style=dotted];
m44_52 -> m44_53  [key=0, style=solid];
m44_57 -> m44_58  [key=0, style=solid];
m44_62 -> m44_63  [key=0, style=solid];
m44_54 -> m44_52  [key=0, style=bold, color=blue];
m44_59 -> m44_57  [key=0, style=bold, color=blue];
m44_64 -> m44_62  [key=0, style=bold, color=blue];
m44_111 -> m44_112  [key=0, style=solid];
m44_111 -> m44_55  [key=2, style=dotted];
m44_111 -> m44_113  [key=2, style=dotted];
m44_110 -> m44_111  [key=0, style=solid];
m44_112 -> m44_110  [key=0, style=bold, color=blue];
m44_134 -> m44_135  [key=0, style=solid];
m44_134 -> m44_55  [key=2, style=dotted];
m44_134 -> m44_136  [key=2, style=dotted];
m44_138 -> m44_139  [key=0, style=solid];
m44_138 -> m44_55  [key=2, style=dotted];
m44_138 -> m44_56  [key=2, style=dotted];
m44_141 -> m44_142  [key=0, style=solid];
m44_141 -> m44_55  [key=2, style=dotted];
m44_141 -> m44_143  [key=2, style=dotted];
m44_141 -> m44_144  [key=2, style=dotted];
m44_133 -> m44_134  [key=0, style=solid];
m44_137 -> m44_138  [key=0, style=solid];
m44_135 -> m44_133  [key=0, style=bold, color=blue];
m44_139 -> m44_137  [key=0, style=bold, color=blue];
m44_142 -> m44_140  [key=0, style=bold, color=blue];
m44_0 -> m44_1  [key=0, style=solid];
m44_1 -> m44_2  [key=0, style=solid];
m44_1 -> m44_6  [key=2, style=dotted];
m44_1 -> m44_7  [key=2, style=dotted];
m44_2 -> m44_3  [key=0, style=solid];
m44_2 -> m44_8  [key=2, style=dotted];
m44_2 -> m44_7  [key=2, style=dotted];
m44_3 -> m44_4  [key=0, style=solid];
m44_3 -> m44_9  [key=2, style=dotted];
m44_3 -> m44_7  [key=2, style=dotted];
m44_4 -> m44_5  [key=0, style=solid];
m44_4 -> m44_10  [key=2, style=dotted];
m44_4 -> m44_7  [key=2, style=dotted];
m44_5 -> m44_0  [key=0, style=bold, color=blue];
m44_145 -> m44_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_27  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m44_145 -> m44_28  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m44_145 -> m44_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_36  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m44_145 -> m44_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_42  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m44_145 -> m44_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_75  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m44_145 -> m44_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_80  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m44_145 -> m44_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_88  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m44_145 -> m44_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_96  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m44_145 -> m44_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_100  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m44_145 -> m44_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_145 -> m44_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m44_146 -> m44_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_146 -> m44_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_146 -> m44_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_147 -> m44_53  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m44_148 -> m44_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_149 -> m44_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_149 -> m44_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_149 -> m44_141  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_150 -> m44_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m44_151 -> m44_138  [key=1, style=dashed, color=darkseagreen4, label=properties];
m44_151 -> m44_141  [key=1, style=dashed, color=darkseagreen4, label=properties];
m45_8 -> m45_9  [key=0, style=solid];
m45_9 -> m45_10  [key=0, style=solid];
m45_9 -> m45_7  [key=2, style=dotted];
m45_9 -> m45_12  [key=2, style=dotted];
m45_10 -> m45_11  [key=0, style=solid];
m45_10 -> m45_13  [key=2, style=dotted];
m45_11 -> m45_8  [key=0, style=bold, color=blue];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_3  [key=2, style=dotted];
m45_1 -> m45_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_2 -> m45_0  [key=0, style=bold, color=blue];
m45_4 -> m45_5  [key=0, style=solid];
m45_5 -> m45_6  [key=0, style=solid];
m45_5 -> m45_7  [key=2, style=dotted];
m45_6 -> m45_4  [key=0, style=bold, color=blue];
m45_14 -> m45_15  [key=0, style=solid, color=red];
m45_15 -> m45_16  [key=0, style=solid, color=red];
m45_15 -> m45_7  [key=2, style=dotted, color=red];
m45_15 -> m45_19  [key=2, style=dotted, color=red];
m45_16 -> m45_17  [key=0, style=solid, color=red];
m45_16 -> m45_20  [key=2, style=dotted, color=red];
m45_17 -> m45_18  [key=0, style=solid, color=red];
m45_17 -> m45_21  [key=2, style=dotted, color=red];
m45_17 -> m45_22  [key=2, style=dotted, color=red];
m45_18 -> m45_14  [key=0, style=bold, color=blue];
m47_53 -> m47_54  [key=0, style=solid];
m47_53 -> m47_59  [key=2, style=dotted];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> m47_55  [key=2, style=dotted];
m47_1 -> m47_43  [key=2, style=dotted];
m47_2 -> m47_3  [key=0, style=solid];
m47_2 -> m47_56  [key=2, style=dotted];
m47_2 -> m47_44  [key=2, style=dotted];
m47_3 -> m47_4  [key=0, style=solid];
m47_3 -> m47_57  [key=2, style=dotted];
m47_4 -> m47_5  [key=0, style=solid];
m47_4 -> m47_58  [key=2, style=dotted];
m47_4 -> m47_10  [key=1, style=dashed, color=darkseagreen4, label=server];
m47_4 -> m47_45  [key=2, style=dotted];
m47_4 -> m47_6  [key=1, style=dashed, color=darkseagreen4, label=from];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_44  [key=1, style=dashed, color=red, label=count];
m47_5 -> m47_45  [key=2, style=dotted];
m47_10 -> m47_11  [key=0, style=solid];
m47_10 -> m47_61  [key=2, style=dotted];
m47_10 -> m47_43  [key=2, style=dotted];
m47_10 -> m47_42  [key=0, style=solid];
m47_6 -> m47_7  [key=0, style=solid];
m47_6 -> m47_52  [key=0, style=solid];
m47_6 -> m47_11  [key=1, style=dashed, color=darkseagreen4, label=pager];
m47_6 -> m47_46  [key=2, style=dotted];
m47_6 -> m47_47  [key=2, style=dotted];
m47_6 -> m47_48  [key=2, style=dotted];
m47_6 -> m47_9  [key=1, style=dashed, color=darkseagreen4, label=pager];
m47_6 -> m47_41  [key=1, style=dashed, color=darkseagreen4, label=pager];
m47_44 -> m47_45  [key=0, style=solid, color=red];
m47_44 -> m47_44  [key=1, style=dashed, color=red, label=count];
m47_44 -> m47_90  [key=1, style=dashed, color=red, label=number];
m47_7 -> m47_8  [key=0, style=solid];
m47_7 -> m47_59  [key=2, style=dotted];
m47_7 -> m47_9  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_11  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_12  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_21  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_22  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_30  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_31  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_36  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_37  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_42  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_43  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_46  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_47  [key=1, style=dashed, color=darkseagreen4, label=command];
m47_7 -> m47_13  [key=1, style=dashed, color=darkseagreen4, label=succeededJobs];
m47_7 -> m47_49  [key=2, style=dotted];
m47_52 -> m47_53  [key=0, style=solid];
m47_52 -> m47_66  [key=2, style=dotted];
m47_8 -> m47_9  [key=0, style=solid];
m47_8 -> m47_52  [key=0, style=solid];
m47_8 -> m47_60  [key=2, style=dotted];
m47_8 -> m47_43  [key=2, style=dotted];
m47_9 -> m47_10  [key=0, style=solid];
m47_9 -> m47_11  [key=0, style=solid];
m47_9 -> m47_60  [key=2, style=dotted];
m47_11 -> m47_12  [key=0, style=solid, color=green];
m47_11 -> m47_21  [key=0, style=solid];
m47_11 -> m47_62  [key=2, style=dotted];
m47_11 -> m47_50  [key=2, style=dotted];
m47_11 -> m47_51  [key=2, style=dotted];
m47_11 -> m47_52  [key=2, style=dotted];
m47_12 -> m47_13  [key=0, style=solid, color=green];
m47_12 -> m47_63  [key=2, style=dotted];
m47_12 -> m47_64  [key=2, style=dotted];
m47_12 -> m47_14  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m47_12 -> m47_43  [key=2, style=dotted, color=green];
m47_21 -> m47_22  [key=0, style=solid];
m47_21 -> m47_30  [key=0, style=solid];
m47_21 -> m47_62  [key=2, style=dotted];
m47_21 -> m47_23  [key=0, style=solid];
m47_21 -> m47_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_21 -> m47_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_22 -> m47_23  [key=0, style=solid];
m47_22 -> m47_63  [key=2, style=dotted];
m47_22 -> m47_64  [key=2, style=dotted];
m47_22 -> m47_24  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m47_22 -> m47_43  [key=2, style=dotted];
m47_30 -> m47_31  [key=0, style=solid];
m47_30 -> m47_36  [key=0, style=solid];
m47_30 -> m47_62  [key=2, style=dotted];
m47_30 -> m47_43  [key=2, style=dotted];
m47_31 -> m47_32  [key=0, style=solid];
m47_31 -> m47_63  [key=2, style=dotted];
m47_31 -> m47_64  [key=2, style=dotted];
m47_31 -> m47_33  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m47_31 -> m47_43  [key=2, style=dotted];
m47_36 -> m47_37  [key=0, style=solid];
m47_36 -> m47_42  [key=0, style=solid];
m47_36 -> m47_62  [key=2, style=dotted];
m47_36 -> m47_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_36 -> m47_53  [key=2, style=dotted];
m47_37 -> m47_38  [key=0, style=solid];
m47_37 -> m47_63  [key=2, style=dotted];
m47_37 -> m47_64  [key=2, style=dotted];
m47_37 -> m47_39  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m47_37 -> m47_43  [key=2, style=dotted];
m47_42 -> m47_43  [key=0, style=solid];
m47_42 -> m47_46  [key=0, style=solid];
m47_42 -> m47_62  [key=2, style=dotted];
m47_42 -> m47_0  [key=0, style=bold, color=blue];
m47_43 -> m47_44  [key=0, style=solid, color=red];
m47_43 -> m47_63  [key=2, style=dotted];
m47_43 -> m47_64  [key=2, style=dotted];
m47_43 -> m47_45  [key=1, style=dashed, color=red, label=seconds];
m47_46 -> m47_47  [key=0, style=solid];
m47_46 -> m47_6  [key=0, style=solid];
m47_46 -> m47_62  [key=2, style=dotted];
m47_47 -> m47_48  [key=0, style=solid, color=red];
m47_47 -> m47_63  [key=2, style=dotted];
m47_47 -> m47_64  [key=2, style=dotted];
m47_13 -> m47_14  [key=0, style=solid];
m47_13 -> m47_15  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_13 -> m47_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_13 -> m47_40  [key=0, style=solid];
m47_14 -> m47_15  [key=0, style=solid];
m47_14 -> m47_18  [key=0, style=solid];
m47_14 -> m47_43  [key=2, style=dotted];
m47_15 -> m47_16  [key=0, style=solid];
m47_15 -> m47_72  [key=1, style=dashed, color=darkseagreen4, label=number];
m47_15 -> m47_15  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_15 -> m47_53  [key=2, style=dotted];
m47_15 -> m47_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_17 -> m47_14  [key=0, style=solid];
m47_17 -> m47_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_17 -> m47_18  [key=0, style=solid];
m47_17 -> m47_48  [key=2, style=dotted];
m47_17 -> m47_53  [key=2, style=dotted];
m47_17 -> m47_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_18 -> m47_19  [key=0, style=solid];
m47_18 -> m47_21  [key=0, style=solid];
m47_18 -> m47_66  [key=2, style=dotted];
m47_18 -> m47_43  [key=2, style=dotted];
m47_16 -> m47_17  [key=0, style=solid];
m47_16 -> m47_65  [key=2, style=dotted];
m47_16 -> m47_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_16 -> m47_43  [key=2, style=dotted];
m47_19 -> m47_20  [key=0, style=solid];
m47_19 -> m47_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_19 -> m47_54  [key=2, style=dotted];
m47_19 -> m47_52  [key=2, style=dotted];
m47_19 -> m47_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_20 -> m47_21  [key=0, style=solid];
m47_20 -> m47_66  [key=2, style=dotted];
m47_20 -> m47_43  [key=2, style=dotted];
m47_23 -> m47_24  [key=0, style=solid];
m47_23 -> m47_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_23 -> m47_43  [key=2, style=dotted];
m47_24 -> m47_25  [key=0, style=solid];
m47_24 -> m47_27  [key=0, style=solid];
m47_24 -> m47_26  [key=0, style=solid];
m47_24 -> m47_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_26 -> m47_24  [key=0, style=solid];
m47_26 -> m47_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_26 -> m47_43  [key=2, style=dotted];
m47_26 -> m47_27  [key=0, style=solid];
m47_25 -> m47_26  [key=0, style=solid];
m47_25 -> m47_67  [key=2, style=dotted];
m47_25 -> m47_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_25 -> m47_43  [key=2, style=dotted];
m47_25 -> m47_39  [key=0, style=solid];
m47_27 -> m47_28  [key=0, style=solid];
m47_27 -> m47_30  [key=0, style=solid];
m47_27 -> m47_66  [key=2, style=dotted];
m47_27 -> m47_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_27 -> m47_55  [key=2, style=dotted];
m47_27 -> m47_52  [key=2, style=dotted];
m47_27 -> m47_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_28 -> m47_29  [key=0, style=solid];
m47_28 -> m47_43  [key=2, style=dotted];
m47_29 -> m47_30  [key=0, style=solid];
m47_29 -> m47_66  [key=2, style=dotted];
m47_29 -> m47_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_29 -> m47_56  [key=2, style=dotted];
m47_29 -> m47_53  [key=2, style=dotted];
m47_29 -> m47_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_32 -> m47_33  [key=0, style=solid];
m47_32 -> m47_35  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_32 -> m47_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_32 -> m47_38  [key=0, style=solid];
m47_32 -> m47_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_33 -> m47_34  [key=0, style=solid];
m47_33 -> m47_36  [key=0, style=solid];
m47_33 -> m47_43  [key=2, style=dotted];
m47_35 -> m47_33  [key=0, style=solid];
m47_35 -> m47_35  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_35 -> m47_43  [key=2, style=dotted];
m47_35 -> m47_36  [key=0, style=solid];
m47_34 -> m47_35  [key=0, style=solid];
m47_34 -> m47_65  [key=2, style=dotted];
m47_34 -> m47_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_34 -> m47_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_34 -> m47_57  [key=2, style=dotted];
m47_34 -> m47_53  [key=2, style=dotted];
m47_34 -> m47_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m47_38 -> m47_39  [key=0, style=solid];
m47_38 -> m47_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_38 -> m47_43  [key=2, style=dotted];
m47_39 -> m47_40  [key=0, style=solid];
m47_39 -> m47_42  [key=0, style=solid];
m47_39 -> m47_13  [key=0, style=solid];
m47_39 -> m47_43  [key=2, style=dotted];
m47_41 -> m47_39  [key=0, style=solid];
m47_41 -> m47_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m47_41 -> m47_42  [key=0, style=solid];
m47_41 -> m47_58  [key=2, style=dotted];
m47_41 -> m47_51  [key=2, style=dotted];
m47_41 -> m47_52  [key=2, style=dotted];
m47_40 -> m47_41  [key=0, style=solid];
m47_40 -> m47_65  [key=2, style=dotted];
m47_40 -> m47_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_40 -> m47_43  [key=2, style=dotted];
m47_45 -> m47_46  [key=0, style=solid, color=red];
m47_45 -> m47_68  [key=2, style=dotted, color=red];
m47_45 -> m47_69  [key=2, style=dotted, color=red];
m47_45 -> m47_89  [key=1, style=dashed, color=red, label="lambda expression"];
m47_48 -> m47_49  [key=0, style=solid, color=red];
m47_48 -> m47_70  [key=2, style=dotted, color=red];
m47_48 -> m47_92  [key=1, style=dashed, color=red, label="lambda expression"];
m47_49 -> m47_50  [key=0, style=solid];
m47_49 -> m47_6  [key=0, style=solid];
m47_49 -> m47_66  [key=2, style=dotted];
m47_50 -> m47_51  [key=0, style=solid];
m47_51 -> m47_6  [key=0, style=solid];
m47_51 -> m47_66  [key=2, style=dotted];
m47_54 -> m47_0  [key=0, style=bold, color=blue];
m47_59 -> m47_12  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_59 -> m47_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m47_97 -> m47_98  [key=0, style=solid];
m47_72 -> m47_73  [key=0, style=solid];
m47_72 -> m47_74  [key=2, style=dotted];
m47_71 -> m47_72  [key=0, style=solid];
m47_75 -> m47_76  [key=0, style=solid];
m47_79 -> m47_80  [key=0, style=solid];
m47_83 -> m47_84  [key=0, style=solid];
m47_90 -> m47_91  [key=0, style=solid, color=red];
m47_90 -> m47_74  [key=2, style=dotted, color=red];
m47_89 -> m47_90  [key=0, style=solid, color=red];
m47_92 -> m47_93  [key=0, style=solid];
m47_73 -> m47_71  [key=0, style=bold, color=blue];
m47_76 -> m47_77  [key=0, style=solid];
m47_76 -> m47_78  [key=2, style=dotted];
m47_77 -> m47_75  [key=0, style=bold, color=blue];
m47_80 -> m47_81  [key=0, style=solid];
m47_80 -> m47_82  [key=2, style=dotted];
m47_81 -> m47_79  [key=0, style=bold, color=blue];
m47_84 -> m47_85  [key=0, style=solid];
m47_84 -> m47_86  [key=2, style=dotted];
m47_84 -> m47_87  [key=2, style=dotted];
m47_84 -> m47_88  [key=2, style=dotted];
m47_85 -> m47_83  [key=0, style=bold, color=blue];
m47_91 -> m47_89  [key=0, style=bold, color=blue];
m47_93 -> m47_94  [key=0, style=solid];
m47_93 -> m47_95  [key=0, style=solid, color=red];
m47_94 -> m47_96  [key=0, style=solid];
m47_94 -> m47_65  [key=2, style=dotted];
m47_94 -> m47_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_95 -> m47_96  [key=0, style=solid, color=red];
m47_95 -> m47_65  [key=2, style=dotted, color=red];
m47_95 -> m47_101  [key=1, style=dashed, color=red, label="lambda expression"];
m47_96 -> m47_92  [key=0, style=bold, color=blue];
m47_101 -> m47_102  [key=0, style=solid, color=red];
m47_98 -> m47_99  [key=0, style=solid];
m47_98 -> m47_100  [key=2, style=dotted];
m47_99 -> m47_97  [key=0, style=bold, color=blue];
m47_102 -> m47_103  [key=0, style=solid, color=red];
m47_102 -> m47_104  [key=2, style=dotted, color=red];
m47_103 -> m47_101  [key=0, style=bold, color=blue];
m47_105 -> m47_72  [key=1, style=dashed, color=darkseagreen4, label=number];
m47_106 -> m47_90  [key=1, style=dashed, color=red, label=number];
m48_5 -> m48_6  [key=0, style=solid];
m48_6 -> m48_7  [key=0, style=solid];
m48_6 -> m48_8  [key=2, style=dotted];
m48_7 -> m48_5  [key=0, style=bold, color=blue];
m48_0 -> m48_1  [key=0, style=solid, color=red];
m48_1 -> m48_2  [key=0, style=solid, color=red];
m48_1 -> m48_3  [key=2, style=dotted, color=red];
m48_1 -> m48_4  [key=2, style=dotted, color=red];
m48_2 -> m48_0  [key=0, style=bold, color=blue];
}
