digraph  {
n13 [label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
n0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30"];
n1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="TransactionIsolationLevel = null", span="32-32"];
n2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="33-33"];
n3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="35-35"];
n11 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
n4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="JobExpirationCheckInterval = TimeSpan.FromMinutes(30)", span="37-37"];
n12 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
n5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="38-38"];
n6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="PrepareSchemaIfNecessary = true", span="39-39"];
n7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="DashboardJobListLimit = 10000", span="40-40"];
n8 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="_schemaName = Constants.DefaultSchema", span="41-41"];
n9 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="TransactionTimeout = TimeSpan.FromMinutes(1)", span="42-42"];
n10 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30"];
d3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", color=green, community=0, label="1: MachineName = Environment.MachineName", span="21-21"];
d27 [label="HangFire.BackgroundJobServer", span=""];
d2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="19-19"];
d4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="PollInterval = TimeSpan.FromSeconds(15)", span="22-22"];
d5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="WorkerCount = workerCount", span="24-24"];
d6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Queues = queues ?? new[] { ''default'' }", span="25-25"];
d10 [cluster="HangFire.BackgroundJobServer.Start()", label="_server != null", span="53-53"];
d12 [cluster="HangFire.BackgroundJobServer.Start()", label="_server = new JobServer(MachineName, WorkerCount, Queues, PollInterval, JobActivator)", span="58-58"];
d17 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server != null", span="67-67"];
d18 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server.Dispose()", span="69-69"];
d19 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server = null", span="70-70"];
d25 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Stop()", span="79-79"];
d7 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="19-19"];
d8 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
d9 [cluster="HangFire.BackgroundJobServer.Start()", label="Entry HangFire.BackgroundJobServer.Start()", span="51-51"];
d11 [cluster="HangFire.BackgroundJobServer.Start()", label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="55-55"];
d13 [cluster="HangFire.BackgroundJobServer.Start()", label="Exit HangFire.BackgroundJobServer.Start()", span="51-51"];
d15 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", label="Entry HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="31-31"];
d16 [cluster="HangFire.BackgroundJobServer.Stop()", label="Entry HangFire.BackgroundJobServer.Stop()", span="65-65"];
d21 [cluster="HangFire.BackgroundJobServer.Stop()", label="return false;", span="74-74"];
d23 [cluster="HangFire.Server.JobServer.Dispose()", label="Entry HangFire.Server.JobServer.Dispose()", span="64-64"];
d20 [cluster="HangFire.BackgroundJobServer.Stop()", label="return true;", span="72-72"];
d24 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="77-77"];
d26 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="77-77"];
d14 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
d22 [cluster="HangFire.BackgroundJobServer.Stop()", label="Exit HangFire.BackgroundJobServer.Stop()", span="65-65"];
m0_11 [cluster="System.Math.Min(int, int)", file="BackgroundJobServerOptions.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m0_0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="31-31"];
m0_9 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="BackgroundJobServerOptions.cs", label="1: Activator = JobActivator.Current", span="42-42"];
m0_8 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="FilterProvider = JobFilterProviders.Providers", span="41-41"];
m0_1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="33-33"];
m0_2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="34-34"];
m0_3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="ShutdownTimeout = BackgroundProcessingServer.DefaultShutdownTimeout", span="35-35"];
m0_4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="SchedulePollingInterval = DelayedJobScheduler.DefaultPollingDelay", span="36-36"];
m0_5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="HeartbeatInterval = ServerHeartbeat.DefaultHeartbeatInterval", span="37-37"];
m0_6 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="38-38"];
m0_7 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="ServerCheckInterval = ServerWatchdog.DefaultCheckInterval", span="39-39"];
m0_10 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="31-31"];
m0_12 [file="BackgroundJobServerOptions.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m3_0 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs", label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="20-20"];
m3_1 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs", label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="20-20"];
m4_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobScheduler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_33 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m4_68 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m4_83 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_32 [cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobScheduler.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m4_85 [cluster="string.Format(string, object, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_40 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m4_41 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="return GetType().Name;", span="152-152"];
m4_42 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m4_77 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobScheduler.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m4_72 [cluster="Unk._instantFactory", file="RecurringJobScheduler.cs", label="Entry Unk._instantFactory", span=""];
m4_75 [cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25"];
m4_84 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m4_43 [cluster="object.GetType()", file="RecurringJobScheduler.cs", label="Entry object.GetType()", span="0-0"];
m4_35 [cluster="string.Format(string, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m4_1 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m4_38 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="278-278"];
m4_71 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobScheduler.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m4_76 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m4_79 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m4_69 [cluster="Unk.Parse", file="RecurringJobScheduler.cs", label="Entry Unk.Parse", span=""];
m4_31 [cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22"];
m4_2 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m4_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m4_74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_82 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m4_67 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m4_37 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m4_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="161-161"];
m4_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var cron = recurringJob[''Cron'']", span="163-163"];
m4_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="168-170"];
m4_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="174-176"];
m4_54 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="183-183"];
m4_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="state.Queue = recurringJob[''Queue'']", span="185-185"];
m4_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var backgroundJob = _factory.Create(new CreateContext(storage, connection, job, state))", span="188-188"];
m4_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="193-196"];
m4_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="205-207"];
m4_65 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="211-213"];
m4_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var job = serializedJob.Deserialize()", span="162-162"];
m4_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="164-164"];
m4_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var instant = _instantFactory(cronSchedule, timeZone)", span="172-172"];
m4_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="instant.GetNextInstants(lastExecutionTime).Any()", span="180-180"];
m4_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="199-199"];
m4_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="203-203"];
m4_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var changedFields = new Dictionary<string, string>()", span="178-178"];
m4_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="200-200"];
m4_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="182-182"];
m4_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var jobId = backgroundJob != null ? backgroundJob.Id : null", span="189-189"];
m4_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="String.IsNullOrEmpty(jobId)", span="191-191"];
m4_64 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label=TimeZoneNotFoundException, span="209-209"];
m4_66 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m4_78 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobScheduler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_73 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m4_16 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m4_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="context == null", span="112-112"];
m4_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Throttle(context.CancellationToken)", span="114-114"];
m4_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var connection = context.Storage.GetConnection()", span="116-116"];
m4_26 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="133-133"];
m4_29 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Delay(context.CancellationToken)", span="145-145"];
m4_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''context'');", span="112-112"];
m4_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="117-117"];
m4_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="119-119"];
m4_24 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="123-124"];
m4_23 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=recurringJobIds, span="121-121"];
m4_28 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="137-141"];
m4_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="recurringJob == null", span="126-126"];
m4_27 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=JobLoadException, span="135-135"];
m4_30 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m4_39 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m4_34 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m4_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m4_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="factory == null", span="100-100"];
m4_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="instantFactory == null", span="101-101"];
m4_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throttler == null", span="102-102"];
m4_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_factory = factory", span="104-104"];
m4_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_instantFactory = instantFactory", span="105-105"];
m4_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_throttler = throttler", span="106-106"];
m4_6 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''factory'');", span="100-100"];
m4_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''instantFactory'');", span="101-101"];
m4_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''throttler'');", span="102-102"];
m4_14 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m4_36 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m4_81 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m4_86 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159"];
m4_70 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_80 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m4_87 [file="RecurringJobScheduler.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m5_59 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="Entry Hangfire.Server.Worker.ToString()", span="146-146"];
m5_60 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="return String.Format(''{0} #{1}'', GetType().Name, _workerId.Substring(0, 8));", span="148-148"];
m5_61 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="Exit Hangfire.Server.Worker.ToString()", span="146-146"];
m5_15 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="48-48"];
m5_16 [cluster="Unk.nameof", file="Worker.cs", label="Entry Unk.nameof", span=""];
m5_87 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m5_91 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="Worker.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75"];
m5_44 [cluster="Hangfire.JobStorage.GetConnection()", file="Worker.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m5_56 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="Worker.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m5_18 [cluster="System.Guid.NewGuid()", file="Worker.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m5_64 [cluster="string.Format(string, object, object)", file="Worker.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_57 [cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="Worker.cs", label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="130-130"];
m5_62 [cluster="object.GetType()", file="Worker.cs", label="Entry object.GetType()", span="0-0"];
m5_50 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", span="45-45"];
m5_47 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m5_89 [cluster="System.Diagnostics.Stopwatch.Stop()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m5_90 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="Worker.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51"];
m5_6 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="throw new ArgumentNullException(''queues'');", span="53-53"];
m5_7 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="performer == null", span="54-54"];
m5_8 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="throw new ArgumentNullException(''performer'');", span="54-54"];
m5_9 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="stateChanger == null", span="55-55"];
m5_10 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="throw new ArgumentNullException(''stateChanger'');", span="55-55"];
m5_11 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="_queues = queues.ToArray()", span="57-57"];
m5_12 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="_performer = performer", span="58-58"];
m5_13 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="_stateChanger = stateChanger", span="59-59"];
m5_14 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="_workerId = Guid.NewGuid().ToString()", span="60-60"];
m5_83 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m5_19 [cluster="System.Guid.ToString()", file="Worker.cs", label="Entry System.Guid.ToString()", span="0-0"];
m5_63 [cluster="string.Substring(int, int)", file="Worker.cs", label="Entry string.Substring(int, int)", span="0-0"];
m5_46 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="Worker.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m5_53 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="Worker.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m5_58 [cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="Worker.cs", label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25"];
m5_84 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="Worker.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m5_0 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", file="Worker.cs", label="Entry Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", span="25-25"];
m5_1 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", color=green, community=0, file="Worker.cs", label="0: AddOrUpdate(manager, recurringJobId, job, cronExpression, TimeZoneInfo.Utc)", span="31-31"];
m5_55 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="151-151"];
m5_65 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var jobData = connection.GetJobData(jobId)", span="155-155"];
m5_69 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var backgroundJob = new BackgroundJob(jobId, jobData.Job, jobData.CreatedAt)", span="167-167"];
m5_70 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="Worker.cs", label="0: var performContext = new PerformContext(connection, backgroundJob, token)", span="168-168"];
m5_66 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="jobData == null", span="156-156"];
m5_68 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="jobData.EnsureLoaded()", span="165-165"];
m5_71 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="170-170"];
m5_67 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return null;", span="162-162"];
m5_73 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var result = _performer.Perform(performContext)", span="173-173"];
m5_72 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var duration = Stopwatch.StartNew()", span="171-171"];
m5_75 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="176-176"];
m5_74 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="duration.Stop()", span="174-174"];
m5_76 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label=OperationCanceledException, span="178-178"];
m5_77 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="throw;", span="180-180"];
m5_78 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label=JobPerformanceException, span="182-182"];
m5_79 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="184-187"];
m5_80 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label=Exception, span="189-189"];
m5_81 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during processing of a background job.''\r\n                };", span="191-194"];
m5_82 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Exit Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="151-151"];
m5_2 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", file="Worker.cs", label="Exit Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", span="25-25"];
m5_3 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="Worker.cs", label="Entry Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="34-34"];
m5_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Worker.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m5_49 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="Worker.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39"];
m5_52 [cluster="string.Equals(string, System.StringComparison)", file="Worker.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m5_54 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m5_4 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="Worker.cs", label="AddOrUpdate(manager, recurringJobId, job, cronExpression, timeZone, EnqueuedState.DefaultQueue)", span="41-41"];
m5_5 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="Worker.cs", label="Exit Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="34-34"];
m5_45 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m5_51 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="Worker.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m5_88 [cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="Worker.cs", label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20"];
m5_20 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63"];
m5_21 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var connection = context.Storage.GetConnection()", span="65-65"];
m5_22 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var fetchedJob = connection.FetchNextJob(_queues, context.CancellationToken)", span="66-66"];
m5_23 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="68-68"];
m5_25 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="73-75"];
m5_26 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var processingState = new ProcessingState(context.ServerId, _workerId)", span="77-77"];
m5_27 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId,\r\n                            processingState,\r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token))", span="79-85"];
m5_29 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="93-93"];
m5_32 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=1, file="Worker.cs", label="0: var jobCancellationToken = new ServerJobCancellationToken(\r\n                        connection, fetchedJob.JobId, _workerId, context.CancellationToken)", span="106-107"];
m5_35 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="_stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId, \r\n                            state, \r\n                            ProcessingState.StateName))", span="114-119"];
m5_33 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs", label="1: var state = PerformJob(fetchedJob.JobId, connection, jobCancellationToken)", span="109-109"];
m5_30 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="96-96"];
m5_36 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="127-127"];
m5_38 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="134-134"];
m5_41 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.Requeue()", span="140-140"];
m5_24 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="72-72"];
m5_28 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="appliedState == null || !appliedState.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="89-89"];
m5_31 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="return;", span="97-97"];
m5_34 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="state != null", span="111-111"];
m5_37 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label=JobAbortedException, span="132-132"];
m5_39 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label=Exception, span="136-136"];
m5_40 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Logger.DebugException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="138-138"];
m5_42 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="throw;", span="141-141"];
m5_43 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63"];
m5_86 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", span="36-36"];
m5_85 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="Worker.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m5_48 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m5_92 [file="Worker.cs", label="Hangfire.Server.Worker", span=""];
n13 -> n1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
n13 -> n2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
n13 -> n3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
n13 -> n4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
n13 -> n5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
n13 -> n6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
n13 -> n7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
n13 -> n8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
n13 -> n9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n11  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n12  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n12  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n12  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=2, style=dotted];
n10 -> n0  [color=blue, key=0, style=bold];
d3 -> d4  [color=green, key=0, style=solid];
d27 -> d3  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d27 -> d4  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d27 -> d5  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d27 -> d6  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d27 -> d10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d27 -> d12  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d27 -> d17  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d27 -> d18  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d27 -> d19  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d27 -> d25  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d5  [color=darkseagreen4, key=1, label=int, style=dashed];
d2 -> d6  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
d4 -> d5  [key=0, style=solid];
d4 -> d8  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d10 -> d12  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d12 -> d15  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d21  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d18 -> d23  [key=2, style=dotted];
d19 -> d20  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d25 -> d16  [key=2, style=dotted];
d7 -> d2  [color=blue, key=0, style=bold];
d9 -> d10  [key=0, style=solid];
d11 -> d13  [key=0, style=solid];
d11 -> d14  [key=2, style=dotted];
d13 -> d9  [color=blue, key=0, style=bold];
d16 -> d17  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d20 -> d22  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d26 -> d24  [color=blue, key=0, style=bold];
d22 -> d16  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_11  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_10 -> m0_0  [color=blue, key=0, style=bold];
m0_12 -> m0_9  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_12 -> m0_1  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_12 -> m0_2  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_12 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_12 -> m0_4  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_12 -> m0_5  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_12 -> m0_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_12 -> m0_7  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_12 -> m0_8  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m4_40 -> m4_41  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_43  [key=2, style=dotted];
m4_42 -> m4_40  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [color=blue, key=0, style=bold];
m4_37 -> m4_44  [key=0, style=solid];
m4_37 -> m4_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m4_37 -> m4_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m4_37 -> m4_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m4_37 -> m4_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m4_37 -> m4_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m4_37 -> m4_56  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_37 -> m4_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_37 -> m4_63  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m4_37 -> m4_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_67  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_70  [key=2, style=dotted];
m4_48 -> m4_71  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_70  [key=2, style=dotted];
m4_50 -> m4_73  [key=2, style=dotted];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label=lastExecutionTime, style=dashed];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_56  [key=0, style=solid];
m4_54 -> m4_70  [key=2, style=dotted];
m4_54 -> m4_78  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_79  [key=2, style=dotted];
m4_56 -> m4_80  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_81  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_66  [key=0, style=solid];
m4_63 -> m4_35  [key=2, style=dotted];
m4_63 -> m4_84  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_85  [key=2, style=dotted];
m4_65 -> m4_86  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_68  [key=2, style=dotted];
m4_45 -> m4_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_69  [key=2, style=dotted];
m4_47 -> m4_49  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_72  [key=2, style=dotted];
m4_49 -> m4_52  [color=darkseagreen4, key=1, label=instant, style=dashed];
m4_49 -> m4_59  [color=darkseagreen4, key=1, label=instant, style=dashed];
m4_49 -> m4_60  [color=darkseagreen4, key=1, label=instant, style=dashed];
m4_49 -> m4_62  [color=darkseagreen4, key=1, label=instant, style=dashed];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_62  [key=0, style=solid];
m4_52 -> m4_75  [key=2, style=dotted];
m4_52 -> m4_76  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_82  [key=2, style=dotted];
m4_60 -> m4_83  [key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_82  [key=2, style=dotted];
m4_62 -> m4_83  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_74  [key=2, style=dotted];
m4_51 -> m4_60  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m4_51 -> m4_61  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m4_51 -> m4_62  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m4_51 -> m4_63  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_83  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_77  [key=2, style=dotted];
m4_53 -> m4_55  [color=darkseagreen4, key=1, label=state, style=dashed];
m4_53 -> m4_56  [color=darkseagreen4, key=1, label=state, style=dashed];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_61  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_60  [key=0, style=solid];
m4_58 -> m4_78  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_66 -> m4_37  [color=blue, key=0, style=bold];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_19  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_16 -> m4_20  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_16 -> m4_26  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_16 -> m4_29  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_31  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_32  [key=2, style=dotted];
m4_20 -> m4_22  [color=darkseagreen4, key=1, label=connection, style=dashed];
m4_20 -> m4_24  [color=darkseagreen4, key=1, label=connection, style=dashed];
m4_20 -> m4_26  [color=darkseagreen4, key=1, label=connection, style=dashed];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_23  [key=0, style=solid];
m4_26 -> m4_37  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_39  [key=2, style=dotted];
m4_18 -> m4_30  [key=0, style=solid];
m4_18 -> m4_15  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_33  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_34  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_35  [key=2, style=dotted];
m4_24 -> m4_36  [key=2, style=dotted];
m4_24 -> m4_26  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_29  [key=0, style=solid];
m4_23 -> m4_26  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m4_23 -> m4_28  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m4_28 -> m4_23  [key=0, style=solid];
m4_28 -> m4_35  [key=2, style=dotted];
m4_28 -> m4_38  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_23  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_30 -> m4_16  [color=blue, key=0, style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_7  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m4_4 -> m4_9  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m4_4 -> m4_11  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m4_4 -> m4_12  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m4_4 -> m4_13  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_6 -> m4_14  [key=0, style=solid];
m4_6 -> m4_15  [key=2, style=dotted];
m4_8 -> m4_14  [key=0, style=solid];
m4_8 -> m4_15  [key=2, style=dotted];
m4_10 -> m4_14  [key=0, style=solid];
m4_10 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_4  [color=blue, key=0, style=bold];
m4_86 -> m4_24  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IReadOnlyDictionary<string, string> recurringJob", style=bold];
m4_87 -> m4_11  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m4_87 -> m4_12  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m4_87 -> m4_13  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m4_87 -> m4_19  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m4_87 -> m4_26  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m4_87 -> m4_29  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m4_87 -> m4_41  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m4_87 -> m4_49  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m4_87 -> m4_56  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m5_59 -> m5_60  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_62  [key=2, style=dotted];
m5_60 -> m5_63  [key=2, style=dotted];
m5_60 -> m5_64  [key=2, style=dotted];
m5_61 -> m5_59  [color=blue, key=0, style=bold];
m5_15 -> m5_4  [color=blue, key=0, style=bold];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_8  [color=darkseagreen4, key=1, label="Hangfire.IRecurringJobManager", style=dashed];
m5_6 -> m5_9  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m5_6 -> m5_10  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m5_6 -> m5_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_6 -> m5_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_6 -> m5_13  [color=darkseagreen4, key=1, label="Hangfire.IRecurringJobManager", style=dashed];
m5_6 -> m5_15  [key=0, style=solid];
m5_6 -> m5_16  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [key=0, style=solid];
m5_8 -> m5_14  [key=0, style=solid];
m5_8 -> m5_15  [key=2, style=dotted];
m5_8 -> m5_16  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [key=0, style=solid];
m5_10 -> m5_14  [key=0, style=solid];
m5_10 -> m5_15  [key=2, style=dotted];
m5_10 -> m5_16  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [key=0, style=solid];
m5_11 -> m5_17  [key=2, style=dotted];
m5_12 -> m5_14  [key=0, style=solid];
m5_12 -> m5_15  [key=2, style=dotted];
m5_12 -> m5_16  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_17  [key=2, style=dotted];
m5_13 -> m5_18  [key=2, style=dotted];
m5_14 -> m5_6  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_18  [key=2, style=dotted];
m5_14 -> m5_19  [key=2, style=dotted];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_3  [color=green, key=2, style=dotted];
m5_55 -> m5_65  [key=0, style=solid];
m5_55 -> m5_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_55 -> m5_70  [color=red, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m5_55 -> m5_21  [color=darkorchid, key=3, label="Parameter variable Hangfire.Storage.IStorageConnection connection", style=bold];
m5_55 -> m5_32  [color=red, key=3, label="Parameter variable Hangfire.IJobCancellationToken token", style=bold];
m5_55 -> m5_67  [color=darkorchid, key=3, label="method methodReturn Hangfire.States.IState PerformJob", style=bold];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_83  [key=2, style=dotted];
m5_65 -> m5_68  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m5_65 -> m5_69  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m5_65 -> m5_71  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m5_69 -> m5_70  [color=red, key=0, style=solid];
m5_69 -> m5_85  [key=2, style=dotted];
m5_70 -> m5_71  [color=red, key=0, style=solid];
m5_70 -> m5_86  [color=red, key=2, style=dotted];
m5_70 -> m5_73  [color=red, key=1, label=performContext, style=dashed];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_68  [key=0, style=solid];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_84  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_75  [color=darkseagreen4, key=1, label=latency, style=dashed];
m5_67 -> m5_82  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_88  [key=2, style=dotted];
m5_73 -> m5_75  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_87  [key=2, style=dotted];
m5_72 -> m5_74  [color=darkseagreen4, key=1, label=duration, style=dashed];
m5_72 -> m5_75  [color=darkseagreen4, key=1, label=duration, style=dashed];
m5_75 -> m5_82  [key=0, style=solid];
m5_75 -> m5_90  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_89  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_77 -> m5_82  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_79 -> m5_82  [key=0, style=solid];
m5_79 -> m5_91  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_91  [key=2, style=dotted];
m5_82 -> m5_55  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_3 -> m5_2  [color=blue, key=0, style=bold];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_7  [color=darkseagreen4, key=1, label="Hangfire.Server.IBackgroundJobPerformer", style=dashed];
m5_4 -> m5_9  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m5_4 -> m5_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_4 -> m5_12  [color=darkseagreen4, key=1, label="Hangfire.Server.IBackgroundJobPerformer", style=dashed];
m5_4 -> m5_13  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m5_4 -> m5_6  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=0, style=solid];
m5_5 -> m5_3  [color=blue, key=0, style=bold];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_22  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m5_20 -> m5_23  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m5_20 -> m5_25  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m5_20 -> m5_26  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m5_20 -> m5_27  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m5_20 -> m5_29  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m5_20 -> m5_32  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m5_20 -> m5_35  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_44  [key=2, style=dotted];
m5_21 -> m5_27  [color=darkseagreen4, key=1, label=connection, style=dashed];
m5_21 -> m5_32  [color=red, key=1, label=connection, style=dashed];
m5_21 -> m5_33  [color=red, key=1, label=connection, style=dashed];
m5_21 -> m5_35  [color=darkseagreen4, key=1, label=connection, style=dashed];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_45  [key=2, style=dotted];
m5_22 -> m5_27  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m5_22 -> m5_30  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m5_22 -> m5_32  [color=red, key=1, label=fetchedJob, style=dashed];
m5_22 -> m5_33  [color=red, key=1, label=fetchedJob, style=dashed];
m5_22 -> m5_35  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m5_22 -> m5_36  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m5_22 -> m5_38  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m5_22 -> m5_41  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_46  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_48  [key=2, style=dotted];
m5_25 -> m5_27  [color=darkseagreen4, key=1, label=linkedCts, style=dashed];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_49  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_50  [key=2, style=dotted];
m5_27 -> m5_51  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_46  [key=2, style=dotted];
m5_32 -> m5_33  [color=red, key=0, style=solid];
m5_32 -> m5_54  [color=red, key=2, style=dotted];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_56  [key=2, style=dotted];
m5_35 -> m5_51  [key=2, style=dotted];
m5_33 -> m5_34  [color=red, key=0, style=solid];
m5_33 -> m5_55  [color=red, key=2, style=dotted];
m5_33 -> m5_35  [color=red, key=1, label=state, style=dashed];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_53  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_39  [key=0, style=solid];
m5_36 -> m5_43  [key=0, style=solid];
m5_36 -> m5_53  [key=2, style=dotted];
m5_38 -> m5_43  [key=0, style=solid];
m5_38 -> m5_53  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_58  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_47  [key=2, style=dotted];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_32  [color=red, key=0, style=solid];
m5_28 -> m5_52  [key=2, style=dotted];
m5_31 -> m5_43  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_36  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_57  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_43 -> m5_20  [color=blue, key=0, style=bold];
m5_92 -> m5_11  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_12  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_13  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_14  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_22  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_26  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_27  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_32  [color=red, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_33  [color=red, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_35  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_60  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m5_92 -> m5_73  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
}
