digraph  {
n11 [label="HangFire.Web.CombinedResourceHandler", span=""];
n0 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", label="Entry HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", span="26-26"];
n1 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", label="_assembly = assembly", span="31-31"];
n2 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", label="_baseNamespace = baseNamespace", span="32-32"];
n3 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", label="_resourceNames = resourceNames", span="33-33"];
n4 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", label="Exit HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", span="26-26"];
n5 [cluster="HangFire.Web.CombinedResourceHandler.WriteResponse()", label="Entry HangFire.Web.CombinedResourceHandler.WriteResponse()", span="36-36"];
n6 [cluster="HangFire.Web.CombinedResourceHandler.WriteResponse()", label=_resourceNames, span="38-38"];
n7 [cluster="HangFire.Web.CombinedResourceHandler.WriteResponse()", label="WriteResource(\r\n                    _assembly,\r\n                    string.Format(''{0}.{1}'', _baseNamespace, resourceName))", span="40-42"];
n8 [cluster="HangFire.Web.CombinedResourceHandler.WriteResponse()", label="Exit HangFire.Web.CombinedResourceHandler.WriteResponse()", span="36-36"];
n9 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n10 [cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", span="50-50"];
m0_34 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="BackgroundJobServer.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m0_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJobServer.cs", label="HangFire.States.ProcessingState", span=""];
m0_6 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundJobServer.cs", label="_pollInterval = pollInterval", span="42-42"];
m0_3 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundJobServer.cs", label="stateMachineFactory == null", span="39-39"];
m0_4 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", color=green, community=0, file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", prediction=0, span="39-39"];
m0_5 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundJobServer.cs", label="_stateMachineFactory = stateMachineFactory", span="41-41"];
m0_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="BackgroundJobServer.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="27-27"];
m0_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="BackgroundJobServer.cs", label="ServerName = serverName", span="29-29"];
m0_33 [cluster="Hangfire.JobStorage.GetConnection()", file="BackgroundJobServer.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m0_19 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m0_20 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.SchedulePoller.ToString()", span="64-64"];
m0_21 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="BackgroundJobServer.cs", label="return ''Schedule Poller'';", span="66-66"];
m0_22 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="BackgroundJobServer.cs", label="Exit Hangfire.Server.SchedulePoller.ToString()", span="64-64"];
m0_36 [cluster="string.IsNullOrEmpty(string)", file="BackgroundJobServer.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_37 [cluster="System.Func<T, TResult>.Invoke(T)", file="BackgroundJobServer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_35 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobServer.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m0_39 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="BackgroundJobServer.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m0_18 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m0_2 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", span="37-37"];
m0_9 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="45-45"];
m0_10 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="!EnqueueNextScheduledJob(context)", span="47-47"];
m0_14 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="context.CancellationToken.WaitHandle.WaitOne(_pollInterval)", span="55-55"];
m0_11 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="_enqueuedCount != 0", span="49-49"];
m0_15 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="_enqueuedCount++", span="60-60"];
m0_12 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", span="51-51"];
m0_13 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="_enqueuedCount = 0", span="52-52"];
m0_16 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="Exit Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="45-45"];
m0_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundJobServer.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m0_40 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="BackgroundJobServer.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m0_38 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="BackgroundJobServer.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m0_17 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="69-69"];
m0_23 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="var connection = context.Storage.GetConnection()", span="71-71"];
m0_28 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="var stateMachine = _stateMachineFactory(context.Storage).Create(connection)", span="84-84"];
m0_24 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="73-73"];
m0_27 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="return false;", span="81-81"];
m0_31 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="return true;", span="92-92"];
m0_32 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="69-69"];
m0_41 [file="BackgroundJobServer.cs", label="Hangfire.Server.SchedulePoller", span=""];
m1_12 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Web.Pages.PerPageSelector.Execute()", span="23-23"];
m1_13 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m1_16 [cluster="HangFire.Tests.HangFireJobActivatorTests.CustomConstructorJob.Perform()", file="DefaultJobPerformanceProcess.cs", label="HangFire.Web.Pages.PerPageSelector", span=""];
m1_17 [cluster="HangFire.Tests.HangFireJobActivatorTests.CustomConstructorJob.Perform()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Tests.HangFireJobActivatorTests.CustomConstructorJob.Perform()", span="38-38"];
m1_14 [cluster="HangFire.Tests.HangFireJobActivatorTests.CustomConstructorJob.CustomConstructorJob(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Tests.HangFireJobActivatorTests.CustomConstructorJob.CustomConstructorJob(string)", span="34-34"];
m1_5 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="DefaultJobPerformanceProcess.cs", label="Write(count == _pager.RecordsPerPage ? ''active'' : null)", span="46-46"];
m1_6 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="DefaultJobPerformanceProcess.cs", label="WriteLiteral(''\'' \r\n                   href=\'''')", span="51-51"];
m1_0 [cluster="HangFire.Tests.HangFireJobActivatorTests.Activate_ReturnsTheJobInstance_WhenTheJobHasDefaultConstructor()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Tests.HangFireJobActivatorTests.Activate_ReturnsTheJobInstance_WhenTheJobHasDefaultConstructor()", span="10-10"];
m1_3 [cluster="HangFire.Tests.HangFireJobActivatorTests.Activate_ReturnsTheJobInstance_WhenTheJobHasDefaultConstructor()", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="Assert.IsNotNull(job)", prediction=1, span="14-14"];
m1_2 [cluster="HangFire.Tests.HangFireJobActivatorTests.Activate_ReturnsTheJobInstance_WhenTheJobHasDefaultConstructor()", file="DefaultJobPerformanceProcess.cs", label="var job = activator.ActivateJob(typeof(DefaultConstructorJob))", span="13-13"];
m1_10 [cluster="HangFire.Tests.HangFireJobActivatorTests.Activate_ThrowsActivationException_WhenTheJobHasNoDefaultConstructor()", file="DefaultJobPerformanceProcess.cs", label="activator.ActivateJob(typeof(CustomConstructorJob))", span="22-22"];
m1_4 [cluster="HangFire.Tests.HangFireJobActivatorTests.Activate_ReturnsTheJobInstance_WhenTheJobHasDefaultConstructor()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Tests.HangFireJobActivatorTests.Activate_ReturnsTheJobInstance_WhenTheJobHasDefaultConstructor()", span="10-10"];
m1_11 [cluster="HangFire.Tests.HangFireJobActivatorTests.Activate_ThrowsActivationException_WhenTheJobHasNoDefaultConstructor()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Tests.HangFireJobActivatorTests.Activate_ThrowsActivationException_WhenTheJobHasNoDefaultConstructor()", span="19-19"];
m1_7 [cluster="Unk.IsNotNull", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.IsNotNull", span=""];
m1_9 [cluster="HangFire.Tests.HangFireJobActivatorTests.Activate_ThrowsActivationException_WhenTheJobHasNoDefaultConstructor()", file="DefaultJobPerformanceProcess.cs", label="var activator = new JobActivator()", span="21-21"];
m1_1 [cluster="HangFire.Tests.HangFireJobActivatorTests.Activate_ReturnsTheJobInstance_WhenTheJobHasDefaultConstructor()", file="DefaultJobPerformanceProcess.cs", label="var activator = new JobActivator()", span="12-12"];
m1_8 [cluster="HangFire.Tests.HangFireJobActivatorTests.Activate_ThrowsActivationException_WhenTheJobHasNoDefaultConstructor()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Tests.HangFireJobActivatorTests.Activate_ThrowsActivationException_WhenTheJobHasNoDefaultConstructor()", span="19-19"];
m1_15 [cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Web.Pager.RecordsPerPageUrl(int)", span="58-58"];
m3_28 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_3 [cluster="Unk.>", file="RecurringJobScheduler.cs", label="Entry Unk.>", span=""];
m3_20 [cluster="Unk.Be", file="RecurringJobScheduler.cs", label="Entry Unk.Be", span=""];
m3_7 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="RecurringJobScheduler.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="27-27"];
m3_29 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m3_15 [cluster="Unk.BeSameAs", file="RecurringJobScheduler.cs", label="Entry Unk.BeSameAs", span=""];
m3_8 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", span="18-18"];
m3_9 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", file="RecurringJobScheduler.cs", label="var exception = new Exception()", span="20-20"];
m3_10 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", file="RecurringJobScheduler.cs", label="var state = new FailedState(exception)", span="21-21"];
m3_11 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", file="RecurringJobScheduler.cs", label="state.Exception.Should().BeSameAs(exception)", span="23-23"];
m3_12 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", span="18-18"];
m3_13 [cluster="System.Exception.Exception()", file="RecurringJobScheduler.cs", label="Entry System.Exception.Exception()", span="0-0"];
m3_16 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="27-27"];
m3_17 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="RecurringJobScheduler.cs", label="var state = new FailedState(new Exception())", span="29-29"];
m3_18 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="RecurringJobScheduler.cs", label="state.StateName.Should().Be(FailedState.Name)", span="31-31"];
m3_19 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="27-27"];
m3_27 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="RecurringJobScheduler.cs", label="Entry HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="37-37"];
m3_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11"];
m3_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="RecurringJobScheduler.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="13-14"];
m3_2 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11"];
m3_4 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="14-14"];
m3_5 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new FailedState(null)", span="14-14"];
m3_6 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="14-14"];
m3_26 [cluster="System.Exception.Exception(string)", file="RecurringJobScheduler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m3_14 [cluster="Unk.Should", file="RecurringJobScheduler.cs", label="Entry Unk.Should", span=""];
m3_21 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", span="35-35"];
m3_22 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="RecurringJobScheduler.cs", label="var state = new FailedState(new Exception(''Message''))", span="37-37"];
m3_25 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", span="35-35"];
m4_32 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SchedulePoller.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m4_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SchedulePoller.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_0 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="32-32"];
m4_1 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="stateMachineFactory == null", span="34-34"];
m4_3 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="_stateMachineFactory = stateMachineFactory", span="36-36"];
m4_4 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="_pollInterval = pollInterval", span="37-37"];
m4_2 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="34-34"];
m4_5 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="32-32"];
m4_31 [cluster="Hangfire.JobStorage.GetConnection()", file="SchedulePoller.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m4_37 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SchedulePoller.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m4_17 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SchedulePoller.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m4_18 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.ToString()", span="59-59"];
m4_19 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="SchedulePoller.cs", label="return ''Schedule Poller'';", span="61-61"];
m4_20 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.ToString()", span="59-59"];
m4_34 [cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_33 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SchedulePoller.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m4_36 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="SchedulePoller.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m4_16 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="SchedulePoller.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m4_7 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="40-40"];
m4_8 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="!EnqueueNextScheduledJob(context)", span="42-42"];
m4_12 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="context.CancellationToken.WaitHandle.WaitOne(_pollInterval)", span="50-50"];
m4_9 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="_enqueuedCount != 0", span="44-44"];
m4_13 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="_enqueuedCount++", span="55-55"];
m4_10 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", span="46-46"];
m4_11 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="_enqueuedCount = 0", span="47-47"];
m4_14 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="40-40"];
m4_35 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SchedulePoller.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m4_15 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="64-64"];
m4_21 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="var connection = context.Storage.GetConnection()", span="66-66"];
m4_22 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="68-68"];
m4_23 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="71-72"];
m4_24 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="String.IsNullOrEmpty(jobId)", span="74-74"];
m4_28 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="SchedulePoller.cs", label="var stateMachine = _stateMachineFactory(context.Storage).Create(connection)", prediction=2, span="84-84"];
m4_25 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="return false;", span="76-76"];
m4_27 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="80-83"];
m4_29 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="return true;", span="87-87"];
m4_30 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="64-64"];
m4_38 [file="SchedulePoller.cs", label="Hangfire.Server.SchedulePoller", span=""];
m6_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachineFactory.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_9 [cluster="Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", span="27-27"];
m6_18 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="33-33"];
m6_17 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="StateMachineFactory.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", span="32-32"];
m6_8 [cluster="Hangfire.States.StateHandlerCollection.StateHandlerCollection()", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
m6_10 [cluster="Hangfire.JobStorage.GetStateHandlers()", file="StateMachineFactory.cs", label="Entry Hangfire.JobStorage.GetStateHandlers()", span="63-63"];
m6_0 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25"];
m6_1 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="storage == null", span="27-27"];
m6_5 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="_handlers.AddRange(storage.GetStateHandlers())", span="31-31"];
m6_2 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''storage'');", span="27-27"];
m6_3 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="_handlers = new StateHandlerCollection()", span="29-29"];
m6_4 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="_handlers.AddRange(GlobalStateHandlers.Handlers)", span="30-30"];
m6_6 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs", label="Exit Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25"];
m6_11 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="34-34"];
m6_12 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="connection == null", span="36-36"];
m6_15 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="return new StateMachine(connection, process);", span="39-39"];
m6_13 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''connection'');", span="36-36"];
m6_14 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="var process = new DefaultStateChangeProcess(_handlers)", span="38-38"];
m6_16 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Exit Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="34-34"];
m6_19 [file="StateMachineFactory.cs", label="Hangfire.States.StateMachineFactory", span=""];
m7_50 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="Entry Hangfire.Server.Worker.ToString()", span="123-123"];
m7_51 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="return ''Worker #'' + _context.WorkerNumber;", span="125-125"];
m7_52 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="Exit Hangfire.Server.Worker.ToString()", span="123-123"];
m7_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Worker.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_73 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m7_77 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="Worker.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m7_36 [cluster="Hangfire.JobStorage.GetConnection()", file="Worker.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m7_45 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, Hangfire.Server.BackgroundProcessContext)", span="32-32"];
m7_48 [cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="Worker.cs", label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="130-130"];
m7_39 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="Worker.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m7_40 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m7_0 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", span="35-35"];
m7_1 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="context == null", span="40-40"];
m7_3 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="process == null", span="41-41"];
m7_5 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="stateMachineFactory == null", span="42-42"];
m7_7 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="_context = context", span="44-44"];
m7_8 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="_process = process", span="45-45"];
m7_9 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="_stateMachineFactory = stateMachineFactory", span="46-46"];
m7_2 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="throw new ArgumentNullException(''context'');", span="40-40"];
m7_4 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="throw new ArgumentNullException(''process'');", span="41-41"];
m7_6 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="42-42"];
m7_10 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", span="35-35"];
m7_75 [cluster="System.Diagnostics.Stopwatch.Stop()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m7_76 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="Worker.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28"];
m7_70 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m7_38 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="Worker.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m7_44 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="Worker.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m7_49 [cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="Worker.cs", label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25"];
m7_46 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="128-128"];
m7_53 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var jobData = connection.GetJobData(jobId)", span="132-132"];
m7_57 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var performContext = new PerformContext(\r\n                    _context, connection, jobId, jobData.Job, jobData.CreatedAt, token)", span="144-145"];
m7_54 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="jobData == null", span="133-133"];
m7_56 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="jobData.EnsureLoaded()", span="142-142"];
m7_58 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="147-147"];
m7_60 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var result = _process.Run(performContext, jobData.Job)", span="150-150"];
m7_55 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return null;", span="139-139"];
m7_59 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var duration = Stopwatch.StartNew()", span="148-148"];
m7_62 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="153-153"];
m7_61 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="duration.Stop()", span="151-151"];
m7_63 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label=OperationCanceledException, span="155-155"];
m7_64 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="throw;", span="157-157"];
m7_65 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label=JobPerformanceException, span="159-159"];
m7_66 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="161-164"];
m7_67 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label=Exception, span="166-166"];
m7_68 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal Hangfire Server exception occurred. Please, report it to Hangfire developers.''\r\n                };", span="168-171"];
m7_69 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Exit Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="128-128"];
m7_72 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", span="35-35"];
m7_74 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="Worker.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="20-20"];
m7_47 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="Worker.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m7_43 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="26-26"];
m7_37 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m7_12 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="49-49"];
m7_13 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var connection = context.Storage.GetConnection()", span="51-51"];
m7_14 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var fetchedJob = connection.FetchNextJob(_context.Queues, context.CancellationToken)", span="52-52"];
m7_15 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="54-54"];
m7_18 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="61-63"];
m7_19 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var processingState = new ProcessingState(context.ServerId, _context.WorkerNumber)", span="65-65"];
m7_21 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="75-75"];
m7_24 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var jobCancellationToken = new ServerJobCancellationToken(\r\n                        fetchedJob.JobId, connection, _context, context)", span="88-89"];
m7_25 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var state = PerformJob(fetchedJob.JobId, connection, jobCancellationToken)", span="91-91"];
m7_20 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="!stateMachine.ChangeState(\r\n                            fetchedJob.JobId,\r\n                            processingState,\r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token)", span="67-71"];
m7_22 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="78-78"];
m7_27 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="stateMachine.ChangeState(fetchedJob.JobId, state, new[] { ProcessingState.StateName })", span="96-96"];
m7_28 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="104-104"];
m7_30 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="111-111"];
m7_33 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.Requeue()", span="117-117"];
m7_17 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="60-60"];
m7_23 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="return;", span="79-79"];
m7_26 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="state != null", span="93-93"];
m7_29 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label=JobAbortedException, span="109-109"];
m7_31 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label=Exception, span="113-113"];
m7_32 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Logger.DebugException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="115-115"];
m7_34 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="throw;", span="118-118"];
m7_35 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="49-49"];
m7_71 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="Worker.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m7_42 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="Worker.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m7_41 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m7_78 [file="Worker.cs", label="Hangfire.Server.Worker", span=""];
n11 -> n6  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
n11 -> n7  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m0_8 -> m0_4  [color=green, key=1, label="HangFire.States.ProcessingState", style=dashed];
m0_9 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m0_41 -> m0_10  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m0_41 -> m0_11  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m0_41 -> m0_12  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m0_41 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m0_41 -> m0_15  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m1_16 -> m1_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m1_16 -> m1_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m1_16 -> m1_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m1_16 -> m1_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m1_16 -> m1_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m1_16 -> m1_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m1_16 -> m1_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m1_3 -> m1_5  [color=green, key=1, label=count, style=dashed];
m1_3 -> m1_7  [color=green, key=1, label=count, style=dashed];
m3_9 -> m3_11  [color=darkseagreen4, key=1, label=exception, style=dashed];
m3_1 -> m3_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_7 -> m4_12  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_38 -> m4_8  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m4_38 -> m4_9  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m4_38 -> m4_10  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m4_38 -> m4_12  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m4_38 -> m4_13  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m6_11 -> m6_15  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m6_19 -> m6_4  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachineFactory", style=dashed];
m6_19 -> m6_5  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachineFactory", style=dashed];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m7_0 -> m7_5  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m7_53 -> m7_56  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m7_58 -> m7_62  [color=darkseagreen4, key=1, label=latency, style=dashed];
m7_60 -> m7_62  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_59 -> m7_61  [color=darkseagreen4, key=1, label=duration, style=dashed];
m7_59 -> m7_62  [color=darkseagreen4, key=1, label=duration, style=dashed];
m7_12 -> m7_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m7_12 -> m7_21  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m7_14 -> m7_20  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m7_14 -> m7_22  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m7_14 -> m7_27  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m7_14 -> m7_28  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m7_14 -> m7_30  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m7_14 -> m7_33  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m7_18 -> m7_20  [color=darkseagreen4, key=1, label=linkedCts, style=dashed];
m7_25 -> m7_27  [color=darkseagreen4, key=1, label=state, style=dashed];
m7_78 -> m7_51  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
}
