digraph  {
n195 [label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", span=""];
n0 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13"];
n1 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", label="_client = new Mock<IBackgroundJobClient>()", span="15-15"];
n2 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", label="_state = new Mock<State>()", span="16-16"];
n4 [cluster="Mock<IBackgroundJobClient>.cstr", label="Entry Mock<IBackgroundJobClient>.cstr", span=""];
n3 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13"];
n5 [cluster="Mock<State>.cstr", label="Entry Mock<State>.cstr", span=""];
n6 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="20-20"];
n7 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object))", span="22-24"];
n8 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", label="Assert.Equal(''client'', exception.ParamName)", span="26-26"];
n10 [cluster="Unk.>", label="Entry Unk.>", span=""];
n12 [cluster="lambda expression", label="Entry lambda expression", span="23-24"];
n9 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="20-20"];
n11 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n13 [cluster="lambda expression", label="BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object)", span="23-24"];
n14 [cluster="lambda expression", label="Exit lambda expression", span="23-24"];
n15 [cluster="Unk.Create", label="Entry Unk.Create", span=""];
n16 [cluster="lambda expression", label="Entry lambda expression", span="24-24"];
n17 [cluster="lambda expression", label="StaticMethod()", span="24-24"];
n18 [cluster="lambda expression", label="Exit lambda expression", span="24-24"];
n19 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172"];
n20 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="30-30"];
n21 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", label="_client.Object.Create(() => StaticMethod(), _state.Object)", span="32-32"];
n22 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="34-34"];
n25 [cluster="lambda expression", label="Entry lambda expression", span="32-32"];
n23 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="30-30"];
n24 [cluster="Unk.Verify", label="Entry Unk.Verify", span=""];
n28 [cluster="lambda expression", label="Entry lambda expression", span="34-34"];
n26 [cluster="lambda expression", label="StaticMethod()", span="32-32"];
n27 [cluster="lambda expression", label="Exit lambda expression", span="32-32"];
n29 [cluster="lambda expression", label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="34-34"];
n30 [cluster="lambda expression", label="Exit lambda expression", span="34-34"];
n31 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38"];
n32 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object))", span="40-42"];
n33 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", label="Assert.Equal(''client'', exception.ParamName)", span="44-44"];
n35 [cluster="lambda expression", label="Entry lambda expression", span="41-42"];
n34 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38"];
n36 [cluster="lambda expression", label="BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object)", span="41-42"];
n37 [cluster="lambda expression", label="Exit lambda expression", span="41-42"];
n38 [cluster="lambda expression", label="Entry lambda expression", span="42-42"];
n39 [cluster="lambda expression", label="x.InstanceMethod()", span="42-42"];
n40 [cluster="lambda expression", label="Exit lambda expression", span="42-42"];
n41 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176"];
n42 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48"];
n43 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", label="_client.Object.Create<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), _state.Object)", span="50-50"];
n44 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="52-52"];
n46 [cluster="lambda expression", label="Entry lambda expression", span="50-50"];
n45 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48"];
n49 [cluster="lambda expression", label="Entry lambda expression", span="52-52"];
n47 [cluster="lambda expression", label="x.InstanceMethod()", span="50-50"];
n48 [cluster="lambda expression", label="Exit lambda expression", span="50-50"];
n50 [cluster="lambda expression", label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="52-52"];
n51 [cluster="lambda expression", label="Exit lambda expression", span="52-52"];
n52 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56"];
n53 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod()))", span="58-60"];
n54 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", label="Assert.Equal(''client'', exception.ParamName)", span="62-62"];
n56 [cluster="lambda expression", label="Entry lambda expression", span="59-60"];
n55 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56"];
n57 [cluster="lambda expression", label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod())", span="59-60"];
n58 [cluster="lambda expression", label="Exit lambda expression", span="59-60"];
n59 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35"];
n60 [cluster="lambda expression", label="Entry lambda expression", span="60-60"];
n61 [cluster="lambda expression", label="StaticMethod()", span="60-60"];
n62 [cluster="lambda expression", label="Exit lambda expression", span="60-60"];
n63 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66"];
n64 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", label="_client.Object.Enqueue(() => StaticMethod())", span="68-68"];
n65 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="70-70"];
n67 [cluster="Unk.Enqueue", label="Entry Unk.Enqueue", span=""];
n68 [cluster="lambda expression", label="Entry lambda expression", span="68-68"];
n66 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66"];
n71 [cluster="lambda expression", label="Entry lambda expression", span="70-70"];
n69 [cluster="lambda expression", label="StaticMethod()", span="68-68"];
n70 [cluster="lambda expression", label="Exit lambda expression", span="68-68"];
n72 [cluster="lambda expression", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="70-70"];
n73 [cluster="lambda expression", label="Exit lambda expression", span="70-70"];
n74 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74"];
n75 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod()))", span="76-78"];
n76 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", label="Assert.Equal(''client'', exception.ParamName)", span="80-80"];
n78 [cluster="lambda expression", label="Entry lambda expression", span="77-78"];
n77 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74"];
n79 [cluster="lambda expression", label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod())", span="77-78"];
n80 [cluster="lambda expression", label="Exit lambda expression", span="77-78"];
n81 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53"];
n82 [cluster="lambda expression", label="Entry lambda expression", span="78-78"];
n83 [cluster="lambda expression", label="x.InstanceMethod()", span="78-78"];
n84 [cluster="lambda expression", label="Exit lambda expression", span="78-78"];
n85 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84"];
n86 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod())", span="86-86"];
n87 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="88-88"];
n89 [cluster="lambda expression", label="Entry lambda expression", span="86-86"];
n88 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84"];
n92 [cluster="lambda expression", label="Entry lambda expression", span="88-88"];
n90 [cluster="lambda expression", label="x.InstanceMethod()", span="86-86"];
n91 [cluster="lambda expression", label="Exit lambda expression", span="86-86"];
n93 [cluster="lambda expression", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="88-88"];
n94 [cluster="lambda expression", label="Exit lambda expression", span="88-88"];
n95 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92"];
n96 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical''))", span="94-96"];
n97 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", label="Assert.Equal(''client'', exception.ParamName)", span="98-98"];
n99 [cluster="lambda expression", label="Entry lambda expression", span="95-96"];
n98 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92"];
n100 [cluster="lambda expression", label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical'')", span="95-96"];
n101 [cluster="lambda expression", label="Exit lambda expression", span="95-96"];
n102 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", span="71-71"];
n103 [cluster="lambda expression", label="Entry lambda expression", span="96-96"];
n104 [cluster="lambda expression", label="StaticMethod()", span="96-96"];
n105 [cluster="lambda expression", label="Exit lambda expression", span="96-96"];
n106 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102"];
n107 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", label="_client.Object.Enqueue(() => StaticMethod(), ''critical'')", span="104-104"];
n108 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="106-108"];
n110 [cluster="lambda expression", label="Entry lambda expression", span="104-104"];
n109 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102"];
n113 [cluster="lambda expression", label="Entry lambda expression", span="106-108"];
n111 [cluster="lambda expression", label="StaticMethod()", span="104-104"];
n112 [cluster="lambda expression", label="Exit lambda expression", span="104-104"];
n114 [cluster="lambda expression", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="106-108"];
n115 [cluster="lambda expression", label="Exit lambda expression", span="106-108"];
n116 [cluster="lambda expression", label="Entry lambda expression", span="108-108"];
n117 [cluster="lambda expression", label="state.Queue == ''critical''", span="108-108"];
n118 [cluster="lambda expression", label="Exit lambda expression", span="108-108"];
n119 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112"];
n120 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical''))", span="114-116"];
n121 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", label="Assert.Equal(''client'', exception.ParamName)", span="118-118"];
n123 [cluster="lambda expression", label="Entry lambda expression", span="115-116"];
n122 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112"];
n124 [cluster="lambda expression", label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical'')", span="115-116"];
n125 [cluster="lambda expression", label="Exit lambda expression", span="115-116"];
n126 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90"];
n127 [cluster="lambda expression", label="Entry lambda expression", span="116-116"];
n128 [cluster="lambda expression", label="x.InstanceMethod()", span="116-116"];
n129 [cluster="lambda expression", label="Exit lambda expression", span="116-116"];
n130 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122"];
n131 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), ''critical'')", span="124-124"];
n132 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="126-128"];
n134 [cluster="lambda expression", label="Entry lambda expression", span="124-124"];
n133 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122"];
n137 [cluster="lambda expression", label="Entry lambda expression", span="126-128"];
n135 [cluster="lambda expression", label="x.InstanceMethod()", span="124-124"];
n136 [cluster="lambda expression", label="Exit lambda expression", span="124-124"];
n138 [cluster="lambda expression", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="126-128"];
n139 [cluster="lambda expression", label="Exit lambda expression", span="126-128"];
n140 [cluster="lambda expression", label="Entry lambda expression", span="128-128"];
n141 [cluster="lambda expression", label="state.Queue == ''critical''", span="128-128"];
n142 [cluster="lambda expression", label="Exit lambda expression", span="128-128"];
n143 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132"];
n144 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1)))", span="134-136"];
n145 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", label="Assert.Equal(''client'', exception.ParamName)", span="138-138"];
n147 [cluster="lambda expression", label="Entry lambda expression", span="135-136"];
n146 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132"];
n148 [cluster="lambda expression", label="BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1))", span="135-136"];
n149 [cluster="lambda expression", label="Exit lambda expression", span="135-136"];
n150 [cluster="System.TimeSpan.FromDays(double)", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
n151 [cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Entry HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106"];
n152 [cluster="lambda expression", label="Entry lambda expression", span="136-136"];
n153 [cluster="lambda expression", label="StaticMethod()", span="136-136"];
n154 [cluster="lambda expression", label="Exit lambda expression", span="136-136"];
n155 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142"];
n156 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", label="_client.Object.Schedule(() => StaticMethod(), TimeSpan.FromDays(1))", span="144-144"];
n157 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="146-148"];
n159 [cluster="Unk.Schedule", label="Entry Unk.Schedule", span=""];
n160 [cluster="lambda expression", label="Entry lambda expression", span="144-144"];
n158 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142"];
n163 [cluster="lambda expression", label="Entry lambda expression", span="146-148"];
n161 [cluster="lambda expression", label="StaticMethod()", span="144-144"];
n162 [cluster="lambda expression", label="Exit lambda expression", span="144-144"];
n164 [cluster="lambda expression", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="146-148"];
n165 [cluster="lambda expression", label="Exit lambda expression", span="146-148"];
n166 [cluster="lambda expression", label="Entry lambda expression", span="148-148"];
n167 [cluster="lambda expression", label="state.EnqueueAt > DateTime.UtcNow", span="148-148"];
n168 [cluster="lambda expression", label="Exit lambda expression", span="148-148"];
n169 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152"];
n170 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1)))", span="154-156"];
n171 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", label="Assert.Equal(''client'', exception.ParamName)", span="158-158"];
n173 [cluster="lambda expression", label="Entry lambda expression", span="155-156"];
n172 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152"];
n174 [cluster="lambda expression", label="BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="155-156"];
n175 [cluster="lambda expression", label="Exit lambda expression", span="155-156"];
n176 [cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Entry HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123"];
n177 [cluster="lambda expression", label="Entry lambda expression", span="156-156"];
n178 [cluster="lambda expression", label="x.InstanceMethod()", span="156-156"];
n179 [cluster="lambda expression", label="Exit lambda expression", span="156-156"];
n180 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162"];
n181 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", label="_client.Object.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="164-165"];
n182 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="167-169"];
n184 [cluster="lambda expression", label="Entry lambda expression", span="165-165"];
n183 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162"];
n187 [cluster="lambda expression", label="Entry lambda expression", span="167-169"];
n185 [cluster="lambda expression", label="x.InstanceMethod()", span="165-165"];
n186 [cluster="lambda expression", label="Exit lambda expression", span="165-165"];
n188 [cluster="lambda expression", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="167-169"];
n189 [cluster="lambda expression", label="Exit lambda expression", span="167-169"];
n190 [cluster="lambda expression", label="Entry lambda expression", span="169-169"];
n191 [cluster="lambda expression", label="state.EnqueueAt > DateTime.UtcNow", span="169-169"];
n192 [cluster="lambda expression", label="Exit lambda expression", span="169-169"];
n193 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172"];
n194 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176"];
m0_3 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", file="DeletedState.cs", label="Entry Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", span="14-14"];
m0_4 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", file="DeletedState.cs", label="Exit Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", span="14-14"];
m0_0 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="DeletedState.cs", label="Entry Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", span="9-9"];
m0_1 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="DeletedState.cs", label="AutomaticMigrationsEnabled = false", span="11-11"];
m0_2 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="DeletedState.cs", label="Exit Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", span="9-9"];
m1_16 [cluster="Mock<IStateMachineFactory>.cstr", file="DeletedStateFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m1_15 [cluster="Mock<IState>.cstr", file="DeletedStateFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m1_27 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", span="145-145"];
m1_28 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m1_29 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="DeletedStateFacts.cs", label="var filter = CreateFilter()", span="44-44"];
m1_30 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="DeletedStateFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => filter.OnCreating(null))", span="46-47"];
m1_31 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m1_20 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m1_53 [cluster="Unk.DoesNotThrow", file="DeletedStateFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m1_49 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", span="64-64"];
m1_50 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="DeletedStateFacts.cs", label="var filter = CreateFilter()", span="66-66"];
m1_51 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="DeletedStateFacts.cs", label="Assert.DoesNotThrow(() => filter.OnCreated(null))", span="68-68"];
m1_52 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", span="64-64"];
m1_33 [cluster="Unk.>", file="DeletedStateFacts.cs", label="Entry Unk.>", span=""];
m1_19 [cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="DeletedStateFacts.cs", label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26"];
m1_18 [cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="DeletedStateFacts.cs", label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24"];
m1_37 [cluster="HangFire.PreserveCultureAttribute.OnCreating(HangFire.Client.CreatingContext)", file="DeletedStateFacts.cs", label="Entry HangFire.PreserveCultureAttribute.OnCreating(HangFire.Client.CreatingContext)", span="28-28"];
m1_57 [cluster="HangFire.PreserveCultureAttribute.OnCreated(HangFire.Client.CreatedContext)", file="DeletedStateFacts.cs", label="Entry HangFire.PreserveCultureAttribute.OnCreated(HangFire.Client.CreatedContext)", span="38-38"];
m1_58 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", span="72-72"];
m1_59 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="DeletedStateFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns(''\''ru-RU\'''')", span="74-74"];
m1_60 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="DeletedStateFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns(''\''ru-RU\'''')", span="75-75"];
m1_0 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="22-22"];
m1_1 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="24-24"];
m1_2 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="var job = Job.FromExpression(() => Sample())", span="25-25"];
m1_3 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="var state = new Mock<IState>()", span="26-26"];
m1_5 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="var createContext = new CreateContext(\r\n                _connection.Object, stateMachineFactory.Object, job, state.Object)", span="29-30"];
m1_9 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="var performContext = new PerformContext(workerContext.Object, _connection.Object, JobId, job)", span="36-36"];
m1_4 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="27-27"];
m1_6 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="_creatingContext = new CreatingContext(createContext)", span="31-31"];
m1_7 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="_createdContext = new CreatedContext(createContext, false, null)", span="32-32"];
m1_8 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="var workerContext = new WorkerContextMock()", span="34-34"];
m1_10 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="_performingContext = new PerformingContext(performContext)", span="37-37"];
m1_11 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="_performedContext = new PerformedContext(performContext, false, null)", span="38-38"];
m1_12 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="22-22"];
m1_38 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", span="51-51"];
m1_39 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="DeletedStateFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="53-53"];
m1_40 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="DeletedStateFacts.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="54-54"];
m1_41 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="DeletedStateFacts.cs", label="var filter = CreateFilter()", span="56-56"];
m1_42 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="DeletedStateFacts.cs", label="filter.OnCreating(_creatingContext)", span="57-57"];
m1_43 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="DeletedStateFacts.cs", label="Assert.Equal(''ru-RU'', _creatingContext.GetJobParameter<string>(''CurrentCulture''))", span="59-59"];
m1_44 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="DeletedStateFacts.cs", label="Assert.Equal(''ru-RU'', _creatingContext.GetJobParameter<string>(''CurrentUICulture''))", span="60-60"];
m1_45 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", span="51-51"];
m1_23 [cluster="HangFire.Server.PerformedContext.PerformedContext(HangFire.Server.PerformContext, bool, System.Exception)", file="DeletedStateFacts.cs", label="Entry HangFire.Server.PerformedContext.PerformedContext(HangFire.Server.PerformContext, bool, System.Exception)", span="26-26"];
m1_32 [cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", span="147-147"];
m1_68 [cluster="Unk.Setup", file="DeletedStateFacts.cs", label="Entry Unk.Setup", span=""];
m1_22 [cluster="HangFire.Server.PerformingContext.PerformingContext(HangFire.Server.PerformContext)", file="DeletedStateFacts.cs", label="Entry HangFire.Server.PerformingContext.PerformingContext(HangFire.Server.PerformContext)", span="24-24"];
m1_71 [cluster="lambda expression", file="DeletedStateFacts.cs", label="Entry lambda expression", span="74-74"];
m1_24 [cluster="lambda expression", file="DeletedStateFacts.cs", label="Entry lambda expression", span="25-25"];
m1_25 [cluster="lambda expression", file="DeletedStateFacts.cs", label="Sample()", span="25-25"];
m1_26 [cluster="lambda expression", file="DeletedStateFacts.cs", label="Exit lambda expression", span="25-25"];
m1_35 [cluster="lambda expression", file="DeletedStateFacts.cs", label="filter.OnCreating(null)", span="47-47"];
m1_34 [cluster="lambda expression", file="DeletedStateFacts.cs", label="Entry lambda expression", span="47-47"];
m1_36 [cluster="lambda expression", file="DeletedStateFacts.cs", label="Exit lambda expression", span="47-47"];
m1_55 [cluster="lambda expression", file="DeletedStateFacts.cs", label="filter.OnCreated(null)", span="68-68"];
m1_54 [cluster="lambda expression", file="DeletedStateFacts.cs", label="Entry lambda expression", span="68-68"];
m1_56 [cluster="lambda expression", file="DeletedStateFacts.cs", label="Exit lambda expression", span="68-68"];
m1_17 [cluster="CreateContext.cstr", file="DeletedStateFacts.cs", label="Entry CreateContext.cstr", span=""];
m1_47 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="DeletedStateFacts.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m1_14 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DeletedStateFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m1_69 [cluster="Unk.Returns", file="DeletedStateFacts.cs", label="Entry Unk.Returns", span=""];
m1_46 [cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="DeletedStateFacts.cs", label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0"];
m1_13 [cluster="Mock<IStorageConnection>.cstr", file="DeletedStateFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m1_21 [cluster="PerformContext.cstr", file="DeletedStateFacts.cs", label="Entry PerformContext.cstr", span=""];
m1_140 [file="DeletedStateFacts.cs", label="HangFire.Core.Tests.PreserveCultureAttributeFacts", span=""];
m1_141 [file="DeletedStateFacts.cs", label=filter, span=""];
m1_142 [file="DeletedStateFacts.cs", label=filter, span=""];
m1_143 [file="DeletedStateFacts.cs", label=filter, span=""];
m4_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FailedJobsPage.generated.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_0 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedJobsPage.generated.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="27-27"];
m4_1 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedJobsPage.generated.cs", label="exception == null", span="29-29"];
m4_3 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedJobsPage.generated.cs", label="Exception = exception", span="31-31"];
m4_2 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedJobsPage.generated.cs", label="throw new ArgumentNullException(''exception'');", span="29-29"];
m4_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedJobsPage.generated.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="27-27"];
m4_12 [cluster="System.Exception.ToString()", file="FailedJobsPage.generated.cs", label="Entry System.Exception.ToString()", span="0-0"];
m4_6 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="FailedJobsPage.generated.cs", label="Entry HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="37-37"];
m4_7 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="FailedJobsPage.generated.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ExceptionType'', Exception.GetType().FullName },\r\n                    { ''ExceptionMessage'', Exception.Message },\r\n                    { ''ExceptionDetails'', Exception.ToString() }\r\n                };", span="39-45"];
m4_8 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="FailedJobsPage.generated.cs", label="Exit HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="37-37"];
m4_10 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m4_11 [cluster="System.Exception.GetType()", file="FailedJobsPage.generated.cs", label="Entry System.Exception.GetType()", span="0-0"];
m4_13 [file="FailedJobsPage.generated.cs", label="HangFire.States.FailedState", span=""];
m5_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FailedState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_0 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m5_1 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="exception == null", span="28-28"];
m5_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="Exception = exception", span="31-31"];
m5_2 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="throw new ArgumentNullException(''exception'');", span="28-28"];
m5_3 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="FailedAt = DateTime.UtcNow", span="30-30"];
m5_5 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m5_13 [cluster="System.Exception.ToString()", file="FailedState.cs", label="Entry System.Exception.ToString()", span="0-0"];
m5_7 [cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m5_8 [cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="FailedState.cs", label="1: return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="44-50"];
m5_9 [cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs", label="Exit HangFire.States.FailedState.SerializeData()", span="42-42"];
m5_11 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="FailedState.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m5_12 [cluster="System.Exception.GetType()", file="FailedState.cs", label="Entry System.Exception.GetType()", span="0-0"];
m5_14 [file="FailedState.cs", label="HangFire.States.FailedState", span=""];
m6_23 [cluster="System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime, System.TimeZoneInfo)", file="FailedStateFacts.cs", label="Entry System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime, System.TimeZoneInfo)", span="0-0"];
m6_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FailedStateFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_24 [cluster="Unk.GetNextOccurrences", file="FailedStateFacts.cs", label="Entry Unk.GetNextOccurrences", span=""];
m6_16 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="FailedStateFacts.cs", label="Entry Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="50-50"];
m6_17 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="FailedStateFacts.cs", label="lastInstant.HasValue && lastInstant.Value.Kind != DateTimeKind.Utc", span="52-52"];
m6_19 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="FailedStateFacts.cs", label="var baseTime = lastInstant ?? NowInstant.AddSeconds(-1)", span="57-57"];
m6_18 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="FailedStateFacts.cs", label="throw new ArgumentException(''Only DateTime values in UTC should be passed.'', ''lastInstant'');", span="54-54"];
m6_20 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="FailedStateFacts.cs", label="var endTime = NowInstant.AddSeconds(1)", span="58-58"];
m6_21 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="FailedStateFacts.cs", label="return _schedule\r\n                .GetNextOccurrences(\r\n                    TimeZoneInfo.ConvertTimeFromUtc(baseTime, _timeZone),\r\n                    TimeZoneInfo.ConvertTimeFromUtc(endTime, _timeZone))\r\n                .Select(x => TimeZoneInfo.ConvertTimeToUtc(x, _timeZone))\r\n                .ToList();", span="60-65"];
m6_22 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="FailedStateFacts.cs", label="Exit Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="50-50"];
m6_11 [cluster="System.ArgumentException.ArgumentException(string, string)", file="FailedStateFacts.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m6_15 [cluster="Unk.ConvertTime", file="FailedStateFacts.cs", label="Entry Unk.ConvertTime", span=""];
m6_26 [cluster="Unk.ToList", file="FailedStateFacts.cs", label="Entry Unk.ToList", span=""];
m6_12 [cluster="System.DateTime.AddSeconds(double)", file="FailedStateFacts.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m6_13 [cluster="System.TimeZoneInfo.ConvertTime(System.DateTime, System.TimeZoneInfo, System.TimeZoneInfo)", file="FailedStateFacts.cs", label="Entry System.TimeZoneInfo.ConvertTime(System.DateTime, System.TimeZoneInfo, System.TimeZoneInfo)", span="0-0"];
m6_14 [cluster="Unk.GetNextOccurrence", file="FailedStateFacts.cs", label="Entry Unk.GetNextOccurrence", span=""];
m6_30 [cluster="Unk.ConvertTimeToUtc", file="FailedStateFacts.cs", label="Entry Unk.ConvertTimeToUtc", span=""];
m6_27 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="64-64"];
m6_28 [cluster="lambda expression", file="FailedStateFacts.cs", label="TimeZoneInfo.ConvertTimeToUtc(x, _timeZone)", span="64-64"];
m6_29 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="64-64"];
m6_0 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="Entry Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", span="29-29"];
m6_1 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="schedule == null", span="31-31"];
m6_3 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="nowInstant.Kind != DateTimeKind.Utc", span="32-32"];
m6_5 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="_timeZone = timeZone", span="37-37"];
m6_6 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="_schedule = schedule", span="38-38"];
m6_7 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="NowInstant = nowInstant.AddSeconds(-nowInstant.Second)", span="40-40"];
m6_2 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="throw new ArgumentNullException(''schedule'');", span="31-31"];
m6_4 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="throw new ArgumentException(''Only DateTime values in UTC should be passed.'', ''nowInstant'');", span="34-34"];
m6_8 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="NextInstant = TimeZoneInfo.ConvertTime(\r\n                _schedule.GetNextOccurrence(TimeZoneInfo.ConvertTime(NowInstant, TimeZoneInfo.Utc, _timeZone)),\r\n                _timeZone,\r\n                TimeZoneInfo.Utc)", span="41-44"];
m6_9 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="FailedStateFacts.cs", label="Exit Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", span="29-29"];
m6_25 [cluster="Unk.Select", file="FailedStateFacts.cs", label="Entry Unk.Select", span=""];
m6_31 [file="FailedStateFacts.cs", label="Hangfire.Server.ScheduleInstant", span=""];
m7_54 [cluster="HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", span="30-30"];
m7_55 [cluster="HangFire.Web.RazorPage.Write(object)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m7_61 [cluster="string.Format(string, object)", file="FetchedJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m7_52 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m7_50 [cluster="Unk.TryParse", file="FetchedJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m7_45 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m7_0 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62"];
m7_1 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\n'')", span="66-66"];
m7_2 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Layout = new LayoutPage\n        {\n            Title = Queue.ToUpperInvariant(),\n            Subtitle = ''Fetched jobs'',\n            Breadcrumbs = new Dictionary<string, string>\n                {\n                    { ''Queues'', Request.LinkTo(''/queues'') },\n                    { Queue.ToUpperInvariant(), Request.LinkTo(''/queues/'' + Queue) }\n                },\n            BreadcrumbsTitle = ''Fetched jobs'',\n        }", span="80-90"];
m7_3 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="int from, perPage", span="92-92"];
m7_4 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="94-94"];
m7_5 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="95-95"];
m7_7 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Pager pager = new Pager(from, perPage, monitor.FetchedCount(Queue))\n    {\n        BasePageUrl = Request.LinkTo(''/queues/fetched/'' + Queue)\n    }", span="98-101"];
m7_6 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="97-97"];
m7_8 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="JobList<FetchedJobDto> fetchedJobs = monitor\n        .FetchedJobs(Queue, pager.FromRecord, pager.RecordsPerPage)", span="103-104"];
m7_10 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="115-115"];
m7_17 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="174-174"];
m7_43 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="344-344"];
m7_9 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\n'')", span="110-110"];
m7_19 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label=fetchedJobs, span="200-200"];
m7_11 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        The queue is empty.\n    </div>\n'')", span="121-121"];
m7_12 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="133-135"];
m7_13 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/enqueued/requeue''))", span="140-140"];
m7_14 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-repeat''''></span>\n                Requeue jobs\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="145-152"];
m7_15 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/enqueued/delete''))", span="157-157"];
m7_16 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="162-169"];
m7_18 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th class=''''min-width''''>State</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Fetched</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="179-195"];
m7_20 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover\''>\n                        <'' +\r\n''td>\n                            <input type=\''checkbox\'' class=\''js-jobs-list-check'' +\r\n''box\'' name=\''jobs[]\'' value=\'''')", span="206-208"];
m7_42 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="333-333"];
m7_21 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(job.Key)", span="213-213"];
m7_22 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\'' />\n                        </td>\n                        <td class=\''min-width\''>'' +\r\n''\n                            <a href=\'''')", span="218-219"];
m7_23 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="224-224"];
m7_24 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>'')", span="229-229"];
m7_25 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="234-234"];
m7_26 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''</a>\n                        </td>\n                        <td class=\''min-width\''>'' +\r\n''\n                            <span class=\''label label-default\'' style=\'''')", span="239-240"];
m7_27 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="245-245"];
m7_28 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="250-250"];
m7_29 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(job.Value.State)", span="255-255"];
m7_30 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\n                            </span>\n                        </td>\n              '' +\r\n''          <td>\n                            <a class=\''job-method\'' href=\'''')", span="260-261"];
m7_31 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="266-266"];
m7_32 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="271-271"];
m7_33 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="276-276"];
m7_34 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\n                            </a>\n                        </td>\n                 '' +\r\n''       <td class=\''align-right\''>\n'')", span="281-282"];
m7_35 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="job.Value.FetchedAt.HasValue", span="287-287"];
m7_36 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="293-293"];
m7_41 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="323-323"];
m7_37 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs", label="1: Write(JobHelper.ToStringTimestamp(job.Value.FetchedAt.Value))", span="298-298"];
m7_38 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>\n                                    '')", span="303-303"];
m7_39 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(job.Value.FetchedAt)", span="308-308"];
m7_40 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\n                                </span>\n'')", span="313-313"];
m7_44 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62"];
m7_47 [cluster="string.ToUpperInvariant()", file="FetchedJobsPage.generated.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m7_57 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m7_48 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FetchedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_56 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m7_60 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="FetchedJobsPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m7_63 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m7_58 [cluster="Unk.Write", file="FetchedJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m7_59 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m7_51 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m7_46 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m7_49 [cluster="HttpRequestBase.LinkTo(string)", file="FetchedJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m7_53 [cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40"];
m7_62 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m7_64 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m7_65 [file="FetchedJobsPage.generated.cs", label="HangFire.Web.Pages.FetchedJobsPage", span=""];
m9_17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FetchedJobsWatcherFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_20 [cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="FetchedJobsWatcherFacts.cs", label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56"];
m9_23 [cluster="IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="FetchedJobsWatcherFacts.cs", label="Entry IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m9_18 [cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="FetchedJobsWatcherFacts.cs", label="Entry Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", span="24-24"];
m9_0 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="Entry Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="34-34"];
m9_1 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="app == null", span="38-38"];
m9_3 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="configurationAction == null", span="39-39"];
m9_6 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="configurationAction(configuration)", span="42-42"];
m9_14 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="app.RunHangfireServer(server())", span="61-61"];
m9_15 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="app.MapHangfireDashboard(configuration.DashboardPath, configuration.AppPath, configuration.AuthorizationFilters)", span="64-64"];
m9_2 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="throw new ArgumentNullException(''app'');", span="38-38"];
m9_4 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="throw new ArgumentNullException(''configurationAction'');", span="39-39"];
m9_5 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="var configuration = new BootstrapperConfiguration()", span="41-41"];
m9_7 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="configuration.Activator != null", span="44-44"];
m9_8 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="JobActivator.Current = configuration.Activator", span="46-46"];
m9_9 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="configuration.Storage != null", span="49-49"];
m9_10 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="JobStorage.Current = configuration.Storage", span="51-51"];
m9_11 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="configuration.Filters", span="54-54"];
m9_13 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="configuration.Servers", span="59-59"];
m9_12 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="GlobalJobFilters.Filters.Add(filter)", span="56-56"];
m9_16 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="FetchedJobsWatcherFacts.cs", label="Exit Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="34-34"];
m9_22 [cluster="IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", file="FetchedJobsWatcherFacts.cs", label="Entry IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", span="38-38"];
m9_19 [cluster="System.Action<T>.Invoke(T)", file="FetchedJobsWatcherFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m9_21 [cluster="System.Func<TResult>.Invoke()", file="FetchedJobsWatcherFacts.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m11_94 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m11_91 [cluster="HangFire.Storage.IMonitoringApi.JobDetails(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.JobDetails(string)", span="26-26"];
m11_92 [cluster="string.Format(string, object, object)", file="JobDetailsPage1.generated.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m11_105 [cluster="string.IsNullOrWhiteSpace(string)", file="JobDetailsPage1.generated.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m11_107 [cluster="HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", span="76-76"];
m11_103 [cluster="string.Format(string, object)", file="JobDetailsPage1.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m11_88 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m11_61 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="nextEntry++", span="391-391"];
m11_0 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69"];
m11_1 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n'')", span="73-73"];
m11_2 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="88-88"];
m11_3 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="JobDetailsDto job = monitor.JobDetails(JobId.ToString())", span="89-89"];
m11_4 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="string title = null", span="91-91"];
m11_5 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job != null", span="93-93"];
m11_6 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="title = job.Job != null ? String.Format(''{0}.{1}'', job.Job.Type.Name, job.Job.Method.Name) : null", span="95-95"];
m11_10 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job == null", span="111-111"];
m11_23 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.CreatedAt.HasValue", span="185-185"];
m11_25 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs", label="0: Write(JobHelper.ToStringTimestamp(job.CreatedAt.Value))", span="197-197"];
m11_27 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job != null", span="215-215"];
m11_29 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobMethodCallRenderer.Render(job.Job))", span="226-226"];
m11_32 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Properties.Count > 0", span="246-246"];
m11_34 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Properties", span="257-257"];
m11_43 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.History.Count > 0", span="313-313"];
m11_46 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="DateTime[] entriesCreationTime = job.History.Select(x => x.CreatedAt).ToArray()", span="326-326"];
m11_48 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.History", span="329-329"];
m11_59 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(HtmlHelper.ToHumanDuration(entry.CreatedAt - (nextEntry < entriesCreationTime.Length ? entriesCreationTime[nextEntry] : job.CreatedAt)))", span="381-381"];
m11_7 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="title = title ?? ''Job''", span="98-98"];
m11_8 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Layout = new LayoutPage { Title = title }", span="100-100"];
m11_9 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n'')", span="106-106"];
m11_11 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    '')", span="117-117"];
m11_15 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    <div class=\''job-snippet-header\''>\n        <span class=\''job-snippet-tab\''>\n     '' +\r\n''       Job ID: <span class=\''job-snippet-id\''>'')", span="141-142"];
m11_12 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral('' The job with id \''')", span="119-119"];
m11_13 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobId)", span="124-124"];
m11_14 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\' was expired or was not existed on the server.\n'')", span="129-129"];
m11_16 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(HtmlHelper.JobId(JobId.ToString(), false))", span="147-147"];
m11_17 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</span>\n        </span>\n\n        <span class=\''job-snippet-buttons pull-right\''>\n  '' +\r\n''          <button class=\''btn btn-xs btn-default\'' data-ajax=\'''')", span="152-153"];
m11_18 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(Request.LinkTo(''/actions/requeue/'' + JobId))", span="158-158"];
m11_19 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\'' data-loading-text=\''Enqueueing...\''>Requeue</button>\n            <button class=\''b'' +\r\n''tn btn-xs btn-death\'' data-ajax=\'''')", span="163-164"];
m11_20 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(Request.LinkTo(''/actions/delete/'' + JobId))", span="169-169"];
m11_21 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\'' data-loading-text=\''Deleting...\'' data-confirm=\''Do you really want to delete this'' +\r\n'' job?\''>Delete</button>\n        </span>\n\n        <div class=\''clearfix\''></div>\n   '' +\r\n'' </div>\n'')", span="174-176"];
m11_22 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    <div class=\''job-snippet\''>\n        <div class=\''job-snippet-code\''>\n'')", span="180-180"];
m11_24 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                <div class=\''pull-right job-creation-date\''>\n                    Cr'' +\r\n''eated\n                    <span data-moment=\'''')", span="191-192"];
m11_26 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''></span>\n                </div>\n'')", span="202-202"];
m11_28 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                <pre><code>'')", span="221-221"];
m11_31 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''clearfix\''></div>\n        </div>\n\n'')", span="241-241"];
m11_30 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</code></pre>\n'')", span="231-231"];
m11_33 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''job-snippet-properties\''>\n                <dl>\n'')", span="252-252"];
m11_42 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    </div>\n'')", span="307-307"];
m11_35 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <dt>'')", span="263-263"];
m11_41 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                </dl>\n            </div>\n'')", span="297-297"];
m11_36 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(property.Key)", span="268-268"];
m11_37 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</dt>\n'')", span="273-273"];
m11_39 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(property.Value)", span="282-282"];
m11_38 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <dd>\n                            <pre>'')", span="277-277"];
m11_40 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</pre>\n                        </dd>\n'')", span="287-287"];
m11_44 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''        <h3>History</h3>\n'')", span="319-319"];
m11_45 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var index = 0", span="324-324"];
m11_50 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="index == 0", span="335-335"];
m11_53 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(index == 0 ? ''job-history-current'' : null)", span="351-351"];
m11_86 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="index++", span="538-538"];
m11_47 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var nextEntry = 1", span="327-327"];
m11_49 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var background = JobHistoryRenderer.BackgroundStateColors.ContainsKey(entry.StateName)\n               ? JobHistoryRenderer.BackgroundStateColors[entry.StateName]\n               : null", span="331-333"];
m11_51 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="background = JobHistoryRenderer.ForegroundStateColors.ContainsKey(entry.StateName)\n                    ? JobHistoryRenderer.ForegroundStateColors[entry.StateName]\n                    : null", span="337-339"];
m11_57 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs", label="0: Write(JobHelper.ToStringTimestamp(entry.CreatedAt))", span="371-371"];
m11_63 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(entry.StateName)", span="402-402"];
m11_65 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="!String.IsNullOrWhiteSpace(entry.Reason)", span="412-412"];
m11_67 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(entry.Reason)", span="423-423"];
m11_70 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="JobHistoryRenderer.Exists(entry.StateName)", span="443-443"];
m11_71 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var rendered = JobHistoryRenderer.Render(entry.StateName, entry.Data)", span="445-445"];
m11_77 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="entry.Data", span="482-482"];
m11_55 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(background != null ? String.Format(''background-color: {0};'', background) : null)", span="361-361"];
m11_52 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''job-history '')", span="346-346"];
m11_54 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n                <div class=\''job-history-heading\'' style=\'''')", span="356-356"];
m11_56 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n                    <span class=\''pull-right\'' data-moment-title=\'''')", span="366-366"];
m11_58 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n                        '')", span="376-376"];
m11_60 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n'')", span="386-386"];
m11_62 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    </span>\n                    <h4 class=\''job-history-title\''>\n  '' +\r\n''                      '')", span="396-397"];
m11_64 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n\n'')", span="407-407"];
m11_66 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                            <small>'')", span="418-418"];
m11_69 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    </h4>\n                </div>\n\n'')", span="438-438"];
m11_68 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</small>\n'')", span="428-428"];
m11_76 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    <div class=\''job-history-body\''>\n                        <dl cl'' +\r\n''ass=\''dl-horizontal\''>\n'')", span="476-477"];
m11_72 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="rendered != null", span="446-446"];
m11_74 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(rendered)", span="458-458"];
m11_73 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <div class=\''job-history-body\''>\n                          '' +\r\n''  '')", span="452-453"];
m11_85 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            </div>\n'')", span="532-532"];
m11_75 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n                        </div>\n'')", span="463-463"];
m11_78 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <dt>'')", span="488-488"];
m11_84 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        </dl>\n                    </div>\n'')", span="522-522"];
m11_79 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(item.Key)", span="493-493"];
m11_80 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral('':</dt>\n'')", span="498-498"];
m11_82 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(item.Value)", span="507-507"];
m11_81 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <dd>'')", span="502-502"];
m11_83 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</dd>\n'')", span="512-512"];
m11_87 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69"];
m11_106 [cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobHistoryRenderer.Exists(string)", span="71-71"];
m11_101 [cluster="Unk.ToArray", file="JobDetailsPage1.generated.cs", label="Entry Unk.ToArray", span=""];
m11_104 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m11_102 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m11_108 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="Entry lambda expression", span="326-326"];
m11_109 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="x.CreatedAt", span="326-326"];
m11_110 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="Exit lambda expression", span="326-326"];
m11_99 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", span="26-26"];
m11_98 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m11_90 [cluster="string.ToString()", file="JobDetailsPage1.generated.cs", label="Entry string.ToString()", span="0-0"];
m11_96 [cluster="Unk.Write", file="JobDetailsPage1.generated.cs", label="Entry Unk.Write", span=""];
m11_95 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m11_100 [cluster="Unk.Select", file="JobDetailsPage1.generated.cs", label="Entry Unk.Select", span=""];
m11_89 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m11_93 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m11_97 [cluster="HttpRequestBase.LinkTo(string)", file="JobDetailsPage1.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m11_111 [file="JobDetailsPage1.generated.cs", label="HangFire.Web.Pages.JobDetailsPage", span=""];
m12_72 [cluster="Unk.OnClientException", file="JobFacts.cs", label="Entry Unk.OnClientException", span=""];
m12_12 [cluster="System.Collections.Generic.List<T>.List()", file="JobFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_11 [cluster="Mock<IStateMachineFactory>.cstr", file="JobFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m12_10 [cluster="Mock<IState>.cstr", file="JobFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m12_0 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17"];
m12_1 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobFacts.cs", label="var connection = new Mock<IStorageConnection>()", span="19-19"];
m12_2 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobFacts.cs", label="var job = Job.FromExpression(() => TestMethod())", span="20-20"];
m12_6 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobFacts.cs", label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26"];
m12_3 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobFacts.cs", label="var state = new Mock<IState>()", span="21-21"];
m12_4 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobFacts.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22"];
m12_5 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobFacts.cs", label="_filters = new List<object>()", span="24-24"];
m12_7 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17"];
m12_13 [cluster="Mock<CreateContext>.cstr", file="JobFacts.cs", label="Entry Mock<CreateContext>.cstr", span=""];
m12_97 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m12_98 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=red, community=0, file="JobFacts.cs", label="0: _context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104"];
m12_99 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobFacts.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="105-105"];
m12_100 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=red, community=0, file="JobFacts.cs", label="0: filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107"];
m12_101 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=red, community=0, file="JobFacts.cs", label="1: _filters.Add(filter.Object)", span="109-109"];
m12_102 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobFacts.cs", label="var process = CreateProcess()", span="111-111"];
m12_103 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114"];
m12_104 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m12_106 [cluster="Unk.DoesNotThrow", file="JobFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m12_41 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51"];
m12_42 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53"];
m12_43 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobFacts.cs", label="var process = CreateProcess()", span="54-54"];
m12_44 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57"];
m12_45 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51"];
m12_35 [cluster="Unk.Run", file="JobFacts.cs", label="Entry Unk.Run", span=""];
m12_251 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m12_252 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="247-247"];
m12_253 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="248-248"];
m12_254 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="_filters.Add(outerFilter.Object)", span="250-250"];
m12_260 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262"];
m12_255 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="_filters.Add(innerFilter.Object)", span="251-251"];
m12_256 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="var exception = new InvalidOperationException()", span="253-253"];
m12_257 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254"];
m12_258 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="var process = CreateProcess()", span="256-256"];
m12_259 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260"];
m12_261 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m12_237 [cluster="System.InvalidOperationException.InvalidOperationException()", file="JobFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m12_53 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m12_54 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobFacts.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="63-63"];
m12_55 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobFacts.cs", label="_filters.Add(filter.Object)", span="64-64"];
m12_59 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobFacts.cs", label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73"];
m12_56 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66"];
m12_57 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobFacts.cs", label="var process = CreateProcess()", span="67-67"];
m12_58 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70"];
m12_60 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m12_24 [cluster="Unk.>", file="JobFacts.cs", label="Entry Unk.>", span=""];
m12_61 [cluster="Mock<IClientExceptionFilter>.cstr", file="JobFacts.cs", label="Entry Mock<IClientExceptionFilter>.cstr", span=""];
m12_29 [cluster="HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", file="JobFacts.cs", label="Entry HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", span="45-45"];
m12_23 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m12_328 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobFacts.cs", label="return new JobCreationProcess(_filters);", span="314-314"];
m12_329 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m12_18 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m12_19 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobFacts.cs", label="var process = CreateProcess()", span="32-32"];
m12_20 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35"];
m12_21 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="37-37"];
m12_22 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m12_119 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m12_120 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobFacts.cs", label="var filter = new Mock<IClientFilter>()", span="121-121"];
m12_121 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobFacts.cs", label="_filters.Add(filter.Object)", span="122-122"];
m12_122 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobFacts.cs", label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124"];
m12_124 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobFacts.cs", label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126"];
m12_123 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobFacts.cs", label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125"];
m12_125 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobFacts.cs", label="var process = CreateProcess()", span="128-128"];
m12_126 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobFacts.cs", label="process.Run(_context.Object)", span="131-131"];
m12_127 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m12_164 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m12_165 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobFacts.cs", label="var filter = new Mock<IClientFilter>()", span="163-163"];
m12_166 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobFacts.cs", label="_filters.Add(filter.Object)", span="164-164"];
m12_167 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobFacts.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167"];
m12_171 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobFacts.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176"];
m12_168 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobFacts.cs", label="var process = CreateProcess()", span="169-169"];
m12_169 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobFacts.cs", label="process.Run(_context.Object)", span="172-172"];
m12_170 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobFacts.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175"];
m12_172 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m12_139 [cluster="Unk.OnCreated", file="JobFacts.cs", label="Entry Unk.OnCreated", span=""];
m12_228 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m12_229 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobFacts.cs", label="var filter = new Mock<IClientFilter>()", span="226-226"];
m12_230 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobFacts.cs", label="_filters.Add(filter.Object)", span="227-227"];
m12_235 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobFacts.cs", label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240"];
m12_231 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobFacts.cs", label="var exception = new InvalidOperationException()", span="229-229"];
m12_232 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230"];
m12_233 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=red, community=0, file="JobFacts.cs", label="0: var process = CreateProcess()", span="232-232"];
m12_234 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=red, community=0, file="JobFacts.cs", label="0: Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236"];
m12_236 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m12_62 [cluster="Unk.Add", file="JobFacts.cs", label="Entry Unk.Add", span=""];
m12_84 [cluster="Unk.InSequence", file="JobFacts.cs", label="Entry Unk.InSequence", span=""];
m12_330 [cluster="HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobFacts.cs", label="Entry HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m12_185 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m12_186 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="183-183"];
m12_187 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="184-184"];
m12_188 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="_filters.Add(outerFilter.Object)", span="186-186"];
m12_193 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198"];
m12_189 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="_filters.Add(innerFilter.Object)", span="187-187"];
m12_190 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190"];
m12_191 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="var process = CreateProcess()", span="192-192"];
m12_192 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="process.Run(_context.Object)", span="195-195"];
m12_194 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m12_46 [cluster="Unk.Setup", file="JobFacts.cs", label="Entry Unk.Setup", span=""];
m12_238 [cluster="Unk.Throws", file="JobFacts.cs", label="Entry Unk.Throws", span=""];
m12_73 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m12_74 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80"];
m12_75 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81"];
m12_77 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84"];
m12_78 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="_filters.Add(filter1.Object)", span="86-86"];
m12_76 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83"];
m12_79 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="_filters.Add(filter2.Object)", span="87-87"];
m12_80 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89"];
m12_81 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="var process = CreateProcess()", span="91-91"];
m12_82 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95"];
m12_83 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m12_30 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41"];
m12_31 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobFacts.cs", label="var process = CreateProcess()", span="43-43"];
m12_32 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobFacts.cs", label="process.Run(_context.Object)", span="45-45"];
m12_33 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobFacts.cs", label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47"];
m12_34 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41"];
m12_324 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="305-305"];
m12_14 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="20-20"];
m12_15 [cluster="lambda expression", file="JobFacts.cs", label="TestMethod()", span="20-20"];
m12_16 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="20-20"];
m12_27 [cluster="lambda expression", file="JobFacts.cs", label="process.Run(null)", span="35-35"];
m12_26 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="35-35"];
m12_28 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="35-35"];
m12_37 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="47-47"];
m12_38 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="47-47"];
m12_39 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="47-47"];
m12_47 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="53-53"];
m12_51 [cluster="lambda expression", file="JobFacts.cs", label="process.Run(_context.Object)", span="57-57"];
m12_50 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="57-57"];
m12_48 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="53-53"];
m12_49 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="53-53"];
m12_52 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="57-57"];
m12_63 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="66-66"];
m12_67 [cluster="lambda expression", file="JobFacts.cs", label="process.Run(_context.Object)", span="70-70"];
m12_66 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="70-70"];
m12_69 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="72-73"];
m12_64 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="66-66"];
m12_65 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="66-66"];
m12_68 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="70-70"];
m12_70 [cluster="lambda expression", file="JobFacts.cs", label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73"];
m12_71 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="72-73"];
m12_85 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="83-83"];
m12_88 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="84-84"];
m12_91 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="89-89"];
m12_95 [cluster="lambda expression", file="JobFacts.cs", label="process.Run(_context.Object)", span="95-95"];
m12_94 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="95-95"];
m12_86 [cluster="lambda expression", file="JobFacts.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83"];
m12_87 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="83-83"];
m12_89 [cluster="lambda expression", file="JobFacts.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84"];
m12_90 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="84-84"];
m12_92 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="89-89"];
m12_93 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="89-89"];
m12_96 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="95-95"];
m12_107 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="104-104"];
m12_110 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="106-106"];
m12_113 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="107-107"];
m12_117 [cluster="lambda expression", file="JobFacts.cs", label="process.Run(_context.Object)", span="114-114"];
m12_116 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="114-114"];
m12_108 [cluster="lambda expression", color=red, community=0, file="JobFacts.cs", label="0: x.CreateJob()", span="104-104"];
m12_109 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="104-104"];
m12_111 [cluster="lambda expression", color=red, community=0, file="JobFacts.cs", label="0: x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106"];
m12_112 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="106-106"];
m12_114 [cluster="lambda expression", color=red, community=0, file="JobFacts.cs", label="0: x.ExceptionHandled = true", span="107-107"];
m12_115 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="107-107"];
m12_118 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="114-114"];
m12_129 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="124-124"];
m12_133 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="125-125"];
m12_136 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="126-126"];
m12_130 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124"];
m12_131 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="124-124"];
m12_134 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="125-125"];
m12_135 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="125-125"];
m12_137 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126"];
m12_138 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="126-126"];
m12_152 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="146-146"];
m12_155 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="147-147"];
m12_158 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="148-148"];
m12_161 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="149-149"];
m12_153 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146"];
m12_154 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="146-146"];
m12_156 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147"];
m12_157 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="147-147"];
m12_159 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148"];
m12_160 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="148-148"];
m12_162 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149"];
m12_163 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="149-149"];
m12_173 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="166-166"];
m12_176 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="167-167"];
m12_179 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="175-175"];
m12_182 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="176-176"];
m12_174 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166"];
m12_175 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="166-166"];
m12_177 [cluster="lambda expression", file="JobFacts.cs", label="x.Canceled = true", span="167-167"];
m12_178 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="167-167"];
m12_180 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="175-175"];
m12_181 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="175-175"];
m12_183 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176"];
m12_184 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="176-176"];
m12_195 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="189-189"];
m12_198 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="190-190"];
m12_201 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="198-198"];
m12_196 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189"];
m12_197 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="189-189"];
m12_199 [cluster="lambda expression", file="JobFacts.cs", label="context.Canceled = true", span="190-190"];
m12_200 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="190-190"];
m12_202 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198"];
m12_203 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="198-198"];
m12_204 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="198-198"];
m12_205 [cluster="lambda expression", file="JobFacts.cs", label="context.Canceled", span="198-198"];
m12_206 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="198-198"];
m12_216 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="208-208"];
m12_220 [cluster="lambda expression", file="JobFacts.cs", label="process.Run(_context.Object)", span="215-215"];
m12_219 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="215-215"];
m12_222 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="218-218"];
m12_225 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="219-219"];
m12_217 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208"];
m12_218 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="208-208"];
m12_221 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="215-215"];
m12_223 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="218-218"];
m12_224 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="218-218"];
m12_226 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219"];
m12_227 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="219-219"];
m12_246 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240"];
m12_249 [cluster="lambda expression", file="JobFacts.cs", label="context.Exception == exception", span="240-240"];
m12_239 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="230-230"];
m12_243 [cluster="lambda expression", color=red, community=0, file="JobFacts.cs", label="0: process.Run(_context.Object)", span="236-236"];
m12_242 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="236-236"];
m12_245 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="239-240"];
m12_240 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="230-230"];
m12_241 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="230-230"];
m12_244 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="236-236"];
m12_247 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="239-240"];
m12_248 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="240-240"];
m12_250 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="240-240"];
m12_269 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262"];
m12_272 [cluster="lambda expression", file="JobFacts.cs", label="context.Exception == exception", span="262-262"];
m12_262 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="254-254"];
m12_266 [cluster="lambda expression", file="JobFacts.cs", label="process.Run(_context.Object)", span="260-260"];
m12_265 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="260-260"];
m12_268 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="262-262"];
m12_263 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="254-254"];
m12_264 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="254-254"];
m12_267 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="260-260"];
m12_270 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="262-262"];
m12_271 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="262-262"];
m12_273 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="262-262"];
m12_287 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275"];
m12_290 [cluster="lambda expression", file="JobFacts.cs", label="context.Exception == exception", span="275-275"];
m12_283 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="273-273"];
m12_286 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="275-275"];
m12_292 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="276-276"];
m12_296 [cluster="lambda expression", file="JobFacts.cs", label="process.Run(_context.Object)", span="281-281"];
m12_295 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="281-281"];
m12_284 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="273-273"];
m12_285 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="273-273"];
m12_288 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="275-275"];
m12_289 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="275-275"];
m12_291 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="275-275"];
m12_293 [cluster="lambda expression", file="JobFacts.cs", label="x.ExceptionHandled = true", span="276-276"];
m12_294 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="276-276"];
m12_297 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="281-281"];
m12_309 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="294-294"];
m12_312 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="296-296"];
m12_315 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="297-297"];
m12_319 [cluster="lambda expression", file="JobFacts.cs", label="process.Run(_context.Object)", span="302-302"];
m12_318 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="302-302"];
m12_321 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="305-305"];
m12_310 [cluster="lambda expression", file="JobFacts.cs", label="x.CreateJob()", span="294-294"];
m12_311 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="294-294"];
m12_313 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296"];
m12_314 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="296-296"];
m12_316 [cluster="lambda expression", file="JobFacts.cs", label="x.ExceptionHandled = true", span="297-297"];
m12_317 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="297-297"];
m12_320 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="302-302"];
m12_322 [cluster="lambda expression", file="JobFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305"];
m12_323 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="305-305"];
m12_325 [cluster="lambda expression", file="JobFacts.cs", label="context.Exception != null", span="305-305"];
m12_326 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="305-305"];
m12_36 [cluster="Unk.Verify", file="JobFacts.cs", label="Entry Unk.Verify", span=""];
m12_207 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m12_208 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobFacts.cs", label="var filter = new Mock<IClientFilter>()", span="205-205"];
m12_209 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobFacts.cs", label="_filters.Add(filter.Object)", span="206-206"];
m12_210 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobFacts.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209"];
m12_214 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobFacts.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219"];
m12_211 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobFacts.cs", label="var process = CreateProcess()", span="211-211"];
m12_212 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215"];
m12_213 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobFacts.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218"];
m12_215 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m12_298 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m12_299 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="288-288"];
m12_300 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="289-289"];
m12_301 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="_filters.Add(outerFilter.Object)", span="291-291"];
m12_307 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305"];
m12_302 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="_filters.Add(innerFilter.Object)", span="292-292"];
m12_304 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297"];
m12_303 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294"];
m12_305 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="var process = CreateProcess()", span="299-299"];
m12_306 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302"];
m12_308 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m12_132 [cluster="Unk.OnCreating", file="JobFacts.cs", label="Entry Unk.OnCreating", span=""];
m12_274 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m12_275 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobFacts.cs", label="var filter = new Mock<IClientFilter>()", span="269-269"];
m12_276 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobFacts.cs", label="_filters.Add(filter.Object)", span="270-270"];
m12_279 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobFacts.cs", label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276"];
m12_277 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobFacts.cs", label="var exception = new InvalidOperationException()", span="272-272"];
m12_278 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273"];
m12_280 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobFacts.cs", label="var process = CreateProcess()", span="278-278"];
m12_281 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281"];
m12_282 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m12_105 [cluster="Unk.Callback", file="JobFacts.cs", label="Entry Unk.Callback", span=""];
m12_9 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m12_17 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m12_327 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m12_40 [cluster="Unk.CreateJob", file="JobFacts.cs", label="Entry Unk.CreateJob", span=""];
m12_128 [cluster="Mock<IClientFilter>.cstr", file="JobFacts.cs", label="Entry Mock<IClientFilter>.cstr", span=""];
m12_8 [cluster="Mock<IStorageConnection>.cstr", file="JobFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m12_140 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m12_141 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="140-140"];
m12_142 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="141-141"];
m12_143 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="_filters.Add(outerFilter.Object)", span="143-143"];
m12_145 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146"];
m12_148 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149"];
m12_144 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="_filters.Add(innerFilter.Object)", span="144-144"];
m12_146 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147"];
m12_147 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148"];
m12_149 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="var process = CreateProcess()", span="151-151"];
m12_150 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="process.Run(_context.Object)", span="154-154"];
m12_151 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m12_331 [file="JobFacts.cs", label="HangFire.Core.Tests.Client.JobCreationProcessFacts", span=""];
m12_332 [file="JobFacts.cs", label=process, span=""];
m12_333 [file="JobFacts.cs", label=process, span=""];
m12_334 [file="JobFacts.cs", label=process, span=""];
m12_335 [file="JobFacts.cs", label=process, span=""];
m12_336 [file="JobFacts.cs", label=process, span=""];
m12_337 [file="JobFacts.cs", label=process, span=""];
m12_338 [file="JobFacts.cs", label=process, span=""];
m12_339 [file="JobFacts.cs", label=exception, span=""];
m12_340 [file="JobFacts.cs", label=process, span=""];
m12_341 [file="JobFacts.cs", label=exception, span=""];
m12_342 [file="JobFacts.cs", label=exception, span=""];
m12_343 [file="JobFacts.cs", label=process, span=""];
m12_344 [file="JobFacts.cs", label=process, span=""];
m13_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobHelper.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m13_10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m13_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobHelper.cs", label="filters == null", span="47-47"];
m13_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobHelper.cs", label="_getFiltersThunk = md => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="49-49"];
m13_12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobHelper.cs", label="throw new ArgumentNullException(''filters'');", span="47-47"];
m13_14 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobHelper.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m13_64 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JobHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m13_66 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="JobHelper.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m13_90 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="JobHelper.cs", label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46"];
m13_67 [cluster="string.Format(string, object, object)", file="JobHelper.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m13_0 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="32-32"];
m13_1 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="connection == null", span="34-34"];
m13_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="handlers == null", span="35-35"];
m13_5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="_connection = connection", span="37-37"];
m13_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="_handlerCollection = GetHandlerCollection(handlers)", span="38-38"];
m13_2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="throw new ArgumentNullException(''connection'');", span="34-34"];
m13_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="throw new ArgumentNullException(''handlers'');", span="35-35"];
m13_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="32-32"];
m13_35 [cluster="System.TimeSpan.FromHours(double)", file="JobHelper.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m13_101 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="JobHelper.cs", label="Entry HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27"];
m13_36 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobHelper.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="28-28"];
m13_63 [cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="JobHelper.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37"];
m13_89 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="Entry HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)", span="26-26"];
m13_77 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", span="184-184"];
m13_91 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", file="JobHelper.cs", label="return new JobFilterInfo(_getFiltersThunk(job));", span="186-186"];
m13_92 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", file="JobHelper.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", span="184-184"];
m13_37 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="JobHelper.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m13_94 [cluster="System.Func<T, TResult>.Invoke(T)", file="JobHelper.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m13_78 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="160-160"];
m13_81 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="JobHelper.cs", label="var context = new ElectStateContext(\r\n                stateContext, toState, fromStateName, _connection)", span="166-167"];
m13_82 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="JobHelper.cs", label="return context.ElectState(filters);", span="169-169"];
m13_83 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="JobHelper.cs", label="Exit HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="160-160"];
m13_65 [cluster="HangFire.Storage.JobData.EnsureLoaded()", file="JobHelper.cs", label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27"];
m13_93 [cluster="HangFire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.JobFilter>)", file="JobHelper.cs", label="Entry HangFire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.JobFilter>)", span="40-40"];
m13_38 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", span="132-132"];
m13_68 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="var filterInfo = GetFilters(context.Job)", span="136-136"];
m13_69 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="var electedState = ElectState(context, toState, oldStateName, filterInfo.ElectStateFilters)", span="138-138"];
m13_70 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="ApplyState(context, electedState, oldStateName, filterInfo.ApplyStateFilters)", span="139-139"];
m13_74 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="ApplyState(context, failedState, oldStateName, Enumerable.Empty<IApplyStateFilter>())", span="153-153"];
m13_71 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="return true;", span="142-142"];
m13_72 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label=Exception, span="144-144"];
m13_73 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="var failedState = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during the transition of job's state''\r\n                }", span="146-149"];
m13_75 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="return false;", span="156-156"];
m13_76 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="JobHelper.cs", label="Exit HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", span="132-132"];
m13_100 [cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()", file="JobHelper.cs", label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
m13_62 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="JobHelper.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="36-36"];
m13_22 [cluster="HangFire.Common.JobFilter.JobFilter(object, HangFire.Common.JobFilterScope, int?)", file="JobHelper.cs", label="Entry HangFire.Common.JobFilter.JobFilter(object, HangFire.Common.JobFilterScope, int?)", span="38-38"];
m13_19 [cluster="lambda expression", file="JobHelper.cs", label="Entry lambda expression", span="49-49"];
m13_16 [cluster="lambda expression", file="JobHelper.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="49-49"];
m13_15 [cluster="lambda expression", file="JobHelper.cs", label="Entry lambda expression", span="49-49"];
m13_17 [cluster="lambda expression", file="JobHelper.cs", label="Exit lambda expression", span="49-49"];
m13_20 [cluster="lambda expression", file="JobHelper.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="49-49"];
m13_21 [cluster="lambda expression", file="JobHelper.cs", label="Exit lambda expression", span="49-49"];
m13_79 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="172-172"];
m13_86 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="JobHelper.cs", label="var context = new ApplyStateContext(\r\n                _connection, stateContext, electedState, oldStateName)", span="178-179"];
m13_87 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="JobHelper.cs", label="context.ApplyState(_handlerCollection, filters)", span="181-181"];
m13_88 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="JobHelper.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="172-172"];
m13_18 [cluster="Unk.Select", file="JobHelper.cs", label="Entry Unk.Select", span=""];
m13_9 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="189-189"];
m13_95 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="var handlerCollection = new StateHandlerCollection()", span="191-191"];
m13_96 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label=handlers, span="192-192"];
m13_97 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="handlerCollection.AddHandler(handler)", span="194-194"];
m13_98 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="return handlerCollection;", span="197-197"];
m13_99 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="JobHelper.cs", label="Exit HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="189-189"];
m13_84 [cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.IState, string, HangFire.Storage.IStorageConnection)", file="JobHelper.cs", label="Entry HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.IState, string, HangFire.Storage.IStorageConnection)", span="27-27"];
m13_23 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="52-52"];
m13_24 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="job == null", span="57-57"];
m13_26 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="parameters == null", span="58-58"];
m13_28 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="state == null", span="59-59"];
m13_30 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                job,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="61-64"];
m13_31 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="var context = new StateContext(jobId, job)", span="66-66"];
m13_32 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", color=red, community=0, file="JobHelper.cs", label="0: ChangeState(context, state, null)", span="67-67"];
m13_25 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="throw new ArgumentNullException(''job'');", span="57-57"];
m13_27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="throw new ArgumentNullException(''parameters'');", span="58-58"];
m13_29 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="throw new ArgumentNullException(''state'');", span="59-59"];
m13_33 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="return jobId;", span="69-69"];
m13_34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="JobHelper.cs", label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="52-52"];
m13_85 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="JobHelper.cs", label="Entry HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="69-69"];
m13_80 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobHelper.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m13_39 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="72-72"];
m13_40 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="jobId == null", span="75-75"];
m13_42 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="toState == null", span="76-76"];
m13_44 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="fromStates == null", span="77-77"];
m13_46 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="_connection.AcquireJobLock(jobId)", span="85-85"];
m13_48 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="var jobData = _connection.GetJobData(jobId)", span="89-89"];
m13_51 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="!fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="98-98"];
m13_56 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="toState = new FailedState(ex)\r\n                    {\r\n                        Reason = String.Format(\r\n                            ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                            toState.Name, jobId)\r\n                    }", span="115-120"];
m13_58 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="var context = new StateContext(jobId, jobData.Job)", span="125-125"];
m13_41 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="throw new ArgumentNullException(''jobId'');", span="75-75"];
m13_43 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="throw new ArgumentNullException(''toState'');", span="76-76"];
m13_45 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="throw new ArgumentNullException(''fromStates'');", span="77-77"];
m13_47 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="bool loadSucceeded", span="87-87"];
m13_49 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="jobData == null", span="91-91"];
m13_53 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="jobData.EnsureLoaded()", span="105-105"];
m13_59 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="var stateChanged = ChangeState(context, toState, jobData.State)", span="126-126"];
m13_50 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="return false;", span="95-95"];
m13_52 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="return false;", span="100-100"];
m13_54 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="loadSucceeded = true", span="106-106"];
m13_55 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label=JobLoadException, span="108-108"];
m13_57 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="loadSucceeded = false", span="122-122"];
m13_60 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="return loadSucceeded && stateChanged;", span="128-128"];
m13_61 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="JobHelper.cs", label="Exit HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="72-72"];
m13_102 [file="JobHelper.cs", label="HangFire.States.StateMachine", span=""];
m13_103 [file="JobHelper.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m14_72 [cluster="Unk.Equal", file="JobHelperFacts.cs", label="Entry Unk.Equal", span=""];
m14_0 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="JobHelperFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m14_2 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="JobHelperFacts.cs", label="_cts = new CancellationTokenSource()", span="16-16"];
m14_1 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="JobHelperFacts.cs", label="_inner = new Mock<IServerComponent>()", span="15-15"];
m14_3 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="JobHelperFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m14_19 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="JobHelperFacts.cs", label="var result = JobHelper.FromJson<string>(''\''hello\'''')", span="38-38"];
m14_73 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="JobHelperFacts.cs", label="return new InfiniteLoopProcess(_inner.Object);", span="80-80"];
m14_74 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="JobHelperFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78"];
m14_20 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="JobHelperFacts.cs", label="Assert.Equal(''hello'', result)", span="39-39"];
m14_17 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="JobHelperFacts.cs", label="Assert.Same(_inner.Object, result)", span="30-30"];
m14_30 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52"];
m14_14 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="JobHelperFacts.cs", label="Assert.Null(stringResult)", span="31-31"];
m14_15 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="JobHelperFacts.cs", label="Assert.Equal(0, intResult)", span="32-32"];
m14_16 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26"];
m14_18 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36"];
m14_22 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="JobHelperFacts.cs", label="_inner.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="37-38"];
m14_23 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="JobHelperFacts.cs", label="0: var component = CreateComponent()", span="40-40"];
m14_24 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="JobHelperFacts.cs", label="0: _cts.CancelAfter(TimeSpan.FromMilliseconds(100))", span="41-41"];
m14_25 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="JobHelperFacts.cs", label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="44-44"];
m14_11 [cluster="lambda expression", file="JobHelperFacts.cs", label="new InfiniteLoopProcess(null)", span="22-22"];
m14_13 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="JobHelperFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m14_12 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="22-22"];
m14_31 [cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="JobHelperFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0"];
m14_55 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobHelperFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m14_41 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.DeserializeDateTime_ReturnsCorrectValue()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.DeserializeDateTime_ReturnsCorrectValue()", span="68-68"];
m14_36 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="37-37"];
m14_9 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19"];
m14_6 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19"];
m14_7 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="JobHelperFacts.cs", label="var result = JobHelper.ToJson(''hello'')", span="21-21"];
m14_8 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="JobHelperFacts.cs", label="Assert.Equal(''\''hello\'''', result)", span="22-22"];
m14_21 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36"];
m14_26 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m14_27 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52"];
m14_70 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="JobHelperFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46"];
m14_37 [cluster="Unk.Execute", file="JobHelperFacts.cs", label="Entry Unk.Execute", span=""];
m14_43 [cluster="lambda expression", file="JobHelperFacts.cs", label="component.Execute(_cts.Token)", span="44-44"];
m14_44 [cluster="lambda expression", color=green, community=0, file="JobHelperFacts.cs", label="0: Exit lambda expression", span="44-44"];
m14_45 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", color=green, community=0, file="JobHelperFacts.cs", label="0: Entry Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", span="32-32"];
m14_46 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="47-47"];
m14_71 [cluster="Unk.ToString", file="JobHelperFacts.cs", label="Entry Unk.ToString", span=""];
m14_28 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.FromTimestamp(WellKnownTimestamp)", span="54-54"];
m14_47 [cluster="lambda expression", file="JobHelperFacts.cs", label="x.Execute(_cts.Token)", span="47-47"];
m14_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobHelperFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m14_4 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m14_29 [cluster="Unk.Callback", color=green, community=0, file="JobHelperFacts.cs", label="0: Entry Unk.Callback", span=""];
m14_59 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="61-61"];
m14_10 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="22-22"];
m14_34 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.SerializeDateTime_ReturnsCorrectValue()", color=green, community=0, file="JobHelperFacts.cs", label="1: Assert.Equal(WellKnownTimestamp.ToString(), result)", span="64-64"];
m14_38 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.DeserializeDateTime_ReturnsCorrectValue()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.DeserializeDateTime_ReturnsCorrectValue()", span="68-68"];
m14_42 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55"];
m14_35 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.SerializeDateTime_ReturnsCorrectValue()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.SerializeDateTime_ReturnsCorrectValue()", span="60-60"];
m14_39 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.DeserializeDateTime_ReturnsCorrectValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.DeserializeDateTime(WellKnownTimestamp.ToString())", span="70-70"];
m14_40 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.DeserializeDateTime_ReturnsCorrectValue()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(WellKnownDateTime, result)", span="72-72"];
m14_48 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.DeserializeNullableDateTime_ReturnsCorrectValue_OnNonNullString()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.DeserializeNullableDateTime_ReturnsCorrectValue_OnNonNullString()", span="83-83"];
m14_57 [cluster="lambda expression", file="JobHelperFacts.cs", label="component.Execute(_cts.Token)", span="58-58"];
m14_56 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="58-58"];
m14_58 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="58-58"];
m14_60 [cluster="lambda expression", file="JobHelperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="61-61"];
m14_61 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="61-61"];
m14_65 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="JobHelperFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m14_66 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="JobHelperFacts.cs", label="var component = CreateComponent()", span="73-73"];
m14_67 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="JobHelperFacts.cs", label="var result = component.ToString()", span="74-74"];
m14_68 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="JobHelperFacts.cs", label="Assert.Equal(_inner.Object.ToString(), result)", span="75-75"];
m14_69 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="JobHelperFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m14_49 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.DeserializeNullableDateTime_ReturnsCorrectValue_OnNonNullString()", color=green, community=0, file="JobHelperFacts.cs", label="0: var result = JobHelper.DeserializeNullableDateTime(WellKnownTimestamp.ToString())", span="85-85"];
m14_50 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.DeserializeNullableDateTime_ReturnsCorrectValue_OnNonNullString()", color=green, community=0, file="JobHelperFacts.cs", label="0: Assert.Equal(WellKnownDateTime, result)", span="86-86"];
m14_51 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.DeserializeNullableDateTime_ReturnsCorrectValue_OnNonNullString()", file="JobHelperFacts.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.DeserializeNullableDateTime_ReturnsCorrectValue_OnNonNullString()", span="83-83"];
m14_52 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="JobHelperFacts.cs", label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="58-58"];
m14_53 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="JobHelperFacts.cs", label="_inner.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="61-61"];
m14_54 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="JobHelperFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
m14_32 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.SerializeDateTime_ReturnsCorrectValue()", file="JobHelperFacts.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.SerializeDateTime_ReturnsCorrectValue()", span="60-60"];
m14_62 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="JobHelperFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m14_63 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="JobHelperFacts.cs", label="_cts.Cancel()", span="67-67"];
m14_64 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="JobHelperFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m14_75 [cluster="InfiniteLoopProcess.cstr", file="JobHelperFacts.cs", label="Entry InfiniteLoopProcess.cstr", span=""];
m14_33 [cluster="Unk.Verify", color=green, community=0, file="JobHelperFacts.cs", label="1: Entry Unk.Verify", span=""];
m14_76 [file="JobHelperFacts.cs", label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span=""];
m14_77 [file="JobHelperFacts.cs", label=component, span=""];
m14_78 [file="JobHelperFacts.cs", label=component, span=""];
m16_61 [cluster="HangFire.Web.RazorPage.Write(object)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m16_55 [cluster="Unk.TryParse", file="ProcessingJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m16_0 [cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", span="20-20"];
m16_45 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="1: Write(JobHelper.ToTimestamp(job.Value.StartedAt.Value))", span="323-323"];
m16_43 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="job.Value.StartedAt.HasValue", span="312-312"];
m16_44 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="318-318"];
m16_46 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\''>\n                                    '')", span="328-328"];
m16_47 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(job.Value.StartedAt)", span="333-333"];
m16_1 [cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", file="ProcessingJobsPage.generated.cs", label="ConnectionPoolSize = 50", span="22-22"];
m16_2 [cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", file="ProcessingJobsPage.generated.cs", label="Exit HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", span="20-20"];
m16_4 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66"];
m16_5 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67"];
m16_7 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Pager pager = new Pager(from, perPage, monitor.ProcessingCount())\n    {\n        BasePageUrl = Request.LinkTo(''/processing'')\n    }", span="70-73"];
m16_9 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\n'')", span="82-82"];
m16_11 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        No jobs are being processed right now.'' +\r\n''\n    </div>\n'')", span="93-94"];
m16_12 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="106-108"];
m16_13 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(Request.LinkTo(''/processing/requeue''))", span="113-113"];
m16_14 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-repeat''''></span>\n                Requeue jobs\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="118-125"];
m16_15 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(Request.LinkTo(''/processing/delete''))", span="130-130"];
m16_16 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="135-142"];
m16_17 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="147-147"];
m16_18 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th class=''''min-width''''>Server</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Started</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="152-168"];
m16_20 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="179-179"];
m16_21 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(!job.Value.InProcessingState ? ''obsolete-data'' : null)", span="184-184"];
m16_22 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral('' '')", span="189-189"];
m16_23 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(job.Value.InProcessingState ? ''hover'' : null)", span="194-194"];
m16_24 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\''>\n                        <td>\n'')", span="199-199"];
m16_26 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="210-211"];
m16_27 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(job.Key)", span="216-216"];
m16_28 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\'' />\n'')", span="221-221"];
m16_29 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        <a href=\'''')", span="231-232"];
m16_30 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="237-237"];
m16_31 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="242-242"];
m16_32 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="247-247"];
m16_33 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\n                            </a>\n'')", span="252-252"];
m16_35 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="263-264"];
m16_36 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        '')", span="274-275"];
m16_37 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(job.Value.ServerId.ToUpperInvariant())", span="280-280"];
m16_38 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\n                        </td>\n                        <td>\n                     '' +\r\n''       <a class=\''job-method\'' href=\'''')", span="285-286"];
m16_39 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="291-291"];
m16_40 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="296-296"];
m16_41 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="301-301"];
m16_42 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\n                            </a>\n                        </td>\n                 '' +\r\n''       <td class=\''align-right\''>\n'')", span="306-307"];
m16_48 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\n                                </span>\n'')", span="338-338"];
m16_49 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="348-348"];
m16_50 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="358-358"];
m16_51 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="369-369"];
m16_3 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="HangFire.Redis.RedisStorageOptions", span=""];
m16_6 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="69-69"];
m16_8 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="JobList<ProcessingJobDto> processingJobs = monitor\n        .ProcessingJobs(pager.FromRecord, pager.RecordsPerPage)", span="75-76"];
m16_10 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="87-87"];
m16_19 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label=processingJobs, span="173-173"];
m16_25 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="job.Value.InProcessingState", span="204-204"];
m16_34 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="!job.Value.InProcessingState", span="257-257"];
m16_52 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Exit HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47"];
m16_53 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m16_68 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m16_66 [cluster="string.ToUpperInvariant()", file="ProcessingJobsPage.generated.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m16_54 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m16_62 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m16_64 [cluster="Unk.Write", file="ProcessingJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m16_56 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m16_60 [cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32"];
m16_59 [cluster="HttpRequestBase.LinkTo(string)", file="ProcessingJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m16_58 [cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42"];
m16_67 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m16_69 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m16_63 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m16_57 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m16_65 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m16_70 [file="ProcessingJobsPage.generated.cs", label="HangFire.Web.Pages.ProcessingJobsPage", span=""];
m17_14 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="ProcessingState.cs", label="testRunner.OnFeatureEnd()", span="43-43"];
m17_8 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", span="33-33"];
m17_26 [cluster="Unk.OnScenarioStart", file="ProcessingState.cs", label="Entry Unk.OnScenarioStart", span=""];
m17_30 [cluster="Unk.CollectScenarioErrors", file="ProcessingState.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m17_3 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="ServerId = serverId", span="31-31"];
m17_18 [cluster="HangFire.Tests.States.SucceededStateFeature.TestInitialize()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.TestInitialize()", span="47-47"];
m17_22 [cluster="Unk.OnScenarioEnd", file="ProcessingState.cs", label="Entry Unk.OnScenarioEnd", span=""];
m17_19 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", span="51-51"];
m17_20 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", file="ProcessingState.cs", label="testRunner.OnScenarioEnd()", span="53-53"];
m17_21 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", span="51-51"];
m17_7 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", file="ProcessingState.cs", label="testRunner.OnFeatureStart(featureInfo)", span="38-38"];
m17_27 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", span="61-61"];
m17_28 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", file="ProcessingState.cs", label="testRunner.CollectScenarioErrors()", span="63-63"];
m17_29 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", span="61-61"];
m17_95 [cluster="Unk.And", file="ProcessingState.cs", label="Entry Unk.And", span=""];
m17_105 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", span="221-221"];
m17_106 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="ProcessingState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the succeeded list'', ((string[])(null)))", span="223-223"];
m17_107 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="ProcessingState.cs", label="this.ScenarioSetup(scenarioInfo)", span="225-225"];
m17_108 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="ProcessingState.cs", label="this.FeatureBackground()", span="227-227"];
m17_109 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="ProcessingState.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="229-229"];
m17_110 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="ProcessingState.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="231-231"];
m17_111 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="ProcessingState.cs", label="testRunner.Then(''the job should be removed from the succeeded list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="233-233"];
m17_112 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="ProcessingState.cs", label="this.ScenarioCleanup()", span="235-235"];
m17_113 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", span="221-221"];
m17_4 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="StartedAt = DateTime.UtcNow", span="32-32"];
m17_5 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="WorkerNumber = workerNumber", span="33-33"];
m17_6 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m17_13 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", span="41-41"];
m17_9 [cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.SerializeData()", span="45-45"];
m17_15 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="ProcessingState.cs", label="HangFire.States.ProcessingState", span=""];
m17_16 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", span="41-41"];
m17_31 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="66-66"];
m17_32 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ProcessingState.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="70-70"];
m17_33 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ProcessingState.cs", label="testRunner.Given(''the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="72-72"];
m17_34 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="66-66"];
m17_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m17_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="String.IsNullOrWhiteSpace(serverId)", span="29-29"];
m17_2 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="throw new ArgumentNullException(''serverId'');", span="29-29"];
m17_117 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", span="248-248"];
m17_118 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", file="ProcessingState.cs", label="SucceededStateFeature.FeatureTearDown()", span="250-250"];
m17_119 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", span="248-248"];
m17_11 [cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.SerializeData()", span="45-45"];
m17_17 [cluster="Unk.OnFeatureEnd", file="ProcessingState.cs", label="Entry Unk.OnFeatureEnd", span=""];
m17_50 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="104-104"];
m17_51 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="ProcessingState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="106-106"];
m17_52 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="ProcessingState.cs", label="this.ScenarioSetup(scenarioInfo)", span="108-108"];
m17_53 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="ProcessingState.cs", label="this.FeatureBackground()", span="110-110"];
m17_54 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="ProcessingState.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="112-114"];
m17_55 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="ProcessingState.cs", label="table1.AddRow(new string[] {\r\n                        ''SucceededAt'',\r\n                        ''<UtcNow timestamp>''})", span="115-117"];
m17_56 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="ProcessingState.cs", label="testRunner.Then(''properties table should contain the following items:'', ((string)(null)), table1, ''Then '')", span="119-119"];
m17_57 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="ProcessingState.cs", label="this.ScenarioCleanup()", span="121-121"];
m17_58 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="104-104"];
m17_78 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", span="163-163"];
m17_79 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="ProcessingState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the succeeded list'', ((string[])(null)))", span="165-165"];
m17_80 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="ProcessingState.cs", label="this.ScenarioSetup(scenarioInfo)", span="167-167"];
m17_81 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="ProcessingState.cs", label="this.FeatureBackground()", span="169-169"];
m17_82 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="ProcessingState.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="171-171"];
m17_83 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="ProcessingState.cs", label="testRunner.Then(''the job should be added to the succeeded list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="173-173"];
m17_84 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="ProcessingState.cs", label="this.ScenarioCleanup()", span="175-175"];
m17_85 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", span="163-163"];
m17_12 [cluster="Unk.OnFeatureStart", file="ProcessingState.cs", label="Entry Unk.OnFeatureStart", span=""];
m17_69 [cluster="Unk.When", file="ProcessingState.cs", label="Entry Unk.When", span=""];
m17_86 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", span="181-181"];
m17_87 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ProcessingState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should persist the job data'', ((string[])(null)))", span="183-183"];
m17_88 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ProcessingState.cs", label="this.ScenarioSetup(scenarioInfo)", span="185-185"];
m17_89 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ProcessingState.cs", label="this.FeatureBackground()", span="187-187"];
m17_90 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ProcessingState.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="189-189"];
m17_91 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ProcessingState.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="191-191"];
m17_92 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ProcessingState.cs", label="testRunner.Then(''it should persist the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="193-193"];
m17_93 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ProcessingState.cs", label="this.ScenarioCleanup()", span="195-195"];
m17_94 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", span="181-181"];
m17_96 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="201-201"];
m17_97 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should change the stats'', ((string[])(null)))", span="203-203"];
m17_98 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="this.ScenarioSetup(scenarioInfo)", span="205-205"];
m17_99 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="this.FeatureBackground()", span="207-207"];
m17_100 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="209-209"];
m17_101 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="211-211"];
m17_102 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="testRunner.Then(''it should decrease the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="213-213"];
m17_103 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="this.ScenarioCleanup()", span="215-215"];
m17_104 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="201-201"];
m17_60 [cluster="Unk.AddRow", file="ProcessingState.cs", label="Entry Unk.AddRow", span=""];
m17_10 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", color=green, community=0, file="ProcessingState.cs", label="0: Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m17_61 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", span="127-127"];
m17_62 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ProcessingState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should expire the job data'', ((string[])(null)))", span="129-129"];
m17_63 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ProcessingState.cs", label="this.ScenarioSetup(scenarioInfo)", span="131-131"];
m17_64 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ProcessingState.cs", label="this.FeatureBackground()", span="133-133"];
m17_65 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ProcessingState.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="135-135"];
m17_66 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ProcessingState.cs", label="testRunner.Then(''it should expire the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="137-137"];
m17_67 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ProcessingState.cs", label="this.ScenarioCleanup()", span="139-139"];
m17_68 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", span="127-127"];
m17_41 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="88-88"];
m17_42 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ProcessingState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Succeeded\''', ((string[])(null)))", span="90-90"];
m17_43 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ProcessingState.cs", label="this.ScenarioSetup(scenarioInfo)", span="92-92"];
m17_44 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ProcessingState.cs", label="this.FeatureBackground()", span="94-94"];
m17_45 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ProcessingState.cs", label="testRunner.Then(''the state name should be equal to \'Succeeded\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="96-96"];
m17_46 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ProcessingState.cs", label="this.ScenarioCleanup()", span="98-98"];
m17_47 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="88-88"];
m17_70 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", span="145-145"];
m17_71 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should change the stats'', ((string[])(null)))", span="147-147"];
m17_72 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="this.ScenarioSetup(scenarioInfo)", span="149-149"];
m17_73 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="this.FeatureBackground()", span="151-151"];
m17_74 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="153-153"];
m17_75 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="testRunner.Then(''it should increase the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="155-155"];
m17_76 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="this.ScenarioCleanup()", span="157-157"];
m17_77 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", span="145-145"];
m17_48 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ProcessingState.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m17_23 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="56-56"];
m17_24 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ProcessingState.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="58-58"];
m17_25 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="56-56"];
m17_35 [cluster="Unk.Given", file="ProcessingState.cs", label="Entry Unk.Given", span=""];
m17_49 [cluster="Unk.Then", file="ProcessingState.cs", label="Entry Unk.Then", span=""];
m17_38 [cluster="HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", span="80-80"];
m17_39 [cluster="HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", file="ProcessingState.cs", label="this.ScenarioTearDown()", span="82-82"];
m17_40 [cluster="HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", span="80-80"];
m17_59 [cluster="TechTalk.SpecFlow.Table.cstr", file="ProcessingState.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m17_114 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", span="243-243"];
m17_115 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", file="ProcessingState.cs", label="SucceededStateFeature.FeatureSetup()", span="245-245"];
m17_116 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", span="243-243"];
m17_36 [cluster="HangFire.Tests.States.SucceededStateFeature.SetFixture(HangFire.Tests.States.SucceededStateFeature.FixtureData)", file="ProcessingState.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.SetFixture(HangFire.Tests.States.SucceededStateFeature.FixtureData)", span="76-76"];
m17_37 [cluster="HangFire.Tests.States.SucceededStateFeature.SetFixture(HangFire.Tests.States.SucceededStateFeature.FixtureData)", file="ProcessingState.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.SetFixture(HangFire.Tests.States.SucceededStateFeature.FixtureData)", span="76-76"];
m17_120 [file="ProcessingState.cs", label="HangFire.Tests.States.SucceededStateFeature", span=""];
m19_0 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m19_1 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="redis == null", span="21-21"];
m19_3 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="jobId == null", span="22-22"];
m19_5 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="jobParameters == null", span="23-23"];
m19_7 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="state == null", span="24-24"];
m19_9 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="_redis = redis", span="26-26"];
m19_10 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="_stateMachine = new StateMachine(redis)", span="27-27"];
m19_11 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="_state = state", span="29-29"];
m19_12 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="_jobParameters = jobParameters", span="30-30"];
m19_13 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="JobId = jobId", span="31-31"];
m19_2 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''redis'');", span="21-21"];
m19_4 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''jobId'');", span="22-22"];
m19_6 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''jobParameters'');", span="23-23"];
m19_8 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''state'');", span="24-24"];
m19_14 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="QueuesPage.generated.cs", label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m19_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="QueuesPage.generated.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m19_31 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="QueuesPage.generated.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m19_25 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="QueuesPage.generated.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="46-46"];
m19_26 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="QueuesPage.generated.cs", label="String.IsNullOrEmpty(name)", span="48-48"];
m19_28 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="QueuesPage.generated.cs", label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="50-52"];
m19_27 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''name'');", span="48-48"];
m19_29 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="QueuesPage.generated.cs", label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="46-46"];
m19_37 [cluster="Unk.SetRangeInHash", file="QueuesPage.generated.cs", label="Entry Unk.SetRangeInHash", span=""];
m19_36 [cluster="string.Format(string, object)", file="QueuesPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m19_22 [cluster="string.IsNullOrEmpty(string)", file="QueuesPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m19_32 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="QueuesPage.generated.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="55-55"];
m19_33 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="QueuesPage.generated.cs", label="_redis.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                _jobParameters)", span="57-59"];
m19_34 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="QueuesPage.generated.cs", label="_stateMachine.ChangeState(JobId, _state)", span="64-64"];
m19_35 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="QueuesPage.generated.cs", label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="55-55"];
m19_23 [cluster="HangFire.JobHelper.ToJson(object)", file="QueuesPage.generated.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m19_38 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="QueuesPage.generated.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="58-58"];
m19_30 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="QueuesPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m19_24 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="QueuesPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m19_17 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="QueuesPage.generated.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="36-36"];
m19_18 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="QueuesPage.generated.cs", label="String.IsNullOrEmpty(name)", span="38-38"];
m19_20 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="QueuesPage.generated.cs", label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="43-43"];
m19_19 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''name'');", span="38-38"];
m19_21 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="QueuesPage.generated.cs", label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="36-36"];
m19_16 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="QueuesPage.generated.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="36-36"];
m19_39 [file="QueuesPage.generated.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m20_28 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", span="45-45"];
m20_29 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="RecurringJobScheduler.cs", label="var handler = new SucceededState.Handler()", span="47-47"];
m20_30 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="RecurringJobScheduler.cs", label="handler.Apply(_context, null)", span="48-48"];
m20_31 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="RecurringJobScheduler.cs", label="_transactionMock.Verify(x => x.IncrementCounter(''stats:succeeded''), Times.Once)", span="50-50"];
m20_32 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", span="45-45"];
m20_6 [cluster="System.Type.GetMethod(string)", file="RecurringJobScheduler.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m20_27 [cluster="Unk.ExpireJob", file="RecurringJobScheduler.cs", label="Entry Unk.ExpireJob", span=""];
m20_26 [cluster="Unk.>", file="RecurringJobScheduler.cs", label="Entry Unk.>", span=""];
m20_21 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="41-41"];
m20_7 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="RecurringJobScheduler.cs", label="Entry HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48"];
m20_47 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", span="63-63"];
m20_48 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="RecurringJobScheduler.cs", label="var handler = new SucceededState.Handler()", span="65-65"];
m20_49 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="RecurringJobScheduler.cs", label="handler.Unapply(_context)", span="66-66"];
m20_50 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="RecurringJobScheduler.cs", label="_transactionMock.Verify(x => x.DecrementCounter(''stats:succeeded''), Times.Once)", span="68-68"];
m20_51 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", span="63-63"];
m20_55 [cluster="Unk.DecrementCounter", file="RecurringJobScheduler.cs", label="Entry Unk.DecrementCounter", span=""];
m20_42 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="RecurringJobScheduler.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="48-48"];
m20_36 [cluster="Unk.IncrementCounter", file="RecurringJobScheduler.cs", label="Entry Unk.IncrementCounter", span=""];
m20_14 [cluster="HangFire.States.SucceededState.Handler.Handler()", file="RecurringJobScheduler.cs", label="Entry HangFire.States.SucceededState.Handler.Handler()", span="39-39"];
m20_52 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="68-68"];
m20_23 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="41-41"];
m20_24 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="41-41"];
m20_25 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="41-41"];
m20_33 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="50-50"];
m20_34 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.IncrementCounter(''stats:succeeded'')", span="50-50"];
m20_35 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="50-50"];
m20_43 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="59-59"];
m20_44 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.PersistJob(JobId)", span="59-59"];
m20_45 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="59-59"];
m20_53 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.DecrementCounter(''stats:succeeded'')", span="68-68"];
m20_54 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="68-68"];
m20_10 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", span="29-29"];
m20_11 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="RecurringJobScheduler.cs", label="var handler = new SucceededState.Handler()", span="31-31"];
m20_12 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="RecurringJobScheduler.cs", label="Assert.Equal(SucceededState.Name, handler.StateName)", span="32-32"];
m20_13 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", span="29-29"];
m20_56 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", span="71-71"];
m20_57 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", span="71-71"];
m20_16 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", span="36-36"];
m20_17 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", file="RecurringJobScheduler.cs", label="var handler = new SucceededState.Handler()", span="38-38"];
m20_18 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", file="RecurringJobScheduler.cs", label="handler.Apply(_context, null)", span="39-39"];
m20_19 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", file="RecurringJobScheduler.cs", label="_transactionMock.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="41-41"];
m20_20 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", span="36-36"];
m20_0 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="18-18"];
m20_1 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="RecurringJobScheduler.cs", label="var methodInfo = typeof(SucceededStateHandlerFacts)\r\n                .GetMethod(''TestMethod'')", span="20-21"];
m20_2 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="RecurringJobScheduler.cs", label="var jobMethod = new JobMethod(typeof(SucceededStateHandlerFacts), methodInfo)", span="22-22"];
m20_3 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="RecurringJobScheduler.cs", label="var stateContext = new StateContext(JobId, jobMethod)", span="23-23"];
m20_4 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="RecurringJobScheduler.cs", label="_context = new StateApplyingContext(stateContext, _transactionMock.Object)", span="25-25"];
m20_5 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="18-18"];
m20_9 [cluster="StateApplyingContext.cstr", file="RecurringJobScheduler.cs", label="Entry StateApplyingContext.cstr", span=""];
m20_46 [cluster="Unk.PersistJob", file="RecurringJobScheduler.cs", label="Entry Unk.PersistJob", span=""];
m20_37 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", span="54-54"];
m20_38 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="RecurringJobScheduler.cs", label="var handler = new SucceededState.Handler()", span="56-56"];
m20_39 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="RecurringJobScheduler.cs", label="handler.Unapply(_context)", span="57-57"];
m20_40 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="RecurringJobScheduler.cs", label="_transactionMock.Verify(x => x.PersistJob(JobId))", span="59-59"];
m20_41 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", span="54-54"];
m20_22 [cluster="Unk.Verify", file="RecurringJobScheduler.cs", label="Entry Unk.Verify", span=""];
m20_8 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="RecurringJobScheduler.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m20_58 [file="RecurringJobScheduler.cs", label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", span=""];
m21_77 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenDateTimeProviderIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenDateTimeProviderIsNull()", span="77-77"];
m21_78 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenDateTimeProviderIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, null))", span="79-80"];
m21_79 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenDateTimeProviderIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''dateTimeProvider'', exception.ParamName)", span="82-82"];
m21_80 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenDateTimeProviderIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenDateTimeProviderIsNull()", span="77-77"];
m21_69 [cluster="RecurringJobScheduler.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry RecurringJobScheduler.cstr", span=""];
m21_175 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m21_104 [cluster="Unk.SetRangeInHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m21_60 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m21_65 [cluster="Unk.Equal", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Equal", span=""];
m21_28 [cluster="Mock<IStorageConnection>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m21_18 [cluster="System.Threading.CancellationToken.CancellationToken()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m21_59 [cluster="string.Format(string, object)", file="RecurringJobSchedulerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m21_136 [cluster="Unk.DoesNotThrow", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m21_40 [cluster="Unk.GetNextOccurrence", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetNextOccurrence", span=""];
m21_24 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m21_19 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="RecurringJobSchedulerFacts.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m21_162 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m21_39 [cluster="Unk.>", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.>", span=""];
m21_29 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m21_108 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_WhenNextExecutionTime_IsInTheFuture()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_WhenNextExecutionTime_IsInTheFuture()", span="105-105"];
m21_109 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_WhenNextExecutionTime_IsInTheFuture()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="0: _recurringJob[''NextExecution''] = JobHelper.SerializeDateTime(_currentTime.AddDays(1))", span="107-107"];
m21_110 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_WhenNextExecutionTime_IsInTheFuture()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="108-108"];
m21_111 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_WhenNextExecutionTime_IsInTheFuture()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="110-110"];
m21_112 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_WhenNextExecutionTime_IsInTheFuture()", file="RecurringJobSchedulerFacts.cs", label="_client.Verify(\r\n                x => x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>()),\r\n                Times.Never)", span="112-114"];
m21_113 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_WhenNextExecutionTime_IsInTheFuture()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(\r\n                x => x.SetRangeInHash(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<IEnumerable<KeyValuePair<string, string>>>()),\r\n                Times.Never)", span="116-120"];
m21_114 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_WhenNextExecutionTime_IsInTheFuture()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_WhenNextExecutionTime_IsInTheFuture()", span="105-105"];
m21_163 [cluster="System.TimeSpan.FromSeconds(double)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m21_143 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_SetsTheNextExecutionTime_WhenItIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_SetsTheNextExecutionTime_WhenItIsNull()", span="145-145"];
m21_147 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_SetsTheNextExecutionTime_WhenItIsNull()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="1: _connection.Setup(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj[''NextExecution''] == JobHelper.SerializeDateTime(_nextTime))))", span="152-155"];
m21_146 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_SetsTheNextExecutionTime_WhenItIsNull()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="150-150"];
m21_144 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_SetsTheNextExecutionTime_WhenItIsNull()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob.Remove(''NextExecution'')", span="147-147"];
m21_145 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_SetsTheNextExecutionTime_WhenItIsNull()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="148-148"];
m21_148 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_SetsTheNextExecutionTime_WhenItIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_SetsTheNextExecutionTime_WhenItIsNull()", span="145-145"];
m21_47 [cluster="System.Console.WriteLine()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m21_51 [cluster="Unk.GetConnection", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetConnection", span=""];
m21_115 [cluster="System.DateTime.AddDays(double)", file="RecurringJobSchedulerFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m21_23 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m21_21 [cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m21_156 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_WorksWithOneMinuteInterval()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_WorksWithOneMinuteInterval()", span="159-159"];
m21_157 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_WorksWithOneMinuteInterval()", file="RecurringJobSchedulerFacts.cs", label="_dateTimeProvider.Setup(x => x.CurrentDateTime).Returns(\r\n                new DateTime(2012, 12, 12, 12, 12, 12))", span="161-162"];
m21_158 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_WorksWithOneMinuteInterval()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="163-163"];
m21_160 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_WorksWithOneMinuteInterval()", file="RecurringJobSchedulerFacts.cs", label="Assert.Throws<OperationCanceledException>(() => scheduler.Execute(cts.Token))", span="166-166"];
m21_159 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_WorksWithOneMinuteInterval()", file="RecurringJobSchedulerFacts.cs", label="var cts = new CancellationTokenSource(TimeSpan.FromSeconds(3))", span="164-164"];
m21_161 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_WorksWithOneMinuteInterval()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_WorksWithOneMinuteInterval()", span="159-159"];
m21_61 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="59-59"];
m21_62 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RecurringJobScheduler(null, _client.Object, _dateTimeProvider.Object))", span="61-62"];
m21_63 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="64-64"];
m21_64 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="59-59"];
m21_17 [cluster="Mock<IDateTimeProvider>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IDateTimeProvider>.cstr", span=""];
m21_167 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="166-166"];
m21_44 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="45-45"];
m21_101 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="96-101"];
m21_102 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="1: x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj[''LastExecution''] == JobHelper.SerializeDateTime(_currentTime)\r\n                 && rj[''LastJobId''] == ''job-id''\r\n                 && rj[''NextExecution''] == JobHelper.SerializeDateTime(_nextTime)))", span="96-101"];
m21_103 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="96-101"];
m21_105 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="98-101"];
m21_106 [cluster="lambda expression", color=green, community=1, file="RecurringJobSchedulerFacts.cs", label="0: rj[''LastExecution''] == JobHelper.SerializeDateTime(_currentTime)\r\n                 && rj[''LastJobId''] == ''job-id''\r\n                 && rj[''NextExecution''] == JobHelper.SerializeDateTime(_nextTime)", span="99-101"];
m21_107 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="98-101"];
m21_150 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="152-155"];
m21_151 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="1: x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj[''NextExecution''] == JobHelper.SerializeDateTime(_nextTime)))", span="152-155"];
m21_152 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="152-155"];
m21_153 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="154-155"];
m21_154 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="1: rj[''NextExecution''] == JobHelper.SerializeDateTime(_nextTime)", span="155-155"];
m21_155 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="154-155"];
m21_34 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label=_currentTime, span="37-37"];
m21_42 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label=_nextTime, span="39-39"];
m21_67 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new RecurringJobScheduler(null, _client.Object, _dateTimeProvider.Object)", span="62-62"];
m21_75 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new RecurringJobScheduler(_storage.Object, null, _dateTimeProvider.Object)", span="71-71"];
m21_82 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new RecurringJobScheduler(_storage.Object, _client.Object, null)", span="80-80"];
m21_141 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="141-141"];
m21_177 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="179-179"];
m21_36 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="38-38"];
m21_41 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="39-39"];
m21_46 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="45-45"];
m21_45 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="45-45"];
m21_98 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="94-94"];
m21_57 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId))", span="54-54"];
m21_37 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextOccurrence(It.IsNotNull<CrontabSchedule>())", span="38-38"];
m21_95 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="88-88"];
m21_99 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="94-94"];
m21_117 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>())", span="113-113"];
m21_120 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<IEnumerable<KeyValuePair<string, string>>>())", span="117-119"];
m21_129 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="131-131"];
m21_138 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(It.IsAny<string>())", span="137-137"];
m21_30 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="37-37"];
m21_33 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="37-37"];
m21_35 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="37-37"];
m21_43 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="39-39"];
m21_48 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="49-49"];
m21_52 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="51-51"];
m21_56 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="54-54"];
m21_66 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="62-62"];
m21_68 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="62-62"];
m21_74 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="71-71"];
m21_76 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="71-71"];
m21_81 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="80-80"];
m21_83 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="80-80"];
m21_94 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="88-88"];
m21_116 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="113-113"];
m21_119 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="117-119"];
m21_128 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="131-131"];
m21_137 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="137-137"];
m21_140 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="141-141"];
m21_142 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="141-141"];
m21_164 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="161-161"];
m21_168 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(cts.Token)", span="166-166"];
m21_176 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="179-179"];
m21_178 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="179-179"];
m21_38 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="38-38"];
m21_100 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="94-94"];
m21_58 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="54-54"];
m21_96 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="88-88"];
m21_118 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="113-113"];
m21_121 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="117-119"];
m21_130 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="131-131"];
m21_139 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="137-137"];
m21_32 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="37-37"];
m21_31 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.CurrentDateTime", span="37-37"];
m21_50 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="49-49"];
m21_49 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetConnection()", span="49-49"];
m21_54 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="51-51"];
m21_53 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(''recurring-jobs'')", span="51-51"];
m21_166 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="161-161"];
m21_165 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.CurrentDateTime", span="161-161"];
m21_169 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="166-166"];
m21_92 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51"];
m21_131 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="135-135"];
m21_132 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="137-138"];
m21_133 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="139-139"];
m21_134 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="141-141"];
m21_135 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="135-135"];
m21_70 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="68-68"];
m21_71 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RecurringJobScheduler(_storage.Object, null, _dateTimeProvider.Object))", span="70-71"];
m21_72 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="73-73"];
m21_73 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="68-68"];
m21_20 [cluster="System.DateTime.AddHours(double)", file="RecurringJobSchedulerFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m21_27 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m21_55 [cluster="Unk.GetAllItemsFromSet", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m21_170 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="170-170"];
m21_171 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="173-174"];
m21_172 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="176-176"];
m21_173 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="179-179"];
m21_174 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="170-170"];
m21_84 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_AndUpdatesIt_WhenNextExecutionTime_IsEqualToCurrentTime()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_AndUpdatesIt_WhenNextExecutionTime_IsEqualToCurrentTime()", span="86-86"];
m21_89 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_AndUpdatesIt_WhenNextExecutionTime_IsEqualToCurrentTime()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="1: _connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj[''LastExecution''] == JobHelper.SerializeDateTime(_currentTime)\r\n                 && rj[''LastJobId''] == ''job-id''\r\n                 && rj[''NextExecution''] == JobHelper.SerializeDateTime(_nextTime))))", span="96-101"];
m21_88 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_AndUpdatesIt_WhenNextExecutionTime_IsEqualToCurrentTime()", file="RecurringJobSchedulerFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="94-94"];
m21_85 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_AndUpdatesIt_WhenNextExecutionTime_IsEqualToCurrentTime()", file="RecurringJobSchedulerFacts.cs", label="_client.Setup(x => x.Create(It.IsAny<Job>(), It.IsAny<IState>())).Returns(''job-id'')", span="88-88"];
m21_86 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_AndUpdatesIt_WhenNextExecutionTime_IsEqualToCurrentTime()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="90-90"];
m21_87 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_AndUpdatesIt_WhenNextExecutionTime_IsEqualToCurrentTime()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="92-92"];
m21_90 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_AndUpdatesIt_WhenNextExecutionTime_IsEqualToCurrentTime()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_AndUpdatesIt_WhenNextExecutionTime_IsEqualToCurrentTime()", span="86-86"];
m21_25 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m21_97 [cluster="Unk.Create", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Create", span=""];
m21_122 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_WhenNextExecutionTime_IsInThePast()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_WhenNextExecutionTime_IsInThePast()", span="124-124"];
m21_123 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_WhenNextExecutionTime_IsInThePast()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="0: _recurringJob[''NextExecution''] = JobHelper.SerializeDateTime(_currentTime.AddDays(-1))", span="126-126"];
m21_124 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_WhenNextExecutionTime_IsInThePast()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="127-127"];
m21_125 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_WhenNextExecutionTime_IsInThePast()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="129-129"];
m21_126 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_WhenNextExecutionTime_IsInThePast()", file="RecurringJobSchedulerFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="131-131"];
m21_127 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_WhenNextExecutionTime_IsInThePast()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesRecurringJob_WhenNextExecutionTime_IsInThePast()", span="124-124"];
m21_22 [cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m21_149 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m21_93 [cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m21_15 [cluster="Mock<JobStorage>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m21_26 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m21_0 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="26-26"];
m21_9 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="0: _recurringJob = new Dictionary<string, string>\r\n            {\r\n                { ''NextExecution'', JobHelper.SerializeDateTime(_currentTime) },\r\n                { ''Cron'', ''* * * * *'' },\r\n                { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) }\r\n            }", span="41-46"];
m21_8 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_dateTimeProvider.Setup(x => x.GetNextOccurrence(It.IsNotNull<CrontabSchedule>()))\r\n                .Returns(() => _nextTime)", span="38-39"];
m21_10 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="48-48"];
m21_1 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_storage = new Mock<JobStorage>()", span="28-28"];
m21_2 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_client = new Mock<IBackgroundJobClient>()", span="29-29"];
m21_3 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_dateTimeProvider = new Mock<IDateTimeProvider>()", span="30-30"];
m21_4 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_token = new CancellationToken()", span="31-31"];
m21_5 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_currentTime = new DateTime(2012, 12, 12, 12, 12, 0)", span="34-34"];
m21_6 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_nextTime = _currentTime.AddHours(1)", span="35-35"];
m21_7 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_dateTimeProvider.Setup(x => x.CurrentDateTime).Returns(() => _currentTime)", span="37-37"];
m21_11 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="49-49"];
m21_12 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(''recurring-jobs''))\r\n                .Returns(new HashSet<string> { RecurringJobId })", span="51-52"];
m21_13 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId)))\r\n                .Returns(_recurringJob)", span="54-55"];
m21_14 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="26-26"];
m21_91 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="182-182"];
m21_179 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="return new RecurringJobScheduler(_storage.Object, _client.Object, _dateTimeProvider.Object);", span="184-184"];
m21_180 [cluster="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="182-182"];
m21_181 [file="RecurringJobSchedulerFacts.cs", label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", span=""];
m21_182 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m21_185 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m21_183 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m21_184 [file="RecurringJobSchedulerFacts.cs", label=cts, span=""];
m22_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobsPage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m22_35 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="RecurringJobsPage.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m22_25 [cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobsPage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m22_27 [cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RecurringJobsPage.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m22_0 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m22_1 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="RecurringJobs = new List<RecurringJobDto>()", span="11-11"];
m22_2 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var connection = JobStorage.Current.GetConnection()", span="13-13"];
m22_3 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="15-15"];
m22_5 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="19-19"];
m22_18 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var stateData = connection.GetStateData(dto.LastJobId)", span="49-49"];
m22_4 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label=ids, span="17-17"];
m22_7 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="RecurringJobs.Add(new RecurringJobDto { Id = id, Removed = true })", span="23-23"];
m22_8 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var dto = new RecurringJobDto { Id = id }", span="27-27"];
m22_6 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="hash == null", span="21-21"];
m22_9 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="dto.Cron = hash[''Cron'']", span="28-28"];
m22_10 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="32-32"];
m22_14 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="hash.ContainsKey(''NextExecution'')", span="40-40"];
m22_15 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=red, community=0, file="RecurringJobsPage.cs", label="0: dto.NextExecution = JobHelper.FromStringTimestamp(hash[''NextExecution''])", span="42-42"];
m22_16 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="hash.ContainsKey(''LastJobId'')", span="45-45"];
m22_17 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="dto.LastJobId = hash[''LastJobId'']", span="47-47"];
m22_21 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="hash.ContainsKey(''LastExecution'')", span="56-56"];
m22_22 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=red, community=0, file="RecurringJobsPage.cs", label="0: dto.LastExecution = JobHelper.FromStringTimestamp(hash[''LastExecution''])", span="58-58"];
m22_11 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="dto.Job = invocationData.Deserialize()", span="33-33"];
m22_13 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="dto.LoadException = ex", span="37-37"];
m22_20 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="dto.LastJobState = stateData.Name", span="52-52"];
m22_23 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="RecurringJobs.Add(dto)", span="61-61"];
m22_12 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label=JobLoadException, span="35-35"];
m22_19 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="stateData != null", span="50-50"];
m22_24 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="Exit HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m22_31 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobsPage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m22_32 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobsPage.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m22_33 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RecurringJobsPage.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m22_29 [cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobsPage.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m22_36 [cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="RecurringJobsPage.cs", label="Entry HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m22_30 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", file="RecurringJobsPage.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", span="68-68"];
m22_28 [cluster="string.Format(string, object)", file="RecurringJobsPage.cs", label="Entry string.Format(string, object)", span="0-0"];
m22_26 [cluster="HangFire.JobStorage.GetConnection()", file="RecurringJobsPage.cs", label="Entry HangFire.JobStorage.GetConnection()", span="56-56"];
m22_37 [file="RecurringJobsPage.cs", label="HangFire.Web.Pages.RecurringJobsPage", span=""];
m23_86 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90"];
m23_87 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="RecurringJobsPage.generated.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<OperationCanceledException>()", span="92-92"];
m23_88 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="RecurringJobsPage.generated.cs", label="var wrapper = CreateWrapper()", span="93-93"];
m23_89 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="RecurringJobsPage.generated.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="95-95"];
m23_90 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="RecurringJobsPage.generated.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="97-97"];
m23_91 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90"];
m23_22 [cluster="Unk.Same", file="RecurringJobsPage.generated.cs", label="Entry Unk.Same", span=""];
m23_7 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="23-23"];
m23_8 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RecurringJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new AutomaticRetryProcess(null))", span="25-27"];
m23_9 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RecurringJobsPage.generated.cs", label="Assert.Equal(''innerComponent'', exception.ParamName)", span="29-29"];
m23_10 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="23-23"];
m23_76 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m23_11 [cluster="Unk.>", file="RecurringJobsPage.generated.cs", label="Entry Unk.>", span=""];
m23_0 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15"];
m23_1 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="RecurringJobsPage.generated.cs", label="_component = new Mock<IServerComponent>()", span="17-17"];
m23_2 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="RecurringJobsPage.generated.cs", label="_maxRetryAttempts = 3", span="18-18"];
m23_3 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="RecurringJobsPage.generated.cs", label="_cts = new CancellationTokenSource()", span="19-19"];
m23_4 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15"];
m23_112 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m23_23 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", span="41-41"];
m23_24 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="RecurringJobsPage.generated.cs", label="var wrapper = CreateWrapper()", span="43-43"];
m23_25 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="RecurringJobsPage.generated.cs", label="wrapper.Execute(_cts.Token)", span="45-45"];
m23_26 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="RecurringJobsPage.generated.cs", label="_component.Verify(x => x.Execute(It.Is<CancellationToken>(y => y == _cts.Token)))", span="47-47"];
m23_27 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", span="41-41"];
m23_103 [cluster="AutomaticRetryProcess.cstr", file="RecurringJobsPage.generated.cs", label="Entry AutomaticRetryProcess.cstr", span=""];
m23_53 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64"];
m23_54 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="RecurringJobsPage.generated.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="66-66"];
m23_55 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="RecurringJobsPage.generated.cs", label="_maxRetryAttempts = 0", span="67-67"];
m23_56 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="RecurringJobsPage.generated.cs", label="var wrapper = CreateWrapper()", span="68-68"];
m23_57 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="RecurringJobsPage.generated.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="70-70"];
m23_58 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="RecurringJobsPage.generated.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="72-74"];
m23_59 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64"];
m23_42 [cluster="Unk.Setup", file="RecurringJobsPage.generated.cs", label="Entry Unk.Setup", span=""];
m23_6 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m23_5 [cluster="Mock<IServerComponent>.cstr", file="RecurringJobsPage.generated.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m23_43 [cluster="Unk.Exactly", file="RecurringJobsPage.generated.cs", label="Entry Unk.Exactly", span=""];
m23_104 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="105-105"];
m23_13 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="27-27"];
m23_14 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="new AutomaticRetryProcess(null)", span="27-27"];
m23_15 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="27-27"];
m23_30 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="47-47"];
m23_31 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="x.Execute(It.Is<CancellationToken>(y => y == _cts.Token))", span="47-47"];
m23_32 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="47-47"];
m23_33 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="47-47"];
m23_34 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="y == _cts.Token", span="47-47"];
m23_35 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="47-47"];
m23_44 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="53-53"];
m23_48 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="wrapper.Execute(_cts.Token)", span="56-56"];
m23_47 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="56-56"];
m23_50 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="58-59"];
m23_45 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="53-53"];
m23_46 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="53-53"];
m23_49 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="56-56"];
m23_51 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="58-59"];
m23_52 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="58-59"];
m23_60 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="66-66"];
m23_64 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="wrapper.Execute(_cts.Token)", span="70-70"];
m23_63 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="70-70"];
m23_66 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="72-73"];
m23_61 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="66-66"];
m23_62 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="66-66"];
m23_65 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="70-70"];
m23_67 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="72-73"];
m23_68 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="72-73"];
m23_81 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="wrapper.Execute(_cts.Token)", span="84-84"];
m23_77 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="81-81"];
m23_80 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="84-84"];
m23_83 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="86-86"];
m23_78 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="81-81"];
m23_79 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="81-81"];
m23_82 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="84-84"];
m23_84 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="86-86"];
m23_85 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="86-86"];
m23_92 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="92-92"];
m23_96 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="wrapper.Execute(_cts.Token)", span="95-95"];
m23_95 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="95-95"];
m23_98 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Entry lambda expression", span="97-97"];
m23_93 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="92-92"];
m23_94 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="92-92"];
m23_97 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="95-95"];
m23_99 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="97-97"];
m23_100 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="97-97"];
m23_105 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="TimeSpan.Zero", span="105-105"];
m23_106 [cluster="lambda expression", file="RecurringJobsPage.generated.cs", label="Exit lambda expression", span="105-105"];
m23_36 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51"];
m23_37 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="RecurringJobsPage.generated.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="53-53"];
m23_38 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="RecurringJobsPage.generated.cs", label="var wrapper = CreateWrapper()", span="54-54"];
m23_39 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="RecurringJobsPage.generated.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="56-56"];
m23_40 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="RecurringJobsPage.generated.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Exactly(_maxRetryAttempts))", span="58-60"];
m23_41 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51"];
m23_69 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78"];
m23_70 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="RecurringJobsPage.generated.cs", label="var wrapper = CreateWrapper()", span="80-80"];
m23_71 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="RecurringJobsPage.generated.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="81-81"];
m23_73 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="RecurringJobsPage.generated.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="84-84"];
m23_72 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="RecurringJobsPage.generated.cs", label="_cts.Cancel()", span="82-82"];
m23_74 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="RecurringJobsPage.generated.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="86-86"];
m23_75 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78"];
m23_17 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m23_18 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="RecurringJobsPage.generated.cs", label="var wrapper = CreateWrapper()", span="35-35"];
m23_19 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="RecurringJobsPage.generated.cs", label="Assert.Same(_component.Object, wrapper.InnerProcess)", span="37-37"];
m23_20 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m23_28 [cluster="Unk.Execute", file="RecurringJobsPage.generated.cs", label="Entry Unk.Execute", span=""];
m23_111 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m23_16 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30"];
m23_29 [cluster="Unk.Verify", file="RecurringJobsPage.generated.cs", label="Entry Unk.Verify", span=""];
m23_21 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100"];
m23_101 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="RecurringJobsPage.generated.cs", label="return new AutomaticRetryProcess(_component.Object)\r\n            {\r\n                MaxRetryAttempts = _maxRetryAttempts,\r\n                DelayCallback = x => TimeSpan.Zero\r\n            };", span="102-106"];
m23_102 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100"];
m23_107 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="112-112"];
m23_108 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="RecurringJobsPage.generated.cs", label="token.WaitHandle.WaitOne(Timeout.Infinite)", span="114-114"];
m23_109 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="RecurringJobsPage.generated.cs", label="token.ThrowIfCancellationRequested()", span="115-115"];
m23_110 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="112-112"];
m23_113 [file="RecurringJobsPage.generated.cs", label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", span=""];
m23_114 [file="RecurringJobsPage.generated.cs", label=wrapper, span=""];
m23_115 [file="RecurringJobsPage.generated.cs", label=wrapper, span=""];
m23_116 [file="RecurringJobsPage.generated.cs", label=wrapper, span=""];
m23_117 [file="RecurringJobsPage.generated.cs", label=wrapper, span=""];
m24_6 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="16-16"];
m24_7 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="RedisConnection.cs", label="var state = new SucceededState()", span="18-18"];
m24_8 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="RedisConnection.cs", label="var data = state.SerializeData()", span="20-20"];
m24_9 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="RedisConnection.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.SucceededAt), data[''SucceededAt''])", span="22-22"];
m24_10 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="RedisConnection.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="16-16"];
m24_13 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="26-26"];
m24_14 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="RedisConnection.cs", label="var state = new SucceededState()", span="28-28"];
m24_15 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="RedisConnection.cs", label="Assert.True(state.IsFinal)", span="29-29"];
m24_16 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="RedisConnection.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="26-26"];
m24_17 [cluster="Unk.True", file="RedisConnection.cs", label="Entry Unk.True", span=""];
m24_0 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9"];
m24_1 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="RedisConnection.cs", label="var state = new SucceededState()", span="11-11"];
m24_2 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="RedisConnection.cs", label="Assert.Equal(SucceededState.StateName, state.Name)", span="12-12"];
m24_3 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="RedisConnection.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9"];
m24_11 [cluster="HangFire.States.SucceededState.SerializeData()", file="RedisConnection.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="39-39"];
m24_4 [cluster="HangFire.States.SucceededState.SucceededState()", file="RedisConnection.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m24_12 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisConnection.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m25_86 [cluster="System.Collections.Generic.List<T>.List()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m25_190 [cluster="long.Parse(string)", file="RedisMonitoringApi.cs", label="Entry long.Parse(string)", span="0-0"];
m25_247 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="343-343"];
m25_248 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="346-365"];
m25_249 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="343-343"];
m25_311 [cluster="Dictionary<string, string>.cstr", file="RedisMonitoringApi.cs", label="Entry Dictionary<string, string>.cstr", span=""];
m25_274 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="457-457"];
m25_327 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var endDate = DateTime.UtcNow", span="460-460"];
m25_334 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="468-468"];
m25_335 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="469-469"];
m25_328 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var dates = new List<DateTime>()", span="461-461"];
m25_331 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="dates.Add(endDate)", span="464-464"];
m25_332 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="endDate = endDate.AddHours(-1)", span="465-465"];
m25_329 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var i = 0", span="462-462"];
m25_338 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i < dates.Count", span="472-472"];
m25_342 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="result.Add(dates[i], value)", span="480-480"];
m25_330 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i < 24", span="462-462"];
m25_333 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i++", span="462-462"];
m25_336 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="471-471"];
m25_340 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="475-475"];
m25_337 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var i = 0", span="472-472"];
m25_344 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="return result;", span="483-483"];
m25_343 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i++", span="472-472"];
m25_339 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="long value", span="474-474"];
m25_341 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="value = 0", span="477-477"];
m25_345 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="457-457"];
m25_122 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="486-486"];
m25_356 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var endDate = DateTime.UtcNow.Date", span="489-489"];
m25_363 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="500-500"];
m25_364 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="502-502"];
m25_357 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var startDate = endDate.AddDays(-7)", span="490-490"];
m25_359 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="startDate <= endDate", span="493-493"];
m25_360 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="dates.Add(endDate)", span="495-495"];
m25_361 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="endDate = endDate.AddDays(-1)", span="496-496"];
m25_358 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var dates = new List<DateTime>()", span="491-491"];
m25_362 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="499-499"];
m25_371 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="result.Add(dates[i], value)", span="512-512"];
m25_367 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i < stringDates.Count", span="505-505"];
m25_365 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="504-504"];
m25_369 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="508-508"];
m25_366 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var i = 0", span="505-505"];
m25_373 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="return result;", span="515-515"];
m25_372 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i++", span="505-505"];
m25_368 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="long value", span="507-507"];
m25_370 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="value = 0", span="510-510"];
m25_374 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="486-486"];
m25_165 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m25_257 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="368-368"];
m25_258 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'', ''Fetched'' },\r\n                    null,\r\n                    (job, jobData, state) => new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    });\r\n            });", span="371-388"];
m25_259 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="368-368"];
m25_349 [cluster="Unk.TryParse", file="RedisMonitoringApi.cs", label="Entry Unk.TryParse", span=""];
m25_61 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m25_56 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m25_62 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m25_164 [cluster="int.Parse(string)", file="RedisMonitoringApi.cs", label="Entry int.Parse(string)", span="0-0"];
m25_275 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="396-396"];
m25_276 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label="return UseConnection(redis => GetHourlyTimelineStats(redis, ''failed''));", span="398-398"];
m25_277 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="396-396"];
m25_515 [cluster="Unk.GetClient", file="RedisMonitoringApi.cs", label="Entry Unk.GetClient", span=""];
m25_433 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="580-580"];
m25_434 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="return UseConnection(redis =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n\r\n                var queues = redis.GetAllItemsFromSet(''hangfire:queues'');\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''));\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:deleted''),\r\n                        x => stats.Deleted = long.Parse(x ?? ''0''));\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:recurring-jobs''),\r\n                        x => stats.Recurring = x);\r\n\r\n                    foreach (var queue in queues)\r\n                    {\r\n                        var queueName = queue;\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x);\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return stats;\r\n            });", span="582-634"];
m25_435 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="580-580"];
m25_22 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51"];
m25_23 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RedisMonitoringApi.cs", label="return UseConnection(redis => \r\n                redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)));", span="53-54"];
m25_24 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51"];
m25_55 [cluster="Unk.GetJobsWithProperties", file="RedisMonitoringApi.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m25_57 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m25_421 [cluster="KeyValuePair<string, T>.cstr", file="RedisMonitoringApi.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m25_91 [cluster="JobList<ScheduledJobDto>.cstr", file="RedisMonitoringApi.cs", label="Entry JobList<ScheduledJobDto>.cstr", span=""];
m25_88 [cluster="Unk.CreatePipeline", file="RedisMonitoringApi.cs", label="Entry Unk.CreatePipeline", span=""];
m25_522 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m25_516 [cluster="Unk.action", file="RedisMonitoringApi.cs", label="Entry Unk.action", span=""];
m25_402 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m25_281 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="401-401"];
m25_282 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", color=red, community=0, file="RedisMonitoringApi.cs", label="0: return UseConnection(redis =>\r\n            {\r\n                var job = redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId));\r\n                if (job.Count == 0) return null;\r\n\r\n                var hiddenProperties = new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' };\r\n\r\n                var historyList = redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId));\r\n\r\n                var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList();\r\n\r\n                var stateHistory = new List<StateHistoryDto>(history.Count);\r\n                foreach (var entry in history)\r\n                {\r\n                    var dto = new StateHistoryDto\r\n                    {\r\n                        StateName = entry[''State''],\r\n                        Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                        CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                    };\r\n\r\n                    // Each history item contains all of the information,\r\n                    // but other code should not know this. We'll remove\r\n                    // unwanted keys.\r\n                    var stateData = new Dictionary<string, string>(entry);\r\n                    stateData.Remove(''State'');\r\n                    stateData.Remove(''Reason'');\r\n                    stateData.Remove(''CreatedAt'');\r\n\r\n                    dto.Data = stateData;\r\n                    stateHistory.Add(dto);\r\n                }\r\n\r\n                // For compatibility\r\n                if (!job.ContainsKey(''Method'')) job.Add(''Method'', null);\r\n                if (!job.ContainsKey(''ParameterTypes'')) job.Add(''ParameterTypes'', null);\r\n\r\n                return new JobDetailsDto\r\n                {\r\n                    Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                    CreatedAt =\r\n                        job.ContainsKey(''CreatedAt'')\r\n                            ? JobHelper.FromStringTimestamp(job[''CreatedAt''])\r\n                            : (DateTime?) null,\r\n                    Properties =\r\n                        job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = stateHistory\r\n                };\r\n            });", span="403-454"];
m25_283 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="401-401"];
m25_309 [cluster="Unk.ContainsKey", file="RedisMonitoringApi.cs", label="Entry Unk.ContainsKey", span=""];
m25_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisMonitoringApi.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m25_113 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m25_423 [cluster="Unk.selector", file="RedisMonitoringApi.cs", label="Entry Unk.selector", span=""];
m25_427 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="575-575"];
m25_428 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RedisMonitoringApi.cs", label="return UseConnection(redis => redis.GetListCount(''hangfire:succeeded''));", span="577-577"];
m25_429 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="575-575"];
m25_407 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m25_454 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m25_85 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m25_163 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m25_307 [cluster="List<StateHistoryDto>.cstr", file="RedisMonitoringApi.cs", label="Entry List<StateHistoryDto>.cstr", span=""];
m25_315 [cluster="Unk.Where", file="RedisMonitoringApi.cs", label="Entry Unk.Where", span=""];
m25_191 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="263-263"];
m25_192 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return UseConnection(redis =>\r\n            {\r\n                var deletedJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:deleted'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    deletedJobIds,\r\n                    null,\r\n                    new[] { ''DeletedAt'', ''State'' },\r\n                    (job, jobData, state) => new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="265-283"];
m25_193 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="263-263"];
m25_375 [cluster="System.DateTime.AddDays(double)", file="RedisMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m25_222 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="518-518"];
m25_382 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="jobIds.Count == 0", span="525-525"];
m25_384 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="527-527"];
m25_385 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="528-528"];
m25_386 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="properties = properties ?? new string[0]", span="530-530"];
m25_387 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var pipeline = redis.CreatePipeline()", span="532-532"];
m25_388 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label=jobIds, span="534-534"];
m25_391 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="stateProperties != null", span="544-544"];
m25_392 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="546-548"];
m25_394 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null)\r\n                        ? default(T)\r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="555-572"];
m25_383 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="525-525"];
m25_390 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id),\r\n                            properties.Union(new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="538-542"];
m25_393 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="552-552"];
m25_389 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var id = jobId", span="536-536"];
m25_395 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="518-518"];
m25_422 [cluster="Unk.TrueForAll", file="RedisMonitoringApi.cs", label="Entry Unk.TrueForAll", span=""];
m25_9 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", span="637-637"];
m25_512 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="RedisMonitoringApi.cs", label="var redis = _connectionPool.GetClient()", span="639-639"];
m25_513 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="RedisMonitoringApi.cs", label="return action(redis);", span="641-641"];
m25_514 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", span="637-637"];
m25_313 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m25_112 [cluster="KeyValuePair<string, ScheduledJobDto>.cstr", file="RedisMonitoringApi.cs", label="Entry KeyValuePair<string, ScheduledJobDto>.cstr", span=""];
m25_0 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", span="32-32"];
m25_1 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="RedisMonitoringApi.cs", label="connectionPool == null", span="34-34"];
m25_3 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="RedisMonitoringApi.cs", label="_connectionPool = connectionPool", span="36-36"];
m25_2 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="RedisMonitoringApi.cs", label="throw new ArgumentNullException(''connectionPool'');", span="34-34"];
m25_4 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", span="32-32"];
m25_201 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m25_509 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="627-627"];
m25_10 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="41-42"];
m25_11 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="redis.GetSortedSetCount(''hangfire:schedule'')", span="42-42"];
m25_12 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="41-42"];
m25_18 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="48-48"];
m25_17 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="47-48"];
m25_19 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="47-48"];
m25_26 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="54-54"];
m25_25 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="53-54"];
m25_27 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="53-54"];
m25_31 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="59-59"];
m25_32 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="redis.GetSortedSetCount(''hangfire:failed'')", span="59-59"];
m25_33 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="59-59"];
m25_37 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="64-64"];
m25_38 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="redis.GetSortedSetCount(''hangfire:processing'')", span="64-64"];
m25_39 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="64-64"];
m25_43 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="69-69"];
m25_44 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="redis.GetListCount(''hangfire:deleted'')", span="69-69"];
m25_45 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="69-69"];
m25_50 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="77-80"];
m25_49 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="75-94"];
m25_51 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());", span="82-93"];
m25_52 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="75-94"];
m25_58 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="86-93"];
m25_64 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="93-93"];
m25_59 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }", span="86-93"];
m25_60 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="86-93"];
m25_65 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Value.StartedAt", span="93-93"];
m25_66 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="93-93"];
m25_72 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var scheduledJobs = redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="101-104"];
m25_71 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="99-151"];
m25_77 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var pipeline = redis.CreatePipeline()", span="114-114"];
m25_73 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="scheduledJobs.Count == 0", span="106-106"];
m25_78 [cluster="lambda expression", file="RedisMonitoringApi.cs", label=scheduledJobs, span="116-116"];
m25_83 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return new JobList<ScheduledJobDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());", span="136-150"];
m25_74 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());", span="108-108"];
m25_75 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var jobs = new Dictionary<string, List<string>>()", span="111-111"];
m25_76 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var states = new Dictionary<string, List<String>>()", span="112-112"];
m25_80 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                            x => jobs.Add(job.Key, x))", span="120-124"];
m25_100 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="jobs.Add(job.Key, x)", span="124-124"];
m25_110 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="0: new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="137-149"];
m25_81 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' }),\r\n                            x => states.Add(job.Key, x))", span="126-130"];
m25_107 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="states.Add(job.Key, x)", span="130-130"];
m25_82 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="133-133"];
m25_79 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var job = scheduledJob", span="118-118"];
m25_95 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' })", span="121-123"];
m25_104 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' })", span="127-129"];
m25_94 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="121-123"];
m25_99 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="124-124"];
m25_103 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="127-129"];
m25_106 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="130-130"];
m25_84 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="99-151"];
m25_109 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="137-149"];
m25_96 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="121-123"];
m25_101 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="124-124"];
m25_105 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="127-129"];
m25_108 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="130-130"];
m25_111 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="137-149"];
m25_119 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="156-156"];
m25_120 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="GetTimelineStats(redis, ''succeeded'')", span="156-156"];
m25_121 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="156-156"];
m25_126 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="161-161"];
m25_127 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="GetTimelineStats(redis, ''failed'')", span="161-161"];
m25_128 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="161-161"];
m25_132 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="166-207"];
m25_133 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'')", span="168-168"];
m25_138 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var pipeline = redis.CreatePipeline()", span="178-178"];
m25_134 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="serverNames.Count == 0", span="170-170"];
m25_139 [cluster="lambda expression", file="RedisMonitoringApi.cs", label=serverNames, span="180-180"];
m25_144 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="0: return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="199-206"];
m25_135 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="return new List<ServerDto>();", span="172-172"];
m25_136 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var servers = new Dictionary<string, List<string>>()", span="175-175"];
m25_137 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var queues = new Dictionary<string, List<string>>()", span="176-176"];
m25_141 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="184-188"];
m25_151 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="servers.Add(name, x)", span="188-188"];
m25_161 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="199-206"];
m25_142 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="190-193"];
m25_158 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="queues.Add(name, x)", span="193-193"];
m25_143 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="196-196"];
m25_140 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var name = serverName", span="182-182"];
m25_148 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="185-187"];
m25_154 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="191-192"];
m25_147 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="185-187"];
m25_150 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="188-188"];
m25_153 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="191-192"];
m25_157 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="193-193"];
m25_145 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="166-207"];
m25_160 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="199-206"];
m25_149 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="185-187"];
m25_152 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="188-188"];
m25_155 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="191-192"];
m25_159 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="193-193"];
m25_162 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="199-206"];
m25_170 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var failedJobIds = redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="214-217"];
m25_169 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="212-234"];
m25_171 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return GetJobsWithProperties(\r\n                    redis,\r\n                    failedJobIds,\r\n                    null,\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                    (job, jobData, state) => new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="219-233"];
m25_172 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="212-234"];
m25_174 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="224-233"];
m25_175 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="224-233"];
m25_176 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="224-233"];
m25_182 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="241-244"];
m25_181 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="239-260"];
m25_183 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="0: return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="246-259"];
m25_184 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="239-260"];
m25_186 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="251-259"];
m25_187 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="251-259"];
m25_188 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="251-259"];
m25_195 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var deletedJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:deleted'',\r\n                    from,\r\n                    from + count - 1)", span="267-270"];
m25_194 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="265-283"];
m25_196 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return GetJobsWithProperties(\r\n                    redis,\r\n                    deletedJobIds,\r\n                    null,\r\n                    new[] { ''DeletedAt'', ''State'' },\r\n                    (job, jobData, state) => new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="272-282"];
m25_197 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="265-283"];
m25_198 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="277-282"];
m25_199 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="277-282"];
m25_200 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="277-282"];
m25_205 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="288-340"];
m25_206 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="290-290"];
m25_212 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var pipeline = redis.CreatePipeline()", span="299-299"];
m25_217 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="0: var jobs = GetJobsWithProperties(\r\n                        redis,\r\n                        firstJobIds,\r\n                        new[] { ''State'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, jobData, state) => new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="317-328"];
m25_207 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="291-291"];
m25_208 [cluster="lambda expression", file="RedisMonitoringApi.cs", label=queues, span="293-293"];
m25_218 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Fetched = fetched\r\n                    })", span="330-336"];
m25_219 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="return result;", span="339-339"];
m25_209 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="IList<string> firstJobIds = null", span="295-295"];
m25_213 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="301-304"];
m25_226 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="302-303"];
m25_214 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="306-308"];
m25_232 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="307-307"];
m25_215 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => fetched = x)", span="310-312"];
m25_238 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="311-311"];
m25_210 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="long length = 0", span="296-296"];
m25_211 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="long fetched = 0", span="297-297"];
m25_216 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="314-314"];
m25_225 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="302-303"];
m25_228 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="304-304"];
m25_231 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="307-307"];
m25_234 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="308-308"];
m25_237 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="311-311"];
m25_240 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="312-312"];
m25_243 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="322-328"];
m25_220 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="288-340"];
m25_227 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="302-303"];
m25_229 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="firstJobIds = x", span="304-304"];
m25_230 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="304-304"];
m25_233 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="307-307"];
m25_235 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="length = x", span="308-308"];
m25_236 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="308-308"];
m25_239 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="311-311"];
m25_241 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="fetched = x", span="312-312"];
m25_242 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="312-312"];
m25_244 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="322-328"];
m25_245 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="322-328"];
m25_251 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="348-351"];
m25_250 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="346-365"];
m25_252 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="353-364"];
m25_253 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="346-365"];
m25_254 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="358-364"];
m25_255 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="358-364"];
m25_256 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="358-364"];
m25_261 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="373-375"];
m25_260 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="371-388"];
m25_262 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="0: return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'', ''Fetched'' },\r\n                    null,\r\n                    (job, jobData, state) => new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    });", span="377-387"];
m25_263 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="371-388"];
m25_264 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="382-387"];
m25_265 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    }", span="382-387"];
m25_266 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="382-387"];
m25_271 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="393-393"];
m25_272 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="GetHourlyTimelineStats(redis, ''succeeded'')", span="393-393"];
m25_273 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="393-393"];
m25_278 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="398-398"];
m25_279 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="GetHourlyTimelineStats(redis, ''failed'')", span="398-398"];
m25_280 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="398-398"];
m25_285 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var job = redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="405-405"];
m25_289 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var historyList = redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="410-411"];
m25_284 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="403-454"];
m25_286 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="job.Count == 0", span="406-406"];
m25_300 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!job.ContainsKey(''Method'')", span="440-440"];
m25_301 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="job.Add(''Method'', null)", span="440-440"];
m25_302 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!job.ContainsKey(''ParameterTypes'')", span="441-441"];
m25_303 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="job.Add(''ParameterTypes'', null)", span="441-441"];
m25_304 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return new JobDetailsDto\r\n                {\r\n                    Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                    CreatedAt =\r\n                        job.ContainsKey(''CreatedAt'')\r\n                            ? JobHelper.FromStringTimestamp(job[''CreatedAt''])\r\n                            : (DateTime?) null,\r\n                    Properties =\r\n                        job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = stateHistory\r\n                };", span="443-453"];
m25_287 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="return null;", span="406-406"];
m25_288 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var hiddenProperties = new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' }", span="408-408"];
m25_318 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!hiddenProperties.Contains(x.Key)", span="451-451"];
m25_290 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="413-415"];
m25_291 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var stateHistory = new List<StateHistoryDto>(history.Count)", span="417-417"];
m25_292 [cluster="lambda expression", file="RedisMonitoringApi.cs", label=history, span="418-418"];
m25_299 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stateHistory.Add(dto)", span="436-436"];
m25_293 [cluster="lambda expression", color=red, community=0, file="RedisMonitoringApi.cs", label="1: var dto = new StateHistoryDto\r\n                    {\r\n                        StateName = entry[''State''],\r\n                        Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                        CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                    }", span="420-425"];
m25_294 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var stateData = new Dictionary<string, string>(entry)", span="430-430"];
m25_298 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="dto.Data = stateData", span="435-435"];
m25_295 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stateData.Remove(''State'')", span="431-431"];
m25_296 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stateData.Remove(''Reason'')", span="432-432"];
m25_297 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stateData.Remove(''CreatedAt'')", span="433-433"];
m25_305 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="403-454"];
m25_317 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="451-451"];
m25_321 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="451-451"];
m25_324 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="451-451"];
m25_319 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="451-451"];
m25_322 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Key", span="451-451"];
m25_323 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="451-451"];
m25_325 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Value", span="451-451"];
m25_326 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="451-451"];
m25_352 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="468-468"];
m25_351 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="468-468"];
m25_353 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="468-468"];
m25_380 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="500-500"];
m25_376 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="499-499"];
m25_379 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="500-500"];
m25_377 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.ToString(''yyyy-MM-dd'')", span="499-499"];
m25_378 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="499-499"];
m25_381 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="500-500"];
m25_409 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="547-547"];
m25_419 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null)\r\n                        ? default(T)\r\n                        : selector(x.Method, x.Job, x.State))", span="567-571"];
m25_404 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!jobs.ContainsKey(id)", span="542-542"];
m25_405 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="jobs.Add(id, x)", span="542-542"];
m25_416 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="556-566"];
m25_412 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!states.ContainsKey(id)", span="548-548"];
m25_413 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="states.Add(id, x)", span="548-548"];
m25_399 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id),\r\n                            properties.Union(new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray())", span="539-541"];
m25_398 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="539-541"];
m25_403 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="542-542"];
m25_408 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="547-547"];
m25_411 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="548-548"];
m25_415 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="556-566"];
m25_418 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="567-571"];
m25_400 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="539-541"];
m25_406 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="542-542"];
m25_410 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="547-547"];
m25_414 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="548-548"];
m25_417 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="556-566"];
m25_420 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="567-571"];
m25_424 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="569-569"];
m25_425 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="y == null", span="569-569"];
m25_426 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="569-569"];
m25_430 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="577-577"];
m25_431 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="redis.GetListCount(''hangfire:succeeded'')", span="577-577"];
m25_432 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="577-577"];
m25_436 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="582-634"];
m25_437 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var stats = new StatisticsDto()", span="584-584"];
m25_438 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="586-586"];
m25_439 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var pipeline = redis.CreatePipeline()", span="588-588"];
m25_440 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="590-592"];
m25_460 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Servers = x", span="592-592"];
m25_441 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="594-596"];
m25_466 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Queues = x", span="596-596"];
m25_442 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="598-600"];
m25_472 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Scheduled = x", span="600-600"];
m25_443 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="602-604"];
m25_478 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Processing = x", span="604-604"];
m25_444 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="606-608"];
m25_485 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="608-608"];
m25_445 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="610-612"];
m25_492 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Failed = x", span="612-612"];
m25_446 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:deleted''),\r\n                        x => stats.Deleted = long.Parse(x ?? ''0''))", span="614-616"];
m25_498 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Deleted = long.Parse(x ?? ''0'')", span="616-616"];
m25_447 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:recurring-jobs''),\r\n                        x => stats.Recurring = x)", span="618-620"];
m25_504 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Recurring = x", span="620-620"];
m25_450 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="625-627"];
m25_510 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Enqueued += x", span="627-627"];
m25_452 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="return stats;", span="633-633"];
m25_448 [cluster="lambda expression", file="RedisMonitoringApi.cs", label=queues, span="622-622"];
m25_451 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="630-630"];
m25_455 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="591-591"];
m25_459 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="592-592"];
m25_462 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="595-595"];
m25_465 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="596-596"];
m25_468 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="599-599"];
m25_471 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="600-600"];
m25_474 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="603-603"];
m25_477 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="604-604"];
m25_480 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="607-607"];
m25_484 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="608-608"];
m25_488 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="611-611"];
m25_491 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="612-612"];
m25_494 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="615-615"];
m25_497 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="616-616"];
m25_500 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="619-619"];
m25_503 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="620-620"];
m25_449 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="var queueName = queue", span="624-624"];
m25_507 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="626-626"];
m25_506 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="626-626"];
m25_453 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="582-634"];
m25_456 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSetCount(''hangfire:servers'')", span="591-591"];
m25_457 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="591-591"];
m25_461 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="592-592"];
m25_463 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSetCount(''hangfire:queues'')", span="595-595"];
m25_464 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="595-595"];
m25_467 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="596-596"];
m25_469 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="599-599"];
m25_470 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="599-599"];
m25_473 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="600-600"];
m25_475 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="603-603"];
m25_476 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="603-603"];
m25_479 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="604-604"];
m25_481 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="607-607"];
m25_482 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="607-607"];
m25_486 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="608-608"];
m25_489 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="611-611"];
m25_490 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="611-611"];
m25_493 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="612-612"];
m25_495 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValue(''hangfire:stats:deleted'')", span="615-615"];
m25_496 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="615-615"];
m25_499 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="616-616"];
m25_501 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:recurring-jobs'')", span="619-619"];
m25_502 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="619-619"];
m25_505 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="620-620"];
m25_508 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="626-626"];
m25_511 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="627-627"];
m25_53 [cluster="Unk.GetRangeFromSortedSet", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m25_223 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m25_224 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m25_93 [cluster="Unk.ToList", file="RedisMonitoringApi.cs", label="Entry Unk.ToList", span=""];
m25_97 [cluster="Unk.Format", file="RedisMonitoringApi.cs", label="Entry Unk.Format", span=""];
m25_89 [cluster="Unk.QueueCommand", file="RedisMonitoringApi.cs", label="Entry Unk.QueueCommand", span=""];
m25_115 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645"];
m25_517 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label="return new InvocationData(\r\n                    type,\r\n                    method,\r\n                    parameterTypes,\r\n                    arguments).Deserialize();", span="650-654"];
m25_518 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label=Exception, span="656-656"];
m25_519 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label="return null;", span="658-658"];
m25_520 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645"];
m25_166 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="210-210"];
m25_167 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return UseConnection(redis =>\r\n            {\r\n                var failedJobIds = redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    failedJobIds,\r\n                    null,\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                    (job, jobData, state) => new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="212-234"];
m25_168 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="210-210"];
m25_267 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m25_354 [cluster="System.DateTime.ToString(string)", file="RedisMonitoringApi.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m25_70 [cluster="Unk.UseConnection", file="RedisMonitoringApi.cs", label="Entry Unk.UseConnection", span=""];
m25_221 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RedisMonitoringApi.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m25_348 [cluster="Unk.ElementAt", file="RedisMonitoringApi.cs", label="Entry Unk.ElementAt", span=""];
m25_129 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164"];
m25_130 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return UseConnection(redis =>\r\n            {\r\n                var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'');\r\n\r\n                if (serverNames.Count == 0)\r\n                {\r\n                    return new List<ServerDto>();\r\n                }\r\n\r\n                var servers = new Dictionary<string, List<string>>();\r\n                var queues = new Dictionary<string, List<string>>();\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    foreach (var serverName in serverNames)\r\n                    {\r\n                        var name = serverName;\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x));\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x));\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();\r\n            });", span="166-207"];
m25_131 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164"];
m25_40 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67"];
m25_41 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RedisMonitoringApi.cs", label="return UseConnection(redis => redis.GetListCount(''hangfire:deleted''));", span="69-69"];
m25_42 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67"];
m25_185 [cluster="Unk.GetRangeFromList", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeFromList", span=""];
m25_178 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="237-237"];
m25_179 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return UseConnection(redis =>\r\n            {\r\n                var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="239-260"];
m25_180 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="237-237"];
m25_116 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154"];
m25_117 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="return UseConnection(redis => GetTimelineStats(redis, ''succeeded''));", span="156-156"];
m25_118 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154"];
m25_90 [cluster="Unk.Flush", file="RedisMonitoringApi.cs", label="Entry Unk.Flush", span=""];
m25_487 [cluster="Unk.Parse", file="RedisMonitoringApi.cs", label="Entry Unk.Parse", span=""];
m25_102 [cluster="Unk.Add", file="RedisMonitoringApi.cs", label="Entry Unk.Add", span=""];
m25_63 [cluster="string.Equals(string, System.StringComparison)", file="RedisMonitoringApi.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m25_28 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57"];
m25_29 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RedisMonitoringApi.cs", label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:failed''));", span="59-59"];
m25_30 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57"];
m25_346 [cluster="System.DateTime.AddHours(double)", file="RedisMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m25_46 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="72-72"];
m25_47 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());\r\n            });", span="75-94"];
m25_48 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="72-72"];
m25_13 [cluster="Unk.GetSortedSetCount", file="RedisMonitoringApi.cs", label="Entry Unk.GetSortedSetCount", span=""];
m25_189 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m25_34 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62"];
m25_35 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RedisMonitoringApi.cs", label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:processing''));", span="64-64"];
m25_36 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62"];
m25_401 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m25_312 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m25_397 [cluster="JobList<T>.cstr", file="RedisMonitoringApi.cs", label="Entry JobList<T>.cstr", span=""];
m25_350 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m25_521 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m25_268 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391"];
m25_269 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RedisMonitoringApi.cs", label="return UseConnection(redis => GetHourlyTimelineStats(redis, ''succeeded''));", span="393-393"];
m25_270 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391"];
m25_355 [cluster="string.Format(string, object, object)", file="RedisMonitoringApi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m25_306 [cluster="Unk.GetAllEntriesFromHash", file="RedisMonitoringApi.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m25_316 [cluster="Unk.ToDictionary", file="RedisMonitoringApi.cs", label="Entry Unk.ToDictionary", span=""];
m25_310 [cluster="Unk.FromStringTimestamp", file="RedisMonitoringApi.cs", label="Entry Unk.FromStringTimestamp", span=""];
m25_396 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m25_458 [cluster="Unk.GetSetCount", file="RedisMonitoringApi.cs", label="Entry Unk.GetSetCount", span=""];
m25_114 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="RedisMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45"];
m25_20 [cluster="string.Format(string, object)", file="RedisMonitoringApi.cs", label="Entry string.Format(string, object)", span="0-0"];
m25_123 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="159-159"];
m25_124 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RedisMonitoringApi.cs", label="return UseConnection(redis => GetTimelineStats(redis, ''failed''));", span="161-161"];
m25_125 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="159-159"];
m25_246 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m25_177 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m25_202 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="286-286"];
m25_203 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", color=red, community=0, file="RedisMonitoringApi.cs", label="0: return UseConnection(redis =>\r\n            {\r\n                var queues = redis.GetAllItemsFromSet(''hangfire:queues'');\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count);\r\n\r\n                foreach (var queue in queues)\r\n                {\r\n                    IList<string> firstJobIds = null;\r\n                    long length = 0;\r\n                    long fetched = 0;\r\n\r\n                    using (var pipeline = redis.CreatePipeline())\r\n                    {\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => fetched = x);\r\n\r\n                        pipeline.Flush();\r\n                    }\r\n\r\n                    var jobs = GetJobsWithProperties(\r\n                        redis,\r\n                        firstJobIds,\r\n                        new[] { ''State'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, jobData, state) => new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        });\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Fetched = fetched\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="288-340"];
m25_204 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="286-286"];
m25_314 [cluster="Unk.TryToGetJob", file="RedisMonitoringApi.cs", label="Entry Unk.TryToGetJob", span=""];
m25_21 [cluster="Unk.GetListCount", file="RedisMonitoringApi.cs", label="Entry Unk.GetListCount", span=""];
m25_67 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m25_68 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return UseConnection(redis =>\r\n            {\r\n                var scheduledJobs = redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                if (scheduledJobs.Count == 0)\r\n                {\r\n                    return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());\r\n                }\r\n\r\n                var jobs = new Dictionary<string, List<string>>();\r\n                var states = new Dictionary<string, List<String>>();\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    foreach (var scheduledJob in scheduledJobs)\r\n                    {\r\n                        var job = scheduledJob;\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                            x => jobs.Add(job.Key, x));\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' }),\r\n                            x => states.Add(job.Key, x));\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return new JobList<ScheduledJobDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());\r\n            });", span="99-151"];
m25_69 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m25_87 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m25_54 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m25_14 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="45-45"];
m25_15 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RedisMonitoringApi.cs", label="return UseConnection(redis => \r\n                redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue)));", span="47-48"];
m25_16 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="45-45"];
m25_347 [cluster="Unk.GetValuesMap", file="RedisMonitoringApi.cs", label="Entry Unk.GetValuesMap", span=""];
m25_6 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39"];
m25_7 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RedisMonitoringApi.cs", label="return UseConnection(redis => \r\n                redis.GetSortedSetCount(''hangfire:schedule''));", span="41-42"];
m25_8 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39"];
m25_156 [cluster="Unk.GetAllItemsFromList", file="RedisMonitoringApi.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m25_320 [cluster="Unk.Contains", file="RedisMonitoringApi.cs", label="Entry Unk.Contains", span=""];
m25_92 [cluster="Unk.Select", file="RedisMonitoringApi.cs", label="Entry Unk.Select", span=""];
m25_308 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m25_146 [cluster="Unk.GetAllItemsFromSet", file="RedisMonitoringApi.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m25_173 [cluster="Unk.GetRangeFromSortedSetDesc", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m25_483 [cluster="Unk.GetValue", file="RedisMonitoringApi.cs", label="Entry Unk.GetValue", span=""];
m25_98 [cluster="Unk.GetValuesFromHash", file="RedisMonitoringApi.cs", label="Entry Unk.GetValuesFromHash", span=""];
m25_523 [file="RedisMonitoringApi.cs", label="HangFire.Redis.RedisMonitoringApi", span=""];
m25_524 [file="RedisMonitoringApi.cs", label=string, span=""];
m25_525 [file="RedisMonitoringApi.cs", label=string, span=""];
m25_526 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_527 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_528 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_529 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_530 [file="RedisMonitoringApi.cs", label=job, span=""];
m25_531 [file="RedisMonitoringApi.cs", label=jobs, span=""];
m25_532 [file="RedisMonitoringApi.cs", label=states, span=""];
m25_533 [file="RedisMonitoringApi.cs", label=name, span=""];
m25_534 [file="RedisMonitoringApi.cs", label=servers, span=""];
m25_535 [file="RedisMonitoringApi.cs", label=queues, span=""];
m25_536 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_537 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_538 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_539 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_540 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_541 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_542 [file="RedisMonitoringApi.cs", label=queue, span=""];
m25_543 [file="RedisMonitoringApi.cs", label=string, span=""];
m25_544 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_545 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_546 [file="RedisMonitoringApi.cs", label=string, span=""];
m25_547 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_548 [file="RedisMonitoringApi.cs", label=int, span=""];
m25_549 [file="RedisMonitoringApi.cs", label=string, span=""];
m25_550 [file="RedisMonitoringApi.cs", label=hiddenProperties, span=""];
m25_551 [file="RedisMonitoringApi.cs", label=string, span=""];
m25_552 [file="RedisMonitoringApi.cs", label=string, span=""];
m25_553 [file="RedisMonitoringApi.cs", label="string[]", span=""];
m25_554 [file="RedisMonitoringApi.cs", label=id, span=""];
m25_555 [file="RedisMonitoringApi.cs", label=jobs, span=""];
m25_556 [file="RedisMonitoringApi.cs", label="string[]", span=""];
m25_557 [file="RedisMonitoringApi.cs", label=states, span=""];
m25_558 [file="RedisMonitoringApi.cs", label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m25_559 [file="RedisMonitoringApi.cs", label=stats, span=""];
m25_560 [file="RedisMonitoringApi.cs", label=queueName, span=""];
m26_21 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m26_22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m26_35 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m26_23 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m26_24 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label="String.IsNullOrWhiteSpace(name)", span="98-98"];
m26_28 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label="var serializedValue = JobHelper.ToJson(value)", span="105-105"];
m26_29 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label="!_parameters.ContainsKey(name)", span="107-107"];
m26_30 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label="_parameters.Add(name, serializedValue)", span="109-109"];
m26_31 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label="_parameters[name] = serializedValue", span="113-113"];
m26_25 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''name'');", span="98-98"];
m26_26 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label=_jobWasCreated, span="100-100"];
m26_27 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102"];
m26_32 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m26_46 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="RedisWriteOnlyTransaction.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m26_53 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m26_0 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m26_1 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyTransaction.cs", label="Items = context.Items", span="40-40"];
m26_2 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyTransaction.cs", label="JobId = context.JobId", span="41-41"];
m26_3 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyTransaction.cs", label="_jobWasCreated = context._jobWasCreated", span="42-42"];
m26_4 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyTransaction.cs", label="_parameters = context._parameters", span="43-43"];
m26_5 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m26_45 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m26_38 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m26_39 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyTransaction.cs", label="String.IsNullOrWhiteSpace(name)", span="131-131"];
m26_41 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyTransaction.cs", label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137"];
m26_43 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyTransaction.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143"];
m26_40 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''name'');", span="131-131"];
m26_42 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyTransaction.cs", label=Exception, span="139-139"];
m26_44 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m26_33 [cluster="string.IsNullOrWhiteSpace(string)", file="RedisWriteOnlyTransaction.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m26_6 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46"];
m26_7 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="connection == null", span="52-52"];
m26_9 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="stateMachineFactory == null", span="53-53"];
m26_11 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="job == null", span="54-54"];
m26_13 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="initialState == null", span="55-55"];
m26_15 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="_stateMachineFactory = stateMachineFactory", span="57-57"];
m26_16 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Connection = connection", span="59-59"];
m26_17 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Job = job", span="60-60"];
m26_18 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="InitialState = initialState", span="61-61"];
m26_8 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''connection'');", span="52-52"];
m26_10 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53"];
m26_12 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''job'');", span="54-54"];
m26_14 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''initialState'');", span="55-55"];
m26_19 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Items = new Dictionary<string, object>()", span="63-63"];
m26_20 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46"];
m26_54 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23"];
m26_48 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m26_49 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyTransaction.cs", label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149"];
m26_50 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyTransaction.cs", label="JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151"];
m26_51 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyTransaction.cs", label="_jobWasCreated = true", span="152-152"];
m26_52 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m26_36 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m26_37 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m26_47 [cluster="string.Format(string, object)", file="RedisWriteOnlyTransaction.cs", label="Entry string.Format(string, object)", span="0-0"];
m26_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m26_55 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Client.CreateContext", span=""];
m27_63 [cluster="HangFire.Web.RazorPage.Write(object)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m27_57 [cluster="Unk.TryParse", file="ScheduledJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m27_55 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m27_62 [cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33"];
m27_58 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m27_68 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m27_56 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m27_0 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m27_37 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: Write(JobHelper.ToTimestamp(job.Value.EnqueueAt))", span="278-278"];
m27_34 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="!job.Value.InScheduledState", span="255-255"];
m27_36 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\n                    <td class=\''min-width\''>\n            '' +\r\n''            <span data-moment=\'''')", span="272-273"];
m27_38 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                            '')", span="283-283"];
m27_39 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Value.EnqueueAt)", span="288-288"];
m27_47 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: Write(JobHelper.ToTimestamp(job.Value.ScheduledAt.Value))", span="331-331"];
m27_45 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="job.Value.ScheduledAt != null", span="320-320"];
m27_46 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="326-326"];
m27_48 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="336-336"];
m27_49 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Value.ScheduledAt)", span="341-341"];
m27_1 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n'')", span="51-51"];
m27_2 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62"];
m27_4 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66"];
m27_5 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67"];
m27_7 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Pager pager = new Pager(from, perPage, monitor.ScheduledCount())\n    {\n        BasePageUrl = Request.LinkTo(''/scheduled'')\n    }", span="70-73"];
m27_9 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n'')", span="81-81"];
m27_11 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        There are no scheduled jobs.\n    </div'' +\r\n''>\n'')", span="92-93"];
m27_12 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="105-107"];
m27_13 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/scheduled/enqueue''))", span="112-112"];
m27_14 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-play''''></span>\n                Enqueue now\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="117-124"];
m27_15 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/scheduled/delete''))", span="129-129"];
m27_16 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="134-141"];
m27_17 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="146-146"];
m27_18 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Enqueue</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Scheduled</th>\n                </tr>\n            </thead>\n'')", span="151-166"];
m27_20 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", span="177-177"];
m27_21 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="182-182"];
m27_22 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral('' '')", span="187-187"];
m27_23 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Value.InScheduledState ? ''hover'' : null)", span="192-192"];
m27_24 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                    <td>\n'')", span="197-197"];
m27_26 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", span="208-209"];
m27_27 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Key)", span="214-214"];
m27_28 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\'' />\n'')", span="219-219"];
m27_29 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\n                    <td class=\''min-width\''>\n            '' +\r\n''            <a href=\'''')", span="229-230"];
m27_30 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="235-235"];
m27_31 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                            '')", span="240-240"];
m27_32 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="245-245"];
m27_33 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n                        </a>\n'')", span="250-250"];
m27_35 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="261-262"];
m27_40 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n                        </span>\n                    </td>\n                    <t'' +\r\n''d>\n                        <a class=\''job-method\'' href=\'''')", span="293-294"];
m27_41 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="299-299"];
m27_42 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                            '')", span="304-304"];
m27_43 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="309-309"];
m27_44 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n                        </a>\n                    </td>\n                    <td c'' +\r\n''lass=\''align-right\''>\n'')", span="314-315"];
m27_50 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n                            </span>\n'')", span="346-346"];
m27_51 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="356-356"];
m27_52 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''        </table>\n    </div>\n'')", span="366-366"];
m27_53 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="378-378"];
m27_3 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="int from, perPage", span="64-64"];
m27_6 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="69-69"];
m27_8 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="JobList<ScheduledJobDto> scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="75-75"];
m27_10 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="86-86"];
m27_19 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label=scheduledJobs, span="171-171"];
m27_25 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="job.Value.InScheduledState", span="202-202"];
m27_54 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m27_64 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m27_66 [cluster="Unk.Write", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m27_61 [cluster="HttpRequestBase.LinkTo(string)", file="ScheduledJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m27_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m27_70 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m27_60 [cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38"];
m27_65 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m27_59 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m27_67 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m27_71 [file="ScheduledJobsPage.generated.cs", label="HangFire.Web.Pages.ScheduledJobsPage", span=""];
m28_6 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m28_2 [cluster="HangFire.States.SucceededState.SucceededState()", file="ScheduledState.cs", label="Exit HangFire.States.SucceededState.SucceededState()", span="27-27"];
m28_3 [cluster="HangFire.States.SucceededState.SerializeData()", file="ScheduledState.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44"];
m28_4 [cluster="HangFire.States.SucceededState.SerializeData()", file="ScheduledState.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="46-49"];
m28_5 [cluster="HangFire.States.SucceededState.SerializeData()", file="ScheduledState.cs", label="Exit HangFire.States.SucceededState.SerializeData()", span="44-44"];
m28_8 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m28_9 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="56-56"];
m28_10 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ScheduledState.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m28_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", color=green, community=0, file="ScheduledState.cs", label="1: Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m28_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m28_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m28_0 [cluster="HangFire.States.SucceededState.SucceededState()", file="ScheduledState.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m28_1 [cluster="HangFire.States.SucceededState.SucceededState()", file="ScheduledState.cs", label="SucceededAt = DateTime.UtcNow", span="29-29"];
m28_12 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="59-59"];
m28_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="61-61"];
m28_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="59-59"];
m28_16 [file="ScheduledState.cs", label="HangFire.States.SucceededState", span=""];
m28_26 [file="ScheduledState.cs", label="HangFire.States.ScheduledState", span=""];
m29_11 [cluster="System.DateTime.DateTime(int, int, int)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m29_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m29_20 [cluster="System.DateTime.AddMinutes(double)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m29_6 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m29_7 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="var date = new DateTime(2012, 12, 12)", span="20-20"];
m29_8 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(date)", span="21-21"];
m29_9 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Assert.Equal(date, state.EnqueueAt)", span="22-22"];
m29_10 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m29_0 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11"];
m29_1 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="13-13"];
m29_2 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Assert.Equal(ScheduledState.StateName, state.Name)", span="14-14"];
m29_3 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11"];
m29_21 [cluster="Unk.True", file="ScheduledStateFacts.cs", label="Entry Unk.True", span=""];
m29_34 [cluster="Unk.False", file="ScheduledStateFacts.cs", label="Entry Unk.False", span=""];
m29_17 [cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m29_35 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m29_36 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="55-55"];
m29_37 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Assert.False(state.IgnoreJobLoadException)", span="56-56"];
m29_38 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m29_28 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m29_30 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m29_31 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="47-47"];
m29_32 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Assert.False(state.IsFinal)", span="49-49"];
m29_33 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m29_18 [cluster="System.TimeSpan.FromDays(double)", file="ScheduledStateFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m29_22 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m29_23 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36"];
m29_24 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var data = state.SerializeData()", span="38-38"];
m29_25 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=red, community=0, file="ScheduledStateFacts.cs", label="1: Assert.Equal(JobHelper.ToStringTimestamp(state.EnqueueAt), data[''EnqueueAt''])", span="40-40"];
m29_26 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=red, community=0, file="ScheduledStateFacts.cs", label="1: Assert.Equal(JobHelper.ToStringTimestamp(state.ScheduledAt), data[''ScheduledAt''])", span="41-41"];
m29_27 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m29_12 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26"];
m29_13 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(TimeSpan.FromDays(1))", span="28-28"];
m29_14 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="Assert.True(DateTime.UtcNow.AddDays(1).AddMinutes(-1) < state.EnqueueAt)", span="29-29"];
m29_15 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="Assert.True(state.EnqueueAt < DateTime.UtcNow.AddDays(1).AddMinutes(1))", span="30-30"];
m29_16 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26"];
m29_29 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m29_19 [cluster="System.DateTime.AddDays(double)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m30_0 [cluster="Hangfire.Server.IScheduleInstantFactory.GetInstant(CrontabSchedule, System.TimeZoneInfo)", file="ServersPage.generated.cs", label="Entry Hangfire.Server.IScheduleInstantFactory.GetInstant(CrontabSchedule, System.TimeZoneInfo)", span="25-25"];
m30_1 [cluster="Hangfire.Server.IScheduleInstantFactory.GetInstant(CrontabSchedule, System.TimeZoneInfo)", file="ServersPage.generated.cs", label="Exit Hangfire.Server.IScheduleInstantFactory.GetInstant(CrontabSchedule, System.TimeZoneInfo)", span="25-25"];
m31_50 [cluster="Hangfire.Server.Worker.ToString()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Server.Worker.ToString()", span="123-123"];
m31_51 [cluster="Hangfire.Server.Worker.ToString()", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: return ''Worker #'' + _context.WorkerNumber;", span="125-125"];
m31_52 [cluster="Hangfire.Server.Worker.ToString()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.Server.Worker.ToString()", span="123-123"];
m31_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerMonitoringApi.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m31_73 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="SqlServerMonitoringApi.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m31_77 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m31_36 [cluster="Hangfire.JobStorage.GetConnection()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m31_45 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, Hangfire.Server.BackgroundProcessContext)", span="32-32"];
m31_48 [cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="130-130"];
m31_39 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m31_40 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m31_0 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", span="35-35"];
m31_1 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="context == null", span="40-40"];
m31_3 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="process == null", span="41-41"];
m31_5 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="stateMachineFactory == null", span="42-42"];
m31_7 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="_context = context", span="44-44"];
m31_8 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: _process = process", span="45-45"];
m31_9 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="_stateMachineFactory = stateMachineFactory", span="46-46"];
m31_2 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="throw new ArgumentNullException(''context'');", span="40-40"];
m31_4 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="throw new ArgumentNullException(''process'');", span="41-41"];
m31_6 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="42-42"];
m31_10 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", span="35-35"];
m31_75 [cluster="System.Diagnostics.Stopwatch.Stop()", file="SqlServerMonitoringApi.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m31_76 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28"];
m31_70 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m31_38 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerMonitoringApi.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m31_44 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m31_49 [cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25"];
m31_46 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="128-128"];
m31_53 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: var jobData = connection.GetJobData(jobId)", span="132-132"];
m31_57 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: var performContext = new PerformContext(\r\n                    _context, connection, jobId, jobData.Job, jobData.CreatedAt, token)", span="144-145"];
m31_54 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: jobData == null", span="133-133"];
m31_56 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: jobData.EnsureLoaded()", span="142-142"];
m31_58 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="147-147"];
m31_60 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: var result = _process.Run(performContext, jobData.Job)", span="150-150"];
m31_55 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: return null;", span="139-139"];
m31_59 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: var duration = Stopwatch.StartNew()", span="148-148"];
m31_62 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="153-153"];
m31_61 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: duration.Stop()", span="151-151"];
m31_63 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: OperationCanceledException", span="155-155"];
m31_64 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: throw;", span="157-157"];
m31_65 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: JobPerformanceException", span="159-159"];
m31_66 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="161-164"];
m31_67 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerMonitoringApi.cs", label=Exception, span="166-166"];
m31_68 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: return new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal Hangfire Server exception occurred. Please, report it to Hangfire developers.''\r\n                };", span="168-171"];
m31_69 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="128-128"];
m31_72 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", span="35-35"];
m31_74 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="20-20"];
m31_47 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m31_43 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="26-26"];
m31_37 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m31_12 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="49-49"];
m31_13 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: var connection = context.Storage.GetConnection()", span="51-51"];
m31_14 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="var fetchedJob = connection.FetchNextJob(_context.Queues, context.CancellationToken)", span="52-52"];
m31_15 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="54-54"];
m31_18 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="61-63"];
m31_19 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="var processingState = new ProcessingState(context.ServerId, _context.WorkerNumber)", span="65-65"];
m31_21 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: context.CancellationToken.ThrowIfCancellationRequested()", span="75-75"];
m31_24 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="var jobCancellationToken = new ServerJobCancellationToken(\r\n                        fetchedJob.JobId, connection, _context, context)", span="88-89"];
m31_16 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: var stateMachine = _stateMachineFactory.Create(connection)", span="58-58"];
m31_25 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="var state = PerformJob(fetchedJob.JobId, connection, jobCancellationToken)", span="91-91"];
m31_20 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: !stateMachine.ChangeState(\r\n                            fetchedJob.JobId,\r\n                            processingState,\r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token)", span="67-71"];
m31_22 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: fetchedJob.RemoveFromQueue()", span="78-78"];
m31_27 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="stateMachine.ChangeState(fetchedJob.JobId, state, new[] { ProcessingState.StateName })", span="96-96"];
m31_28 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: fetchedJob.RemoveFromQueue()", span="104-104"];
m31_30 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: fetchedJob.RemoveFromQueue()", span="111-111"];
m31_33 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: fetchedJob.Requeue()", span="117-117"];
m31_17 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="60-60"];
m31_23 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: return;", span="79-79"];
m31_26 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="state != null", span="93-93"];
m31_29 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: JobAbortedException", span="109-109"];
m31_31 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: Exception", span="113-113"];
m31_32 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: Logger.DebugException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="115-115"];
m31_34 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="1: throw;", span="118-118"];
m31_35 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="49-49"];
m31_71 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m31_42 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m31_41 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m31_78 [file="SqlServerMonitoringApi.cs", label="Hangfire.Server.Worker", span=""];
m32_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SucceededJobs1.generated.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_24 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114"];
m32_65 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="filters.Reverse()", span="117-117"];
m32_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="filter.OnClientException(context)", span="119-119"];
m32_67 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114"];
m32_64 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m32_23 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8"];
m32_3 [cluster="HangFire.Client.JobCreator.JobCreator()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="20-20"];
m32_0 [cluster="HangFire.Client.JobCreator.JobCreator()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m32_1 [cluster="HangFire.Client.JobCreator.JobCreator()", file="SucceededJobs1.generated.cs", label="Current = new JobCreator()", span="14-14"];
m32_2 [cluster="HangFire.Client.JobCreator.JobCreator()", file="SucceededJobs1.generated.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m32_4 [cluster="HangFire.Client.JobCreator.JobCreator()", file="SucceededJobs1.generated.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="20-20"];
m32_45 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m32_46 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="filter.OnCreating(preContext)", span="79-79"];
m32_47 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="preContext.Canceled", span="80-80"];
m32_48 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="return new CreatedContext(\r\n                    preContext, true, null);", span="82-83"];
m32_51 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="postContext = continuation()", span="90-90"];
m32_54 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="95-96"];
m32_55 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="filter.OnCreated(postContext)", span="98-98"];
m32_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="filter.OnCreated(postContext)", span="108-108"];
m32_49 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="var wasError = false", span="86-86"];
m32_50 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="CreatedContext postContext", span="87-87"];
m32_52 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label=Exception, span="92-92"];
m32_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="!wasError", span="106-106"];
m32_53 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="wasError = true", span="94-94"];
m32_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="!postContext.ExceptionHandled", span="100-100"];
m32_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="return postContext;", span="111-111"];
m32_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="throw;", span="102-102"];
m32_61 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="SucceededJobs1.generated.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m32_14 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m32_15 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="SucceededJobs1.generated.cs", label="CreateWithFilters(context, context.JobDescriptor, _clientFilters)", span="42-42"];
m32_17 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="SucceededJobs1.generated.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", span="46-46"];
m32_16 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="SucceededJobs1.generated.cs", label=Exception, span="44-44"];
m32_18 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="SucceededJobs1.generated.cs", label="InvokeExceptionFilters(exceptionContext, _clientExceptionFilters)", span="48-48"];
m32_19 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="SucceededJobs1.generated.cs", label="!exceptionContext.ExceptionHandled", span="49-49"];
m32_20 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="SucceededJobs1.generated.cs", label="throw;", span="51-51"];
m32_21 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="SucceededJobs1.generated.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m32_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="SucceededJobs1.generated.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m32_33 [cluster="Unk.thunk", file="SucceededJobs1.generated.cs", label="Entry Unk.thunk", span=""];
m32_30 [cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="6-6"];
m32_38 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="52-52"];
m32_68 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4"];
m32_39 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m32_62 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m32_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m32_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="clientFilters == null", span="31-31"];
m32_8 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="clientExceptionFilters == null", span="32-32"];
m32_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="_clientFilters = clientFilters", span="34-34"];
m32_11 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="_clientExceptionFilters = clientExceptionFilters", span="35-35"];
m32_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="throw new ArgumentNullException(''clientFilters'');", span="31-31"];
m32_9 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="throw new ArgumentNullException(''clientExceptionFilters'');", span="32-32"];
m32_12 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="SucceededJobs1.generated.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m32_63 [cluster="System.Func<TResult>.Invoke()", file="SucceededJobs1.generated.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m32_42 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="69-69"];
m32_35 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="jobDescriptor.Create()", span="64-64"];
m32_36 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="return new CreatedContext(createContext, false, null);", span="65-65"];
m32_43 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="InvokeClientFilter(filter, preContext, next)", span="69-69"];
m32_40 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="69-69"];
m32_34 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="62-66"];
m32_37 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="62-66"];
m32_41 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="69-69"];
m32_44 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="69-69"];
m32_32 [cluster="Unk.Aggregate", file="SucceededJobs1.generated.cs", label="Entry Unk.Aggregate", span=""];
m32_22 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56"];
m32_25 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="SucceededJobs1.generated.cs", label="var preContext = new CreatingContext(createContext)", span="61-61"];
m32_26 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="SucceededJobs1.generated.cs", label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Create();\r\n                return new CreatedContext(createContext, false, null);\r\n            }", span="62-66"];
m32_27 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="SucceededJobs1.generated.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="68-69"];
m32_28 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="SucceededJobs1.generated.cs", label="thunk()", span="71-71"];
m32_29 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="SucceededJobs1.generated.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56"];
m32_69 [file="SucceededJobs1.generated.cs", label="HangFire.Client.JobCreator", span=""];
m32_70 [file="SucceededJobs1.generated.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m32_71 [file="SucceededJobs1.generated.cs", label="HangFire.Client.CreateContext", span=""];
m32_72 [file="SucceededJobs1.generated.cs", label=preContext, span=""];
m32_73 [file="SucceededJobs1.generated.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m32_74 [file="SucceededJobs1.generated.cs", label="HangFire.Filters.IClientFilter", span=""];
m33_19 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="SucceededState.cs", label="HangFire.States.SucceededState", span=""];
m33_5 [cluster="HangFire.Core.Tests.QueueAttributeFacts.QueueAttributeFacts()", file="SucceededState.cs", label="Exit HangFire.Core.Tests.QueueAttributeFacts.QueueAttributeFacts()", span="14-14"];
m33_6 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", color=green, community=0, file="SucceededState.cs", label="1: Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m33_7 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m33_18 [cluster="HangFire.Core.Tests.QueueAttributeFacts.Ctor_CorrectlySets_AllPropertyValues()", file="SucceededState.cs", label="Exit HangFire.Core.Tests.QueueAttributeFacts.Ctor_CorrectlySets_AllPropertyValues()", span="24-24"];
m33_33 [cluster="Unk.DoesNotThrow", file="SucceededState.cs", label="Entry Unk.DoesNotThrow", span=""];
m33_9 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="SucceededState.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36"];
m33_0 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.SucceededState(long, long)", span="28-28"];
m33_1 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="Latency = latency", span="30-30"];
m33_2 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="PerformanceDuration = performanceDuration", span="31-31"];
m33_3 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="SucceededAt = DateTime.UtcNow", span="32-32"];
m33_4 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.SucceededState(long, long)", span="28-28"];
m33_27 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", file="SucceededState.cs", label="Entry HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", span="40-40"];
m33_28 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", file="SucceededState.cs", label="var filter = new QueueAttribute(''override'')", span="42-42"];
m33_29 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", file="SucceededState.cs", label="var context = new ElectStateContext(_context, new Mock<State>().Object, null, _connection.Object)", span="43-43"];
m33_30 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", file="SucceededState.cs", label="Assert.DoesNotThrow(() => filter.OnStateElection(context))", span="45-45"];
m33_31 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", file="SucceededState.cs", label="Exit HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", span="40-40"];
m33_21 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="SucceededState.cs", label="Entry HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", span="31-31"];
m33_22 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="SucceededState.cs", label="var filter = new QueueAttribute(''override'')", span="33-33"];
m33_23 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="SucceededState.cs", label="filter.OnStateElection(_context)", span="34-34"];
m33_24 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="SucceededState.cs", label="Assert.Equal(''override'', ((EnqueuedState)_context.CandidateState).Queue)", span="36-36"];
m33_25 [cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="SucceededState.cs", label="Exit HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", span="31-31"];
m33_26 [cluster="HangFire.QueueAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="SucceededState.cs", label="Entry HangFire.QueueAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="65-65"];
m33_8 [cluster="Mock<IStorageConnection>.cstr", file="SucceededState.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m33_14 [cluster="HangFire.Core.Tests.QueueAttributeFacts.Sample()", file="SucceededState.cs", label="Entry HangFire.Core.Tests.QueueAttributeFacts.Sample()", span="48-48"];
m33_37 [cluster="HangFire.Core.Tests.QueueAttributeFacts.Sample()", file="SucceededState.cs", label="Exit HangFire.Core.Tests.QueueAttributeFacts.Sample()", span="48-48"];
m33_32 [cluster="Mock<State>.cstr", file="SucceededState.cs", label="Entry Mock<State>.cstr", span=""];
m33_10 [cluster="ElectStateContext.cstr", file="SucceededState.cs", label="Entry ElectStateContext.cstr", span=""];
m33_34 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="45-45"];
m33_11 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="16-16"];
m33_12 [cluster="lambda expression", file="SucceededState.cs", label="Sample()", span="16-16"];
m33_13 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="16-16"];
m33_35 [cluster="lambda expression", file="SucceededState.cs", label="filter.OnStateElection(context)", span="45-45"];
m33_36 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="45-45"];
m33_15 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62"];
m33_16 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="64-64"];
m33_17 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62"];
m33_38 [file="SucceededState.cs", label="HangFire.Core.Tests.QueueAttributeFacts", span=""];
m33_39 [file="SucceededState.cs", label=filter, span=""];
m33_40 [file="SucceededState.cs", label=context, span=""];
n195 -> n1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n22  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n86  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n107  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n131  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n181  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n195 -> n182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=2, style=dotted];
n7 -> n12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n9 -> n6  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n13 -> n16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n14 -> n12  [color=blue, key=0, style=bold];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=2, style=dotted];
n18 -> n16  [color=blue, key=0, style=bold];
n19 -> n193  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n15  [key=2, style=dotted];
n21 -> n25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=2, style=dotted];
n22 -> n28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n25 -> n26  [key=0, style=solid];
n23 -> n20  [color=blue, key=0, style=bold];
n28 -> n29  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n19  [key=2, style=dotted];
n27 -> n25  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n29 -> n10  [key=2, style=dotted];
n29 -> n15  [key=2, style=dotted];
n30 -> n28  [color=blue, key=0, style=bold];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n10  [key=2, style=dotted];
n32 -> n35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n33 -> n34  [key=0, style=solid];
n33 -> n11  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n34 -> n31  [color=blue, key=0, style=bold];
n36 -> n37  [key=0, style=solid];
n36 -> n10  [key=2, style=dotted];
n36 -> n38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n37 -> n35  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=2, style=dotted];
n40 -> n38  [color=blue, key=0, style=bold];
n41 -> n194  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n10  [key=2, style=dotted];
n43 -> n46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n24  [key=2, style=dotted];
n44 -> n49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n46 -> n47  [key=0, style=solid];
n45 -> n42  [color=blue, key=0, style=bold];
n49 -> n50  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n47 -> n41  [key=2, style=dotted];
n48 -> n46  [color=blue, key=0, style=bold];
n50 -> n51  [key=0, style=solid];
n50 -> n10  [key=2, style=dotted];
n50 -> n15  [key=2, style=dotted];
n51 -> n49  [color=blue, key=0, style=bold];
n52 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n10  [key=2, style=dotted];
n53 -> n56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n54 -> n55  [key=0, style=solid];
n54 -> n11  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n55 -> n52  [color=blue, key=0, style=bold];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=2, style=dotted];
n57 -> n60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n58 -> n56  [color=blue, key=0, style=bold];
n60 -> n61  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n61 -> n19  [key=2, style=dotted];
n62 -> n60  [color=blue, key=0, style=bold];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n67  [key=2, style=dotted];
n64 -> n68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n65 -> n66  [key=0, style=solid];
n65 -> n24  [key=2, style=dotted];
n65 -> n71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n68 -> n69  [key=0, style=solid];
n66 -> n63  [color=blue, key=0, style=bold];
n71 -> n72  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n19  [key=2, style=dotted];
n70 -> n68  [color=blue, key=0, style=bold];
n72 -> n73  [key=0, style=solid];
n72 -> n10  [key=2, style=dotted];
n72 -> n15  [key=2, style=dotted];
n73 -> n71  [color=blue, key=0, style=bold];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n10  [key=2, style=dotted];
n75 -> n78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n76 -> n77  [key=0, style=solid];
n76 -> n11  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n77 -> n74  [color=blue, key=0, style=bold];
n79 -> n80  [key=0, style=solid];
n79 -> n81  [key=2, style=dotted];
n79 -> n82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n80 -> n78  [color=blue, key=0, style=bold];
n82 -> n83  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n41  [key=2, style=dotted];
n84 -> n82  [color=blue, key=0, style=bold];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n10  [key=2, style=dotted];
n86 -> n89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n87 -> n88  [key=0, style=solid];
n87 -> n24  [key=2, style=dotted];
n87 -> n92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n89 -> n90  [key=0, style=solid];
n88 -> n85  [color=blue, key=0, style=bold];
n92 -> n93  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n90 -> n41  [key=2, style=dotted];
n91 -> n89  [color=blue, key=0, style=bold];
n93 -> n94  [key=0, style=solid];
n93 -> n10  [key=2, style=dotted];
n93 -> n15  [key=2, style=dotted];
n94 -> n92  [color=blue, key=0, style=bold];
n95 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n10  [key=2, style=dotted];
n96 -> n99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n97 -> n98  [key=0, style=solid];
n97 -> n11  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n98 -> n95  [color=blue, key=0, style=bold];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=2, style=dotted];
n100 -> n103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n101 -> n99  [color=blue, key=0, style=bold];
n103 -> n104  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n19  [key=2, style=dotted];
n105 -> n103  [color=blue, key=0, style=bold];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n67  [key=2, style=dotted];
n107 -> n110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n108 -> n109  [key=0, style=solid];
n108 -> n24  [key=2, style=dotted];
n108 -> n113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n110 -> n111  [key=0, style=solid];
n109 -> n106  [color=blue, key=0, style=bold];
n113 -> n114  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n19  [key=2, style=dotted];
n112 -> n110  [color=blue, key=0, style=bold];
n114 -> n115  [key=0, style=solid];
n114 -> n10  [key=2, style=dotted];
n114 -> n15  [key=2, style=dotted];
n114 -> n116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n115 -> n113  [color=blue, key=0, style=bold];
n116 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n118 -> n116  [color=blue, key=0, style=bold];
n119 -> n120  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n120 -> n10  [key=2, style=dotted];
n120 -> n123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n121 -> n122  [key=0, style=solid];
n121 -> n11  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n122 -> n119  [color=blue, key=0, style=bold];
n124 -> n125  [key=0, style=solid];
n124 -> n126  [key=2, style=dotted];
n124 -> n127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n125 -> n123  [color=blue, key=0, style=bold];
n127 -> n128  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n128 -> n41  [key=2, style=dotted];
n129 -> n127  [color=blue, key=0, style=bold];
n130 -> n131  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n10  [key=2, style=dotted];
n131 -> n134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n132 -> n133  [key=0, style=solid];
n132 -> n24  [key=2, style=dotted];
n132 -> n137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n134 -> n135  [key=0, style=solid];
n133 -> n130  [color=blue, key=0, style=bold];
n137 -> n138  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n135 -> n41  [key=2, style=dotted];
n136 -> n134  [color=blue, key=0, style=bold];
n138 -> n139  [key=0, style=solid];
n138 -> n10  [key=2, style=dotted];
n138 -> n15  [key=2, style=dotted];
n138 -> n140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n139 -> n137  [color=blue, key=0, style=bold];
n140 -> n141  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n142 -> n140  [color=blue, key=0, style=bold];
n143 -> n144  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n144 -> n10  [key=2, style=dotted];
n144 -> n147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n145 -> n146  [key=0, style=solid];
n145 -> n11  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n146 -> n143  [color=blue, key=0, style=bold];
n148 -> n149  [key=0, style=solid];
n148 -> n150  [key=2, style=dotted];
n148 -> n151  [key=2, style=dotted];
n148 -> n152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n149 -> n147  [color=blue, key=0, style=bold];
n152 -> n153  [key=0, style=solid];
n153 -> n154  [key=0, style=solid];
n153 -> n19  [key=2, style=dotted];
n154 -> n152  [color=blue, key=0, style=bold];
n155 -> n156  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n156 -> n150  [key=2, style=dotted];
n156 -> n159  [key=2, style=dotted];
n156 -> n160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n157 -> n158  [key=0, style=solid];
n157 -> n24  [key=2, style=dotted];
n157 -> n163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n160 -> n161  [key=0, style=solid];
n158 -> n155  [color=blue, key=0, style=bold];
n163 -> n164  [key=0, style=solid];
n161 -> n162  [key=0, style=solid];
n161 -> n19  [key=2, style=dotted];
n162 -> n160  [color=blue, key=0, style=bold];
n164 -> n165  [key=0, style=solid];
n164 -> n10  [key=2, style=dotted];
n164 -> n15  [key=2, style=dotted];
n164 -> n166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n165 -> n163  [color=blue, key=0, style=bold];
n166 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n168 -> n166  [color=blue, key=0, style=bold];
n169 -> n170  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n170 -> n10  [key=2, style=dotted];
n170 -> n173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n171 -> n172  [key=0, style=solid];
n171 -> n11  [key=2, style=dotted];
n173 -> n174  [key=0, style=solid];
n172 -> n169  [color=blue, key=0, style=bold];
n174 -> n175  [key=0, style=solid];
n174 -> n150  [key=2, style=dotted];
n174 -> n176  [key=2, style=dotted];
n174 -> n177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n175 -> n173  [color=blue, key=0, style=bold];
n177 -> n178  [key=0, style=solid];
n178 -> n179  [key=0, style=solid];
n178 -> n41  [key=2, style=dotted];
n179 -> n177  [color=blue, key=0, style=bold];
n180 -> n181  [key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n181 -> n150  [key=2, style=dotted];
n181 -> n10  [key=2, style=dotted];
n181 -> n184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n182 -> n183  [key=0, style=solid];
n182 -> n24  [key=2, style=dotted];
n182 -> n187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n184 -> n185  [key=0, style=solid];
n183 -> n180  [color=blue, key=0, style=bold];
n187 -> n188  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n41  [key=2, style=dotted];
n186 -> n184  [color=blue, key=0, style=bold];
n188 -> n189  [key=0, style=solid];
n188 -> n10  [key=2, style=dotted];
n188 -> n15  [key=2, style=dotted];
n188 -> n190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n189 -> n187  [color=blue, key=0, style=bold];
n190 -> n191  [key=0, style=solid];
n191 -> n192  [key=0, style=solid];
n192 -> n190  [color=blue, key=0, style=bold];
n193 -> n19  [color=blue, key=0, style=bold];
n194 -> n41  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_3  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_2 -> m4_4  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=2, style=dotted];
m4_7 -> m4_10  [key=2, style=dotted];
m4_7 -> m4_11  [key=2, style=dotted];
m4_7 -> m4_12  [key=2, style=dotted];
m4_8 -> m4_6  [color=blue, key=0, style=bold];
m4_13 -> m4_3  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m4_13 -> m4_7  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_2 -> m5_5  [key=0, style=solid];
m5_2 -> m5_6  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_7 -> m5_8  [color=green, key=0, style=solid];
m5_8 -> m5_9  [color=green, key=0, style=solid];
m5_8 -> m5_10  [color=green, key=2, style=dotted];
m5_8 -> m5_11  [color=green, key=2, style=dotted];
m5_8 -> m5_12  [color=green, key=2, style=dotted];
m5_8 -> m5_13  [color=green, key=2, style=dotted];
m5_9 -> m5_7  [color=blue, key=0, style=bold];
m5_14 -> m5_3  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m5_14 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m5_14 -> m5_8  [color=green, key=1, label="HangFire.States.FailedState", style=dashed];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_12  [key=2, style=dotted];
m6_19 -> m6_21  [color=darkseagreen4, key=1, label=baseTime, style=dashed];
m6_18 -> m6_22  [key=0, style=solid];
m6_18 -> m6_11  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_12  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=2, style=dotted];
m6_21 -> m6_24  [key=2, style=dotted];
m6_21 -> m6_25  [key=2, style=dotted];
m6_21 -> m6_26  [key=2, style=dotted];
m6_21 -> m6_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_22 -> m6_16  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=2, style=dotted];
m6_29 -> m6_27  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m6_0 -> m6_6  [color=darkseagreen4, key=1, label=CrontabSchedule, style=dashed];
m6_0 -> m6_7  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_12  [key=2, style=dotted];
m6_2 -> m6_9  [key=0, style=solid];
m6_2 -> m6_10  [key=2, style=dotted];
m6_4 -> m6_9  [key=0, style=solid];
m6_4 -> m6_11  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_13  [key=2, style=dotted];
m6_8 -> m6_14  [key=2, style=dotted];
m6_8 -> m6_15  [key=2, style=dotted];
m6_9 -> m6_0  [color=blue, key=0, style=bold];
m6_31 -> m6_5  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m6_31 -> m6_6  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m6_31 -> m6_7  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m6_31 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m6_31 -> m6_19  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m6_31 -> m6_20  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m6_31 -> m6_21  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m6_31 -> m6_28  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_45  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_46  [key=2, style=dotted];
m7_2 -> m7_47  [key=2, style=dotted];
m7_2 -> m7_48  [key=2, style=dotted];
m7_2 -> m7_49  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_50  [key=2, style=dotted];
m7_4 -> m7_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_50  [key=2, style=dotted];
m7_5 -> m7_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_52  [key=2, style=dotted];
m7_7 -> m7_53  [key=2, style=dotted];
m7_7 -> m7_49  [key=2, style=dotted];
m7_7 -> m7_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m7_7 -> m7_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m7_7 -> m7_43  [color=darkseagreen4, key=1, label=pager, style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_51  [key=2, style=dotted];
m7_6 -> m7_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_54  [key=2, style=dotted];
m7_8 -> m7_19  [color=darkseagreen4, key=1, label=fetchedJobs, style=dashed];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_56  [key=2, style=dotted];
m7_17 -> m7_57  [key=2, style=dotted];
m7_17 -> m7_58  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_64  [key=2, style=dotted];
m7_43 -> m7_57  [key=2, style=dotted];
m7_43 -> m7_58  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_45  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_42  [key=0, style=solid];
m7_19 -> m7_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_11 -> m7_44  [key=0, style=solid];
m7_11 -> m7_45  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_45  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_49  [key=2, style=dotted];
m7_13 -> m7_55  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_45  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_49  [key=2, style=dotted];
m7_15 -> m7_55  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_45  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_45  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_45  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_45  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_55  [key=2, style=dotted];
m7_21 -> m7_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_21 -> m7_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_45  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_49  [key=2, style=dotted];
m7_23 -> m7_55  [key=2, style=dotted];
m7_23 -> m7_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_23 -> m7_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_45  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_59  [key=2, style=dotted];
m7_25 -> m7_58  [key=2, style=dotted];
m7_25 -> m7_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_25 -> m7_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_45  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_60  [key=2, style=dotted];
m7_27 -> m7_61  [key=2, style=dotted];
m7_27 -> m7_55  [key=2, style=dotted];
m7_27 -> m7_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_27 -> m7_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_45  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_55  [key=2, style=dotted];
m7_29 -> m7_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_29 -> m7_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_45  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_49  [key=2, style=dotted];
m7_31 -> m7_55  [key=2, style=dotted];
m7_31 -> m7_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_31 -> m7_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_45  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_62  [key=2, style=dotted];
m7_33 -> m7_58  [key=2, style=dotted];
m7_33 -> m7_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_33 -> m7_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_45  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_41  [key=0, style=solid];
m7_35 -> m7_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_35 -> m7_37  [color=red, key=1, label=job, style=dashed];
m7_36 -> m7_37  [color=red, key=0, style=solid];
m7_36 -> m7_45  [key=2, style=dotted];
m7_41 -> m7_19  [key=0, style=solid];
m7_41 -> m7_45  [key=2, style=dotted];
m7_37 -> m7_38  [color=red, key=0, style=solid];
m7_37 -> m7_63  [color=red, key=2, style=dotted];
m7_37 -> m7_55  [color=red, key=2, style=dotted];
m7_37 -> m7_37  [color=red, key=1, label=job, style=dashed];
m7_37 -> m7_39  [color=red, key=1, label=job, style=dashed];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_45  [key=2, style=dotted];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_55  [key=2, style=dotted];
m7_39 -> m7_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_45  [key=2, style=dotted];
m7_44 -> m7_0  [color=blue, key=0, style=bold];
m7_65 -> m7_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_37  [color=red, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m7_65 -> m7_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IBootstrapperConfiguration>", style=dashed];
m9_0 -> m9_6  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IBootstrapperConfiguration>", style=dashed];
m9_0 -> m9_14  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m9_0 -> m9_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_19  [key=2, style=dotted];
m9_14 -> m9_13  [key=0, style=solid];
m9_14 -> m9_21  [key=2, style=dotted];
m9_14 -> m9_22  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_23  [key=2, style=dotted];
m9_2 -> m9_16  [key=0, style=solid];
m9_2 -> m9_17  [key=2, style=dotted];
m9_4 -> m9_16  [key=0, style=solid];
m9_4 -> m9_17  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_18  [key=2, style=dotted];
m9_5 -> m9_7  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m9_5 -> m9_8  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m9_5 -> m9_9  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m9_5 -> m9_10  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m9_5 -> m9_11  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m9_5 -> m9_13  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m9_5 -> m9_15  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_9  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_12 -> m9_11  [key=0, style=solid];
m9_12 -> m9_20  [key=2, style=dotted];
m9_16 -> m9_0  [color=blue, key=0, style=bold];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_61  [color=darkseagreen4, key=1, label=nextEntry, style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_88  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_89  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_90  [key=2, style=dotted];
m11_3 -> m11_91  [key=2, style=dotted];
m11_3 -> m11_5  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_6  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_10  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_25  [color=green, key=1, label=job, style=dashed];
m11_3 -> m11_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_3 -> m11_59  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_7  [color=darkseagreen4, key=1, label=title, style=dashed];
m11_4 -> m11_4  [color=darkorchid, key=3, label="Local variable string title", style=bold];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [key=0, style=solid];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_92  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_15  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_27  [key=0, style=solid];
m11_25 -> m11_26  [color=green, key=0, style=solid];
m11_25 -> m11_98  [color=green, key=2, style=dotted];
m11_25 -> m11_94  [color=green, key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_31  [key=0, style=solid];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_99  [key=2, style=dotted];
m11_29 -> m11_96  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_42  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_41  [key=0, style=solid];
m11_34 -> m11_36  [color=darkseagreen4, key=1, label=property, style=dashed];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_87  [key=0, style=solid];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_100  [key=2, style=dotted];
m11_46 -> m11_101  [key=2, style=dotted];
m11_46 -> m11_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_46 -> m11_59  [color=darkseagreen4, key=1, label=entriesCreationTime, style=dashed];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_87  [key=0, style=solid];
m11_48 -> m11_51  [color=darkseagreen4, key=1, label=entry, style=dashed];
m11_48 -> m11_57  [color=green, key=1, label=entry, style=dashed];
m11_48 -> m11_59  [color=darkseagreen4, key=1, label=entry, style=dashed];
m11_48 -> m11_63  [color=darkseagreen4, key=1, label=entry, style=dashed];
m11_48 -> m11_65  [color=darkseagreen4, key=1, label=entry, style=dashed];
m11_48 -> m11_67  [color=darkseagreen4, key=1, label=entry, style=dashed];
m11_48 -> m11_70  [color=darkseagreen4, key=1, label=entry, style=dashed];
m11_48 -> m11_71  [color=darkseagreen4, key=1, label=entry, style=dashed];
m11_48 -> m11_77  [color=darkseagreen4, key=1, label=entry, style=dashed];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_104  [key=2, style=dotted];
m11_59 -> m11_94  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_7  [color=darkseagreen4, key=1, label=title, style=dashed];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_93  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_88  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_88  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_88  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_88  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_94  [key=2, style=dotted];
m11_14 -> m11_87  [key=0, style=solid];
m11_14 -> m11_88  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_90  [key=2, style=dotted];
m11_16 -> m11_95  [key=2, style=dotted];
m11_16 -> m11_96  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_88  [key=2, style=dotted];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_97  [key=2, style=dotted];
m11_18 -> m11_94  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_88  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_97  [key=2, style=dotted];
m11_20 -> m11_94  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_88  [key=2, style=dotted];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_88  [key=2, style=dotted];
m11_24 -> m11_25  [color=green, key=0, style=solid];
m11_24 -> m11_88  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_88  [key=2, style=dotted];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_88  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_88  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_88  [key=2, style=dotted];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_88  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_88  [key=2, style=dotted];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_88  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_88  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_94  [key=2, style=dotted];
m11_36 -> m11_36  [color=darkseagreen4, key=1, label=property, style=dashed];
m11_36 -> m11_39  [color=darkseagreen4, key=1, label=property, style=dashed];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_88  [key=2, style=dotted];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_94  [key=2, style=dotted];
m11_39 -> m11_39  [color=darkseagreen4, key=1, label=property, style=dashed];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_88  [key=2, style=dotted];
m11_40 -> m11_34  [key=0, style=solid];
m11_40 -> m11_88  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_88  [key=2, style=dotted];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_50  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_45 -> m11_53  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_45 -> m11_86  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_45 -> m11_45  [color=darkorchid, key=3, label="Local variable int index", style=bold];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_52  [key=0, style=solid];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_94  [key=2, style=dotted];
m11_86 -> m11_48  [key=0, style=solid];
m11_86 -> m11_86  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_59  [color=darkseagreen4, key=1, label=nextEntry, style=dashed];
m11_47 -> m11_61  [color=darkseagreen4, key=1, label=nextEntry, style=dashed];
m11_47 -> m11_47  [color=darkorchid, key=3, label="Local variable int nextEntry", style=bold];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_102  [key=2, style=dotted];
m11_49 -> m11_55  [color=darkseagreen4, key=1, label=background, style=dashed];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_102  [key=2, style=dotted];
m11_51 -> m11_55  [color=darkseagreen4, key=1, label=background, style=dashed];
m11_57 -> m11_58  [color=green, key=0, style=solid];
m11_57 -> m11_98  [color=green, key=2, style=dotted];
m11_57 -> m11_94  [color=green, key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_94  [key=2, style=dotted];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_69  [key=0, style=solid];
m11_65 -> m11_105  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_94  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_76  [key=0, style=solid];
m11_70 -> m11_106  [key=2, style=dotted];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_107  [key=2, style=dotted];
m11_71 -> m11_74  [color=darkseagreen4, key=1, label=rendered, style=dashed];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_84  [key=0, style=solid];
m11_77 -> m11_79  [color=darkseagreen4, key=1, label=item, style=dashed];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_103  [key=2, style=dotted];
m11_55 -> m11_94  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_88  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_88  [key=2, style=dotted];
m11_56 -> m11_57  [color=green, key=0, style=solid];
m11_56 -> m11_88  [key=2, style=dotted];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_88  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_88  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_88  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_88  [key=2, style=dotted];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_88  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_88  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_88  [key=2, style=dotted];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_88  [key=2, style=dotted];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_85  [key=0, style=solid];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_96  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_88  [key=2, style=dotted];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_88  [key=2, style=dotted];
m11_75 -> m11_85  [key=0, style=solid];
m11_75 -> m11_88  [key=2, style=dotted];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_88  [key=2, style=dotted];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_88  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_94  [key=2, style=dotted];
m11_79 -> m11_79  [color=darkseagreen4, key=1, label=item, style=dashed];
m11_79 -> m11_82  [color=darkseagreen4, key=1, label=item, style=dashed];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_88  [key=2, style=dotted];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_94  [key=2, style=dotted];
m11_82 -> m11_82  [color=darkseagreen4, key=1, label=item, style=dashed];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_88  [key=2, style=dotted];
m11_83 -> m11_77  [key=0, style=solid];
m11_83 -> m11_88  [key=2, style=dotted];
m11_87 -> m11_0  [color=blue, key=0, style=bold];
m11_108 -> m11_109  [key=0, style=solid];
m11_109 -> m11_110  [key=0, style=solid];
m11_110 -> m11_108  [color=blue, key=0, style=bold];
m11_111 -> m11_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_25  [color=green, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_57  [color=green, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_76  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_78  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_79  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_80  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_81  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_82  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_83  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_84  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m11_111 -> m11_85  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_8  [key=2, style=dotted];
m12_1 -> m12_6  [color=darkseagreen4, key=1, label=connection, style=dashed];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_9  [key=2, style=dotted];
m12_2 -> m12_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_2 -> m12_6  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_13  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_10  [key=2, style=dotted];
m12_3 -> m12_6  [color=darkseagreen4, key=1, label=state, style=dashed];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_11  [key=2, style=dotted];
m12_4 -> m12_6  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_12  [key=2, style=dotted];
m12_7 -> m12_0  [color=blue, key=0, style=bold];
m12_97 -> m12_98  [color=red, key=0, style=solid];
m12_98 -> m12_99  [color=red, key=0, style=solid];
m12_98 -> m12_46  [color=red, key=2, style=dotted];
m12_98 -> m12_24  [color=red, key=2, style=dotted];
m12_98 -> m12_107  [color=red, key=1, label="lambda expression", style=dashed];
m12_99 -> m12_100  [color=red, key=0, style=solid];
m12_99 -> m12_61  [key=2, style=dotted];
m12_99 -> m12_101  [color=red, key=1, label=filter, style=dashed];
m12_100 -> m12_101  [color=red, key=0, style=solid];
m12_100 -> m12_46  [color=red, key=2, style=dotted];
m12_100 -> m12_105  [color=red, key=2, style=dotted];
m12_100 -> m12_110  [color=red, key=1, label="lambda expression", style=dashed];
m12_100 -> m12_113  [color=red, key=1, label="lambda expression", style=dashed];
m12_101 -> m12_102  [color=red, key=0, style=solid];
m12_101 -> m12_62  [color=red, key=2, style=dotted];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_23  [key=2, style=dotted];
m12_102 -> m12_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_106  [key=2, style=dotted];
m12_103 -> m12_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_104 -> m12_97  [color=blue, key=0, style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_46  [key=2, style=dotted];
m12_42 -> m12_24  [key=2, style=dotted];
m12_42 -> m12_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_23  [key=2, style=dotted];
m12_43 -> m12_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_24  [key=2, style=dotted];
m12_44 -> m12_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_45 -> m12_41  [color=blue, key=0, style=bold];
m12_251 -> m12_252  [key=0, style=solid];
m12_252 -> m12_253  [key=0, style=solid];
m12_252 -> m12_128  [key=2, style=dotted];
m12_252 -> m12_254  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_252 -> m12_260  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_253 -> m12_254  [key=0, style=solid];
m12_253 -> m12_128  [key=2, style=dotted];
m12_253 -> m12_255  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_254 -> m12_255  [key=0, style=solid];
m12_254 -> m12_62  [key=2, style=dotted];
m12_260 -> m12_261  [key=0, style=solid];
m12_260 -> m12_36  [key=2, style=dotted];
m12_260 -> m12_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_255 -> m12_256  [key=0, style=solid];
m12_255 -> m12_62  [key=2, style=dotted];
m12_256 -> m12_257  [key=0, style=solid];
m12_256 -> m12_237  [key=2, style=dotted];
m12_256 -> m12_260  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_256 -> m12_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_256 -> m12_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_46  [key=2, style=dotted];
m12_257 -> m12_238  [key=2, style=dotted];
m12_257 -> m12_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_23  [key=2, style=dotted];
m12_258 -> m12_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_24  [key=2, style=dotted];
m12_259 -> m12_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_261 -> m12_251  [color=blue, key=0, style=bold];
m12_53 -> m12_54  [key=0, style=solid];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_61  [key=2, style=dotted];
m12_54 -> m12_59  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_62  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_36  [key=2, style=dotted];
m12_59 -> m12_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_46  [key=2, style=dotted];
m12_56 -> m12_24  [key=2, style=dotted];
m12_56 -> m12_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_23  [key=2, style=dotted];
m12_57 -> m12_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_24  [key=2, style=dotted];
m12_58 -> m12_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_60 -> m12_53  [color=blue, key=0, style=bold];
m12_23 -> m12_328  [key=0, style=solid];
m12_328 -> m12_329  [key=0, style=solid];
m12_328 -> m12_330  [key=2, style=dotted];
m12_329 -> m12_23  [color=blue, key=0, style=bold];
m12_18 -> m12_19  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_23  [key=2, style=dotted];
m12_19 -> m12_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_24  [key=2, style=dotted];
m12_20 -> m12_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> n11  [key=2, style=dotted];
m12_22 -> m12_18  [color=blue, key=0, style=bold];
m12_119 -> m12_120  [key=0, style=solid];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_128  [key=2, style=dotted];
m12_120 -> m12_122  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_120 -> m12_124  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_62  [key=2, style=dotted];
m12_122 -> m12_123  [key=0, style=solid];
m12_122 -> m12_46  [key=2, style=dotted];
m12_122 -> m12_84  [key=2, style=dotted];
m12_122 -> m12_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_46  [key=2, style=dotted];
m12_124 -> m12_84  [key=2, style=dotted];
m12_124 -> m12_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_46  [key=2, style=dotted];
m12_123 -> m12_84  [key=2, style=dotted];
m12_123 -> m12_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_23  [key=2, style=dotted];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_35  [key=2, style=dotted];
m12_127 -> m12_119  [color=blue, key=0, style=bold];
m12_164 -> m12_165  [key=0, style=solid];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_128  [key=2, style=dotted];
m12_165 -> m12_167  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_165 -> m12_171  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_62  [key=2, style=dotted];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_46  [key=2, style=dotted];
m12_167 -> m12_105  [key=2, style=dotted];
m12_167 -> m12_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_167 -> m12_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_36  [key=2, style=dotted];
m12_171 -> m12_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_23  [key=2, style=dotted];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_35  [key=2, style=dotted];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_36  [key=2, style=dotted];
m12_170 -> m12_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_172 -> m12_164  [color=blue, key=0, style=bold];
m12_228 -> m12_229  [key=0, style=solid];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_128  [key=2, style=dotted];
m12_229 -> m12_235  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_62  [key=2, style=dotted];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_36  [key=2, style=dotted];
m12_235 -> m12_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_237  [key=2, style=dotted];
m12_231 -> m12_235  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_231 -> m12_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_231 -> m12_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_232 -> m12_233  [color=red, key=0, style=solid];
m12_232 -> m12_46  [key=2, style=dotted];
m12_232 -> m12_238  [key=2, style=dotted];
m12_232 -> m12_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_233 -> m12_234  [color=red, key=0, style=solid];
m12_233 -> m12_23  [color=red, key=2, style=dotted];
m12_233 -> m12_243  [color=red, key=1, label=process, style=dashed];
m12_234 -> m12_235  [color=red, key=0, style=solid];
m12_234 -> m12_24  [color=red, key=2, style=dotted];
m12_234 -> m12_242  [color=red, key=1, label="lambda expression", style=dashed];
m12_236 -> m12_228  [color=blue, key=0, style=bold];
m12_185 -> m12_186  [key=0, style=solid];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_128  [key=2, style=dotted];
m12_186 -> m12_188  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_186 -> m12_193  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_128  [key=2, style=dotted];
m12_187 -> m12_189  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_187 -> m12_190  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_62  [key=2, style=dotted];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_36  [key=2, style=dotted];
m12_193 -> m12_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_62  [key=2, style=dotted];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_46  [key=2, style=dotted];
m12_190 -> m12_105  [key=2, style=dotted];
m12_190 -> m12_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_190 -> m12_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_23  [key=2, style=dotted];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_35  [key=2, style=dotted];
m12_194 -> m12_185  [color=blue, key=0, style=bold];
m12_73 -> m12_74  [key=0, style=solid];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_61  [key=2, style=dotted];
m12_74 -> m12_77  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m12_74 -> m12_78  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_61  [key=2, style=dotted];
m12_75 -> m12_79  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_46  [key=2, style=dotted];
m12_77 -> m12_84  [key=2, style=dotted];
m12_77 -> m12_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_62  [key=2, style=dotted];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_46  [key=2, style=dotted];
m12_76 -> m12_84  [key=2, style=dotted];
m12_76 -> m12_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_62  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_46  [key=2, style=dotted];
m12_80 -> m12_24  [key=2, style=dotted];
m12_80 -> m12_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_23  [key=2, style=dotted];
m12_81 -> m12_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_24  [key=2, style=dotted];
m12_82 -> m12_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_83 -> m12_73  [color=blue, key=0, style=bold];
m12_30 -> m12_31  [key=0, style=solid];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_23  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_35  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_36  [key=2, style=dotted];
m12_33 -> m12_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_34 -> m12_30  [color=blue, key=0, style=bold];
m12_324 -> m12_325  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_17  [key=2, style=dotted];
m12_16 -> m12_14  [color=blue, key=0, style=bold];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_29  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_28 -> m12_26  [color=blue, key=0, style=bold];
m12_37 -> m12_38  [key=0, style=solid];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_40  [key=2, style=dotted];
m12_39 -> m12_37  [color=blue, key=0, style=bold];
m12_47 -> m12_48  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_35  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_40  [key=2, style=dotted];
m12_49 -> m12_47  [color=blue, key=0, style=bold];
m12_52 -> m12_50  [color=blue, key=0, style=bold];
m12_63 -> m12_64  [key=0, style=solid];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_35  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_40  [key=2, style=dotted];
m12_65 -> m12_63  [color=blue, key=0, style=bold];
m12_68 -> m12_66  [color=blue, key=0, style=bold];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_24  [key=2, style=dotted];
m12_70 -> m12_72  [key=2, style=dotted];
m12_71 -> m12_69  [color=blue, key=0, style=bold];
m12_85 -> m12_86  [key=0, style=solid];
m12_88 -> m12_89  [key=0, style=solid];
m12_91 -> m12_92  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_35  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_24  [key=2, style=dotted];
m12_86 -> m12_72  [key=2, style=dotted];
m12_87 -> m12_85  [color=blue, key=0, style=bold];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_24  [key=2, style=dotted];
m12_89 -> m12_72  [key=2, style=dotted];
m12_90 -> m12_88  [color=blue, key=0, style=bold];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_40  [key=2, style=dotted];
m12_93 -> m12_91  [color=blue, key=0, style=bold];
m12_96 -> m12_94  [color=blue, key=0, style=bold];
m12_107 -> m12_108  [color=red, key=0, style=solid];
m12_110 -> m12_111  [color=red, key=0, style=solid];
m12_113 -> m12_114  [color=red, key=0, style=solid];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_35  [key=2, style=dotted];
m12_116 -> m12_117  [key=0, style=solid];
m12_108 -> m12_109  [color=red, key=0, style=solid];
m12_108 -> m12_40  [color=red, key=2, style=dotted];
m12_109 -> m12_107  [color=blue, key=0, style=bold];
m12_111 -> m12_112  [color=red, key=0, style=solid];
m12_111 -> m12_24  [color=red, key=2, style=dotted];
m12_111 -> m12_72  [color=red, key=2, style=dotted];
m12_112 -> m12_110  [color=blue, key=0, style=bold];
m12_114 -> m12_115  [color=red, key=0, style=solid];
m12_115 -> m12_113  [color=blue, key=0, style=bold];
m12_118 -> m12_116  [color=blue, key=0, style=bold];
m12_129 -> m12_130  [key=0, style=solid];
m12_133 -> m12_134  [key=0, style=solid];
m12_136 -> m12_137  [key=0, style=solid];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_24  [key=2, style=dotted];
m12_130 -> m12_132  [key=2, style=dotted];
m12_131 -> m12_129  [color=blue, key=0, style=bold];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_40  [key=2, style=dotted];
m12_135 -> m12_133  [color=blue, key=0, style=bold];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_24  [key=2, style=dotted];
m12_137 -> m12_139  [key=2, style=dotted];
m12_138 -> m12_136  [color=blue, key=0, style=bold];
m12_152 -> m12_153  [key=0, style=solid];
m12_155 -> m12_156  [key=0, style=solid];
m12_158 -> m12_159  [key=0, style=solid];
m12_161 -> m12_162  [key=0, style=solid];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_24  [key=2, style=dotted];
m12_153 -> m12_132  [key=2, style=dotted];
m12_154 -> m12_152  [color=blue, key=0, style=bold];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_24  [key=2, style=dotted];
m12_156 -> m12_132  [key=2, style=dotted];
m12_157 -> m12_155  [color=blue, key=0, style=bold];
m12_159 -> m12_160  [key=0, style=solid];
m12_159 -> m12_24  [key=2, style=dotted];
m12_159 -> m12_139  [key=2, style=dotted];
m12_160 -> m12_158  [color=blue, key=0, style=bold];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_24  [key=2, style=dotted];
m12_162 -> m12_139  [key=2, style=dotted];
m12_163 -> m12_161  [color=blue, key=0, style=bold];
m12_173 -> m12_174  [key=0, style=solid];
m12_176 -> m12_177  [key=0, style=solid];
m12_179 -> m12_180  [key=0, style=solid];
m12_182 -> m12_183  [key=0, style=solid];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_24  [key=2, style=dotted];
m12_174 -> m12_132  [key=2, style=dotted];
m12_175 -> m12_173  [color=blue, key=0, style=bold];
m12_177 -> m12_178  [key=0, style=solid];
m12_178 -> m12_176  [color=blue, key=0, style=bold];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_40  [key=2, style=dotted];
m12_181 -> m12_179  [color=blue, key=0, style=bold];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_24  [key=2, style=dotted];
m12_183 -> m12_139  [key=2, style=dotted];
m12_184 -> m12_182  [color=blue, key=0, style=bold];
m12_195 -> m12_196  [key=0, style=solid];
m12_198 -> m12_199  [key=0, style=solid];
m12_201 -> m12_202  [key=0, style=solid];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_24  [key=2, style=dotted];
m12_196 -> m12_132  [key=2, style=dotted];
m12_197 -> m12_195  [color=blue, key=0, style=bold];
m12_199 -> m12_200  [key=0, style=solid];
m12_200 -> m12_198  [color=blue, key=0, style=bold];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_24  [key=2, style=dotted];
m12_202 -> m12_139  [key=2, style=dotted];
m12_202 -> m12_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_203 -> m12_201  [color=blue, key=0, style=bold];
m12_204 -> m12_205  [key=0, style=solid];
m12_205 -> m12_206  [key=0, style=solid];
m12_206 -> m12_204  [color=blue, key=0, style=bold];
m12_216 -> m12_217  [key=0, style=solid];
m12_220 -> m12_221  [key=0, style=solid];
m12_220 -> m12_35  [key=2, style=dotted];
m12_219 -> m12_220  [key=0, style=solid];
m12_222 -> m12_223  [key=0, style=solid];
m12_225 -> m12_226  [key=0, style=solid];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_24  [key=2, style=dotted];
m12_217 -> m12_132  [key=2, style=dotted];
m12_218 -> m12_216  [color=blue, key=0, style=bold];
m12_221 -> m12_219  [color=blue, key=0, style=bold];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_40  [key=2, style=dotted];
m12_224 -> m12_222  [color=blue, key=0, style=bold];
m12_226 -> m12_227  [key=0, style=solid];
m12_226 -> m12_24  [key=2, style=dotted];
m12_226 -> m12_139  [key=2, style=dotted];
m12_227 -> m12_225  [color=blue, key=0, style=bold];
m12_246 -> m12_247  [key=0, style=solid];
m12_246 -> m12_24  [key=2, style=dotted];
m12_246 -> m12_139  [key=2, style=dotted];
m12_246 -> m12_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_249 -> m12_250  [key=0, style=solid];
m12_239 -> m12_240  [key=0, style=solid];
m12_243 -> m12_244  [color=red, key=0, style=solid];
m12_243 -> m12_35  [color=red, key=2, style=dotted];
m12_242 -> m12_243  [color=red, key=0, style=solid];
m12_245 -> m12_246  [key=0, style=solid];
m12_240 -> m12_241  [key=0, style=solid];
m12_240 -> m12_40  [key=2, style=dotted];
m12_241 -> m12_239  [color=blue, key=0, style=bold];
m12_244 -> m12_242  [color=blue, key=0, style=bold];
m12_247 -> m12_245  [color=blue, key=0, style=bold];
m12_248 -> m12_249  [key=0, style=solid];
m12_250 -> m12_248  [color=blue, key=0, style=bold];
m12_269 -> m12_270  [key=0, style=solid];
m12_269 -> m12_24  [key=2, style=dotted];
m12_269 -> m12_139  [key=2, style=dotted];
m12_269 -> m12_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_272 -> m12_273  [key=0, style=solid];
m12_262 -> m12_263  [key=0, style=solid];
m12_266 -> m12_267  [key=0, style=solid];
m12_266 -> m12_35  [key=2, style=dotted];
m12_265 -> m12_266  [key=0, style=solid];
m12_268 -> m12_269  [key=0, style=solid];
m12_263 -> m12_264  [key=0, style=solid];
m12_263 -> m12_40  [key=2, style=dotted];
m12_264 -> m12_262  [color=blue, key=0, style=bold];
m12_267 -> m12_265  [color=blue, key=0, style=bold];
m12_270 -> m12_268  [color=blue, key=0, style=bold];
m12_271 -> m12_272  [key=0, style=solid];
m12_273 -> m12_271  [color=blue, key=0, style=bold];
m12_287 -> m12_288  [key=0, style=solid];
m12_287 -> m12_24  [key=2, style=dotted];
m12_287 -> m12_139  [key=2, style=dotted];
m12_287 -> m12_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_290 -> m12_291  [key=0, style=solid];
m12_283 -> m12_284  [key=0, style=solid];
m12_286 -> m12_287  [key=0, style=solid];
m12_292 -> m12_293  [key=0, style=solid];
m12_296 -> m12_297  [key=0, style=solid];
m12_296 -> m12_35  [key=2, style=dotted];
m12_295 -> m12_296  [key=0, style=solid];
m12_284 -> m12_285  [key=0, style=solid];
m12_284 -> m12_40  [key=2, style=dotted];
m12_285 -> m12_283  [color=blue, key=0, style=bold];
m12_288 -> m12_286  [color=blue, key=0, style=bold];
m12_289 -> m12_290  [key=0, style=solid];
m12_291 -> m12_289  [color=blue, key=0, style=bold];
m12_293 -> m12_294  [key=0, style=solid];
m12_294 -> m12_292  [color=blue, key=0, style=bold];
m12_297 -> m12_295  [color=blue, key=0, style=bold];
m12_309 -> m12_310  [key=0, style=solid];
m12_312 -> m12_313  [key=0, style=solid];
m12_315 -> m12_316  [key=0, style=solid];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_35  [key=2, style=dotted];
m12_318 -> m12_319  [key=0, style=solid];
m12_321 -> m12_322  [key=0, style=solid];
m12_310 -> m12_311  [key=0, style=solid];
m12_310 -> m12_40  [key=2, style=dotted];
m12_311 -> m12_309  [color=blue, key=0, style=bold];
m12_313 -> m12_314  [key=0, style=solid];
m12_313 -> m12_24  [key=2, style=dotted];
m12_313 -> m12_139  [key=2, style=dotted];
m12_314 -> m12_312  [color=blue, key=0, style=bold];
m12_316 -> m12_317  [key=0, style=solid];
m12_317 -> m12_315  [color=blue, key=0, style=bold];
m12_320 -> m12_318  [color=blue, key=0, style=bold];
m12_322 -> m12_323  [key=0, style=solid];
m12_322 -> m12_24  [key=2, style=dotted];
m12_322 -> m12_139  [key=2, style=dotted];
m12_322 -> m12_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_323 -> m12_321  [color=blue, key=0, style=bold];
m12_325 -> m12_326  [key=0, style=solid];
m12_326 -> m12_324  [color=blue, key=0, style=bold];
m12_207 -> m12_208  [key=0, style=solid];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> m12_128  [key=2, style=dotted];
m12_208 -> m12_210  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_208 -> m12_214  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_62  [key=2, style=dotted];
m12_210 -> m12_211  [key=0, style=solid];
m12_210 -> m12_46  [key=2, style=dotted];
m12_210 -> m12_24  [key=2, style=dotted];
m12_210 -> m12_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_36  [key=2, style=dotted];
m12_214 -> m12_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_211 -> m12_212  [key=0, style=solid];
m12_211 -> m12_23  [key=2, style=dotted];
m12_211 -> m12_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_24  [key=2, style=dotted];
m12_212 -> m12_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_36  [key=2, style=dotted];
m12_213 -> m12_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_215 -> m12_207  [color=blue, key=0, style=bold];
m12_298 -> m12_299  [key=0, style=solid];
m12_299 -> m12_300  [key=0, style=solid];
m12_299 -> m12_128  [key=2, style=dotted];
m12_299 -> m12_301  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_299 -> m12_307  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_300 -> m12_301  [key=0, style=solid];
m12_300 -> m12_128  [key=2, style=dotted];
m12_300 -> m12_302  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_300 -> m12_304  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_301 -> m12_302  [key=0, style=solid];
m12_301 -> m12_62  [key=2, style=dotted];
m12_307 -> m12_308  [key=0, style=solid];
m12_307 -> m12_36  [key=2, style=dotted];
m12_307 -> m12_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_302 -> m12_303  [key=0, style=solid];
m12_302 -> m12_62  [key=2, style=dotted];
m12_304 -> m12_305  [key=0, style=solid];
m12_304 -> m12_46  [key=2, style=dotted];
m12_304 -> m12_105  [key=2, style=dotted];
m12_304 -> m12_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_304 -> m12_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_303 -> m12_304  [key=0, style=solid];
m12_303 -> m12_46  [key=2, style=dotted];
m12_303 -> m12_24  [key=2, style=dotted];
m12_303 -> m12_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_305 -> m12_306  [key=0, style=solid];
m12_305 -> m12_23  [key=2, style=dotted];
m12_305 -> m12_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_306 -> m12_307  [key=0, style=solid];
m12_306 -> m12_106  [key=2, style=dotted];
m12_306 -> m12_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_308 -> m12_298  [color=blue, key=0, style=bold];
m12_274 -> m12_275  [key=0, style=solid];
m12_275 -> m12_276  [key=0, style=solid];
m12_275 -> m12_128  [key=2, style=dotted];
m12_275 -> m12_279  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_62  [key=2, style=dotted];
m12_279 -> m12_280  [key=0, style=solid];
m12_279 -> m12_46  [key=2, style=dotted];
m12_279 -> m12_105  [key=2, style=dotted];
m12_279 -> m12_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_279 -> m12_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_277 -> m12_278  [key=0, style=solid];
m12_277 -> m12_237  [key=2, style=dotted];
m12_277 -> m12_279  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_277 -> m12_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_277 -> m12_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_278 -> m12_279  [key=0, style=solid];
m12_278 -> m12_46  [key=2, style=dotted];
m12_278 -> m12_238  [key=2, style=dotted];
m12_278 -> m12_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_280 -> m12_281  [key=0, style=solid];
m12_280 -> m12_23  [key=2, style=dotted];
m12_280 -> m12_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_281 -> m12_282  [key=0, style=solid];
m12_281 -> m12_106  [key=2, style=dotted];
m12_281 -> m12_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_282 -> m12_274  [color=blue, key=0, style=bold];
m12_17 -> m12_327  [key=0, style=solid];
m12_327 -> m12_17  [color=blue, key=0, style=bold];
m12_140 -> m12_141  [key=0, style=solid];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_128  [key=2, style=dotted];
m12_141 -> m12_143  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_141 -> m12_145  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_141 -> m12_148  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_128  [key=2, style=dotted];
m12_142 -> m12_144  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_142 -> m12_146  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_142 -> m12_147  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_62  [key=2, style=dotted];
m12_145 -> m12_146  [key=0, style=solid];
m12_145 -> m12_46  [key=2, style=dotted];
m12_145 -> m12_84  [key=2, style=dotted];
m12_145 -> m12_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_46  [key=2, style=dotted];
m12_148 -> m12_84  [key=2, style=dotted];
m12_148 -> m12_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_62  [key=2, style=dotted];
m12_146 -> m12_147  [key=0, style=solid];
m12_146 -> m12_46  [key=2, style=dotted];
m12_146 -> m12_84  [key=2, style=dotted];
m12_146 -> m12_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_46  [key=2, style=dotted];
m12_147 -> m12_84  [key=2, style=dotted];
m12_147 -> m12_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_149 -> m12_150  [key=0, style=solid];
m12_149 -> m12_23  [key=2, style=dotted];
m12_150 -> m12_151  [key=0, style=solid];
m12_150 -> m12_35  [key=2, style=dotted];
m12_151 -> m12_140  [color=blue, key=0, style=bold];
m12_331 -> m12_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_15  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_19  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_33  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_55  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_56  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_80  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_81  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_82  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_98  [color=red, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_101  [color=red, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_123  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_125  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_126  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_143  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_144  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_170  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_189  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_191  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_209  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_211  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_212  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_220  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_213  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_230  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_232  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_233  [color=red, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_234  [color=red, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_243  [color=red, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_254  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_255  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_257  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_258  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_259  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_266  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_276  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_278  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_280  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_281  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_296  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_301  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_302  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_303  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_305  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_306  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_319  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_328  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_332 -> m12_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_333 -> m12_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_334 -> m12_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_335 -> m12_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_336 -> m12_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_337 -> m12_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_338 -> m12_243  [color=red, key=1, label=process, style=dashed];
m12_339 -> m12_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_339 -> m12_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_340 -> m12_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_341 -> m12_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_341 -> m12_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_342 -> m12_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_342 -> m12_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_343 -> m12_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_344 -> m12_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m13_10 -> m13_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_13  [key=0, style=solid];
m13_13 -> m13_14  [key=0, style=solid];
m13_12 -> m13_14  [key=0, style=solid];
m13_12 -> m13_8  [key=2, style=dotted];
m13_14 -> m13_10  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>", style=dashed];
m13_0 -> m13_5  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m13_0 -> m13_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>", style=dashed];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_5  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_9  [key=2, style=dotted];
m13_2 -> m13_7  [key=0, style=solid];
m13_2 -> m13_8  [key=2, style=dotted];
m13_4 -> m13_7  [key=0, style=solid];
m13_4 -> m13_8  [key=2, style=dotted];
m13_7 -> m13_0  [color=blue, key=0, style=bold];
m13_77 -> m13_91  [key=0, style=solid];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_93  [key=2, style=dotted];
m13_91 -> m13_94  [key=2, style=dotted];
m13_92 -> m13_77  [color=blue, key=0, style=bold];
m13_78 -> m13_81  [key=0, style=solid];
m13_78 -> m13_82  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>", style=dashed];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_84  [key=2, style=dotted];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_85  [key=2, style=dotted];
m13_83 -> m13_78  [color=blue, key=0, style=bold];
m13_38 -> m13_68  [key=0, style=solid];
m13_38 -> m13_69  [color=darkseagreen4, key=1, label="HangFire.States.StateContext", style=dashed];
m13_38 -> m13_70  [color=darkseagreen4, key=1, label="HangFire.States.StateContext", style=dashed];
m13_38 -> m13_74  [color=darkseagreen4, key=1, label="HangFire.States.StateContext", style=dashed];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_77  [key=2, style=dotted];
m13_68 -> m13_70  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_78  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_79  [key=2, style=dotted];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_80  [key=2, style=dotted];
m13_74 -> m13_79  [key=2, style=dotted];
m13_71 -> m13_76  [key=0, style=solid];
m13_72 -> m13_73  [key=0, style=solid];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_66  [key=2, style=dotted];
m13_75 -> m13_76  [key=0, style=solid];
m13_76 -> m13_38  [color=blue, key=0, style=bold];
m13_19 -> m13_20  [key=0, style=solid];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_18  [key=2, style=dotted];
m13_16 -> m13_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_15 -> m13_16  [key=0, style=solid];
m13_17 -> m13_15  [color=blue, key=0, style=bold];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_22  [key=2, style=dotted];
m13_21 -> m13_19  [color=blue, key=0, style=bold];
m13_79 -> m13_86  [key=0, style=solid];
m13_79 -> m13_87  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>", style=dashed];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_89  [key=2, style=dotted];
m13_87 -> m13_88  [key=0, style=solid];
m13_87 -> m13_90  [key=2, style=dotted];
m13_88 -> m13_79  [color=blue, key=0, style=bold];
m13_9 -> m13_95  [key=0, style=solid];
m13_9 -> m13_96  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>", style=dashed];
m13_95 -> m13_96  [key=0, style=solid];
m13_95 -> m13_100  [key=2, style=dotted];
m13_95 -> m13_97  [color=darkseagreen4, key=1, label=handlerCollection, style=dashed];
m13_95 -> m13_98  [color=darkseagreen4, key=1, label=handlerCollection, style=dashed];
m13_96 -> m13_97  [key=0, style=solid];
m13_96 -> m13_98  [key=0, style=solid];
m13_97 -> m13_96  [key=0, style=solid];
m13_97 -> m13_101  [key=2, style=dotted];
m13_98 -> m13_99  [key=0, style=solid];
m13_99 -> m13_9  [color=blue, key=0, style=bold];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m13_23 -> m13_28  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m13_23 -> m13_30  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m13_23 -> m13_31  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m13_23 -> m13_32  [color=red, key=1, label="HangFire.States.IState", style=dashed];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_26  [key=0, style=solid];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_28  [key=0, style=solid];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_30  [key=0, style=solid];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_35  [key=2, style=dotted];
m13_30 -> m13_36  [key=2, style=dotted];
m13_30 -> m13_33  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_31 -> m13_32  [color=red, key=0, style=solid];
m13_31 -> m13_37  [key=2, style=dotted];
m13_32 -> m13_33  [color=red, key=0, style=solid];
m13_32 -> m13_38  [color=red, key=2, style=dotted];
m13_25 -> m13_34  [key=0, style=solid];
m13_25 -> m13_8  [key=2, style=dotted];
m13_27 -> m13_34  [key=0, style=solid];
m13_27 -> m13_8  [key=2, style=dotted];
m13_29 -> m13_34  [key=0, style=solid];
m13_29 -> m13_8  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_34 -> m13_23  [color=blue, key=0, style=bold];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_42  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m13_39 -> m13_44  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m13_39 -> m13_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_39 -> m13_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_39 -> m13_51  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m13_39 -> m13_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_39 -> m13_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_42  [key=0, style=solid];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_44  [key=0, style=solid];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_46  [key=0, style=solid];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_62  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_63  [key=2, style=dotted];
m13_48 -> m13_51  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m13_48 -> m13_53  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m13_48 -> m13_58  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m13_48 -> m13_59  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_53  [key=0, style=solid];
m13_51 -> m13_64  [key=2, style=dotted];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_66  [key=2, style=dotted];
m13_56 -> m13_67  [key=2, style=dotted];
m13_56 -> m13_56  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m13_56 -> m13_59  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_37  [key=2, style=dotted];
m13_41 -> m13_61  [key=0, style=solid];
m13_41 -> m13_8  [key=2, style=dotted];
m13_43 -> m13_61  [key=0, style=solid];
m13_43 -> m13_8  [key=2, style=dotted];
m13_45 -> m13_61  [key=0, style=solid];
m13_45 -> m13_8  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_51  [key=0, style=solid];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_65  [key=2, style=dotted];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_38  [key=2, style=dotted];
m13_50 -> m13_61  [key=0, style=solid];
m13_52 -> m13_61  [key=0, style=solid];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_58  [key=0, style=solid];
m13_55 -> m13_56  [key=0, style=solid];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_60  [color=darkseagreen4, key=1, label=loadSucceeded, style=dashed];
m13_60 -> m13_61  [key=0, style=solid];
m13_61 -> m13_39  [color=blue, key=0, style=bold];
m13_102 -> m13_5  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_6  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_13  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_30  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_32  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_46  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_48  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_59  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_68  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_69  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_70  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_74  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_81  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_86  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_87  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_102 -> m13_91  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m13_103 -> m13_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m14_0 -> m14_1  [key=0, style=solid];
m14_2 -> m14_5  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_4  [key=2, style=dotted];
m14_3 -> m14_0  [color=blue, key=0, style=bold];
m14_19 -> m14_73  [key=0, style=solid];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_17  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_75  [key=2, style=dotted];
m14_74 -> m14_19  [color=blue, key=0, style=bold];
m14_20 -> n11  [key=2, style=dotted];
m14_20 -> m14_21  [key=0, style=solid];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_20  [key=2, style=dotted];
m14_30 -> m14_27  [color=blue, key=0, style=bold];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_5  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_19  [key=2, style=dotted];
m14_15 -> n11  [key=2, style=dotted];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_11  [color=blue, key=0, style=bold];
m14_18 -> m14_14  [color=blue, key=0, style=bold];
m14_18 -> m14_19  [key=0, style=solid];
m14_22 -> m14_23  [color=green, key=0, style=solid];
m14_22 -> m14_28  [key=2, style=dotted];
m14_22 -> m14_29  [key=2, style=dotted];
m14_22 -> m14_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_22 -> m14_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_23 -> m14_24  [color=green, key=0, style=solid];
m14_23 -> m14_26  [color=green, key=2, style=dotted];
m14_23 -> m14_19  [key=2, style=dotted];
m14_23 -> m14_25  [color=darkseagreen4, key=1, label=component, style=dashed];
m14_23 -> m14_43  [color=darkseagreen4, key=1, label=component, style=dashed];
m14_24 -> m14_25  [color=green, key=0, style=solid];
m14_24 -> n11  [color=green, key=2, style=dotted];
m14_24 -> m14_30  [key=2, style=dotted];
m14_24 -> m14_31  [key=2, style=dotted];
m14_25 -> m14_22  [color=blue, key=0, style=bold];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_9  [key=2, style=dotted];
m14_25 -> m14_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_13  [key=2, style=dotted];
m14_13 -> m14_15  [color=darkseagreen4, key=1, label=intResult, style=dashed];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_17  [key=2, style=dotted];
m14_12 -> m14_14  [color=darkseagreen4, key=1, label=stringResult, style=dashed];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_17  [key=2, style=dotted];
m14_12 -> m14_10  [color=blue, key=0, style=bold];
m14_41 -> m14_38  [color=blue, key=0, style=bold];
m14_36 -> m14_34  [color=blue, key=0, style=bold];
m14_9 -> m14_6  [color=blue, key=0, style=bold];
m14_6 -> m14_7  [key=0, style=solid];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_9  [key=2, style=dotted];
m14_7 -> m14_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_7 -> m14_4  [key=2, style=dotted];
m14_8 -> m14_6  [color=blue, key=0, style=bold];
m14_8 -> n11  [key=2, style=dotted];
m14_8 -> m14_9  [key=0, style=solid];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_18  [color=blue, key=0, style=bold];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_32  [key=2, style=dotted];
m14_26 -> m14_33  [key=2, style=dotted];
m14_26 -> m14_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_27 -> m14_21  [color=blue, key=0, style=bold];
m14_27 -> m14_28  [color=green, key=0, style=solid];
m14_43 -> m14_44  [color=green, key=0, style=solid];
m14_43 -> m14_45  [key=2, style=dotted];
m14_44 -> m14_45  [color=green, key=0, style=solid];
m14_44 -> m14_47  [color=green, key=2, style=dotted];
m14_44 -> m14_5  [color=green, key=2, style=dotted];
m14_44 -> m14_42  [color=blue, key=0, style=bold];
m14_45 -> m14_46  [color=green, key=0, style=solid];
m14_45 -> m14_47  [color=green, key=2, style=dotted];
m14_45 -> m14_5  [color=green, key=2, style=dotted];
m14_46 -> m14_43  [color=blue, key=0, style=bold];
m14_46 -> m14_47  [key=0, style=solid];
m14_28 -> m14_29  [color=green, key=0, style=solid];
m14_28 -> m14_31  [color=green, key=2, style=dotted];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_37  [key=2, style=dotted];
m14_29 -> m14_30  [color=green, key=0, style=solid];
m14_29 -> n11  [color=green, key=2, style=dotted];
m14_59 -> m14_60  [key=0, style=solid];
m14_10 -> m14_11  [key=0, style=solid];
m14_34 -> m14_35  [color=green, key=0, style=solid];
m14_34 -> m14_37  [color=green, key=2, style=dotted];
m14_34 -> n11  [color=green, key=2, style=dotted];
m14_38 -> m14_39  [color=green, key=0, style=solid];
m14_42 -> m14_43  [key=0, style=solid];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_9  [key=2, style=dotted];
m14_35 -> m14_37  [key=2, style=dotted];
m14_35 -> m14_32  [color=blue, key=0, style=bold];
m14_39 -> m14_40  [color=green, key=0, style=solid];
m14_39 -> m14_41  [key=2, style=dotted];
m14_39 -> m14_37  [color=green, key=2, style=dotted];
m14_39 -> m14_42  [color=green, key=2, style=dotted];
m14_40 -> m14_38  [color=blue, key=0, style=bold];
m14_40 -> m14_41  [color=green, key=0, style=solid];
m14_40 -> n11  [color=green, key=2, style=dotted];
m14_48 -> m14_46  [color=blue, key=0, style=bold];
m14_48 -> m14_49  [color=green, key=0, style=solid];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_45  [key=2, style=dotted];
m14_56 -> m14_57  [key=0, style=solid];
m14_58 -> m14_56  [color=blue, key=0, style=bold];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_9  [key=2, style=dotted];
m14_60 -> m14_37  [key=2, style=dotted];
m14_61 -> m14_59  [color=blue, key=0, style=bold];
m14_65 -> m14_66  [key=0, style=solid];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_19  [key=2, style=dotted];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_70  [key=2, style=dotted];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_71  [key=2, style=dotted];
m14_68 -> m14_72  [key=2, style=dotted];
m14_69 -> m14_65  [color=blue, key=0, style=bold];
m14_49 -> m14_50  [color=green, key=0, style=solid];
m14_49 -> m14_37  [color=green, key=2, style=dotted];
m14_49 -> m14_47  [color=green, key=2, style=dotted];
m14_50 -> m14_51  [color=green, key=0, style=solid];
m14_50 -> m14_19  [color=red, key=2, style=dotted];
m14_50 -> m14_52  [color=red, key=1, label=component, style=dashed];
m14_50 -> m14_57  [color=red, key=1, label=component, style=dashed];
m14_50 -> n11  [color=green, key=2, style=dotted];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_55  [key=2, style=dotted];
m14_51 -> m14_48  [color=blue, key=0, style=bold];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_9  [key=2, style=dotted];
m14_52 -> m14_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_33  [key=2, style=dotted];
m14_53 -> m14_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_54 -> m14_49  [color=blue, key=0, style=bold];
m14_32 -> m14_33  [color=green, key=0, style=solid];
m14_62 -> m14_63  [key=0, style=solid];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_55  [key=2, style=dotted];
m14_64 -> m14_62  [color=blue, key=0, style=bold];
m14_33 -> m14_34  [color=green, key=0, style=solid];
m14_33 -> m14_36  [color=green, key=2, style=dotted];
m14_76 -> m14_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_17  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_23  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_50  [color=red, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_76 -> m14_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m14_77 -> m14_43  [color=darkseagreen4, key=1, label=component, style=dashed];
m14_78 -> m14_57  [color=darkseagreen4, key=1, label=component, style=dashed];
m16_0 -> m16_1  [key=0, style=solid];
m16_45 -> m16_45  [color=green, key=1, label=job, style=dashed];
m16_45 -> m16_46  [color=green, key=0, style=solid];
m16_45 -> m16_68  [color=green, key=2, style=dotted];
m16_45 -> m16_61  [color=green, key=2, style=dotted];
m16_45 -> m16_47  [color=green, key=1, label=job, style=dashed];
m16_43 -> m16_45  [color=green, key=1, label=job, style=dashed];
m16_43 -> m16_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_49  [key=0, style=solid];
m16_44 -> m16_45  [color=green, key=0, style=solid];
m16_44 -> m16_53  [key=2, style=dotted];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_53  [key=2, style=dotted];
m16_47 -> m16_61  [key=2, style=dotted];
m16_47 -> m16_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_47 -> m16_48  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_53  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_54  [key=2, style=dotted];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_55  [key=2, style=dotted];
m16_4 -> m16_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_55  [key=2, style=dotted];
m16_5 -> m16_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_57  [key=2, style=dotted];
m16_7 -> m16_58  [key=2, style=dotted];
m16_7 -> m16_59  [key=2, style=dotted];
m16_7 -> m16_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m16_7 -> m16_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m16_7 -> m16_51  [color=darkseagreen4, key=1, label=pager, style=dashed];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_53  [key=2, style=dotted];
m16_11 -> m16_52  [key=0, style=solid];
m16_11 -> m16_53  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_53  [key=2, style=dotted];
m16_13 -> m16_61  [key=2, style=dotted];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_59  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_53  [key=2, style=dotted];
m16_15 -> m16_61  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_59  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_53  [key=2, style=dotted];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_62  [key=2, style=dotted];
m16_17 -> m16_63  [key=2, style=dotted];
m16_17 -> m16_64  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_53  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_53  [key=2, style=dotted];
m16_21 -> m16_61  [key=2, style=dotted];
m16_21 -> m16_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_53  [key=2, style=dotted];
m16_23 -> m16_61  [key=2, style=dotted];
m16_23 -> m16_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_53  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_53  [key=2, style=dotted];
m16_27 -> m16_61  [key=2, style=dotted];
m16_27 -> m16_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_53  [key=2, style=dotted];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_53  [key=2, style=dotted];
m16_30 -> m16_61  [key=2, style=dotted];
m16_30 -> m16_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_59  [key=2, style=dotted];
m16_30 -> m16_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_53  [key=2, style=dotted];
m16_32 -> m16_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_65  [key=2, style=dotted];
m16_32 -> m16_64  [key=2, style=dotted];
m16_32 -> m16_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_53  [key=2, style=dotted];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_53  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_53  [key=2, style=dotted];
m16_37 -> m16_61  [key=2, style=dotted];
m16_37 -> m16_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_66  [key=2, style=dotted];
m16_37 -> m16_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_53  [key=2, style=dotted];
m16_39 -> m16_61  [key=2, style=dotted];
m16_39 -> m16_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_59  [key=2, style=dotted];
m16_39 -> m16_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_53  [key=2, style=dotted];
m16_41 -> m16_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_41 -> m16_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_67  [key=2, style=dotted];
m16_41 -> m16_64  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_53  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_53  [key=2, style=dotted];
m16_49 -> m16_19  [key=0, style=solid];
m16_49 -> m16_53  [key=2, style=dotted];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_53  [key=2, style=dotted];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_69  [key=2, style=dotted];
m16_51 -> m16_63  [key=2, style=dotted];
m16_51 -> m16_64  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_56  [key=2, style=dotted];
m16_6 -> m16_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_60  [key=2, style=dotted];
m16_8 -> m16_19  [color=darkseagreen4, key=1, label=processingJobs, style=dashed];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_12  [key=0, style=solid];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_19 -> m16_50  [key=0, style=solid];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_25 -> m16_29  [key=0, style=solid];
m16_25 -> m16_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_25 -> m16_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_36  [key=0, style=solid];
m16_34 -> m16_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_34 -> m16_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_52 -> m16_0  [color=blue, key=0, style=bold];
m16_70 -> m16_45  [color=green, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m16_70 -> m16_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_17  [key=2, style=dotted];
m17_8 -> m17_4  [color=blue, key=0, style=bold];
m17_3 -> m17_18  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_18 -> m17_3  [color=blue, key=0, style=bold];
m17_19 -> m17_20  [key=0, style=solid];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_22  [key=2, style=dotted];
m17_21 -> m17_19  [color=blue, key=0, style=bold];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_12  [key=2, style=dotted];
m17_27 -> m17_28  [key=0, style=solid];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_30  [key=2, style=dotted];
m17_29 -> m17_27  [color=blue, key=0, style=bold];
m17_105 -> m17_106  [key=0, style=solid];
m17_106 -> m17_107  [key=0, style=solid];
m17_106 -> m17_48  [key=2, style=dotted];
m17_107 -> m17_108  [key=0, style=solid];
m17_107 -> m17_23  [key=2, style=dotted];
m17_108 -> m17_109  [key=0, style=solid];
m17_108 -> m17_31  [key=2, style=dotted];
m17_109 -> m17_110  [key=0, style=solid];
m17_109 -> m17_69  [key=2, style=dotted];
m17_110 -> m17_111  [key=0, style=solid];
m17_110 -> m17_95  [key=2, style=dotted];
m17_111 -> m17_112  [key=0, style=solid];
m17_111 -> m17_49  [key=2, style=dotted];
m17_112 -> m17_113  [key=0, style=solid];
m17_112 -> m17_27  [key=2, style=dotted];
m17_113 -> m17_105  [color=blue, key=0, style=bold];
m17_4 -> m17_5  [key=0, style=solid];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_9  [key=2, style=dotted];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_10  [key=2, style=dotted];
m17_6 -> m17_11  [key=2, style=dotted];
m17_6 -> m17_0  [color=blue, key=0, style=bold];
m17_13 -> m17_14  [key=0, style=solid];
m17_9 -> m17_10  [color=green, key=0, style=solid];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_10  [color=green, key=1, label="HangFire.States.ProcessingState", style=dashed];
m17_15 -> m17_3  [color=darkseagreen4, key=1, label="HangFire.States.ProcessingState", style=dashed];
m17_15 -> m17_4  [color=darkseagreen4, key=1, label="HangFire.States.ProcessingState", style=dashed];
m17_15 -> m17_5  [color=darkseagreen4, key=1, label="HangFire.States.ProcessingState", style=dashed];
m17_16 -> m17_13  [color=blue, key=0, style=bold];
m17_31 -> m17_32  [key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_35  [key=2, style=dotted];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_35  [key=2, style=dotted];
m17_34 -> m17_31  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_0 -> m17_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=2, style=dotted];
m17_1 -> m17_7  [key=2, style=dotted];
m17_2 -> m17_0  [color=blue, key=0, style=bold];
m17_2 -> m17_6  [key=0, style=solid];
m17_2 -> m17_8  [key=2, style=dotted];
m17_117 -> m17_118  [key=0, style=solid];
m17_118 -> m17_119  [key=0, style=solid];
m17_118 -> m17_13  [key=2, style=dotted];
m17_119 -> m17_117  [color=blue, key=0, style=bold];
m17_11 -> m17_9  [color=blue, key=0, style=bold];
m17_50 -> m17_51  [key=0, style=solid];
m17_51 -> m17_52  [key=0, style=solid];
m17_51 -> m17_48  [key=2, style=dotted];
m17_52 -> m17_53  [key=0, style=solid];
m17_52 -> m17_23  [key=2, style=dotted];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_31  [key=2, style=dotted];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_59  [key=2, style=dotted];
m17_54 -> m17_56  [color=darkseagreen4, key=1, label=table1, style=dashed];
m17_55 -> m17_56  [key=0, style=solid];
m17_55 -> m17_60  [key=2, style=dotted];
m17_56 -> m17_57  [key=0, style=solid];
m17_56 -> m17_49  [key=2, style=dotted];
m17_57 -> m17_58  [key=0, style=solid];
m17_57 -> m17_27  [key=2, style=dotted];
m17_58 -> m17_50  [color=blue, key=0, style=bold];
m17_78 -> m17_79  [key=0, style=solid];
m17_79 -> m17_80  [key=0, style=solid];
m17_79 -> m17_48  [key=2, style=dotted];
m17_80 -> m17_81  [key=0, style=solid];
m17_80 -> m17_23  [key=2, style=dotted];
m17_81 -> m17_82  [key=0, style=solid];
m17_81 -> m17_31  [key=2, style=dotted];
m17_82 -> m17_83  [key=0, style=solid];
m17_82 -> m17_69  [key=2, style=dotted];
m17_83 -> m17_84  [key=0, style=solid];
m17_83 -> m17_49  [key=2, style=dotted];
m17_84 -> m17_85  [key=0, style=solid];
m17_84 -> m17_27  [key=2, style=dotted];
m17_85 -> m17_78  [color=blue, key=0, style=bold];
m17_86 -> m17_87  [key=0, style=solid];
m17_87 -> m17_88  [key=0, style=solid];
m17_87 -> m17_48  [key=2, style=dotted];
m17_88 -> m17_89  [key=0, style=solid];
m17_88 -> m17_23  [key=2, style=dotted];
m17_89 -> m17_90  [key=0, style=solid];
m17_89 -> m17_31  [key=2, style=dotted];
m17_90 -> m17_91  [key=0, style=solid];
m17_90 -> m17_69  [key=2, style=dotted];
m17_91 -> m17_92  [key=0, style=solid];
m17_91 -> m17_95  [key=2, style=dotted];
m17_92 -> m17_93  [key=0, style=solid];
m17_92 -> m17_49  [key=2, style=dotted];
m17_93 -> m17_94  [key=0, style=solid];
m17_93 -> m17_27  [key=2, style=dotted];
m17_94 -> m17_86  [color=blue, key=0, style=bold];
m17_96 -> m17_97  [key=0, style=solid];
m17_97 -> m17_98  [key=0, style=solid];
m17_97 -> m17_48  [key=2, style=dotted];
m17_98 -> m17_99  [key=0, style=solid];
m17_98 -> m17_23  [key=2, style=dotted];
m17_99 -> m17_100  [key=0, style=solid];
m17_99 -> m17_31  [key=2, style=dotted];
m17_100 -> m17_101  [key=0, style=solid];
m17_100 -> m17_69  [key=2, style=dotted];
m17_101 -> m17_102  [key=0, style=solid];
m17_101 -> m17_95  [key=2, style=dotted];
m17_102 -> m17_103  [key=0, style=solid];
m17_102 -> m17_49  [key=2, style=dotted];
m17_103 -> m17_104  [key=0, style=solid];
m17_103 -> m17_27  [key=2, style=dotted];
m17_104 -> m17_96  [color=blue, key=0, style=bold];
m17_10 -> m17_11  [color=green, key=0, style=solid];
m17_10 -> m17_12  [color=green, key=2, style=dotted];
m17_10 -> m17_13  [color=green, key=2, style=dotted];
m17_10 -> m17_14  [color=green, key=2, style=dotted];
m17_61 -> m17_62  [key=0, style=solid];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_48  [key=2, style=dotted];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_23  [key=2, style=dotted];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_31  [key=2, style=dotted];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_69  [key=2, style=dotted];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_49  [key=2, style=dotted];
m17_67 -> m17_68  [key=0, style=solid];
m17_67 -> m17_27  [key=2, style=dotted];
m17_68 -> m17_61  [color=blue, key=0, style=bold];
m17_41 -> m17_42  [key=0, style=solid];
m17_42 -> m17_43  [key=0, style=solid];
m17_42 -> m17_48  [key=2, style=dotted];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_23  [key=2, style=dotted];
m17_44 -> m17_45  [key=0, style=solid];
m17_44 -> m17_31  [key=2, style=dotted];
m17_45 -> m17_46  [key=0, style=solid];
m17_45 -> m17_49  [key=2, style=dotted];
m17_46 -> m17_47  [key=0, style=solid];
m17_46 -> m17_27  [key=2, style=dotted];
m17_47 -> m17_41  [color=blue, key=0, style=bold];
m17_70 -> m17_71  [key=0, style=solid];
m17_71 -> m17_72  [key=0, style=solid];
m17_71 -> m17_48  [key=2, style=dotted];
m17_72 -> m17_73  [key=0, style=solid];
m17_72 -> m17_23  [key=2, style=dotted];
m17_73 -> m17_74  [key=0, style=solid];
m17_73 -> m17_31  [key=2, style=dotted];
m17_74 -> m17_75  [key=0, style=solid];
m17_74 -> m17_69  [key=2, style=dotted];
m17_75 -> m17_76  [key=0, style=solid];
m17_75 -> m17_49  [key=2, style=dotted];
m17_76 -> m17_77  [key=0, style=solid];
m17_76 -> m17_27  [key=2, style=dotted];
m17_77 -> m17_70  [color=blue, key=0, style=bold];
m17_23 -> m17_24  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_26  [key=2, style=dotted];
m17_25 -> m17_23  [color=blue, key=0, style=bold];
m17_38 -> m17_39  [key=0, style=solid];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_19  [key=2, style=dotted];
m17_40 -> m17_38  [color=blue, key=0, style=bold];
m17_114 -> m17_115  [key=0, style=solid];
m17_115 -> m17_116  [key=0, style=solid];
m17_115 -> m17_4  [key=2, style=dotted];
m17_116 -> m17_114  [color=blue, key=0, style=bold];
m17_36 -> m17_37  [key=0, style=solid];
m17_37 -> m17_36  [color=blue, key=0, style=bold];
m17_120 -> m17_1  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_39  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_43  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_44  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_46  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_52  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_53  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_57  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_63  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_64  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_67  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_72  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_73  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_76  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_80  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_81  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_84  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_88  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_89  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_93  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_98  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_99  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_103  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_107  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_108  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m17_120 -> m17_112  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_0 -> m19_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m19_0 -> m19_7  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m19_0 -> m19_9  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m19_0 -> m19_10  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m19_0 -> m19_11  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m19_0 -> m19_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m19_0 -> m19_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_9  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_16  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_12 -> m19_13  [key=0, style=solid];
m19_13 -> m19_14  [key=0, style=solid];
m19_2 -> m19_14  [key=0, style=solid];
m19_2 -> m19_15  [key=2, style=dotted];
m19_4 -> m19_14  [key=0, style=solid];
m19_4 -> m19_15  [key=2, style=dotted];
m19_6 -> m19_14  [key=0, style=solid];
m19_6 -> m19_15  [key=2, style=dotted];
m19_8 -> m19_14  [key=0, style=solid];
m19_8 -> m19_15  [key=2, style=dotted];
m19_14 -> m19_0  [color=blue, key=0, style=bold];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_28  [key=0, style=solid];
m19_26 -> m19_22  [key=2, style=dotted];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_30  [key=2, style=dotted];
m19_28 -> m19_31  [key=2, style=dotted];
m19_27 -> m19_29  [key=0, style=solid];
m19_27 -> m19_15  [key=2, style=dotted];
m19_29 -> m19_25  [color=blue, key=0, style=bold];
m19_32 -> m19_33  [key=0, style=solid];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_36  [key=2, style=dotted];
m19_33 -> m19_37  [key=2, style=dotted];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_38  [key=2, style=dotted];
m19_35 -> m19_32  [color=blue, key=0, style=bold];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_20  [key=0, style=solid];
m19_18 -> m19_22  [key=2, style=dotted];
m19_20 -> m19_21  [key=0, style=solid];
m19_20 -> m19_23  [key=2, style=dotted];
m19_20 -> m19_24  [key=2, style=dotted];
m19_19 -> m19_21  [key=0, style=solid];
m19_19 -> m19_15  [key=2, style=dotted];
m19_21 -> m19_17  [color=blue, key=0, style=bold];
m19_39 -> m19_9  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m19_39 -> m19_10  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m19_39 -> m19_11  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m19_39 -> m19_12  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m19_39 -> m19_13  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m19_39 -> m19_20  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m19_39 -> m19_28  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m19_39 -> m19_33  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m19_39 -> m19_34  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m20_28 -> m20_29  [key=0, style=solid];
m20_29 -> m20_30  [key=0, style=solid];
m20_29 -> m20_14  [key=2, style=dotted];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_21  [key=2, style=dotted];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_22  [key=2, style=dotted];
m20_31 -> m20_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_32 -> m20_28  [color=blue, key=0, style=bold];
m20_47 -> m20_48  [key=0, style=solid];
m20_48 -> m20_49  [key=0, style=solid];
m20_48 -> m20_14  [key=2, style=dotted];
m20_49 -> m20_50  [key=0, style=solid];
m20_49 -> m20_42  [key=2, style=dotted];
m20_50 -> m20_51  [key=0, style=solid];
m20_50 -> m20_22  [key=2, style=dotted];
m20_50 -> m20_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_51 -> m20_47  [color=blue, key=0, style=bold];
m20_52 -> m20_53  [key=0, style=solid];
m20_23 -> m20_24  [key=0, style=solid];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_26  [key=2, style=dotted];
m20_24 -> m20_27  [key=2, style=dotted];
m20_25 -> m20_23  [color=blue, key=0, style=bold];
m20_33 -> m20_34  [key=0, style=solid];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_36  [key=2, style=dotted];
m20_35 -> m20_33  [color=blue, key=0, style=bold];
m20_43 -> m20_44  [key=0, style=solid];
m20_44 -> m20_45  [key=0, style=solid];
m20_44 -> m20_46  [key=2, style=dotted];
m20_45 -> m20_43  [color=blue, key=0, style=bold];
m20_53 -> m20_54  [key=0, style=solid];
m20_53 -> m20_55  [key=2, style=dotted];
m20_54 -> m20_52  [color=blue, key=0, style=bold];
m20_10 -> m20_11  [key=0, style=solid];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_14  [key=2, style=dotted];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> n11  [key=2, style=dotted];
m20_13 -> m20_10  [color=blue, key=0, style=bold];
m20_56 -> m20_57  [key=0, style=solid];
m20_57 -> m20_56  [color=blue, key=0, style=bold];
m20_16 -> m20_17  [key=0, style=solid];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> m20_14  [key=2, style=dotted];
m20_18 -> m20_19  [key=0, style=solid];
m20_18 -> m20_21  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_22  [key=2, style=dotted];
m20_19 -> m20_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_20 -> m20_16  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_6  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_7  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_8  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_9  [key=2, style=dotted];
m20_5 -> m20_0  [color=blue, key=0, style=bold];
m20_37 -> m20_38  [key=0, style=solid];
m20_38 -> m20_39  [key=0, style=solid];
m20_38 -> m20_14  [key=2, style=dotted];
m20_39 -> m20_40  [key=0, style=solid];
m20_39 -> m20_42  [key=2, style=dotted];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_22  [key=2, style=dotted];
m20_40 -> m20_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_41 -> m20_37  [color=blue, key=0, style=bold];
m20_58 -> m20_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m20_58 -> m20_18  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m20_58 -> m20_19  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m20_58 -> m20_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m20_58 -> m20_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m20_58 -> m20_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m20_58 -> m20_40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m20_58 -> m20_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m20_58 -> m20_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m21_77 -> m21_78  [key=0, style=solid];
m21_78 -> m21_39  [key=2, style=dotted];
m21_78 -> m21_79  [key=0, style=solid];
m21_78 -> m21_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_79 -> m21_80  [key=0, style=solid];
m21_79 -> m21_65  [key=2, style=dotted];
m21_80 -> m21_77  [color=blue, key=0, style=bold];
m21_108 -> m21_109  [color=green, key=0, style=solid];
m21_109 -> m21_110  [color=green, key=0, style=solid];
m21_109 -> m21_115  [color=green, key=2, style=dotted];
m21_109 -> m21_24  [color=green, key=2, style=dotted];
m21_110 -> m21_111  [key=0, style=solid];
m21_110 -> m21_91  [key=2, style=dotted];
m21_111 -> m21_112  [key=0, style=solid];
m21_111 -> m21_92  [key=2, style=dotted];
m21_112 -> m21_93  [key=2, style=dotted];
m21_112 -> m21_113  [key=0, style=solid];
m21_112 -> m21_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_113 -> m21_93  [key=2, style=dotted];
m21_113 -> m21_114  [key=0, style=solid];
m21_113 -> m21_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_114 -> m21_108  [color=blue, key=0, style=bold];
m21_143 -> m21_144  [key=0, style=solid];
m21_147 -> m21_148  [color=green, key=0, style=solid];
m21_147 -> m21_21  [color=green, key=2, style=dotted];
m21_147 -> m21_150  [color=green, key=1, label="lambda expression", style=dashed];
m21_146 -> m21_147  [color=green, key=0, style=solid];
m21_146 -> m21_92  [key=2, style=dotted];
m21_144 -> m21_145  [key=0, style=solid];
m21_144 -> m21_149  [key=2, style=dotted];
m21_145 -> m21_146  [key=0, style=solid];
m21_145 -> m21_91  [key=2, style=dotted];
m21_148 -> m21_143  [color=blue, key=0, style=bold];
m21_156 -> m21_157  [key=0, style=solid];
m21_157 -> m21_21  [key=2, style=dotted];
m21_157 -> m21_158  [key=0, style=solid];
m21_157 -> m21_19  [key=2, style=dotted];
m21_157 -> m21_22  [key=2, style=dotted];
m21_157 -> m21_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_158 -> m21_159  [key=0, style=solid];
m21_158 -> m21_91  [key=2, style=dotted];
m21_158 -> m21_160  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m21_158 -> m21_168  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m21_160 -> m21_39  [key=2, style=dotted];
m21_160 -> m21_161  [key=0, style=solid];
m21_160 -> m21_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_159 -> m21_160  [key=0, style=solid];
m21_159 -> m21_162  [key=2, style=dotted];
m21_159 -> m21_163  [key=2, style=dotted];
m21_159 -> m21_168  [color=darkseagreen4, key=1, label=cts, style=dashed];
m21_161 -> m21_156  [color=blue, key=0, style=bold];
m21_61 -> m21_62  [key=0, style=solid];
m21_62 -> m21_39  [key=2, style=dotted];
m21_62 -> m21_63  [key=0, style=solid];
m21_62 -> m21_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_63 -> m21_64  [key=0, style=solid];
m21_63 -> m21_65  [key=2, style=dotted];
m21_64 -> m21_61  [color=blue, key=0, style=bold];
m21_167 -> m21_168  [key=0, style=solid];
m21_44 -> m21_45  [key=0, style=solid];
m21_101 -> m21_102  [color=green, key=0, style=solid];
m21_102 -> m21_103  [color=green, key=0, style=solid];
m21_102 -> m21_59  [color=green, key=2, style=dotted];
m21_102 -> m21_39  [color=green, key=2, style=dotted];
m21_102 -> m21_104  [color=green, key=2, style=dotted];
m21_102 -> m21_105  [color=green, key=1, label="lambda expression", style=dashed];
m21_103 -> m21_101  [color=blue, key=0, style=bold];
m21_105 -> m21_106  [color=green, key=0, style=solid];
m21_106 -> m21_107  [color=green, key=0, style=solid];
m21_106 -> m21_24  [color=green, key=2, style=dotted];
m21_107 -> m21_105  [color=blue, key=0, style=bold];
m21_150 -> m21_151  [color=green, key=0, style=solid];
m21_151 -> m21_152  [color=green, key=0, style=solid];
m21_151 -> m21_59  [color=green, key=2, style=dotted];
m21_151 -> m21_39  [color=green, key=2, style=dotted];
m21_151 -> m21_104  [color=green, key=2, style=dotted];
m21_151 -> m21_153  [color=green, key=1, label="lambda expression", style=dashed];
m21_152 -> m21_150  [color=blue, key=0, style=bold];
m21_153 -> m21_154  [color=green, key=0, style=solid];
m21_154 -> m21_155  [color=green, key=0, style=solid];
m21_154 -> m21_24  [color=green, key=2, style=dotted];
m21_155 -> m21_153  [color=blue, key=0, style=bold];
m21_34 -> m21_35  [key=0, style=solid];
m21_42 -> m21_43  [key=0, style=solid];
m21_67 -> m21_68  [key=0, style=solid];
m21_67 -> m21_69  [key=2, style=dotted];
m21_75 -> m21_76  [key=0, style=solid];
m21_75 -> m21_69  [key=2, style=dotted];
m21_82 -> m21_83  [key=0, style=solid];
m21_82 -> m21_69  [key=2, style=dotted];
m21_141 -> m21_142  [key=0, style=solid];
m21_141 -> m21_92  [key=2, style=dotted];
m21_177 -> m21_178  [key=0, style=solid];
m21_177 -> m21_92  [key=2, style=dotted];
m21_36 -> m21_37  [key=0, style=solid];
m21_41 -> m21_42  [key=0, style=solid];
m21_46 -> m21_44  [color=blue, key=0, style=bold];
m21_45 -> m21_46  [key=0, style=solid];
m21_45 -> m21_47  [key=2, style=dotted];
m21_98 -> m21_99  [key=0, style=solid];
m21_57 -> m21_59  [key=2, style=dotted];
m21_57 -> m21_58  [key=0, style=solid];
m21_57 -> m21_60  [key=2, style=dotted];
m21_37 -> m21_39  [key=2, style=dotted];
m21_37 -> m21_38  [key=0, style=solid];
m21_37 -> m21_40  [key=2, style=dotted];
m21_95 -> m21_39  [key=2, style=dotted];
m21_95 -> m21_96  [key=0, style=solid];
m21_95 -> m21_97  [key=2, style=dotted];
m21_99 -> m21_39  [key=2, style=dotted];
m21_99 -> m21_100  [key=0, style=solid];
m21_99 -> m21_97  [key=2, style=dotted];
m21_117 -> m21_39  [key=2, style=dotted];
m21_117 -> m21_118  [key=0, style=solid];
m21_117 -> m21_97  [key=2, style=dotted];
m21_120 -> m21_39  [key=2, style=dotted];
m21_120 -> m21_104  [key=2, style=dotted];
m21_120 -> m21_121  [key=0, style=solid];
m21_129 -> m21_39  [key=2, style=dotted];
m21_129 -> m21_130  [key=0, style=solid];
m21_129 -> m21_97  [key=2, style=dotted];
m21_138 -> m21_39  [key=2, style=dotted];
m21_138 -> m21_139  [key=0, style=solid];
m21_138 -> m21_55  [key=2, style=dotted];
m21_30 -> m21_31  [key=0, style=solid];
m21_33 -> m21_34  [key=0, style=solid];
m21_35 -> m21_33  [color=blue, key=0, style=bold];
m21_43 -> m21_41  [color=blue, key=0, style=bold];
m21_48 -> m21_49  [key=0, style=solid];
m21_52 -> m21_53  [key=0, style=solid];
m21_56 -> m21_57  [key=0, style=solid];
m21_66 -> m21_67  [key=0, style=solid];
m21_68 -> m21_66  [color=blue, key=0, style=bold];
m21_74 -> m21_75  [key=0, style=solid];
m21_76 -> m21_74  [color=blue, key=0, style=bold];
m21_81 -> m21_82  [key=0, style=solid];
m21_83 -> m21_81  [color=blue, key=0, style=bold];
m21_94 -> m21_95  [key=0, style=solid];
m21_116 -> m21_117  [key=0, style=solid];
m21_119 -> m21_120  [key=0, style=solid];
m21_128 -> m21_129  [key=0, style=solid];
m21_137 -> m21_138  [key=0, style=solid];
m21_140 -> m21_141  [key=0, style=solid];
m21_142 -> m21_140  [color=blue, key=0, style=bold];
m21_164 -> m21_165  [key=0, style=solid];
m21_168 -> m21_92  [key=2, style=dotted];
m21_168 -> m21_169  [key=0, style=solid];
m21_176 -> m21_177  [key=0, style=solid];
m21_178 -> m21_176  [color=blue, key=0, style=bold];
m21_38 -> m21_36  [color=blue, key=0, style=bold];
m21_100 -> m21_98  [color=blue, key=0, style=bold];
m21_58 -> m21_56  [color=blue, key=0, style=bold];
m21_96 -> m21_94  [color=blue, key=0, style=bold];
m21_118 -> m21_116  [color=blue, key=0, style=bold];
m21_121 -> m21_119  [color=blue, key=0, style=bold];
m21_130 -> m21_128  [color=blue, key=0, style=bold];
m21_139 -> m21_137  [color=blue, key=0, style=bold];
m21_32 -> m21_30  [color=blue, key=0, style=bold];
m21_31 -> m21_32  [key=0, style=solid];
m21_50 -> m21_48  [color=blue, key=0, style=bold];
m21_49 -> m21_50  [key=0, style=solid];
m21_49 -> m21_51  [key=2, style=dotted];
m21_54 -> m21_52  [color=blue, key=0, style=bold];
m21_53 -> m21_55  [key=2, style=dotted];
m21_53 -> m21_54  [key=0, style=solid];
m21_166 -> m21_164  [color=blue, key=0, style=bold];
m21_165 -> m21_166  [key=0, style=solid];
m21_169 -> m21_167  [color=blue, key=0, style=bold];
m21_131 -> m21_132  [key=0, style=solid];
m21_132 -> m21_21  [key=2, style=dotted];
m21_132 -> m21_133  [key=0, style=solid];
m21_132 -> m21_29  [key=2, style=dotted];
m21_132 -> m21_22  [key=2, style=dotted];
m21_132 -> m21_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_133 -> m21_134  [key=0, style=solid];
m21_133 -> m21_91  [key=2, style=dotted];
m21_133 -> m21_141  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m21_134 -> m21_135  [key=0, style=solid];
m21_134 -> m21_136  [key=2, style=dotted];
m21_134 -> m21_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_135 -> m21_131  [color=blue, key=0, style=bold];
m21_70 -> m21_71  [key=0, style=solid];
m21_71 -> m21_39  [key=2, style=dotted];
m21_71 -> m21_72  [key=0, style=solid];
m21_71 -> m21_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_72 -> m21_73  [key=0, style=solid];
m21_72 -> m21_65  [key=2, style=dotted];
m21_73 -> m21_70  [color=blue, key=0, style=bold];
m21_170 -> m21_171  [key=0, style=solid];
m21_171 -> m21_27  [key=2, style=dotted];
m21_171 -> m21_172  [key=0, style=solid];
m21_171 -> m21_175  [key=2, style=dotted];
m21_172 -> m21_173  [key=0, style=solid];
m21_172 -> m21_91  [key=2, style=dotted];
m21_172 -> m21_177  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m21_173 -> m21_174  [key=0, style=solid];
m21_173 -> m21_136  [key=2, style=dotted];
m21_173 -> m21_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_174 -> m21_170  [color=blue, key=0, style=bold];
m21_84 -> m21_85  [key=0, style=solid];
m21_89 -> m21_90  [color=green, key=0, style=solid];
m21_89 -> m21_93  [color=green, key=2, style=dotted];
m21_89 -> m21_101  [color=green, key=1, label="lambda expression", style=dashed];
m21_88 -> m21_89  [color=green, key=0, style=solid];
m21_88 -> m21_93  [key=2, style=dotted];
m21_88 -> m21_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_85 -> m21_21  [key=2, style=dotted];
m21_85 -> m21_86  [key=0, style=solid];
m21_85 -> m21_22  [key=2, style=dotted];
m21_85 -> m21_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_86 -> m21_87  [key=0, style=solid];
m21_86 -> m21_91  [key=2, style=dotted];
m21_87 -> m21_88  [key=0, style=solid];
m21_87 -> m21_92  [key=2, style=dotted];
m21_90 -> m21_84  [color=blue, key=0, style=bold];
m21_122 -> m21_123  [color=green, key=0, style=solid];
m21_123 -> m21_124  [color=green, key=0, style=solid];
m21_123 -> m21_115  [color=green, key=2, style=dotted];
m21_123 -> m21_24  [color=green, key=2, style=dotted];
m21_124 -> m21_125  [key=0, style=solid];
m21_124 -> m21_91  [key=2, style=dotted];
m21_125 -> m21_126  [key=0, style=solid];
m21_125 -> m21_92  [key=2, style=dotted];
m21_126 -> m21_93  [key=2, style=dotted];
m21_126 -> m21_127  [key=0, style=solid];
m21_126 -> m21_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_127 -> m21_122  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_9 -> m21_10  [color=green, key=0, style=solid];
m21_9 -> m21_23  [color=green, key=2, style=dotted];
m21_9 -> m21_24  [color=green, key=2, style=dotted];
m21_9 -> m21_25  [color=green, key=2, style=dotted];
m21_9 -> m21_26  [color=green, key=2, style=dotted];
m21_9 -> m21_27  [color=green, key=2, style=dotted];
m21_9 -> m21_44  [color=green, key=1, label="lambda expression", style=dashed];
m21_8 -> m21_9  [color=green, key=0, style=solid];
m21_8 -> m21_21  [key=2, style=dotted];
m21_8 -> m21_22  [key=2, style=dotted];
m21_8 -> m21_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_8 -> m21_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_10 -> m21_11  [key=0, style=solid];
m21_10 -> m21_28  [key=2, style=dotted];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_15  [key=2, style=dotted];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> n4  [key=2, style=dotted];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_17  [key=2, style=dotted];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_18  [key=2, style=dotted];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_19  [key=2, style=dotted];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_20  [key=2, style=dotted];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_21  [key=2, style=dotted];
m21_7 -> m21_22  [key=2, style=dotted];
m21_7 -> m21_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_7 -> m21_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_11 -> m21_21  [key=2, style=dotted];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_22  [key=2, style=dotted];
m21_11 -> m21_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_12 -> m21_21  [key=2, style=dotted];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_29  [key=2, style=dotted];
m21_12 -> m21_22  [key=2, style=dotted];
m21_12 -> m21_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_13 -> m21_21  [key=2, style=dotted];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_22  [key=2, style=dotted];
m21_13 -> m21_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_14 -> m21_0  [color=blue, key=0, style=bold];
m21_91 -> m21_179  [key=0, style=solid];
m21_179 -> m21_180  [key=0, style=solid];
m21_179 -> m21_69  [key=2, style=dotted];
m21_180 -> m21_91  [color=blue, key=0, style=bold];
m21_181 -> m21_9  [color=green, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_89  [color=green, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_102  [color=green, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_106  [color=green, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_109  [color=green, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_123  [color=green, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_147  [color=green, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_151  [color=green, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_154  [color=green, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_10  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_11  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_12  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_71  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_82  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_85  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_86  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_88  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_110  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_111  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_113  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_124  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_125  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_126  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_133  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_134  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_144  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_145  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_146  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_171  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_177  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_181 -> m21_179  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m21_182 -> m21_141  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m21_185 -> m21_177  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m21_183 -> m21_168  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m21_184 -> m21_168  [color=darkseagreen4, key=1, label=cts, style=dashed];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_25  [key=2, style=dotted];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_26  [key=2, style=dotted];
m22_2 -> m22_5  [color=darkseagreen4, key=1, label=connection, style=dashed];
m22_2 -> m22_18  [color=darkseagreen4, key=1, label=connection, style=dashed];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_27  [key=2, style=dotted];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_28  [key=2, style=dotted];
m22_5 -> m22_29  [key=2, style=dotted];
m22_5 -> m22_9  [color=darkseagreen4, key=1, label=hash, style=dashed];
m22_5 -> m22_10  [color=darkseagreen4, key=1, label=hash, style=dashed];
m22_5 -> m22_14  [color=darkseagreen4, key=1, label=hash, style=dashed];
m22_5 -> m22_15  [color=red, key=1, label=hash, style=dashed];
m22_5 -> m22_16  [color=darkseagreen4, key=1, label=hash, style=dashed];
m22_5 -> m22_17  [color=darkseagreen4, key=1, label=hash, style=dashed];
m22_5 -> m22_21  [color=darkseagreen4, key=1, label=hash, style=dashed];
m22_5 -> m22_22  [color=red, key=1, label=hash, style=dashed];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_36  [key=2, style=dotted];
m22_18 -> m22_20  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_24  [key=0, style=solid];
m22_4 -> m22_7  [color=darkseagreen4, key=1, label=id, style=dashed];
m22_4 -> m22_8  [color=darkseagreen4, key=1, label=id, style=dashed];
m22_7 -> m22_4  [key=0, style=solid];
m22_7 -> m22_30  [key=2, style=dotted];
m22_7 -> m22_31  [key=2, style=dotted];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_30  [key=2, style=dotted];
m22_8 -> m22_11  [color=darkseagreen4, key=1, label=dto, style=dashed];
m22_8 -> m22_13  [color=darkseagreen4, key=1, label=dto, style=dashed];
m22_8 -> m22_15  [color=red, key=1, label=dto, style=dashed];
m22_8 -> m22_17  [color=darkseagreen4, key=1, label=dto, style=dashed];
m22_8 -> m22_18  [color=darkseagreen4, key=1, label=dto, style=dashed];
m22_8 -> m22_20  [color=darkseagreen4, key=1, label=dto, style=dashed];
m22_8 -> m22_22  [color=red, key=1, label=dto, style=dashed];
m22_8 -> m22_23  [color=darkseagreen4, key=1, label=dto, style=dashed];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_8  [key=0, style=solid];
m22_9 -> m22_10  [key=0, style=solid];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_32  [key=2, style=dotted];
m22_14 -> m22_15  [color=red, key=0, style=solid];
m22_14 -> m22_16  [key=0, style=solid];
m22_14 -> m22_34  [key=2, style=dotted];
m22_15 -> m22_16  [color=red, key=0, style=solid];
m22_15 -> m22_35  [color=red, key=2, style=dotted];
m22_16 -> m22_17  [key=0, style=solid];
m22_16 -> m22_21  [key=0, style=solid];
m22_16 -> m22_34  [key=2, style=dotted];
m22_17 -> m22_18  [key=0, style=solid];
m22_21 -> m22_22  [color=red, key=0, style=solid];
m22_21 -> m22_23  [key=0, style=solid];
m22_21 -> m22_34  [key=2, style=dotted];
m22_22 -> m22_23  [color=red, key=0, style=solid];
m22_22 -> m22_35  [color=red, key=2, style=dotted];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_14  [key=0, style=solid];
m22_11 -> m22_33  [key=2, style=dotted];
m22_13 -> m22_14  [key=0, style=solid];
m22_20 -> m22_21  [key=0, style=solid];
m22_23 -> m22_4  [key=0, style=solid];
m22_23 -> m22_31  [key=2, style=dotted];
m22_12 -> m22_13  [key=0, style=solid];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_21  [key=0, style=solid];
m22_24 -> m22_0  [color=blue, key=0, style=bold];
m22_37 -> m22_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m22_37 -> m22_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m22_37 -> m22_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m23_86 -> m23_87  [key=0, style=solid];
m23_87 -> m23_88  [key=0, style=solid];
m23_87 -> m23_42  [key=2, style=dotted];
m23_87 -> m23_11  [key=2, style=dotted];
m23_87 -> m23_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_88 -> m23_89  [key=0, style=solid];
m23_88 -> m23_21  [key=2, style=dotted];
m23_88 -> m23_96  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m23_89 -> m23_90  [key=0, style=solid];
m23_89 -> m23_11  [key=2, style=dotted];
m23_89 -> m23_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_90 -> m23_91  [key=0, style=solid];
m23_90 -> m23_29  [key=2, style=dotted];
m23_90 -> m23_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_91 -> m23_86  [color=blue, key=0, style=bold];
m23_7 -> m23_8  [key=0, style=solid];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_11  [key=2, style=dotted];
m23_8 -> m23_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> n11  [key=2, style=dotted];
m23_10 -> m23_7  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_5  [key=2, style=dotted];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_6  [key=2, style=dotted];
m23_4 -> m23_0  [color=blue, key=0, style=bold];
m23_23 -> m23_24  [key=0, style=solid];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_21  [key=2, style=dotted];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_28  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_29  [key=2, style=dotted];
m23_26 -> m23_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_27 -> m23_23  [color=blue, key=0, style=bold];
m23_53 -> m23_54  [key=0, style=solid];
m23_54 -> m23_55  [key=0, style=solid];
m23_54 -> m23_42  [key=2, style=dotted];
m23_54 -> m23_11  [key=2, style=dotted];
m23_54 -> m23_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_55 -> m23_56  [key=0, style=solid];
m23_56 -> m23_57  [key=0, style=solid];
m23_56 -> m23_21  [key=2, style=dotted];
m23_56 -> m23_64  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_11  [key=2, style=dotted];
m23_57 -> m23_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_58 -> m23_59  [key=0, style=solid];
m23_58 -> m23_29  [key=2, style=dotted];
m23_58 -> m23_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_59 -> m23_53  [color=blue, key=0, style=bold];
m23_104 -> m23_105  [key=0, style=solid];
m23_13 -> m23_14  [key=0, style=solid];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_16  [key=2, style=dotted];
m23_15 -> m23_13  [color=blue, key=0, style=bold];
m23_30 -> m23_31  [key=0, style=solid];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_11  [key=2, style=dotted];
m23_31 -> m23_28  [key=2, style=dotted];
m23_31 -> m23_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_32 -> m23_30  [color=blue, key=0, style=bold];
m23_33 -> m23_34  [key=0, style=solid];
m23_34 -> m23_35  [key=0, style=solid];
m23_35 -> m23_33  [color=blue, key=0, style=bold];
m23_44 -> m23_45  [key=0, style=solid];
m23_48 -> m23_49  [key=0, style=solid];
m23_48 -> m23_28  [key=2, style=dotted];
m23_47 -> m23_48  [key=0, style=solid];
m23_50 -> m23_51  [key=0, style=solid];
m23_45 -> m23_46  [key=0, style=solid];
m23_45 -> m23_11  [key=2, style=dotted];
m23_45 -> m23_28  [key=2, style=dotted];
m23_46 -> m23_44  [color=blue, key=0, style=bold];
m23_49 -> m23_47  [color=blue, key=0, style=bold];
m23_51 -> m23_52  [key=0, style=solid];
m23_51 -> m23_11  [key=2, style=dotted];
m23_51 -> m23_28  [key=2, style=dotted];
m23_52 -> m23_50  [color=blue, key=0, style=bold];
m23_60 -> m23_61  [key=0, style=solid];
m23_64 -> m23_65  [key=0, style=solid];
m23_64 -> m23_28  [key=2, style=dotted];
m23_63 -> m23_64  [key=0, style=solid];
m23_66 -> m23_67  [key=0, style=solid];
m23_61 -> m23_62  [key=0, style=solid];
m23_61 -> m23_11  [key=2, style=dotted];
m23_61 -> m23_28  [key=2, style=dotted];
m23_62 -> m23_60  [color=blue, key=0, style=bold];
m23_65 -> m23_63  [color=blue, key=0, style=bold];
m23_67 -> m23_68  [key=0, style=solid];
m23_67 -> m23_11  [key=2, style=dotted];
m23_67 -> m23_28  [key=2, style=dotted];
m23_68 -> m23_66  [color=blue, key=0, style=bold];
m23_81 -> m23_82  [key=0, style=solid];
m23_81 -> m23_28  [key=2, style=dotted];
m23_77 -> m23_78  [key=0, style=solid];
m23_80 -> m23_81  [key=0, style=solid];
m23_83 -> m23_84  [key=0, style=solid];
m23_78 -> m23_79  [key=0, style=solid];
m23_78 -> m23_11  [key=2, style=dotted];
m23_78 -> m23_28  [key=2, style=dotted];
m23_79 -> m23_77  [color=blue, key=0, style=bold];
m23_82 -> m23_80  [color=blue, key=0, style=bold];
m23_84 -> m23_85  [key=0, style=solid];
m23_84 -> m23_11  [key=2, style=dotted];
m23_84 -> m23_28  [key=2, style=dotted];
m23_85 -> m23_83  [color=blue, key=0, style=bold];
m23_92 -> m23_93  [key=0, style=solid];
m23_96 -> m23_97  [key=0, style=solid];
m23_96 -> m23_28  [key=2, style=dotted];
m23_95 -> m23_96  [key=0, style=solid];
m23_98 -> m23_99  [key=0, style=solid];
m23_93 -> m23_94  [key=0, style=solid];
m23_93 -> m23_11  [key=2, style=dotted];
m23_93 -> m23_28  [key=2, style=dotted];
m23_94 -> m23_92  [color=blue, key=0, style=bold];
m23_97 -> m23_95  [color=blue, key=0, style=bold];
m23_99 -> m23_100  [key=0, style=solid];
m23_99 -> m23_11  [key=2, style=dotted];
m23_99 -> m23_28  [key=2, style=dotted];
m23_100 -> m23_98  [color=blue, key=0, style=bold];
m23_105 -> m23_106  [key=0, style=solid];
m23_106 -> m23_104  [color=blue, key=0, style=bold];
m23_36 -> m23_37  [key=0, style=solid];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_42  [key=2, style=dotted];
m23_37 -> m23_11  [key=2, style=dotted];
m23_37 -> m23_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_21  [key=2, style=dotted];
m23_38 -> m23_48  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_11  [key=2, style=dotted];
m23_39 -> m23_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_40 -> m23_41  [key=0, style=solid];
m23_40 -> m23_43  [key=2, style=dotted];
m23_40 -> m23_29  [key=2, style=dotted];
m23_40 -> m23_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_41 -> m23_36  [color=blue, key=0, style=bold];
m23_69 -> m23_70  [key=0, style=solid];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_21  [key=2, style=dotted];
m23_70 -> m23_73  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m23_70 -> m23_81  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m23_71 -> m23_72  [key=0, style=solid];
m23_71 -> m23_42  [key=2, style=dotted];
m23_71 -> m23_11  [key=2, style=dotted];
m23_71 -> m23_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_73 -> m23_74  [key=0, style=solid];
m23_73 -> m23_11  [key=2, style=dotted];
m23_73 -> m23_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_72 -> m23_73  [key=0, style=solid];
m23_72 -> m23_76  [key=2, style=dotted];
m23_74 -> m23_75  [key=0, style=solid];
m23_74 -> m23_29  [key=2, style=dotted];
m23_74 -> m23_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_75 -> m23_69  [color=blue, key=0, style=bold];
m23_17 -> m23_18  [key=0, style=solid];
m23_18 -> m23_19  [key=0, style=solid];
m23_18 -> m23_21  [key=2, style=dotted];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_22  [key=2, style=dotted];
m23_20 -> m23_17  [color=blue, key=0, style=bold];
m23_21 -> m23_101  [key=0, style=solid];
m23_101 -> m23_102  [key=0, style=solid];
m23_101 -> m23_103  [key=2, style=dotted];
m23_102 -> m23_21  [color=blue, key=0, style=bold];
m23_107 -> m23_108  [key=0, style=solid];
m23_108 -> m23_109  [key=0, style=solid];
m23_108 -> m23_111  [key=2, style=dotted];
m23_108 -> m23_108  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m23_109 -> m23_110  [key=0, style=solid];
m23_109 -> m23_112  [key=2, style=dotted];
m23_109 -> m23_109  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m23_110 -> m23_107  [color=blue, key=0, style=bold];
m23_113 -> m23_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_18  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_48  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_113 -> m23_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m23_114 -> m23_48  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m23_115 -> m23_64  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m23_116 -> m23_81  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m23_117 -> m23_96  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m24_6 -> m24_7  [key=0, style=solid];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_4  [key=2, style=dotted];
m24_7 -> m24_9  [color=darkseagreen4, key=1, label=state, style=dashed];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_11  [key=2, style=dotted];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_12  [key=2, style=dotted];
m24_9 -> n11  [key=2, style=dotted];
m24_10 -> m24_6  [color=blue, key=0, style=bold];
m24_13 -> m24_14  [key=0, style=solid];
m24_14 -> m24_15  [key=0, style=solid];
m24_14 -> m24_4  [key=2, style=dotted];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_17  [key=2, style=dotted];
m24_16 -> m24_13  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_4  [key=2, style=dotted];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> n11  [key=2, style=dotted];
m24_3 -> m24_0  [color=blue, key=0, style=bold];
m25_247 -> m25_248  [color=red, key=0, style=solid];
m25_247 -> m25_251  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_247 -> m25_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.EnqueuedJobDto> EnqueuedJobs", style=bold];
m25_248 -> m25_249  [color=red, key=0, style=solid];
m25_248 -> m25_9  [color=red, key=2, style=dotted];
m25_248 -> m25_250  [color=red, key=1, label="lambda expression", style=dashed];
m25_249 -> m25_247  [color=blue, key=0, style=bold];
m25_274 -> m25_327  [key=0, style=solid];
m25_274 -> m25_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_274 -> m25_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_274 -> m25_335  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m25_274 -> m25_336  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats", style=bold];
m25_327 -> m25_328  [key=0, style=solid];
m25_327 -> m25_331  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m25_327 -> m25_332  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m25_334 -> m25_335  [key=0, style=solid];
m25_334 -> m25_92  [key=2, style=dotted];
m25_334 -> m25_93  [key=2, style=dotted];
m25_334 -> m25_351  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_335 -> m25_336  [key=0, style=solid];
m25_335 -> m25_347  [key=2, style=dotted];
m25_335 -> m25_340  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m25_328 -> m25_329  [key=0, style=solid];
m25_328 -> m25_86  [key=2, style=dotted];
m25_328 -> m25_331  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_328 -> m25_334  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_328 -> m25_338  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_328 -> m25_342  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_331 -> m25_332  [key=0, style=solid];
m25_331 -> m25_224  [key=2, style=dotted];
m25_332 -> m25_333  [key=0, style=solid];
m25_332 -> m25_346  [key=2, style=dotted];
m25_332 -> m25_332  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m25_329 -> m25_330  [key=0, style=solid];
m25_329 -> m25_333  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_329 -> m25_203  [color=red, key=3, label="Local variable int i", style=bold];
m25_338 -> m25_339  [key=0, style=solid];
m25_338 -> m25_344  [key=0, style=solid];
m25_338 -> m25_203  [color=red, key=3, label="Local variable int i", style=bold];
m25_342 -> m25_343  [key=0, style=solid];
m25_342 -> m25_350  [key=2, style=dotted];
m25_330 -> m25_331  [key=0, style=solid];
m25_330 -> m25_334  [key=0, style=solid];
m25_333 -> m25_330  [key=0, style=solid];
m25_333 -> m25_333  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_336 -> m25_337  [key=0, style=solid];
m25_336 -> m25_87  [key=2, style=dotted];
m25_336 -> m25_342  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_336 -> m25_344  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_340 -> m25_341  [key=0, style=solid];
m25_340 -> m25_342  [key=0, style=solid];
m25_340 -> m25_348  [key=2, style=dotted];
m25_340 -> m25_349  [key=2, style=dotted];
m25_337 -> m25_338  [key=0, style=solid];
m25_337 -> m25_340  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_337 -> m25_342  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_337 -> m25_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_344 -> m25_345  [key=0, style=solid];
m25_343 -> m25_338  [key=0, style=solid];
m25_343 -> m25_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_339 -> m25_340  [key=0, style=solid];
m25_341 -> m25_342  [key=0, style=solid];
m25_345 -> m25_274  [color=blue, key=0, style=bold];
m25_122 -> m25_356  [key=0, style=solid];
m25_122 -> m25_363  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_122 -> m25_380  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_122 -> m25_364  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m25_122 -> m25_365  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats", style=bold];
m25_356 -> m25_357  [key=0, style=solid];
m25_356 -> m25_359  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m25_356 -> m25_360  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m25_356 -> m25_361  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m25_363 -> m25_364  [key=0, style=solid];
m25_363 -> m25_92  [key=2, style=dotted];
m25_363 -> m25_93  [key=2, style=dotted];
m25_363 -> m25_379  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_364 -> m25_365  [key=0, style=solid];
m25_364 -> m25_347  [key=2, style=dotted];
m25_364 -> m25_369  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m25_357 -> m25_358  [key=0, style=solid];
m25_357 -> m25_375  [key=2, style=dotted];
m25_357 -> m25_359  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m25_359 -> m25_360  [key=0, style=solid];
m25_359 -> m25_362  [key=0, style=solid];
m25_360 -> m25_361  [key=0, style=solid];
m25_360 -> m25_224  [key=2, style=dotted];
m25_361 -> m25_359  [key=0, style=solid];
m25_361 -> m25_375  [key=2, style=dotted];
m25_361 -> m25_361  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m25_358 -> m25_359  [key=0, style=solid];
m25_358 -> m25_86  [key=2, style=dotted];
m25_358 -> m25_360  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_358 -> m25_362  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_358 -> m25_371  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_362 -> m25_363  [key=0, style=solid];
m25_362 -> m25_92  [key=2, style=dotted];
m25_362 -> m25_93  [key=2, style=dotted];
m25_362 -> m25_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_362 -> m25_367  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m25_371 -> m25_372  [key=0, style=solid];
m25_371 -> m25_350  [key=2, style=dotted];
m25_367 -> m25_368  [key=0, style=solid];
m25_367 -> m25_373  [key=0, style=solid];
m25_367 -> m25_203  [color=red, key=3, label="Local variable int i", style=bold];
m25_365 -> m25_366  [key=0, style=solid];
m25_365 -> m25_87  [key=2, style=dotted];
m25_365 -> m25_371  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_365 -> m25_373  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_369 -> m25_370  [key=0, style=solid];
m25_369 -> m25_371  [key=0, style=solid];
m25_369 -> m25_348  [key=2, style=dotted];
m25_369 -> m25_349  [key=2, style=dotted];
m25_366 -> m25_367  [key=0, style=solid];
m25_366 -> m25_369  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_366 -> m25_371  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_366 -> m25_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_373 -> m25_374  [key=0, style=solid];
m25_372 -> m25_367  [key=0, style=solid];
m25_372 -> m25_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_368 -> m25_369  [key=0, style=solid];
m25_370 -> m25_371  [key=0, style=solid];
m25_374 -> m25_122  [color=blue, key=0, style=bold];
m25_257 -> m25_258  [color=red, key=0, style=solid];
m25_257 -> m25_261  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_257 -> m25_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FetchedJobDto> FetchedJobs", style=bold];
m25_258 -> m25_259  [color=red, key=0, style=solid];
m25_258 -> m25_9  [color=red, key=2, style=dotted];
m25_258 -> m25_260  [color=red, key=1, label="lambda expression", style=dashed];
m25_259 -> m25_257  [color=blue, key=0, style=bold];
m25_275 -> m25_276  [key=0, style=solid];
m25_275 -> m25_9  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs", style=bold];
m25_276 -> m25_277  [key=0, style=solid];
m25_276 -> m25_9  [key=2, style=dotted];
m25_276 -> m25_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_277 -> m25_275  [color=blue, key=0, style=bold];
m25_433 -> m25_434  [key=0, style=solid];
m25_434 -> m25_435  [key=0, style=solid];
m25_434 -> m25_70  [key=2, style=dotted];
m25_434 -> m25_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_434 -> m25_434  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.StatisticsDto ", style=bold];
m25_435 -> m25_433  [color=blue, key=0, style=bold];
m25_22 -> m25_23  [key=0, style=solid];
m25_22 -> m25_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_22 -> m25_9  [color=darkorchid, key=3, label="method methodReturn long FetchedCount", style=bold];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_9  [key=2, style=dotted];
m25_23 -> m25_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_24 -> m25_22  [color=blue, key=0, style=bold];
m25_281 -> m25_282  [color=red, key=0, style=solid];
m25_281 -> m25_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_281 -> m25_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_282 -> m25_283  [color=red, key=0, style=solid];
m25_282 -> m25_70  [color=red, key=2, style=dotted];
m25_282 -> m25_284  [color=red, key=1, label="lambda expression", style=dashed];
m25_282 -> m25_203  [color=red, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobDetailsDto ", style=bold];
m25_283 -> m25_281  [color=blue, key=0, style=bold];
m25_427 -> m25_428  [key=0, style=solid];
m25_427 -> m25_9  [color=darkorchid, key=3, label="method methodReturn long SucceededListCount", style=bold];
m25_428 -> m25_429  [key=0, style=solid];
m25_428 -> m25_9  [key=2, style=dotted];
m25_428 -> m25_430  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_429 -> m25_427  [color=blue, key=0, style=bold];
m25_191 -> m25_192  [color=red, key=0, style=solid];
m25_191 -> m25_195  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_191 -> m25_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.DeletedJobDto> DeletedJobs", style=bold];
m25_192 -> m25_193  [color=red, key=0, style=solid];
m25_192 -> m25_9  [color=red, key=2, style=dotted];
m25_192 -> m25_194  [color=red, key=1, label="lambda expression", style=dashed];
m25_193 -> m25_191  [color=blue, key=0, style=bold];
m25_222 -> m25_382  [key=0, style=solid];
m25_222 -> m25_384  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m25_222 -> m25_385  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m25_222 -> m25_386  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_222 -> m25_387  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m25_222 -> m25_388  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m25_222 -> m25_391  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_222 -> m25_392  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_222 -> m25_409  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_222 -> m25_394  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m25_222 -> m25_419  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m25_382 -> m25_383  [key=0, style=solid];
m25_382 -> m25_384  [key=0, style=solid];
m25_384 -> m25_385  [key=0, style=solid];
m25_384 -> m25_396  [key=2, style=dotted];
m25_384 -> m25_390  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_384 -> m25_404  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_384 -> m25_405  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_384 -> m25_394  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_384 -> m25_416  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_385 -> m25_386  [key=0, style=solid];
m25_385 -> m25_396  [key=2, style=dotted];
m25_385 -> m25_392  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_385 -> m25_412  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_385 -> m25_413  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_385 -> m25_394  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_385 -> m25_416  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_386 -> m25_387  [key=0, style=solid];
m25_386 -> m25_386  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_386 -> m25_390  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_386 -> m25_399  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_386 -> m25_394  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_386 -> m25_416  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_387 -> m25_388  [key=0, style=solid];
m25_387 -> m25_88  [key=2, style=dotted];
m25_387 -> m25_390  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_387 -> m25_392  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_387 -> m25_393  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_388 -> m25_389  [key=0, style=solid];
m25_388 -> m25_393  [key=0, style=solid];
m25_391 -> m25_392  [key=0, style=solid];
m25_391 -> m25_388  [key=0, style=solid];
m25_392 -> m25_388  [key=0, style=solid];
m25_392 -> m25_89  [key=2, style=dotted];
m25_392 -> m25_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_392 -> m25_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_394 -> m25_395  [key=0, style=solid];
m25_394 -> m25_397  [key=2, style=dotted];
m25_394 -> m25_92  [key=2, style=dotted];
m25_394 -> m25_93  [key=2, style=dotted];
m25_394 -> m25_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_394 -> m25_418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_383 -> m25_395  [key=0, style=solid];
m25_383 -> m25_54  [key=2, style=dotted];
m25_383 -> m25_86  [key=2, style=dotted];
m25_390 -> m25_391  [key=0, style=solid];
m25_390 -> m25_89  [key=2, style=dotted];
m25_390 -> m25_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_390 -> m25_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_393 -> m25_394  [key=0, style=solid];
m25_393 -> m25_90  [key=2, style=dotted];
m25_389 -> m25_390  [key=0, style=solid];
m25_389 -> m25_399  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_389 -> m25_404  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_389 -> m25_405  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_389 -> m25_392  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_389 -> m25_409  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_389 -> m25_412  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_389 -> m25_413  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_389 -> m25_388  [color=darkorchid, key=3, label="Local variable string id", style=bold];
m25_395 -> m25_222  [color=blue, key=0, style=bold];
m25_9 -> m25_512  [key=0, style=solid];
m25_9 -> m25_513  [color=darkseagreen4, key=1, label="System.Func<IRedisClient, T>", style=dashed];
m25_9 -> m25_7  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_15  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_23  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_29  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_35  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_41  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_47  [color=red, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_117  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_124  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_167  [color=red, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_179  [color=red, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_192  [color=red, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_248  [color=red, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_258  [color=red, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_269  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_276  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_9 -> m25_428  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m25_512 -> m25_513  [key=0, style=solid];
m25_512 -> m25_515  [key=2, style=dotted];
m25_513 -> m25_514  [key=0, style=solid];
m25_513 -> m25_516  [key=2, style=dotted];
m25_514 -> m25_9  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_3  [color=darkseagreen4, key=1, label=PooledRedisClientManager, style=dashed];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=0, style=solid];
m25_3 -> m25_4  [key=0, style=solid];
m25_2 -> m25_4  [key=0, style=solid];
m25_2 -> m25_5  [key=2, style=dotted];
m25_4 -> m25_0  [color=blue, key=0, style=bold];
m25_509 -> m25_510  [key=0, style=solid];
m25_10 -> m25_11  [key=0, style=solid];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_13  [key=2, style=dotted];
m25_12 -> m25_10  [color=blue, key=0, style=bold];
m25_18 -> m25_19  [key=0, style=solid];
m25_18 -> m25_20  [key=2, style=dotted];
m25_18 -> m25_21  [key=2, style=dotted];
m25_17 -> m25_18  [key=0, style=solid];
m25_19 -> m25_17  [color=blue, key=0, style=bold];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_20  [key=2, style=dotted];
m25_26 -> m25_21  [key=2, style=dotted];
m25_25 -> m25_26  [key=0, style=solid];
m25_27 -> m25_25  [color=blue, key=0, style=bold];
m25_31 -> m25_32  [key=0, style=solid];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_13  [key=2, style=dotted];
m25_33 -> m25_31  [color=blue, key=0, style=bold];
m25_37 -> m25_38  [key=0, style=solid];
m25_38 -> m25_39  [key=0, style=solid];
m25_38 -> m25_13  [key=2, style=dotted];
m25_39 -> m25_37  [color=blue, key=0, style=bold];
m25_43 -> m25_44  [key=0, style=solid];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_21  [key=2, style=dotted];
m25_45 -> m25_43  [color=blue, key=0, style=bold];
m25_50 -> m25_51  [color=red, key=0, style=solid];
m25_50 -> m25_53  [key=2, style=dotted];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_51  [color=red, key=1, label=IRedisClient, style=dashed];
m25_51 -> m25_52  [color=red, key=0, style=solid];
m25_51 -> m25_54  [color=red, key=2, style=dotted];
m25_51 -> m25_55  [color=red, key=2, style=dotted];
m25_51 -> m25_56  [color=red, key=2, style=dotted];
m25_51 -> m25_57  [color=red, key=2, style=dotted];
m25_51 -> m25_58  [color=red, key=1, label="lambda expression", style=dashed];
m25_51 -> m25_64  [color=red, key=1, label="lambda expression", style=dashed];
m25_52 -> m25_49  [color=blue, key=0, style=bold];
m25_52 -> m25_58  [color=green, key=0, style=bold];
m25_58 -> m25_59  [color=red, key=0, style=solid];
m25_64 -> m25_65  [key=0, style=solid];
m25_59 -> m25_60  [color=red, key=0, style=solid];
m25_59 -> m25_61  [color=red, key=2, style=dotted];
m25_59 -> m25_62  [color=red, key=2, style=dotted];
m25_59 -> m25_63  [color=red, key=2, style=dotted];
m25_60 -> m25_58  [color=blue, key=0, style=bold];
m25_60 -> m25_109  [color=green, key=0, style=bold];
m25_65 -> m25_66  [key=0, style=solid];
m25_65 -> m25_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>", style=dashed];
m25_66 -> m25_64  [color=blue, key=0, style=bold];
m25_72 -> m25_73  [key=0, style=solid];
m25_72 -> m25_85  [key=2, style=dotted];
m25_72 -> m25_78  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m25_72 -> m25_83  [color=red, key=1, label=scheduledJobs, style=dashed];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_77  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m25_77 -> m25_78  [key=0, style=solid];
m25_77 -> m25_88  [key=2, style=dotted];
m25_77 -> m25_80  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_77 -> m25_81  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_77 -> m25_82  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_73 -> m25_74  [key=0, style=solid];
m25_73 -> m25_75  [key=0, style=solid];
m25_78 -> m25_79  [key=0, style=solid];
m25_78 -> m25_82  [key=0, style=solid];
m25_83 -> m25_84  [color=red, key=0, style=solid];
m25_83 -> m25_91  [color=red, key=2, style=dotted];
m25_83 -> m25_92  [color=red, key=2, style=dotted];
m25_83 -> m25_93  [color=red, key=2, style=dotted];
m25_83 -> m25_109  [color=red, key=1, label="lambda expression", style=dashed];
m25_74 -> m25_84  [key=0, style=solid];
m25_74 -> m25_54  [key=2, style=dotted];
m25_74 -> m25_86  [key=2, style=dotted];
m25_75 -> m25_76  [key=0, style=solid];
m25_75 -> m25_87  [key=2, style=dotted];
m25_75 -> m25_80  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_75 -> m25_100  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_75 -> m25_83  [color=red, key=1, label=jobs, style=dashed];
m25_75 -> m25_110  [color=red, key=1, label=jobs, style=dashed];
m25_76 -> m25_77  [key=0, style=solid];
m25_76 -> m25_87  [key=2, style=dotted];
m25_76 -> m25_81  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_76 -> m25_107  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_76 -> m25_83  [color=red, key=1, label=states, style=dashed];
m25_76 -> m25_110  [color=red, key=1, label=states, style=dashed];
m25_80 -> m25_81  [key=0, style=solid];
m25_80 -> m25_89  [key=2, style=dotted];
m25_80 -> m25_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_80 -> m25_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_100 -> m25_101  [key=0, style=solid];
m25_100 -> m25_102  [key=2, style=dotted];
m25_110 -> m25_111  [color=red, key=0, style=solid];
m25_110 -> m25_112  [color=red, key=2, style=dotted];
m25_110 -> m25_113  [color=red, key=2, style=dotted];
m25_110 -> m25_114  [color=red, key=2, style=dotted];
m25_110 -> m25_115  [color=red, key=2, style=dotted];
m25_110 -> m25_62  [color=red, key=2, style=dotted];
m25_110 -> m25_63  [color=red, key=2, style=dotted];
m25_81 -> m25_78  [key=0, style=solid];
m25_81 -> m25_89  [key=2, style=dotted];
m25_81 -> m25_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_81 -> m25_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_107 -> m25_108  [key=0, style=solid];
m25_107 -> m25_102  [key=2, style=dotted];
m25_82 -> m25_83  [color=red, key=0, style=solid];
m25_82 -> m25_90  [key=2, style=dotted];
m25_79 -> m25_80  [key=0, style=solid];
m25_79 -> m25_95  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_79 -> m25_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_79 -> m25_81  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_79 -> m25_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_79 -> m25_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_95 -> m25_96  [key=0, style=solid];
m25_95 -> m25_97  [key=2, style=dotted];
m25_95 -> m25_98  [key=2, style=dotted];
m25_104 -> m25_105  [key=0, style=solid];
m25_104 -> m25_97  [key=2, style=dotted];
m25_104 -> m25_98  [key=2, style=dotted];
m25_94 -> m25_95  [key=0, style=solid];
m25_99 -> m25_100  [key=0, style=solid];
m25_103 -> m25_104  [key=0, style=solid];
m25_106 -> m25_107  [key=0, style=solid];
m25_84 -> m25_71  [color=blue, key=0, style=bold];
m25_109 -> m25_110  [color=red, key=0, style=solid];
m25_96 -> m25_94  [color=blue, key=0, style=bold];
m25_101 -> m25_99  [color=blue, key=0, style=bold];
m25_105 -> m25_103  [color=blue, key=0, style=bold];
m25_108 -> m25_106  [color=blue, key=0, style=bold];
m25_111 -> m25_109  [color=blue, key=0, style=bold];
m25_119 -> m25_120  [key=0, style=solid];
m25_120 -> m25_121  [key=0, style=solid];
m25_120 -> m25_122  [key=2, style=dotted];
m25_121 -> m25_119  [color=blue, key=0, style=bold];
m25_126 -> m25_127  [key=0, style=solid];
m25_127 -> m25_128  [key=0, style=solid];
m25_127 -> m25_122  [key=2, style=dotted];
m25_128 -> m25_126  [color=blue, key=0, style=bold];
m25_132 -> m25_133  [key=0, style=solid];
m25_132 -> m25_138  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m25_133 -> m25_134  [key=0, style=solid];
m25_133 -> m25_146  [key=2, style=dotted];
m25_133 -> m25_139  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m25_133 -> m25_144  [color=red, key=1, label=serverNames, style=dashed];
m25_138 -> m25_139  [key=0, style=solid];
m25_138 -> m25_88  [key=2, style=dotted];
m25_138 -> m25_141  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_138 -> m25_142  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_138 -> m25_143  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_134 -> m25_135  [key=0, style=solid];
m25_134 -> m25_136  [key=0, style=solid];
m25_139 -> m25_140  [key=0, style=solid];
m25_139 -> m25_143  [key=0, style=solid];
m25_144 -> m25_145  [color=red, key=0, style=solid];
m25_144 -> m25_92  [color=red, key=2, style=dotted];
m25_144 -> m25_93  [color=red, key=2, style=dotted];
m25_144 -> m25_160  [color=red, key=1, label="lambda expression", style=dashed];
m25_135 -> m25_145  [key=0, style=solid];
m25_135 -> m25_86  [key=2, style=dotted];
m25_136 -> m25_137  [key=0, style=solid];
m25_136 -> m25_87  [key=2, style=dotted];
m25_136 -> m25_141  [color=darkseagreen4, key=1, label=servers, style=dashed];
m25_136 -> m25_151  [color=darkseagreen4, key=1, label=servers, style=dashed];
m25_136 -> m25_144  [color=red, key=1, label=servers, style=dashed];
m25_136 -> m25_161  [color=red, key=1, label=servers, style=dashed];
m25_137 -> m25_138  [key=0, style=solid];
m25_137 -> m25_87  [key=2, style=dotted];
m25_137 -> m25_142  [color=darkseagreen4, key=1, label=queues, style=dashed];
m25_137 -> m25_158  [color=darkseagreen4, key=1, label=queues, style=dashed];
m25_137 -> m25_144  [color=red, key=1, label=queues, style=dashed];
m25_137 -> m25_161  [color=red, key=1, label=queues, style=dashed];
m25_141 -> m25_142  [key=0, style=solid];
m25_141 -> m25_89  [key=2, style=dotted];
m25_141 -> m25_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_141 -> m25_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_151 -> m25_152  [key=0, style=solid];
m25_151 -> m25_102  [key=2, style=dotted];
m25_161 -> m25_162  [color=red, key=0, style=solid];
m25_161 -> m25_163  [color=red, key=2, style=dotted];
m25_161 -> m25_164  [color=red, key=2, style=dotted];
m25_161 -> m25_165  [color=red, key=2, style=dotted];
m25_161 -> m25_62  [color=red, key=2, style=dotted];
m25_142 -> m25_139  [key=0, style=solid];
m25_142 -> m25_89  [key=2, style=dotted];
m25_142 -> m25_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_142 -> m25_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_158 -> m25_159  [key=0, style=solid];
m25_158 -> m25_102  [key=2, style=dotted];
m25_143 -> m25_144  [color=red, key=0, style=solid];
m25_143 -> m25_90  [key=2, style=dotted];
m25_140 -> m25_141  [key=0, style=solid];
m25_140 -> m25_148  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_140 -> m25_151  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_140 -> m25_142  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_140 -> m25_154  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_140 -> m25_158  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_148 -> m25_149  [key=0, style=solid];
m25_148 -> m25_97  [key=2, style=dotted];
m25_148 -> m25_98  [key=2, style=dotted];
m25_154 -> m25_155  [key=0, style=solid];
m25_154 -> m25_97  [key=2, style=dotted];
m25_154 -> m25_156  [key=2, style=dotted];
m25_147 -> m25_148  [key=0, style=solid];
m25_150 -> m25_151  [key=0, style=solid];
m25_153 -> m25_154  [key=0, style=solid];
m25_157 -> m25_158  [key=0, style=solid];
m25_145 -> m25_132  [color=blue, key=0, style=bold];
m25_160 -> m25_161  [color=red, key=0, style=solid];
m25_149 -> m25_147  [color=blue, key=0, style=bold];
m25_152 -> m25_150  [color=blue, key=0, style=bold];
m25_155 -> m25_153  [color=blue, key=0, style=bold];
m25_159 -> m25_157  [color=blue, key=0, style=bold];
m25_162 -> m25_160  [color=blue, key=0, style=bold];
m25_170 -> m25_171  [color=red, key=0, style=solid];
m25_170 -> m25_173  [key=2, style=dotted];
m25_169 -> m25_170  [key=0, style=solid];
m25_169 -> m25_171  [color=red, key=1, label=IRedisClient, style=dashed];
m25_171 -> m25_172  [color=red, key=0, style=solid];
m25_171 -> m25_55  [color=red, key=2, style=dotted];
m25_171 -> m25_174  [color=red, key=1, label="lambda expression", style=dashed];
m25_172 -> m25_169  [color=blue, key=0, style=bold];
m25_174 -> m25_175  [color=red, key=0, style=solid];
m25_175 -> m25_176  [color=red, key=0, style=solid];
m25_175 -> m25_177  [color=red, key=2, style=dotted];
m25_175 -> m25_62  [color=red, key=2, style=dotted];
m25_175 -> m25_63  [color=red, key=2, style=dotted];
m25_176 -> m25_174  [color=blue, key=0, style=bold];
m25_182 -> m25_183  [color=red, key=0, style=solid];
m25_182 -> m25_185  [key=2, style=dotted];
m25_181 -> m25_182  [key=0, style=solid];
m25_181 -> m25_183  [color=red, key=1, label=IRedisClient, style=dashed];
m25_183 -> m25_184  [color=red, key=0, style=solid];
m25_183 -> m25_55  [color=red, key=2, style=dotted];
m25_183 -> m25_186  [color=red, key=1, label="lambda expression", style=dashed];
m25_184 -> m25_181  [color=blue, key=0, style=bold];
m25_186 -> m25_187  [color=red, key=0, style=solid];
m25_187 -> m25_188  [color=red, key=0, style=solid];
m25_187 -> m25_189  [color=red, key=2, style=dotted];
m25_187 -> m25_62  [color=red, key=2, style=dotted];
m25_187 -> m25_190  [color=red, key=2, style=dotted];
m25_187 -> m25_63  [color=red, key=2, style=dotted];
m25_188 -> m25_186  [color=blue, key=0, style=bold];
m25_195 -> m25_196  [color=red, key=0, style=solid];
m25_195 -> m25_185  [key=2, style=dotted];
m25_194 -> m25_195  [key=0, style=solid];
m25_194 -> m25_196  [color=red, key=1, label=IRedisClient, style=dashed];
m25_196 -> m25_197  [color=red, key=0, style=solid];
m25_196 -> m25_55  [color=red, key=2, style=dotted];
m25_196 -> m25_198  [color=red, key=1, label="lambda expression", style=dashed];
m25_197 -> m25_194  [color=blue, key=0, style=bold];
m25_198 -> m25_199  [color=red, key=0, style=solid];
m25_199 -> m25_200  [color=red, key=0, style=solid];
m25_199 -> m25_201  [color=red, key=2, style=dotted];
m25_199 -> m25_62  [color=red, key=2, style=dotted];
m25_199 -> m25_63  [color=red, key=2, style=dotted];
m25_200 -> m25_198  [color=blue, key=0, style=bold];
m25_205 -> m25_206  [key=0, style=solid];
m25_205 -> m25_212  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m25_205 -> m25_217  [color=red, key=1, label=IRedisClient, style=dashed];
m25_206 -> m25_207  [key=0, style=solid];
m25_206 -> m25_146  [key=2, style=dotted];
m25_206 -> m25_208  [color=darkseagreen4, key=1, label=queues, style=dashed];
m25_212 -> m25_213  [key=0, style=solid];
m25_212 -> m25_88  [key=2, style=dotted];
m25_212 -> m25_214  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_212 -> m25_215  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_212 -> m25_216  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_217 -> m25_218  [color=red, key=0, style=solid];
m25_217 -> m25_222  [color=red, key=2, style=dotted];
m25_217 -> m25_243  [color=red, key=1, label="lambda expression", style=dashed];
m25_207 -> m25_208  [key=0, style=solid];
m25_207 -> m25_221  [key=2, style=dotted];
m25_207 -> m25_218  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_207 -> m25_219  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_208 -> m25_209  [key=0, style=solid];
m25_208 -> m25_219  [key=0, style=solid];
m25_208 -> m25_213  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_208 -> m25_226  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_208 -> m25_214  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_208 -> m25_232  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_208 -> m25_215  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_208 -> m25_238  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_208 -> m25_218  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_218 -> m25_208  [key=0, style=solid];
m25_218 -> m25_223  [key=2, style=dotted];
m25_218 -> m25_224  [key=2, style=dotted];
m25_219 -> m25_220  [key=0, style=solid];
m25_209 -> m25_210  [key=0, style=solid];
m25_213 -> m25_214  [key=0, style=solid];
m25_213 -> m25_89  [key=2, style=dotted];
m25_213 -> m25_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_213 -> m25_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_213 -> m25_217  [color=red, key=1, label=firstJobIds, style=dashed];
m25_226 -> m25_227  [key=0, style=solid];
m25_226 -> m25_97  [key=2, style=dotted];
m25_226 -> m25_185  [key=2, style=dotted];
m25_214 -> m25_215  [key=0, style=solid];
m25_214 -> m25_89  [key=2, style=dotted];
m25_214 -> m25_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_214 -> m25_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_214 -> m25_218  [color=darkseagreen4, key=1, label=length, style=dashed];
m25_232 -> m25_233  [key=0, style=solid];
m25_232 -> m25_97  [key=2, style=dotted];
m25_232 -> m25_21  [key=2, style=dotted];
m25_215 -> m25_216  [key=0, style=solid];
m25_215 -> m25_89  [key=2, style=dotted];
m25_215 -> m25_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_215 -> m25_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_215 -> m25_218  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m25_238 -> m25_239  [key=0, style=solid];
m25_238 -> m25_97  [key=2, style=dotted];
m25_238 -> m25_21  [key=2, style=dotted];
m25_210 -> m25_211  [key=0, style=solid];
m25_211 -> m25_212  [key=0, style=solid];
m25_216 -> m25_217  [color=red, key=0, style=solid];
m25_216 -> m25_90  [key=2, style=dotted];
m25_225 -> m25_226  [key=0, style=solid];
m25_228 -> m25_229  [key=0, style=solid];
m25_231 -> m25_232  [key=0, style=solid];
m25_234 -> m25_235  [key=0, style=solid];
m25_237 -> m25_238  [key=0, style=solid];
m25_240 -> m25_241  [key=0, style=solid];
m25_243 -> m25_244  [color=red, key=0, style=solid];
m25_220 -> m25_205  [color=blue, key=0, style=bold];
m25_227 -> m25_225  [color=blue, key=0, style=bold];
m25_229 -> m25_230  [key=0, style=solid];
m25_230 -> m25_228  [color=blue, key=0, style=bold];
m25_233 -> m25_231  [color=blue, key=0, style=bold];
m25_235 -> m25_236  [key=0, style=solid];
m25_236 -> m25_234  [color=blue, key=0, style=bold];
m25_239 -> m25_237  [color=blue, key=0, style=bold];
m25_241 -> m25_242  [key=0, style=solid];
m25_242 -> m25_240  [color=blue, key=0, style=bold];
m25_244 -> m25_245  [color=red, key=0, style=solid];
m25_244 -> m25_246  [color=red, key=2, style=dotted];
m25_244 -> m25_62  [color=red, key=2, style=dotted];
m25_244 -> m25_63  [color=red, key=2, style=dotted];
m25_245 -> m25_243  [color=blue, key=0, style=bold];
m25_251 -> m25_252  [color=red, key=0, style=solid];
m25_251 -> m25_20  [key=2, style=dotted];
m25_251 -> m25_185  [key=2, style=dotted];
m25_250 -> m25_251  [key=0, style=solid];
m25_250 -> m25_252  [color=red, key=1, label=IRedisClient, style=dashed];
m25_252 -> m25_253  [color=red, key=0, style=solid];
m25_252 -> m25_55  [color=red, key=2, style=dotted];
m25_252 -> m25_254  [color=red, key=1, label="lambda expression", style=dashed];
m25_253 -> m25_250  [color=blue, key=0, style=bold];
m25_254 -> m25_255  [color=red, key=0, style=solid];
m25_255 -> m25_256  [color=red, key=0, style=solid];
m25_255 -> m25_246  [color=red, key=2, style=dotted];
m25_255 -> m25_62  [color=red, key=2, style=dotted];
m25_255 -> m25_63  [color=red, key=2, style=dotted];
m25_256 -> m25_254  [color=blue, key=0, style=bold];
m25_261 -> m25_262  [color=red, key=0, style=solid];
m25_261 -> m25_20  [key=2, style=dotted];
m25_261 -> m25_185  [key=2, style=dotted];
m25_260 -> m25_261  [key=0, style=solid];
m25_260 -> m25_262  [color=red, key=1, label=IRedisClient, style=dashed];
m25_262 -> m25_263  [color=red, key=0, style=solid];
m25_262 -> m25_55  [color=red, key=2, style=dotted];
m25_262 -> m25_264  [color=red, key=1, label="lambda expression", style=dashed];
m25_263 -> m25_260  [color=blue, key=0, style=bold];
m25_264 -> m25_265  [color=red, key=0, style=solid];
m25_265 -> m25_266  [color=red, key=0, style=solid];
m25_265 -> m25_267  [color=red, key=2, style=dotted];
m25_265 -> m25_62  [color=red, key=2, style=dotted];
m25_266 -> m25_264  [color=blue, key=0, style=bold];
m25_271 -> m25_272  [key=0, style=solid];
m25_272 -> m25_273  [key=0, style=solid];
m25_272 -> m25_274  [key=2, style=dotted];
m25_273 -> m25_271  [color=blue, key=0, style=bold];
m25_278 -> m25_279  [key=0, style=solid];
m25_279 -> m25_280  [key=0, style=solid];
m25_279 -> m25_274  [key=2, style=dotted];
m25_280 -> m25_278  [color=blue, key=0, style=bold];
m25_285 -> m25_286  [key=0, style=solid];
m25_285 -> m25_20  [key=2, style=dotted];
m25_285 -> m25_306  [key=2, style=dotted];
m25_285 -> m25_300  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_285 -> m25_301  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_285 -> m25_302  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_285 -> m25_303  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_285 -> m25_304  [color=red, key=1, label=job, style=dashed];
m25_289 -> m25_290  [key=0, style=solid];
m25_289 -> m25_20  [key=2, style=dotted];
m25_289 -> m25_156  [key=2, style=dotted];
m25_284 -> m25_285  [key=0, style=solid];
m25_284 -> m25_289  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m25_286 -> m25_287  [key=0, style=solid];
m25_286 -> m25_288  [key=0, style=solid];
m25_300 -> m25_301  [key=0, style=solid];
m25_300 -> m25_302  [key=0, style=solid];
m25_300 -> m25_309  [key=2, style=dotted];
m25_301 -> m25_302  [key=0, style=solid];
m25_301 -> m25_102  [key=2, style=dotted];
m25_302 -> m25_303  [key=0, style=solid];
m25_302 -> m25_304  [color=red, key=0, style=solid];
m25_302 -> m25_309  [key=2, style=dotted];
m25_303 -> m25_304  [color=red, key=0, style=solid];
m25_303 -> m25_102  [key=2, style=dotted];
m25_304 -> m25_305  [color=red, key=0, style=solid];
m25_304 -> m25_313  [color=red, key=2, style=dotted];
m25_304 -> m25_314  [color=red, key=2, style=dotted];
m25_304 -> m25_309  [color=red, key=2, style=dotted];
m25_304 -> m25_310  [color=red, key=2, style=dotted];
m25_304 -> m25_315  [color=red, key=2, style=dotted];
m25_304 -> m25_316  [color=red, key=2, style=dotted];
m25_304 -> m25_317  [color=red, key=1, label="lambda expression", style=dashed];
m25_304 -> m25_321  [color=red, key=1, label="lambda expression", style=dashed];
m25_304 -> m25_324  [color=red, key=1, label="lambda expression", style=dashed];
m25_287 -> m25_305  [key=0, style=solid];
m25_288 -> m25_289  [key=0, style=solid];
m25_288 -> m25_304  [color=red, key=1, label=hiddenProperties, style=dashed];
m25_288 -> m25_318  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m25_318 -> m25_319  [key=0, style=solid];
m25_318 -> m25_320  [key=2, style=dotted];
m25_290 -> m25_291  [key=0, style=solid];
m25_290 -> m25_92  [key=2, style=dotted];
m25_290 -> m25_93  [key=2, style=dotted];
m25_290 -> m25_292  [color=darkseagreen4, key=1, label=history, style=dashed];
m25_291 -> m25_292  [key=0, style=solid];
m25_291 -> m25_307  [key=2, style=dotted];
m25_291 -> m25_299  [color=darkseagreen4, key=1, label=stateHistory, style=dashed];
m25_291 -> m25_304  [color=red, key=1, label=stateHistory, style=dashed];
m25_292 -> m25_293  [color=red, key=0, style=solid];
m25_292 -> m25_300  [key=0, style=solid];
m25_292 -> m25_294  [color=darkseagreen4, key=1, label=entry, style=dashed];
m25_299 -> m25_292  [key=0, style=solid];
m25_299 -> m25_224  [key=2, style=dotted];
m25_293 -> m25_294  [color=red, key=0, style=solid];
m25_293 -> m25_308  [color=red, key=2, style=dotted];
m25_293 -> m25_309  [color=red, key=2, style=dotted];
m25_293 -> m25_310  [color=red, key=2, style=dotted];
m25_293 -> m25_298  [color=red, key=1, label=dto, style=dashed];
m25_293 -> m25_299  [color=red, key=1, label=dto, style=dashed];
m25_294 -> m25_295  [key=0, style=solid];
m25_294 -> m25_311  [key=2, style=dotted];
m25_294 -> m25_296  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m25_294 -> m25_297  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m25_294 -> m25_298  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m25_298 -> m25_299  [key=0, style=solid];
m25_295 -> m25_296  [key=0, style=solid];
m25_295 -> m25_312  [key=2, style=dotted];
m25_296 -> m25_297  [key=0, style=solid];
m25_296 -> m25_312  [key=2, style=dotted];
m25_297 -> m25_298  [key=0, style=solid];
m25_297 -> m25_312  [key=2, style=dotted];
m25_305 -> m25_284  [color=blue, key=0, style=bold];
m25_317 -> m25_318  [key=0, style=solid];
m25_321 -> m25_322  [key=0, style=solid];
m25_324 -> m25_325  [key=0, style=solid];
m25_319 -> m25_317  [color=blue, key=0, style=bold];
m25_322 -> m25_323  [key=0, style=solid];
m25_323 -> m25_321  [color=blue, key=0, style=bold];
m25_325 -> m25_326  [key=0, style=solid];
m25_326 -> m25_324  [color=blue, key=0, style=bold];
m25_352 -> m25_353  [key=0, style=solid];
m25_352 -> m25_354  [key=2, style=dotted];
m25_352 -> m25_355  [key=2, style=dotted];
m25_351 -> m25_352  [key=0, style=solid];
m25_353 -> m25_351  [color=blue, key=0, style=bold];
m25_380 -> m25_381  [key=0, style=solid];
m25_380 -> m25_97  [key=2, style=dotted];
m25_376 -> m25_377  [key=0, style=solid];
m25_379 -> m25_380  [key=0, style=solid];
m25_377 -> m25_378  [key=0, style=solid];
m25_377 -> m25_354  [key=2, style=dotted];
m25_378 -> m25_376  [color=blue, key=0, style=bold];
m25_381 -> m25_379  [color=blue, key=0, style=bold];
m25_409 -> m25_410  [key=0, style=solid];
m25_409 -> m25_20  [key=2, style=dotted];
m25_409 -> m25_98  [key=2, style=dotted];
m25_419 -> m25_420  [key=0, style=solid];
m25_419 -> m25_421  [key=2, style=dotted];
m25_419 -> m25_422  [key=2, style=dotted];
m25_419 -> m25_423  [key=2, style=dotted];
m25_419 -> m25_424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_404 -> m25_405  [key=0, style=solid];
m25_404 -> m25_406  [key=0, style=solid];
m25_404 -> m25_407  [key=2, style=dotted];
m25_405 -> m25_406  [key=0, style=solid];
m25_405 -> m25_102  [key=2, style=dotted];
m25_416 -> m25_417  [key=0, style=solid];
m25_416 -> m25_115  [key=2, style=dotted];
m25_416 -> m25_407  [key=2, style=dotted];
m25_412 -> m25_413  [key=0, style=solid];
m25_412 -> m25_414  [key=0, style=solid];
m25_412 -> m25_407  [key=2, style=dotted];
m25_413 -> m25_414  [key=0, style=solid];
m25_413 -> m25_102  [key=2, style=dotted];
m25_399 -> m25_400  [key=0, style=solid];
m25_399 -> m25_20  [key=2, style=dotted];
m25_399 -> m25_401  [key=2, style=dotted];
m25_399 -> m25_402  [key=2, style=dotted];
m25_399 -> m25_98  [key=2, style=dotted];
m25_398 -> m25_399  [key=0, style=solid];
m25_403 -> m25_404  [key=0, style=solid];
m25_403 -> m25_405  [color=darkseagreen4, key=1, label="?", style=dashed];
m25_408 -> m25_409  [key=0, style=solid];
m25_411 -> m25_412  [key=0, style=solid];
m25_411 -> m25_413  [color=darkseagreen4, key=1, label="?", style=dashed];
m25_415 -> m25_416  [key=0, style=solid];
m25_418 -> m25_419  [key=0, style=solid];
m25_400 -> m25_398  [color=blue, key=0, style=bold];
m25_406 -> m25_403  [color=blue, key=0, style=bold];
m25_410 -> m25_408  [color=blue, key=0, style=bold];
m25_414 -> m25_411  [color=blue, key=0, style=bold];
m25_417 -> m25_415  [color=blue, key=0, style=bold];
m25_420 -> m25_418  [color=blue, key=0, style=bold];
m25_424 -> m25_425  [key=0, style=solid];
m25_425 -> m25_426  [key=0, style=solid];
m25_426 -> m25_424  [color=blue, key=0, style=bold];
m25_430 -> m25_431  [key=0, style=solid];
m25_431 -> m25_432  [key=0, style=solid];
m25_431 -> m25_21  [key=2, style=dotted];
m25_432 -> m25_430  [color=blue, key=0, style=bold];
m25_436 -> m25_437  [key=0, style=solid];
m25_436 -> m25_438  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m25_436 -> m25_439  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m25_437 -> m25_438  [key=0, style=solid];
m25_437 -> m25_454  [key=2, style=dotted];
m25_437 -> m25_440  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_460  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_441  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_466  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_442  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_472  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_443  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_478  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_444  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_485  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_445  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_492  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_446  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_498  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_447  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_504  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_450  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_510  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_437 -> m25_452  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_438 -> m25_439  [key=0, style=solid];
m25_438 -> m25_146  [key=2, style=dotted];
m25_438 -> m25_448  [color=darkseagreen4, key=1, label=queues, style=dashed];
m25_439 -> m25_440  [key=0, style=solid];
m25_439 -> m25_88  [key=2, style=dotted];
m25_439 -> m25_441  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_439 -> m25_442  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_439 -> m25_443  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_439 -> m25_444  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_439 -> m25_445  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_439 -> m25_446  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_439 -> m25_447  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_439 -> m25_450  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_439 -> m25_451  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_440 -> m25_441  [key=0, style=solid];
m25_440 -> m25_89  [key=2, style=dotted];
m25_440 -> m25_455  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_440 -> m25_459  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_460 -> m25_461  [key=0, style=solid];
m25_441 -> m25_442  [key=0, style=solid];
m25_441 -> m25_89  [key=2, style=dotted];
m25_441 -> m25_462  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_441 -> m25_465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_466 -> m25_467  [key=0, style=solid];
m25_442 -> m25_443  [key=0, style=solid];
m25_442 -> m25_89  [key=2, style=dotted];
m25_442 -> m25_468  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_442 -> m25_471  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_472 -> m25_473  [key=0, style=solid];
m25_443 -> m25_444  [key=0, style=solid];
m25_443 -> m25_89  [key=2, style=dotted];
m25_443 -> m25_474  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_443 -> m25_477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_478 -> m25_479  [key=0, style=solid];
m25_444 -> m25_445  [key=0, style=solid];
m25_444 -> m25_89  [key=2, style=dotted];
m25_444 -> m25_480  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_444 -> m25_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_485 -> m25_486  [key=0, style=solid];
m25_485 -> m25_487  [key=2, style=dotted];
m25_445 -> m25_446  [key=0, style=solid];
m25_445 -> m25_89  [key=2, style=dotted];
m25_445 -> m25_488  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_445 -> m25_491  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_492 -> m25_493  [key=0, style=solid];
m25_446 -> m25_447  [key=0, style=solid];
m25_446 -> m25_89  [key=2, style=dotted];
m25_446 -> m25_494  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_446 -> m25_497  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_498 -> m25_499  [key=0, style=solid];
m25_498 -> m25_487  [key=2, style=dotted];
m25_447 -> m25_448  [key=0, style=solid];
m25_447 -> m25_89  [key=2, style=dotted];
m25_447 -> m25_500  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_447 -> m25_503  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_504 -> m25_505  [key=0, style=solid];
m25_450 -> m25_448  [key=0, style=solid];
m25_450 -> m25_89  [key=2, style=dotted];
m25_450 -> m25_506  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_450 -> m25_509  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_510 -> m25_511  [key=0, style=solid];
m25_452 -> m25_453  [key=0, style=solid];
m25_448 -> m25_449  [key=0, style=solid];
m25_448 -> m25_451  [key=0, style=solid];
m25_451 -> m25_452  [key=0, style=solid];
m25_451 -> m25_90  [key=2, style=dotted];
m25_455 -> m25_456  [key=0, style=solid];
m25_459 -> m25_460  [key=0, style=solid];
m25_462 -> m25_463  [key=0, style=solid];
m25_465 -> m25_466  [key=0, style=solid];
m25_468 -> m25_469  [key=0, style=solid];
m25_471 -> m25_472  [key=0, style=solid];
m25_474 -> m25_475  [key=0, style=solid];
m25_477 -> m25_478  [key=0, style=solid];
m25_480 -> m25_481  [key=0, style=solid];
m25_484 -> m25_485  [key=0, style=solid];
m25_488 -> m25_489  [key=0, style=solid];
m25_491 -> m25_492  [key=0, style=solid];
m25_494 -> m25_495  [key=0, style=solid];
m25_497 -> m25_498  [key=0, style=solid];
m25_500 -> m25_501  [key=0, style=solid];
m25_503 -> m25_504  [key=0, style=solid];
m25_449 -> m25_450  [key=0, style=solid];
m25_449 -> m25_507  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m25_507 -> m25_508  [key=0, style=solid];
m25_507 -> m25_97  [key=2, style=dotted];
m25_507 -> m25_21  [key=2, style=dotted];
m25_506 -> m25_507  [key=0, style=solid];
m25_453 -> m25_436  [color=blue, key=0, style=bold];
m25_456 -> m25_457  [key=0, style=solid];
m25_456 -> m25_458  [key=2, style=dotted];
m25_457 -> m25_455  [color=blue, key=0, style=bold];
m25_461 -> m25_459  [color=blue, key=0, style=bold];
m25_463 -> m25_464  [key=0, style=solid];
m25_463 -> m25_458  [key=2, style=dotted];
m25_464 -> m25_462  [color=blue, key=0, style=bold];
m25_467 -> m25_465  [color=blue, key=0, style=bold];
m25_469 -> m25_470  [key=0, style=solid];
m25_469 -> m25_13  [key=2, style=dotted];
m25_470 -> m25_468  [color=blue, key=0, style=bold];
m25_473 -> m25_471  [color=blue, key=0, style=bold];
m25_475 -> m25_476  [key=0, style=solid];
m25_475 -> m25_13  [key=2, style=dotted];
m25_476 -> m25_474  [color=blue, key=0, style=bold];
m25_479 -> m25_477  [color=blue, key=0, style=bold];
m25_481 -> m25_482  [key=0, style=solid];
m25_481 -> m25_483  [key=2, style=dotted];
m25_482 -> m25_480  [color=blue, key=0, style=bold];
m25_486 -> m25_484  [color=blue, key=0, style=bold];
m25_489 -> m25_490  [key=0, style=solid];
m25_489 -> m25_13  [key=2, style=dotted];
m25_490 -> m25_488  [color=blue, key=0, style=bold];
m25_493 -> m25_491  [color=blue, key=0, style=bold];
m25_495 -> m25_496  [key=0, style=solid];
m25_495 -> m25_483  [key=2, style=dotted];
m25_496 -> m25_494  [color=blue, key=0, style=bold];
m25_499 -> m25_497  [color=blue, key=0, style=bold];
m25_501 -> m25_502  [key=0, style=solid];
m25_501 -> m25_13  [key=2, style=dotted];
m25_502 -> m25_500  [color=blue, key=0, style=bold];
m25_505 -> m25_503  [color=blue, key=0, style=bold];
m25_508 -> m25_506  [color=blue, key=0, style=bold];
m25_511 -> m25_509  [color=blue, key=0, style=bold];
m25_115 -> m25_517  [key=0, style=solid];
m25_115 -> m25_203  [color=red, key=3, label="method methodReturn HangFire.Common.Job TryToGetJob", style=bold];
m25_517 -> m25_520  [key=0, style=solid];
m25_517 -> m25_521  [key=2, style=dotted];
m25_517 -> m25_522  [key=2, style=dotted];
m25_518 -> m25_519  [key=0, style=solid];
m25_519 -> m25_520  [key=0, style=solid];
m25_520 -> m25_115  [color=blue, key=0, style=bold];
m25_166 -> m25_167  [color=red, key=0, style=solid];
m25_166 -> m25_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_166 -> m25_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FailedJobDto> FailedJobs", style=bold];
m25_167 -> m25_168  [color=red, key=0, style=solid];
m25_167 -> m25_9  [color=red, key=2, style=dotted];
m25_167 -> m25_169  [color=red, key=1, label="lambda expression", style=dashed];
m25_168 -> m25_166  [color=blue, key=0, style=bold];
m25_129 -> m25_130  [color=red, key=0, style=solid];
m25_130 -> m25_131  [color=red, key=0, style=solid];
m25_130 -> m25_70  [color=red, key=2, style=dotted];
m25_130 -> m25_132  [color=red, key=1, label="lambda expression", style=dashed];
m25_130 -> m25_130  [color=red, key=3, label="Local variable var name", style=bold];
m25_131 -> m25_129  [color=blue, key=0, style=bold];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_9  [color=darkorchid, key=3, label="method methodReturn long DeletedListCount", style=bold];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_9  [key=2, style=dotted];
m25_41 -> m25_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_42 -> m25_40  [color=blue, key=0, style=bold];
m25_178 -> m25_179  [color=red, key=0, style=solid];
m25_178 -> m25_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_178 -> m25_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.SucceededJobDto> SucceededJobs", style=bold];
m25_179 -> m25_180  [color=red, key=0, style=solid];
m25_179 -> m25_9  [color=red, key=2, style=dotted];
m25_179 -> m25_181  [color=red, key=1, label="lambda expression", style=dashed];
m25_180 -> m25_178  [color=blue, key=0, style=bold];
m25_116 -> m25_117  [key=0, style=solid];
m25_116 -> m25_9  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount", style=bold];
m25_117 -> m25_118  [key=0, style=solid];
m25_117 -> m25_9  [key=2, style=dotted];
m25_117 -> m25_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_118 -> m25_116  [color=blue, key=0, style=bold];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_9  [color=darkorchid, key=3, label="method methodReturn long FailedCount", style=bold];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_9  [key=2, style=dotted];
m25_29 -> m25_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_30 -> m25_28  [color=blue, key=0, style=bold];
m25_46 -> m25_47  [color=red, key=0, style=solid];
m25_46 -> m25_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_46 -> m25_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs", style=bold];
m25_47 -> m25_48  [color=red, key=0, style=solid];
m25_47 -> m25_9  [color=red, key=2, style=dotted];
m25_47 -> m25_49  [color=red, key=1, label="lambda expression", style=dashed];
m25_48 -> m25_46  [color=blue, key=0, style=bold];
m25_34 -> m25_35  [key=0, style=solid];
m25_34 -> m25_9  [color=darkorchid, key=3, label="method methodReturn long ProcessingCount", style=bold];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_9  [key=2, style=dotted];
m25_35 -> m25_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_36 -> m25_34  [color=blue, key=0, style=bold];
m25_268 -> m25_269  [key=0, style=solid];
m25_268 -> m25_9  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs", style=bold];
m25_269 -> m25_270  [key=0, style=solid];
m25_269 -> m25_9  [key=2, style=dotted];
m25_269 -> m25_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_270 -> m25_268  [color=blue, key=0, style=bold];
m25_123 -> m25_124  [key=0, style=solid];
m25_123 -> m25_9  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount", style=bold];
m25_124 -> m25_125  [key=0, style=solid];
m25_124 -> m25_9  [key=2, style=dotted];
m25_124 -> m25_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_125 -> m25_123  [color=blue, key=0, style=bold];
m25_202 -> m25_203  [color=red, key=0, style=solid];
m25_203 -> m25_204  [color=red, key=0, style=solid];
m25_203 -> m25_70  [color=red, key=2, style=dotted];
m25_203 -> m25_205  [color=red, key=1, label="lambda expression", style=dashed];
m25_203 -> m25_203  [color=red, key=3, label="method methodReturn System.Collections.Generic.List<HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> ", style=bold];
m25_203 -> m25_222  [color=red, key=3, label="Local variable HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.EnqueuedJobDto> jobs", style=bold];
m25_204 -> m25_202  [color=blue, key=0, style=bold];
m25_67 -> m25_68  [color=red, key=0, style=solid];
m25_67 -> m25_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_68 -> m25_69  [color=red, key=0, style=solid];
m25_68 -> m25_70  [color=red, key=2, style=dotted];
m25_68 -> m25_71  [color=red, key=1, label="lambda expression", style=dashed];
m25_68 -> m25_68  [color=red, key=3, label="Local variable var job", style=bold];
m25_69 -> m25_67  [color=blue, key=0, style=bold];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_14 -> m25_9  [color=darkorchid, key=3, label="method methodReturn long EnqueuedCount", style=bold];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_9  [key=2, style=dotted];
m25_15 -> m25_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_16 -> m25_14  [color=blue, key=0, style=bold];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_9  [color=darkorchid, key=3, label="method methodReturn long ScheduledCount", style=bold];
m25_7 -> m25_8  [key=0, style=solid];
m25_7 -> m25_9  [key=2, style=dotted];
m25_7 -> m25_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_8 -> m25_6  [color=blue, key=0, style=bold];
m25_523 -> m25_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_29  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_35  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_41  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_47  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_51  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_68  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_117  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_120  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_124  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_127  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_130  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_167  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_171  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_179  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_183  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_192  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_196  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_203  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_217  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_248  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_252  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_258  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_262  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_269  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_272  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_276  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_279  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_282  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_304  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_428  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_434  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_523 -> m25_512  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m25_524 -> m25_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_525 -> m25_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_526 -> m25_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_527 -> m25_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_528 -> m25_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_529 -> m25_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_530 -> m25_95  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_530 -> m25_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_530 -> m25_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_530 -> m25_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_531 -> m25_100  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_531 -> m25_110  [color=red, key=1, label=jobs, style=dashed];
m25_532 -> m25_107  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_532 -> m25_110  [color=red, key=1, label=states, style=dashed];
m25_533 -> m25_148  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_533 -> m25_151  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_533 -> m25_154  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_533 -> m25_158  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_534 -> m25_151  [color=darkseagreen4, key=1, label=servers, style=dashed];
m25_534 -> m25_161  [color=red, key=1, label=servers, style=dashed];
m25_535 -> m25_158  [color=darkseagreen4, key=1, label=queues, style=dashed];
m25_535 -> m25_161  [color=red, key=1, label=queues, style=dashed];
m25_536 -> m25_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_537 -> m25_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_538 -> m25_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_539 -> m25_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_540 -> m25_195  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_541 -> m25_195  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_542 -> m25_226  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_542 -> m25_232  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_542 -> m25_238  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_543 -> m25_251  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_544 -> m25_251  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_545 -> m25_251  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_546 -> m25_261  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_547 -> m25_261  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_548 -> m25_261  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_549 -> m25_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_549 -> m25_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_550 -> m25_318  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m25_551 -> m25_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_552 -> m25_380  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_553 -> m25_399  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_553 -> m25_416  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_554 -> m25_399  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_554 -> m25_404  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_554 -> m25_405  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_554 -> m25_409  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_554 -> m25_412  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_554 -> m25_413  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_555 -> m25_404  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_555 -> m25_405  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_555 -> m25_416  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m25_556 -> m25_409  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_557 -> m25_412  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_557 -> m25_413  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_557 -> m25_416  [color=darkseagreen4, key=1, label=states, style=dashed];
m25_558 -> m25_419  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m25_559 -> m25_460  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_559 -> m25_466  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_559 -> m25_472  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_559 -> m25_478  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_559 -> m25_485  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_559 -> m25_492  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_559 -> m25_498  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_559 -> m25_504  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_559 -> m25_510  [color=darkseagreen4, key=1, label=stats, style=dashed];
m25_560 -> m25_507  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_28  [color=darkseagreen4, key=1, label=object, style=dashed];
m26_23 -> m26_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_23 -> m26_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_23 -> m26_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_26  [key=0, style=solid];
m26_24 -> m26_33  [key=2, style=dotted];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_35  [key=2, style=dotted];
m26_28 -> m26_30  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m26_28 -> m26_31  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_31  [key=0, style=solid];
m26_29 -> m26_36  [key=2, style=dotted];
m26_30 -> m26_32  [key=0, style=solid];
m26_30 -> m26_37  [key=2, style=dotted];
m26_31 -> m26_32  [key=0, style=solid];
m26_25 -> m26_32  [key=0, style=solid];
m26_25 -> m26_21  [key=2, style=dotted];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_28  [key=0, style=solid];
m26_27 -> m26_32  [key=0, style=solid];
m26_27 -> m26_34  [key=2, style=dotted];
m26_32 -> m26_23  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_2  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_0 -> m26_3  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_0 -> m26_4  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_1 -> m26_2  [key=0, style=solid];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_4  [key=0, style=solid];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_0  [color=blue, key=0, style=bold];
m26_38 -> m26_39  [key=0, style=solid];
m26_38 -> m26_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_38 -> m26_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_41  [key=0, style=solid];
m26_39 -> m26_33  [key=2, style=dotted];
m26_41 -> m26_44  [key=0, style=solid];
m26_41 -> m26_36  [key=2, style=dotted];
m26_41 -> m26_45  [key=2, style=dotted];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_46  [key=2, style=dotted];
m26_43 -> m26_47  [key=2, style=dotted];
m26_40 -> m26_44  [key=0, style=solid];
m26_40 -> m26_21  [key=2, style=dotted];
m26_42 -> m26_43  [key=0, style=solid];
m26_44 -> m26_38  [color=blue, key=0, style=bold];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_9  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m26_6 -> m26_11  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m26_6 -> m26_13  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m26_6 -> m26_15  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m26_6 -> m26_16  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m26_6 -> m26_17  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m26_6 -> m26_18  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_11  [key=0, style=solid];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_13  [key=0, style=solid];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_15  [key=0, style=solid];
m26_15 -> m26_16  [key=0, style=solid];
m26_16 -> m26_17  [key=0, style=solid];
m26_17 -> m26_18  [key=0, style=solid];
m26_18 -> m26_19  [key=0, style=solid];
m26_8 -> m26_20  [key=0, style=solid];
m26_8 -> m26_21  [key=2, style=dotted];
m26_10 -> m26_20  [key=0, style=solid];
m26_10 -> m26_21  [key=2, style=dotted];
m26_12 -> m26_20  [key=0, style=solid];
m26_12 -> m26_21  [key=2, style=dotted];
m26_14 -> m26_20  [key=0, style=solid];
m26_14 -> m26_21  [key=2, style=dotted];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_22  [key=2, style=dotted];
m26_20 -> m26_6  [color=blue, key=0, style=bold];
m26_48 -> m26_49  [key=0, style=solid];
m26_49 -> m26_50  [key=0, style=solid];
m26_49 -> m26_53  [key=2, style=dotted];
m26_50 -> m26_51  [key=0, style=solid];
m26_50 -> m26_54  [key=2, style=dotted];
m26_51 -> m26_52  [key=0, style=solid];
m26_52 -> m26_48  [color=blue, key=0, style=bold];
m26_55 -> m26_1  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_2  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_3  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_4  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_15  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_16  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_17  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_18  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_19  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_29  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_30  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_31  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_41  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_49  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_50  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_51  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m27_0 -> m27_1  [key=0, style=solid];
m27_37 -> m27_37  [color=green, key=1, label=job, style=dashed];
m27_37 -> m27_38  [color=green, key=0, style=solid];
m27_37 -> m27_68  [color=green, key=2, style=dotted];
m27_37 -> m27_63  [color=green, key=2, style=dotted];
m27_37 -> m27_39  [color=green, key=1, label=job, style=dashed];
m27_34 -> m27_37  [color=green, key=1, label=job, style=dashed];
m27_34 -> m27_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_34 -> m27_35  [key=0, style=solid];
m27_34 -> m27_36  [key=0, style=solid];
m27_36 -> m27_37  [color=green, key=0, style=solid];
m27_36 -> m27_55  [key=2, style=dotted];
m27_38 -> m27_39  [key=0, style=solid];
m27_38 -> m27_55  [key=2, style=dotted];
m27_39 -> m27_63  [key=2, style=dotted];
m27_39 -> m27_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_47 -> m27_47  [color=green, key=1, label=job, style=dashed];
m27_47 -> m27_48  [color=green, key=0, style=solid];
m27_47 -> m27_68  [color=green, key=2, style=dotted];
m27_47 -> m27_63  [color=green, key=2, style=dotted];
m27_47 -> m27_49  [color=green, key=1, label=job, style=dashed];
m27_45 -> m27_47  [color=green, key=1, label=job, style=dashed];
m27_45 -> m27_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_45 -> m27_46  [key=0, style=solid];
m27_45 -> m27_51  [key=0, style=solid];
m27_46 -> m27_47  [color=green, key=0, style=solid];
m27_46 -> m27_55  [key=2, style=dotted];
m27_48 -> m27_49  [key=0, style=solid];
m27_48 -> m27_55  [key=2, style=dotted];
m27_49 -> m27_63  [key=2, style=dotted];
m27_49 -> m27_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_49 -> m27_50  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_55  [key=2, style=dotted];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_56  [key=2, style=dotted];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_57  [key=2, style=dotted];
m27_4 -> m27_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_57  [key=2, style=dotted];
m27_5 -> m27_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_59  [key=2, style=dotted];
m27_7 -> m27_60  [key=2, style=dotted];
m27_7 -> m27_61  [key=2, style=dotted];
m27_7 -> m27_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m27_7 -> m27_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m27_7 -> m27_53  [color=darkseagreen4, key=1, label=pager, style=dashed];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_55  [key=2, style=dotted];
m27_11 -> m27_54  [key=0, style=solid];
m27_11 -> m27_55  [key=2, style=dotted];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_55  [key=2, style=dotted];
m27_13 -> m27_63  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_13 -> m27_61  [key=2, style=dotted];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_55  [key=2, style=dotted];
m27_15 -> m27_63  [key=2, style=dotted];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_61  [key=2, style=dotted];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_55  [key=2, style=dotted];
m27_17 -> m27_18  [key=0, style=solid];
m27_17 -> m27_64  [key=2, style=dotted];
m27_17 -> m27_65  [key=2, style=dotted];
m27_17 -> m27_66  [key=2, style=dotted];
m27_18 -> m27_19  [key=0, style=solid];
m27_18 -> m27_55  [key=2, style=dotted];
m27_20 -> m27_21  [key=0, style=solid];
m27_20 -> m27_55  [key=2, style=dotted];
m27_21 -> m27_63  [key=2, style=dotted];
m27_21 -> m27_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_55  [key=2, style=dotted];
m27_23 -> m27_63  [key=2, style=dotted];
m27_23 -> m27_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_55  [key=2, style=dotted];
m27_26 -> m27_27  [key=0, style=solid];
m27_26 -> m27_55  [key=2, style=dotted];
m27_27 -> m27_63  [key=2, style=dotted];
m27_27 -> m27_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_27 -> m27_28  [key=0, style=solid];
m27_27 -> m27_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_28 -> m27_29  [key=0, style=solid];
m27_28 -> m27_55  [key=2, style=dotted];
m27_29 -> m27_30  [key=0, style=solid];
m27_29 -> m27_55  [key=2, style=dotted];
m27_30 -> m27_63  [key=2, style=dotted];
m27_30 -> m27_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_61  [key=2, style=dotted];
m27_30 -> m27_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_31 -> m27_32  [key=0, style=solid];
m27_31 -> m27_55  [key=2, style=dotted];
m27_32 -> m27_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_32 -> m27_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_67  [key=2, style=dotted];
m27_32 -> m27_66  [key=2, style=dotted];
m27_33 -> m27_34  [key=0, style=solid];
m27_33 -> m27_55  [key=2, style=dotted];
m27_35 -> m27_36  [key=0, style=solid];
m27_35 -> m27_55  [key=2, style=dotted];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_55  [key=2, style=dotted];
m27_41 -> m27_63  [key=2, style=dotted];
m27_41 -> m27_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_61  [key=2, style=dotted];
m27_41 -> m27_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_55  [key=2, style=dotted];
m27_43 -> m27_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_43 -> m27_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_43 -> m27_44  [key=0, style=solid];
m27_43 -> m27_69  [key=2, style=dotted];
m27_43 -> m27_66  [key=2, style=dotted];
m27_44 -> m27_45  [key=0, style=solid];
m27_44 -> m27_55  [key=2, style=dotted];
m27_50 -> m27_51  [key=0, style=solid];
m27_50 -> m27_55  [key=2, style=dotted];
m27_51 -> m27_19  [key=0, style=solid];
m27_51 -> m27_55  [key=2, style=dotted];
m27_52 -> m27_53  [key=0, style=solid];
m27_52 -> m27_55  [key=2, style=dotted];
m27_53 -> m27_54  [key=0, style=solid];
m27_53 -> m27_70  [key=2, style=dotted];
m27_53 -> m27_65  [key=2, style=dotted];
m27_53 -> m27_66  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid];
m27_6 -> m27_7  [key=0, style=solid];
m27_6 -> m27_58  [key=2, style=dotted];
m27_6 -> m27_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_62  [key=2, style=dotted];
m27_8 -> m27_19  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_12  [key=0, style=solid];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_19 -> m27_52  [key=0, style=solid];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_25 -> m27_29  [key=0, style=solid];
m27_25 -> m27_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_25 -> m27_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_54 -> m27_0  [color=blue, key=0, style=bold];
m27_71 -> m27_37  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_47  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m27_71 -> m27_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_6 -> m28_7  [color=green, key=0, style=solid];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_0  [color=blue, key=0, style=bold];
m28_3 -> m28_4  [key=0, style=solid];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_6  [key=2, style=dotted];
m28_4 -> m28_7  [key=2, style=dotted];
m28_5 -> m28_2  [color=blue, key=0, style=bold];
m28_5 -> m28_3  [color=blue, key=0, style=bold];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_6  [color=blue, key=0, style=bold];
m28_9 -> m28_10  [key=0, style=solid];
m28_9 -> m28_11  [key=2, style=dotted];
m28_10 -> m28_8  [color=blue, key=0, style=bold];
m28_7 -> m28_8  [color=green, key=0, style=solid];
m28_7 -> m28_6  [color=green, key=2, style=dotted];
m28_7 -> m28_10  [color=green, key=2, style=dotted];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_12 -> m28_13  [key=0, style=solid];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_15  [key=2, style=dotted];
m28_14 -> m28_12  [color=blue, key=0, style=bold];
m28_16 -> m28_1  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m28_16 -> m28_4  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m28_26 -> m28_7  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m28_26 -> m28_3  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m28_26 -> m28_4  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m29_6 -> m29_7  [key=0, style=solid];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_11  [key=2, style=dotted];
m29_7 -> m29_9  [color=darkseagreen4, key=1, label=date, style=dashed];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_4  [key=2, style=dotted];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> n11  [key=2, style=dotted];
m29_10 -> m29_6  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_4  [key=2, style=dotted];
m29_2 -> m29_3  [key=0, style=solid];
m29_2 -> n11  [key=2, style=dotted];
m29_3 -> m29_0  [color=blue, key=0, style=bold];
m29_35 -> m29_36  [key=0, style=solid];
m29_36 -> m29_37  [key=0, style=solid];
m29_36 -> m29_4  [key=2, style=dotted];
m29_37 -> m29_38  [key=0, style=solid];
m29_37 -> m29_34  [key=2, style=dotted];
m29_38 -> m29_35  [color=blue, key=0, style=bold];
m29_30 -> m29_31  [key=0, style=solid];
m29_31 -> m29_32  [key=0, style=solid];
m29_31 -> m29_4  [key=2, style=dotted];
m29_32 -> m29_33  [key=0, style=solid];
m29_32 -> m29_34  [key=2, style=dotted];
m29_33 -> m29_30  [color=blue, key=0, style=bold];
m29_22 -> m29_23  [key=0, style=solid];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_4  [key=2, style=dotted];
m29_23 -> m29_11  [key=2, style=dotted];
m29_23 -> m29_25  [color=red, key=1, label=state, style=dashed];
m29_23 -> m29_26  [color=red, key=1, label=state, style=dashed];
m29_24 -> m29_25  [color=red, key=0, style=solid];
m29_24 -> m29_28  [key=2, style=dotted];
m29_24 -> m29_26  [color=red, key=1, label=data, style=dashed];
m29_25 -> m29_26  [color=red, key=0, style=solid];
m29_25 -> m29_29  [color=red, key=2, style=dotted];
m29_25 -> n11  [color=red, key=2, style=dotted];
m29_26 -> m29_27  [color=red, key=0, style=solid];
m29_26 -> m29_29  [color=red, key=2, style=dotted];
m29_26 -> n11  [color=red, key=2, style=dotted];
m29_27 -> m29_22  [color=blue, key=0, style=bold];
m29_12 -> m29_13  [key=0, style=solid];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_17  [key=2, style=dotted];
m29_13 -> m29_18  [key=2, style=dotted];
m29_13 -> m29_15  [color=darkseagreen4, key=1, label=state, style=dashed];
m29_14 -> m29_15  [key=0, style=solid];
m29_14 -> m29_19  [key=2, style=dotted];
m29_14 -> m29_20  [key=2, style=dotted];
m29_14 -> m29_21  [key=2, style=dotted];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_19  [key=2, style=dotted];
m29_15 -> m29_20  [key=2, style=dotted];
m29_15 -> m29_21  [key=2, style=dotted];
m29_16 -> m29_12  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_0  [color=blue, key=0, style=bold];
m31_50 -> m31_51  [color=red, key=0, style=solid];
m31_51 -> m31_52  [color=red, key=0, style=solid];
m31_52 -> m31_50  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_3  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m31_0 -> m31_5  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m31_0 -> m31_7  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m31_0 -> m31_8  [color=red, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m31_0 -> m31_9  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_3  [key=0, style=solid];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_5  [key=0, style=solid];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_7  [key=0, style=solid];
m31_7 -> m31_8  [color=red, key=0, style=solid];
m31_8 -> m31_9  [color=red, key=0, style=solid];
m31_9 -> m31_10  [key=0, style=solid];
m31_2 -> m31_10  [key=0, style=solid];
m31_2 -> m31_11  [key=2, style=dotted];
m31_4 -> m31_10  [key=0, style=solid];
m31_4 -> m31_11  [key=2, style=dotted];
m31_6 -> m31_10  [key=0, style=solid];
m31_6 -> m31_11  [key=2, style=dotted];
m31_10 -> m31_0  [color=blue, key=0, style=bold];
m31_46 -> m31_53  [color=red, key=0, style=solid];
m31_46 -> m31_57  [color=red, key=1, label=string, style=dashed];
m31_53 -> m31_54  [color=red, key=0, style=solid];
m31_53 -> m31_70  [color=red, key=2, style=dotted];
m31_53 -> m31_56  [color=red, key=1, label=jobData, style=dashed];
m31_53 -> m31_57  [color=red, key=1, label=jobData, style=dashed];
m31_53 -> m31_58  [color=red, key=1, label=jobData, style=dashed];
m31_53 -> m31_60  [color=red, key=1, label=jobData, style=dashed];
m31_57 -> m31_58  [color=red, key=0, style=solid];
m31_57 -> m31_72  [color=red, key=2, style=dotted];
m31_57 -> m31_60  [color=red, key=1, label=performContext, style=dashed];
m31_54 -> m31_55  [color=red, key=0, style=solid];
m31_54 -> m31_56  [color=red, key=0, style=solid];
m31_56 -> m31_57  [color=red, key=0, style=solid];
m31_56 -> m31_71  [color=red, key=2, style=dotted];
m31_58 -> m31_59  [color=red, key=0, style=solid];
m31_58 -> m31_62  [color=red, key=1, label=latency, style=dashed];
m31_60 -> m31_61  [color=red, key=0, style=solid];
m31_60 -> m31_74  [color=red, key=2, style=dotted];
m31_60 -> m31_62  [color=red, key=1, label=result, style=dashed];
m31_55 -> m31_69  [color=red, key=0, style=solid];
m31_59 -> m31_60  [color=red, key=0, style=solid];
m31_59 -> m31_73  [color=red, key=2, style=dotted];
m31_59 -> m31_61  [color=red, key=1, label=duration, style=dashed];
m31_59 -> m31_62  [color=red, key=1, label=duration, style=dashed];
m31_62 -> m31_69  [color=red, key=0, style=solid];
m31_62 -> m31_76  [color=red, key=2, style=dotted];
m31_61 -> m31_62  [color=red, key=0, style=solid];
m31_61 -> m31_75  [color=red, key=2, style=dotted];
m31_63 -> m31_64  [color=red, key=0, style=solid];
m31_64 -> m31_69  [color=red, key=0, style=solid];
m31_65 -> m31_66  [color=red, key=0, style=solid];
m31_66 -> m31_69  [color=red, key=0, style=solid];
m31_66 -> m31_77  [color=red, key=2, style=dotted];
m31_67 -> m31_68  [color=red, key=0, style=solid];
m31_68 -> m31_69  [color=red, key=0, style=solid];
m31_68 -> m31_77  [color=red, key=2, style=dotted];
m31_69 -> m31_46  [color=blue, key=0, style=bold];
m31_12 -> m31_13  [color=red, key=0, style=solid];
m31_12 -> m31_14  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m31_12 -> m31_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m31_12 -> m31_18  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m31_12 -> m31_19  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m31_12 -> m31_21  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m31_12 -> m31_24  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m31_13 -> m31_14  [color=red, key=0, style=solid];
m31_13 -> m31_36  [color=red, key=2, style=dotted];
m31_13 -> m31_16  [color=red, key=1, label=connection, style=dashed];
m31_13 -> m31_24  [color=red, key=1, label=connection, style=dashed];
m31_13 -> m31_25  [color=red, key=1, label=connection, style=dashed];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_37  [key=2, style=dotted];
m31_14 -> m31_20  [color=red, key=1, label=fetchedJob, style=dashed];
m31_14 -> m31_22  [color=red, key=1, label=fetchedJob, style=dashed];
m31_14 -> m31_24  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m31_14 -> m31_25  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m31_14 -> m31_27  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m31_14 -> m31_28  [color=red, key=1, label=fetchedJob, style=dashed];
m31_14 -> m31_30  [color=red, key=1, label=fetchedJob, style=dashed];
m31_14 -> m31_33  [color=red, key=1, label=fetchedJob, style=dashed];
m31_15 -> m31_16  [color=red, key=0, style=solid];
m31_15 -> m31_38  [key=2, style=dotted];
m31_18 -> m31_19  [color=red, key=0, style=solid];
m31_18 -> m31_41  [color=red, key=2, style=dotted];
m31_18 -> m31_20  [color=red, key=1, label=linkedCts, style=dashed];
m31_19 -> m31_20  [color=red, key=0, style=solid];
m31_19 -> m31_42  [key=2, style=dotted];
m31_21 -> m31_22  [color=red, key=0, style=solid];
m31_21 -> m31_38  [color=red, key=2, style=dotted];
m31_24 -> m31_25  [key=0, style=solid];
m31_24 -> m31_45  [key=2, style=dotted];
m31_16 -> m31_17  [color=red, key=0, style=solid];
m31_16 -> m31_39  [color=red, key=2, style=dotted];
m31_16 -> m31_20  [color=red, key=1, label=stateMachine, style=dashed];
m31_16 -> m31_27  [color=red, key=1, label=stateMachine, style=dashed];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_46  [key=2, style=dotted];
m31_25 -> m31_27  [color=darkseagreen4, key=1, label=state, style=dashed];
m31_20 -> m31_21  [color=red, key=0, style=solid];
m31_20 -> m31_24  [color=red, key=0, style=solid];
m31_20 -> m31_43  [color=red, key=2, style=dotted];
m31_22 -> m31_23  [color=red, key=0, style=solid];
m31_22 -> m31_44  [color=red, key=2, style=dotted];
m31_27 -> m31_28  [color=red, key=0, style=solid];
m31_27 -> m31_47  [key=2, style=dotted];
m31_28 -> m31_29  [color=red, key=0, style=solid];
m31_28 -> m31_31  [color=red, key=0, style=solid];
m31_28 -> m31_35  [color=red, key=0, style=solid];
m31_28 -> m31_44  [color=red, key=2, style=dotted];
m31_30 -> m31_35  [color=red, key=0, style=solid];
m31_30 -> m31_44  [color=red, key=2, style=dotted];
m31_33 -> m31_34  [color=red, key=0, style=solid];
m31_33 -> m31_49  [color=red, key=2, style=dotted];
m31_17 -> m31_18  [color=red, key=0, style=solid];
m31_17 -> m31_40  [key=2, style=dotted];
m31_23 -> m31_35  [color=red, key=0, style=solid];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_28  [color=red, key=0, style=solid];
m31_29 -> m31_30  [color=red, key=0, style=solid];
m31_31 -> m31_32  [color=red, key=0, style=solid];
m31_32 -> m31_33  [color=red, key=0, style=solid];
m31_32 -> m31_48  [color=red, key=2, style=dotted];
m31_34 -> m31_35  [color=red, key=0, style=solid];
m31_35 -> m31_12  [color=blue, key=0, style=bold];
m31_78 -> m31_7  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_8  [color=red, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_9  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_14  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_16  [color=red, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_19  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_24  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_25  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_51  [color=red, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_57  [color=red, key=1, label="Hangfire.Server.Worker", style=dashed];
m31_78 -> m31_60  [color=red, key=1, label="Hangfire.Server.Worker", style=dashed];
m32_24 -> m32_65  [key=0, style=solid];
m32_24 -> m32_66  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientExceptionContext", style=dashed];
m32_65 -> m32_66  [key=0, style=solid];
m32_65 -> m32_67  [key=0, style=solid];
m32_65 -> m32_31  [key=2, style=dotted];
m32_66 -> m32_65  [key=0, style=solid];
m32_66 -> m32_68  [key=2, style=dotted];
m32_67 -> m32_24  [color=blue, key=0, style=bold];
m32_3 -> m32_4  [key=0, style=solid];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=2, style=dotted];
m32_2 -> m32_0  [color=blue, key=0, style=bold];
m32_4 -> m32_3  [color=blue, key=0, style=bold];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_47  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m32_45 -> m32_48  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m32_45 -> m32_51  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m32_45 -> m32_54  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m32_45 -> m32_55  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m32_45 -> m32_59  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m32_46 -> m32_47  [key=0, style=solid];
m32_46 -> m32_62  [key=2, style=dotted];
m32_47 -> m32_48  [key=0, style=solid];
m32_47 -> m32_49  [key=0, style=solid];
m32_48 -> m32_61  [key=0, style=solid];
m32_48 -> m32_39  [key=2, style=dotted];
m32_51 -> m32_52  [key=0, style=solid];
m32_51 -> m32_58  [key=0, style=solid];
m32_51 -> m32_63  [key=2, style=dotted];
m32_54 -> m32_55  [key=0, style=solid];
m32_54 -> m32_39  [key=2, style=dotted];
m32_54 -> m32_56  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m32_54 -> m32_59  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m32_54 -> m32_60  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m32_55 -> m32_56  [key=0, style=solid];
m32_55 -> m32_64  [key=2, style=dotted];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_64  [key=2, style=dotted];
m32_49 -> m32_50  [key=0, style=solid];
m32_50 -> m32_51  [key=0, style=solid];
m32_52 -> m32_53  [key=0, style=solid];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_60  [key=0, style=solid];
m32_53 -> m32_54  [key=0, style=solid];
m32_53 -> m32_58  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_58  [key=0, style=solid];
m32_56 -> m32_54  [color=darkorchid, key=3, label="Parameter variable string pathMatch", style=bold];
m32_60 -> m32_61  [key=0, style=solid];
m32_57 -> m32_61  [key=0, style=solid];
m32_61 -> m32_45  [color=blue, key=0, style=bold];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_17  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m32_15 -> m32_16  [key=0, style=solid];
m32_15 -> m32_21  [key=0, style=solid];
m32_15 -> m32_22  [key=2, style=dotted];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_23  [key=2, style=dotted];
m32_17 -> m32_19  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m32_16 -> m32_17  [key=0, style=solid];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_24  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_21  [key=0, style=solid];
m32_20 -> m32_21  [key=0, style=solid];
m32_20 -> m32_22  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireServer", style=bold];
m32_21 -> m32_14  [color=blue, key=0, style=bold];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m32_5 -> m32_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m32_5 -> m32_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m32_6 -> m32_7  [key=0, style=solid];
m32_6 -> m32_8  [key=0, style=solid];
m32_8 -> m32_9  [key=0, style=solid];
m32_8 -> m32_10  [key=0, style=solid];
m32_10 -> m32_11  [key=0, style=solid];
m32_11 -> m32_12  [key=0, style=solid];
m32_7 -> m32_12  [key=0, style=solid];
m32_7 -> m32_13  [key=2, style=dotted];
m32_9 -> m32_12  [key=0, style=solid];
m32_9 -> m32_13  [key=2, style=dotted];
m32_12 -> m32_5  [color=blue, key=0, style=bold];
m32_42 -> m32_43  [key=0, style=solid];
m32_35 -> m32_36  [key=0, style=solid];
m32_35 -> m32_38  [key=2, style=dotted];
m32_36 -> m32_37  [key=0, style=solid];
m32_36 -> m32_39  [key=2, style=dotted];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_45  [key=2, style=dotted];
m32_40 -> m32_41  [key=0, style=solid];
m32_40 -> m32_27  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m32_40 -> m32_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m32_34 -> m32_35  [key=0, style=solid];
m32_37 -> m32_34  [color=blue, key=0, style=bold];
m32_41 -> m32_40  [color=blue, key=0, style=bold];
m32_44 -> m32_42  [color=blue, key=0, style=bold];
m32_22 -> m32_25  [key=0, style=solid];
m32_22 -> m32_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m32_22 -> m32_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m32_22 -> m32_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m32_22 -> m32_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m32_25 -> m32_26  [key=0, style=solid];
m32_25 -> m32_30  [key=2, style=dotted];
m32_25 -> m32_27  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m32_25 -> m32_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_26  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireServer", style=bold];
m32_27 -> m32_28  [key=0, style=solid];
m32_27 -> m32_31  [key=2, style=dotted];
m32_27 -> m32_32  [key=2, style=dotted];
m32_27 -> m32_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_33  [key=2, style=dotted];
m32_29 -> m32_22  [color=blue, key=0, style=bold];
m32_69 -> m32_10  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m32_69 -> m32_11  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m32_69 -> m32_15  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m32_69 -> m32_18  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m32_70 -> m32_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m32_71 -> m32_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m32_72 -> m32_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m32_73 -> m32_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m32_74 -> m32_43  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m33_19 -> m33_6  [color=green, key=1, label="HangFire.States.SucceededState", style=dashed];
m33_19 -> m33_1  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m33_19 -> m33_2  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m33_19 -> m33_3  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m33_5 -> m33_6  [color=green, key=0, style=solid];
m33_5 -> m33_0  [color=blue, key=0, style=bold];
m33_6 -> m33_7  [color=green, key=0, style=solid];
m33_6 -> m33_8  [color=green, key=2, style=dotted];
m33_6 -> m33_9  [color=green, key=2, style=dotted];
m33_6 -> m33_10  [color=green, key=2, style=dotted];
m33_7 -> m33_5  [color=blue, key=0, style=bold];
m33_18 -> m33_0  [color=darkorchid, key=3, label="Property variable long PerformanceDuration", style=bold];
m33_18 -> m33_15  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_2  [color=darkseagreen4, key=1, label=long, style=dashed];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_6  [key=2, style=dotted];
m33_1 -> m33_7  [key=2, style=dotted];
m33_1 -> m33_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_8  [key=2, style=dotted];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_9  [key=2, style=dotted];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_10  [key=2, style=dotted];
m33_4 -> m33_0  [color=blue, key=0, style=bold];
m33_27 -> m33_28  [key=0, style=solid];
m33_28 -> m33_29  [key=0, style=solid];
m33_28 -> m33_19  [key=2, style=dotted];
m33_28 -> m33_30  [color=darkseagreen4, key=1, label=filter, style=dashed];
m33_28 -> m33_35  [color=darkseagreen4, key=1, label=filter, style=dashed];
m33_29 -> m33_30  [key=0, style=solid];
m33_29 -> m33_10  [key=2, style=dotted];
m33_29 -> m33_32  [key=2, style=dotted];
m33_29 -> m33_35  [color=darkseagreen4, key=1, label=context, style=dashed];
m33_30 -> m33_31  [key=0, style=solid];
m33_30 -> m33_33  [key=2, style=dotted];
m33_30 -> m33_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_31 -> m33_27  [color=blue, key=0, style=bold];
m33_21 -> m33_22  [key=0, style=solid];
m33_22 -> m33_23  [key=0, style=solid];
m33_22 -> m33_19  [key=2, style=dotted];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_26  [key=2, style=dotted];
m33_24 -> m33_25  [key=0, style=solid];
m33_24 -> n11  [key=2, style=dotted];
m33_25 -> m33_21  [color=blue, key=0, style=bold];
m33_14 -> m33_37  [key=0, style=solid];
m33_37 -> m33_14  [color=blue, key=0, style=bold];
m33_34 -> m33_35  [key=0, style=solid];
m33_11 -> m33_12  [key=0, style=solid];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_14  [key=2, style=dotted];
m33_13 -> m33_11  [color=blue, key=0, style=bold];
m33_35 -> m33_36  [key=0, style=solid];
m33_35 -> m33_26  [key=2, style=dotted];
m33_36 -> m33_34  [color=blue, key=0, style=bold];
m33_15 -> m33_16  [key=0, style=solid];
m33_16 -> m33_17  [key=0, style=solid];
m33_16 -> m33_19  [key=2, style=dotted];
m33_16 -> m33_18  [key=2, style=dotted];
m33_17 -> m33_18  [key=0, style=solid];
m33_17 -> n11  [key=2, style=dotted];
m33_17 -> m33_15  [color=blue, key=0, style=bold];
m33_38 -> m33_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.QueueAttributeFacts", style=dashed];
m33_38 -> m33_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.QueueAttributeFacts", style=dashed];
m33_38 -> m33_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.QueueAttributeFacts", style=dashed];
m33_38 -> m33_23  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.QueueAttributeFacts", style=dashed];
m33_38 -> m33_24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.QueueAttributeFacts", style=dashed];
m33_38 -> m33_29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.QueueAttributeFacts", style=dashed];
m33_39 -> m33_35  [color=darkseagreen4, key=1, label=filter, style=dashed];
m33_40 -> m33_35  [color=darkseagreen4, key=1, label=context, style=dashed];
}
