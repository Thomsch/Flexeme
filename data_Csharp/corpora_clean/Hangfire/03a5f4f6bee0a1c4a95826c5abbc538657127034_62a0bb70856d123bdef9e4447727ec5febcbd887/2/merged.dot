digraph  {
m0_64 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="ClientSteps.cs"];
m0_43 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="ClientSteps.cs"];
m0_26 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="ClientSteps.cs"];
m0_38 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ClientSteps.cs"];
m0_39 [label="Entry HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", span="53-53", cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="ClientSteps.cs"];
m0_40 [label="var job = Redis.Client.GetAllEntriesFromHash(''hangfire:job:'' + JobSteps.DefaultJobId)", span="55-55", cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", color=green, community=0, file="ClientSteps.cs"];
m0_41 [label="DictionaryAssert.ContainsFollowingItems(table, job)", span="56-56", cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", color=green, community=0, file="ClientSteps.cs"];
m0_42 [label="Exit HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", span="53-53", cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="ClientSteps.cs"];
m0_22 [label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="40-40", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="ClientSteps.cs"];
m0_23 [label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="42-42", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", color=green, community=0, file="ClientSteps.cs"];
m0_24 [label="When(''I create a job'')", span="43-43", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", color=green, community=0, file="ClientSteps.cs"];
m0_25 [label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="40-40", cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="ClientSteps.cs"];
m0_10 [label="Entry Mock<JobState>.cstr", span="", cluster="Mock<JobState>.cstr", file="ClientSteps.cs"];
m0_56 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ClientSteps.cs"];
m0_54 [label="Entry Unk.>", span="", cluster="Unk.>", file="ClientSteps.cs"];
m0_0 [label="Entry HangFire.Tests.ClientSteps.GivenAClient()", span="19-19", cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="ClientSteps.cs"];
m0_1 [label="_client = new JobClient(RedisFactory.BasicManager)", span="21-21", cluster="HangFire.Tests.ClientSteps.GivenAClient()", color=green, community=0, file="ClientSteps.cs"];
m0_2 [label="Exit HangFire.Tests.ClientSteps.GivenAClient()", span="19-19", cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="ClientSteps.cs"];
m0_55 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ClientSteps.cs"];
m0_3 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="ClientSteps.cs"];
m0_21 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="ClientSteps.cs"];
m0_13 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ClientSteps.cs"];
m0_27 [label="Entry Unk.When", span="", cluster="Unk.When", file="ClientSteps.cs"];
m0_45 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="60-60", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ClientSteps.cs"];
m0_46 [label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="62-64", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=1, file="ClientSteps.cs"];
m0_47 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="65-65", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs"];
m0_48 [label="Assert.AreEqual(_arguments.Count, args.Count)", span="67-67", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs"];
m0_50 [label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="70-70", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs"];
m0_49 [label=_arguments, span="68-68", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=1, file="ClientSteps.cs"];
m0_51 [label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="71-71", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs"];
m0_52 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="60-60", cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ClientSteps.cs"];
m0_34 [label="Entry HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="47-47", cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="ClientSteps.cs"];
m0_35 [label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="49-49", cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", color=green, community=0, file="ClientSteps.cs"];
m0_36 [label="Exit HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="47-47", cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="ClientSteps.cs"];
m0_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ClientSteps.cs"];
m0_4 [label="Entry HangFire.Tests.ClientSteps.WhenICreateAJob()", span="26-26", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ClientSteps.cs"];
m0_5 [label="_stateMock = new Mock<JobState>(''SomeReason'')", span="28-28", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", color=green, community=0, file="ClientSteps.cs"];
m0_6 [label="_stateMock.Setup(x => x.StateName).Returns(''Test'')", span="29-29", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", color=green, community=0, file="ClientSteps.cs"];
m0_7 [label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="30-30", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", color=green, community=0, file="ClientSteps.cs"];
m0_8 [label="_client.CreateJob(\r\n                JobSteps.DefaultJobId, \r\n                typeof (TestJob), \r\n                _stateMock.Object, \r\n                _arguments)", span="32-36", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", color=green, community=1, file="ClientSteps.cs"];
m0_9 [label="Exit HangFire.Tests.ClientSteps.WhenICreateAJob()", span="26-26", cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ClientSteps.cs"];
m0_61 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="ClientSteps.cs"];
m0_15 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ClientSteps.cs"];
m0_18 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="ClientSteps.cs"];
m0_16 [label="x.StateName", span="29-29", cluster="lambda expression", color=green, community=0, file="ClientSteps.cs"];
m0_17 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ClientSteps.cs"];
m0_19 [label="x.GetProperties()", span="30-30", cluster="lambda expression", color=green, community=0, file="ClientSteps.cs"];
m0_20 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="ClientSteps.cs"];
m0_28 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="ClientSteps.cs"];
m0_31 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="ClientSteps.cs"];
m0_29 [label="x[''Name'']", span="42-42", cluster="lambda expression", color=green, community=0, file="ClientSteps.cs"];
m0_30 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="ClientSteps.cs"];
m0_32 [label="x[''Value'']", span="42-42", cluster="lambda expression", color=green, community=0, file="ClientSteps.cs"];
m0_33 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="ClientSteps.cs"];
m0_62 [label="x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="79-79", cluster="lambda expression", color=green, community=0, file="ClientSteps.cs"];
m0_63 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="ClientSteps.cs"];
m0_53 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="ClientSteps.cs"];
m0_44 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="ClientSteps.cs"];
m0_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ClientSteps.cs"];
m0_14 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="ClientSteps.cs"];
m0_60 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ClientSteps.cs"];
m0_57 [label="Entry HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="76-76", cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="ClientSteps.cs"];
m0_58 [label="_stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId), \r\n                Times.Once)", span="78-80", cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", color=green, community=1, file="ClientSteps.cs"];
m0_59 [label="Exit HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="76-76", cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="ClientSteps.cs"];
m0_37 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="ClientSteps.cs"];
m0_65 [label="HangFire.Tests.ClientSteps", span="", file="ClientSteps.cs"];
m1_10 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DequeuedJobsWatcher.cs"];
m1_11 [label="Entry HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="DequeuedJobsWatcher.cs"];
m1_12 [label="Assert.IsNotNull(context)", span="29-29", cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="DequeuedJobsWatcher.cs"];
m1_13 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateUnapplied''))", span="31-31", cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="DequeuedJobsWatcher.cs"];
m1_14 [label="Exit HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="DequeuedJobsWatcher.cs"];
m1_0 [label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="DequeuedJobsWatcher.cs"];
m1_1 [label="_name = name", span="16-16", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="DequeuedJobsWatcher.cs"];
m1_2 [label="_results = results", span="17-17", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="DequeuedJobsWatcher.cs"];
m1_3 [label="Exit HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="DequeuedJobsWatcher.cs"];
m1_9 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="DequeuedJobsWatcher.cs"];
m1_8 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="DequeuedJobsWatcher.cs"];
m1_4 [label="Entry HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="DequeuedJobsWatcher.cs"];
m1_5 [label="Assert.IsNotNull(context)", span="22-22", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="DequeuedJobsWatcher.cs"];
m1_6 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="24-24", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="DequeuedJobsWatcher.cs", color=green, community=0];
m1_7 [label="Exit HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="DequeuedJobsWatcher.cs"];
m1_15 [label="HangFire.Tests.TestStateChangedFilter", span="", file="DequeuedJobsWatcher.cs"];
m2_7 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="DictionaryAssert.cs"];
m2_89 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="DictionaryAssert.cs"];
m2_90 [label="AddToSet(key, value, 0.0)", span="157-157", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="DictionaryAssert.cs"];
m2_91 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="DictionaryAssert.cs"];
m2_105 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="DictionaryAssert.cs"];
m2_106 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="183-185", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="DictionaryAssert.cs"];
m2_107 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="DictionaryAssert.cs"];
m2_17 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="DictionaryAssert.cs"];
m2_92 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="DictionaryAssert.cs"];
m2_94 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="169-171", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="DictionaryAssert.cs"];
m2_93 [label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="162-167", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="DictionaryAssert.cs"];
m2_95 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="DictionaryAssert.cs"];
m2_8 [label="Entry Hangfire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22", cluster="Hangfire.States.StateHandlerCollection.StateHandlerCollection()", file="DictionaryAssert.cs"];
m2_71 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="DictionaryAssert.cs"];
m2_72 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="136-138", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="DictionaryAssert.cs"];
m2_73 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="DictionaryAssert.cs"];
m2_10 [label="Entry Hangfire.JobStorage.GetStateHandlers()", span="63-63", cluster="Hangfire.JobStorage.GetStateHandlers()", file="DictionaryAssert.cs"];
m2_126 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="DictionaryAssert.cs"];
m2_0 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="DictionaryAssert.cs"];
m2_1 [label="connection == null", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="DictionaryAssert.cs", color=green, community=0];
m2_5 [label="_connection = connection", span="42-42", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="DictionaryAssert.cs"];
m2_2 [label="throw new ArgumentNullException(''connection'');", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="DictionaryAssert.cs", color=green, community=0];
m2_3 [label="queueProviders == null", span="40-40", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="DictionaryAssert.cs", color=green, community=0];
m2_4 [label="throw new ArgumentNullException(''queueProviders'');", span="40-40", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="DictionaryAssert.cs", color=green, community=0];
m2_6 [label="_queueProviders = queueProviders", span="43-43", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="DictionaryAssert.cs"];
m2_47 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="101-101", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="DictionaryAssert.cs"];
m2_49 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="107-116", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="DictionaryAssert.cs"];
m2_48 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="103-105", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="DictionaryAssert.cs"];
m2_50 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="101-101", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="DictionaryAssert.cs"];
m2_117 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="DictionaryAssert.cs"];
m2_119 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="202-204", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="DictionaryAssert.cs"];
m2_118 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num, [Key] from HangFire.List)\r\ndelete from cte where row_num not between @start and @end and [Key] = @key''", span="197-200", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="DictionaryAssert.cs"];
m2_120 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="DictionaryAssert.cs"];
m2_26 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="207-207", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="DictionaryAssert.cs"];
m2_124 [label="_commandQueue.Enqueue(action)", span="209-209", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="DictionaryAssert.cs"];
m2_125 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="207-207", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="DictionaryAssert.cs"];
m2_45 [label="Entry HangFire.States.IState.SerializeData()", span="27-27", cluster="HangFire.States.IState.SerializeData()", file="DictionaryAssert.cs"];
m2_20 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="DictionaryAssert.cs"];
m2_83 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="DictionaryAssert.cs"];
m2_84 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="150-152", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="DictionaryAssert.cs"];
m2_85 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="DictionaryAssert.cs"];
m2_38 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="81-81", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="DictionaryAssert.cs"];
m2_40 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="88-98", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="DictionaryAssert.cs"];
m2_39 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="83-86", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="DictionaryAssert.cs"];
m2_41 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="81-81", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="DictionaryAssert.cs"];
m2_21 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="DictionaryAssert.cs"];
m2_77 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="DictionaryAssert.cs"];
m2_78 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="143-145", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="DictionaryAssert.cs"];
m2_79 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="DictionaryAssert.cs"];
m2_18 [label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="33-33", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="DictionaryAssert.cs"];
m2_11 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="DictionaryAssert.cs"];
m2_12 [label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="52-54", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="DictionaryAssert.cs"];
m2_15 [label="command(_connection)", span="60-60", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="DictionaryAssert.cs"];
m2_13 [label="_connection.EnlistTransaction(Transaction.Current)", span="56-56", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="DictionaryAssert.cs"];
m2_14 [label=_commandQueue, span="58-58", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="DictionaryAssert.cs"];
m2_16 [label="transaction.Complete()", span="63-63", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="DictionaryAssert.cs"];
m2_22 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="DictionaryAssert.cs"];
m2_64 [label="Entry HangFire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", span="24-24", cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", file="DictionaryAssert.cs"];
m2_30 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="DictionaryAssert.cs"];
m2_9 [label="Entry Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", span="27-27", cluster="Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", file="DictionaryAssert.cs"];
m2_99 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="DictionaryAssert.cs"];
m2_100 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="176-178", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="DictionaryAssert.cs"];
m2_101 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="DictionaryAssert.cs"];
m2_23 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="67-67", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="DictionaryAssert.cs"];
m2_24 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="69-71", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="DictionaryAssert.cs"];
m2_25 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="67-67", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="DictionaryAssert.cs"];
m2_111 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="DictionaryAssert.cs"];
m2_112 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="190-192", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="DictionaryAssert.cs"];
m2_113 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="DictionaryAssert.cs"];
m2_59 [label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="DictionaryAssert.cs"];
m2_19 [label="Hangfire.States.StateMachineFactory", span="", cluster="TransactionOptions.cstr", file="DictionaryAssert.cs"];
m2_121 [label="Entry lambda expression", span="202-204", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_27 [label="Entry lambda expression", span="69-71", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_35 [label="Entry lambda expression", span="76-78", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_42 [label="Entry lambda expression", span="88-98", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_51 [label="Entry lambda expression", span="107-116", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_62 [label="persistentQueue.Enqueue(queue, jobId)", span="124-124", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_61 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_68 [label="Entry lambda expression", span="129-131", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_74 [label="Entry lambda expression", span="136-138", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_80 [label="Entry lambda expression", span="143-145", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_86 [label="Entry lambda expression", span="150-152", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_96 [label="Entry lambda expression", span="169-171", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_102 [label="Entry lambda expression", span="176-178", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_108 [label="Entry lambda expression", span="183-185", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_114 [label="Entry lambda expression", span="190-192", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_28 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="69-71", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_29 [label="Exit lambda expression", span="69-71", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_36 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="76-78", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_37 [label="Exit lambda expression", span="76-78", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_43 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="88-98", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_44 [label="Exit lambda expression", span="88-98", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_52 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="107-116", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_53 [label="Exit lambda expression", span="107-116", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_63 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_69 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="129-131", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_70 [label="Exit lambda expression", span="129-131", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_75 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="136-138", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_76 [label="Exit lambda expression", span="136-138", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_81 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="143-145", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_82 [label="Exit lambda expression", span="143-145", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_87 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="150-152", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_88 [label="Exit lambda expression", span="150-152", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_97 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="169-171", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_98 [label="Exit lambda expression", span="169-171", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_103 [label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="176-178", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_104 [label="Exit lambda expression", span="176-178", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_109 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="183-185", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_110 [label="Exit lambda expression", span="183-185", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_115 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="190-192", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_116 [label="Exit lambda expression", span="190-192", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_122 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="202-204", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_123 [label="Exit lambda expression", span="202-204", cluster="lambda expression", file="DictionaryAssert.cs"];
m2_46 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="DictionaryAssert.cs"];
m2_31 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="DictionaryAssert.cs"];
m2_54 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="DictionaryAssert.cs"];
m2_55 [label="var provider = _queueProviders.GetProvider(queue)", span="121-121", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="DictionaryAssert.cs"];
m2_56 [label="var persistentQueue = provider.GetJobQueue(_connection)", span="122-122", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="DictionaryAssert.cs"];
m2_57 [label="QueueCommand(_ => persistentQueue.Enqueue(queue, jobId))", span="124-124", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="DictionaryAssert.cs"];
m2_58 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="DictionaryAssert.cs"];
m2_60 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="DictionaryAssert.cs"];
m2_65 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="DictionaryAssert.cs"];
m2_66 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="129-131", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="DictionaryAssert.cs"];
m2_67 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="DictionaryAssert.cs"];
m2_32 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="74-74", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="DictionaryAssert.cs"];
m2_33 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="76-78", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="DictionaryAssert.cs"];
m2_34 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="74-74", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="DictionaryAssert.cs"];
m2_127 [label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="DictionaryAssert.cs"];
m2_137 [label=string, span="", file="DictionaryAssert.cs"];
m2_138 [label=string, span="", file="DictionaryAssert.cs"];
m2_139 [label=persistentQueue, span="", file="DictionaryAssert.cs"];
m2_128 [label=string, span="", file="DictionaryAssert.cs"];
m2_129 [label="System.TimeSpan", span="", file="DictionaryAssert.cs"];
m2_130 [label=string, span="", file="DictionaryAssert.cs"];
m2_131 [label=string, span="", file="DictionaryAssert.cs"];
m2_132 [label="HangFire.States.IState", span="", file="DictionaryAssert.cs"];
m2_133 [label=addAndSetStateSql, span="", file="DictionaryAssert.cs"];
m2_134 [label=string, span="", file="DictionaryAssert.cs"];
m2_135 [label="HangFire.States.IState", span="", file="DictionaryAssert.cs"];
m2_136 [label=addStateSql, span="", file="DictionaryAssert.cs"];
m2_140 [label=string, span="", file="DictionaryAssert.cs"];
m2_141 [label=string, span="", file="DictionaryAssert.cs"];
m2_142 [label="System.TimeSpan", span="", file="DictionaryAssert.cs"];
m2_143 [label=string, span="", file="DictionaryAssert.cs"];
m2_144 [label=string, span="", file="DictionaryAssert.cs"];
m2_145 [label="System.TimeSpan", span="", file="DictionaryAssert.cs"];
m2_146 [label=string, span="", file="DictionaryAssert.cs"];
m2_147 [label=string, span="", file="DictionaryAssert.cs"];
m2_148 [label=double, span="", file="DictionaryAssert.cs"];
m2_149 [label=addSql, span="", file="DictionaryAssert.cs"];
m2_150 [label=string, span="", file="DictionaryAssert.cs"];
m2_151 [label=string, span="", file="DictionaryAssert.cs"];
m2_152 [label=string, span="", file="DictionaryAssert.cs"];
m2_153 [label=string, span="", file="DictionaryAssert.cs"];
m2_154 [label=string, span="", file="DictionaryAssert.cs"];
m2_155 [label=string, span="", file="DictionaryAssert.cs"];
m2_156 [label=string, span="", file="DictionaryAssert.cs"];
m2_157 [label=int, span="", file="DictionaryAssert.cs"];
m2_158 [label=int, span="", file="DictionaryAssert.cs"];
m2_159 [label=trimSql, span="", file="DictionaryAssert.cs"];
m3_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="JobClient.cs"];
m3_66 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="JobClient.cs"];
m3_67 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="JobClient.cs"];
m3_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobClient.cs"];
m3_69 [label="HangFire.Client.JobClient", span="", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="JobClient.cs"];
m3_70 [label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="161-161", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="JobClient.cs"];
m3_71 [label="this.ScenarioCleanup()", span="163-163", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="JobClient.cs"];
m3_72 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="JobClient.cs"];
m3_22 [label="var jobParameters = CreateJobParameters(jobType, args)", span="41-41", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", color=green, community=0];
m3_23 [label="var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, jobParameters, state))", span="43-44", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs"];
m3_24 [label="_jobCreator.CreateJob(context)", span="46-46", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m3_25 [label="return jobId;", span="48-48", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m3_26 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="26-26", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m3_27 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", color=red, community=0, file="JobClient.cs"];
m3_28 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JobClient.cs"];
m3_29 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JobClient.cs"];
m3_52 [label="var propertyValue = descriptor.GetValue(obj)", span="74-74", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_53 [label="string value = null", span="75-75", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_54 [label="propertyValue != null", span="77-77", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_55 [label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="81-81", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_56 [label="value = converter.ConvertToInvariantString(propertyValue)", span="82-82", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_57 [label=Exception, span="84-84", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_58 [label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="86-91", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=1];
m3_59 [label="result.Add(descriptor.Name, value)", span="95-95", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_60 [label="return result;", span="98-98", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_61 [label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="67-67", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs"];
m3_62 [label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="JobClient.cs"];
m3_63 [label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="JobClient.cs"];
m3_64 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JobClient.cs"];
m3_65 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JobClient.cs"];
m3_21 [label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="36-38", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs"];
m3_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="JobClient.cs", color=red, community=0];
m3_12 [label="Exit HangFire.Tests.ServerFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", color=green, community=0, file="JobClient.cs"];
m3_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", color=green, community=0, file="JobClient.cs"];
m3_14 [label="Entry HangFire.Tests.ServerFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.ServerFeature.TestInitialize()", color=green, community=0, file="JobClient.cs"];
m3_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Server''))", span="48-49", cluster="HangFire.Tests.ServerFeature.TestInitialize()", color=red, community=0, file="JobClient.cs"];
m3_16 [label="HangFire.Tests.ServerFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.ServerFeature.TestInitialize()", color=green, community=0, file="JobClient.cs"];
m3_17 [label="Exit HangFire.Tests.ServerFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.ServerFeature.TestInitialize()", color=green, community=0, file="JobClient.cs"];
m3_18 [label="Entry HangFire.Tests.ServerFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()", color=green, community=0, file="JobClient.cs"];
m3_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()", color=red, community=0, file="JobClient.cs"];
m3_20 [label="Exit HangFire.Tests.ServerFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()", file="JobClient.cs"];
m3_30 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="JobClient.cs"];
m3_35 [label="this.ScenarioCleanup()", span="85-85", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="JobClient.cs"];
m3_36 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="JobClient.cs"];
m3_37 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobClient.cs"];
m3_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should add itself to the servers set'', ((string[])(null)))", span="77-77", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="JobClient.cs"];
m3_41 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its properties'', ((string[])(null)))", span="94-94", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", color=green, community=0, file="JobClient.cs"];
m3_39 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobClient.cs"];
m3_40 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="JobClient.cs"];
m3_42 [label="this.ScenarioSetup(scenarioInfo)", span="96-96", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="JobClient.cs"];
m3_43 [label="testRunner.When(''the \'Test\' server starts with 5 workers'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="98-98", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="JobClient.cs"];
m3_44 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="100-102", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="JobClient.cs"];
m3_0 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobClient.cs"];
m3_1 [label="redisManager == null", span="15-15", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", color=green, community=0, file="JobClient.cs"];
m3_2 [label="throw new ArgumentNullException(''redisManager'');", span="15-15", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", color=green, community=0, file="JobClient.cs"];
m3_3 [label="_redis = redisManager.GetClient()", span="17-17", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", color=red, community=0, file="JobClient.cs"];
m3_4 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobClient.cs"];
m3_46 [label="table1.AddRow(new string[] {\r\n                        ''StartedAt'',\r\n                        ''<UtcNow timestamp>''})", span="106-108", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="JobClient.cs"];
m3_47 [label="testRunner.Then(''the \'Test\' server\'s properties should contain the following items:'', ((string)(null)), table1, ''Then '')", span="110-110", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="JobClient.cs"];
m3_32 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="JobClient.cs"];
m3_33 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="14-14", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="JobClient.cs"];
m3_34 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobClient.cs"];
m3_45 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClient.cs"];
m3_48 [label="var result = new Dictionary<string, string>()", span="69-69", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_49 [label="obj == null", span="70-70", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_7 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="20-20", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs"];
m3_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobClient.cs"];
m3_38 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="JobClient.cs"];
m3_51 [label="TypeDescriptor.GetProperties(obj)", span="72-72", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", color=green, community=0];
m3_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="JobClient.cs", color=red, community=0];
m3_50 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", color=green, community=0, file="JobClient.cs"];
m3_73 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="JobClient.cs"];
m3_74 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its queues'', ((string[])(null)))", span="172-172", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="JobClient.cs"];
m3_75 [label="this.ScenarioSetup(scenarioInfo)", span="174-174", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="JobClient.cs"];
m3_76 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="JobClient.cs"];
m3_77 [label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server queues'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="178-178", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="JobClient.cs"];
m3_78 [label="this.ScenarioCleanup()", span="180-180", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="JobClient.cs"];
m3_79 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="JobClient.cs"];
m3_9 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="20-20", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs"];
m3_8 [label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="23-23", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs", color=green, community=0];
m3_80 [label="HangFire.Tests.ServerFeature", span="", file="JobClient.cs"];
m4_86 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobCreator.cs"];
m4_52 [label="return _storage.UseTransaction(func, IsolationLevel.ReadUncommitted);", span="107-107", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="JobCreator.cs"];
m4_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobCreator.cs"];
m4_18 [label="Entry lambda expression", span="50-53", cluster="lambda expression", file="JobCreator.cs"];
m4_20 [label="Exit lambda expression", span="50-53", cluster="lambda expression", file="JobCreator.cs"];
m4_21 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="JobCreator.cs"];
m4_19 [label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52", cluster="lambda expression", file="JobCreator.cs"];
m4_22 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobCreator.cs"];
m4_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JobCreator.cs"];
m4_7 [label="Entry Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="40-40", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobCreator.cs"];
m4_8 [label="items == null", span="42-42", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobCreator.cs"];
m4_10 [label="return RenderPartial(new Breadcrumbs(title, items));", span="43-43", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobCreator.cs"];
m4_9 [label="throw new ArgumentNullException(nameof(items));", span="42-42", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobCreator.cs"];
m4_13 [label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", color=red, community=0, file="JobCreator.cs"];
m4_11 [label="Exit Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="40-40", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobCreator.cs"];
m4_12 [label="Entry Hangfire.Dashboard.Pages.Breadcrumbs.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="6-6", cluster="Hangfire.Dashboard.Pages.Breadcrumbs.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobCreator.cs"];
m4_14 [label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46", cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="JobCreator.cs"];
m4_130 [label="Entry Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="JobCreator.cs"];
m4_131 [label="var label = queue != null \r\n                ? $''<a class=\''text-uppercase\'' href=\''{_page.Url.Queue(queue)}\''>{queue}</a>'' \r\n                : $''<span class=\''label label-danger\''><i>{Strings.Common_Unknown}</i></span>''", span="220-222", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="JobCreator.cs"];
m4_132 [label="return new NonEscapedString(label);", span="224-224", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="JobCreator.cs"];
m4_133 [label="Exit Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="JobCreator.cs"];
m4_56 [label=sqlQuery, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="JobCreator.cs"];
m4_58 [label=int, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="JobCreator.cs"];
m4_57 [label=string, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="JobCreator.cs"];
m4_59 [label=int, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="JobCreator.cs"];
m4_134 [label="Entry Hangfire.Dashboard.UrlHelper.Queue(string)", span="68-68", cluster="Hangfire.Dashboard.UrlHelper.Queue(string)", file="JobCreator.cs"];
m4_27 [label="Exit Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="57-57", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="JobCreator.cs"];
m4_28 [label="Entry Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4", cluster="Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="JobCreator.cs"];
m4_29 [label="Entry Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="63-63", cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="JobCreator.cs"];
m4_30 [label="metric == null", span="65-65", cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="JobCreator.cs"];
m4_16 [label="Exit Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46", cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="JobCreator.cs"];
m4_53 [label="Entry Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="JobCreator.cs"];
m4_35 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="JobCreator.cs"];
m4_37 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="JobCreator.cs"];
m4_38 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="84-84", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="JobCreator.cs"];
m4_36 [label="x.Id", span="79-79", cluster="lambda expression", file="JobCreator.cs"];
m4_39 [label="return Enumerable.Empty<int>();", span="86-86", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="JobCreator.cs"];
m4_73 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="JobCreator.cs"];
m4_74 [label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83", cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobCreator.cs"];
m4_42 [label="pager == null", span="77-77", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobCreator.cs"];
m4_43 [label="throw new ArgumentNullException(nameof(pager));", span="77-77", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobCreator.cs"];
m4_44 [label="return RenderPartial(new PerPageSelector(pager));", span="78-78", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobCreator.cs"];
m4_45 [label="Exit Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobCreator.cs"];
m4_17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobCreator.cs"];
m4_78 [label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58", cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="JobCreator.cs"];
m4_34 [label="Entry Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4", cluster="Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="JobCreator.cs"];
m4_15 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="JobCreator.cs"];
m4_40 [label="Entry Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", span="6-6", cluster="Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", file="JobCreator.cs"];
m4_143 [label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="JobCreator.cs"];
m4_144 [label="return new NonEscapedString(StackTraceFormatter.FormatHtml(stackTrace, StackTraceHtmlFragments));", span="252-252", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="JobCreator.cs"];
m4_145 [label="Exit Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="JobCreator.cs"];
m4_149 [label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0", cluster="System.Net.WebUtility.HtmlEncode(string)", file="JobCreator.cs"];
m4_82 [label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="JobCreator.cs"];
m4_147 [label="return WebUtility.HtmlEncode(text);", span="257-257", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="JobCreator.cs"];
m4_148 [label="Exit Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="JobCreator.cs"];
m4_54 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="JobCreator.cs"];
m4_55 [label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span="", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="JobCreator.cs"];
m4_0 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="JobCreator.cs"];
m4_2 [label="throw new ArgumentNullException(''storage'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="JobCreator.cs"];
m4_3 [label="_storage = storage", span="39-39", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="JobCreator.cs"];
m4_1 [label="storage == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="JobCreator.cs"];
m4_4 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="JobCreator.cs"];
m4_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JobCreator.cs"];
m4_24 [label="Entry lambda expression", span="52-52", cluster="lambda expression", color=green, community=0, file="JobCreator.cs"];
m4_25 [label="(string) x.Queue", span="52-52", cluster="lambda expression", color=green, community=0, file="JobCreator.cs"];
m4_26 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="JobCreator.cs"];
m4_87 [label="Entry Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="JobCreator.cs"];
m4_88 [label="return Raw($''<span data-moment-title=\''{JobHelper.ToTimestamp(time)}\''>{value}</span>'');", span="152-152", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="JobCreator.cs"];
m4_89 [label="Exit Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="JobCreator.cs"];
m4_61 [label=string, span="", cluster="string.Substring(int, int)", file="JobCreator.cs"];
m4_135 [label="Entry Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobCreator.cs"];
m4_138 [label="return new NonEscapedString(\r\n                $''<span class=\''labe label-defult text-uppercase\'' title=\''{serverId}\''>{shortenedId}</span>'');", span="234-235", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobCreator.cs"];
m4_137 [label="var shortenedId = parts.Length > 1\r\n                ? String.Join('':'', parts.Take(parts.Length - 1))\r\n                : serverId", span="230-232", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobCreator.cs"];
m4_136 [label="var parts = serverId.Split(':')", span="229-229", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobCreator.cs"];
m4_139 [label="Exit Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobCreator.cs"];
m4_62 [label=sqlQuery, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="JobCreator.cs"];
m4_63 [label="job == null", span="102-102", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="JobCreator.cs"];
m4_65 [label="return job.ToString();", span="122-122", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="JobCreator.cs"];
m4_64 [label="return Strings.Common_CannotFindTargetMethod;", span="104-104", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="JobCreator.cs"];
m4_66 [label="Exit Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="100-100", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="JobCreator.cs"];
m4_51 [label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22", cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="JobCreator.cs"];
m4_141 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="JobCreator.cs"];
m4_142 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="JobCreator.cs"];
m4_60 [label=sqlQuery, span="", cluster="System.Guid.TryParse(string, out System.Guid)", file="JobCreator.cs"];
m4_31 [label="Entry lambda expression", span="73-81", cluster="lambda expression", file="JobCreator.cs"];
m4_32 [label="return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="75-80", cluster="lambda expression", file="JobCreator.cs"];
m4_33 [label="Exit lambda expression", span="73-81", cluster="lambda expression", file="JobCreator.cs"];
m4_83 [label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="JobCreator.cs"];
m4_84 [label="return Raw($''<span data-moment=\''{JobHelper.ToTimestamp(value)}\''>{value}</span>'');", span="147-147", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="JobCreator.cs"];
m4_85 [label="Exit Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="JobCreator.cs"];
m4_46 [label="Entry Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", span="6-6", cluster="Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobCreator.cs"];
m4_47 [label="partialPage.Assign(_page)", span="83-83", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="JobCreator.cs"];
m4_48 [label="return new NonEscapedString(partialPage.ToString());", span="84-84", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="JobCreator.cs"];
m4_49 [label="Exit Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="JobCreator.cs"];
m4_140 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="JobCreator.cs"];
m4_68 [label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobCreator.cs"];
m4_70 [label="return Raw($''<em>{Strings.Common_NoState}</em>'');", span="129-129", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobCreator.cs"];
m4_71 [label="return Raw($''<span class=\''label label-default\'' style=\''background-color: {JobHistoryRenderer.GetForegroundStateColor(stateName)};\''>{stateName}</span>'');", span="132-132", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobCreator.cs"];
m4_69 [label="String.IsNullOrWhiteSpace(stateName)", span="127-127", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobCreator.cs"];
m4_72 [label="Exit Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobCreator.cs"];
m4_41 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobCreator.cs"];
m4_75 [label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="JobCreator.cs"];
m4_76 [label="return Raw($''<a href=\''{_page.Url.JobDetails(jobId)}\''>{JobId(jobId)}</a>'');", span="137-137", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="JobCreator.cs"];
m4_77 [label="Exit Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="JobCreator.cs"];
m4_79 [label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="JobCreator.cs"];
m4_80 [label="return Raw($''<a class=\''job-method\'' href=\''{_page.Url.JobDetails(jobId)}\''>{HtmlEncode(JobName(job))}</a>'');", span="142-142", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="JobCreator.cs"];
m4_81 [label="Exit Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="JobCreator.cs"];
m4_50 [label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="74-74", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobCreator.cs"];
m4_146 [label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="JobCreator.cs"];
m4_67 [label="Entry Hangfire.Common.Job.ToString()", span="179-179", cluster="Hangfire.Common.Job.ToString()", file="JobCreator.cs"];
m4_150 [label="Hangfire.Dashboard.HtmlHelper", span="", file="JobCreator.cs"];
m6_6 [label="Entry HangFire.Storage.IMonitoringApi.GetStatistics()", span="27-27", cluster="HangFire.Storage.IMonitoringApi.GetStatistics()", file="JobStorage.cs"];
m6_7 [label="Exit HangFire.Storage.IMonitoringApi.GetStatistics()", span="27-27", cluster="HangFire.Storage.IMonitoringApi.GetStatistics()", file="JobStorage.cs"];
m6_10 [label="Entry HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", span="30-30", cluster="HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", file="JobStorage.cs"];
m6_11 [label="Exit HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", span="30-30", cluster="HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", file="JobStorage.cs"];
m6_38 [label="Entry HangFire.Storage.IMonitoringApi.FailedByDatesCount()", span="48-48", cluster="HangFire.Storage.IMonitoringApi.FailedByDatesCount()", file="JobStorage.cs"];
m6_39 [label="Exit HangFire.Storage.IMonitoringApi.FailedByDatesCount()", span="48-48", cluster="HangFire.Storage.IMonitoringApi.FailedByDatesCount()", file="JobStorage.cs"];
m6_4 [label="Entry HangFire.Storage.IMonitoringApi.JobDetails(string)", span="26-26", cluster="HangFire.Storage.IMonitoringApi.JobDetails(string)", file="JobStorage.cs"];
m6_5 [label="Exit HangFire.Storage.IMonitoringApi.JobDetails(string)", span="26-26", cluster="HangFire.Storage.IMonitoringApi.JobDetails(string)", file="JobStorage.cs"];
m6_34 [label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45", cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="JobStorage.cs"];
m6_35 [label="Exit HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45", cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="JobStorage.cs"];
m6_32 [label="Entry HangFire.Storage.IMonitoringApi.SucceededListCount()", span="44-44", cluster="HangFire.Storage.IMonitoringApi.SucceededListCount()", file="JobStorage.cs"];
m6_33 [label="Exit HangFire.Storage.IMonitoringApi.SucceededListCount()", span="44-44", cluster="HangFire.Storage.IMonitoringApi.SucceededListCount()", file="JobStorage.cs"];
m6_42 [label="Entry HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", span="50-50", cluster="HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", file="JobStorage.cs"];
m6_43 [label="Exit HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", span="50-50", cluster="HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", file="JobStorage.cs"];
m6_18 [label="Entry HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35", cluster="HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", file="JobStorage.cs"];
m6_19 [label="Exit HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35", cluster="HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", file="JobStorage.cs"];
m6_8 [label="Entry HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", span="29-29", cluster="HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", file="JobStorage.cs"];
m6_9 [label="Exit HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", span="29-29", cluster="HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", file="JobStorage.cs"];
m6_0 [label="Entry HangFire.Storage.IMonitoringApi.Queues()", span="24-24", cluster="HangFire.Storage.IMonitoringApi.Queues()", file="JobStorage.cs"];
m6_1 [label="Exit HangFire.Storage.IMonitoringApi.Queues()", span="24-24", cluster="HangFire.Storage.IMonitoringApi.Queues()", file="JobStorage.cs"];
m6_12 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32", cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="JobStorage.cs"];
m6_13 [label="Exit HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32", cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="JobStorage.cs"];
m6_14 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33", cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="JobStorage.cs"];
m6_15 [label="Exit HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33", cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="JobStorage.cs"];
m6_20 [label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36", cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="JobStorage.cs"];
m6_21 [label="Exit HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36", cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="JobStorage.cs"];
m6_28 [label="Entry HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41", cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="JobStorage.cs"];
m6_29 [label="Exit HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41", cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="JobStorage.cs"];
m6_24 [label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39", cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="JobStorage.cs"];
m6_25 [label="Exit HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39", cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="JobStorage.cs"];
m6_22 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38", cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="JobStorage.cs"];
m6_23 [label="Exit HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38", cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="JobStorage.cs"];
m6_2 [label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25", cluster="HangFire.Storage.IMonitoringApi.Servers()", file="JobStorage.cs"];
m6_3 [label="Exit HangFire.Storage.IMonitoringApi.Servers()", span="25-25", cluster="HangFire.Storage.IMonitoringApi.Servers()", file="JobStorage.cs"];
m6_16 [label="Entry HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", span="34-34", cluster="HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", file="JobStorage.cs"];
m6_17 [label="Exit HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", span="34-34", cluster="HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", file="JobStorage.cs"];
m6_40 [label="Entry HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", span="49-49", cluster="HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", file="JobStorage.cs"];
m6_41 [label="Exit HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", span="49-49", cluster="HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", file="JobStorage.cs"];
m6_36 [label="Entry HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47", cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="JobStorage.cs"];
m6_37 [label="Exit HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47", cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="JobStorage.cs"];
m6_26 [label="Entry HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40", cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="JobStorage.cs"];
m6_27 [label="Exit HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40", cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="JobStorage.cs"];
m6_30 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42", cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="JobStorage.cs"];
m6_31 [label="Exit HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42", cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="JobStorage.cs"];
m7_86 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="Perform.cs"];
m7_52 [label="Entry Hangfire.Dashboard.RazorPage.ToString()", span="68-68", cluster="Hangfire.Dashboard.RazorPage.ToString()", file="Perform.cs"];
m7_5 [label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="43-43", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_18 [label="Entry Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", span="51-51", cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", file="Perform.cs"];
m7_19 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="Perform.cs"];
m7_20 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="75-75", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="Perform.cs"];
m7_21 [label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0", cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="Perform.cs"];
m7_22 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="Perform.cs"];
m7_56 [label="Entry Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", span="92-92", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="Perform.cs"];
m7_57 [label="Guid guid", span="94-94", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="Perform.cs"];
m7_58 [label="return new NonEscapedString(Guid.TryParse(jobId, out guid)\r\n                ? (shorten ? jobId.Substring(0, 8) + ''…'' : jobId)\r\n                : $''#{jobId}'');", span="95-97", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="Perform.cs"];
m7_59 [label="Exit Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", span="92-92", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="Perform.cs"];
m7_119 [label="Entry System.Text.StringBuilder.Append(int)", span="0-0", cluster="System.Text.StringBuilder.Append(int)", file="Perform.cs"];
m7_130 [label="Entry Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="Perform.cs"];
m7_131 [label="var label = queue != null \r\n                ? $''<a class=\''text-uppercase\'' href=\''{_page.Url.Queue(queue)}\''>{queue}</a>'' \r\n                : $''<span class=\''label label-danger\''><i>{Strings.Common_Unknown}</i></span>''", span="220-222", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="Perform.cs"];
m7_132 [label="return new NonEscapedString(label);", span="224-224", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="Perform.cs"];
m7_133 [label="Exit Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="Perform.cs"];
m7_26 [label="return RenderPartial(new BlockMetric(metric));", span="60-60", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="Perform.cs"];
m7_27 [label="Exit Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="57-57", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="Perform.cs"];
m7_28 [label="Entry Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4", cluster="Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="Perform.cs"];
m7_134 [label="Entry Hangfire.Dashboard.UrlHelper.Queue(string)", span="68-68", cluster="Hangfire.Dashboard.UrlHelper.Queue(string)", file="Perform.cs"];
m7_39 [label="Exit Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69", cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="Perform.cs"];
m7_25 [label="throw new ArgumentNullException(nameof(metric));", span="59-59", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="Perform.cs"];
m7_35 [label="return reader.ReadToEnd();", span="95-95", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="Perform.cs"];
m7_36 [label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="Perform.cs"];
m7_37 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="Perform.cs"];
m7_38 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Perform.cs"];
m7_73 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="Perform.cs"];
m7_117 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="Perform.cs"];
m7_126 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="Perform.cs"];
m7_7 [label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 5;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="50-50", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_8 [label="var i = 0", span="52-52", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_9 [label="i < RetryAttempts", span="52-52", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_10 [label="connection.Execute(script)", span="56-56", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_11 [label=SqlException, span="59-59", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_74 [label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83", cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="Perform.cs"];
m7_122 [label="Entry Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="Perform.cs"];
m7_123 [label="return String.Join('', '', properties.Select(x => $''{x.Key}: \''{x.Value}\''''));", span="215-215", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="Perform.cs"];
m7_124 [label="Exit Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="Perform.cs"];
m7_23 [label="Entry Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="57-57", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="Perform.cs"];
m7_17 [label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_78 [label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58", cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="Perform.cs"];
m7_29 [label="Entry Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="63-63", cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="Perform.cs"];
m7_14 [label="throw;", span="67-67", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs", color=green, community=0];
m7_15 [label="i++", span="52-52", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_16 [label="Log.Info(''Hangfire SQL objects installed.'')", span="72-72", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs", color=green, community=0];
m7_116 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="Perform.cs"];
m7_143 [label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="Perform.cs"];
m7_144 [label="return new NonEscapedString(StackTraceFormatter.FormatHtml(stackTrace, StackTraceHtmlFragments));", span="252-252", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="Perform.cs"];
m7_145 [label="Exit Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="Perform.cs"];
m7_149 [label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0", cluster="System.Net.WebUtility.HtmlEncode(string)", file="Perform.cs"];
m7_82 [label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="Perform.cs"];
m7_147 [label="return WebUtility.HtmlEncode(text);", span="257-257", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="Perform.cs"];
m7_148 [label="Exit Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="Perform.cs"];
m7_121 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="Perform.cs"];
m7_53 [label="Entry Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="Perform.cs"];
m7_54 [label="return new NonEscapedString(value);", span="89-89", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="Perform.cs"];
m7_55 [label="Exit Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="Perform.cs"];
m7_0 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_1 [label="connection == null", span="37-37", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs", color=green, community=0];
m7_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs", color=green, community=0];
m7_3 [label="Log.Info(''Start installing Hangfire SQL objects...'')", span="39-39", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs", color=green, community=0];
m7_4 [label="!IsSqlEditionSupported(connection)", span="41-41", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_24 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="Perform.cs"];
m7_87 [label="Entry Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="Perform.cs"];
m7_88 [label="return Raw($''<span data-moment-title=\''{JobHelper.ToTimestamp(time)}\''>{value}</span>'');", span="152-152", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="Perform.cs"];
m7_89 [label="Exit Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="Perform.cs"];
m7_6 [label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''Hangfire.SqlServer.Install.sql'')", span="46-48", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_61 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="Perform.cs"];
m7_135 [label="Entry Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="Perform.cs"];
m7_136 [label="var parts = serverId.Split(':')", span="229-229", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="Perform.cs"];
m7_137 [label="var shortenedId = parts.Length > 1\r\n                ? String.Join('':'', parts.Take(parts.Length - 1))\r\n                : serverId", span="230-232", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="Perform.cs"];
m7_138 [label="return new NonEscapedString(\r\n                $''<span class=\''labe label-defult text-uppercase\'' title=\''{serverId}\''>{shortenedId}</span>'');", span="234-235", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="Perform.cs"];
m7_139 [label="Exit Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="Perform.cs"];
m7_62 [label="Entry Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="100-100", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="Perform.cs"];
m7_63 [label="job == null", span="102-102", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="Perform.cs"];
m7_65 [label="return job.ToString();", span="122-122", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="Perform.cs"];
m7_64 [label="return Strings.Common_CannotFindTargetMethod;", span="104-104", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="Perform.cs"];
m7_66 [label="Exit Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="100-100", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="Perform.cs"];
m7_142 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Perform.cs"];
m7_90 [label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_91 [label="duration == null", span="157-157", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_94 [label=displaySign, span="160-160", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_95 [label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", span="162-162", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_96 [label="duration = duration.Value.Duration()", span="165-165", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_92 [label="return null;", span="157-157", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_93 [label="var builder = new StringBuilder()", span="159-159", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_98 [label="builder.Append($''{duration.Value.Days}d '')", span="169-169", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_100 [label="builder.Append($''{duration.Value.Hours}h '')", span="174-174", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_102 [label="builder.Append($''{duration.Value.Minutes}m '')", span="179-179", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_105 [label="builder.Append(duration.Value.Seconds)", span="186-186", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_107 [label="builder.Append($''.{duration.Value.Milliseconds}'')", span="189-189", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_108 [label="builder.Append(''s '')", span="192-192", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_110 [label="builder.Append($''{duration.Value.Milliseconds}ms '')", span="198-198", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_111 [label="builder.Length <= 1", span="203-203", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_112 [label="builder.Append('' <1ms '')", span="205-205", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_113 [label="builder.Remove(builder.Length - 1, 1)", span="208-208", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_114 [label="return builder.ToString();", span="210-210", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_97 [label="duration.Value.Days > 0", span="167-167", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_99 [label="duration.Value.Hours > 0", span="172-172", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_101 [label="duration.Value.Minutes > 0", span="177-177", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_103 [label="duration.Value.TotalHours < 1", span="182-182", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_104 [label="duration.Value.Seconds > 0", span="184-184", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_106 [label="duration.Value.Milliseconds > 0", span="187-187", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_109 [label="duration.Value.Milliseconds > 0", span="196-196", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_115 [label="Exit Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="Perform.cs"];
m7_141 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="Perform.cs"];
m7_60 [label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0", cluster="System.Guid.TryParse(string, out System.Guid)", file="Perform.cs"];
m7_12 [label="ex.ErrorCode == 1205", span="61-61", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="Perform.cs"];
m7_13 [label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="Perform.cs"];
m7_40 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="Perform.cs"];
m7_30 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="Perform.cs"];
m7_31 [label="var stream = assembly.GetManifestResourceStream(resourceName)", span="83-83", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="Perform.cs"];
m7_32 [label="stream == null", span="85-85", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="Perform.cs"];
m7_33 [label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="87-90", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="Perform.cs"];
m7_83 [label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="Perform.cs"];
m7_84 [label="return Raw($''<span data-moment=\''{JobHelper.ToTimestamp(value)}\''>{value}</span>'');", span="147-147", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="Perform.cs"];
m7_85 [label="Exit Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="Perform.cs"];
m7_118 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="Perform.cs"];
m7_34 [label="Entry Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4", cluster="Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="Perform.cs"];
m7_51 [label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22", cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="Perform.cs"];
m7_127 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="Perform.cs"];
m7_128 [label="$''{x.Key}: \''{x.Value}\''''", span="215-215", cluster="lambda expression", file="Perform.cs"];
m7_129 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="Perform.cs"];
m7_125 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Perform.cs"];
m7_140 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="Perform.cs"];
m7_68 [label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="Perform.cs"];
m7_69 [label="String.IsNullOrWhiteSpace(stateName)", span="127-127", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="Perform.cs"];
m7_71 [label="return Raw($''<span class=\''label label-default\'' style=\''background-color: {JobHistoryRenderer.GetForegroundStateColor(stateName)};\''>{stateName}</span>'');", span="132-132", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="Perform.cs"];
m7_70 [label="return Raw($''<em>{Strings.Common_NoState}</em>'');", span="129-129", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="Perform.cs"];
m7_72 [label="Exit Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="Perform.cs"];
m7_41 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="Perform.cs"];
m7_42 [label="pager == null", span="77-77", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="Perform.cs"];
m7_43 [label="throw new ArgumentNullException(nameof(pager));", span="77-77", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="Perform.cs"];
m7_44 [label="return RenderPartial(new PerPageSelector(pager));", span="78-78", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="Perform.cs"];
m7_45 [label="Exit Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="Perform.cs"];
m7_75 [label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="Perform.cs"];
m7_76 [label="return Raw($''<a href=\''{_page.Url.JobDetails(jobId)}\''>{JobId(jobId)}</a>'');", span="137-137", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="Perform.cs"];
m7_77 [label="Exit Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="Perform.cs"];
m7_79 [label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="Perform.cs"];
m7_80 [label="return Raw($''<a class=\''job-method\'' href=\''{_page.Url.JobDetails(jobId)}\''>{HtmlEncode(JobName(job))}</a>'');", span="142-142", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="Perform.cs"];
m7_81 [label="Exit Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="Perform.cs"];
m7_50 [label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="74-74", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="Perform.cs"];
m7_67 [label="Entry Hangfire.Common.Job.ToString()", span="179-179", cluster="Hangfire.Common.Job.ToString()", file="Perform.cs"];
m7_146 [label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="Perform.cs"];
m7_120 [label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0", cluster="System.Text.StringBuilder.Remove(int, int)", file="Perform.cs"];
m7_47 [label="partialPage.Assign(_page)", span="83-83", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="Perform.cs"];
m7_48 [label="return new NonEscapedString(partialPage.ToString());", span="84-84", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="Perform.cs"];
m7_49 [label="Exit Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="Perform.cs"];
m7_46 [label="Entry Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", span="6-6", cluster="Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", file="Perform.cs"];
m7_150 [label="Hangfire.Dashboard.HtmlHelper", span="", file="Perform.cs"];
m8_33 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="PrefetchJobFetcher.cs"];
m8_18 [label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Reset()", file="PrefetchJobFetcher.cs"];
m8_8 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="PrefetchJobFetcher.cs"];
m8_17 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_37 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="PrefetchJobFetcher.cs"];
m8_6 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="PrefetchJobFetcher.cs"];
m8_7 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="PrefetchJobFetcher.cs"];
m8_32 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="PrefetchJobFetcher.cs"];
m8_20 [label="Entry HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_21 [label="_cts != null", span="67-67", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_22 [label="_cts.Cancel()", span="69-69", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_23 [label=_items, span="71-71", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_24 [label="Monitor.Pulse(_items)", span="73-73", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_25 [label="_prefetchThread.Join()", span="76-76", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_26 [label="RequeuePrefetched()", span="78-78", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_27 [label="_innerFetcher.Dispose()", span="80-80", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_28 [label="_jobIsReady.Dispose()", span="82-82", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_29 [label="_cts.Dispose()", span="83-83", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_30 [label="_cts = null", span="84-84", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_31 [label="Exit HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_63 [label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26", cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_65 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="PrefetchJobFetcher.cs"];
m8_0 [label="Entry HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="25-25", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs"];
m8_1 [label="_innerFetcher = innerFetcher", span="27-27", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs"];
m8_2 [label="_count = count", span="28-28", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs"];
m8_3 [label="_prefetchThread = new Thread(Prefetch)\r\n                {\r\n                    Name = String.Format(''HangFire.Prefetch.{0}'', ''queue''),\r\n                    IsBackground = true\r\n                }", span="30-34", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs"];
m8_4 [label="_prefetchThread.Start()", span="35-35", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs"];
m8_5 [label="Exit HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="25-25", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs"];
m8_34 [label="Entry HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs"];
m8_41 [label="JobFetcher.RemoveFromFetchedQueue(_innerFetcher.Redis, payload.Id, _innerFetcher.Queue)", span="97-97", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m8_39 [label=_items, span="94-94", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs"];
m8_40 [label="JobState.Apply(_innerFetcher.Redis, payload.Id, enqueuedState)", span="96-96", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs"];
m8_38 [label="var enqueuedState = new EnqueuedState(''Re-queue prefetched job.'', _innerFetcher.Queue)", span="92-92", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs"];
m8_43 [label="_logger.Error(''An exception occured while trying to re-queue prefetched jobs. Some prefetched jobs may remain in the dequeue list.'', ex)", span="102-102", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs"];
m8_42 [label=Exception, span="100-100", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs"];
m8_44 [label="Exit HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs"];
m8_49 [label="Entry HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_51 [label=_items, span="112-112", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_52 [label="_items.Count >= _count && !_cts.Token.IsCancellationRequested", span="114-114", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_53 [label="Monitor.Wait(_items)", span="116-116", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_54 [label="var payload = _innerFetcher.DequeueJob(_cts.Token)", span="120-120", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_55 [label=_items, span="122-122", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_56 [label="_items.Add(payload)", span="124-124", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_57 [label="_jobIsReady.Set()", span="126-126", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_60 [label="_logger.Fatal(''Unexpected exception caught. Jobs will not be fetched.'', ex)", span="135-135", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_50 [label=true, span="110-110", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_59 [label=Exception, span="133-133", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_58 [label=OperationCanceledException, span="130-130", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_61 [label="Exit HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs"];
m8_9 [label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_10 [label="var payload = _items.Take(cancellationToken)", span="50-50", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_11 [label=_items, span="52-52", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_12 [label="_items.Count == 0", span="54-54", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_13 [label="_jobIsReady.Reset()", span="56-56", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_14 [label="Monitor.Pulse(_items)", span="59-59", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_15 [label="return payload;", span="62-62", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_16 [label="Exit HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m8_45 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="PrefetchJobFetcher.cs"];
m8_47 [label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="PrefetchJobFetcher.cs"];
m8_64 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="PrefetchJobFetcher.cs"];
m8_66 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="PrefetchJobFetcher.cs"];
m8_35 [label="Entry HangFire.Server.JobFetcher.Dispose()", span="81-81", cluster="HangFire.Server.JobFetcher.Dispose()", file="PrefetchJobFetcher.cs"];
m8_46 [label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="PrefetchJobFetcher.cs"];
m8_62 [label="Entry System.Threading.Monitor.Wait(object)", span="0-0", cluster="System.Threading.Monitor.Wait(object)", file="PrefetchJobFetcher.cs"];
m8_48 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="PrefetchJobFetcher.cs"];
m8_19 [label="Entry System.Threading.Monitor.Pulse(object)", span="0-0", cluster="System.Threading.Monitor.Pulse(object)", file="PrefetchJobFetcher.cs"];
m8_36 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()", file="PrefetchJobFetcher.cs"];
m8_67 [label="HangFire.Server.PrefetchJobFetcher", span="", file="PrefetchJobFetcher.cs"];
m9_28 [label="StaticMethod()", span="39-39", cluster="lambda expression", file="SchedulePoller.cs"];
m9_29 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="SchedulePoller.cs"];
m9_30 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="SchedulePoller.cs"];
m9_31 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="SchedulePoller.cs"];
m9_157 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="SchedulePoller.cs"];
m9_91 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="SchedulePoller.cs"];
m9_92 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="91-91", cluster="lambda expression", file="SchedulePoller.cs"];
m9_93 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="SchedulePoller.cs"];
m9_94 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", span="104-104", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs"];
m9_95 [label="var filter = CreateFilter()", span="106-106", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs"];
m9_96 [label="Assert.Throws<ArgumentNullException>(() => filter.OnPerformed(null))", span="108-108", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs"];
m9_97 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", span="104-104", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs"];
m9_79 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns((string)null)", span="90-90", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="SchedulePoller.cs"];
m9_49 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="SchedulePoller.cs"];
m9_50 [label="Entry lambda expression", span="63-63", cluster="lambda expression", color=green, community=0, file="SchedulePoller.cs"];
m9_51 [label="x.Method()", span="63-63", cluster="lambda expression", color=red, community=0, file="SchedulePoller.cs"];
m9_52 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="SchedulePoller.cs"];
m9_15 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="SchedulePoller.cs"];
m9_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="SchedulePoller.cs"];
m9_17 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="SchedulePoller.cs"];
m9_18 [label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24", cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="SchedulePoller.cs"];
m9_19 [label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="SchedulePoller.cs"];
m9_20 [label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="SchedulePoller.cs"];
m9_21 [label="Entry PerformContext.cstr", span="", cluster="PerformContext.cstr", file="SchedulePoller.cs"];
m9_22 [label="Entry HangFire.Server.PerformingContext.PerformingContext(HangFire.Server.PerformContext)", span="24-24", cluster="HangFire.Server.PerformingContext.PerformingContext(HangFire.Server.PerformContext)", file="SchedulePoller.cs"];
m9_229 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Dispose()", span="278-278", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Dispose()", file="SchedulePoller.cs"];
m9_230 [label="_disposed = true", span="280-280", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Dispose()", file="SchedulePoller.cs"];
m9_231 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Dispose()", span="278-278", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Dispose()", file="SchedulePoller.cs"];
m9_78 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="SchedulePoller.cs"];
m9_80 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_83 [label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="114-114", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_84 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="115-115", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_81 [label="_methodInvoked = false", span="111-111", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_82 [label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="112-112", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_85 [label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_86 [label="var performer = CreatePerformer()", span="118-118", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_87 [label="performer.Perform(_context.Object)", span="121-121", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_216 [label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571", cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="SchedulePoller.cs"];
m9_238 [label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24", cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="SchedulePoller.cs"];
m9_242 [label="_methodInvoked = true", span="303-303", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="SchedulePoller.cs"];
m9_243 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="SchedulePoller.cs"];
m9_112 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", span="112-112", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="SchedulePoller.cs"];
m9_232 [label="_methodInvoked = true", span="285-285", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="SchedulePoller.cs"];
m9_233 [label="Assert.Null(argument)", span="286-286", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="SchedulePoller.cs"];
m9_234 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="SchedulePoller.cs"];
m9_5 [label="var createContext = new CreateContext(\r\n                _connection.Object, stateMachineFactory.Object, job, state.Object)", span="29-30", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_119 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="SchedulePoller.cs"];
m9_120 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="SchedulePoller.cs"];
m9_121 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SchedulePoller.cs"];
m9_124 [label="x.ActivateJob(It.IsAny<Type>())", span="162-162", cluster="lambda expression", file="SchedulePoller.cs"];
m9_125 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="SchedulePoller.cs"];
m9_126 [label="Entry Unk.ActivateJob", span="", cluster="Unk.ActivateJob", file="SchedulePoller.cs"];
m9_122 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="SchedulePoller.cs"];
m9_123 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="SchedulePoller.cs"];
m9_127 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="SchedulePoller.cs"];
m9_128 [label="InstanceMethod()", span="164-164", cluster="lambda expression", file="SchedulePoller.cs"];
m9_129 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="SchedulePoller.cs"];
m9_190 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SchedulePoller.cs"];
m9_191 [label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SchedulePoller.cs"];
m9_192 [label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SchedulePoller.cs"];
m9_193 [label="var performer = CreatePerformer()", span="229-229", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SchedulePoller.cs"];
m9_194 [label="Assert.Throws<OperationCanceledException>(\r\n                () => performer.Perform(_context.Object))", span="232-233", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SchedulePoller.cs"];
m9_195 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SchedulePoller.cs"];
m9_101 [label="Entry HangFire.PreserveCultureAttribute.OnPerformed(HangFire.Server.PerformedContext)", span="62-62", cluster="HangFire.PreserveCultureAttribute.OnPerformed(HangFire.Server.PerformedContext)", file="SchedulePoller.cs"];
m9_239 [label="_methodInvoked = true", span="296-296", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="SchedulePoller.cs"];
m9_240 [label="Assert.Equal(SomeDateTime, argument)", span="298-298", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="SchedulePoller.cs"];
m9_241 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="SchedulePoller.cs"];
m9_24 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="SchedulePoller.cs"];
m9_251 [label="return new CoreBackgroundJobPerformer(_activator.Object);", span="321-321", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="SchedulePoller.cs"];
m9_252 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="SchedulePoller.cs"];
m9_38 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", span="51-51", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="SchedulePoller.cs"];
m9_102 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="SchedulePoller.cs"];
m9_103 [label="_methodInvoked = false", span="146-146", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="SchedulePoller.cs"];
m9_104 [label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="SchedulePoller.cs"];
m9_107 [label="Assert.True(_methodInvoked)", span="154-154", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="SchedulePoller.cs"];
m9_108 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="SchedulePoller.cs"];
m9_109 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="SchedulePoller.cs"];
m9_105 [label="var performer = CreatePerformer()", span="149-149", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="SchedulePoller.cs"];
m9_106 [label="performer.Perform(_context.Object)", span="151-151", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="SchedulePoller.cs"];
m9_110 [label="NullArgumentMethod(null)", span="147-147", cluster="lambda expression", file="SchedulePoller.cs"];
m9_111 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="SchedulePoller.cs"];
m9_37 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="SchedulePoller.cs"];
m9_57 [label="var performer = CreatePerformer()", span="77-77", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="SchedulePoller.cs"];
m9_65 [label="Assert.Equal(''ru-RU'', Thread.CurrentThread.CurrentCulture.Name)", span="83-83", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="SchedulePoller.cs"];
m9_66 [label="Assert.Equal(''ru-RU'', Thread.CurrentThread.CurrentUICulture.Name)", span="84-84", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="SchedulePoller.cs"];
m9_67 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", span="72-72", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="SchedulePoller.cs"];
m9_68 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SchedulePoller.cs"];
m9_69 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SchedulePoller.cs"];
m9_71 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="SchedulePoller.cs"];
m9_70 [label="Entry HangFire.PreserveCultureAttribute.OnPerforming(HangFire.Server.PerformingContext)", span="42-42", cluster="HangFire.PreserveCultureAttribute.OnPerforming(HangFire.Server.PerformingContext)", file="SchedulePoller.cs"];
m9_72 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="74-74", cluster="lambda expression", file="SchedulePoller.cs"];
m9_73 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="SchedulePoller.cs"];
m9_74 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="SchedulePoller.cs"];
m9_75 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="SchedulePoller.cs"];
m9_42 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", color=green, community=0, file="SchedulePoller.cs"];
m9_41 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="SchedulePoller.cs"];
m9_43 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="SchedulePoller.cs"];
m9_44 [label="_disposed = false", span="62-62", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="SchedulePoller.cs", color=red, community=0];
m9_40 [label="x.InstanceMethod()", span="51-51", cluster="lambda expression", file="SchedulePoller.cs"];
m9_39 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="SchedulePoller.cs"];
m9_45 [label="_context.BackgroundJob.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="SchedulePoller.cs", color=red, community=0];
m9_113 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="SchedulePoller.cs"];
m9_114 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="114-114", cluster="lambda expression", file="SchedulePoller.cs"];
m9_115 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="SchedulePoller.cs"];
m9_116 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="SchedulePoller.cs"];
m9_117 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="115-115", cluster="lambda expression", file="SchedulePoller.cs"];
m9_118 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="SchedulePoller.cs"];
m9_46 [label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", color=red, community=0, file="SchedulePoller.cs"];
m9_47 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", color=red, community=0, file="SchedulePoller.cs"];
m9_48 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SchedulePoller.cs"];
m9_98 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="SchedulePoller.cs"];
m9_12 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="22-22", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_13 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SchedulePoller.cs"];
m9_14 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SchedulePoller.cs"];
m9_27 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", span="145-145", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", file="SchedulePoller.cs"];
m9_61 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="77-77", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="SchedulePoller.cs"];
m9_62 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", span="78-78", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="SchedulePoller.cs"];
m9_63 [label="var filter = CreateFilter()", span="80-80", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="SchedulePoller.cs"];
m9_99 [label="filter.OnPerformed(null)", span="108-108", cluster="lambda expression", file="SchedulePoller.cs"];
m9_100 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="SchedulePoller.cs"];
m9_131 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="131-131", cluster="lambda expression", file="SchedulePoller.cs"];
m9_130 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="SchedulePoller.cs"];
m9_132 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="SchedulePoller.cs"];
m9_140 [label="HangFire.Core.Tests.PreserveCultureAttributeFacts", span="", cluster="lambda expression", file="SchedulePoller.cs"];
m9_143 [label=filter, span="", cluster="lambda expression", file="SchedulePoller.cs"];
m9_147 [label="performer.Perform(_context.Object)", span="180-180", cluster="lambda expression", file="SchedulePoller.cs"];
m9_146 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="SchedulePoller.cs"];
m9_141 [label=filter, span="", cluster="lambda expression", file="SchedulePoller.cs"];
m9_142 [label=filter, span="", cluster="lambda expression", file="SchedulePoller.cs"];
m9_144 [label="InstanceMethod()", span="176-176", cluster="lambda expression", file="SchedulePoller.cs"];
m9_145 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="SchedulePoller.cs"];
m9_148 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="SchedulePoller.cs"];
m9_160 [label="performer.Perform(_context.Object)", span="192-192", cluster="lambda expression", file="SchedulePoller.cs"];
m9_159 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="SchedulePoller.cs"];
m9_161 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="SchedulePoller.cs"];
m9_169 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="SchedulePoller.cs"];
m9_174 [label="performer.Perform(_context.Object)", span="205-205", cluster="lambda expression", file="SchedulePoller.cs"];
m9_173 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="SchedulePoller.cs"];
m9_170 [label="x.Method()", span="201-201", cluster="lambda expression", file="SchedulePoller.cs"];
m9_171 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="SchedulePoller.cs"];
m9_175 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="SchedulePoller.cs"];
m9_183 [label="Entry lambda expression", span="213-213", cluster="lambda expression", file="SchedulePoller.cs"];
m9_188 [label="performer.Perform(_context.Object)", span="217-217", cluster="lambda expression", file="SchedulePoller.cs"];
m9_187 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="SchedulePoller.cs"];
m9_184 [label="ExceptionMethod()", span="213-213", cluster="lambda expression", file="SchedulePoller.cs"];
m9_185 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="SchedulePoller.cs"];
m9_189 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="SchedulePoller.cs"];
m9_196 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="SchedulePoller.cs"];
m9_200 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="SchedulePoller.cs"];
m9_205 [label="performer.Perform(_context.Object)", span="233-233", cluster="lambda expression", file="SchedulePoller.cs"];
m9_204 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="SchedulePoller.cs"];
m9_197 [label="CancelableJob(JobCancellationToken.Null)", span="227-227", cluster="lambda expression", file="SchedulePoller.cs"];
m9_198 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="SchedulePoller.cs"];
m9_201 [label="x.ThrowIfCancellationRequested()", span="228-228", cluster="lambda expression", file="SchedulePoller.cs"];
m9_202 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="SchedulePoller.cs"];
m9_206 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="SchedulePoller.cs"];
m9_213 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="SchedulePoller.cs"];
m9_214 [label="x.FunctionReturningValue()", span="239-239", cluster="lambda expression", file="SchedulePoller.cs"];
m9_215 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="SchedulePoller.cs"];
m9_25 [label="Entry Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="41-41", cluster="Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", color=green, community=0, file="SchedulePoller.cs"];
m9_55 [label="_methodInvoked = false", span="75-75", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="SchedulePoller.cs"];
m9_54 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="SchedulePoller.cs"];
m9_56 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="SchedulePoller.cs"];
m9_35 [label="performer.Perform(_context.Object)", span="54-54", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="SchedulePoller.cs"];
m9_88 [label="Assert.True(_methodInvoked)", span="124-124", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_133 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SchedulePoller.cs"];
m9_34 [label="var performer = CreatePerformer()", span="52-52", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="SchedulePoller.cs"];
m9_36 [label="Assert.True(_methodInvoked)", span="56-56", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="SchedulePoller.cs", color=red, community=0];
m9_77 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="SchedulePoller.cs"];
m9_76 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="SchedulePoller.cs"];
m9_90 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="SchedulePoller.cs"];
m9_89 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SchedulePoller.cs"];
m9_134 [label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SchedulePoller.cs"];
m9_135 [label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SchedulePoller.cs"];
m9_221 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Dispose()", span="259-259", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Dispose()", file="SchedulePoller.cs"];
m9_222 [label="_disposed = true", span="261-261", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Dispose()", file="SchedulePoller.cs"];
m9_223 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Dispose()", span="259-259", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Dispose()", file="SchedulePoller.cs"];
m9_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="27-27", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_176 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SchedulePoller.cs"];
m9_177 [label="_context.BackgroundJob.Job = Job.FromExpression(() => ExceptionMethod())", span="213-213", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SchedulePoller.cs"];
m9_178 [label="var performer = CreatePerformer()", span="214-214", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SchedulePoller.cs"];
m9_179 [label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="216-217", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SchedulePoller.cs"];
m9_180 [label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="219-219", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SchedulePoller.cs"];
m9_181 [label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SchedulePoller.cs"];
m9_182 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SchedulePoller.cs"];
m9_139 [label="Entry HangFire.PreserveCultureAttribute.PreserveCultureAttribute()", span="26-26", cluster="HangFire.PreserveCultureAttribute.PreserveCultureAttribute()", file="SchedulePoller.cs"];
m9_199 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="SchedulePoller.cs"];
m9_236 [label="token.ThrowIfCancellationRequested()", span="291-291", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="SchedulePoller.cs"];
m9_237 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="SchedulePoller.cs"];
m9_217 [label="_methodInvoked = true", span="249-249", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="SchedulePoller.cs"];
m9_218 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="SchedulePoller.cs"];
m9_23 [label="Entry HangFire.Server.PerformedContext.PerformedContext(HangFire.Server.PerformContext, bool, System.Exception)", span="26-26", cluster="HangFire.Server.PerformedContext.PerformedContext(HangFire.Server.PerformContext, bool, System.Exception)", file="SchedulePoller.cs"];
m9_6 [label="_creatingContext = new CreatingContext(createContext)", span="31-31", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_7 [label="_createdContext = new CreatedContext(createContext, false, null)", span="32-32", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_8 [label="var workerContext = new WorkerContext(''server'', new string[0], 1)", span="34-34", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_9 [label="var performContext = new PerformContext(workerContext, _connection.Object, JobId, job)", span="36-36", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_53 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="SchedulePoller.cs"];
m9_219 [label="_methodInvoked = true", span="256-256", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="SchedulePoller.cs"];
m9_220 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="SchedulePoller.cs"];
m9_11 [label="_performedContext = new PerformedContext(performContext, false, null)", span="38-38", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_0 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="22-22", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_1 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs", color=green, community=0];
m9_2 [label="var job = Job.FromExpression(() => Sample())", span="25-25", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs", color=green, community=0];
m9_3 [label="var state = new Mock<IState>()", span="26-26", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="SchedulePoller.cs"];
m9_58 [label="performer.Perform(_context.Object)", span="80-80", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="SchedulePoller.cs"];
m9_59 [label="Assert.True(_methodInvoked)", span="83-83", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="SchedulePoller.cs"];
m9_60 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="SchedulePoller.cs"];
m9_64 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="SchedulePoller.cs"];
m9_244 [label="_methodInvoked = true", span="308-308", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="SchedulePoller.cs"];
m9_245 [label="Assert.Equal(''hello'', stringArg)", span="310-310", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="SchedulePoller.cs"];
m9_246 [label="Assert.Equal(5, intArg)", span="311-311", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="SchedulePoller.cs"];
m9_247 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="SchedulePoller.cs"];
m9_250 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SchedulePoller.cs"];
m9_158 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="SchedulePoller.cs"];
m9_162 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="SchedulePoller.cs"];
m9_163 [label="_methodInvoked = false", span="200-200", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="SchedulePoller.cs"];
m9_164 [label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="SchedulePoller.cs"];
m9_165 [label="var performer = CreatePerformer()", span="202-202", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="SchedulePoller.cs"];
m9_166 [label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="204-205", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="SchedulePoller.cs"];
m9_167 [label="Assert.True(_methodInvoked)", span="207-207", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="SchedulePoller.cs"];
m9_168 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="SchedulePoller.cs"];
m9_235 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="SchedulePoller.cs"];
m9_149 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="SchedulePoller.cs"];
m9_150 [label="var type = typeof(JobFacts)", span="186-186", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="SchedulePoller.cs"];
m9_151 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="SchedulePoller.cs"];
m9_152 [label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="SchedulePoller.cs"];
m9_153 [label="var performer = CreatePerformer()", span="189-189", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="SchedulePoller.cs"];
m9_154 [label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="191-192", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="SchedulePoller.cs"];
m9_155 [label="Assert.NotNull(exception.InnerException)", span="194-194", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="SchedulePoller.cs"];
m9_156 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="SchedulePoller.cs"];
m9_253 [label="Entry CoreBackgroundJobPerformer.cstr", span="", cluster="CoreBackgroundJobPerformer.cstr", file="SchedulePoller.cs"];
m9_136 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", span="145-145", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", file="SchedulePoller.cs"];
m9_137 [label="return new PreserveCultureAttribute();", span="149-149", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="SchedulePoller.cs"];
m9_138 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", span="147-147", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="SchedulePoller.cs"];
m9_172 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="SchedulePoller.cs"];
m9_224 [label="_methodInvoked = true", span="269-269", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="SchedulePoller.cs"];
m9_225 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="SchedulePoller.cs"];
m9_32 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", span="147-147", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="SchedulePoller.cs"];
m9_33 [label="Entry Unk.>", span="", cluster="Unk.>", file="SchedulePoller.cs"];
m9_226 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="SchedulePoller.cs"];
m9_227 [label="throw new InvalidOperationException();", span="274-274", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="SchedulePoller.cs"];
m9_228 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="SchedulePoller.cs"];
m9_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="SchedulePoller.cs"];
m9_207 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="SchedulePoller.cs"];
m9_208 [label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="SchedulePoller.cs"];
m9_209 [label="var performer = CreatePerformer()", span="240-240", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="SchedulePoller.cs"];
m9_210 [label="var result = performer.Perform(_context.Object)", span="242-242", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="SchedulePoller.cs"];
m9_211 [label="Assert.Equal(''Return value'', result)", span="244-244", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="SchedulePoller.cs"];
m9_212 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="SchedulePoller.cs"];
m9_186 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="SchedulePoller.cs"];
m9_248 [label="throw new InvalidOperationException(''exception'');", span="316-316", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="SchedulePoller.cs"];
m9_249 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="SchedulePoller.cs"];
m9_203 [label="Entry Unk.ThrowIfCancellationRequested", span="", cluster="Unk.ThrowIfCancellationRequested", file="SchedulePoller.cs"];
m9_26 [label="Entry Unk.True", span="", cluster="Unk.True", file="SchedulePoller.cs"];
m9_254 [label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", span="", file="SchedulePoller.cs"];
m9_255 [label=performer, span="", file="SchedulePoller.cs"];
m9_256 [label=performer, span="", file="SchedulePoller.cs"];
m9_257 [label=performer, span="", file="SchedulePoller.cs"];
m9_258 [label=performer, span="", file="SchedulePoller.cs"];
m9_259 [label=performer, span="", file="SchedulePoller.cs"];
m9_260 [label=performer, span="", file="SchedulePoller.cs"];
m10_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="ServerJobDescriptor.cs"];
m10_0 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="ServerJobDescriptor.cs"];
m10_1 [label="_job = Job.FromExpression(() => Method())", span="21-21", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="ServerJobDescriptor.cs"];
m10_3 [label="_connection = new Mock<IStorageConnection>()", span="23-23", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="ServerJobDescriptor.cs"];
m10_2 [label="_state = new Mock<IState>()", span="22-22", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="ServerJobDescriptor.cs"];
m10_4 [label="_stateMachine = new Mock<IStateMachine>()", span="24-24", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="ServerJobDescriptor.cs"];
m10_24 [label="return PerformJobWithFilters(context, performer, filterInfo.ServerFilters);", span="55-55", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_25 [label=OperationCanceledException, span="57-57", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_26 [label="throw;", span="59-59", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_27 [label=Exception, span="61-61", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_110 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="ServerJobDescriptor.cs"];
m10_111 [label="var context = CreateContext()", span="139-139", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="ServerJobDescriptor.cs"];
m10_112 [label="Assert.Equal(default(int), context.GetJobParameter<int>(''one''))", span="141-141", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="ServerJobDescriptor.cs"];
m10_113 [label="Assert.Equal(default(string), context.GetJobParameter<string>(''two''))", span="142-142", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="ServerJobDescriptor.cs"];
m10_114 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="ServerJobDescriptor.cs"];
m10_12 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_9 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", span="37-37", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", file="ServerJobDescriptor.cs"];
m10_71 [label="return new PerformedContext(\r\n                    preContext, null, true, null);", span="124-125", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_63 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_180 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_181 [label="var context = CreateContext()", span="243-243", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_182 [label="context.CreateJob()", span="244-244", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_183 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.SetJobParameter(''name'', ''value''))", span="246-247", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_184 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_49 [label="Assert.Equal(''initialState'', exception.ParamName)", span="65-65", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="ServerJobDescriptor.cs"];
m10_50 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="ServerJobDescriptor.cs"];
m10_98 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="ServerJobDescriptor.cs"];
m10_196 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="ServerJobDescriptor.cs"];
m10_197 [label="_stateMachine.Setup(x => x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object))\r\n                .Returns(''id'')", span="264-266", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="ServerJobDescriptor.cs"];
m10_198 [label="var context = CreateContext()", span="268-268", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="ServerJobDescriptor.cs"];
m10_200 [label="var contextCopy = new CreateContext(context)", span="271-271", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="ServerJobDescriptor.cs"];
m10_199 [label="context.CreateJob()", span="269-269", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="ServerJobDescriptor.cs"];
m10_201 [label="Assert.Equal(''id'', contextCopy.JobId)", span="273-273", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="ServerJobDescriptor.cs"];
m10_202 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="ServerJobDescriptor.cs"];
m10_28 [label="var exceptionContext = new ServerExceptionContext(context, ex)", span="63-63", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs", color=red, community=0];
m10_10 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_66 [label=OperationCanceledException, span="111-111", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_67 [label="throw;", span="113-113", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", color=green, community=0, file="ServerJobDescriptor.cs"];
m10_68 [label=Exception, span="115-115", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_69 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during execution of one of the filters'',\r\n                    filterException);", span="117-119", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_70 [label="preContext.Canceled", span="122-122", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_90 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="102-102", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_158 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="ServerJobDescriptor.cs"];
m10_159 [label="var context = CreateContext()", span="215-215", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="ServerJobDescriptor.cs"];
m10_160 [label="_stateMachine\r\n                .Setup(x => x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState))\r\n                .Returns(''id'')", span="216-218", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="ServerJobDescriptor.cs"];
m10_161 [label="context.CreateJob()", span="220-220", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="ServerJobDescriptor.cs"];
m10_162 [label="Assert.Equal(''id'', context.JobId)", span="222-222", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="ServerJobDescriptor.cs"];
m10_163 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="ServerJobDescriptor.cs"];
m10_91 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_120 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="ServerJobDescriptor.cs"];
m10_121 [label="var context = CreateContext()", span="157-157", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="ServerJobDescriptor.cs"];
m10_122 [label="context.SetJobParameter(''name1'', ''value1'')", span="159-159", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="ServerJobDescriptor.cs"];
m10_123 [label="context.SetJobParameter(''name2'', ''value2'')", span="160-160", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="ServerJobDescriptor.cs"];
m10_124 [label="Assert.Equal(''value1'', context.GetJobParameter<string>(''name1''))", span="162-162", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="ServerJobDescriptor.cs"];
m10_125 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="ServerJobDescriptor.cs"];
m10_22 [label="throw new ArgumentNullException(''performer'');", span="49-49", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_57 [label="Assert.Same(_job, context.Job)", span="74-74", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="ServerJobDescriptor.cs"];
m10_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object))", span="52-53", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="ServerJobDescriptor.cs"];
m10_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _job, _state.Object))", span="43-44", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerJobDescriptor.cs"];
m10_38 [label="new CreateContext(_connection.Object, null, _job, _state.Object)", span="44-44", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_39 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_167 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="ServerJobDescriptor.cs"];
m10_168 [label="var context = CreateContext()", span="228-228", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="ServerJobDescriptor.cs"];
m10_171 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>()))", span="233-237", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="ServerJobDescriptor.cs"];
m10_169 [label="context.SetJobParameter(''name'', new { key = ''value'' })", span="229-229", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="ServerJobDescriptor.cs"];
m10_170 [label="context.CreateJob()", span="231-231", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="ServerJobDescriptor.cs"];
m10_172 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="ServerJobDescriptor.cs"];
m10_6 [label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="ServerJobDescriptor.cs"];
m10_7 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="ServerJobDescriptor.cs"];
m10_8 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerJobDescriptor.cs"];
m10_52 [label="new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null)", span="62-63", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_152 [label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147", cluster="HangFire.Client.CreateContext.CreateJob()", file="ServerJobDescriptor.cs"];
m10_36 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerJobDescriptor.cs"];
m10_51 [label="Entry lambda expression", span="62-63", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_94 [label="Entry Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", span="33-33", cluster="Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", file="ServerJobDescriptor.cs"];
m10_95 [label="filters.Reverse()", span="182-182", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="ServerJobDescriptor.cs"];
m10_96 [label="filter.OnServerException(context)", span="184-184", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="ServerJobDescriptor.cs"];
m10_97 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", span="178-178", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="ServerJobDescriptor.cs"];
m10_188 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_189 [label="var context = CreateContext()", span="253-253", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_190 [label="context.CreateJob()", span="255-255", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_191 [label="Assert.DoesNotThrow(\r\n                () => context.GetJobParameter<string>(''name''))", span="257-258", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_192 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="ServerJobDescriptor.cs"];
m10_33 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="46-46", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_35 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="80-80", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="ServerJobDescriptor.cs"];
m10_102 [label="Hangfire.Server.IJobPerformer", span="", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="ServerJobDescriptor.cs"];
m10_103 [label=preContext, span="", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="ServerJobDescriptor.cs"];
m10_104 [label="System.Func<Hangfire.Server.PerformedContext>", span="", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="ServerJobDescriptor.cs"];
m10_105 [label="Hangfire.Server.IServerFilter", span="", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="ServerJobDescriptor.cs"];
m10_64 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="102-102", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_206 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="ServerJobDescriptor.cs"];
m10_207 [label="var context = CreateContext()", span="279-279", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="ServerJobDescriptor.cs"];
m10_209 [label="var contextCopy = new CreateContext(context)", span="282-282", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="ServerJobDescriptor.cs"];
m10_208 [label="context.CreateJob()", span="280-280", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="ServerJobDescriptor.cs"];
m10_210 [label="Assert.Throws<InvalidOperationException>(\r\n                () => contextCopy.SetJobParameter(''name'', ''value''))", span="284-285", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="ServerJobDescriptor.cs"];
m10_211 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="ServerJobDescriptor.cs"];
m10_58 [label="Assert.Same(_state.Object, context.InitialState)", span="75-75", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="ServerJobDescriptor.cs"];
m10_72 [label="var wasError = false", span="128-128", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_73 [label="PerformedContext postContext", span="129-129", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", color=green, community=0, file="ServerJobDescriptor.cs"];
m10_74 [label="postContext = continuation()", span="132-132", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", color=green, community=0, file="ServerJobDescriptor.cs"];
m10_75 [label=Exception, span="134-134", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", color=green, community=0, file="ServerJobDescriptor.cs"];
m10_76 [label="wasError = true", span="136-136", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_47 [label="return result;", span="99-99", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="ServerJobDescriptor.cs"];
m10_48 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="80-80", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="ServerJobDescriptor.cs"];
m10_77 [label="postContext = new PerformedContext(\r\n                    preContext, null, false, ex)", span="137-138", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_78 [label="filter.OnPerformed(postContext)", span="142-142", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_79 [label=Exception, span="144-144", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_80 [label="throw new JobPerformanceException(\r\n                        ''An exception occurred during execution of one of the filters'',\r\n                        filterException);", span="146-148", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_81 [label="!postContext.ExceptionHandled", span="151-151", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_147 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="ServerJobDescriptor.cs"];
m10_148 [label="var context = CreateContext()", span="202-202", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="ServerJobDescriptor.cs"];
m10_150 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState))", span="206-209", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="ServerJobDescriptor.cs"];
m10_149 [label="context.CreateJob()", span="204-204", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="ServerJobDescriptor.cs"];
m10_151 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="ServerJobDescriptor.cs"];
m10_13 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServerJobDescriptor.cs"];
m10_65 [label="filter.OnPerforming(preContext)", span="109-109", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_37 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_62 [label="InvokePerformFilter(filter, preContext, next)", span="95-95", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_216 [label="return new CreateContext(\r\n                _connection.Object, _stateMachineFactory.Object, _job, _state.Object);", span="294-295", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="ServerJobDescriptor.cs"];
m10_217 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="ServerJobDescriptor.cs"];
m10_157 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="ServerJobDescriptor.cs"];
m10_176 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_11 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="ServerJobDescriptor.cs"];
m10_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerJobDescriptor.cs"];
m10_15 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_16 [label="Method()", span="21-21", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_54 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="ServerJobDescriptor.cs"];
m10_55 [label="var context = CreateContext()", span="71-71", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="ServerJobDescriptor.cs"];
m10_59 [label="Assert.NotNull(context.Items)", span="77-77", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="ServerJobDescriptor.cs"];
m10_53 [label="Exit lambda expression", span="62-63", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_56 [label="Assert.Same(_connection.Object, context.Connection)", span="73-73", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="ServerJobDescriptor.cs"];
m10_60 [label="Assert.Null(context.JobId)", span="78-78", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="ServerJobDescriptor.cs"];
m10_61 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="ServerJobDescriptor.cs"];
m10_30 [label="!exceptionContext.ExceptionHandled", span="66-66", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs", color=red, community=0];
m10_45 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokePerformFilter(filter, preContext, next))", span="94-95", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="ServerJobDescriptor.cs"];
m10_204 [label="x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object)", span="264-265", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_19 [label="context == null", span="48-48", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_29 [label="InvokeServerExceptionFilters(exceptionContext, filterInfo.ServerExceptionFilters)", span="64-64", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs", color=red, community=0];
m10_31 [label="throw;", span="68-68", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_44 [label="Func<PerformedContext> continuation = () =>\r\n            {\r\n                result = performer.Perform(_activator, context.CancellationToken);\r\n                return new PerformedContext(context, result, false, null);\r\n            }", span="88-92", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="ServerJobDescriptor.cs"];
m10_46 [label="thunk()", span="97-97", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="ServerJobDescriptor.cs"];
m10_83 [label="!wasError", span="157-157", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_92 [label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="ServerJobDescriptor.cs"];
m10_100 [label="System.Collections.Generic.IEnumerable<object>", span="", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_107 [label="context.GetJobParameter<int>(null)", span="133-133", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_138 [label="context.GetJobParameter<int>(''name'')", span="184-184", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_155 [label="x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState)", span="206-209", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_154 [label="Entry lambda expression", span="206-209", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_165 [label="x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState)", span="217-217", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_164 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_173 [label="Entry lambda expression", span="233-237", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_186 [label="context.SetJobParameter(''name'', ''value'')", span="247-247", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_194 [label="context.GetJobParameter<string>(''name'')", span="258-258", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_203 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_205 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_213 [label="contextCopy.SetJobParameter(''name'', ''value'')", span="285-285", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_21 [label="performer == null", span="49-49", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_20 [label="throw new ArgumentNullException(''context'');", span="48-48", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_174 [label="x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>())", span="233-237", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_82 [label="throw;", span="153-153", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_84 [label="filter.OnPerformed(postContext)", span="161-161", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="ServerJobDescriptor.cs"];
m10_93 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="ServerJobDescriptor.cs"];
m10_99 [label="Hangfire.Server.DefaultJobPerformanceProcess", span="", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_101 [label="Hangfire.Server.PerformContext", span="", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_106 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_108 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_137 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_139 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_156 [label="Exit lambda expression", span="206-209", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_166 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_175 [label="Exit lambda expression", span="233-237", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_185 [label="Entry lambda expression", span="247-247", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_187 [label="Exit lambda expression", span="247-247", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_193 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_195 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_212 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_214 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_177 [label="d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''", span="236-236", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_178 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m10_89 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="ServerJobDescriptor.cs"];
m10_85 [label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="ServerJobDescriptor.cs"];
m10_87 [label="var context = CreateContext()", span="112-112", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="ServerJobDescriptor.cs"];
m10_86 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="ServerJobDescriptor.cs"];
m10_88 [label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="114-115", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="ServerJobDescriptor.cs"];
m10_32 [label="return null;", span="72-72", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_115 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="ServerJobDescriptor.cs"];
m10_116 [label="var context = CreateContext()", span="148-148", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="ServerJobDescriptor.cs"];
m10_117 [label="context.SetJobParameter(''name'', ''value'')", span="149-149", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="ServerJobDescriptor.cs"];
m10_118 [label="Assert.Equal(''value'', context.GetJobParameter<string>(''name''))", span="151-151", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="ServerJobDescriptor.cs"];
m10_119 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="ServerJobDescriptor.cs"];
m10_153 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerJobDescriptor.cs"];
m10_140 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="ServerJobDescriptor.cs"];
m10_141 [label="var context = CreateContext()", span="190-190", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="ServerJobDescriptor.cs"];
m10_143 [label="var contextCopy = new CreateContext(context)", span="192-192", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="ServerJobDescriptor.cs"];
m10_142 [label="context.SetJobParameter(''name'', ''value'')", span="191-191", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="ServerJobDescriptor.cs"];
m10_144 [label="var value = contextCopy.GetJobParameter<string>(''name'')", span="194-194", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="ServerJobDescriptor.cs"];
m10_145 [label="Assert.Equal(''value'', value)", span="196-196", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="ServerJobDescriptor.cs"];
m10_146 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="ServerJobDescriptor.cs"];
m10_40 [label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40", cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="ServerJobDescriptor.cs"];
m10_42 [label="object result = null", span="85-85", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="ServerJobDescriptor.cs"];
m10_43 [label="var preContext = new PerformingContext(context)", span="87-87", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="ServerJobDescriptor.cs"];
m10_109 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="ServerJobDescriptor.cs"];
m10_23 [label="var filterInfo = GetFilters(context.Job)", span="51-51", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ServerJobDescriptor.cs"];
m10_17 [label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38", cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="ServerJobDescriptor.cs"];
m10_126 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="ServerJobDescriptor.cs"];
m10_127 [label="var context = CreateContext()", span="168-168", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="ServerJobDescriptor.cs"];
m10_128 [label="context.SetJobParameter(''name'', ''oldValue'')", span="170-170", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="ServerJobDescriptor.cs"];
m10_129 [label="context.SetJobParameter(''name'', ''newValue'')", span="171-171", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="ServerJobDescriptor.cs"];
m10_130 [label="Assert.Equal(''newValue'', context.GetJobParameter<string>(''name''))", span="173-173", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="ServerJobDescriptor.cs"];
m10_131 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="ServerJobDescriptor.cs"];
m10_18 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Method()", file="ServerJobDescriptor.cs"];
m10_215 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Method()", file="ServerJobDescriptor.cs"];
m10_132 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="ServerJobDescriptor.cs"];
m10_133 [label="var context = CreateContext()", span="179-179", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="ServerJobDescriptor.cs"];
m10_134 [label="context.SetJobParameter(''name'', ''value'')", span="181-181", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="ServerJobDescriptor.cs"];
m10_135 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="183-184", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="ServerJobDescriptor.cs"];
m10_136 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="ServerJobDescriptor.cs"];
m10_179 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="ServerJobDescriptor.cs"];
m10_218 [label="HangFire.Core.Tests.Client.CreateContextFacts", span="", file="ServerJobDescriptor.cs"];
m10_219 [label=context, span="", file="ServerJobDescriptor.cs"];
m10_220 [label=context, span="", file="ServerJobDescriptor.cs"];
m10_221 [label=context, span="", file="ServerJobDescriptor.cs"];
m10_222 [label=context, span="", file="ServerJobDescriptor.cs"];
m10_223 [label=context, span="", file="ServerJobDescriptor.cs"];
m10_224 [label=context, span="", file="ServerJobDescriptor.cs"];
m10_225 [label=context, span="", file="ServerJobDescriptor.cs"];
m10_226 [label=context, span="", file="ServerJobDescriptor.cs"];
m10_227 [label=context, span="", file="ServerJobDescriptor.cs"];
m10_228 [label=contextCopy, span="", file="ServerJobDescriptor.cs"];
m12_65 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="StateSteps.cs"];
m12_60 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="StateSteps.cs"];
m12_0 [label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_8 [label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        No queued jobs found. Try to enque'' +\r\n''ue a job.\r\n    </div>\r\n'')", span="98-99", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="StateSteps.cs"];
m12_7 [label="queues.Count == 0", span="92-92", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_1 [label="WriteLiteral(''\r\n'')", span="61-61", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_2 [label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_6 [label="WriteLiteral(''\r\n'')", span="87-87", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_9 [label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Fetched</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="111-121", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_11 [label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a class='' +\r\n''\''label-queue\'' href=\'''')", span="132-133", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_12 [label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="138-138", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_13 [label="WriteLiteral(''\''>\r\n                            '')", span="143-143", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_14 [label="Write(queue.Name)", span="148-148", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_15 [label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="153-154", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_16 [label="Write(queue.Length)", span="159-159", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_17 [label="WriteLiteral(''</td>\r\n                    <td>\r\n'')", span="164-164", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_19 [label="WriteLiteral(''                            <a href=\'''')", span="175-175", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_20 [label="Write(Request.LinkTo(''/queues/fetched/'' + queue.Name))", span="180-180", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_21 [label="WriteLiteral(''\''>\r\n                                '')", span="185-185", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_22 [label="Write(queue.Fetched)", span="190-190", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_23 [label="WriteLiteral(''\r\n                            </a>\r\n'')", span="195-195", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_24 [label="WriteLiteral(''                            <em>N/A</em>\r\n'')", span="207-207", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_25 [label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="217-217", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_27 [label="WriteLiteral(''                            <em>No jobs queued.</em>\r\n'')", span="228-228", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_28 [label="WriteLiteral(@''                            <table class=''''table table-condensed table-bordered table-inner''''>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=''''min-width''''>Id</th>\r\n                                        <th class=''''min-width''''>State</th>\r\n                                        <th>Job</th>\r\n                                        <th class=''''align-right min-width''''>Enqueued</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n'')", span="240-250", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_30 [label="WriteLiteral(''                                        <tr class=\'''')", span="261-261", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_31 [label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="266-266", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_32 [label="WriteLiteral(''\''>\r\n                                            <td class=\''min-width\''>\r\n         '' +\r\n''                                       <a href=\'''')", span="271-272", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_33 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="277-277", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_34 [label="WriteLiteral(''\''>'')", span="282-282", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_35 [label="Write(HtmlHelper.JobId(job.Key))", span="287-287", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_36 [label="WriteLiteral(''</a>\r\n'')", span="292-292", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_38 [label="WriteLiteral(''                                                    <span title=\''Job\'s state has '' +\r\n''been changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></s'' +\r\n''pan>\r\n'')", span="303-305", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_39 [label="WriteLiteral(''                                            </td>\r\n                              '' +\r\n''              <td class=\''min-width\''>\r\n                                          '' +\r\n''      <span class=\''label label-default\'' style=\'''')", span="315-317", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_40 [label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="322-322", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_41 [label="WriteLiteral(''\''>\r\n                                                    '')", span="327-327", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_42 [label="Write(job.Value.State)", span="332-332", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_43 [label="WriteLiteral(''\r\n                                                </span>\r\n                      '' +\r\n''                      </td>\r\n                                            <td>\r\n '' +\r\n''                                               <a class=\''job-method\'' href=\'''')", span="337-339", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_44 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="344-344", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_45 [label="WriteLiteral(''\''>\r\n                                                    '')", span="349-349", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_46 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="354-354", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_47 [label="WriteLiteral(''\r\n                                                </a>\r\n                         '' +\r\n''                   </td>\r\n                                            <td class='' +\r\n''\''align-right min-width\''>\r\n'')", span="359-361", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_49 [label="WriteLiteral(''                                                    <span data-moment=\'''')", span="372-372", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_50 [label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="377-377", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_51 [label="WriteLiteral(''\''>\r\n                                                        '')", span="382-382", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_52 [label="Write(job.Value.EnqueuedAt)", span="387-387", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_53 [label="WriteLiteral(''\r\n                                                    </span>\r\n'')", span="392-392", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_54 [label="WriteLiteral(''                                                    <em>n/a</em>\r\n'')", span="404-404", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_55 [label="WriteLiteral(''                                            </td>\r\n                              '' +\r\n''          </tr>\r\n'')", span="414-415", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_56 [label="WriteLiteral(''                                </tbody>\r\n                            </table>\r\n'')", span="425-425", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_57 [label="WriteLiteral(''                </td>\r\n            </tr>\r\n'')", span="435-435", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_58 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="445-445", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_5 [label="queues = monitor.Queues()", span="80-80", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_3 [label="IList<QueueWithTopEnqueuedJobsDto> queues", span="76-76", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_10 [label=queues, span="126-126", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_18 [label="queue.Fetched.HasValue", span="169-169", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_26 [label="queue.FirstJobs.Count == 0", span="222-222", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_29 [label="queue.FirstJobs", span="255-255", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_37 [label="!job.Value.InEnqueuedState", span="297-297", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_48 [label="job.Value.EnqueuedAt.HasValue", span="366-366", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_4 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_59 [label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="StateSteps.cs"];
m12_62 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="StateSteps.cs"];
m12_61 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="StateSteps.cs"];
m12_63 [label="Entry HangFire.Storage.IMonitoringApi.Queues()", span="24-24", cluster="HangFire.Storage.IMonitoringApi.Queues()", file="StateSteps.cs"];
m12_64 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="StateSteps.cs"];
m12_70 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="StateSteps.cs"];
m12_68 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateSteps.cs"];
m12_69 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateSteps.cs"];
m12_71 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateSteps.cs"];
m12_67 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="StateSteps.cs"];
m12_66 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="StateSteps.cs"];
m12_72 [label="HangFire.Web.Pages.QueuesPage", span="", file="StateSteps.cs"];
m13_88 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Worker.cs"];
m13_366 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="Worker.cs"];
m13_112 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="Worker.cs"];
m13_351 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="Worker.cs"];
m13_89 [label="Entry Hangfire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.ServerDto.ServerDto()", file="Worker.cs"];
m13_45 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_354 [label="return DeserializeJobs(jobs, selector);", span="505-505", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_353 [label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="500-503", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_352 [label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j with (forceseek)\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="491-498", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_355 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_367 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="Worker.cs"];
m13_27 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="Worker.cs"];
m13_28 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="68-69", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="Worker.cs"];
m13_29 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="Worker.cs"];
m13_140 [label="Entry Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="Worker.cs"];
m13_100 [label="Entry Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="Worker.cs"];
m13_356 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_362 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="523-524", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_360 [label="var stateData = deserializedData != null\r\n                    ? new Dictionary<string, string>(deserializedData, StringComparer.OrdinalIgnoreCase)\r\n                    : null", span="517-519", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_357 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="512-512", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_358 [label=jobs, span="514-514", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_361 [label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="521-521", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_359 [label="var deserializedData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="516-516", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_363 [label="return new JobList<TDto>(result);", span="527-527", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_364 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="Worker.cs"];
m13_14 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="455-455", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="Worker.cs"];
m13_339 [label="var sqlQuery = _jobListLimit.HasValue\r\n                ? @''select count(j.Id) from (select top (@limit) Id from HangFire.Job where StateName = @state) as j''\r\n                : @''select count(Id) from HangFire.Job where StateName = @state''", span="457-459", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="Worker.cs"];
m13_340 [label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName, limit = _jobListLimit })\r\n                 .Single()", span="461-464", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="Worker.cs"];
m13_341 [label="return count;", span="466-466", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="Worker.cs"];
m13_342 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="455-455", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="Worker.cs"];
m13_227 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="Worker.cs"];
m13_228 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="302-303", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="Worker.cs"];
m13_229 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="Worker.cs"];
m13_379 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="Worker.cs"];
m13_10 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="423-423", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="Worker.cs"];
m13_327 [label="return _storage.UseTransaction(action, IsolationLevel.ReadUncommitted);", span="425-425", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="Worker.cs"];
m13_328 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="423-423", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="Worker.cs"];
m13_239 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="Worker.cs"];
m13_186 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="Worker.cs"];
m13_187 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="248-249", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="Worker.cs"];
m13_188 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="Worker.cs"];
m13_334 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="Worker.cs"];
m13_233 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="Worker.cs"];
m13_235 [label="var statistics = UseConnection(connection =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    stats.Enqueued = multi.Read<int>().Single();\r\n                    stats.Failed = multi.Read<int>().Single();\r\n                    stats.Processing = multi.Read<int>().Single();\r\n                    stats.Scheduled = multi.Read<int>().Single();\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n                return stats;\r\n            })", span="327-345", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="Worker.cs"];
m13_236 [label="statistics.Queues = _storage.QueueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi().GetQueues())\r\n                .Count()", span="347-349", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="Worker.cs"];
m13_234 [label="string sql = @''\r\nselect count(Id) from HangFire.Job where StateName = N'Enqueued';\r\nselect count(Id) from HangFire.Job where StateName = N'Failed';\r\nselect count(Id) from HangFire.Job where StateName = N'Processing';\r\nselect count(Id) from HangFire.Job where StateName = N'Scheduled';\r\nselect count(Id) from HangFire.Server;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:succeeded'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:succeeded'\r\n) as s;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:deleted'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:deleted'\r\n) as s;\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="308-325", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="Worker.cs"];
m13_237 [label="return statistics;", span="351-351", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="Worker.cs"];
m13_238 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="Worker.cs"];
m13_174 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="Worker.cs"];
m13_169 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="Worker.cs"];
m13_170 [label="var queueApi = GetQueueApi(queue)", span="234-234", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="Worker.cs"];
m13_172 [label="return UseConnection(connection => FetchedJobs(connection, fetchedJobIds));", span="237-237", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="Worker.cs"];
m13_171 [label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="235-235", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="Worker.cs"];
m13_173 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="Worker.cs"];
m13_185 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_268 [label="return GetTimelineStats(connection, keyMaps);", span="368-368", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_267 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH'')), x => x)", span="366-366", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_260 [label="var endDate = DateTime.UtcNow", span="358-358", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_261 [label="var dates = new List<DateTime>()", span="359-359", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_263 [label="i < 24", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_264 [label="dates.Add(endDate)", span="362-362", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_265 [label="endDate = endDate.AddHours(-1)", span="363-363", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_262 [label="var i = 0", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_266 [label="i++", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_269 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_312 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="Worker.cs"];
m13_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Worker.cs"];
m13_111 [label="Entry Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="Worker.cs"];
m13_158 [label="Entry Unk.EnqueuedJobs", span="", cluster="Unk.EnqueuedJobs", file="Worker.cs"];
m13_380 [label="Entry Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="Worker.cs"];
m13_259 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="Worker.cs"];
m13_164 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="Worker.cs"];
m13_144 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="Worker.cs"];
m13_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Worker.cs"];
m13_368 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="Worker.cs"];
m13_329 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="Worker.cs"];
m13_123 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_124 [label="var tuples = _storage.QueueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi())\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="197-201", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_129 [label="var firstJobs = UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds))", span="210-210", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_125 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="203-203", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_126 [label=tuples, span="205-205", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_127 [label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="207-207", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_128 [label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="208-208", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_130 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = firstJobs\r\n                })", span="212-218", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_131 [label="return result;", span="221-221", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_132 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="Worker.cs"];
m13_136 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="Worker.cs"];
m13_290 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="Worker.cs"];
m13_220 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="Worker.cs"];
m13_350 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="Worker.cs"];
m13_0 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="Worker.cs"];
m13_1 [label="storage == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", color=green, community=0, file="Worker.cs"];
m13_2 [label="throw new ArgumentNullException(''storage'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", color=green, community=0, file="Worker.cs"];
m13_3 [label="_storage = storage", span="40-40", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="Worker.cs"];
m13_4 [label="_jobListLimit = jobListLimit", span="41-41", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="Worker.cs"];
m13_5 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="Worker.cs"];
m13_113 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="Worker.cs"];
m13_114 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="183-192", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", color=green, community=0, file="Worker.cs"];
m13_115 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="Worker.cs"];
m13_271 [label="Entry Unk.GetTimelineStats", span="", cluster="Unk.GetTimelineStats", file="Worker.cs"];
m13_219 [label="Entry Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="Worker.cs"];
m13_319 [label="Entry lambda expression", span="398-398", cluster="lambda expression", file="Worker.cs"];
m13_79 [label="Entry lambda expression", span="120-142", cluster="lambda expression", file="Worker.cs"];
m13_116 [label="Entry lambda expression", span="183-192", cluster="lambda expression", file="Worker.cs"];
m13_117 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="183-192", cluster="lambda expression", color=green, community=0, file="Worker.cs"];
m13_118 [label="Exit lambda expression", span="183-192", cluster="lambda expression", file="Worker.cs"];
m13_119 [label="Entry lambda expression", span="188-192", cluster="lambda expression", file="Worker.cs"];
m13_120 [label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="188-192", cluster="lambda expression", color=green, community=0, file="Worker.cs"];
m13_121 [label="Exit lambda expression", span="188-192", cluster="lambda expression", file="Worker.cs"];
m13_12 [label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="47-47", cluster="lambda expression", file="Worker.cs"];
m13_31 [label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="69-69", cluster="lambda expression", file="Worker.cs"];
m13_37 [label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="75-75", cluster="lambda expression", file="Worker.cs"];
m13_43 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="80-89", cluster="lambda expression", file="Worker.cs"];
m13_56 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="94-103", cluster="lambda expression", file="Worker.cs"];
m13_66 [label="GetTimelineStats(connection, ''succeeded'')", span="109-109", cluster="lambda expression", file="Worker.cs"];
m13_73 [label="GetTimelineStats(connection, ''failed'')", span="115-115", cluster="lambda expression", file="Worker.cs"];
m13_95 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="147-160", cluster="lambda expression", file="Worker.cs"];
m13_106 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="165-178", cluster="lambda expression", file="Worker.cs"];
m13_156 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="210-210", cluster="lambda expression", file="Worker.cs"];
m13_166 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="229-229", cluster="lambda expression", file="Worker.cs"];
m13_176 [label="FetchedJobs(connection, fetchedJobIds)", span="237-237", cluster="lambda expression", file="Worker.cs"];
m13_183 [label="GetHourlyTimelineStats(connection, ''succeeded'')", span="243-243", cluster="lambda expression", file="Worker.cs"];
m13_190 [label="GetHourlyTimelineStats(connection, ''failed'')", span="249-249", cluster="lambda expression", file="Worker.cs"];
m13_203 [label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="282-289", cluster="lambda expression", file="Worker.cs"];
m13_225 [label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="297-297", cluster="lambda expression", file="Worker.cs"];
m13_231 [label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="303-303", cluster="lambda expression", file="Worker.cs"];
m13_80 [label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="122-124", cluster="lambda expression", file="Worker.cs"];
m13_83 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="130-130", cluster="lambda expression", file="Worker.cs"];
m13_198 [label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="264-264", cluster="lambda expression", file="Worker.cs"];
m13_201 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="267-267", cluster="lambda expression", file="Worker.cs"];
m13_202 [label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList()", span="268-280", cluster="lambda expression", file="Worker.cs"];
m13_217 [label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            }", span="271-279", cluster="lambda expression", file="Worker.cs"];
m13_244 [label="stats.Enqueued = multi.Read<int>().Single()", span="332-332", cluster="lambda expression", file="Worker.cs"];
m13_245 [label="stats.Failed = multi.Read<int>().Single()", span="333-333", cluster="lambda expression", file="Worker.cs"];
m13_246 [label="stats.Processing = multi.Read<int>().Single()", span="334-334", cluster="lambda expression", file="Worker.cs"];
m13_247 [label="stats.Scheduled = multi.Read<int>().Single()", span="335-335", cluster="lambda expression", file="Worker.cs"];
m13_248 [label="stats.Servers = multi.Read<int>().Single()", span="337-337", cluster="lambda expression", file="Worker.cs"];
m13_249 [label="stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0", span="339-339", cluster="lambda expression", file="Worker.cs"];
m13_250 [label="stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0", span="340-340", cluster="lambda expression", file="Worker.cs"];
m13_251 [label="stats.Recurring = multi.Read<int>().Single()", span="342-342", cluster="lambda expression", file="Worker.cs"];
m13_86 [label="Exit lambda expression", span="120-142", cluster="lambda expression", file="Worker.cs"];
m13_98 [label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="152-160", cluster="lambda expression", file="Worker.cs"];
m13_109 [label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="170-178", cluster="lambda expression", file="Worker.cs"];
m13_336 [label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="445-452", cluster="lambda expression", file="Worker.cs"];
m13_11 [label="Entry lambda expression", span="46-47", cluster="lambda expression", file="Worker.cs"];
m13_13 [label="Exit lambda expression", span="46-47", cluster="lambda expression", file="Worker.cs"];
m13_30 [label="Entry lambda expression", span="68-69", cluster="lambda expression", file="Worker.cs"];
m13_32 [label="Exit lambda expression", span="68-69", cluster="lambda expression", file="Worker.cs"];
m13_36 [label="Entry lambda expression", span="74-75", cluster="lambda expression", file="Worker.cs"];
m13_38 [label="Exit lambda expression", span="74-75", cluster="lambda expression", file="Worker.cs"];
m13_42 [label="Entry lambda expression", span="80-89", cluster="lambda expression", file="Worker.cs"];
m13_44 [label="Exit lambda expression", span="80-89", cluster="lambda expression", file="Worker.cs"];
m13_46 [label="Entry lambda expression", span="84-89", cluster="lambda expression", file="Worker.cs"];
m13_55 [label="Entry lambda expression", span="94-103", cluster="lambda expression", file="Worker.cs"];
m13_57 [label="Exit lambda expression", span="94-103", cluster="lambda expression", file="Worker.cs"];
m13_58 [label="Entry lambda expression", span="98-103", cluster="lambda expression", file="Worker.cs"];
m13_65 [label="Entry lambda expression", span="108-109", cluster="lambda expression", file="Worker.cs"];
m13_67 [label="Exit lambda expression", span="108-109", cluster="lambda expression", file="Worker.cs"];
m13_72 [label="Entry lambda expression", span="114-115", cluster="lambda expression", file="Worker.cs"];
m13_74 [label="Exit lambda expression", span="114-115", cluster="lambda expression", file="Worker.cs"];
m13_94 [label="Entry lambda expression", span="147-160", cluster="lambda expression", file="Worker.cs"];
m13_96 [label="Exit lambda expression", span="147-160", cluster="lambda expression", file="Worker.cs"];
m13_97 [label="Entry lambda expression", span="152-160", cluster="lambda expression", file="Worker.cs"];
m13_105 [label="Entry lambda expression", span="165-178", cluster="lambda expression", file="Worker.cs"];
m13_107 [label="Exit lambda expression", span="165-178", cluster="lambda expression", file="Worker.cs"];
m13_108 [label="Entry lambda expression", span="170-178", cluster="lambda expression", file="Worker.cs"];
m13_141 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="Worker.cs"];
m13_145 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="Worker.cs"];
m13_149 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="Worker.cs"];
m13_152 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="Worker.cs"];
m13_155 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="Worker.cs"];
m13_157 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="Worker.cs"];
m13_165 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="Worker.cs"];
m13_167 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="Worker.cs"];
m13_175 [label="Entry lambda expression", span="237-237", cluster="lambda expression", file="Worker.cs"];
m13_177 [label="Exit lambda expression", span="237-237", cluster="lambda expression", file="Worker.cs"];
m13_182 [label="Entry lambda expression", span="242-243", cluster="lambda expression", file="Worker.cs"];
m13_184 [label="Exit lambda expression", span="242-243", cluster="lambda expression", file="Worker.cs"];
m13_189 [label="Entry lambda expression", span="248-249", cluster="lambda expression", file="Worker.cs"];
m13_191 [label="Exit lambda expression", span="248-249", cluster="lambda expression", file="Worker.cs"];
m13_195 [label="Entry lambda expression", span="254-291", cluster="lambda expression", file="Worker.cs"];
m13_204 [label="Exit lambda expression", span="254-291", cluster="lambda expression", file="Worker.cs"];
m13_224 [label="Entry lambda expression", span="296-297", cluster="lambda expression", file="Worker.cs"];
m13_226 [label="Exit lambda expression", span="296-297", cluster="lambda expression", file="Worker.cs"];
m13_230 [label="Entry lambda expression", span="302-303", cluster="lambda expression", file="Worker.cs"];
m13_232 [label="Exit lambda expression", span="302-303", cluster="lambda expression", file="Worker.cs"];
m13_241 [label="Entry lambda expression", span="327-345", cluster="lambda expression", file="Worker.cs"];
m13_256 [label="Entry lambda expression", span="348-348", cluster="lambda expression", file="Worker.cs"];
m13_335 [label="Entry lambda expression", span="445-452", cluster="lambda expression", file="Worker.cs"];
m13_81 [label="var result = new List<ServerDto>()", span="126-126", cluster="lambda expression", file="Worker.cs"];
m13_82 [label=servers, span="128-128", cluster="lambda expression", file="Worker.cs"];
m13_84 [label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="131-138", cluster="lambda expression", file="Worker.cs"];
m13_197 [label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="262-262", cluster="lambda expression", file="Worker.cs"];
m13_199 [label="job == null", span="265-265", cluster="lambda expression", file="Worker.cs"];
m13_210 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="Worker.cs"];
m13_213 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="Worker.cs"];
m13_216 [label="Entry lambda expression", span="271-279", cluster="lambda expression", file="Worker.cs"];
m13_218 [label="Exit lambda expression", span="271-279", cluster="lambda expression", file="Worker.cs"];
m13_243 [label="var multi = connection.QueryMultiple(sql)", span="330-330", cluster="lambda expression", file="Worker.cs"];
m13_242 [label="var stats = new StatisticsDto()", span="329-329", cluster="lambda expression", file="Worker.cs"];
m13_252 [label="return stats;", span="344-344", cluster="lambda expression", file="Worker.cs"];
m13_85 [label="return result;", span="141-141", cluster="lambda expression", file="Worker.cs"];
m13_99 [label="Exit lambda expression", span="152-160", cluster="lambda expression", file="Worker.cs"];
m13_110 [label="Exit lambda expression", span="170-178", cluster="lambda expression", file="Worker.cs"];
m13_337 [label="Exit lambda expression", span="445-452", cluster="lambda expression", file="Worker.cs"];
m13_48 [label="Exit lambda expression", span="84-89", cluster="lambda expression", file="Worker.cs"];
m13_47 [label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="84-89", cluster="lambda expression", file="Worker.cs"];
m13_60 [label="Exit lambda expression", span="98-103", cluster="lambda expression", file="Worker.cs"];
m13_59 [label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="98-103", cluster="lambda expression", file="Worker.cs"];
m13_292 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd''))", span="383-383", cluster="lambda expression", file="Worker.cs"];
m13_143 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="Worker.cs"];
m13_142 [label="x.GetJobQueueMonitoringApi()", span="198-198", cluster="lambda expression", file="Worker.cs"];
m13_147 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="Worker.cs"];
m13_146 [label="x.GetQueues()", span="199-199", cluster="lambda expression", file="Worker.cs"];
m13_151 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="Worker.cs"];
m13_150 [label="new { Monitoring = monitoring, Queue = queue }", span="199-199", cluster="lambda expression", file="Worker.cs"];
m13_154 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="Worker.cs"];
m13_153 [label="x.Queue", span="200-200", cluster="lambda expression", file="Worker.cs"];
m13_273 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="366-366", cluster="lambda expression", file="Worker.cs"];
m13_196 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="257-260", cluster="lambda expression", file="Worker.cs"];
m13_200 [label="return null;", span="265-265", cluster="lambda expression", file="Worker.cs"];
m13_253 [label="Exit lambda expression", span="327-345", cluster="lambda expression", file="Worker.cs"];
m13_258 [label="Exit lambda expression", span="348-348", cluster="lambda expression", file="Worker.cs"];
m13_257 [label="x.GetJobQueueMonitoringApi().GetQueues()", span="348-348", cluster="lambda expression", file="Worker.cs"];
m13_272 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="Worker.cs"];
m13_277 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="Worker.cs"];
m13_291 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="Worker.cs"];
m13_294 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="Worker.cs"];
m13_212 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="Worker.cs"];
m13_211 [label="x.Name", span="267-267", cluster="lambda expression", file="Worker.cs"];
m13_215 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="Worker.cs"];
m13_214 [label="x.Value", span="267-267", cluster="lambda expression", file="Worker.cs"];
m13_293 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="Worker.cs"];
m13_274 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="Worker.cs"];
m13_279 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="Worker.cs"];
m13_278 [label=x, span="366-366", cluster="lambda expression", file="Worker.cs"];
m13_296 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="Worker.cs"];
m13_295 [label=x, span="383-383", cluster="lambda expression", file="Worker.cs"];
m13_316 [label="Entry lambda expression", span="398-398", cluster="lambda expression", file="Worker.cs"];
m13_318 [label="Exit lambda expression", span="398-398", cluster="lambda expression", file="Worker.cs"];
m13_317 [label="(string)x.Key", span="398-398", cluster="lambda expression", file="Worker.cs"];
m13_320 [label="(long)x.Count", span="398-398", cluster="lambda expression", file="Worker.cs"];
m13_321 [label="Exit lambda expression", span="398-398", cluster="lambda expression", file="Worker.cs"];
m13_90 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="Worker.cs"];
m13_87 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="Worker.cs"];
m13_315 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="Worker.cs"];
m13_22 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="Worker.cs"];
m13_23 [label="var queueApi = GetQueueApi(queue)", span="60-60", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="Worker.cs"];
m13_24 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="61-61", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="Worker.cs"];
m13_25 [label="return counters.FetchedCount ?? 0;", span="63-63", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="Worker.cs"];
m13_26 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="Worker.cs"];
m13_369 [label="Entry Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22", cluster="Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="Worker.cs"];
m13_61 [label="Entry Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="Worker.cs"];
m13_275 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="Worker.cs"];
m13_102 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="Worker.cs"];
m13_103 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="165-178", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="Worker.cs"];
m13_104 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="Worker.cs"];
m13_137 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="Worker.cs"];
m13_21 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="Worker.cs"];
m13_122 [label="Entry Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7", cluster="Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="Worker.cs"];
m13_178 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_374 [label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                    }))", span="549-555", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_371 [label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="540-543", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_372 [label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="545-545", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_373 [label=jobs, span="547-547", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_370 [label="string fetchedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="534-538", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_375 [label="return new JobList<FetchedJobDto>(result);", span="558-558", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_376 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_378 [label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span="", cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="Worker.cs"];
m13_192 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="Worker.cs"];
m13_193 [label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="254-291", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="Worker.cs"];
m13_194 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="Worker.cs"];
m13_311 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="Worker.cs"];
m13_7 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="Worker.cs"];
m13_8 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="46-47", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="Worker.cs"];
m13_9 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="Worker.cs"];
m13_168 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_332 [label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="443-452", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_331 [label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="438-441", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_330 [label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="432-436", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_333 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="Worker.cs"];
m13_313 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="Worker.cs"];
m13_221 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="Worker.cs"];
m13_222 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="296-297", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="Worker.cs"];
m13_223 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="Worker.cs"];
m13_51 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="Worker.cs"];
m13_338 [label="Entry Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="Worker.cs"];
m13_377 [label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="Worker.cs"];
m13_270 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="Worker.cs"];
m13_91 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="Worker.cs"];
m13_92 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="147-160", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="Worker.cs"];
m13_93 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="Worker.cs"];
m13_343 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="Worker.cs"];
m13_344 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="471-471", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="Worker.cs"];
m13_345 [label="data.Arguments = arguments", span="472-472", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="Worker.cs"];
m13_346 [label="return data.Deserialize();", span="476-476", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="Worker.cs"];
m13_348 [label="return null;", span="480-480", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="Worker.cs"];
m13_347 [label=JobLoadException, span="478-478", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="Worker.cs"];
m13_349 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="Worker.cs"];
m13_75 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="Worker.cs"];
m13_76 [label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="120-142", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", color=green, community=0, file="Worker.cs"];
m13_77 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="Worker.cs"];
m13_205 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="Worker.cs"];
m13_39 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="Worker.cs"];
m13_40 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="80-89", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="Worker.cs"];
m13_41 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="Worker.cs"];
m13_20 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="Worker.cs"];
m13_322 [label="var provider = _storage.QueueProviders.GetProvider(queueName)", span="417-417", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="Worker.cs"];
m13_323 [label="var monitoringApi = provider.GetJobQueueMonitoringApi()", span="418-418", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="Worker.cs"];
m13_324 [label="return monitoringApi;", span="420-420", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="Worker.cs"];
m13_325 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="Worker.cs"];
m13_52 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="Worker.cs"];
m13_53 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="94-103", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="Worker.cs"];
m13_54 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="Worker.cs"];
m13_208 [label="Entry Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22", cluster="Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="Worker.cs"];
m13_69 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="Worker.cs"];
m13_70 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="114-115", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="Worker.cs"];
m13_71 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="Worker.cs"];
m13_179 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="Worker.cs"];
m13_180 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="242-243", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="Worker.cs"];
m13_181 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="Worker.cs"];
m13_276 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Worker.cs"];
m13_326 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="Worker.cs"];
m13_134 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="Worker.cs"];
m13_207 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="Worker.cs"];
m13_78 [label="Entry Unk.>", span="", cluster="Unk.>", file="Worker.cs"];
m13_138 [label="Entry Unk.GetEnqueuedJobIds", span="", cluster="Unk.GetEnqueuedJobIds", file="Worker.cs"];
m13_101 [label="Entry Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", span="84-84", cluster="Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", file="Worker.cs"];
m13_135 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="Worker.cs"];
m13_139 [label="Entry Unk.GetEnqueuedAndFetchedCount", span="", cluster="Unk.GetEnqueuedAndFetchedCount", file="Worker.cs"];
m13_15 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="Worker.cs"];
m13_16 [label="var queueApi = GetQueueApi(queue)", span="52-52", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="Worker.cs"];
m13_17 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="53-53", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="Worker.cs"];
m13_18 [label="return counters.EnqueuedCount ?? 0;", span="55-55", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="Worker.cs"];
m13_19 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="Worker.cs"];
m13_148 [label="Entry Unk.GetQueues", span="", cluster="Unk.GetQueues", file="Worker.cs"];
m13_62 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="Worker.cs"];
m13_63 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="108-109", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="Worker.cs"];
m13_64 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="Worker.cs"];
m13_314 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Worker.cs"];
m13_68 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_288 [label="return GetTimelineStats(connection, keyMaps);", span="385-385", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_287 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd'')), x => x)", span="383-383", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_280 [label="var endDate = DateTime.UtcNow.Date", span="375-375", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_281 [label="var dates = new List<DateTime>()", span="376-376", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_283 [label="i < 7", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_284 [label="dates.Add(endDate)", span="379-379", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_285 [label="endDate = endDate.AddDays(-1)", span="380-380", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_282 [label="var i = 0", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_286 [label="i++", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_289 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="Worker.cs"];
m13_254 [label="Entry Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="Worker.cs"];
m13_49 [label="Entry Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="Worker.cs"];
m13_297 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_299 [label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keyMaps.Keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="395-398", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_298 [label="string sqlQuery = @''\r\nselect [Key], [Value] as [Count] from HangFire.AggregatedCounter\r\nwhere [Key] in @keys''", span="391-393", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_300 [label="keyMaps.Keys", span="400-400", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_301 [label="!valuesMap.ContainsKey(key)", span="402-402", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_302 [label="valuesMap.Add(key, 0)", span="402-402", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_306 [label="var value = valuesMap[keyMaps.ElementAt(i).Key]", span="408-408", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_305 [label="i < keyMaps.Count", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_307 [label="result.Add(keyMaps.ElementAt(i).Value, value)", span="409-409", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_303 [label="var result = new Dictionary<DateTime, long>()", span="405-405", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_304 [label="var i = 0", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_309 [label="return result;", span="412-412", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_308 [label="i++", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_310 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="Worker.cs"];
m13_240 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Worker.cs"];
m13_133 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Worker.cs"];
m13_365 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="Worker.cs"];
m13_255 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="Worker.cs"];
m13_159 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="Worker.cs"];
m13_160 [label="var queueApi = GetQueueApi(queue)", span="226-226", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="Worker.cs"];
m13_162 [label="return UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds));", span="229-229", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="Worker.cs"];
m13_161 [label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="227-227", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="Worker.cs"];
m13_163 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="Worker.cs"];
m13_206 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="Worker.cs"];
m13_33 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="Worker.cs"];
m13_34 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="74-75", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="Worker.cs"];
m13_35 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="Worker.cs"];
m13_209 [label="Entry Unk.DeserializeJob", span="", cluster="Unk.DeserializeJob", file="Worker.cs"];
m13_381 [label="Hangfire.SqlServer.SqlServerMonitoringApi", span="", file="Worker.cs"];
m13_390 [label=int, span="", file="Worker.cs"];
m13_391 [label=int, span="", file="Worker.cs"];
m13_382 [label=int, span="", file="Worker.cs"];
m13_383 [label=int, span="", file="Worker.cs"];
m13_384 [label=int, span="", file="Worker.cs"];
m13_385 [label=int, span="", file="Worker.cs"];
m13_386 [label=int, span="", file="Worker.cs"];
m13_387 [label=int, span="", file="Worker.cs"];
m13_388 [label=int, span="", file="Worker.cs"];
m13_389 [label=int, span="", file="Worker.cs"];
m13_392 [label=enqueuedJobIds, span="", file="Worker.cs"];
m13_393 [label=enqueuedJobIds, span="", file="Worker.cs"];
m13_394 [label=fetchedJobIds, span="", file="Worker.cs"];
m13_395 [label=string, span="", file="Worker.cs"];
m13_396 [label=sql, span="", file="Worker.cs"];
m13_398 [label=string, span="", file="Worker.cs"];
m13_397 [label=string, span="", file="Worker.cs"];
m0_39 -> m0_40  [key=0, style=solid, color=green];
m0_39 -> m0_41  [key=1, style=dashed, color=green, label=Table];
m0_40 -> m0_41  [key=0, style=solid, color=green];
m0_40 -> m0_43  [key=2, style=dotted, color=green];
m0_41 -> m0_42  [key=0, style=solid, color=green];
m0_41 -> m0_44  [key=2, style=dotted, color=green];
m0_42 -> m0_39  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid, color=green];
m0_23 -> m0_24  [key=0, style=solid, color=green];
m0_23 -> m0_26  [key=2, style=dotted, color=green];
m0_23 -> m0_28  [key=1, style=dashed, color=green, label="lambda expression"];
m0_23 -> m0_31  [key=1, style=dashed, color=green, label="lambda expression"];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_24 -> m0_27  [key=2, style=dotted, color=green];
m0_25 -> m0_22  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=2, style=dotted, color=green];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid, color=green];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_46 -> m0_53  [key=2, style=dotted, color=green];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_47 -> m0_54  [key=2, style=dotted, color=green];
m0_47 -> m0_50  [key=1, style=dashed, color=green, label=args];
m0_48 -> m0_49  [key=0, style=solid, color=green];
m0_48 -> m0_55  [key=2, style=dotted, color=green];
m0_50 -> m0_50  [key=1, style=dashed, color=green, label=pair];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_50 -> m0_56  [key=2, style=dotted, color=green];
m0_50 -> m0_38  [key=2, style=dotted, color=green];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_52  [key=0, style=solid, color=green];
m0_51 -> m0_49  [key=0, style=solid, color=green];
m0_51 -> m0_51  [key=1, style=dashed, color=green, label=pair];
m0_51 -> m0_55  [key=2, style=dotted, color=green];
m0_52 -> m0_45  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_35 -> m0_36  [key=0, style=solid, color=green];
m0_35 -> m0_37  [key=2, style=dotted, color=green];
m0_35 -> m0_38  [key=2, style=dotted, color=green];
m0_36 -> m0_34  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_10  [key=2, style=dotted, color=green];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_11  [key=2, style=dotted, color=green];
m0_6 -> m0_12  [key=2, style=dotted, color=green];
m0_6 -> m0_15  [key=1, style=dashed, color=green, label="lambda expression"];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_7 -> m0_11  [key=2, style=dotted, color=green];
m0_7 -> m0_13  [key=2, style=dotted, color=green];
m0_7 -> m0_12  [key=2, style=dotted, color=green];
m0_7 -> m0_18  [key=1, style=dashed, color=green, label="lambda expression"];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_14  [key=2, style=dotted, color=green];
m0_9 -> m0_4  [key=0, style=bold, color=blue];
m0_61 -> m0_62  [key=0, style=solid, color=green];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_18 -> m0_19  [key=0, style=solid, color=green];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_21  [key=2, style=dotted, color=green];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_31 -> m0_32  [key=0, style=solid, color=green];
m0_29 -> m0_30  [key=0, style=solid, color=green];
m0_30 -> m0_28  [key=0, style=bold, color=blue];
m0_32 -> m0_33  [key=0, style=solid, color=green];
m0_33 -> m0_31  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid, color=green];
m0_62 -> m0_54  [key=2, style=dotted, color=green];
m0_62 -> m0_64  [key=2, style=dotted, color=green];
m0_63 -> m0_61  [key=0, style=bold, color=blue];
m0_57 -> m0_58  [key=0, style=solid, color=green];
m0_58 -> m0_59  [key=0, style=solid, color=green];
m0_58 -> m0_60  [key=2, style=dotted, color=green];
m0_58 -> m0_61  [key=1, style=dashed, color=green, label="lambda expression"];
m0_59 -> m0_57  [key=0, style=bold, color=blue];
m0_65 -> m0_1  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m0_65 -> m0_5  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m0_65 -> m0_6  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m0_65 -> m0_7  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m0_65 -> m0_8  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m0_65 -> m0_23  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m0_65 -> m0_48  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m0_65 -> m0_49  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m0_65 -> m0_51  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m0_65 -> m0_58  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientSteps"];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_8  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_9  [key=2, style=dotted];
m1_13 -> m1_10  [key=2, style=dotted];
m1_14 -> m1_11  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_8  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_6 -> m1_9  [key=2, style=dotted, color=green];
m1_6 -> m1_10  [key=2, style=dotted, color=green];
m1_7 -> m1_4  [key=0, style=bold, color=blue];
m1_15 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangedFilter"];
m1_15 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangedFilter"];
m1_15 -> m1_6  [key=1, style=dashed, color=green, label="HangFire.Tests.TestStateChangedFilter"];
m1_15 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangedFilter"];
m2_7 -> m2_0  [key=0, style=bold, color=blue];
m2_89 -> m2_90  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_92  [key=2, style=dotted];
m2_91 -> m2_89  [key=0, style=bold, color=blue];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_26  [key=2, style=dotted];
m2_106 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_107 -> m2_105  [key=0, style=bold, color=blue];
m2_17 -> m2_11  [key=0, style=bold, color=blue];
m2_92 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_26  [key=2, style=dotted];
m2_94 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m2_95 -> m2_92  [key=0, style=bold, color=blue];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_26  [key=2, style=dotted];
m2_72 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_73 -> m2_71  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_0 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_0 -> m2_3  [key=1, style=dashed, color=green, label="HangFire.SqlServer.PersistentJobQueueProviderCollection"];
m2_0 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.PersistentJobQueueProviderCollection"];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_3  [key=0, style=solid, color=green];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_10  [key=2, style=dotted];
m2_5 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_6  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted, color=green];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_9  [key=2, style=dotted];
m2_4 -> m2_7  [key=0, style=solid, color=green];
m2_6 -> m2_0  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_47 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_26  [key=2, style=dotted];
m2_49 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m2_50 -> m2_47  [key=0, style=bold, color=blue];
m2_117 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_26  [key=2, style=dotted];
m2_119 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m2_120 -> m2_117  [key=0, style=bold, color=blue];
m2_26 -> m2_124  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_126  [key=2, style=dotted];
m2_125 -> m2_26  [key=0, style=bold, color=blue];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_26  [key=2, style=dotted];
m2_84 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_85 -> m2_83  [key=0, style=bold, color=blue];
m2_38 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_26  [key=2, style=dotted];
m2_40 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m2_41 -> m2_38  [key=0, style=bold, color=blue];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_26  [key=2, style=dotted];
m2_78 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_79 -> m2_77  [key=0, style=bold, color=blue];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=0, style=solid];
m2_12 -> m2_18  [key=2, style=dotted];
m2_12 -> m2_19  [key=2, style=dotted];
m2_12 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_18  [key=2, style=dotted];
m2_15 -> m2_14  [key=0, style=solid];
m2_15 -> m2_21  [key=2, style=dotted];
m2_13 -> m2_16  [key=0, style=solid];
m2_13 -> m2_7  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_20  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_17  [key=2, style=dotted];
m2_14 -> m2_16  [key=0, style=solid];
m2_16 -> m2_11  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_22  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_26  [key=2, style=dotted];
m2_100 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_101 -> m2_99  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=2, style=dotted];
m2_24 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_25 -> m2_23  [key=0, style=bold, color=blue];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_26  [key=2, style=dotted];
m2_112 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_113 -> m2_111  [key=0, style=bold, color=blue];
m2_19 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m2_19 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m2_19 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m2_19 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m2_121 -> m2_122  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_114 -> m2_115  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_28 -> m2_31  [key=2, style=dotted];
m2_29 -> m2_27  [key=0, style=bold, color=blue];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_31  [key=2, style=dotted];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=2, style=dotted];
m2_43 -> m2_46  [key=2, style=dotted];
m2_43 -> m2_31  [key=2, style=dotted];
m2_44 -> m2_42  [key=0, style=bold, color=blue];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_45  [key=2, style=dotted];
m2_52 -> m2_46  [key=2, style=dotted];
m2_52 -> m2_31  [key=2, style=dotted];
m2_53 -> m2_51  [key=0, style=bold, color=blue];
m2_63 -> m2_61  [key=0, style=bold, color=blue];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_31  [key=2, style=dotted];
m2_70 -> m2_68  [key=0, style=bold, color=blue];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_30  [key=2, style=dotted];
m2_75 -> m2_31  [key=2, style=dotted];
m2_76 -> m2_74  [key=0, style=bold, color=blue];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_31  [key=2, style=dotted];
m2_82 -> m2_80  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_30  [key=2, style=dotted];
m2_87 -> m2_31  [key=2, style=dotted];
m2_88 -> m2_86  [key=0, style=bold, color=blue];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_31  [key=2, style=dotted];
m2_98 -> m2_96  [key=0, style=bold, color=blue];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_31  [key=2, style=dotted];
m2_104 -> m2_102  [key=0, style=bold, color=blue];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_31  [key=2, style=dotted];
m2_110 -> m2_108  [key=0, style=bold, color=blue];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_31  [key=2, style=dotted];
m2_116 -> m2_114  [key=0, style=bold, color=blue];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_31  [key=2, style=dotted];
m2_123 -> m2_121  [key=0, style=bold, color=blue];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_54 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_59  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_60  [key=2, style=dotted];
m2_56 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_26  [key=2, style=dotted];
m2_57 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_58 -> m2_54  [key=0, style=bold, color=blue];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_26  [key=2, style=dotted];
m2_66 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_67 -> m2_65  [key=0, style=bold, color=blue];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_26  [key=2, style=dotted];
m2_33 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_34 -> m2_32  [key=0, style=bold, color=blue];
m2_127 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_127 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_137 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_138 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_139 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m2_128 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_129 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_130 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_131 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_132 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m2_133 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m2_134 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_135 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m2_136 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m2_140 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_141 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_142 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_143 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_144 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_145 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_146 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_147 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_148 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=double];
m2_149 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m2_150 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_151 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_152 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_153 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_154 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_155 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_156 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_157 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_158 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_159 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m3_66 -> m3_67  [key=0, style=solid];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_37  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_22  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_38  [key=2, style=dotted];
m3_69 -> m3_8  [key=1, style=dashed, color=green, label="HangFire.Client.JobClient"];
m3_69 -> m3_23  [key=1, style=dashed, color=green, label="HangFire.Client.JobClient"];
m3_69 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m3_69 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m3_69 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_39  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_26  [key=2, style=dotted];
m3_72 -> m3_66  [key=0, style=bold, color=blue];
m3_22 -> m3_23  [key=0, style=solid, color=green];
m3_22 -> m3_31  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m3_22 -> m3_41  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m3_22 -> m3_53  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m3_22 -> m3_60  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m3_22 -> m3_67  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m3_22 -> m3_74  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m3_23 -> m3_24  [key=0, style=solid, color=green];
m3_23 -> m3_25  [key=2, style=dotted, color=red];
m3_23 -> m3_32  [key=2, style=dotted, color=green];
m3_23 -> m3_33  [key=2, style=dotted, color=green];
m3_24 -> m3_22  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_34  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid, color=red];
m3_26 -> m3_11  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid, color=red];
m3_27 -> m3_29  [key=2, style=dotted, color=red];
m3_28 -> m3_26  [key=0, style=bold, color=blue];
m3_52 -> m3_53  [key=0, style=solid, color=green];
m3_52 -> m3_63  [key=2, style=dotted, color=green];
m3_52 -> m3_54  [key=1, style=dashed, color=green, label=propertyValue];
m3_52 -> m3_55  [key=1, style=dashed, color=green, label=propertyValue];
m3_52 -> m3_56  [key=1, style=dashed, color=green, label=propertyValue];
m3_53 -> m3_54  [key=0, style=solid, color=green];
m3_53 -> m3_37  [key=2, style=dotted];
m3_53 -> m3_59  [key=1, style=dashed, color=green, label=value];
m3_53 -> m3_53  [key=3, color=green, style=bold, label="Local variable string value"];
m3_54 -> m3_55  [key=0, style=solid, color=green];
m3_54 -> m3_22  [key=2, style=dotted];
m3_54 -> m3_59  [key=0, style=solid, color=green];
m3_55 -> m3_56  [key=0, style=solid, color=green];
m3_55 -> m3_38  [key=2, style=dotted];
m3_55 -> m3_64  [key=2, style=dotted, color=green];
m3_55 -> m3_65  [key=2, style=dotted, color=green];
m3_56 -> m3_57  [key=0, style=solid, color=green];
m3_56 -> m3_39  [key=2, style=dotted];
m3_56 -> m3_59  [key=0, style=solid, color=green];
m3_56 -> m3_66  [key=2, style=dotted, color=green];
m3_57 -> m3_58  [key=0, style=solid, color=green];
m3_57 -> m3_26  [key=2, style=dotted];
m3_58 -> m3_52  [key=0, style=bold, color=blue];
m3_58 -> m3_61  [key=0, style=solid, color=green];
m3_58 -> m3_67  [key=2, style=dotted, color=green];
m3_58 -> m3_30  [key=2, style=dotted, color=green];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_51  [key=0, style=solid, color=green];
m3_59 -> m3_68  [key=2, style=dotted, color=green];
m3_60 -> m3_61  [key=0, style=solid, color=green];
m3_60 -> m3_37  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_22  [key=2, style=dotted];
m3_61 -> m3_10  [key=0, style=bold, color=blue];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_38  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_39  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_26  [key=2, style=dotted];
m3_65 -> m3_59  [key=0, style=bold, color=blue];
m3_21 -> m3_26  [key=0, style=solid];
m3_21 -> m3_30  [key=2, style=dotted];
m3_21 -> m3_29  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid, color=red];
m3_11 -> m3_14  [key=1, style=dashed, color=green, label="System.Type"];
m3_11 -> m3_16  [key=1, style=dashed, color=green, label="HangFire.States.JobState"];
m3_11 -> m3_18  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m3_11 -> m3_22  [key=1, style=dashed, color=green, label="System.Type"];
m3_11 -> m3_23  [key=1, style=dashed, color=green, label=string];
m3_11 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_11 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_11 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_12 -> m3_13  [key=0, style=solid, color=green];
m3_12 -> m3_14  [key=0, style=solid, color=green];
m3_12 -> m3_27  [key=2, style=dotted, color=green];
m3_12 -> m3_9  [key=0, style=bold, color=blue];
m3_13 -> m3_26  [key=0, style=solid, color=green];
m3_13 -> m3_5  [key=2, style=dotted, color=green];
m3_14 -> m3_15  [key=0, style=solid, color=red];
m3_14 -> m3_16  [key=0, style=solid, color=green];
m3_15 -> m3_26  [key=0, style=solid, color=green];
m3_15 -> m3_5  [key=2, style=dotted, color=green];
m3_15 -> m3_16  [key=0, style=solid, color=red];
m3_15 -> m3_17  [key=0, style=solid, color=red];
m3_16 -> m3_17  [key=0, style=solid, color=green];
m3_16 -> m3_18  [key=0, style=solid, color=green];
m3_16 -> m3_0  [key=2, style=dotted];
m3_17 -> m3_26  [key=0, style=solid, color=green];
m3_17 -> m3_5  [key=2, style=dotted, color=green];
m3_17 -> m3_14  [key=0, style=bold, color=blue];
m3_18 -> m3_19  [key=0, style=solid, color=red];
m3_18 -> m3_20  [key=0, style=solid, color=green];
m3_19 -> m3_26  [key=0, style=solid, color=green];
m3_19 -> m3_5  [key=2, style=dotted, color=green];
m3_19 -> m3_20  [key=0, style=solid, color=red];
m3_19 -> m3_21  [key=2, style=dotted, color=red];
m3_20 -> m3_22  [key=0, style=solid, color=green];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_28  [key=2, style=dotted];
m3_20 -> m3_18  [key=0, style=bold, color=blue];
m3_30 -> m3_31  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_26  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_30  [key=0, style=bold, color=blue];
m3_37 -> m3_35  [key=0, style=bold, color=blue];
m3_31 -> m3_41  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m3_31 -> m3_39  [key=0, style=solid];
m3_31 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_37  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid, color=green];
m3_41 -> m3_46  [key=2, style=dotted, color=green];
m3_41 -> m3_37  [key=2, style=dotted];
m3_39 -> m3_41  [key=1, style=dashed, color=green, label=job];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_45  [key=2, style=dotted];
m3_39 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m3_39 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m3_40 -> m3_41  [key=0, style=solid, color=green];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_47  [key=2, style=dotted];
m3_42 -> m3_22  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_38  [key=2, style=dotted];
m3_44 -> m3_31  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_50  [key=2, style=dotted];
m3_44 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label=table1];
m3_44 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=table1];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_0 -> m3_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_5  [key=2, style=dotted, color=red];
m3_1 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_3  [key=0, style=solid, color=red];
m3_2 -> m3_6  [key=2, style=dotted, color=red];
m3_2 -> m3_7  [key=2, style=dotted, color=red];
m3_2 -> m3_4  [key=0, style=solid, color=green];
m3_2 -> m3_5  [key=2, style=dotted, color=green];
m3_3 -> m3_4  [key=0, style=solid, color=red];
m3_3 -> m3_8  [key=2, style=dotted, color=red];
m3_3 -> m3_6  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_51  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_39  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_22  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_38  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_39  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_51  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid, color=green];
m3_48 -> m3_26  [key=2, style=dotted];
m3_48 -> m3_45  [key=2, style=dotted, color=green];
m3_48 -> m3_50  [key=1, style=dashed, color=green, label=result];
m3_48 -> m3_59  [key=1, style=dashed, color=green, label=result];
m3_48 -> m3_60  [key=1, style=dashed, color=green, label=result];
m3_49 -> m3_40  [key=0, style=bold, color=blue];
m3_49 -> m3_50  [key=0, style=solid, color=green];
m3_49 -> m3_51  [key=0, style=solid, color=green];
m3_7 -> m3_8  [key=0, style=solid, color=green];
m3_7 -> m3_11  [key=3, color=darkorchid, style=bold, label="method methodReturn string CreateJob"];
m3_51 -> m3_52  [key=0, style=solid, color=green];
m3_51 -> m3_60  [key=0, style=solid, color=green];
m3_51 -> m3_62  [key=2, style=dotted, color=green];
m3_51 -> m3_58  [key=1, style=dashed, color=green, label=descriptor];
m3_51 -> m3_59  [key=1, style=dashed, color=green, label=descriptor];
m3_10 -> m3_48  [key=0, style=solid, color=green];
m3_10 -> m3_49  [key=1, style=dashed, color=green, label=object];
m3_10 -> m3_51  [key=1, style=dashed, color=green, label=object];
m3_10 -> m3_52  [key=1, style=dashed, color=green, label=object];
m3_10 -> m3_11  [key=0, style=solid, color=red];
m3_10 -> m3_13  [key=2, style=dotted, color=red];
m3_50 -> m3_61  [key=0, style=solid, color=green];
m3_73 -> m3_74  [key=0, style=solid];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_37  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_22  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_38  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_39  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_26  [key=2, style=dotted];
m3_79 -> m3_73  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid, color=red];
m3_9 -> m3_7  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid, color=green];
m3_8 -> m3_10  [key=2, style=dotted, color=green];
m3_8 -> m3_11  [key=2, style=dotted, color=green];
m3_80 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m3_80 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_54  [key=2, style=dotted];
m4_18 -> m4_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString SidebarMenu"];
m4_18 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m4_20 -> m4_5  [key=2, style=dotted];
m4_20 -> m4_6  [key=2, style=dotted];
m4_20 -> m4_22  [key=0, style=solid];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_21 -> m4_13  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_17  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=0, style=solid];
m4_19 -> m4_22  [key=2, style=dotted];
m4_19 -> m4_23  [key=2, style=dotted];
m4_19 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_22 -> m4_18  [key=0, style=bold, color=blue];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_7 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m4_7 -> m4_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Breadcrumbs"];
m4_7 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_16  [key=2, style=dotted];
m4_10 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_10 -> m4_13  [key=2, style=dotted];
m4_10 -> m4_12  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_13  [key=0, style=solid, color=red];
m4_9 -> m4_15  [key=2, style=dotted];
m4_9 -> m4_5  [key=2, style=dotted];
m4_9 -> m4_6  [key=2, style=dotted];
m4_9 -> m4_11  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid, color=red];
m4_13 -> m4_17  [key=2, style=dotted, color=red];
m4_13 -> m4_13  [key=3, color=darkorchid, style=bold, label="Local variable bool wasError"];
m4_13 -> m4_47  [key=0, style=solid];
m4_13 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_7  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid, color=red];
m4_14 -> m4_6  [key=0, style=bold, color=blue];
m4_14 -> m4_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobsSidebar"];
m4_14 -> m4_15  [key=0, style=solid];
m4_130 -> m4_131  [key=0, style=solid];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_134  [key=2, style=dotted];
m4_132 -> m4_51  [key=2, style=dotted];
m4_132 -> m4_133  [key=0, style=solid];
m4_133 -> m4_130  [key=0, style=bold, color=blue];
m4_56 -> m4_75  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_56 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m4_58 -> m4_51  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_60  [key=2, style=dotted];
m4_58 -> m4_61  [key=2, style=dotted];
m4_58 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_59 -> m4_56  [key=0, style=bold, color=blue];
m4_59 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_27 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_27 -> m4_23  [key=0, style=bold, color=blue];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_16  [key=2, style=dotted];
m4_29 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m4_29 -> m4_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString InlineMetric"];
m4_29 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m4_30 -> m4_27  [key=0, style=bold, color=blue];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=0, style=solid];
m4_16 -> m4_52  [key=0, style=solid];
m4_16 -> m4_14  [key=0, style=bold, color=blue];
m4_53 -> m4_16  [key=0, style=bold, color=blue];
m4_53 -> m4_54  [key=0, style=solid];
m4_35 -> m4_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Paginator"];
m4_35 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m4_37 -> m4_5  [key=2, style=dotted];
m4_37 -> m4_6  [key=2, style=dotted];
m4_37 -> m4_39  [key=0, style=solid];
m4_37 -> m4_35  [key=0, style=bold, color=blue];
m4_38 -> m4_13  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_40  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_38  [key=0, style=solid];
m4_39 -> m4_35  [key=0, style=bold, color=blue];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_42 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m4_43 -> m4_5  [key=2, style=dotted];
m4_43 -> m4_6  [key=2, style=dotted];
m4_43 -> m4_45  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_16  [key=2, style=dotted];
m4_44 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_44 -> m4_13  [key=2, style=dotted];
m4_45 -> m4_42  [key=0, style=bold, color=blue];
m4_45 -> m4_41  [key=0, style=bold, color=blue];
m4_15 -> m4_13  [key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [key=2, style=dotted];
m4_40 -> m4_38  [key=0, style=bold, color=blue];
m4_143 -> m4_144  [key=0, style=solid];
m4_144 -> m4_51  [key=2, style=dotted];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_146  [key=2, style=dotted];
m4_145 -> m4_143  [key=0, style=bold, color=blue];
m4_82 -> m4_62  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m4_82 -> m4_147  [key=0, style=solid];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_149  [key=2, style=dotted];
m4_148 -> m4_82  [key=0, style=bold, color=blue];
m4_54 -> m4_51  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_53  [key=0, style=bold, color=blue];
m4_55 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_55 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_55 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_55 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_55 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_55 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_55 -> m4_13  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_55 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_55 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_55 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m4_0 -> m4_1  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_6  [key=2, style=dotted];
m4_2 -> m4_4  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_23 -> m4_24  [key=0, style=solid, color=green];
m4_23 -> m4_25  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.DashboardMetric"];
m4_23 -> m4_23  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<HangFire.Filters.CreatedContext> continuation"];
m4_23 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m4_23 -> m4_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString BlockMetric"];
m4_24 -> m4_25  [key=0, style=solid, color=green];
m4_24 -> m4_26  [key=0, style=solid, color=green];
m4_25 -> m4_27  [key=0, style=solid, color=green];
m4_25 -> m4_5  [key=2, style=dotted, color=green];
m4_25 -> m4_6  [key=2, style=dotted, color=green];
m4_25 -> m4_26  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=2, style=dotted];
m4_26 -> m4_13  [key=2, style=dotted];
m4_26 -> m4_24  [key=0, style=bold, color=blue];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString MomentTitle"];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_86  [key=2, style=dotted];
m4_88 -> m4_53  [key=2, style=dotted];
m4_89 -> m4_87  [key=0, style=bold, color=blue];
m4_61 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_135 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_138 -> m4_51  [key=2, style=dotted];
m4_138 -> m4_139  [key=0, style=solid];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_141  [key=2, style=dotted];
m4_137 -> m4_142  [key=2, style=dotted];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_140  [key=2, style=dotted];
m4_139 -> m4_135  [key=0, style=bold, color=blue];
m4_62 -> m4_79  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Common.Job job"];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m4_62 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_65  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_67  [key=2, style=dotted];
m4_64 -> m4_66  [key=0, style=solid];
m4_66 -> m4_62  [key=0, style=bold, color=blue];
m4_60 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m4_31 -> m4_5  [key=2, style=dotted];
m4_31 -> m4_6  [key=2, style=dotted];
m4_31 -> m4_33  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_13  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=2, style=dotted];
m4_32 -> m4_23  [key=2, style=dotted];
m4_32 -> m4_22  [key=2, style=dotted];
m4_32 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_33 -> m4_29  [key=0, style=bold, color=blue];
m4_33 -> m4_31  [key=0, style=bold, color=blue];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString RelativeTime"];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_86  [key=2, style=dotted];
m4_84 -> m4_53  [key=2, style=dotted];
m4_85 -> m4_83  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_34  [key=2, style=dotted];
m4_47 -> m4_50  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_51  [key=2, style=dotted];
m4_48 -> m4_52  [key=2, style=dotted];
m4_49 -> m4_46  [key=0, style=bold, color=blue];
m4_49 -> m4_13  [key=0, style=bold, color=blue];
m4_68 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString StateLabel"];
m4_70 -> m4_72  [key=0, style=solid];
m4_70 -> m4_53  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_74  [key=2, style=dotted];
m4_71 -> m4_53  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_71  [key=0, style=solid];
m4_69 -> m4_73  [key=2, style=dotted];
m4_72 -> m4_68  [key=0, style=bold, color=blue];
m4_41 -> m4_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString PerPageSelector"];
m4_41 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobIdLink"];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=2, style=dotted];
m4_76 -> m4_56  [key=2, style=dotted];
m4_76 -> m4_53  [key=2, style=dotted];
m4_77 -> m4_75  [key=0, style=bold, color=blue];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobNameLink"];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_78  [key=2, style=dotted];
m4_80 -> m4_62  [key=2, style=dotted];
m4_80 -> m4_82  [key=2, style=dotted];
m4_80 -> m4_53  [key=2, style=dotted];
m4_81 -> m4_79  [key=0, style=bold, color=blue];
m4_150 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m4_150 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_6  [key=0, style=bold, color=blue];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_10  [key=0, style=bold, color=blue];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_38  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_4  [key=0, style=bold, color=blue];
m6_34 -> m6_35  [key=0, style=solid];
m6_35 -> m6_34  [key=0, style=bold, color=blue];
m6_32 -> m6_33  [key=0, style=solid];
m6_33 -> m6_32  [key=0, style=bold, color=blue];
m6_42 -> m6_43  [key=0, style=solid];
m6_43 -> m6_42  [key=0, style=bold, color=blue];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_18  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_8  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_12  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid];
m6_15 -> m6_14  [key=0, style=bold, color=blue];
m6_20 -> m6_21  [key=0, style=solid];
m6_21 -> m6_20  [key=0, style=bold, color=blue];
m6_28 -> m6_29  [key=0, style=solid];
m6_29 -> m6_28  [key=0, style=bold, color=blue];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_24  [key=0, style=bold, color=blue];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_22  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_16  [key=0, style=bold, color=blue];
m6_40 -> m6_41  [key=0, style=solid];
m6_41 -> m6_40  [key=0, style=bold, color=blue];
m6_36 -> m6_37  [key=0, style=solid];
m6_37 -> m6_36  [key=0, style=bold, color=blue];
m6_26 -> m6_27  [key=0, style=solid];
m6_27 -> m6_26  [key=0, style=bold, color=blue];
m6_30 -> m6_31  [key=0, style=solid];
m6_31 -> m6_30  [key=0, style=bold, color=blue];
m7_5 -> m7_17  [key=0, style=solid];
m7_5 -> m7_21  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m7_18 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m7_18 -> m7_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString SidebarMenu"];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_21  [key=0, style=solid];
m7_20 -> m7_22  [key=0, style=solid];
m7_20 -> m7_5  [key=2, style=dotted];
m7_20 -> m7_6  [key=2, style=dotted];
m7_20 -> m7_26  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_17  [key=2, style=dotted];
m7_21 -> m7_13  [key=2, style=dotted];
m7_21 -> m7_10  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m7_22 -> m7_18  [key=0, style=bold, color=blue];
m7_22 -> m7_31  [key=0, style=solid];
m7_22 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_56 -> m7_75  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m7_57 -> m7_58  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_51  [key=2, style=dotted];
m7_58 -> m7_60  [key=2, style=dotted];
m7_58 -> m7_61  [key=2, style=dotted];
m7_59 -> m7_56  [key=0, style=bold, color=blue];
m7_130 -> m7_131  [key=0, style=solid];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_134  [key=2, style=dotted];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_51  [key=2, style=dotted];
m7_133 -> m7_130  [key=0, style=bold, color=blue];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_29  [key=2, style=dotted];
m7_26 -> m7_30  [key=2, style=dotted];
m7_26 -> m7_28  [key=2, style=dotted];
m7_26 -> m7_13  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_23  [key=0, style=bold, color=blue];
m7_28 -> m7_20  [key=0, style=bold, color=blue];
m7_39 -> m7_35  [key=0, style=bold, color=blue];
m7_25 -> m7_27  [key=0, style=solid];
m7_25 -> m7_5  [key=2, style=dotted];
m7_25 -> m7_6  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m7_35 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m7_35 -> m7_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Paginator"];
m7_35 -> m7_41  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_38  [key=0, style=solid];
m7_36 -> m7_22  [key=0, style=bold, color=blue];
m7_37 -> m7_39  [key=0, style=solid];
m7_37 -> m7_5  [key=2, style=dotted];
m7_37 -> m7_6  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_40  [key=2, style=dotted];
m7_38 -> m7_13  [key=2, style=dotted];
m7_38 -> m7_7  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m7_7 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=script];
m7_7 -> m7_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Breadcrumbs"];
m7_7 -> m7_7  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_7 -> m7_23  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_10  [key=0, style=solid];
m7_8 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_8 -> m7_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m7_9 -> m7_11  [key=0, style=solid];
m7_9 -> m7_5  [key=2, style=dotted];
m7_9 -> m7_6  [key=2, style=dotted];
m7_9 -> m7_16  [key=0, style=solid, color=green];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [key=2, style=dotted];
m7_10 -> m7_13  [key=2, style=dotted];
m7_10 -> m7_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan interval"];
m7_10 -> m7_21  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m7_10 -> m7_16  [key=0, style=solid, color=green];
m7_10 -> m7_24  [key=2, style=dotted];
m7_11 -> m7_7  [key=0, style=bold, color=blue];
m7_11 -> m7_12  [key=0, style=solid];
m7_122 -> m7_123  [key=0, style=solid];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_125  [key=2, style=dotted];
m7_123 -> m7_126  [key=2, style=dotted];
m7_123 -> m7_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_124 -> m7_122  [key=0, style=bold, color=blue];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m7_23 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m7_23 -> m7_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString BlockMetric"];
m7_17 -> m7_0  [key=0, style=bold, color=blue];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m7_29 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m7_29 -> m7_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString InlineMetric"];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobsSidebar"];
m7_14 -> m7_17  [key=0, style=solid, color=green];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_17  [key=2, style=dotted];
m7_15 -> m7_13  [key=2, style=dotted];
m7_15 -> m7_9  [key=0, style=solid];
m7_15 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_16 -> m7_14  [key=0, style=bold, color=blue];
m7_16 -> m7_17  [key=0, style=solid, color=green];
m7_16 -> m7_19  [key=2, style=dotted, color=green];
m7_143 -> m7_144  [key=0, style=solid];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_51  [key=2, style=dotted];
m7_144 -> m7_146  [key=2, style=dotted];
m7_145 -> m7_143  [key=0, style=bold, color=blue];
m7_82 -> m7_147  [key=0, style=solid];
m7_82 -> m7_62  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_149  [key=2, style=dotted];
m7_148 -> m7_82  [key=0, style=bold, color=blue];
m7_53 -> m7_54  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_51  [key=2, style=dotted];
m7_55 -> m7_53  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_0 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m7_0 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m7_0 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_3  [key=0, style=solid, color=green];
m7_1 -> m7_10  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m7_2 -> m7_4  [key=0, style=solid];
m7_2 -> m7_5  [key=2, style=dotted, color=green];
m7_2 -> m7_6  [key=2, style=dotted];
m7_2 -> m7_17  [key=0, style=solid, color=green];
m7_3 -> m7_4  [key=0, style=solid, color=green];
m7_3 -> m7_19  [key=2, style=dotted, color=green];
m7_4 -> m7_0  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_6  [key=0, style=solid];
m7_4 -> m7_20  [key=2, style=dotted];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_26  [key=0, style=solid];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString MomentTitle"];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_86  [key=2, style=dotted];
m7_88 -> m7_53  [key=2, style=dotted];
m7_89 -> m7_87  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_22  [key=2, style=dotted];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_135 -> m7_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_140  [key=2, style=dotted];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_141  [key=2, style=dotted];
m7_137 -> m7_142  [key=2, style=dotted];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_51  [key=2, style=dotted];
m7_139 -> m7_135  [key=0, style=bold, color=blue];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m7_62 -> m7_79  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Common.Job job"];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_65  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_67  [key=2, style=dotted];
m7_64 -> m7_66  [key=0, style=solid];
m7_66 -> m7_62  [key=0, style=bold, color=blue];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_90 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_90 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_93  [key=0, style=solid];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_96  [key=0, style=solid];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_117  [key=2, style=dotted];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_118  [key=2, style=dotted];
m7_96 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_98  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_99  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_100  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_101  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_103  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_104  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_105  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_106  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_107  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_109  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_96 -> m7_110  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m7_92 -> m7_115  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_116  [key=2, style=dotted];
m7_93 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_98  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_100  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_105  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_107  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_108  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_110  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_111  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_112  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_113  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_93 -> m7_114  [key=1, style=dashed, color=darkseagreen4, label=builder];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_117  [key=2, style=dotted];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_117  [key=2, style=dotted];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_117  [key=2, style=dotted];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_119  [key=2, style=dotted];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_117  [key=2, style=dotted];
m7_108 -> m7_111  [key=0, style=solid];
m7_108 -> m7_117  [key=2, style=dotted];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_117  [key=2, style=dotted];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_113  [key=0, style=solid];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_117  [key=2, style=dotted];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_120  [key=2, style=dotted];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_121  [key=2, style=dotted];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_99  [key=0, style=solid];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_101  [key=0, style=solid];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_103  [key=0, style=solid];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_111  [key=0, style=solid];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_109  [key=0, style=solid];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_108  [key=0, style=solid];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_111  [key=0, style=solid];
m7_115 -> m7_90  [key=0, style=bold, color=blue];
m7_12 -> m7_14  [key=0, style=solid, color=green];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_8  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m7_13 -> m7_15  [key=0, style=solid];
m7_13 -> m7_25  [key=2, style=dotted];
m7_13 -> m7_47  [key=0, style=solid];
m7_13 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_32  [key=0, style=solid];
m7_31 -> m7_33  [key=0, style=solid];
m7_31 -> m7_5  [key=2, style=dotted];
m7_31 -> m7_6  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_37  [key=2, style=dotted];
m7_31 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=stream];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=2, style=dotted];
m7_32 -> m7_13  [key=2, style=dotted];
m7_33 -> m7_29  [key=0, style=bold, color=blue];
m7_33 -> m7_36  [key=0, style=solid];
m7_33 -> m7_38  [key=2, style=dotted];
m7_33 -> m7_39  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString RelativeTime"];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_86  [key=2, style=dotted];
m7_84 -> m7_53  [key=2, style=dotted];
m7_85 -> m7_83  [key=0, style=bold, color=blue];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_40  [key=2, style=dotted];
m7_127 -> m7_128  [key=0, style=solid];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_128  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m7_129 -> m7_127  [key=0, style=bold, color=blue];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_68 -> m7_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString StateLabel"];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_71  [key=0, style=solid];
m7_69 -> m7_73  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_74  [key=2, style=dotted];
m7_71 -> m7_53  [key=2, style=dotted];
m7_70 -> m7_72  [key=0, style=solid];
m7_70 -> m7_53  [key=2, style=dotted];
m7_72 -> m7_68  [key=0, style=bold, color=blue];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m7_41 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m7_41 -> m7_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString PerPageSelector"];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_44  [key=0, style=solid];
m7_43 -> m7_45  [key=0, style=solid];
m7_43 -> m7_5  [key=2, style=dotted];
m7_43 -> m7_6  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_46  [key=2, style=dotted];
m7_44 -> m7_13  [key=2, style=dotted];
m7_45 -> m7_41  [key=0, style=bold, color=blue];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobIdLink"];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_78  [key=2, style=dotted];
m7_76 -> m7_56  [key=2, style=dotted];
m7_76 -> m7_53  [key=2, style=dotted];
m7_77 -> m7_75  [key=0, style=bold, color=blue];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobNameLink"];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_78  [key=2, style=dotted];
m7_80 -> m7_62  [key=2, style=dotted];
m7_80 -> m7_82  [key=2, style=dotted];
m7_80 -> m7_53  [key=2, style=dotted];
m7_81 -> m7_79  [key=0, style=bold, color=blue];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_50  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_51  [key=2, style=dotted];
m7_48 -> m7_52  [key=2, style=dotted];
m7_49 -> m7_13  [key=0, style=bold, color=blue];
m7_150 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m7_150 -> m7_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_31  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_32  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_19  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_33  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_34  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_35  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_36  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_37  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_31 -> m8_20  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_6  [key=2, style=dotted];
m8_3 -> m8_7  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_8  [key=2, style=dotted];
m8_5 -> m8_0  [key=0, style=bold, color=blue];
m8_34 -> m8_38  [key=0, style=solid];
m8_41 -> m8_39  [key=0, style=solid, color=green];
m8_41 -> m8_47  [key=2, style=dotted, color=green];
m8_39 -> m8_41  [key=1, style=dashed, color=green, label=payload];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_42  [key=0, style=solid];
m8_39 -> m8_44  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid, color=green];
m8_40 -> m8_46  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label=enqueuedState];
m8_38 -> m8_45  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_48  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_44 -> m8_34  [key=0, style=bold, color=blue];
m8_49 -> m8_50  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_54  [key=0, style=solid];
m8_53 -> m8_52  [key=0, style=solid];
m8_53 -> m8_62  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_63  [key=2, style=dotted];
m8_54 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=payload];
m8_55 -> m8_56  [key=0, style=solid];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_64  [key=2, style=dotted];
m8_57 -> m8_50  [key=0, style=solid];
m8_57 -> m8_65  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_66  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_58  [key=0, style=solid];
m8_50 -> m8_59  [key=0, style=solid];
m8_50 -> m8_61  [key=0, style=solid];
m8_59 -> m8_60  [key=0, style=solid];
m8_58 -> m8_61  [key=0, style=solid];
m8_61 -> m8_49  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_17  [key=2, style=dotted];
m8_10 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=payload];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_18  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_19  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_9  [key=0, style=bold, color=blue];
m8_67 -> m8_41  [key=1, style=dashed, color=green, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m8_67 -> m8_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=2, style=dotted];
m9_29 -> m9_32  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label=filter];
m9_29 -> m9_27  [key=0, style=bold, color=blue];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_33  [key=2, style=dotted];
m9_30 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_30 -> m9_242  [key=0, style=solid];
m9_31 -> m9_28  [key=0, style=bold, color=blue];
m9_31 -> m9_32  [key=0, style=solid];
m9_91 -> m9_92  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_74  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_23  [key=2, style=dotted];
m9_93 -> m9_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_93 -> m9_91  [key=0, style=bold, color=blue];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_24  [key=2, style=dotted];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_25  [key=2, style=dotted];
m9_95 -> m9_32  [key=2, style=dotted];
m9_95 -> m9_99  [key=1, style=dashed, color=darkseagreen4, label=filter];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_26  [key=2, style=dotted];
m9_96 -> m9_33  [key=2, style=dotted];
m9_96 -> m9_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_97 -> m9_91  [key=0, style=bold, color=blue];
m9_97 -> m9_94  [key=0, style=bold, color=blue];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_68  [key=2, style=dotted];
m9_79 -> m9_69  [key=2, style=dotted];
m9_79 -> m9_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_49 -> m9_50  [key=0, style=solid, color=green];
m9_49 -> m9_43  [key=0, style=bold, color=blue];
m9_50 -> m9_51  [key=0, style=solid, color=red];
m9_50 -> m9_32  [key=2, style=dotted, color=green];
m9_50 -> m9_55  [key=1, style=dashed, color=green, label=filter];
m9_50 -> m9_25  [key=0, style=solid, color=green];
m9_51 -> m9_52  [key=0, style=solid, color=red];
m9_51 -> m9_53  [key=2, style=dotted, color=red];
m9_51 -> m9_54  [key=1, style=dashed, color=green, label="lambda expression"];
m9_52 -> m9_49  [key=0, style=bold, color=blue];
m9_52 -> m9_50  [key=0, style=bold, color=blue];
m9_16 -> m9_17  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_23  [key=2, style=dotted];
m9_18 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_24  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_25  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_26  [key=2, style=dotted];
m9_22 -> m9_16  [key=0, style=bold, color=blue];
m9_229 -> m9_230  [key=0, style=solid];
m9_230 -> m9_231  [key=0, style=solid];
m9_231 -> m9_229  [key=0, style=bold, color=blue];
m9_78 -> m9_79  [key=0, style=solid];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_68  [key=2, style=dotted];
m9_80 -> m9_69  [key=2, style=dotted];
m9_80 -> m9_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_83 -> m9_32  [key=2, style=dotted];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=type];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_70  [key=2, style=dotted];
m9_84 -> m9_78  [key=2, style=dotted];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_46  [key=2, style=dotted];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_46  [key=2, style=dotted];
m9_82 -> m9_90  [key=2, style=dotted];
m9_82 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m9_85 -> m9_48  [key=2, style=dotted];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_79  [key=2, style=dotted];
m9_86 -> m9_48  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_24  [key=2, style=dotted];
m9_87 -> m9_78  [key=0, style=bold, color=blue];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_25  [key=2, style=dotted];
m9_242 -> m9_243  [key=0, style=solid];
m9_243 -> m9_30  [key=0, style=bold, color=blue];
m9_112 -> m9_232  [key=0, style=solid];
m9_112 -> m9_233  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_112 -> m9_102  [key=0, style=bold, color=blue];
m9_232 -> m9_233  [key=0, style=solid];
m9_233 -> m9_234  [key=0, style=solid];
m9_233 -> m9_235  [key=2, style=dotted];
m9_234 -> m9_112  [key=0, style=bold, color=blue];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_17  [key=2, style=dotted];
m9_5 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label=createContext];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_113  [key=0, style=bold, color=blue];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_68  [key=2, style=dotted];
m9_120 -> m9_69  [key=2, style=dotted];
m9_120 -> m9_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_68  [key=2, style=dotted];
m9_121 -> m9_69  [key=2, style=dotted];
m9_121 -> m9_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_124 -> m9_32  [key=2, style=dotted];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_126  [key=1, style=dashed, color=darkseagreen4, label=filter];
m9_124 -> m9_10  [key=2, style=dotted];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_70  [key=2, style=dotted];
m9_125 -> m9_123  [key=0, style=bold, color=blue];
m9_126 -> m9_127  [key=0, style=solid];
m9_126 -> m9_101  [key=2, style=dotted];
m9_122 -> m9_123  [key=0, style=solid];
m9_122 -> m9_46  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_46  [key=2, style=dotted];
m9_127 -> m9_48  [key=2, style=dotted];
m9_127 -> m9_128  [key=0, style=solid];
m9_128 -> m9_48  [key=2, style=dotted];
m9_128 -> m9_129  [key=0, style=solid];
m9_128 -> m9_42  [key=2, style=dotted];
m9_129 -> m9_119  [key=0, style=bold, color=blue];
m9_129 -> m9_127  [key=0, style=bold, color=blue];
m9_190 -> m9_191  [key=0, style=solid];
m9_191 -> m9_192  [key=0, style=solid];
m9_191 -> m9_23  [key=2, style=dotted];
m9_191 -> m9_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_192 -> m9_193  [key=0, style=solid];
m9_192 -> m9_121  [key=2, style=dotted];
m9_192 -> m9_10  [key=2, style=dotted];
m9_192 -> m9_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_193 -> m9_194  [key=0, style=solid];
m9_193 -> m9_24  [key=2, style=dotted];
m9_193 -> m9_205  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_194 -> m9_195  [key=0, style=solid];
m9_194 -> m9_10  [key=2, style=dotted];
m9_194 -> m9_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_195 -> m9_190  [key=0, style=bold, color=blue];
m9_101 -> m9_239  [key=0, style=solid];
m9_101 -> m9_240  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m9_239 -> m9_240  [key=0, style=solid];
m9_240 -> m9_241  [key=0, style=solid];
m9_240 -> m9_11  [key=2, style=dotted];
m9_241 -> m9_101  [key=0, style=bold, color=blue];
m9_24 -> m9_251  [key=0, style=solid];
m9_251 -> m9_252  [key=0, style=solid];
m9_251 -> m9_253  [key=2, style=dotted];
m9_252 -> m9_24  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_68  [key=2, style=dotted];
m9_103 -> m9_69  [key=2, style=dotted];
m9_103 -> m9_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_68  [key=2, style=dotted];
m9_104 -> m9_69  [key=2, style=dotted];
m9_104 -> m9_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_104 -> m9_23  [key=2, style=dotted];
m9_104 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_107 -> m9_32  [key=2, style=dotted];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label=filter];
m9_107 -> m9_26  [key=2, style=dotted];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_70  [key=2, style=dotted];
m9_108 -> m9_102  [key=0, style=bold, color=blue];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_101  [key=2, style=dotted];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_46  [key=2, style=dotted];
m9_105 -> m9_24  [key=2, style=dotted];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_46  [key=2, style=dotted];
m9_106 -> m9_25  [key=2, style=dotted];
m9_110 -> m9_48  [key=2, style=dotted];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_112  [key=2, style=dotted];
m9_111 -> m9_48  [key=2, style=dotted];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_109  [key=0, style=bold, color=blue];
m9_37 -> m9_31  [key=0, style=bold, color=blue];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_24  [key=2, style=dotted];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_48  [key=2, style=dotted];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_48  [key=2, style=dotted];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_76  [key=2, style=dotted];
m9_67 -> m9_58  [key=0, style=bold, color=blue];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_77  [key=2, style=dotted];
m9_68 -> m9_71  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_71  [key=1, style=dashed, color=darkseagreen4, label=type];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_79  [key=2, style=dotted];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_78  [key=2, style=dotted];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_24  [key=2, style=dotted];
m9_72 -> m9_74  [key=2, style=dotted];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_25  [key=2, style=dotted];
m9_73 -> m9_71  [key=0, style=bold, color=blue];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_26  [key=2, style=dotted];
m9_75 -> m9_65  [key=0, style=bold, color=blue];
m9_75 -> m9_76  [key=0, style=solid];
m9_42 -> m9_43  [key=0, style=solid, color=green];
m9_42 -> m9_37  [key=2, style=dotted, color=green];
m9_42 -> m9_217  [key=0, style=solid];
m9_41 -> m9_42  [key=0, style=solid, color=green];
m9_41 -> m9_32  [key=2, style=dotted];
m9_41 -> m9_39  [key=0, style=bold, color=blue];
m9_43 -> m9_44  [key=0, style=solid, color=red];
m9_43 -> m9_47  [key=2, style=dotted];
m9_43 -> m9_48  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid, color=red];
m9_44 -> m9_47  [key=2, style=dotted];
m9_44 -> m9_48  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_46  [key=2, style=dotted];
m9_40 -> m9_42  [key=2, style=dotted];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_46  [key=2, style=dotted];
m9_45 -> m9_38  [key=0, style=bold, color=blue];
m9_45 -> m9_46  [key=0, style=solid, color=red];
m9_45 -> m9_50  [key=1, style=dashed, color=red, label="lambda expression"];
m9_113 -> m9_114  [key=0, style=solid];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_120  [key=2, style=dotted];
m9_114 -> m9_74  [key=2, style=dotted];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_121  [key=2, style=dotted];
m9_115 -> m9_122  [key=2, style=dotted];
m9_115 -> m9_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_115 -> m9_113  [key=0, style=bold, color=blue];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_23  [key=2, style=dotted];
m9_116 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_24  [key=2, style=dotted];
m9_117 -> m9_131  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_117 -> m9_74  [key=2, style=dotted];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_10  [key=2, style=dotted];
m9_118 -> m9_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_118 -> m9_116  [key=0, style=bold, color=blue];
m9_46 -> m9_47  [key=0, style=solid, color=red];
m9_46 -> m9_24  [key=2, style=dotted, color=red];
m9_47 -> m9_48  [key=0, style=solid, color=red];
m9_47 -> m9_25  [key=2, style=dotted, color=red];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_26  [key=2, style=dotted];
m9_98 -> m9_99  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_0  [key=0, style=bold, color=blue];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=2, style=dotted];
m9_14 -> m9_12  [key=0, style=bold, color=blue];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_136  [key=0, style=solid];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_46  [key=2, style=dotted];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_64  [key=2, style=dotted];
m9_62 -> m9_3  [key=3, color=darkorchid, style=bold, label="Local variable bool wasEnqueued"];
m9_62 -> m9_46  [key=2, style=dotted];
m9_63 -> m9_61  [key=0, style=bold, color=blue];
m9_63 -> m9_32  [key=2, style=dotted];
m9_63 -> m9_64  [key=0, style=solid];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_101  [key=2, style=dotted];
m9_100 -> m9_98  [key=0, style=bold, color=blue];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_25  [key=2, style=dotted];
m9_131 -> m9_74  [key=2, style=dotted];
m9_130 -> m9_131  [key=0, style=solid];
m9_132 -> m9_130  [key=0, style=bold, color=blue];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_42  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_50  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_140 -> m9_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_99  [key=1, style=dashed, color=darkseagreen4, label=filter];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_25  [key=2, style=dotted];
m9_146 -> m9_147  [key=0, style=solid];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_10  [key=2, style=dotted];
m9_141 -> m9_126  [key=2, style=dotted];
m9_141 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label=filter];
m9_142 -> m9_140  [key=0, style=bold, color=blue];
m9_142 -> m9_55  [key=1, style=dashed, color=green, label=filter];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_42  [key=2, style=dotted];
m9_145 -> m9_143  [key=0, style=bold, color=blue];
m9_148 -> m9_146  [key=0, style=bold, color=blue];
m9_160 -> m9_161  [key=0, style=solid];
m9_160 -> m9_25  [key=2, style=dotted];
m9_159 -> m9_160  [key=0, style=solid];
m9_161 -> m9_159  [key=0, style=bold, color=blue];
m9_169 -> m9_170  [key=0, style=solid];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_25  [key=2, style=dotted];
m9_173 -> m9_174  [key=0, style=solid];
m9_170 -> m9_171  [key=0, style=solid];
m9_170 -> m9_172  [key=2, style=dotted];
m9_171 -> m9_169  [key=0, style=bold, color=blue];
m9_175 -> m9_173  [key=0, style=bold, color=blue];
m9_183 -> m9_184  [key=0, style=solid];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_25  [key=2, style=dotted];
m9_187 -> m9_188  [key=0, style=solid];
m9_184 -> m9_185  [key=0, style=solid];
m9_184 -> m9_186  [key=2, style=dotted];
m9_185 -> m9_183  [key=0, style=bold, color=blue];
m9_189 -> m9_187  [key=0, style=bold, color=blue];
m9_196 -> m9_197  [key=0, style=solid];
m9_200 -> m9_201  [key=0, style=solid];
m9_205 -> m9_206  [key=0, style=solid];
m9_205 -> m9_25  [key=2, style=dotted];
m9_204 -> m9_205  [key=0, style=solid];
m9_197 -> m9_198  [key=0, style=solid];
m9_197 -> m9_199  [key=2, style=dotted];
m9_198 -> m9_196  [key=0, style=bold, color=blue];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_203  [key=2, style=dotted];
m9_202 -> m9_200  [key=0, style=bold, color=blue];
m9_206 -> m9_204  [key=0, style=bold, color=blue];
m9_213 -> m9_214  [key=0, style=solid];
m9_214 -> m9_215  [key=0, style=solid];
m9_214 -> m9_216  [key=2, style=dotted];
m9_215 -> m9_213  [key=0, style=bold, color=blue];
m9_25 -> m9_52  [key=0, style=solid, color=green];
m9_25 -> m9_27  [key=2, style=dotted, color=green];
m9_55 -> m9_56  [key=0, style=solid, color=green];
m9_55 -> m9_57  [key=2, style=dotted, color=green];
m9_54 -> m9_55  [key=0, style=solid, color=green];
m9_56 -> m9_54  [key=0, style=bold, color=blue];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_23  [key=2, style=dotted];
m9_56 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_35 -> m9_37  [key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid, color=red];
m9_35 -> m9_25  [key=2, style=dotted];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_26  [key=2, style=dotted];
m9_133 -> m9_134  [key=0, style=solid];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_24  [key=2, style=dotted];
m9_36 -> m9_34  [key=0, style=bold, color=blue];
m9_36 -> m9_37  [key=0, style=solid, color=red];
m9_36 -> m9_26  [key=2, style=dotted, color=red];
m9_77 -> m9_75  [key=0, style=bold, color=blue];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_74  [key=2, style=dotted];
m9_90 -> m9_88  [key=0, style=bold, color=blue];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_74  [key=2, style=dotted];
m9_89 -> m9_80  [key=0, style=bold, color=blue];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_74  [key=2, style=dotted];
m9_134 -> m9_121  [key=2, style=dotted];
m9_134 -> m9_139  [key=2, style=dotted];
m9_134 -> m9_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_135 -> m9_133  [key=0, style=bold, color=blue];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_23  [key=2, style=dotted];
m9_135 -> m9_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_221 -> m9_222  [key=0, style=solid];
m9_222 -> m9_223  [key=0, style=solid];
m9_223 -> m9_221  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_16  [key=2, style=dotted];
m9_176 -> m9_177  [key=0, style=solid];
m9_177 -> m9_178  [key=0, style=solid];
m9_177 -> m9_23  [key=2, style=dotted];
m9_177 -> m9_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_178 -> m9_179  [key=0, style=solid];
m9_178 -> m9_24  [key=2, style=dotted];
m9_178 -> m9_188  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_10  [key=2, style=dotted];
m9_179 -> m9_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_179 -> m9_181  [key=1, style=dashed, color=darkseagreen4, label=thrownException];
m9_180 -> m9_181  [key=0, style=solid];
m9_180 -> m9_10  [key=2, style=dotted];
m9_181 -> m9_182  [key=0, style=solid];
m9_181 -> m9_11  [key=2, style=dotted];
m9_182 -> m9_176  [key=0, style=bold, color=blue];
m9_199 -> m9_236  [key=0, style=solid];
m9_236 -> m9_237  [key=0, style=solid];
m9_236 -> m9_238  [key=2, style=dotted];
m9_237 -> m9_199  [key=0, style=bold, color=blue];
m9_217 -> m9_218  [key=0, style=solid];
m9_218 -> m9_42  [key=0, style=bold, color=blue];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_25  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m9_6 -> m9_18  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_10  [key=2, style=dotted];
m9_7 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_7 -> m9_19  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_11  [key=2, style=dotted];
m9_8 -> m9_20  [key=2, style=dotted];
m9_9 -> m9_6  [key=0, style=bold, color=blue];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_21  [key=2, style=dotted];
m9_9 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m9_53 -> m9_219  [key=0, style=solid];
m9_219 -> m9_220  [key=0, style=solid];
m9_220 -> m9_53  [key=0, style=bold, color=blue];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_23  [key=2, style=dotted];
m9_0 -> m9_1  [key=0, style=solid, color=green];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_1 -> m9_4  [key=2, style=dotted];
m9_1 -> m9_13  [key=2, style=dotted, color=green];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_14  [key=2, style=dotted, color=green];
m9_2 -> m9_50  [key=1, style=dashed, color=green, label="lambda expression"];
m9_2 -> m9_9  [key=1, style=dashed, color=green, label=job];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_15  [key=2, style=dotted];
m9_3 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=state];
m9_3 -> m9_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_25  [key=2, style=dotted];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_68  [key=2, style=dotted];
m9_59 -> m9_69  [key=2, style=dotted];
m9_59 -> m9_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_59 -> m9_26  [key=2, style=dotted];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_68  [key=2, style=dotted];
m9_60 -> m9_69  [key=2, style=dotted];
m9_60 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_60 -> m9_54  [key=0, style=bold, color=blue];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_70  [key=2, style=dotted];
m9_64 -> m9_244  [key=0, style=solid];
m9_64 -> m9_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_64 -> m9_246  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_244 -> m9_245  [key=0, style=solid];
m9_245 -> m9_246  [key=0, style=solid];
m9_245 -> m9_11  [key=2, style=dotted];
m9_246 -> m9_247  [key=0, style=solid];
m9_246 -> m9_11  [key=2, style=dotted];
m9_247 -> m9_64  [key=0, style=bold, color=blue];
m9_162 -> m9_163  [key=0, style=solid];
m9_163 -> m9_164  [key=0, style=solid];
m9_164 -> m9_165  [key=0, style=solid];
m9_164 -> m9_38  [key=2, style=dotted];
m9_164 -> m9_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_24  [key=2, style=dotted];
m9_165 -> m9_174  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_166 -> m9_167  [key=0, style=solid];
m9_166 -> m9_10  [key=2, style=dotted];
m9_166 -> m9_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_167 -> m9_168  [key=0, style=solid];
m9_167 -> m9_26  [key=2, style=dotted];
m9_168 -> m9_162  [key=0, style=bold, color=blue];
m9_149 -> m9_150  [key=0, style=solid];
m9_150 -> m9_151  [key=0, style=solid];
m9_150 -> m9_152  [key=1, style=dashed, color=darkseagreen4, label=type];
m9_151 -> m9_152  [key=0, style=solid];
m9_151 -> m9_78  [key=2, style=dotted];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_157  [key=2, style=dotted];
m9_153 -> m9_154  [key=0, style=solid];
m9_153 -> m9_24  [key=2, style=dotted];
m9_153 -> m9_160  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_10  [key=2, style=dotted];
m9_154 -> m9_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_155 -> m9_156  [key=0, style=solid];
m9_155 -> m9_158  [key=2, style=dotted];
m9_156 -> m9_149  [key=0, style=bold, color=blue];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_24  [key=2, style=dotted];
m9_136 -> m9_147  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_136 -> m9_27  [key=0, style=bold, color=blue];
m9_137 -> m9_138  [key=0, style=solid];
m9_137 -> m9_10  [key=2, style=dotted];
m9_137 -> m9_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_137 -> m9_139  [key=2, style=dotted];
m9_138 -> m9_133  [key=0, style=bold, color=blue];
m9_138 -> m9_32  [key=0, style=bold, color=blue];
m9_172 -> m9_224  [key=0, style=solid];
m9_224 -> m9_225  [key=0, style=solid];
m9_225 -> m9_172  [key=0, style=bold, color=blue];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_137  [key=0, style=solid];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_38  [key=2, style=dotted];
m9_33 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_226 -> m9_227  [key=0, style=solid];
m9_227 -> m9_228  [key=0, style=solid];
m9_227 -> m9_120  [key=2, style=dotted];
m9_228 -> m9_226  [key=0, style=bold, color=blue];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_22  [key=2, style=dotted];
m9_207 -> m9_208  [key=0, style=solid];
m9_208 -> m9_209  [key=0, style=solid];
m9_208 -> m9_38  [key=2, style=dotted];
m9_208 -> m9_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_24  [key=2, style=dotted];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_25  [key=2, style=dotted];
m9_211 -> m9_212  [key=0, style=solid];
m9_211 -> m9_11  [key=2, style=dotted];
m9_212 -> m9_207  [key=0, style=bold, color=blue];
m9_186 -> m9_248  [key=0, style=solid];
m9_248 -> m9_249  [key=0, style=solid];
m9_248 -> m9_250  [key=2, style=dotted];
m9_249 -> m9_186  [key=0, style=bold, color=blue];
m9_254 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_45  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_46  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_47  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_205  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_208  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_254 -> m9_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m9_255 -> m9_131  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_256 -> m9_147  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_257 -> m9_160  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_258 -> m9_174  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_259 -> m9_188  [key=1, style=dashed, color=darkseagreen4, label=performer];
m9_260 -> m9_205  [key=1, style=dashed, color=darkseagreen4, label=performer];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_12  [key=2, style=dotted];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobActivator"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_1 -> m10_8  [key=2, style=dotted];
m10_1 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_10  [key=2, style=dotted];
m10_2 -> m10_4  [key=0, style=solid];
m10_2 -> m10_5  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_9  [key=2, style=dotted];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_11  [key=2, style=dotted];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_33  [key=0, style=solid];
m10_24 -> m10_35  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_22  [key=2, style=dotted];
m10_25 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_28  [key=2, style=dotted];
m10_26 -> m10_33  [key=0, style=solid];
m10_27 -> m10_24  [key=0, style=bold, color=blue];
m10_27 -> m10_28  [key=0, style=solid, color=red];
m10_110 -> m10_111  [key=0, style=solid];
m10_111 -> m10_62  [key=2, style=dotted];
m10_111 -> m10_112  [key=0, style=solid];
m10_111 -> m10_113  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_112 -> m10_113  [key=0, style=solid];
m10_112 -> m10_109  [key=2, style=dotted];
m10_112 -> m10_28  [key=2, style=dotted];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_109  [key=2, style=dotted];
m10_113 -> m10_28  [key=2, style=dotted];
m10_114 -> m10_110  [key=0, style=bold, color=blue];
m10_12 -> m10_10  [key=0, style=bold, color=blue];
m10_9 -> m10_6  [key=0, style=bold, color=blue];
m10_71 -> m10_90  [key=0, style=solid];
m10_71 -> m10_58  [key=2, style=dotted];
m10_63 -> m10_61  [key=0, style=bold, color=blue];
m10_180 -> m10_181  [key=0, style=solid];
m10_181 -> m10_62  [key=2, style=dotted];
m10_181 -> m10_182  [key=0, style=solid];
m10_181 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_181 -> m10_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_182 -> m10_183  [key=0, style=solid];
m10_182 -> m10_152  [key=2, style=dotted];
m10_183 -> m10_22  [key=2, style=dotted];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_184 -> m10_180  [key=0, style=bold, color=blue];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_28  [key=2, style=dotted];
m10_50 -> m10_47  [key=0, style=bold, color=blue];
m10_98 -> m10_94  [key=0, style=bold, color=blue];
m10_196 -> m10_197  [key=0, style=solid];
m10_197 -> m10_198  [key=0, style=solid];
m10_197 -> m10_13  [key=2, style=dotted];
m10_197 -> m10_14  [key=2, style=dotted];
m10_197 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_198 -> m10_62  [key=2, style=dotted];
m10_198 -> m10_199  [key=0, style=solid];
m10_198 -> m10_200  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_200 -> m10_71  [key=2, style=dotted];
m10_200 -> m10_201  [key=0, style=solid];
m10_199 -> m10_200  [key=0, style=solid];
m10_199 -> m10_152  [key=2, style=dotted];
m10_201 -> m10_202  [key=0, style=solid];
m10_201 -> m10_28  [key=2, style=dotted];
m10_202 -> m10_196  [key=0, style=bold, color=blue];
m10_28 -> m10_29  [key=0, style=solid, color=red];
m10_28 -> m10_36  [key=2, style=dotted, color=red];
m10_28 -> m10_30  [key=1, style=dashed, color=red, label=exceptionContext];
m10_10 -> m10_11  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid, color=green];
m10_67 -> m10_68  [key=0, style=solid, color=green];
m10_67 -> m10_62  [key=2, style=dotted, color=green];
m10_67 -> m10_69  [key=1, style=dashed, color=green, label=context];
m10_67 -> m10_90  [key=0, style=solid];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_71  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_63  [key=2, style=dotted];
m10_69 -> m10_90  [key=0, style=solid];
m10_69 -> m10_92  [key=2, style=dotted];
m10_70 -> m10_66  [key=0, style=bold, color=blue];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_72  [key=0, style=solid];
m10_90 -> m10_64  [key=0, style=bold, color=blue];
m10_158 -> m10_159  [key=0, style=solid];
m10_159 -> m10_62  [key=2, style=dotted];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_165  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_159 -> m10_161  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_159 -> m10_162  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_160 -> m10_161  [key=0, style=solid];
m10_160 -> m10_13  [key=2, style=dotted];
m10_160 -> m10_14  [key=2, style=dotted];
m10_160 -> m10_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_161 -> m10_162  [key=0, style=solid];
m10_161 -> m10_152  [key=2, style=dotted];
m10_162 -> m10_163  [key=0, style=solid];
m10_162 -> m10_28  [key=2, style=dotted];
m10_163 -> m10_158  [key=0, style=bold, color=blue];
m10_91 -> m10_92  [key=0, style=solid];
m10_120 -> m10_121  [key=0, style=solid];
m10_121 -> m10_62  [key=2, style=dotted];
m10_121 -> m10_122  [key=0, style=solid];
m10_121 -> m10_123  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_121 -> m10_124  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_122 -> m10_123  [key=0, style=solid];
m10_122 -> m10_85  [key=2, style=dotted];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_85  [key=2, style=dotted];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_109  [key=2, style=dotted];
m10_124 -> m10_28  [key=2, style=dotted];
m10_125 -> m10_120  [key=0, style=bold, color=blue];
m10_22 -> m10_33  [key=0, style=solid];
m10_22 -> m10_5  [key=2, style=dotted];
m10_57 -> m10_63  [key=2, style=dotted];
m10_57 -> m10_58  [key=0, style=solid];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_22  [key=2, style=dotted];
m10_41 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_34 -> m10_38  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_22  [key=2, style=dotted];
m10_34 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_40  [key=2, style=dotted];
m10_38 -> m10_41  [key=2, style=dotted];
m10_38 -> m10_32  [key=2, style=dotted];
m10_39 -> m10_34  [key=0, style=bold, color=blue];
m10_39 -> m10_37  [key=0, style=bold, color=blue];
m10_167 -> m10_168  [key=0, style=solid];
m10_168 -> m10_62  [key=2, style=dotted];
m10_168 -> m10_169  [key=0, style=solid];
m10_168 -> m10_170  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_171 -> m10_172  [key=0, style=solid];
m10_171 -> m10_153  [key=2, style=dotted];
m10_171 -> m10_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_85  [key=2, style=dotted];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_152  [key=2, style=dotted];
m10_172 -> m10_167  [key=0, style=bold, color=blue];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m10_6 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m10_6 -> m10_13  [key=2, style=dotted];
m10_6 -> m10_14  [key=2, style=dotted];
m10_6 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_9  [key=0, style=solid];
m10_7 -> m10_0  [key=0, style=bold, color=blue];
m10_8 -> m10_9  [key=0, style=solid];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_32  [key=2, style=dotted];
m10_36 -> m10_8  [key=3, color=darkorchid, style=bold, label="Field variable System.Func<Hangfire.Common.Job, System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>> _getFiltersThunk"];
m10_36 -> m10_33  [key=0, style=bold, color=blue];
m10_51 -> m10_52  [key=0, style=solid];
m10_94 -> m10_95  [key=0, style=solid];
m10_95 -> m10_62  [key=2, style=dotted];
m10_95 -> m10_96  [key=0, style=solid];
m10_95 -> m10_97  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_95 -> m10_100  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_95 -> m10_50  [key=2, style=dotted];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_85  [key=2, style=dotted];
m10_96 -> m10_95  [key=0, style=solid];
m10_96 -> m10_98  [key=2, style=dotted];
m10_97 -> m10_98  [key=0, style=solid];
m10_97 -> m10_90  [key=2, style=dotted];
m10_97 -> m10_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_97 -> m10_37  [key=0, style=bold, color=blue];
m10_188 -> m10_189  [key=0, style=solid];
m10_189 -> m10_62  [key=2, style=dotted];
m10_189 -> m10_190  [key=0, style=solid];
m10_189 -> m10_191  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_189 -> m10_194  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_190 -> m10_191  [key=0, style=solid];
m10_190 -> m10_152  [key=2, style=dotted];
m10_191 -> m10_192  [key=0, style=solid];
m10_191 -> m10_90  [key=2, style=dotted];
m10_191 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_192 -> m10_188  [key=0, style=bold, color=blue];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_18  [key=0, style=bold, color=blue];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_28  [key=2, style=dotted];
m10_35 -> m10_42  [key=0, style=solid];
m10_35 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m10_35 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m10_35 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m10_35 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m10_35 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>"];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IJobPerformer"];
m10_103 -> m10_62  [key=2, style=dotted];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_104 -> m10_22  [key=2, style=dotted];
m10_104 -> m10_105  [key=0, style=solid];
m10_104 -> m10_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_104 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m10_105 -> m10_102  [key=0, style=bold, color=blue];
m10_105 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerFilter"];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m10_64 -> m10_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m10_64 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m10_64 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m10_64 -> m10_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerFilter"];
m10_64 -> m10_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerFilter"];
m10_64 -> m10_73  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Server.PerformedContext InvokePerformFilter"];
m10_206 -> m10_207  [key=0, style=solid];
m10_207 -> m10_62  [key=2, style=dotted];
m10_207 -> m10_208  [key=0, style=solid];
m10_207 -> m10_209  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_209 -> m10_71  [key=2, style=dotted];
m10_209 -> m10_210  [key=0, style=solid];
m10_209 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m10_208 -> m10_209  [key=0, style=solid];
m10_208 -> m10_152  [key=2, style=dotted];
m10_210 -> m10_22  [key=2, style=dotted];
m10_210 -> m10_211  [key=0, style=solid];
m10_210 -> m10_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_211 -> m10_206  [key=0, style=bold, color=blue];
m10_58 -> m10_63  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_72 -> m10_73  [key=0, style=solid, color=green];
m10_72 -> m10_72  [key=3, color=darkorchid, style=bold, label="Local variable bool wasError"];
m10_73 -> m10_74  [key=0, style=solid, color=green];
m10_73 -> m10_62  [key=2, style=dotted, color=green];
m10_73 -> m10_75  [key=1, style=dashed, color=green, label=context];
m10_74 -> m10_75  [key=0, style=solid, color=green];
m10_74 -> m10_71  [key=2, style=dotted, color=green];
m10_74 -> m10_83  [key=0, style=solid];
m10_74 -> m10_93  [key=2, style=dotted];
m10_75 -> m10_76  [key=0, style=solid, color=green];
m10_75 -> m10_63  [key=2, style=dotted, color=green];
m10_76 -> m10_72  [key=0, style=bold, color=blue];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_83  [key=1, style=dashed, color=darkseagreen4, label=wasError];
m10_47 -> m10_48  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_22  [key=2, style=dotted];
m10_48 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_48 -> m10_35  [key=0, style=bold, color=blue];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_58  [key=2, style=dotted];
m10_77 -> m10_81  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m10_77 -> m10_84  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m10_77 -> m10_89  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m10_78 -> m10_62  [key=2, style=dotted];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_83  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_78 -> m10_81  [key=0, style=solid];
m10_78 -> m10_94  [key=2, style=dotted];
m10_79 -> m10_22  [key=2, style=dotted];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_80 -> m10_28  [key=2, style=dotted];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_90  [key=0, style=solid];
m10_80 -> m10_92  [key=2, style=dotted];
m10_81 -> m10_77  [key=0, style=bold, color=blue];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_83  [key=0, style=solid];
m10_147 -> m10_148  [key=0, style=solid];
m10_148 -> m10_62  [key=2, style=dotted];
m10_148 -> m10_149  [key=0, style=solid];
m10_148 -> m10_150  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_148 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_153  [key=2, style=dotted];
m10_150 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_152  [key=2, style=dotted];
m10_151 -> m10_147  [key=0, style=bold, color=blue];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_68  [key=0, style=solid];
m10_65 -> m10_70  [key=0, style=solid];
m10_65 -> m10_91  [key=2, style=dotted];
m10_37 -> m10_95  [key=0, style=solid];
m10_37 -> m10_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerExceptionContext"];
m10_37 -> m10_38  [key=0, style=solid];
m10_62 -> m10_216  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_64  [key=2, style=dotted];
m10_216 -> m10_217  [key=0, style=solid];
m10_216 -> m10_32  [key=2, style=dotted];
m10_217 -> m10_62  [key=0, style=bold, color=blue];
m10_176 -> m10_177  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_13  [key=2, style=dotted];
m10_11 -> m10_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_14 -> m10_15  [key=0, style=solid];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [key=2, style=dotted];
m10_16 -> m10_14  [key=0, style=bold, color=blue];
m10_16 -> m10_60  [key=0, style=solid];
m10_16 -> m10_18  [key=2, style=dotted];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_57  [key=2, style=dotted];
m10_54 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_54 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_54 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_58  [key=2, style=dotted];
m10_55 -> m10_62  [key=2, style=dotted];
m10_55 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_55 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_55 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m10_59 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m10_59 -> m10_64  [key=2, style=dotted];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_51  [key=0, style=bold, color=blue];
m10_56 -> m10_53  [key=0, style=bold, color=blue];
m10_56 -> m10_63  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_60 -> m10_59  [key=0, style=bold, color=blue];
m10_60 -> m10_15  [key=0, style=bold, color=blue];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_65  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_54  [key=0, style=bold, color=blue];
m10_30 -> m10_31  [key=0, style=solid, color=red];
m10_30 -> m10_32  [key=2, style=dotted];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_32  [key=2, style=dotted];
m10_45 -> m10_50  [key=2, style=dotted];
m10_45 -> m10_51  [key=2, style=dotted];
m10_45 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_204 -> m10_205  [key=0, style=solid];
m10_204 -> m10_22  [key=2, style=dotted];
m10_204 -> m10_157  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_21  [key=0, style=solid];
m10_29 -> m10_30  [key=0, style=solid, color=red];
m10_29 -> m10_37  [key=2, style=dotted, color=red];
m10_31 -> m10_29  [key=0, style=bold, color=blue];
m10_31 -> m10_33  [key=0, style=solid];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_44  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<Hangfire.Server.PerformedContext> continuation"];
m10_46 -> m10_44  [key=0, style=bold, color=blue];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_52  [key=2, style=dotted];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_85  [key=2, style=dotted];
m10_83 -> m10_89  [key=0, style=solid];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_85  [key=2, style=dotted];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_85  [key=2, style=dotted];
m10_100 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m10_107 -> m10_108  [key=0, style=solid];
m10_107 -> m10_109  [key=2, style=dotted];
m10_138 -> m10_139  [key=0, style=solid];
m10_138 -> m10_109  [key=2, style=dotted];
m10_155 -> m10_22  [key=2, style=dotted];
m10_155 -> m10_156  [key=0, style=solid];
m10_155 -> m10_157  [key=2, style=dotted];
m10_154 -> m10_155  [key=0, style=solid];
m10_165 -> m10_22  [key=2, style=dotted];
m10_165 -> m10_166  [key=0, style=solid];
m10_165 -> m10_157  [key=2, style=dotted];
m10_164 -> m10_165  [key=0, style=solid];
m10_173 -> m10_174  [key=0, style=solid];
m10_186 -> m10_187  [key=0, style=solid];
m10_186 -> m10_85  [key=2, style=dotted];
m10_194 -> m10_195  [key=0, style=solid];
m10_194 -> m10_109  [key=2, style=dotted];
m10_203 -> m10_204  [key=0, style=solid];
m10_205 -> m10_203  [key=0, style=bold, color=blue];
m10_213 -> m10_214  [key=0, style=solid];
m10_213 -> m10_85  [key=2, style=dotted];
m10_21 -> m10_19  [key=0, style=bold, color=blue];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_23  [key=0, style=solid];
m10_20 -> m10_22  [key=2, style=dotted];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_23  [key=2, style=dotted];
m10_20 -> m10_33  [key=0, style=solid];
m10_20 -> m10_5  [key=2, style=dotted];
m10_174 -> m10_22  [key=2, style=dotted];
m10_174 -> m10_157  [key=2, style=dotted];
m10_174 -> m10_175  [key=0, style=solid];
m10_174 -> m10_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_90  [key=0, style=solid];
m10_84 -> m10_82  [key=0, style=bold, color=blue];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_87  [key=0, style=solid];
m10_84 -> m10_89  [key=0, style=solid];
m10_84 -> m10_94  [key=2, style=dotted];
m10_93 -> m10_91  [key=0, style=bold, color=blue];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m10_99 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m10_99 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m10_99 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m10_99 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m10_99 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m10_99 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m10_101 -> m10_99  [key=0, style=bold, color=blue];
m10_101 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m10_101 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m10_106 -> m10_107  [key=0, style=solid];
m10_108 -> m10_106  [key=0, style=bold, color=blue];
m10_137 -> m10_138  [key=0, style=solid];
m10_139 -> m10_137  [key=0, style=bold, color=blue];
m10_156 -> m10_154  [key=0, style=bold, color=blue];
m10_166 -> m10_164  [key=0, style=bold, color=blue];
m10_175 -> m10_173  [key=0, style=bold, color=blue];
m10_185 -> m10_186  [key=0, style=solid];
m10_187 -> m10_185  [key=0, style=bold, color=blue];
m10_193 -> m10_194  [key=0, style=solid];
m10_195 -> m10_193  [key=0, style=bold, color=blue];
m10_212 -> m10_213  [key=0, style=solid];
m10_214 -> m10_212  [key=0, style=bold, color=blue];
m10_177 -> m10_178  [key=0, style=solid];
m10_177 -> m10_179  [key=2, style=dotted];
m10_178 -> m10_176  [key=0, style=bold, color=blue];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_86  [key=0, style=bold, color=blue];
m10_85 -> m10_86  [key=0, style=solid];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_62  [key=2, style=dotted];
m10_87 -> m10_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_86 -> m10_90  [key=0, style=solid];
m10_86 -> m10_87  [key=0, style=solid];
m10_88 -> m10_90  [key=0, style=solid];
m10_88 -> m10_92  [key=2, style=dotted];
m10_88 -> m10_89  [key=0, style=solid];
m10_88 -> m10_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_32 -> m10_33  [key=0, style=solid];
m10_115 -> m10_116  [key=0, style=solid];
m10_116 -> m10_62  [key=2, style=dotted];
m10_116 -> m10_117  [key=0, style=solid];
m10_116 -> m10_118  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_85  [key=2, style=dotted];
m10_118 -> m10_119  [key=0, style=solid];
m10_118 -> m10_109  [key=2, style=dotted];
m10_118 -> m10_28  [key=2, style=dotted];
m10_119 -> m10_115  [key=0, style=bold, color=blue];
m10_140 -> m10_141  [key=0, style=solid];
m10_141 -> m10_62  [key=2, style=dotted];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_143 -> m10_71  [key=2, style=dotted];
m10_143 -> m10_144  [key=0, style=solid];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_85  [key=2, style=dotted];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_109  [key=2, style=dotted];
m10_145 -> m10_28  [key=2, style=dotted];
m10_145 -> m10_146  [key=0, style=solid];
m10_146 -> m10_140  [key=0, style=bold, color=blue];
m10_40 -> m10_41  [key=0, style=solid];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_28  [key=2, style=dotted];
m10_42 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_42 -> m10_32  [key=3, color=darkorchid, style=bold, label="Local variable object result"];
m10_43 -> m10_40  [key=0, style=bold, color=blue];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_49  [key=2, style=dotted];
m10_43 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m10_43 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_34  [key=2, style=dotted];
m10_23 -> m10_29  [key=1, style=dashed, color=red, label=filterInfo];
m10_126 -> m10_127  [key=0, style=solid];
m10_127 -> m10_62  [key=2, style=dotted];
m10_127 -> m10_128  [key=0, style=solid];
m10_127 -> m10_129  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_127 -> m10_130  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_85  [key=2, style=dotted];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_85  [key=2, style=dotted];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_109  [key=2, style=dotted];
m10_130 -> m10_28  [key=2, style=dotted];
m10_131 -> m10_126  [key=0, style=bold, color=blue];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IJobPerformer"];
m10_18 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m10_18 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m10_18 -> m10_28  [key=1, style=dashed, color=red, label="Hangfire.Server.PerformContext"];
m10_18 -> m10_35  [key=3, color=darkorchid, style=bold, label="method methodReturn object Run"];
m10_18 -> m10_32  [key=3, color=darkorchid, style=bold, label="method methodReturn object Run"];
m10_18 -> m10_215  [key=0, style=solid];
m10_215 -> m10_18  [key=0, style=bold, color=blue];
m10_132 -> m10_133  [key=0, style=solid];
m10_133 -> m10_62  [key=2, style=dotted];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_135  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_133 -> m10_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_85  [key=2, style=dotted];
m10_135 -> m10_22  [key=2, style=dotted];
m10_135 -> m10_136  [key=0, style=solid];
m10_135 -> m10_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_136 -> m10_132  [key=0, style=bold, color=blue];
m10_218 -> m10_67  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_73  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_204  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_198  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_207  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_218 -> m10_216  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m10_219 -> m10_83  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_220 -> m10_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_221 -> m10_100  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_222 -> m10_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_223 -> m10_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_224 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_225 -> m10_165  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_226 -> m10_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_227 -> m10_194  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_228 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m12_0 -> m12_1  [key=0, style=solid];
m12_8 -> m12_59  [key=0, style=solid, color=green];
m12_8 -> m12_60  [key=2, style=dotted, color=green];
m12_7 -> m12_8  [key=0, style=solid, color=green];
m12_7 -> m12_9  [key=0, style=solid];
m12_1 -> m12_60  [key=2, style=dotted];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_61  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_60  [key=2, style=dotted];
m12_9 -> m12_60  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_11 -> m12_60  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_64  [key=2, style=dotted];
m12_12 -> m12_65  [key=2, style=dotted];
m12_13 -> m12_60  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_65  [key=2, style=dotted];
m12_15 -> m12_60  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_65  [key=2, style=dotted];
m12_17 -> m12_60  [key=2, style=dotted];
m12_17 -> m12_18  [key=0, style=solid];
m12_19 -> m12_60  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_64  [key=2, style=dotted];
m12_20 -> m12_65  [key=2, style=dotted];
m12_21 -> m12_60  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_65  [key=2, style=dotted];
m12_23 -> m12_60  [key=2, style=dotted];
m12_23 -> m12_25  [key=0, style=solid];
m12_24 -> m12_60  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_25 -> m12_60  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_27 -> m12_60  [key=2, style=dotted];
m12_27 -> m12_57  [key=0, style=solid];
m12_28 -> m12_60  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_30 -> m12_60  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_31 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_65  [key=2, style=dotted];
m12_31 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_32 -> m12_60  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_33 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_64  [key=2, style=dotted];
m12_33 -> m12_65  [key=2, style=dotted];
m12_33 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_34 -> m12_60  [key=2, style=dotted];
m12_34 -> m12_35  [key=0, style=solid];
m12_35 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_66  [key=2, style=dotted];
m12_35 -> m12_67  [key=2, style=dotted];
m12_35 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_36 -> m12_60  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_38 -> m12_60  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_39 -> m12_60  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_40 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_68  [key=2, style=dotted];
m12_40 -> m12_69  [key=2, style=dotted];
m12_40 -> m12_65  [key=2, style=dotted];
m12_40 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_41 -> m12_60  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_42 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_65  [key=2, style=dotted];
m12_42 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_43 -> m12_60  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_44 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_64  [key=2, style=dotted];
m12_44 -> m12_65  [key=2, style=dotted];
m12_44 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_45 -> m12_60  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_46 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_70  [key=2, style=dotted];
m12_46 -> m12_67  [key=2, style=dotted];
m12_46 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_47 -> m12_60  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_49 -> m12_60  [key=2, style=dotted];
m12_49 -> m12_50  [key=0, style=solid];
m12_50 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_71  [key=2, style=dotted];
m12_50 -> m12_65  [key=2, style=dotted];
m12_50 -> m12_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_51 -> m12_60  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_52 -> m12_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_65  [key=2, style=dotted];
m12_53 -> m12_60  [key=2, style=dotted];
m12_53 -> m12_55  [key=0, style=solid];
m12_54 -> m12_60  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_55 -> m12_60  [key=2, style=dotted];
m12_55 -> m12_29  [key=0, style=solid];
m12_56 -> m12_60  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid];
m12_57 -> m12_60  [key=2, style=dotted];
m12_57 -> m12_10  [key=0, style=solid];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_60  [key=2, style=dotted];
m12_5 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=queues];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_63  [key=2, style=dotted];
m12_5 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label=queues];
m12_3 -> m12_4  [key=0, style=solid];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=queue];
m12_10 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=queue];
m12_10 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=queue];
m12_10 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label=queue];
m12_10 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=queue];
m12_10 -> m12_58  [key=0, style=solid];
m12_10 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label=queue];
m12_10 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label=queue];
m12_10 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=queue];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_24  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=0, style=solid];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_29 -> m12_56  [key=0, style=solid];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_39  [key=0, style=solid];
m12_37 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_37 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_48 -> m12_54  [key=0, style=solid];
m12_48 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_62  [key=2, style=dotted];
m12_59 -> m12_0  [key=0, style=bold, color=blue];
m12_72 -> m12_8  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m12_72 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m13_45 -> m13_352  [key=0, style=solid];
m13_45 -> m13_353  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m13_45 -> m13_354  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m13_354 -> m13_355  [key=0, style=solid];
m13_354 -> m13_334  [key=2, style=dotted];
m13_353 -> m13_78  [key=2, style=dotted];
m13_353 -> m13_354  [key=0, style=solid];
m13_353 -> m13_87  [key=2, style=dotted];
m13_352 -> m13_353  [key=0, style=solid];
m13_355 -> m13_45  [key=0, style=bold, color=blue];
m13_27 -> m13_28  [key=0, style=solid];
m13_28 -> m13_10  [key=2, style=dotted];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_29 -> m13_27  [key=0, style=bold, color=blue];
m13_356 -> m13_357  [key=0, style=solid];
m13_356 -> m13_358  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>"];
m13_356 -> m13_361  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m13_362 -> m13_90  [key=2, style=dotted];
m13_362 -> m13_358  [key=0, style=solid];
m13_362 -> m13_367  [key=2, style=dotted];
m13_362 -> m13_368  [key=2, style=dotted];
m13_360 -> m13_220  [key=2, style=dotted];
m13_360 -> m13_361  [key=0, style=solid];
m13_357 -> m13_362  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_357 -> m13_358  [key=0, style=solid];
m13_357 -> m13_365  [key=2, style=dotted];
m13_357 -> m13_363  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_358 -> m13_362  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_358 -> m13_359  [key=0, style=solid];
m13_358 -> m13_363  [key=0, style=solid];
m13_358 -> m13_361  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_361 -> m13_362  [key=0, style=solid];
m13_361 -> m13_343  [key=2, style=dotted];
m13_361 -> m13_366  [key=2, style=dotted];
m13_359 -> m13_360  [key=0, style=solid];
m13_359 -> m13_350  [key=2, style=dotted];
m13_363 -> m13_369  [key=2, style=dotted];
m13_363 -> m13_364  [key=0, style=solid];
m13_364 -> m13_356  [key=0, style=bold, color=blue];
m13_14 -> m13_339  [key=0, style=solid];
m13_14 -> m13_340  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m13_339 -> m13_340  [key=0, style=solid];
m13_340 -> m13_78  [key=2, style=dotted];
m13_340 -> m13_341  [key=0, style=solid];
m13_340 -> m13_255  [key=2, style=dotted];
m13_341 -> m13_342  [key=0, style=solid];
m13_342 -> m13_14  [key=0, style=bold, color=blue];
m13_227 -> m13_228  [key=0, style=solid];
m13_228 -> m13_10  [key=2, style=dotted];
m13_228 -> m13_229  [key=0, style=solid];
m13_228 -> m13_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_229 -> m13_227  [key=0, style=bold, color=blue];
m13_10 -> m13_327  [key=0, style=solid];
m13_327 -> m13_328  [key=0, style=solid];
m13_327 -> m13_329  [key=2, style=dotted];
m13_328 -> m13_10  [key=0, style=bold, color=blue];
m13_186 -> m13_187  [key=0, style=solid];
m13_187 -> m13_10  [key=2, style=dotted];
m13_187 -> m13_188  [key=0, style=solid];
m13_187 -> m13_189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_188 -> m13_186  [key=0, style=bold, color=blue];
m13_233 -> m13_234  [key=0, style=solid];
m13_235 -> m13_10  [key=2, style=dotted];
m13_235 -> m13_236  [key=0, style=solid];
m13_235 -> m13_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_235 -> m13_237  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_236 -> m13_237  [key=0, style=solid];
m13_236 -> m13_239  [key=2, style=dotted];
m13_236 -> m13_240  [key=2, style=dotted];
m13_236 -> m13_256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_234 -> m13_235  [key=0, style=solid];
m13_234 -> m13_243  [key=1, style=dashed, color=darkseagreen4, label=sql];
m13_237 -> m13_238  [key=0, style=solid];
m13_238 -> m13_233  [key=0, style=bold, color=blue];
m13_169 -> m13_170  [key=0, style=solid];
m13_169 -> m13_171  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_170 -> m13_171  [key=0, style=solid];
m13_170 -> m13_20  [key=2, style=dotted];
m13_172 -> m13_10  [key=2, style=dotted];
m13_172 -> m13_173  [key=0, style=solid];
m13_172 -> m13_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_171 -> m13_172  [key=0, style=solid];
m13_171 -> m13_176  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m13_171 -> m13_174  [key=2, style=dotted];
m13_173 -> m13_169  [key=0, style=bold, color=blue];
m13_185 -> m13_268  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m13_185 -> m13_260  [key=0, style=solid];
m13_185 -> m13_267  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_185 -> m13_273  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_268 -> m13_269  [key=0, style=solid];
m13_268 -> m13_271  [key=2, style=dotted];
m13_267 -> m13_268  [key=0, style=solid];
m13_267 -> m13_207  [key=2, style=dotted];
m13_267 -> m13_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_267 -> m13_277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_260 -> m13_261  [key=0, style=solid];
m13_260 -> m13_264  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m13_260 -> m13_265  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m13_261 -> m13_267  [key=1, style=dashed, color=darkseagreen4, label=dates];
m13_261 -> m13_262  [key=0, style=solid];
m13_261 -> m13_88  [key=2, style=dotted];
m13_261 -> m13_264  [key=1, style=dashed, color=darkseagreen4, label=dates];
m13_263 -> m13_267  [key=0, style=solid];
m13_263 -> m13_264  [key=0, style=solid];
m13_264 -> m13_90  [key=2, style=dotted];
m13_264 -> m13_265  [key=0, style=solid];
m13_265 -> m13_265  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m13_265 -> m13_266  [key=0, style=solid];
m13_265 -> m13_270  [key=2, style=dotted];
m13_262 -> m13_263  [key=0, style=solid];
m13_262 -> m13_266  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_266 -> m13_263  [key=0, style=solid];
m13_266 -> m13_266  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_269 -> m13_185  [key=0, style=bold, color=blue];
m13_123 -> m13_124  [key=0, style=solid];
m13_124 -> m13_125  [key=0, style=solid];
m13_124 -> m13_133  [key=2, style=dotted];
m13_124 -> m13_134  [key=2, style=dotted];
m13_124 -> m13_135  [key=2, style=dotted];
m13_124 -> m13_136  [key=2, style=dotted];
m13_124 -> m13_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_124 -> m13_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_124 -> m13_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_124 -> m13_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_124 -> m13_126  [key=1, style=dashed, color=darkseagreen4, label=tuples];
m13_129 -> m13_10  [key=2, style=dotted];
m13_129 -> m13_130  [key=0, style=solid];
m13_129 -> m13_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_125 -> m13_126  [key=0, style=solid];
m13_125 -> m13_137  [key=2, style=dotted];
m13_125 -> m13_130  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_125 -> m13_131  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_126 -> m13_127  [key=0, style=solid];
m13_126 -> m13_131  [key=0, style=solid];
m13_126 -> m13_128  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m13_126 -> m13_130  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m13_127 -> m13_129  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m13_127 -> m13_156  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m13_127 -> m13_128  [key=0, style=solid];
m13_127 -> m13_138  [key=2, style=dotted];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_139  [key=2, style=dotted];
m13_128 -> m13_130  [key=1, style=dashed, color=darkseagreen4, label=counters];
m13_130 -> m13_126  [key=0, style=solid];
m13_130 -> m13_140  [key=2, style=dotted];
m13_130 -> m13_90  [key=2, style=dotted];
m13_131 -> m13_132  [key=0, style=solid];
m13_132 -> m13_123  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid, color=green];
m13_0 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m13_0 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="int?"];
m13_1 -> m13_2  [key=0, style=solid, color=green];
m13_1 -> m13_3  [key=0, style=solid, color=green];
m13_2 -> m13_5  [key=0, style=solid, color=green];
m13_2 -> m13_6  [key=2, style=dotted, color=green];
m13_3 -> m13_4  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_0  [key=0, style=bold, color=blue];
m13_113 -> m13_114  [key=0, style=solid, color=green];
m13_113 -> m13_117  [key=1, style=dashed, color=green, label=int];
m13_114 -> m13_115  [key=0, style=solid, color=green];
m13_114 -> m13_10  [key=2, style=dotted, color=green];
m13_114 -> m13_116  [key=1, style=dashed, color=green, label="lambda expression"];
m13_115 -> m13_113  [key=0, style=bold, color=blue];
m13_319 -> m13_320  [key=0, style=solid];
m13_79 -> m13_80  [key=0, style=solid];
m13_116 -> m13_117  [key=0, style=solid, color=green];
m13_117 -> m13_118  [key=0, style=solid, color=green];
m13_117 -> m13_45  [key=2, style=dotted, color=green];
m13_117 -> m13_119  [key=1, style=dashed, color=green, label="lambda expression"];
m13_118 -> m13_116  [key=0, style=bold, color=blue];
m13_119 -> m13_120  [key=0, style=solid, color=green];
m13_120 -> m13_121  [key=0, style=solid, color=green];
m13_120 -> m13_122  [key=2, style=dotted, color=green];
m13_120 -> m13_101  [key=2, style=dotted, color=green];
m13_121 -> m13_119  [key=0, style=bold, color=blue];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_14  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_14  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_14  [key=2, style=dotted];
m13_43 -> m13_45  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_56 -> m13_45  [key=2, style=dotted];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_68  [key=2, style=dotted];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_68  [key=2, style=dotted];
m13_95 -> m13_45  [key=2, style=dotted];
m13_95 -> m13_96  [key=0, style=solid];
m13_95 -> m13_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_106 -> m13_45  [key=2, style=dotted];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_156 -> m13_157  [key=0, style=solid];
m13_156 -> m13_158  [key=2, style=dotted];
m13_166 -> m13_167  [key=0, style=solid];
m13_166 -> m13_168  [key=2, style=dotted];
m13_176 -> m13_177  [key=0, style=solid];
m13_176 -> m13_178  [key=2, style=dotted];
m13_183 -> m13_184  [key=0, style=solid];
m13_183 -> m13_185  [key=2, style=dotted];
m13_190 -> m13_191  [key=0, style=solid];
m13_190 -> m13_185  [key=2, style=dotted];
m13_203 -> m13_204  [key=0, style=solid];
m13_203 -> m13_208  [key=2, style=dotted];
m13_203 -> m13_209  [key=2, style=dotted];
m13_225 -> m13_226  [key=0, style=solid];
m13_225 -> m13_14  [key=2, style=dotted];
m13_231 -> m13_232  [key=0, style=solid];
m13_231 -> m13_14  [key=2, style=dotted];
m13_80 -> m13_78  [key=2, style=dotted];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_87  [key=2, style=dotted];
m13_80 -> m13_82  [key=1, style=dashed, color=darkseagreen4, label=servers];
m13_83 -> m13_78  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_198 -> m13_78  [key=2, style=dotted];
m13_198 -> m13_203  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_198 -> m13_199  [key=0, style=solid];
m13_198 -> m13_206  [key=2, style=dotted];
m13_201 -> m13_78  [key=2, style=dotted];
m13_201 -> m13_203  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m13_201 -> m13_202  [key=0, style=solid];
m13_201 -> m13_207  [key=2, style=dotted];
m13_201 -> m13_210  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_201 -> m13_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_202 -> m13_78  [key=2, style=dotted];
m13_202 -> m13_203  [key=0, style=solid];
m13_202 -> m13_87  [key=2, style=dotted];
m13_202 -> m13_133  [key=2, style=dotted];
m13_202 -> m13_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_217 -> m13_78  [key=2, style=dotted];
m13_217 -> m13_218  [key=0, style=solid];
m13_217 -> m13_219  [key=2, style=dotted];
m13_217 -> m13_220  [key=2, style=dotted];
m13_244 -> m13_78  [key=2, style=dotted];
m13_244 -> m13_245  [key=0, style=solid];
m13_244 -> m13_255  [key=2, style=dotted];
m13_245 -> m13_78  [key=2, style=dotted];
m13_245 -> m13_246  [key=0, style=solid];
m13_245 -> m13_255  [key=2, style=dotted];
m13_246 -> m13_78  [key=2, style=dotted];
m13_246 -> m13_247  [key=0, style=solid];
m13_246 -> m13_255  [key=2, style=dotted];
m13_247 -> m13_78  [key=2, style=dotted];
m13_247 -> m13_248  [key=0, style=solid];
m13_247 -> m13_255  [key=2, style=dotted];
m13_248 -> m13_78  [key=2, style=dotted];
m13_248 -> m13_249  [key=0, style=solid];
m13_248 -> m13_255  [key=2, style=dotted];
m13_249 -> m13_78  [key=2, style=dotted];
m13_249 -> m13_250  [key=0, style=solid];
m13_249 -> m13_206  [key=2, style=dotted];
m13_250 -> m13_78  [key=2, style=dotted];
m13_250 -> m13_251  [key=0, style=solid];
m13_250 -> m13_206  [key=2, style=dotted];
m13_251 -> m13_78  [key=2, style=dotted];
m13_251 -> m13_252  [key=0, style=solid];
m13_251 -> m13_255  [key=2, style=dotted];
m13_86 -> m13_79  [key=0, style=bold, color=blue];
m13_98 -> m13_101  [key=2, style=dotted];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_100  [key=2, style=dotted];
m13_109 -> m13_101  [key=2, style=dotted];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_111  [key=2, style=dotted];
m13_109 -> m13_50  [key=2, style=dotted];
m13_109 -> m13_112  [key=2, style=dotted];
m13_336 -> m13_101  [key=2, style=dotted];
m13_336 -> m13_337  [key=0, style=solid];
m13_336 -> m13_338  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_13 -> m13_11  [key=0, style=bold, color=blue];
m13_30 -> m13_31  [key=0, style=solid];
m13_32 -> m13_30  [key=0, style=bold, color=blue];
m13_36 -> m13_37  [key=0, style=solid];
m13_38 -> m13_36  [key=0, style=bold, color=blue];
m13_42 -> m13_43  [key=0, style=solid];
m13_44 -> m13_42  [key=0, style=bold, color=blue];
m13_46 -> m13_47  [key=0, style=solid];
m13_55 -> m13_56  [key=0, style=solid];
m13_57 -> m13_55  [key=0, style=bold, color=blue];
m13_58 -> m13_59  [key=0, style=solid];
m13_65 -> m13_66  [key=0, style=solid];
m13_67 -> m13_65  [key=0, style=bold, color=blue];
m13_72 -> m13_73  [key=0, style=solid];
m13_74 -> m13_72  [key=0, style=bold, color=blue];
m13_94 -> m13_95  [key=0, style=solid];
m13_96 -> m13_94  [key=0, style=bold, color=blue];
m13_97 -> m13_98  [key=0, style=solid];
m13_105 -> m13_106  [key=0, style=solid];
m13_107 -> m13_105  [key=0, style=bold, color=blue];
m13_108 -> m13_109  [key=0, style=solid];
m13_141 -> m13_142  [key=0, style=solid];
m13_145 -> m13_146  [key=0, style=solid];
m13_149 -> m13_150  [key=0, style=solid];
m13_152 -> m13_153  [key=0, style=solid];
m13_155 -> m13_156  [key=0, style=solid];
m13_157 -> m13_155  [key=0, style=bold, color=blue];
m13_165 -> m13_166  [key=0, style=solid];
m13_167 -> m13_165  [key=0, style=bold, color=blue];
m13_175 -> m13_176  [key=0, style=solid];
m13_177 -> m13_175  [key=0, style=bold, color=blue];
m13_182 -> m13_183  [key=0, style=solid];
m13_184 -> m13_182  [key=0, style=bold, color=blue];
m13_189 -> m13_190  [key=0, style=solid];
m13_191 -> m13_189  [key=0, style=bold, color=blue];
m13_195 -> m13_196  [key=0, style=solid];
m13_195 -> m13_197  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m13_204 -> m13_195  [key=0, style=bold, color=blue];
m13_224 -> m13_225  [key=0, style=solid];
m13_226 -> m13_224  [key=0, style=bold, color=blue];
m13_230 -> m13_231  [key=0, style=solid];
m13_232 -> m13_230  [key=0, style=bold, color=blue];
m13_241 -> m13_242  [key=0, style=solid];
m13_241 -> m13_243  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m13_256 -> m13_257  [key=0, style=solid];
m13_335 -> m13_336  [key=0, style=solid];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_88  [key=2, style=dotted];
m13_81 -> m13_84  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_81 -> m13_85  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_85  [key=0, style=solid];
m13_82 -> m13_84  [key=1, style=dashed, color=darkseagreen4, label=server];
m13_84 -> m13_90  [key=2, style=dotted];
m13_84 -> m13_82  [key=0, style=solid];
m13_84 -> m13_89  [key=2, style=dotted];
m13_197 -> m13_198  [key=0, style=solid];
m13_197 -> m13_201  [key=1, style=dashed, color=darkseagreen4, label=multi];
m13_197 -> m13_202  [key=1, style=dashed, color=darkseagreen4, label=multi];
m13_197 -> m13_205  [key=2, style=dotted];
m13_199 -> m13_201  [key=0, style=solid];
m13_199 -> m13_200  [key=0, style=solid];
m13_210 -> m13_211  [key=0, style=solid];
m13_213 -> m13_214  [key=0, style=solid];
m13_216 -> m13_217  [key=0, style=solid];
m13_218 -> m13_216  [key=0, style=bold, color=blue];
m13_243 -> m13_244  [key=0, style=solid];
m13_243 -> m13_245  [key=1, style=dashed, color=darkseagreen4, label=multi];
m13_243 -> m13_246  [key=1, style=dashed, color=darkseagreen4, label=multi];
m13_243 -> m13_247  [key=1, style=dashed, color=darkseagreen4, label=multi];
m13_243 -> m13_248  [key=1, style=dashed, color=darkseagreen4, label=multi];
m13_243 -> m13_249  [key=1, style=dashed, color=darkseagreen4, label=multi];
m13_243 -> m13_250  [key=1, style=dashed, color=darkseagreen4, label=multi];
m13_243 -> m13_251  [key=1, style=dashed, color=darkseagreen4, label=multi];
m13_243 -> m13_205  [key=2, style=dotted];
m13_242 -> m13_244  [key=1, style=dashed, color=darkseagreen4, label=stats];
m13_242 -> m13_245  [key=1, style=dashed, color=darkseagreen4, label=stats];
m13_242 -> m13_246  [key=1, style=dashed, color=darkseagreen4, label=stats];
m13_242 -> m13_247  [key=1, style=dashed, color=darkseagreen4, label=stats];
m13_242 -> m13_248  [key=1, style=dashed, color=darkseagreen4, label=stats];
m13_242 -> m13_249  [key=1, style=dashed, color=darkseagreen4, label=stats];
m13_242 -> m13_250  [key=1, style=dashed, color=darkseagreen4, label=stats];
m13_242 -> m13_251  [key=1, style=dashed, color=darkseagreen4, label=stats];
m13_242 -> m13_243  [key=0, style=solid];
m13_242 -> m13_254  [key=2, style=dotted];
m13_242 -> m13_252  [key=1, style=dashed, color=darkseagreen4, label=stats];
m13_252 -> m13_253  [key=0, style=solid];
m13_85 -> m13_86  [key=0, style=solid];
m13_99 -> m13_97  [key=0, style=bold, color=blue];
m13_110 -> m13_108  [key=0, style=bold, color=blue];
m13_337 -> m13_335  [key=0, style=bold, color=blue];
m13_48 -> m13_46  [key=0, style=bold, color=blue];
m13_47 -> m13_50  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_49  [key=2, style=dotted];
m13_47 -> m13_51  [key=2, style=dotted];
m13_60 -> m13_58  [key=0, style=bold, color=blue];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_61  [key=2, style=dotted];
m13_59 -> m13_51  [key=2, style=dotted];
m13_292 -> m13_293  [key=0, style=solid];
m13_292 -> m13_275  [key=2, style=dotted];
m13_292 -> m13_276  [key=2, style=dotted];
m13_143 -> m13_141  [key=0, style=bold, color=blue];
m13_142 -> m13_143  [key=0, style=solid];
m13_142 -> m13_144  [key=2, style=dotted];
m13_147 -> m13_145  [key=0, style=bold, color=blue];
m13_146 -> m13_147  [key=0, style=solid];
m13_146 -> m13_148  [key=2, style=dotted];
m13_151 -> m13_149  [key=0, style=bold, color=blue];
m13_150 -> m13_151  [key=0, style=solid];
m13_154 -> m13_152  [key=0, style=bold, color=blue];
m13_153 -> m13_154  [key=0, style=solid];
m13_273 -> m13_274  [key=0, style=solid];
m13_273 -> m13_275  [key=2, style=dotted];
m13_273 -> m13_276  [key=2, style=dotted];
m13_196 -> m13_197  [key=0, style=solid];
m13_200 -> m13_204  [key=0, style=solid];
m13_253 -> m13_241  [key=0, style=bold, color=blue];
m13_258 -> m13_256  [key=0, style=bold, color=blue];
m13_257 -> m13_258  [key=0, style=solid];
m13_257 -> m13_144  [key=2, style=dotted];
m13_257 -> m13_259  [key=2, style=dotted];
m13_272 -> m13_273  [key=0, style=solid];
m13_277 -> m13_278  [key=0, style=solid];
m13_291 -> m13_292  [key=0, style=solid];
m13_294 -> m13_295  [key=0, style=solid];
m13_212 -> m13_210  [key=0, style=bold, color=blue];
m13_211 -> m13_212  [key=0, style=solid];
m13_215 -> m13_213  [key=0, style=bold, color=blue];
m13_214 -> m13_215  [key=0, style=solid];
m13_293 -> m13_291  [key=0, style=bold, color=blue];
m13_274 -> m13_272  [key=0, style=bold, color=blue];
m13_279 -> m13_277  [key=0, style=bold, color=blue];
m13_278 -> m13_279  [key=0, style=solid];
m13_296 -> m13_294  [key=0, style=bold, color=blue];
m13_295 -> m13_296  [key=0, style=solid];
m13_316 -> m13_317  [key=0, style=solid];
m13_318 -> m13_316  [key=0, style=bold, color=blue];
m13_317 -> m13_318  [key=0, style=solid];
m13_320 -> m13_321  [key=0, style=solid];
m13_321 -> m13_319  [key=0, style=bold, color=blue];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_20  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_21  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_26 -> m13_22  [key=0, style=bold, color=blue];
m13_102 -> m13_103  [key=0, style=solid];
m13_102 -> m13_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_103 -> m13_10  [key=2, style=dotted];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_104 -> m13_102  [key=0, style=bold, color=blue];
m13_178 -> m13_371  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m13_178 -> m13_370  [key=0, style=solid];
m13_374 -> m13_373  [key=0, style=solid];
m13_374 -> m13_378  [key=2, style=dotted];
m13_374 -> m13_379  [key=2, style=dotted];
m13_374 -> m13_380  [key=2, style=dotted];
m13_374 -> m13_209  [key=2, style=dotted];
m13_374 -> m13_90  [key=2, style=dotted];
m13_371 -> m13_78  [key=2, style=dotted];
m13_371 -> m13_372  [key=0, style=solid];
m13_371 -> m13_87  [key=2, style=dotted];
m13_371 -> m13_373  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m13_372 -> m13_374  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_372 -> m13_373  [key=0, style=solid];
m13_372 -> m13_377  [key=2, style=dotted];
m13_372 -> m13_375  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_373 -> m13_374  [key=0, style=solid];
m13_373 -> m13_375  [key=0, style=solid];
m13_370 -> m13_371  [key=0, style=solid];
m13_375 -> m13_376  [key=0, style=solid];
m13_375 -> m13_369  [key=2, style=dotted];
m13_376 -> m13_178  [key=0, style=bold, color=blue];
m13_192 -> m13_193  [key=0, style=solid];
m13_192 -> m13_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_193 -> m13_10  [key=2, style=dotted];
m13_193 -> m13_194  [key=0, style=solid];
m13_193 -> m13_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_194 -> m13_192  [key=0, style=bold, color=blue];
m13_7 -> m13_8  [key=0, style=solid];
m13_8 -> m13_10  [key=2, style=dotted];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_9 -> m13_7  [key=0, style=bold, color=blue];
m13_168 -> m13_331  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m13_168 -> m13_330  [key=0, style=solid];
m13_332 -> m13_333  [key=0, style=solid];
m13_332 -> m13_334  [key=2, style=dotted];
m13_332 -> m13_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_331 -> m13_78  [key=2, style=dotted];
m13_331 -> m13_332  [key=0, style=solid];
m13_331 -> m13_87  [key=2, style=dotted];
m13_330 -> m13_331  [key=0, style=solid];
m13_333 -> m13_168  [key=0, style=bold, color=blue];
m13_221 -> m13_222  [key=0, style=solid];
m13_222 -> m13_10  [key=2, style=dotted];
m13_222 -> m13_223  [key=0, style=solid];
m13_222 -> m13_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_223 -> m13_221  [key=0, style=bold, color=blue];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_92 -> m13_10  [key=2, style=dotted];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_93 -> m13_91  [key=0, style=bold, color=blue];
m13_343 -> m13_344  [key=0, style=solid];
m13_343 -> m13_345  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_344 -> m13_350  [key=2, style=dotted];
m13_344 -> m13_345  [key=0, style=solid];
m13_344 -> m13_346  [key=1, style=dashed, color=darkseagreen4, label=data];
m13_345 -> m13_346  [key=0, style=solid];
m13_346 -> m13_349  [key=0, style=solid];
m13_346 -> m13_351  [key=2, style=dotted];
m13_348 -> m13_349  [key=0, style=solid];
m13_347 -> m13_348  [key=0, style=solid];
m13_349 -> m13_343  [key=0, style=bold, color=blue];
m13_75 -> m13_76  [key=0, style=solid, color=green];
m13_76 -> m13_77  [key=0, style=solid, color=green];
m13_76 -> m13_78  [key=2, style=dotted, color=green];
m13_76 -> m13_79  [key=1, style=dashed, color=green, label="lambda expression"];
m13_77 -> m13_75  [key=0, style=bold, color=blue];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_40 -> m13_10  [key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_41 -> m13_39  [key=0, style=bold, color=blue];
m13_20 -> m13_322  [key=0, style=solid];
m13_322 -> m13_323  [key=0, style=solid];
m13_322 -> m13_326  [key=2, style=dotted];
m13_323 -> m13_324  [key=0, style=solid];
m13_323 -> m13_144  [key=2, style=dotted];
m13_324 -> m13_325  [key=0, style=solid];
m13_325 -> m13_20  [key=0, style=bold, color=blue];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_53 -> m13_10  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_54 -> m13_52  [key=0, style=bold, color=blue];
m13_69 -> m13_70  [key=0, style=solid];
m13_70 -> m13_10  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_71 -> m13_69  [key=0, style=bold, color=blue];
m13_179 -> m13_180  [key=0, style=solid];
m13_180 -> m13_10  [key=2, style=dotted];
m13_180 -> m13_181  [key=0, style=solid];
m13_180 -> m13_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_181 -> m13_179  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_20  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_21  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_15  [key=0, style=bold, color=blue];
m13_62 -> m13_63  [key=0, style=solid];
m13_63 -> m13_10  [key=2, style=dotted];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_64 -> m13_62  [key=0, style=bold, color=blue];
m13_68 -> m13_288  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m13_68 -> m13_280  [key=0, style=solid];
m13_68 -> m13_287  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_68 -> m13_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_288 -> m13_289  [key=0, style=solid];
m13_288 -> m13_271  [key=2, style=dotted];
m13_287 -> m13_288  [key=0, style=solid];
m13_287 -> m13_207  [key=2, style=dotted];
m13_287 -> m13_291  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_287 -> m13_294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_280 -> m13_281  [key=0, style=solid];
m13_280 -> m13_284  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m13_280 -> m13_285  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m13_281 -> m13_287  [key=1, style=dashed, color=darkseagreen4, label=dates];
m13_281 -> m13_282  [key=0, style=solid];
m13_281 -> m13_88  [key=2, style=dotted];
m13_281 -> m13_284  [key=1, style=dashed, color=darkseagreen4, label=dates];
m13_283 -> m13_287  [key=0, style=solid];
m13_283 -> m13_284  [key=0, style=solid];
m13_284 -> m13_90  [key=2, style=dotted];
m13_284 -> m13_285  [key=0, style=solid];
m13_285 -> m13_285  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m13_285 -> m13_286  [key=0, style=solid];
m13_285 -> m13_290  [key=2, style=dotted];
m13_282 -> m13_283  [key=0, style=solid];
m13_282 -> m13_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_286 -> m13_283  [key=0, style=solid];
m13_286 -> m13_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_289 -> m13_68  [key=0, style=bold, color=blue];
m13_297 -> m13_299  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m13_297 -> m13_298  [key=0, style=solid];
m13_297 -> m13_300  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m13_297 -> m13_305  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m13_297 -> m13_306  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m13_297 -> m13_307  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m13_299 -> m13_207  [key=2, style=dotted];
m13_299 -> m13_300  [key=0, style=solid];
m13_299 -> m13_311  [key=2, style=dotted];
m13_299 -> m13_316  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_299 -> m13_319  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_299 -> m13_301  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m13_299 -> m13_302  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m13_299 -> m13_306  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m13_298 -> m13_299  [key=0, style=solid];
m13_300 -> m13_301  [key=0, style=solid];
m13_300 -> m13_303  [key=0, style=solid];
m13_300 -> m13_302  [key=1, style=dashed, color=darkseagreen4, label=key];
m13_301 -> m13_300  [key=0, style=solid];
m13_301 -> m13_302  [key=0, style=solid];
m13_301 -> m13_312  [key=2, style=dotted];
m13_302 -> m13_300  [key=0, style=solid];
m13_302 -> m13_313  [key=2, style=dotted];
m13_306 -> m13_307  [key=0, style=solid];
m13_306 -> m13_315  [key=2, style=dotted];
m13_305 -> m13_306  [key=0, style=solid];
m13_305 -> m13_309  [key=0, style=solid];
m13_307 -> m13_308  [key=0, style=solid];
m13_307 -> m13_315  [key=2, style=dotted];
m13_307 -> m13_313  [key=2, style=dotted];
m13_303 -> m13_307  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_303 -> m13_304  [key=0, style=solid];
m13_303 -> m13_314  [key=2, style=dotted];
m13_303 -> m13_309  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_304 -> m13_306  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_304 -> m13_305  [key=0, style=solid];
m13_304 -> m13_307  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_304 -> m13_308  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_309 -> m13_310  [key=0, style=solid];
m13_308 -> m13_305  [key=0, style=solid];
m13_308 -> m13_308  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_310 -> m13_297  [key=0, style=bold, color=blue];
m13_159 -> m13_160  [key=0, style=solid];
m13_159 -> m13_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_160 -> m13_161  [key=0, style=solid];
m13_160 -> m13_20  [key=2, style=dotted];
m13_162 -> m13_10  [key=2, style=dotted];
m13_162 -> m13_163  [key=0, style=solid];
m13_162 -> m13_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_161 -> m13_162  [key=0, style=solid];
m13_161 -> m13_166  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m13_161 -> m13_164  [key=2, style=dotted];
m13_163 -> m13_159  [key=0, style=bold, color=blue];
m13_33 -> m13_34  [key=0, style=solid];
m13_34 -> m13_10  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_35 -> m13_33  [key=0, style=bold, color=blue];
m13_381 -> m13_76  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_114  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_117  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_222  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_231  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_268  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_288  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_322  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_327  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_332  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_339  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_354  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_381 -> m13_374  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m13_390 -> m13_117  [key=1, style=dashed, color=green, label=int];
m13_391 -> m13_117  [key=1, style=dashed, color=green, label=int];
m13_382 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_383 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_384 -> m13_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_385 -> m13_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_386 -> m13_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_387 -> m13_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_388 -> m13_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_389 -> m13_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_392 -> m13_156  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m13_393 -> m13_166  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m13_394 -> m13_176  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m13_395 -> m13_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_396 -> m13_243  [key=1, style=dashed, color=darkseagreen4, label=sql];
m13_398 -> m13_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_397 -> m13_273  [key=1, style=dashed, color=darkseagreen4, label=string];
}
