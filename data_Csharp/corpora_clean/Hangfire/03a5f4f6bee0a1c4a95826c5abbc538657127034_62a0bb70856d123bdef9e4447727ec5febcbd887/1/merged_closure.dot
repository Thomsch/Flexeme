digraph  {
m0_10 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="71-71"];
m0_12 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="74-74"];
m0_13 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="75-75"];
m0_14 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="76-76"];
m0_15 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="77-77"];
m0_11 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''Using the following options for Hangfire Server:'')", span="73-73"];
m0_16 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="71-71"];
m0_7 [cluster="System.Math.Min(int, int)", file="BackgroundJobServerOptions.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m0_2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="35-35"];
m0_3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="BackgroundJobServerOptions.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(15)", prediction=0, span="36-36"];
m0_17 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m0_0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m0_1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="34-34"];
m0_8 [cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundJobServerOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m0_19 [cluster="Unk.Join", file="BackgroundJobServerOptions.cs", label="Entry Unk.Join", span=""];
m0_4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="BackgroundJobServerOptions.cs", label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", prediction=1, span="37-37"];
m0_5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="ServerWatchdogOptions = new ServerWatchdogOptions()", span="39-39"];
m0_6 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m0_9 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22"];
m0_20 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="75-75"];
m0_21 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="''''' + x + '''''", span="75-75"];
m0_22 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="75-75"];
m0_18 [cluster="Unk.Select", file="BackgroundJobServerOptions.cs", label="Entry Unk.Select", span=""];
m0_23 [file="BackgroundJobServerOptions.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m2_14 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="DefaultJobCreationProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", span="46-46"];
m2_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="DefaultJobCreationProcess.cs", label="Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="81-85"];
m2_30 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m2_29 [cluster="Hangfire.JobStorage.GetConnection()", file="DefaultJobCreationProcess.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m2_53 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m2_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", color=green, community=0, file="DefaultJobCreationProcess.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", prediction=2, span="67-68"];
m2_55 [cluster="Unk.GetInstant", file="DefaultJobCreationProcess.cs", label="Entry Unk.GetInstant", span=""];
m2_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DefaultJobCreationProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_57 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="DefaultJobCreationProcess.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m2_58 [cluster="Hangfire.Server.IScheduleInstant.GetMatches(System.DateTime?)", file="DefaultJobCreationProcess.cs", label="Entry Hangfire.Server.IScheduleInstant.GetMatches(System.DateTime?)", span="25-25"];
m2_59 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="DefaultJobCreationProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_60 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="DefaultJobCreationProcess.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m2_61 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="DefaultJobCreationProcess.cs", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41"];
m2_62 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultJobCreationProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_63 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="DefaultJobCreationProcess.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m2_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="DefaultJobCreationProcess.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39"];
m2_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="DefaultJobCreationProcess.cs", label="client == null", span="46-46"];
m2_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="DefaultJobCreationProcess.cs", label="throw new ArgumentNullException(''client'');", span="46-46"];
m2_76 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="DefaultJobCreationProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m2_77 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="DefaultJobCreationProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="169-169"];
m2_78 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="DefaultJobCreationProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="171-171"];
m2_79 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="DefaultJobCreationProcess.cs", label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="173-173"];
m2_80 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="DefaultJobCreationProcess.cs", label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175"];
m2_81 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="DefaultJobCreationProcess.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177"];
m2_82 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="DefaultJobCreationProcess.cs", label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179"];
m2_83 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="DefaultJobCreationProcess.cs", label="this.ScenarioCleanup()", span="181-181"];
m2_84 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="DefaultJobCreationProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m2_64 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m2_32 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m2_41 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="DefaultJobCreationProcess.cs", label="var job = serializedJob.Deserialize()", span="101-101"];
m2_54 [cluster="Unk.Parse", file="DefaultJobCreationProcess.cs", label="Entry Unk.Parse", span=""];
m2_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="DefaultJobCreationProcess.cs", label="instantFactory == null", span="47-47"];
m2_34 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m2_40 [cluster="Unk.Given", file="DefaultJobCreationProcess.cs", label="Entry Unk.Given", span=""];
m2_42 [cluster="Unk.When", file="DefaultJobCreationProcess.cs", label="Entry Unk.When", span=""];
m2_45 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98"];
m2_49 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m2_50 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="testRunner.Then(''the queue does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m2_44 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m2_48 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m2_43 [cluster="Unk.Then", file="DefaultJobCreationProcess.cs", label="Entry Unk.Then", span=""];
m2_46 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="100-100"];
m2_47 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m2_51 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="testRunner.But(''the dequeued jobs list contains it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="110-110"];
m2_15 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="DefaultJobCreationProcess.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49"];
m2_17 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="DefaultJobCreationProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", span="46-46"];
m2_20 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", file="DefaultJobCreationProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m2_22 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="DefaultJobCreationProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m2_23 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="DefaultJobCreationProcess.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m2_16 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="DefaultJobCreationProcess.cs", label="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(null)", span="51-51"];
m2_18 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", file="DefaultJobCreationProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m2_19 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", file="DefaultJobCreationProcess.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m2_26 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="DefaultJobCreationProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m2_24 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="DefaultJobCreationProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m2_27 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="DefaultJobCreationProcess.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m2_35 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m2_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="DefaultJobCreationProcess.cs", label="_storage = storage", span="50-50"];
m2_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="DefaultJobCreationProcess.cs", label="_client = client", span="51-51"];
m2_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="DefaultJobCreationProcess.cs", label="_throttler = throttler", span="53-53"];
m2_85 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m2_86 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="190-190"];
m2_87 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="192-192"];
m2_88 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="194-194"];
m2_89 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="196-196"];
m2_90 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m2_91 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m2_92 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="this.ScenarioCleanup()", span="202-202"];
m2_93 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m2_28 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="DefaultJobCreationProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m2_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="DefaultJobCreationProcess.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39"];
m2_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="DefaultJobCreationProcess.cs", label="throttler == null", span="48-48"];
m2_65 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m2_66 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="144-144"];
m2_67 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146"];
m2_68 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148"];
m2_69 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="150-150"];
m2_70 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="152-152"];
m2_71 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="testRunner.Then(''the fetcher returns the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="154-154"];
m2_72 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156"];
m2_73 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="testRunner.Then(''the fetcher returns the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158"];
m2_74 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="this.ScenarioCleanup()", span="160-160"];
m2_75 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="DefaultJobCreationProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m2_8 [cluster="Unk.OnFeatureStart", file="DefaultJobCreationProcess.cs", label="Entry Unk.OnFeatureStart", span=""];
m2_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="DefaultJobCreationProcess.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m2_52 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="DefaultJobCreationProcess.cs", label="this.ScenarioCleanup()", span="112-112"];
m2_36 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="testRunner.Then(''the fetcher returns the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m2_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="DefaultJobCreationProcess.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m2_31 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns the job payload when it dequeues a job'', ((string[])(null)))", span="77-77"];
m2_33 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m2_37 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="this.ScenarioCleanup()", span="89-89"];
m2_38 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="DefaultJobCreationProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m2_94 [file="DefaultJobCreationProcess.cs", label="HangFire.Tests.Server.JobFetcherFeature", span=""];
m3_16 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="DefaultJobCreationProcessFacts.cs", label="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(null)", span="51-51"];
m3_57 [cluster="System.Random.Next(int, int)", file="DefaultJobCreationProcessFacts.cs", label="Entry System.Random.Next(int, int)", span="0-0"];
m3_53 [cluster="System.Random.Random(int)", file="DefaultJobCreationProcessFacts.cs", label="Entry System.Random.Random(int)", span="0-0"];
m3_0 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32"];
m3_2 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int)", color=green, community=0, file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int)", prediction=3, span="37-37"];
m3_1 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="DefaultJobCreationProcessFacts.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32"];
m3_3 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int)", color=green, community=0, file="DefaultJobCreationProcessFacts.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int)", prediction=4, span="37-37"];
m3_4 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", span="44-44"];
m3_18 [cluster="object.GetType()", file="DefaultJobCreationProcessFacts.cs", label="Entry object.GetType()", span="0-0"];
m3_56 [cluster="System.Math.Pow(double, double)", file="DefaultJobCreationProcessFacts.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m3_39 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m3_5 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="innerComponent == null", span="49-49"];
m3_40 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultJobCreationProcessFacts.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m3_17 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="DefaultJobCreationProcessFacts.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", span="46-46"];
m3_58 [cluster="System.TimeSpan.FromSeconds(double)", file="DefaultJobCreationProcessFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m3_20 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="69-69"];
m3_21 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="ExecuteWithAutomaticRetry(cancellationToken)", span="71-71"];
m3_22 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="69-69"];
m3_41 [cluster="Hangfire.Logging.ILog.ErrorFormat(string, params object[])", file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Logging.ILog.ErrorFormat(string, params object[])", span="158-158"];
m3_43 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="DefaultJobCreationProcessFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m3_7 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="delayCallback == null", span="50-50"];
m3_23 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="74-74"];
m3_24 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="var i = 0", span="76-76"];
m3_26 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="_innerComponent.Execute(cancellationToken)", span="80-80"];
m3_35 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="cancellationToken.WaitHandle.WaitOne(nextTry)", span="103-103"];
m3_25 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="i <= _maxRetryAttempts", span="76-76"];
m3_31 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="i >= _maxRetryAttempts - 1", span="90-90"];
m3_33 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="var nextTry = _delayCallback(i)", span="92-92"];
m3_34 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="_logger.ErrorFormat(\r\n                        ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                        ex,\r\n                        _maxRetryAttempts,\r\n                        i + 1,\r\n                        _maxRetryAttempts,\r\n                        nextTry)", span="94-100"];
m3_37 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="i++", span="76-76"];
m3_27 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="return;", span="81-81"];
m3_28 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label=OperationCanceledException, span="83-83"];
m3_29 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="throw;", span="85-85"];
m3_30 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label=Exception, span="87-87"];
m3_32 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="throw;", span="90-90"];
m3_36 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="104-104"];
m3_38 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="DefaultJobCreationProcessFacts.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="74-74"];
m3_14 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="_logger = LogProvider.GetLogger(_innerComponent.GetType())", span="61-61"];
m3_15 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", span="44-44"];
m3_44 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="109-109"];
m3_45 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="DefaultJobCreationProcessFacts.cs", label="return _innerComponent.ToString();", span="111-111"];
m3_46 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="DefaultJobCreationProcessFacts.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="109-109"];
m3_19 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="360-360"];
m3_54 [cluster="System.Guid.NewGuid()", file="DefaultJobCreationProcessFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m3_55 [cluster="System.Guid.GetHashCode()", file="DefaultJobCreationProcessFacts.cs", label="Entry System.Guid.GetHashCode()", span="0-0"];
m3_6 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="throw new ArgumentNullException(''innerComponent'');", span="49-49"];
m3_42 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="DefaultJobCreationProcessFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m3_9 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="maxRetryAttempts < 0", span="51-51"];
m3_11 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="_innerComponent = innerComponent", span="58-58"];
m3_12 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="_maxRetryAttempts = maxRetryAttempts", span="59-59"];
m3_13 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="_delayCallback = delayCallback", span="60-60"];
m3_8 [cluster="Unk.OnFeatureStart", file="DefaultJobCreationProcessFacts.cs", label="Entry Unk.OnFeatureStart", span=""];
m3_10 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="DefaultJobCreationProcessFacts.cs", label="throw new ArgumentOutOfRangeException(\r\n                    ''maxRetryAttempts'',\r\n                    ''MaxRetryAttempts property value must be greater or equal to 0.'');", span="53-55"];
m3_48 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="DefaultJobCreationProcessFacts.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="114-114"];
m3_49 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="DefaultJobCreationProcessFacts.cs", label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="117-117"];
m3_50 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="DefaultJobCreationProcessFacts.cs", label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="118-119"];
m3_51 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="DefaultJobCreationProcessFacts.cs", label="return TimeSpan.FromSeconds(nextTry);", span="121-121"];
m3_52 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="DefaultJobCreationProcessFacts.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="114-114"];
m3_47 [cluster="object.ToString()", file="DefaultJobCreationProcessFacts.cs", label="Entry object.ToString()", span="0-0"];
m3_59 [file="DefaultJobCreationProcessFacts.cs", label="Hangfire.Server.AutomaticRetryServerComponentWrapper", span=""];
m4_94 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultJobPerformanceProcess.cs", label="Hangfire.Server.DefaultJobPerformanceProcess", span=""];
m4_45 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DefaultJobPerformanceProcess.cs", label="var jobs = _connection.Query<Job>(\r\n                jobsSql,\r\n                new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                .ToList()", span="102-105"];
m4_71 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="DefaultJobPerformanceProcess.cs", label="wasError = true", span="140-140"];
m4_142 [cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m4_50 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return new PerformedContext(context, result, false, null);", span="95-95"];
m4_51 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="92-96"];
m4_52 [cluster="Hangfire.Server.IJobPerformer.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="DefaultJobPerformanceProcess.cs", label="Entry Hangfire.Server.IJobPerformer.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="20-20"];
m4_54 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="99-99"];
m4_55 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="99-99"];
m4_56 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="99-99"];
m4_53 [cluster="Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", file="DefaultJobPerformanceProcess.cs", label="Entry Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", span="26-26"];
m4_57 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="InvokePerformFilter(filter, preContext, next)", span="99-99"];
m4_62 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="DefaultJobPerformanceProcess.cs", label="throw;", span="117-117"];
m4_43 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="DefaultJobPerformanceProcess.cs", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="84-84"];
m4_179 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="357-357"];
m4_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="var stats = new StatisticsDto()", span="359-359"];
m4_181 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="string sql = @''\r\nselect [State], count(id) as [Count] From HangFire.Job group by [State]\r\nselect count(Id) from HangFire.Server\r\nselect count(distinct Queue) from HangFire.JobQueue\r\nselect sum([Value]) from HangFire.Counter where [Key] = 'stats:succeeded'\r\n''", span="361-366"];
m4_185 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.Name)", span="374-374"];
m4_186 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="stats.Failed = getCountIfExists(FailedState.Name)", span="375-375"];
m4_187 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="stats.Processing = getCountIfExists(ProcessingState.Name)", span="376-376"];
m4_188 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.Name)", span="377-377"];
m4_189 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="stats.Servers = multi.Read<int>().Single()", span="379-379"];
m4_190 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="stats.Queues = multi.Read<int>().Single()", span="380-380"];
m4_191 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="382-382"];
m4_192 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="return stats;", span="385-385"];
m4_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="var multi = _connection.QueryMultiple(sql)", span="368-368"];
m4_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="370-370"];
m4_184 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="372-372"];
m4_193 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="357-357"];
m4_42 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="DefaultJobPerformanceProcess.cs", label="return result;", span="103-103"];
m4_83 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="DefaultJobPerformanceProcess.cs", label="throw new JobPerformanceException(\r\n                        ''An exception occurred during execution of one of the filters'',\r\n                        filterException);", span="173-175"];
m4_84 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="DefaultJobPerformanceProcess.cs", label="return postContext;", span="179-179"];
m4_85 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="DefaultJobPerformanceProcess.cs", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="106-106"];
m4_29 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="60-60"];
m4_33 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="return GetNumberOfJobsByStateName(ProcessingState.Name);", prediction=5, span="75-75"];
m4_34 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="73-73"];
m4_103 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56"];
m4_7 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="filterProvider == null", prediction=6, span="44-44"];
m4_147 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="388-388"];
m4_207 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var endDate = DateTime.UtcNow", span="390-390"];
m4_214 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="398-398"];
m4_208 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var dates = new List<DateTime>()", span="391-391"];
m4_211 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="dates.Add(endDate)", span="394-394"];
m4_212 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="endDate = endDate.AddHours(-1)", span="395-395"];
m4_209 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var i = 0", span="392-392"];
m4_222 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="i < dates.Count", span="416-416"];
m4_224 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="result.Add(dates[i], value)", span="419-419"];
m4_210 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="i < 24", span="392-392"];
m4_213 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="i++", span="392-392"];
m4_215 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="400-403"];
m4_216 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="405-408"];
m4_217 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label=keys, span="410-410"];
m4_218 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="!valuesMap.ContainsKey(key)", span="412-412"];
m4_219 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="valuesMap.Add(key, 0)", span="412-412"];
m4_223 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="418-418"];
m4_220 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var result = new Dictionary<DateTime, long>()", span="415-415"];
m4_221 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var i = 0", span="416-416"];
m4_226 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="return result;", span="422-422"];
m4_225 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="i++", span="416-416"];
m4_227 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="388-388"];
m4_141 [cluster="Unk.ToString", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ToString", span=""];
m4_46 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DefaultJobPerformanceProcess.cs", label="return DeserializeJobs(jobs, selector);", span="107-107"];
m4_151 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315"];
m4_152 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.JobHistory where JobId = @id order by CreatedAt desc''", span="317-320"];
m4_153 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="322-322"];
m4_154 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var job = multi.Read<Job>().SingleOrDefault()", span="324-324"];
m4_157 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="327-327"];
m4_158 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="var history =\r\n                    multi.Read<JobHistory>()\r\n                        .ToList()\r\n                        .Select(x => new StateHistoryDto\r\n                         {\r\n                             StateName = x.StateName,\r\n                             CreatedAt = x.CreatedAt,\r\n                             Reason = x.Reason,\r\n                             Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                         })\r\n                        .ToList()", span="328-338"];
m4_155 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="job == null", span="325-325"];
m4_159 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="return new JobDetailsDto\r\n                {\r\n                    Arguments = JobHelper.FromJson<string[]>(job.Arguments),\r\n                    CreatedAt = job.CreatedAt,\r\n                    State = job.State,\r\n                    Method = DeserializeJobMethod(job.InvocationData),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", span="340-348"];
m4_156 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="return null;", span="325-325"];
m4_160 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315"];
m4_49 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="result = performer.Perform(_activator, context.CancellationToken)", span="94-94"];
m4_59 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m4_60 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128"];
m4_61 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m4_63 [cluster="int.ToString()", file="DefaultJobPerformanceProcess.cs", label="Entry int.ToString()", span="0-0"];
m4_65 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6"];
m4_66 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="DefaultJobPerformanceProcess.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="130-130"];
m4_72 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142"];
m4_69 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="DefaultJobPerformanceProcess.cs", label="return null;", span="138-138"];
m4_73 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.Name,\r\n                (method, stateData) => new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="144-151"];
m4_79 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154"];
m4_68 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="DefaultJobPerformanceProcess.cs", label=JobLoadException, span="136-136"];
m4_64 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_67 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="DefaultJobPerformanceProcess.cs", label="return JobMethod.Deserialize(data);", span="134-134"];
m4_76 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="147-151"];
m4_75 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="147-151"];
m4_77 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="147-151"];
m4_81 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154"];
m4_70 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128"];
m4_78 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m4_74 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142"];
m4_80 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="return GetTimelineStats(''succeeded'');", span="156-156"];
m4_82 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="425-425"];
m4_32 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="DefaultJobPerformanceProcess.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", span="182-182"];
m4_144 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305"];
m4_145 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="DefaultJobPerformanceProcess.cs", label="return GetHourlyTimelineStats(''succeeded'');", span="307-307"];
m4_146 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305"];
m4_195 [cluster="Unk.Read", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Read", span=""];
m4_104 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204"];
m4_105 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.Name,\r\n                (method, stateData) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="206-214"];
m4_106 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204"];
m4_96 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Hangfire.Server.IJobPerformer", span=""];
m4_97 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label=preContext, span=""];
m4_98 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="System.Func<Hangfire.Server.PerformedContext>", span=""];
m4_206 [cluster="Unk.ContainsKey", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ContainsKey", span=""];
m4_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30"];
m4_121 [cluster="Unk.EnqueuedJobs", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.EnqueuedJobs", span=""];
m4_139 [cluster="List<KeyValuePair<string, DequeuedJobDto>>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry List<KeyValuePair<string, DequeuedJobDto>>.cstr", span=""];
m4_86 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164"];
m4_194 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2"];
m4_196 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_27 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="DefaultJobPerformanceProcess.cs", label="return null;", span="76-76"];
m4_28 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="DefaultJobPerformanceProcess.cs", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="50-50"];
m4_95 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="DefaultJobPerformanceProcess.cs", label="Hangfire.Server.PerformContext", span=""];
m4_143 [cluster="Unk.DeserializeJobMethod", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.DeserializeJobMethod", span=""];
m4_5 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="activator == null", prediction=7, span="43-43"];
m4_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65"];
m4_265 [cluster="System.DateTime.AddDays(double)", file="DefaultJobPerformanceProcess.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m4_14 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="DefaultJobPerformanceProcess.cs", label="context == null", span="52-52"];
m4_165 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6"];
m4_24 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="DefaultJobPerformanceProcess.cs", label="InvokeServerExceptionFilters(exceptionContext, filterInfo.ServerExceptionFilters)", span="68-68"];
m4_25 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="DefaultJobPerformanceProcess.cs", label="!exceptionContext.ExceptionHandled", span="70-70"];
m4_26 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="DefaultJobPerformanceProcess.cs", label="throw;", span="72-72"];
m4_39 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="DefaultJobPerformanceProcess.cs", label="Func<PerformedContext> continuation = () =>\r\n            {\r\n                result = performer.Perform(_activator, context.CancellationToken);\r\n                return new PerformedContext(context, result, false, null);\r\n            }", span="92-96"];
m4_40 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="DefaultJobPerformanceProcess.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokePerformFilter(filter, preContext, next))", span="98-99"];
m4_41 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="DefaultJobPerformanceProcess.cs", label="thunk()", span="101-101"];
m4_99 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Hangfire.Server.IServerFilter", span=""];
m4_100 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="194-201"];
m4_101 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="194-201"];
m4_107 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="210-214"];
m4_108 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="210-214"];
m4_109 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="210-214"];
m4_127 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="266-270"];
m4_128 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                }", span="266-270"];
m4_129 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="266-270"];
m4_166 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="327-327"];
m4_169 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="327-327"];
m4_172 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="331-337"];
m4_167 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.Name", span="327-327"];
m4_168 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="327-327"];
m4_170 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.Value", span="327-327"];
m4_171 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="327-327"];
m4_173 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new StateHistoryDto\r\n                         {\r\n                             StateName = x.StateName,\r\n                             CreatedAt = x.CreatedAt,\r\n                             Reason = x.Reason,\r\n                             Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                         }", span="331-337"];
m4_174 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="331-337"];
m4_197 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="370-370"];
m4_200 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="370-370"];
m4_204 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="372-372"];
m4_198 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.State", span="370-370"];
m4_199 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="370-370"];
m4_201 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.Count", span="370-370"];
m4_202 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="370-370"];
m4_203 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="372-372"];
m4_205 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="372-372"];
m4_234 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="398-398"];
m4_233 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="398-398"];
m4_238 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="408-408"];
m4_241 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="408-408"];
m4_235 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="398-398"];
m4_239 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="(string)x.Key", span="408-408"];
m4_240 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="408-408"];
m4_242 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="(long)x.Count", span="408-408"];
m4_243 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="408-408"];
m4_270 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="438-438"];
m4_266 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="437-437"];
m4_269 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="438-438"];
m4_273 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="448-448"];
m4_276 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="448-448"];
m4_267 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.ToString(''yyyy-MM-dd'')", span="437-437"];
m4_268 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="437-437"];
m4_271 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="438-438"];
m4_274 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="(string)x.Key", span="448-448"];
m4_275 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="448-448"];
m4_277 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="(long)x.Count", span="448-448"];
m4_278 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="448-448"];
m4_48 [cluster="Unk.ToList", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ToList", span=""];
m4_58 [cluster="System.Collections.Generic.List<T>.List(int)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m4_120 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m4_272 [cluster="Unk.Format", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Format", span=""];
m4_13 [cluster="Unk.Complete", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Complete", span=""];
m4_18 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65"];
m4_19 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42"];
m4_15 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37"];
m4_17 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37"];
m4_23 [cluster="Unk.Single", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Single", span=""];
m4_21 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42"];
m4_22 [cluster="Unk.>", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.>", span=""];
m4_88 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="var result = new List<ServerDto>()", span="170-170"];
m4_89 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label=servers, span="172-172"];
m4_236 [cluster="System.DateTime.ToString(string)", file="DefaultJobPerformanceProcess.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m4_0 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20"];
m4_1 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="DefaultJobPerformanceProcess.cs", label="_connection = connection", span="22-22"];
m4_4 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", file="DefaultJobPerformanceProcess.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", span="39-39"];
m4_119 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m4_232 [cluster="Unk.ElementAt", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ElementAt", span=""];
m4_8 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="throw new ArgumentNullException(''filterProvider'');", prediction=8, span="44-44"];
m4_9 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="_activator = activator", prediction=9, span="46-46"];
m4_10 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="_filterProvider = filterProvider", prediction=10, span="47-47"];
m4_11 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", file="DefaultJobPerformanceProcess.cs", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", span="39-39"];
m4_229 [cluster="Unk.Query", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Query", span=""];
m4_35 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="DefaultJobPerformanceProcess.cs", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
m4_37 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="DefaultJobPerformanceProcess.cs", label="object result = null", span="89-89"];
m4_230 [cluster="Unk.Add", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Add", span=""];
m4_90 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="174-174"];
m4_91 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="175-182"];
m4_92 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="return result;", span="185-185"];
m4_6 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", color=green, community=0, file="DefaultJobPerformanceProcess.cs", label="throw new ArgumentNullException(''activator'');", prediction=11, span="43-43"];
m4_228 [cluster="System.DateTime.AddHours(double)", file="DefaultJobPerformanceProcess.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m4_38 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="DefaultJobPerformanceProcess.cs", label="var preContext = new PerformingContext(context)", span="91-91"];
m4_44 [cluster="Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", file="DefaultJobPerformanceProcess.cs", label="Entry Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", span="24-24"];
m4_47 [cluster="Unk.thunk", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.thunk", span=""];
m4_161 [cluster="Unk.QueryMultiple", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.QueryMultiple", span=""];
m4_87 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="166-168"];
m4_110 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7"];
m4_140 [cluster="KeyValuePair<string, DequeuedJobDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry KeyValuePair<string, DequeuedJobDto>.cstr", span=""];
m4_122 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250"];
m4_123 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="string enqueuedJobsSql = @''\r\nselect * from\r\n(select j.*, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is null) as r\r\nwhere r.row_num between @start and @end''", span="252-257"];
m4_124 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="var jobs = _connection.Query<Job>(\r\n                enqueuedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="259-262"];
m4_125 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (method, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                });", span="264-270"];
m4_126 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250"];
m4_93 [cluster="Hangfire.Server.IServerExceptionFilter.OnServerException(Hangfire.Server.ServerExceptionContext)", file="DefaultJobPerformanceProcess.cs", label="Entry Hangfire.Server.IServerExceptionFilter.OnServerException(Hangfire.Server.ServerExceptionContext)", span="27-27"];
m4_237 [cluster="string.Format(string, object, object)", file="DefaultJobPerformanceProcess.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_163 [cluster="Unk.ToDictionary", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ToDictionary", span=""];
m4_176 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="352-352"];
m4_177 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="DefaultJobPerformanceProcess.cs", label="return GetNumberOfJobsByStateName(SucceededState.Name);", span="354-354"];
m4_178 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="352-352"];
m4_130 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m4_102 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m4_244 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var endDate = DateTime.UtcNow.Date", span="427-427"];
m4_251 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="438-438"];
m4_245 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var startDate = endDate.AddDays(-7)", span="428-428"];
m4_247 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="startDate <= endDate", span="431-431"];
m4_248 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="dates.Add(endDate)", span="433-433"];
m4_249 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="endDate = endDate.AddDays(-1)", span="434-434"];
m4_246 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var dates = new List<DateTime>()", span="429-429"];
m4_250 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="437-437"];
m4_261 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="result.Add(dates[i], value)", span="459-459"];
m4_259 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="i < stringDates.Count", span="456-456"];
m4_252 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="440-443"];
m4_253 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="445-448"];
m4_254 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label=keys, span="450-450"];
m4_255 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="!valuesMap.ContainsKey(key)", span="452-452"];
m4_256 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="valuesMap.Add(key, 0)", span="452-452"];
m4_260 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="458-458"];
m4_257 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var result = new Dictionary<DateTime, long>()", span="455-455"];
m4_258 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="var i = 0", span="456-456"];
m4_263 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="return result;", span="462-462"];
m4_262 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="i++", span="456-456"];
m4_264 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="425-425"];
m4_231 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_148 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310"];
m4_149 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="DefaultJobPerformanceProcess.cs", label="return GetHourlyTimelineStats(''failed'');", span="312-312"];
m4_150 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310"];
m4_164 [cluster="Unk.Select", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Select", span=""];
m4_175 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="5-5"];
m4_111 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224"];
m4_112 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="string queuesAndStatusSql = @''\r\nselect distinct [Queue],\r\n	(select count(JobId) from HangFire.JobQueue as a where q.Queue = a.Queue and a.FetchedAt is null) as Enqueued,\r\n	(select count(JobId) from HangFire.JobQueue as b where q.Queue = b.Queue and b.FetchedAt is not null) as Fetched\r\nfrom HangFire.[JobQueue] as q\r\n''", span="226-231"];
m4_113 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="var queues = _connection.Query<QueueStatusDto>(queuesAndStatusSql).ToList()", span="233-233"];
m4_114 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="234-234"];
m4_115 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label=queues, span="236-236"];
m4_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue.Queue,\r\n                    Length = queue.Enqueued,\r\n                    Dequeued = queue.Fetched,\r\n                    FirstJobs = EnqueuedJobs(queue.Queue, 0, 5)\r\n                })", span="238-244"];
m4_117 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="return result;", span="247-247"];
m4_118 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224"];
m4_30 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="DefaultJobPerformanceProcess.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="84-84"];
m4_162 [cluster="Unk.SingleOrDefault", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.SingleOrDefault", span=""];
m4_131 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273"];
m4_132 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="string fetchedJobsSql = @''\r\nselect * from\r\n(select j.*, jq.FetchedAt, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is not null) as r\r\nwhere r.row_num between @start and @end''", span="275-280"];
m4_133 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="var jobs = _connection.Query<Job>(\r\n                fetchedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="282-285"];
m4_134 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="var result = new List<KeyValuePair<string, DequeuedJobDto>>(jobs.Count)", span="287-287"];
m4_135 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label=jobs, span="289-289"];
m4_136 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="result.Add(new KeyValuePair<string, DequeuedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new DequeuedJobDto\r\n                    {\r\n                        Method = DeserializeJobMethod(job.InvocationData),\r\n                        State = job.State,\r\n                        CreatedAt = job.CreatedAt,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="291-299"];
m4_137 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="return new JobList<DequeuedJobDto>(result);", span="302-302"];
m4_138 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273"];
m4_279 [file="DefaultJobPerformanceProcess.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m4_280 [file="DefaultJobPerformanceProcess.cs", label=countByStates, span=""];
m4_281 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m4_282 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_4 [cluster="HangFire.JobStorage.GetComponents()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry HangFire.JobStorage.GetComponents()", span="57-57"];
m5_5 [cluster="HangFire.JobStorage.GetComponents()", file="DefaultJobPerformanceProcessFacts.cs", label="return Enumerable.Empty<IServerComponent>();", span="59-59"];
m5_6 [cluster="HangFire.JobStorage.GetComponents()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit HangFire.JobStorage.GetComponents()", span="57-57"];
m5_0 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="53-53"];
m5_1 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit HangFire.JobStorage.GetMonitoringApi()", span="53-53"];
m5_8 [cluster="HangFire.JobStorage.GetStateHandlers()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="62-62"];
m5_9 [cluster="HangFire.JobStorage.GetStateHandlers()", file="DefaultJobPerformanceProcessFacts.cs", label="return Enumerable.Empty<IStateHandler>();", span="64-64"];
m5_10 [cluster="HangFire.JobStorage.GetStateHandlers()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit HangFire.JobStorage.GetStateHandlers()", span="62-62"];
m5_7 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m5_2 [cluster="HangFire.JobStorage.GetConnection()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry HangFire.JobStorage.GetConnection()", span="55-55"];
m5_3 [cluster="HangFire.JobStorage.GetConnection()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit HangFire.JobStorage.GetConnection()", span="55-55"];
m6_26 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="_jobId = Perform.Async<InvalidQueueJob>()", span="69-69"];
m6_27 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="code.Equals(''Perform.Async<EmptyQueueJob>()'')", span="71-71"];
m6_29 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="ScenarioContext.Current.Pending()", span="77-77"];
m6_30 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label=PendingStepException, span="80-80"];
m6_31 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="throw;", span="82-82"];
m6_32 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label=Exception, span="84-84"];
m6_34 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19"];
m6_35 [cluster="string.Equals(string)", file="DefaultStateChangeProcess.cs", label="Entry string.Equals(string)", span="0-0"];
m6_36 [cluster="HangFire.Perform.Async<TJob>()", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Perform.Async<TJob>()", span="26-26"];
m6_37 [cluster="HangFire.Perform.Async<TJob>(object)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="44-44"];
m6_39 [cluster="HangFire.Perform.Async(System.Type, object)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="79-79"];
m6_40 [cluster="System.TimeSpan.FromDays(double)", file="DefaultStateChangeProcess.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m6_41 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="106-106"];
m6_42 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="125-125"];
m6_28 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="_jobId = Perform.Async<EmptyQueueJob>()", span="73-73"];
m6_33 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="_exception = ex", span="86-86"];
m6_38 [cluster="HangFire.Perform.Async(System.Type)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Perform.Async(System.Type)", span="61-61"];
m6_43 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="142-142"];
m6_111 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175"];
m6_112 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="DefaultStateChangeProcess.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="177-177"];
m6_113 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="DefaultStateChangeProcess.cs", label="ThenItShouldBeEnqueuedToTheQueue(queue)", span="178-178"];
m6_114 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175"];
m6_5 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="code.Equals(''Perform.Async<TestJob>(new { ArticleId = 3, Author = \''odinserj\'' })'')", span="27-27"];
m6_78 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57"];
m6_103 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161"];
m6_104 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="DefaultStateChangeProcess.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="163-163"];
m6_105 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="DefaultStateChangeProcess.cs", label="ThenItShouldBeScheduledForTomorrow()", span="164-164"];
m6_106 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161"];
m6_76 [cluster="Unk.SortedSetContainsItem", file="DefaultStateChangeProcess.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m6_46 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91"];
m6_54 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", file="DefaultStateChangeProcess.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", span="98-98"];
m6_57 [cluster="Unk.IsTrue", file="DefaultStateChangeProcess.cs", label="Hangfire.States.DefaultStateChangeProcess", span=""];
m6_0 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", span="32-32"];
m6_4 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="_jobId = Perform.Async<TestJob>()", span="25-25"];
m6_25 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="DefaultStateChangeProcess.cs", label="code.Equals(''Perform.Async<InvalidQueueJob>()'')", span="67-67"];
m6_49 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="DefaultStateChangeProcess.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", span="95-95"];
m6_80 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129"];
m6_81 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="DefaultStateChangeProcess.cs", label="Assert.IsNotNull(_exception)", span="131-131"];
m6_82 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="DefaultStateChangeProcess.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="132-132"];
m6_83 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129"];
m6_58 [cluster="Unk.>", file="DefaultStateChangeProcess.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m6_77 [cluster="Unk.GetItemScoreInSortedSet", file="DefaultStateChangeProcess.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m6_56 [cluster="Unk.Contains", file="DefaultStateChangeProcess.cs", label="Entry Unk.Contains", span=""];
m6_55 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
m6_59 [cluster="Unk.AreEqual", file="DefaultStateChangeProcess.cs", label="Entry Unk.AreEqual", span=""];
m6_45 [cluster="Hangfire.States.StateHandlerCollection.GetHandlers(string)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.StateHandlerCollection.GetHandlers(string)", span="50-50"];
m6_87 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136"];
m6_88 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="138-138"];
m6_91 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="142-142"];
m6_89 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="Assert.AreNotEqual(0, job.Count)", span="139-139"];
m6_90 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", span="140-140"];
m6_92 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="DictionaryAssert.ContainsFollowingItems(table, args)", span="143-143"];
m6_93 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136"];
m6_63 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108"];
m6_66 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="DefaultStateChangeProcess.cs", label="Assert.AreEqual(_jobId, jobIds[0])", span="114-114"];
m6_64 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="DefaultStateChangeProcess.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', name))", span="110-111"];
m6_65 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="DefaultStateChangeProcess.cs", label="Assert.AreEqual(1, jobIds.Count)", span="113-113"];
m6_67 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108"];
m6_95 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147"];
m6_96 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="DefaultStateChangeProcess.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="149-149"];
m6_97 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="DefaultStateChangeProcess.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="150-150"];
m6_98 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147"];
m6_44 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="29-29"];
m6_94 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m6_79 [cluster="System.DateTime.AddDays(double)", file="DefaultStateChangeProcess.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m6_50 [cluster="Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", prediction=12, span="29-29"];
m6_47 [cluster="Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="36-36"];
m6_51 [cluster="Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="26-26"];
m6_48 [cluster="Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="28-28"];
m6_52 [cluster="Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="27-27"];
m6_60 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102"];
m6_61 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="DefaultStateChangeProcess.cs", label="ThenItShouldBeEnqueuedToTheQueue(QueueSteps.DefaultQueue)", span="104-104"];
m6_62 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102"];
m6_10 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="DefaultStateChangeProcess.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", prediction=13, span="39-39"];
m6_11 [cluster="lambda expression", file="DefaultStateChangeProcess.cs", label="Entry lambda expression", span="44-44"];
m6_6 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", prediction=13, span="39-39"];
m6_13 [cluster="lambda expression", file="DefaultStateChangeProcess.cs", label="Exit lambda expression", span="44-44"];
m6_15 [cluster="lambda expression", file="DefaultStateChangeProcess.cs", label="Entry lambda expression", span="44-44"];
m6_17 [cluster="lambda expression", file="DefaultStateChangeProcess.cs", label="Exit lambda expression", span="44-44"];
m6_19 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="47-47"];
m6_21 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="filterInfo.ElectStateFilters", span="50-50"];
m6_23 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="47-47"];
m6_14 [cluster="Unk.Select", file="DefaultStateChangeProcess.cs", label="Entry Unk.Select", span=""];
m6_18 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m6_20 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="var filterInfo = GetFilters(context.Job)", span="49-49"];
m6_22 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultStateChangeProcess.cs", label="filter.OnStateElection(context)", span="52-52"];
m6_24 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", file="DefaultStateChangeProcess.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", span="98-98"];
m6_86 [cluster="Unk.IsInstanceOfType", file="DefaultStateChangeProcess.cs", label="Entry Unk.IsInstanceOfType", span=""];
m6_68 [cluster="Unk.GetAllItemsFromList", file="DefaultStateChangeProcess.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m6_84 [cluster="Unk.IsNotNull", file="DefaultStateChangeProcess.cs", label="Entry Unk.IsNotNull", span=""];
m6_69 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118"];
m6_70 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="DefaultStateChangeProcess.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', _jobId))", span="120-120"];
m6_71 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="DefaultStateChangeProcess.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', _jobId)", span="121-121"];
m6_72 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="DefaultStateChangeProcess.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="122-122"];
m6_73 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="DefaultStateChangeProcess.cs", label="Assert.IsTrue(DateTime.UtcNow.Date.AddDays(1) <= timestamp)", span="124-124"];
m6_74 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="DefaultStateChangeProcess.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="125-125"];
m6_75 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118"];
m6_99 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154"];
m6_100 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="156-156"];
m6_101 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="157-157"];
m6_102 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154"];
m6_107 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168"];
m6_108 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="170-170"];
m6_109 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="ThenItShouldBeScheduledForTomorrow()", span="171-171"];
m6_110 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="DefaultStateChangeProcess.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168"];
m6_85 [cluster="System.Type.GetType(string, bool)", file="DefaultStateChangeProcess.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m6_115 [file="DefaultStateChangeProcess.cs", label="HangFire.Tests.ClientSteps", span=""];
m7_5 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="17-17"];
m7_6 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="DefaultStateChangeProcessFacts.cs", label="context.Transaction.RemoveFromSet(''failed'', context.JobId)", span="19-19"];
m7_7 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="DefaultStateChangeProcessFacts.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="17-17"];
m7_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m7_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m7_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m7_0 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="DefaultStateChangeProcessFacts.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m7_1 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="DefaultStateChangeProcessFacts.cs", label="context.Transaction.AddToSet(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="11-14"];
m7_2 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="DefaultStateChangeProcessFacts.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m9_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0"];
m9_14 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="63-63"];
m9_40 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="94-94"];
m9_41 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x == null && y == null", span="97-97"];
m9_43 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x == null", span="101-101"];
m9_45 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="y == null", span="105-105"];
m9_47 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Order < y.Order", span="112-112"];
m9_49 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Order > y.Order", span="116-116"];
m9_51 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Scope < y.Scope", span="123-123"];
m9_53 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Scope > y.Scope", span="127-127"];
m9_42 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 0;", span="99-99"];
m9_44 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return -1;", span="103-103"];
m9_46 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 1;", span="107-107"];
m9_48 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return -1;", span="114-114"];
m9_50 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 1;", span="118-118"];
m9_52 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return -1;", span="125-125"];
m9_54 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 1;", span="129-129"];
m9_55 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="return 0;", span="132-132"];
m9_56 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="94-94"];
m9_13 [cluster="System.Exception.ToString()", file="JobFilterProviderCollection.cs", label="Entry System.Exception.ToString()", span="0-0"];
m9_0 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34"];
m9_1 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", color=green, community=0, file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", prediction=15, span="34-34"];
m9_2 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
m9_3 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
m9_4 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48"];
m9_7 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="IEnumerable<JobFilter> combinedFilters =\r\n                Items.SelectMany(fp => fp.GetFilters(job))\r\n                    .OrderBy(filter => filter, _filterComparer)", span="55-57"];
m9_8 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="return RemoveDuplicates(combinedFilters.Reverse()).Reverse();", span="60-60"];
m9_9 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48"];
m9_18 [cluster="Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", span="32-32"];
m9_31 [cluster="object.GetType()", file="JobFilterProviderCollection.cs", label="Entry object.GetType()", span="0-0"];
m9_10 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobFilterProviderCollection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m9_30 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m9_33 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="81-81"];
m9_35 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="var mvcFilter = filterInstance as IJobFilter", span="83-83"];
m9_36 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="mvcFilter == null", span="84-84"];
m9_38 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="return mvcFilter.AllowMultiple;", span="89-89"];
m9_37 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="return true;", span="86-86"];
m9_39 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="81-81"];
m9_11 [cluster="HttpRequestBase.LinkTo(string)", file="JobFilterProviderCollection.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m9_19 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Entry lambda expression", span="57-57"];
m9_16 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="HangFire.Web.Pages.ErrorPage", span=""];
m9_15 [cluster="Unk.Write", file="JobFilterProviderCollection.cs", label="Entry Unk.Write", span=""];
m9_17 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Exit lambda expression", span="56-56"];
m9_20 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label=filter, span="57-57"];
m9_21 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Exit lambda expression", span="57-57"];
m9_22 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="var visitedTypes = new HashSet<Type>()", span="66-66"];
m9_27 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="yield return filter;", span="75-75"];
m9_23 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label=filters, span="68-68"];
m9_26 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="!visitedTypes.Contains(filterInstanceType) || AllowMultiple(filterInstance)", span="73-73"];
m9_28 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="visitedTypes.Add(filterInstanceType)", span="76-76"];
m9_24 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="var filterInstance = filter.Instance", span="70-70"];
m9_25 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="var filterInstanceType = filterInstance.GetType()", span="71-71"];
m9_29 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobFilterProviderCollection.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="63-63"];
m9_32 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m9_34 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m9_57 [file="JobFilterProviderCollection.cs", label="Hangfire.Common.JobFilterProviderCollection", span=""];
m9_58 [file="JobFilterProviderCollection.cs", label="Hangfire.Common.Job", span=""];
m10_28 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="MessageQueueExtensions.cs", label="Storage = context.JobStorage", span="93-93"];
m10_4 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="MessageQueueExtensions.cs", label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", span="92-92"];
m10_26 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", color=green, community=0, file="MessageQueueExtensions.cs", label="Request = owinContext.Request", prediction=16, span="91-91"];
m10_48 [cluster="System.Text.StringBuilder.Append(string)", file="MessageQueueExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m10_56 [cluster="object.ToString()", file="MessageQueueExtensions.cs", label="Entry object.ToString()", span="0-0"];
m10_41 [cluster="Hangfire.Storage.IMonitoringApi.GetStatistics()", file="MessageQueueExtensions.cs", label="Entry Hangfire.Storage.IMonitoringApi.GetStatistics()", span="27-27"];
m10_40 [cluster="Hangfire.JobStorage.GetMonitoringApi()", file="MessageQueueExtensions.cs", label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54"];
m10_34 [cluster="Hangfire.Dashboard.UrlHelper.UrlHelper(System.Collections.Generic.IDictionary<string, object>)", file="MessageQueueExtensions.cs", label="Entry Hangfire.Dashboard.UrlHelper.UrlHelper(System.Collections.Generic.IDictionary<string, object>)", span="27-27"];
m10_3 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="MessageQueueExtensions.cs", label="Exit Hangfire.Dashboard.RazorPage.RazorPage()", span="32-32"];
m10_35 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="MessageQueueExtensions.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m10_16 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="MessageQueueExtensions.cs", label="Request = parentPage.Request", prediction=17, span="77-77"];
m10_9 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", color=green, community=0, file="MessageQueueExtensions.cs", label="return Request.Query[key];", prediction=18, span="67-67"];
m10_19 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="MessageQueueExtensions.cs", label="AppPath = parentPage.AppPath", prediction=19, span="80-80"];
m10_17 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="MessageQueueExtensions.cs", label="Response = parentPage.Response", prediction=20, span="78-78"];
m10_18 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="MessageQueueExtensions.cs", label="Storage = parentPage.Storage", prediction=21, span="79-79"];
m10_20 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="MessageQueueExtensions.cs", label="Url = parentPage.Url", prediction=22, span="81-81"];
m10_22 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="MessageQueueExtensions.cs", label="_statisticsLazy = parentPage._statisticsLazy", prediction=23, span="84-84"];
m10_21 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="MessageQueueExtensions.cs", label="GenerationTime = parentPage.GenerationTime", prediction=24, span="83-83"];
m10_24 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="MessageQueueExtensions.cs", label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", span="87-87"];
m10_42 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="MessageQueueExtensions.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m10_43 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", color=green, community=0, file="MessageQueueExtensions.cs", label="string.IsNullOrEmpty(textToAppend)", prediction=25, span="106-106"];
m10_44 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", color=green, community=0, file="MessageQueueExtensions.cs", label="return;", prediction=26, span="107-107"];
m10_45 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", color=green, community=0, file="MessageQueueExtensions.cs", label="_content.Append(textToAppend)", prediction=18, span="108-108"];
m10_46 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="MessageQueueExtensions.cs", label="Exit Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m10_0 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="MessageQueueExtensions.cs", label="Entry Hangfire.Dashboard.RazorPage.RazorPage()", span="32-32"];
m10_1 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", color=green, community=0, file="MessageQueueExtensions.cs", label="GenerationTime = Stopwatch.StartNew()", prediction=28, span="34-34"];
m10_2 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", color=green, community=0, file="MessageQueueExtensions.cs", label="Html = new HtmlHelper(this)", prediction=29, span="35-35"];
m10_57 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="MessageQueueExtensions.cs", label="Entry Hangfire.Dashboard.RazorPage.Encode(string)", span="139-139"];
m10_70 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", color=green, community=0, file="MessageQueueExtensions.cs", label="return string.IsNullOrEmpty(text)\r\n                       ? string.Empty\r\n                       : WebUtility.HtmlEncode(text);", prediction=30, span="141-143"];
m10_27 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", color=green, community=0, file="MessageQueueExtensions.cs", label="Response = owinContext.Response", prediction=31, span="92-92"];
m10_47 [cluster="string.IsNullOrEmpty(string)", file="MessageQueueExtensions.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m10_55 [cluster="Hangfire.Dashboard.NonEscapedString.ToString()", file="MessageQueueExtensions.cs", label="Entry Hangfire.Dashboard.NonEscapedString.ToString()", span="27-27"];
m10_36 [cluster="lambda expression", file="MessageQueueExtensions.cs", label="Entry lambda expression", span="97-101"];
m10_37 [cluster="lambda expression", color=green, community=0, file="MessageQueueExtensions.cs", label="var monitoring = Storage.GetMonitoringApi()", prediction=32, span="99-99"];
m10_38 [cluster="lambda expression", color=green, community=0, file="MessageQueueExtensions.cs", label="return monitoring.GetStatistics();", prediction=33, span="100-100"];
m10_39 [cluster="lambda expression", file="MessageQueueExtensions.cs", label="Exit lambda expression", span="97-101"];
m10_25 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", color=green, community=0, file="MessageQueueExtensions.cs", label="var owinContext = new OwinContext(context.OwinEnvironment)", prediction=34, span="89-89"];
m10_58 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="MessageQueueExtensions.cs", label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119"];
m10_59 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", color=green, community=0, file="MessageQueueExtensions.cs", label="return new NonEscapedString(_body);", prediction=18, span="121-121"];
m10_60 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="MessageQueueExtensions.cs", label="Exit Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119"];
m10_29 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", color=green, community=0, file="MessageQueueExtensions.cs", label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", prediction=18, span="154-154"];
m10_30 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", color=green, community=0, file="MessageQueueExtensions.cs", label="Exit Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", prediction=18, span="154-154"];
m10_31 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", color=green, community=0, file="MessageQueueExtensions.cs", label="_statisticsLazy = new Lazy<StatisticsDto>(() =>\r\n            {\r\n                var monitoring = Storage.GetMonitoringApi();\r\n                return monitoring.GetStatistics();\r\n            })", prediction=38, span="97-101"];
m10_32 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="MessageQueueExtensions.cs", label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", span="87-87"];
m10_33 [cluster="OwinContext.cstr", file="MessageQueueExtensions.cs", label="Entry OwinContext.cstr", span=""];
m10_49 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="MessageQueueExtensions.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m10_50 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", color=green, community=0, file="MessageQueueExtensions.cs", label="value == null", prediction=39, span="113-113"];
m10_51 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", color=green, community=0, file="MessageQueueExtensions.cs", label="return;", prediction=40, span="114-114"];
m10_52 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", color=green, community=0, file="MessageQueueExtensions.cs", label="var html = value as NonEscapedString", prediction=41, span="115-115"];
m10_53 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", color=green, community=0, file="MessageQueueExtensions.cs", label="WriteLiteral(html != null ? html.ToString() : Encode(value.ToString()))", prediction=18, span="116-116"];
m10_54 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="MessageQueueExtensions.cs", label="Exit Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m10_62 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", color=green, community=0, file="MessageQueueExtensions.cs", label="_body = body", prediction=43, span="126-126"];
m10_63 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", color=green, community=0, file="MessageQueueExtensions.cs", label="Execute()", prediction=18, span="128-128"];
m10_64 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", color=green, community=0, file="MessageQueueExtensions.cs", label="Layout != null", prediction=18, span="130-130"];
m10_67 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", color=green, community=0, file="MessageQueueExtensions.cs", label="return _content.ToString();", prediction=18, span="136-136"];
m10_65 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="MessageQueueExtensions.cs", label="Layout.Assign(this)", span="132-132"];
m10_66 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="MessageQueueExtensions.cs", label="return Layout.TransformText(_content.ToString());", span="133-133"];
m10_73 [file="MessageQueueExtensions.cs", label="Hangfire.Dashboard.RazorPage", span=""];
m11_5 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="MsmqDtcTransaction.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="17-17"];
m11_6 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="MsmqDtcTransaction.cs", label="context.Transaction.RemoveFromSet(''processing'', context.JobId)", prediction=47, span="19-19"];
m11_7 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="MsmqDtcTransaction.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="17-17"];
m11_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="MsmqDtcTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m11_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="MsmqDtcTransaction.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m11_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="MsmqDtcTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m11_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="MsmqDtcTransaction.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m11_1 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="MsmqDtcTransaction.cs", label="context.Transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", prediction=48, span="11-14"];
m11_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="MsmqDtcTransaction.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m12_4 [cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", file="MsmqExtensions.cs", label="configuration.Entry.QueueProviders.Add(provider, queues)", span="35-35"];
m12_0 [cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", file="MsmqExtensions.cs", label="Entry Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", span="25-25"];
m12_1 [cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", file="MsmqExtensions.cs", label="queues.Length == 0", span="29-29"];
m12_5 [cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", file="MsmqExtensions.cs", label="return configuration;", span="37-37"];
m12_2 [cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", file="MsmqExtensions.cs", label="queues = new[] { EnqueuedState.DefaultQueue }", span="31-31"];
m12_6 [cluster="Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", file="MsmqExtensions.cs", label="Exit Hangfire.MsmqExtensions.UseMsmqQueues(Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>, string, params string[])", span="25-25"];
m12_7 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", file="MsmqExtensions.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", span="26-26"];
m12_8 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.Add(Hangfire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)", file="MsmqExtensions.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.Add(Hangfire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)", span="40-40"];
m13_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="MsmqFetchedJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m13_21 [cluster="System.Collections.IEnumerator.MoveNext()", file="MsmqFetchedJob.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m13_0 [cluster="MoreLinq.MoreEnumerable.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="Entry MoreLinq.MoreEnumerable.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="50-50"];
m13_1 [cluster="MoreLinq.MoreEnumerable.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="source == null", span="52-52"];
m13_3 [cluster="MoreLinq.MoreEnumerable.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="resultSelector == null", span="53-53"];
m13_5 [cluster="MoreLinq.MoreEnumerable.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="return PairwiseImpl(source, resultSelector);", span="54-54"];
m13_2 [cluster="MoreLinq.MoreEnumerable.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="throw new ArgumentNullException(''source'');", span="52-52"];
m13_4 [cluster="MoreLinq.MoreEnumerable.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="throw new ArgumentNullException(''resultSelector'');", span="53-53"];
m13_6 [cluster="MoreLinq.MoreEnumerable.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="Exit MoreLinq.MoreEnumerable.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="50-50"];
m13_20 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="MsmqFetchedJob.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m13_22 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="MsmqFetchedJob.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m13_8 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="Entry MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="57-57"];
m13_9 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="Debug.Assert(source != null)", span="59-59"];
m13_13 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="yield break;", span="65-65"];
m13_16 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="yield return resultSelector(previous, e.Current);", span="70-70"];
m13_10 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="Debug.Assert(resultSelector != null)", span="60-60"];
m13_11 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="var e = source.GetEnumerator()", span="62-62"];
m13_12 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="!e.MoveNext()", span="64-64"];
m13_14 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="var previous = e.Current", span="67-67"];
m13_15 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="e.MoveNext()", span="68-68"];
m13_17 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="previous = e.Current", span="71-71"];
m13_18 [cluster="MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="MsmqFetchedJob.cs", label="Exit MoreLinq.MoreEnumerable.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="57-57"];
m13_19 [cluster="System.Diagnostics.Debug.Assert(bool)", file="MsmqFetchedJob.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m14_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="MsmqInternalTransaction.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m14_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=green, community=0, file="MsmqInternalTransaction.cs", label="MaxRetryAttempts = 10", prediction=49, span="26-26"];
m14_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=green, community=0, file="MsmqInternalTransaction.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(5)", prediction=50, span="27-27"];
m14_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=green, community=0, file="MsmqInternalTransaction.cs", label="LowerLogVerbosity = false", prediction=51, span="28-28"];
m14_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="MsmqInternalTransaction.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m14_5 [cluster="System.TimeSpan.FromSeconds(double)", file="MsmqInternalTransaction.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m14_6 [file="MsmqInternalTransaction.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m15_3 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.Dispose()", span="40-40"];
m15_4 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="MsmqJobQueue.cs", label="Redis.Dispose()", span="42-42"];
m15_5 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.Dispose()", span="40-40"];
m15_143 [cluster="int.ToString(System.IFormatProvider)", file="MsmqJobQueue.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m15_25 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, file="MsmqJobQueue.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", prediction=52, span="96-99"];
m15_18 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, file="MsmqJobQueue.cs", label="queueName = queues[queueIndex]", prediction=52, span="61-61"];
m15_12 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="50-50"];
m15_17 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="queueIndex = (queueIndex + 1) % queues.Length", span="60-60"];
m15_19 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="63-63"];
m15_20 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="64-64"];
m15_26 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, file="MsmqJobQueue.cs", label="return new ProcessingJob(jobId, queueName);", prediction=52, span="105-105"];
m15_15 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, file="MsmqJobQueue.cs", label="var queueIndex = 0", prediction=55, span="54-54"];
m15_14 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="string queueName", span="53-53"];
m15_24 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="jobId == null", span="79-79"];
m15_16 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="58-58"];
m15_22 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="68-71"];
m15_23 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="75-76"];
m15_13 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="string jobId", span="52-52"];
m15_21 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="queueIndex == 0", span="66-66"];
m15_27 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="50-50"];
m15_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="MsmqJobQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m15_201 [cluster="Unk.FromNullableStringTimestamp", file="MsmqJobQueue.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m15_65 [cluster="Unk.SetRangeInHash", file="MsmqJobQueue.cs", label="Entry Unk.SetRangeInHash", span=""];
m15_38 [cluster="System.TimeSpan.FromMinutes(double)", file="MsmqJobQueue.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m15_91 [cluster="Unk.GetAllEntriesFromHash", file="MsmqJobQueue.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m15_200 [cluster="Unk.FromStringTimestamp", file="MsmqJobQueue.cs", label="Entry Unk.FromStringTimestamp", span=""];
m15_168 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="293-293"];
m15_169 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="295-295"];
m15_172 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="var pipeline = Redis.CreatePipeline()", span="300-300"];
m15_181 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="RemoveServer(Redis, heartbeat.Key)", span="328-328"];
m15_170 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="296-296"];
m15_173 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label=serverNames, span="302-302"];
m15_171 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="var utcNow = DateTime.UtcNow", span="298-298"];
m15_175 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="306-314"];
m15_176 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="pipeline.Flush()", span="317-317"];
m15_180 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="utcNow > maxTime.Add(timeOut)", span="326-326"];
m15_179 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="323-324"];
m15_182 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="removedServerCount++", span="329-329"];
m15_178 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label=heartbeats, span="321-321"];
m15_174 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="var name = serverName", span="304-304"];
m15_177 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="var removedServerCount = 0", span="320-320"];
m15_183 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="return removedServerCount;", span="333-333"];
m15_184 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="293-293"];
m15_33 [cluster="Unk.SetEntryInHash", file="MsmqJobQueue.cs", label="Entry Unk.SetEntryInHash", span=""];
m15_11 [cluster="Unk.CreateTransaction", file="MsmqJobQueue.cs", label="Entry Unk.CreateTransaction", span=""];
m15_138 [cluster="Unk.AddItemToSet", file="MsmqJobQueue.cs", label="Entry Unk.AddItemToSet", span=""];
m15_29 [cluster="string.Format(string, object)", file="MsmqJobQueue.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_117 [cluster="Unk.RemoveEntryFromHash", file="MsmqJobQueue.cs", label="Entry Unk.RemoveEntryFromHash", span=""];
m15_30 [cluster="Unk.BlockingPopAndPushItemBetweenLists", file="MsmqJobQueue.cs", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
m15_165 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="285-285"];
m15_166 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="MsmqJobQueue.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="287-290"];
m15_167 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="285-285"];
m15_164 [cluster="Unk.RemoveEntry", file="MsmqJobQueue.cs", label="Entry Unk.RemoveEntry", span=""];
m15_154 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="277-279"];
m15_151 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="269-269"];
m15_152 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="MsmqJobQueue.cs", label="var transaction = redis.CreateTransaction()", span="271-271"];
m15_153 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="273-275"];
m15_155 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="MsmqJobQueue.cs", label="transaction.Commit()", span="281-281"];
m15_156 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="269-269"];
m15_34 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="MsmqJobQueue.cs", label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22"];
m15_7 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="45-45"];
m15_8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="MsmqJobQueue.cs", label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="47-47"];
m15_9 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="45-45"];
m15_99 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="203-203"];
m15_100 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="MsmqJobQueue.cs", label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="205-207"];
m15_101 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="203-203"];
m15_69 [cluster="Unk.ExpireEntryIn", file="MsmqJobQueue.cs", label="Entry Unk.ExpireEntryIn", span=""];
m15_93 [cluster="InvocationData.cstr", file="MsmqJobQueue.cs", label="Entry InvocationData.cstr", span=""];
m15_187 [cluster="Unk.Flush", file="MsmqJobQueue.cs", label="Entry Unk.Flush", span=""];
m15_56 [cluster="System.Guid.ToString()", file="MsmqJobQueue.cs", label="Entry System.Guid.ToString()", span="0-0"];
m15_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="MsmqJobQueue.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m15_10 [cluster="RedisWriteOnlyTransaction.cstr", file="MsmqJobQueue.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m15_202 [cluster="Unk.Add", file="MsmqJobQueue.cs", label="Entry Unk.Add", span=""];
m15_190 [cluster="System.DateTime.Add(System.TimeSpan)", file="MsmqJobQueue.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m15_126 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="237-237"];
m15_127 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="MsmqJobQueue.cs", label="var transaction = Redis.CreateTransaction()", span="239-239"];
m15_128 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="241-242"];
m15_129 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="244-250"];
m15_132 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="255-257"];
m15_133 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="MsmqJobQueue.cs", label="transaction.Commit()", span="260-260"];
m15_131 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="MsmqJobQueue.cs", label="var queue1 = queue", span="254-254"];
m15_130 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="MsmqJobQueue.cs", label="context.Queues", span="252-252"];
m15_134 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="237-237"];
m15_142 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MsmqJobQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m15_199 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="MsmqJobQueue.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m15_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="MsmqJobQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m15_147 [cluster="Unk.AddItemToList", file="MsmqJobQueue.cs", label="Entry Unk.AddItemToList", span=""];
m15_107 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked''))", span="222-224"];
m15_104 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="MsmqJobQueue.cs", label="var transaction = Redis.CreateTransaction()", span="212-212"];
m15_103 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="210-210"];
m15_105 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1))", span="214-217"];
m15_106 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched''))", span="219-221"];
m15_108 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="MsmqJobQueue.cs", label="transaction.Commit()", span="226-226"];
m15_109 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="210-210"];
m15_6 [cluster="Unk.Dispose", file="MsmqJobQueue.cs", label="Entry Unk.Dispose", span=""];
m15_188 [cluster="System.DateTime.DateTime(long)", file="MsmqJobQueue.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m15_160 [cluster="Unk.RemoveItemFromSet", file="MsmqJobQueue.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m15_148 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="264-264"];
m15_149 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="MsmqJobQueue.cs", label="RemoveServer(Redis, serverId)", span="266-266"];
m15_150 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="264-264"];
m15_189 [cluster="System.Math.Max(long, long)", file="MsmqJobQueue.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m15_70 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
m15_71 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="151-152"];
m15_72 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="storedData.Count == 0", span="154-154"];
m15_77 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="storedData.ContainsKey(''Type'')", span="160-160"];
m15_78 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="type = storedData[''Type'']", span="162-162"];
m15_79 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="storedData.ContainsKey(''Method'')", span="164-164"];
m15_80 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="method = storedData[''Method'']", span="166-166"];
m15_81 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="storedData.ContainsKey(''ParameterTypes'')", span="168-168"];
m15_82 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="parameterTypes = storedData[''ParameterTypes'']", span="170-170"];
m15_85 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="var invocationData = new InvocationData(type, method, parameterTypes, storedData[''Arguments''])", span="176-176"];
m15_89 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                LoadException = loadException\r\n            };", span="187-192"];
m15_73 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="return null;", span="154-154"];
m15_74 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="string type = null", span="156-156"];
m15_76 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="string parameterTypes = null", span="158-158"];
m15_83 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="Job job = null", span="173-173"];
m15_75 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="string method = null", span="157-157"];
m15_84 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="JobLoadException loadException = null", span="174-174"];
m15_86 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="job = invocationData.Deserialize()", span="180-180"];
m15_88 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="loadException = ex", span="184-184"];
m15_87 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label=JobLoadException, span="182-182"];
m15_90 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
m15_57 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="MsmqJobQueue.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m15_157 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="273-275"];
m15_67 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="138-140"];
m15_63 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="134-136"];
m15_111 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1)", span="214-217"];
m15_115 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched'')", span="219-221"];
m15_119 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked'')", span="222-224"];
m15_140 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="244-250"];
m15_145 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="255-257"];
m15_162 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="277-279"];
m15_66 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="138-140"];
m15_68 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="138-140"];
m15_62 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="134-136"];
m15_64 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="134-136"];
m15_110 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="214-217"];
m15_112 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="214-217"];
m15_114 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="219-221"];
m15_116 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="219-221"];
m15_118 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="222-224"];
m15_120 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="222-224"];
m15_139 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="244-250"];
m15_141 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="244-250"];
m15_144 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="255-257"];
m15_146 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="255-257"];
m15_161 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="277-279"];
m15_163 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="277-279"];
m15_136 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="241-242"];
m15_135 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="241-242"];
m15_158 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="273-275"];
m15_197 [cluster="lambda expression", file="MsmqJobQueue.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="310-314"];
m15_191 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="307-309"];
m15_196 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Entry lambda expression", span="310-314"];
m15_137 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="241-242"];
m15_159 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="273-275"];
m15_198 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="310-314"];
m15_192 [cluster="lambda expression", file="MsmqJobQueue.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="307-309"];
m15_193 [cluster="lambda expression", file="MsmqJobQueue.cs", label="Exit lambda expression", span="307-309"];
m15_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33"];
m15_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="MsmqJobQueue.cs", label="Redis = redis", span="35-35"];
m15_2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33"];
m15_32 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="MsmqJobQueue.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m15_125 [cluster="Unk.FirstOrDefault", file="MsmqJobQueue.cs", label="Entry Unk.FirstOrDefault", span=""];
m15_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
m15_49 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="var transaction = Redis.CreateTransaction()", span="132-132"];
m15_48 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="130-130"];
m15_50 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="134-136"];
m15_51 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="138-140"];
m15_52 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="transaction.Commit()", span="143-143"];
m15_41 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="var jobId = Guid.NewGuid().ToString()", span="120-120"];
m15_43 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="var storedParameters = new Dictionary<string, string>(parameters)", span="125-125"];
m15_47 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="129-129"];
m15_53 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="return jobId;", span="146-146"];
m15_42 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="var invocationData = InvocationData.Serialize(job)", span="122-122"];
m15_44 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="storedParameters.Add(''Type'', invocationData.Type)", span="126-126"];
m15_45 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="storedParameters.Add(''Method'', invocationData.Method)", span="127-127"];
m15_46 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="128-128"];
m15_54 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
m15_35 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
m15_36 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", color=green, community=0, file="MsmqJobQueue.cs", label="return Redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", prediction=52, span="110-112"];
m15_37 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
m15_186 [cluster="Unk.CreatePipeline", file="MsmqJobQueue.cs", label="Entry Unk.CreatePipeline", span=""];
m15_96 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="195-195"];
m15_97 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="MsmqJobQueue.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="197-200"];
m15_98 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="195-195"];
m15_113 [cluster="Unk.RemoveItemFromList", file="MsmqJobQueue.cs", label="Entry Unk.RemoveItemFromList", span=""];
m15_55 [cluster="System.Guid.NewGuid()", file="MsmqJobQueue.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m15_102 [cluster="Unk.GetValueFromHash", file="MsmqJobQueue.cs", label="Entry Unk.GetValueFromHash", span=""];
m15_61 [cluster="Unk.Commit", file="MsmqJobQueue.cs", label="Entry Unk.Commit", span=""];
m15_185 [cluster="Unk.GetAllItemsFromSet", file="MsmqJobQueue.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m15_95 [cluster="HangFire.Storage.JobData.JobData()", file="MsmqJobQueue.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m15_94 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="MsmqJobQueue.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m15_194 [cluster="Unk.Format", file="MsmqJobQueue.cs", label="Entry Unk.Format", span=""];
m15_195 [cluster="Unk.GetValuesFromHash", file="MsmqJobQueue.cs", label="Entry Unk.GetValuesFromHash", span=""];
m15_124 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="MsmqJobQueue.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m15_60 [cluster="Unk.QueueCommand", file="MsmqJobQueue.cs", label="Entry Unk.QueueCommand", span=""];
m15_31 [cluster="Unk.PopAndPushItemBetweenLists", file="MsmqJobQueue.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m15_39 [cluster="Unk.AcquireLock", file="MsmqJobQueue.cs", label="Entry Unk.AcquireLock", span=""];
m15_121 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="MsmqJobQueue.cs", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="230-230"];
m15_122 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="MsmqJobQueue.cs", label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="232-234"];
m15_123 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="MsmqJobQueue.cs", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="230-230"];
m15_92 [cluster="Unk.ContainsKey", file="MsmqJobQueue.cs", label="Entry Unk.ContainsKey", span=""];
m15_203 [file="MsmqJobQueue.cs", label="HangFire.Redis.RedisConnection", span=""];
m15_204 [file="MsmqJobQueue.cs", label=jobId, span=""];
m15_206 [file="MsmqJobQueue.cs", label="System.TimeSpan", span=""];
m15_205 [file="MsmqJobQueue.cs", label=storedParameters, span=""];
m15_207 [file="MsmqJobQueue.cs", label=string, span=""];
m15_208 [file="MsmqJobQueue.cs", label=string, span=""];
m15_209 [file="MsmqJobQueue.cs", label=string, span=""];
m15_210 [file="MsmqJobQueue.cs", label="HangFire.Server.ServerContext", span=""];
m15_211 [file="MsmqJobQueue.cs", label=queue1, span=""];
m15_212 [file="MsmqJobQueue.cs", label=string, span=""];
m15_213 [file="MsmqJobQueue.cs", label=name, span=""];
m15_214 [file="MsmqJobQueue.cs", label=heartbeats, span=""];
m16_27 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="MsmqJobQueueMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="39-39"];
m16_28 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="MsmqJobQueueMonitoringApi.cs", label="var options = CreateOptions()", span="41-41"];
m16_29 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = -1)", span="43-44"];
m16_30 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="MsmqJobQueueMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="39-39"];
m16_16 [cluster="Unk.>", file="MsmqJobQueueMonitoringApi.cs", label="Entry Unk.>", span=""];
m16_20 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="MsmqJobQueueMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="30-30"];
m16_21 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="MsmqJobQueueMonitoringApi.cs", label="var options = CreateOptions()", span="32-32"];
m16_22 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = 0)", span="34-35"];
m16_23 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="MsmqJobQueueMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="30-30"];
m16_41 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="MsmqJobQueueMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="57-57"];
m16_42 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="MsmqJobQueueMonitoringApi.cs", label="var options = CreateOptions()", span="59-59"];
m16_43 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.Throws<ArgumentException>(\r\n                () => options.Queues = new string[0])", span="61-62"];
m16_44 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="MsmqJobQueueMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="57-57"];
m16_9 [cluster="System.Math.Min(int, int)", file="MsmqJobQueueMonitoringApi.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m16_11 [cluster="Unk.True", file="MsmqJobQueueMonitoringApi.cs", label="Entry Unk.True", span=""];
m16_10 [cluster="Unk.Equal", file="MsmqJobQueueMonitoringApi.cs", label="Entry Unk.Equal", span=""];
m16_12 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="MsmqJobQueueMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", span="21-21"];
m16_13 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="MsmqJobQueueMonitoringApi.cs", label="var options = CreateOptions()", span="23-23"];
m16_14 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => options.ServerName = null)", span="25-26"];
m16_15 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="MsmqJobQueueMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", span="21-21"];
m16_0 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="MsmqJobQueueMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9"];
m16_1 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="MsmqJobQueueMonitoringApi.cs", label="var options = CreateOptions()", span="11-11"];
m16_2 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.Equal(Math.Min(Environment.ProcessorCount * 5, 40), options.WorkerCount)", span="13-13"];
m16_3 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.Equal(Environment.MachineName, options.ServerName)", span="14-14"];
m16_4 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.Equal(EnqueuedState.DefaultQueue, options.Queues[0])", span="15-15"];
m16_5 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.True(options.ShutdownTimeout > TimeSpan.Zero)", span="16-16"];
m16_6 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.True(options.SchedulePollingInterval > TimeSpan.Zero)", span="17-17"];
m16_7 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="MsmqJobQueueMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9"];
m16_34 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="MsmqJobQueueMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="48-48"];
m16_35 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="MsmqJobQueueMonitoringApi.cs", label="var options = CreateOptions()", span="50-50"];
m16_36 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="MsmqJobQueueMonitoringApi.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => options.Queues = null)", span="52-53"];
m16_37 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="MsmqJobQueueMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="48-48"];
m16_50 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="MsmqJobQueueMonitoringApi.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m16_45 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Entry lambda expression", span="62-62"];
m16_18 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="options.ServerName = null", span="26-26"];
m16_17 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Entry lambda expression", span="26-26"];
m16_19 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Exit lambda expression", span="26-26"];
m16_25 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="options.WorkerCount = 0", span="35-35"];
m16_24 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Entry lambda expression", span="35-35"];
m16_26 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Exit lambda expression", span="35-35"];
m16_32 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="options.WorkerCount = -1", span="44-44"];
m16_31 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Entry lambda expression", span="44-44"];
m16_33 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Exit lambda expression", span="44-44"];
m16_39 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="options.Queues = null", span="53-53"];
m16_38 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Entry lambda expression", span="53-53"];
m16_40 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Exit lambda expression", span="53-53"];
m16_46 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="options.Queues = new string[0]", span="62-62"];
m16_47 [cluster="lambda expression", file="MsmqJobQueueMonitoringApi.cs", label="Exit lambda expression", span="62-62"];
m16_8 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="MsmqJobQueueMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="65-65"];
m16_48 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="MsmqJobQueueMonitoringApi.cs", label="return new BackgroundJobServerOptions();", span="67-67"];
m16_49 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="MsmqJobQueueMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="65-65"];
m16_51 [file="MsmqJobQueueMonitoringApi.cs", label="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts", span=""];
m16_52 [file="MsmqJobQueueMonitoringApi.cs", label=options, span=""];
m16_53 [file="MsmqJobQueueMonitoringApi.cs", label=options, span=""];
m16_54 [file="MsmqJobQueueMonitoringApi.cs", label=options, span=""];
m16_55 [file="MsmqJobQueueMonitoringApi.cs", label=options, span=""];
m16_56 [file="MsmqJobQueueMonitoringApi.cs", label=options, span=""];
m17_6 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="MsmqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32"];
m17_7 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="MsmqJobQueueProvider.cs", label="return _jobQueue;", span="34-34"];
m17_8 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="MsmqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32"];
m17_4 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="31-31"];
m17_5 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.MsmqJobQueueMonitoringApi(string, System.Collections.Generic.IEnumerable<string>)", file="MsmqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.MsmqJobQueueMonitoringApi(string, System.Collections.Generic.IEnumerable<string>)", span="29-29"];
m17_0 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26"];
m17_1 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", color=green, community=0, file="MsmqJobQueueProvider.cs", label="_jobQueue = new MsmqJobQueue(pathPattern, transactionType)", prediction=57, span="28-28"];
m17_2 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs", label="_monitoringApi = new MsmqJobQueueMonitoringApi(pathPattern, queues)", span="29-29"];
m17_3 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26"];
m17_9 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m17_10 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs", label="return _monitoringApi;", span="39-39"];
m17_11 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m17_12 [file="MsmqJobQueueProvider.cs", label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", span=""];
m18_7 [cluster="Unk.NotNull", file="MsmqJobQueueProviderFacts.cs", label="Entry Unk.NotNull", span=""];
m18_6 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32"];
m18_5 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29"];
m18_15 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29"];
m18_0 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10"];
m18_1 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="var provider = CreateProvider()", span="12-12"];
m18_2 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="var jobQueue = provider.GetJobQueue(null)", span="14-14"];
m18_3 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Assert.NotNull(jobQueue)", span="16-16"];
m18_4 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10"];
m18_8 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="20-20"];
m18_9 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="var provider = CreateProvider()", span="22-22"];
m18_10 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="var monitoring = provider.GetJobQueueMonitoringApi(null)", span="24-24"];
m18_11 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Assert.NotNull(monitoring)", span="26-26"];
m18_12 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="20-20"];
m18_16 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", span="26-26"];
m18_13 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m19_10 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", color=green, community=0, file="MsmqSqlServerStorageExtensions.cs", label="queues = new[] { EnqueuedState.DefaultQueue }", prediction=58, span="49-49"];
m19_0 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", file="MsmqSqlServerStorageExtensions.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", span="23-23"];
m19_1 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", color=green, community=0, file="MsmqSqlServerStorageExtensions.cs", label="return UseMsmqQueues(storage, pathPattern, EnqueuedState.DefaultQueue);", prediction=59, span="28-28"];
m19_2 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", file="MsmqSqlServerStorageExtensions.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", span="23-23"];
m19_12 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", file="MsmqSqlServerStorageExtensions.cs", label="storage.QueueProviders.Add(provider, queues)", span="53-53"];
m19_9 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", color=green, community=0, file="MsmqSqlServerStorageExtensions.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", prediction=60, span="28-28"];
m19_7 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="MsmqSqlServerStorageExtensions.cs", label="storage.QueueProviders.Add(provider, queues)", span="33-33"];
m19_11 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="MsmqSqlServerStorageExtensions.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", prediction=61, span="26-26"];
m19_13 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", file="MsmqSqlServerStorageExtensions.cs", label="return storage;", span="55-55"];
m19_8 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="MsmqSqlServerStorageExtensions.cs", label="return storage;", span="35-35"];
m19_14 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", file="MsmqSqlServerStorageExtensions.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", span="39-39"];
m19_16 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqSqlServerStorageExtensions.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26"];
m19_3 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="MsmqSqlServerStorageExtensions.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", span="28-28"];
m19_4 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", color=green, community=0, file="MsmqSqlServerStorageExtensions.cs", label="return UseMsmqQueues(storage, MsmqTransactionType.Internal, pathPattern, queues);", prediction=62, span="36-36"];
m19_5 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="MsmqSqlServerStorageExtensions.cs", label="throw new ArgumentNullException(''storage'');", span="30-30"];
m22_11 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RazorPage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="46-46"];
m22_12 [cluster="PooledRedisClientManager.cstr", file="RazorPage.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m22_13 [cluster="RedisClientManagerConfig.cstr", file="RazorPage.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m22_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RazorPage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41"];
m22_39 [cluster="lambda expression", file="RazorPage.cs", label="Exit lambda expression", span="97-101"];
m22_48 [cluster="System.Text.StringBuilder.Append(string)", file="RazorPage.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m22_56 [cluster="object.ToString()", file="RazorPage.cs", label="Entry object.ToString()", span="0-0"];
m22_41 [cluster="Hangfire.Storage.IMonitoringApi.GetStatistics()", file="RazorPage.cs", label="Entry Hangfire.Storage.IMonitoringApi.GetStatistics()", span="27-27"];
m22_40 [cluster="Hangfire.JobStorage.GetMonitoringApi()", file="RazorPage.cs", label="HangFire.Redis.RedisStorage", span=""];
m22_35 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="RazorPage.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m22_28 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs", label="Storage = context.JobStorage", span="93-93"];
m22_29 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs", label="AppPath = context.AppPath", span="94-94"];
m22_30 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs", label="Url = new UrlHelper(context.OwinEnvironment)", span="95-95"];
m22_31 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs", label="_statisticsLazy = new Lazy<StatisticsDto>(() =>\r\n            {\r\n                var monitoring = Storage.GetMonitoringApi();\r\n                return monitoring.GetStatistics();\r\n            })", span="97-101"];
m22_32 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs", label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", span="87-87"];
m22_34 [cluster="HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", file="RazorPage.cs", label="Entry HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", span="23-23"];
m22_2 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="RazorPage.cs", label="Html = new HtmlHelper(this)", span="35-35"];
m22_3 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="RazorPage.cs", label="Exit Hangfire.Dashboard.RazorPage.RazorPage()", span="32-32"];
m22_72 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="RazorPage.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m22_42 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RazorPage.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m22_43 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", color=green, community=0, file="RazorPage.cs", label="string.IsNullOrEmpty(textToAppend)", prediction=63, span="106-106"];
m22_44 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RazorPage.cs", label="return;", span="107-107"];
m22_45 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RazorPage.cs", label="_content.Append(textToAppend)", span="108-108"];
m22_46 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RazorPage.cs", label="Exit Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m22_69 [cluster="System.Text.StringBuilder.ToString()", file="RazorPage.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m22_33 [cluster="OwinContext.cstr", file="RazorPage.cs", label="Entry OwinContext.cstr", span=""];
m22_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RazorPage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41"];
m22_8 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RazorPage.cs", label="Db = db", span="49-49"];
m22_9 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RazorPage.cs", label="Options = options", span="50-50"];
m22_10 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RazorPage.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ HostAndPort },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = Db,\r\n                    MaxWritePoolSize = Options.ConnectionPoolSize\r\n                })", span="52-59"];
m22_22 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs", label="_statisticsLazy = parentPage._statisticsLazy", span="84-84"];
m22_26 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs", label="Request = owinContext.Request", span="91-91"];
m22_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RazorPage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="46-46"];
m22_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RazorPage.cs", label="HostAndPort = hostAndPort", span="48-48"];
m22_18 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs", label="Storage = parentPage.Storage", span="79-79"];
m22_0 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RazorPage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage()", span="31-31"];
m22_1 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RazorPage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage()", span="31-31"];
m22_57 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="RazorPage.cs", label="Entry Hangfire.Dashboard.RazorPage.Encode(string)", span="139-139"];
m22_70 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="RazorPage.cs", label="return string.IsNullOrEmpty(text)\r\n                       ? string.Empty\r\n                       : WebUtility.HtmlEncode(text);", span="141-143"];
m22_71 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="RazorPage.cs", label="Exit Hangfire.Dashboard.RazorPage.Encode(string)", span="139-139"];
m22_47 [cluster="string.IsNullOrEmpty(string)", file="RazorPage.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m22_17 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs", label="Response = parentPage.Response", span="78-78"];
m22_55 [cluster="Hangfire.Dashboard.NonEscapedString.ToString()", file="RazorPage.cs", label="Entry Hangfire.Dashboard.NonEscapedString.ToString()", span="27-27"];
m22_36 [cluster="lambda expression", file="RazorPage.cs", label="Entry lambda expression", span="97-101"];
m22_37 [cluster="lambda expression", file="RazorPage.cs", label="var monitoring = Storage.GetMonitoringApi()", span="99-99"];
m22_38 [cluster="lambda expression", file="RazorPage.cs", label="return monitoring.GetStatistics();", span="100-100"];
m22_61 [cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="RazorPage.cs", label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22"];
m22_19 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs", label="AppPath = parentPage.AppPath", span="80-80"];
m22_20 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs", label="Url = parentPage.Url", span="81-81"];
m22_21 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs", label="GenerationTime = parentPage.GenerationTime", span="83-83"];
m22_14 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs", label="Entry Hangfire.Dashboard.RazorPage.TransformText(string)", span="124-124"];
m22_15 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs", label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75"];
m22_16 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs", label="Request = parentPage.Request", span="77-77"];
m22_23 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs", label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75"];
m22_24 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs", label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", span="87-87"];
m22_25 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs", label="var owinContext = new OwinContext(context.OwinEnvironment)", span="89-89"];
m22_58 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="RazorPage.cs", label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119"];
m22_59 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="RazorPage.cs", label="return new NonEscapedString(_body);", span="121-121"];
m22_60 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="RazorPage.cs", label="Exit Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119"];
m22_27 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RazorPage.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m22_49 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m22_51 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", color=green, community=0, file="RazorPage.cs", label="return;", prediction=64, span="114-114"];
m22_50 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs", label="value == null", span="113-113"];
m22_53 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs", label="WriteLiteral(html != null ? html.ToString() : Encode(value.ToString()))", span="116-116"];
m22_52 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs", label="var html = value as NonEscapedString", span="115-115"];
m22_54 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs", label="Exit Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m22_62 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs", label="_body = body", span="126-126"];
m22_63 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs", label="Execute()", span="128-128"];
m22_64 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs", label="Layout != null", span="130-130"];
m22_65 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs", label="Layout.Assign(this)", span="132-132"];
m22_66 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs", label="return Layout.TransformText(_content.ToString());", span="133-133"];
m22_67 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs", label="return _content.ToString();", span="136-136"];
m22_68 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs", label="Exit Hangfire.Dashboard.RazorPage.TransformText(string)", span="124-124"];
m22_73 [file="RazorPage.cs", label="Hangfire.Dashboard.RazorPage", span=""];
m23_65 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="RecurringJobScheduler.cs", label="Given(String.Format(''a '{0}' state'', state))", span="124-124"];
m23_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m23_239 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="448-448"];
m23_244 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="RecurringJobScheduler.cs", label="Assert.Equal(table.Rows[i][''State''], history[i][''State''])", span="456-456"];
m23_240 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="RecurringJobScheduler.cs", label="var serializedHistory = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="450-451"];
m23_243 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="RecurringJobScheduler.cs", label="i < table.RowCount", span="454-454"];
m23_241 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="RecurringJobScheduler.cs", label="var history = serializedHistory.Select(JobHelper.FromJson<Dictionary<string, string>>).ToList()", span="452-452"];
m23_242 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="RecurringJobScheduler.cs", label="var i = 0", span="454-454"];
m23_245 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="RecurringJobScheduler.cs", label="i++", span="454-454"];
m23_246 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="448-448"];
m23_135 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="RecurringJobScheduler.cs", label="Entry HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="26-26"];
m23_153 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="307-307"];
m23_156 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="RecurringJobScheduler.cs", label="Assert.True(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="312-312"];
m23_157 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="RecurringJobScheduler.cs", label="Assert.True(timestamp < DateTime.UtcNow.AddSeconds(1))", span="313-313"];
m23_155 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="RecurringJobScheduler.cs", label="var timestamp = JobHelper.FromTimestamp((long)score)", span="310-310"];
m23_154 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="RecurringJobScheduler.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="309-309"];
m23_158 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="307-307"];
m23_88 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="190-190"];
m23_137 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="282-282"];
m23_138 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="RecurringJobScheduler.cs", label="Assert.Equal(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="284-284"];
m23_139 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="RecurringJobScheduler.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="285-285"];
m23_140 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="282-282"];
m23_0 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="42-42"];
m23_1 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", color=green, community=0, file="RecurringJobScheduler.cs", label="_state = new SucceededState { Reason = ''SomeReason'' }", prediction=65, span="44-44"];
m23_90 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="RecurringJobScheduler.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m23_91 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="RecurringJobScheduler.cs", label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="201-202"];
m23_92 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="RecurringJobScheduler.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _stateMocks[state].Object, allowedState)", span="203-203"];
m23_93 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="198-198"];
m23_39 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="89-89"];
m23_152 [cluster="Unk.False", file="RecurringJobScheduler.cs", label="Entry Unk.False", span=""];
m23_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var connection = context.Storage.GetConnection()", span="65-65"];
m23_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="66-66"];
m23_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="68-68"];
m23_162 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="317-317"];
m23_166 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="RecurringJobScheduler.cs", label="Assert.True(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="323-323"];
m23_167 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="RecurringJobScheduler.cs", label="Assert.True(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="324-324"];
m23_165 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="RecurringJobScheduler.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="321-321"];
m23_163 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="RecurringJobScheduler.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="319-319"];
m23_164 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="RecurringJobScheduler.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="320-320"];
m23_168 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="317-317"];
m23_64 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m23_66 [cluster="Unk.Parse", file="RecurringJobScheduler.cs", label="Entry Unk.Parse", span=""];
m23_67 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m23_31 [cluster="Unk.Returns", file="RecurringJobScheduler.cs", label="Entry Unk.Returns", span=""];
m23_89 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32"];
m23_78 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="RecurringJobScheduler.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", span="15-15"];
m23_202 [cluster="Unk.Unapply", file="RecurringJobScheduler.cs", label="Entry Unk.Unapply", span=""];
m23_102 [cluster="Unk.ForEach", file="RecurringJobScheduler.cs", label="Entry Unk.ForEach", span=""];
m23_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                : TimeZoneInfo.Utc", span="117-119"];
m23_169 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="328-328"];
m23_170 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="RecurringJobScheduler.cs", label="Assert.False(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="330-330"];
m23_171 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="328-328"];
m23_77 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobScheduler.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m23_136 [cluster="HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m23_228 [cluster="Unk.ContainsKey", file="RecurringJobScheduler.cs", label="Entry Unk.ContainsKey", span=""];
m23_212 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="401-401"];
m23_217 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="RecurringJobScheduler.cs", label=_stateProperties, span="410-410"];
m23_216 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="RecurringJobScheduler.cs", label="Assert.NotNull(history)", span="408-408"];
m23_219 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="RecurringJobScheduler.cs", label="Assert.Equal(property.Value, history[property.Key])", span="413-413"];
m23_218 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="RecurringJobScheduler.cs", label="Assert.True(history.ContainsKey(property.Key))", span="412-412"];
m23_215 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="RecurringJobScheduler.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="407-407"];
m23_213 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="RecurringJobScheduler.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="403-404"];
m23_214 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="RecurringJobScheduler.cs", label="Assert.NotNull(entry)", span="405-405"];
m23_220 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="401-401"];
m23_16 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="67-67"];
m23_121 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="249-249"];
m23_122 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="RecurringJobScheduler.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="251-256"];
m23_123 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="RecurringJobScheduler.cs", label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.True(\r\n                    ttl.Seconds == -1,\r\n                    String.Format(''TTL for the '{0}' key is '{1}''', x, ttl));\r\n            })", span="258-264"];
m23_124 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="249-249"];
m23_41 [cluster="Unk.GetData", file="RecurringJobScheduler.cs", label="Entry Unk.GetData", span=""];
m23_42 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="96-96"];
m23_43 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="RecurringJobScheduler.cs", label="Given(String.Format(''a '{0}' state'', state))", span="98-98"];
m23_120 [cluster="Unk.PopItemFromList", file="RecurringJobScheduler.cs", label="Entry Unk.PopItemFromList", span=""];
m23_72 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m23_68 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobScheduler.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m23_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_instantFactory = instantFactory", span="57-57"];
m23_29 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Delay(context.CancellationToken)", span="95-95"];
m23_221 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m23_35 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.StateName", span="88-88"];
m23_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var stateMachineFactory = _stateMachineFactory(context.Storage)", span="69-69"];
m23_94 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="207-207"];
m23_95 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="RecurringJobScheduler.cs", label="Assert.Equal(name, _state.StateName)", span="209-209"];
m23_96 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="207-207"];
m23_73 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="173-173"];
m23_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="146-146"];
m23_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="148-150"];
m23_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label=TimeZoneNotFoundException, span="152-152"];
m23_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''throttler'');", span="53-53"];
m23_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_stateMachineFactory = stateMachineFactory", span="55-55"];
m23_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_creationProcess = creationProcess", span="56-56"];
m23_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Throttle(context.CancellationToken)", span="63-63"];
m23_195 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="386-386"];
m23_196 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="RecurringJobScheduler.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId)))", span="388-389"];
m23_197 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="386-386"];
m23_222 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="418-418"];
m23_224 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="RecurringJobScheduler.cs", label=_stateProperties, span="423-423"];
m23_223 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="RecurringJobScheduler.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="420-421"];
m23_226 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="RecurringJobScheduler.cs", label="Assert.Equal(property.Value, stateEntry[property.Key])", span="426-426"];
m23_225 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="RecurringJobScheduler.cs", label="Assert.True(stateEntry.ContainsKey(property.Key))", span="425-425"];
m23_227 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="418-418"];
m23_17 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="RecurringJobScheduler.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27"];
m23_24 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="RecurringJobScheduler.cs", label="var mock = new Mock<JobState>()", span="87-87"];
m23_26 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="RecurringJobScheduler.cs", label="mock.Setup(x => x.GetData(It.IsAny<JobMethod>()))\r\n                .Returns(new Dictionary<string, string>())", span="89-90"];
m23_23 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="85-85"];
m23_28 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAState(string)", span="85-85"];
m23_25 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="RecurringJobScheduler.cs", label="mock.Setup(x => x.StateName).Returns(state)", span="88-88"];
m23_27 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="RecurringJobScheduler.cs", label="_stateMocks.Add(state, mock)", span="92-92"];
m23_30 [cluster="Unk.Setup", file="RecurringJobScheduler.cs", label="Entry Unk.Setup", span=""];
m23_229 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="431-431"];
m23_230 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="Assert.Equal(table.RowCount, _stateChangingResults.Count)", span="433-433"];
m23_233 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="Assert.Equal(table.Rows[i][''Filter''], _stateChangingResults[i])", span="437-437"];
m23_231 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="var i = 0", span="435-435"];
m23_232 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="i < table.RowCount", span="435-435"];
m23_234 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="i++", span="435-435"];
m23_235 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="431-431"];
m23_203 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="389-389"];
m23_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="123-125"];
m23_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="131-131"];
m23_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="136-139"];
m23_199 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="389-389"];
m23_209 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="396-396"];
m23_37 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m23_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="instant.GetNextInstants(lastExecutionTime).Any()", span="129-129"];
m23_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var changedFields = new Dictionary<string, string>()", span="127-127"];
m23_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="String.IsNullOrEmpty(jobId)", span="134-134"];
m23_54 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var jobId = CreateBackgroundJob(connection, job, state, stateMachineFactory)", span="132-132"];
m23_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="143-143"];
m23_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="142-142"];
m23_201 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="389-389"];
m23_200 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId))", span="389-389"];
m23_211 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="396-396"];
m23_210 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.Unapply(It.IsAny<StateApplyingContext>())", span="396-396"];
m23_103 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="222-229"];
m23_125 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="258-264"];
m23_34 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m23_38 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", span="104-104"];
m23_105 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl))", span="225-228"];
m23_127 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Assert.True(\r\n                    ttl.Seconds == -1,\r\n                    String.Format(''TTL for the '{0}' key is '{1}''', x, ttl))", span="261-263"];
m23_106 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="222-229"];
m23_104 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="224-224"];
m23_128 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="258-264"];
m23_126 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="260-260"];
m23_36 [cluster="string.Format(string, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_204 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="y.JobId == JobSteps.DefaultJobId", span="389-389"];
m23_205 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="389-389"];
m23_175 [cluster="Unk.SetContainsItem", file="RecurringJobScheduler.cs", label="Entry Unk.SetContainsItem", span=""];
m23_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="154-156"];
m23_249 [cluster="Unk.ToList", file="RecurringJobScheduler.cs", label="Entry Unk.ToList", span=""];
m23_108 [cluster="Unk.Format", file="RecurringJobScheduler.cs", label="Entry Unk.Format", span=""];
m23_149 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="301-301"];
m23_150 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="RecurringJobScheduler.cs", label="Assert.False(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="303-303"];
m23_151 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="301-301"];
m23_33 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m23_80 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m23_81 [cluster="string.Format(string, object, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m23_82 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159"];
m23_107 [cluster="Unk.GetTimeToLive", file="RecurringJobScheduler.cs", label="Entry Unk.GetTimeToLive", span=""];
m23_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", span="104-104"];
m23_69 [cluster="Unk._instantFactory", file="RecurringJobScheduler.cs", label="Entry Unk._instantFactory", span=""];
m23_70 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m23_71 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m23_74 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="RecurringJobScheduler.cs", label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="175-176"];
m23_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="110-110"];
m23_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var job = serializedJob.Deserialize()", span="111-111"];
m23_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var cron = recurringJob[''Cron'']", span="112-112"];
m23_206 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="393-393"];
m23_207 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="RecurringJobScheduler.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.IsAny<StateApplyingContext>()),\r\n                Times.Never)", span="395-397"];
m23_208 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="393-393"];
m23_97 [cluster="Unk.Equal", file="RecurringJobScheduler.cs", label="Entry Unk.Equal", span=""];
m23_193 [cluster="Unk.RemoveStartFromList", file="RecurringJobScheduler.cs", label="Entry Unk.RemoveStartFromList", span=""];
m23_176 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="340-340"];
m23_178 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="RecurringJobScheduler.cs", label="Assert.Equal(state, job[''State''])", span="343-343"];
m23_177 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="RecurringJobScheduler.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="342-342"];
m23_179 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="340-340"];
m23_2 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="42-42"];
m23_3 [cluster="HangFire.States.SucceededState.SucceededState()", file="RecurringJobScheduler.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="23-23"];
m23_5 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="RecurringJobScheduler.cs", label="_failedException = new InvalidOperationException(''Hello'')", span="50-50"];
m23_7 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="48-48"];
m23_9 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="RecurringJobScheduler.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m23_14 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="67-67"];
m23_4 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="48-48"];
m23_6 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", color=green, community=0, file="RecurringJobScheduler.cs", label="_state = new FailedState(_failedException)\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", prediction=66, span="51-54"];
m23_8 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobScheduler.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m23_15 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="RecurringJobScheduler.cs", label="_state = new ScheduledState(DateTime.UtcNow.AddDays(1))\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="69-72"];
m23_110 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="233-233"];
m23_111 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="RecurringJobScheduler.cs", label="Assert.Equal(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="235-237"];
m23_112 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="233-233"];
m23_236 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="442-442"];
m23_237 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="RecurringJobScheduler.cs", label="Assert.Equal(0, _stateChangingResults.Count)", span="444-444"];
m23_238 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="442-442"];
m23_194 [cluster="Unk.NotNull", file="RecurringJobScheduler.cs", label="Entry Unk.NotNull", span=""];
m23_172 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="334-334"];
m23_173 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="RecurringJobScheduler.cs", label="Assert.True(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="336-336"];
m23_174 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="334-334"];
m23_146 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="295-295"];
m23_147 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="RecurringJobScheduler.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="297-297"];
m23_148 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="295-295"];
m23_141 [cluster="Unk.GetSortedSetCount", file="RecurringJobScheduler.cs", label="Entry Unk.GetSortedSetCount", span=""];
m23_198 [cluster="Unk.Verify", file="RecurringJobScheduler.cs", label="Entry Unk.Verify", span=""];
m23_115 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="241-241"];
m23_116 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="RecurringJobScheduler.cs", label="Assert.Equal(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="243-243"];
m23_117 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="RecurringJobScheduler.cs", label="Assert.Equal(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="244-245"];
m23_118 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="241-241"];
m23_143 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="289-289"];
m23_144 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="RecurringJobScheduler.cs", label="Assert.Equal(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="291-291"];
m23_145 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="289-289"];
m23_184 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="347-347"];
m23_182 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="349-350"];
m23_181 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="347-347"];
m23_183 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="TableAssert.ContainsFollowingItems(table, stateEntry)", span="351-351"];
m23_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobScheduler.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m23_142 [cluster="Unk.SortedSetContainsItem", file="RecurringJobScheduler.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m23_83 [cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var context = new CreateContext(connection, job, state)", span="162-162"];
m23_161 [cluster="System.DateTime.AddSeconds(double)", file="RecurringJobScheduler.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m23_113 [cluster="string.Format(string, params object[])", file="RecurringJobScheduler.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m23_98 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="213-213"];
m23_99 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="RecurringJobScheduler.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="215-220"];
m23_100 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="RecurringJobScheduler.cs", label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl));\r\n                })", span="222-229"];
m23_101 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="213-213"];
m23_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var instant = _instantFactory(cronSchedule, timeZone)", span="121-121"];
m23_180 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobScheduler.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m23_75 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="RecurringJobScheduler.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="177-177"];
m23_84 [cluster="Unk.When", file="RecurringJobScheduler.cs", label="Entry Unk.When", span=""];
m23_85 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="190-190"];
m23_86 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="RecurringJobScheduler.cs", label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="192-193"];
m23_192 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="355-355"];
m23_191 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="TableAssert.ContainsFollowingItems(table, history)", span="364-364"];
m23_187 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="357-358"];
m23_186 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="355-355"];
m23_189 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="361-361"];
m23_190 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="Assert.NotNull(history)", span="362-362"];
m23_188 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="Assert.NotNull(entry)", span="359-359"];
m23_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="RecurringJobScheduler.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="113-113"];
m23_160 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="RecurringJobScheduler.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m23_40 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m23_159 [cluster="Unk.GetItemScoreInSortedSet", file="RecurringJobScheduler.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m23_119 [cluster="Unk.GetListCount", file="RecurringJobScheduler.cs", label="Entry Unk.GetListCount", span=""];
m23_76 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="173-173"];
m23_129 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="268-268"];
m23_130 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="RecurringJobScheduler.cs", label="Assert.Equal(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="270-270"];
m23_131 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="268-268"];
m23_132 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="274-274"];
m23_133 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="TableAssert.ContainsFollowingItems(\r\n                table,\r\n                _state.GetData(_defaultData))", span="276-278"];
m23_134 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="274-274"];
m23_247 [cluster="Unk.GetAllItemsFromList", file="RecurringJobScheduler.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m23_87 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="36-36"];
m23_248 [cluster="Unk.Select", file="RecurringJobScheduler.cs", label="Entry Unk.Select", span=""];
m23_114 [cluster="Unk.GetValue", file="RecurringJobScheduler.cs", label="Entry Unk.GetValue", span=""];
m23_109 [cluster="Unk.True", file="RecurringJobScheduler.cs", label="Entry Unk.True", span=""];
m23_185 [cluster="Unk.ContainsFollowingItems", file="RecurringJobScheduler.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m23_250 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="461-461"];
m23_251 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="Assert.Equal(table.RowCount, _stateAppliedResults.Count)", span="463-463"];
m23_254 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="Assert.Equal(table.Rows[i][''Method''], _stateAppliedResults[i])", span="467-467"];
m23_252 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="var i = 0", span="465-465"];
m23_253 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="i < table.RowCount", span="465-465"];
m23_255 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="i++", span="465-465"];
m23_256 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="RecurringJobScheduler.cs", label="Exit HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="461-461"];
m23_257 [file="RecurringJobScheduler.cs", label="HangFire.Tests.States.StateSteps", span=""];
m24_14 [cluster="ConsoleSample.Program.Main()", file="RecurringJobSchedulerFacts.cs", label="var workCount = int.Parse(command.Substring(4))", span="52-52"];
m24_92 [cluster="System.Console.WriteLine(string, object)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m24_55 [cluster="ConsoleSample.Program.Main()", file="RecurringJobSchedulerFacts.cs", label="var jobId = BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="119-119"];
m24_58 [cluster="ConsoleSample.Program.Main()", file="RecurringJobSchedulerFacts.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="124-124"];
m24_75 [cluster="string.StartsWith(string, System.StringComparison)", file="RecurringJobSchedulerFacts.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m24_76 [cluster="string.Substring(int)", file="RecurringJobSchedulerFacts.cs", label="Entry string.Substring(int)", span="0-0"];
m24_77 [cluster="int.Parse(string)", file="RecurringJobSchedulerFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m24_17 [cluster="ConsoleSample.Program.Main()", file="RecurringJobSchedulerFacts.cs", label="var number = i", span="55-55"];
m24_0 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m24_9 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="_options = options", span="51-51"];
m24_23 [cluster="HangFire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="_options.WriteToLog(Logger)", span="66-66"];
m24_29 [cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", prediction=67, span="59-59"];
m24_31 [cluster="HangFire.BackgroundJobServer.Stop()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.Stop()", prediction=68, span="71-71"];
m24_33 [cluster="HangFire.BackgroundJobServer.Stop()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.BackgroundJobServer.Stop()", prediction=69, span="71-71"];
m24_38 [cluster="HangFire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.BackgroundJobServer.Dispose()", span="76-76"];
m24_34 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m24_35 [cluster="HangFire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.Dispose()", span="76-76"];
m24_45 [cluster="HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", prediction=69, span="31-31"];
m24_44 [cluster="HangFire.Server.ServerContext.ServerContext()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18"];
m24_46 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m24_47 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m24_27 [cluster="Unk.InfoFormat", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Entry Unk.InfoFormat", prediction=71, span=""];
m24_26 [cluster="Unk.Info", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Info", span=""];
m24_28 [cluster="HangFire.JobStorage.WriteOptionsToLog(ILog)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.JobStorage.WriteOptionsToLog(ILog)", span="68-68"];
m24_30 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m24_8 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''storage'');", span="49-49"];
m24_10 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="_storage = storage", span="52-52"];
m24_11 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="54-54"];
m24_13 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m24_24 [cluster="HangFire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="_serverRunner.Start()", span="68-68"];
m24_39 [cluster="System.IDisposable.Dispose()", file="RecurringJobSchedulerFacts.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m24_48 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m24_49 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="104-104"];
m24_51 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="RecurringJobSchedulerFacts.cs", label="componentRunners.AddRange(GetCommonComponentRunners())", span="108-108"];
m24_52 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="RecurringJobSchedulerFacts.cs", label="componentRunners.AddRange(GetStorageComponentRunners())", span="109-109"];
m24_59 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m24_20 [cluster="HangFire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="Logger.Info(''Starting HangFire Server...'')", span="62-62"];
m24_22 [cluster="HangFire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="_storage.WriteOptionsToLog(Logger)", span="65-65"];
m24_36 [cluster="HangFire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs", label="_serverRunner.Dispose()", span="78-78"];
m24_7 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="storage == null", span="49-49"];
m24_25 [cluster="HangFire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="60-60"];
m24_64 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="RecurringJobSchedulerFacts.cs", label="yield return new ServerComponentRunner(new ServerWatchdog(_storage));", span="127-127"];
m24_61 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="RecurringJobSchedulerFacts.cs", label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", span="117-123"];
m24_63 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="RecurringJobSchedulerFacts.cs", label="yield return new ServerComponentRunner(new ServerHeartbeat(_storage, _serverId));", span="126-126"];
m24_65 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="RecurringJobSchedulerFacts.cs", label="yield return new ServerComponentRunner(\r\n                new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval));", span="129-130"];
m24_12 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="_serverRunner = GetServerRunner()", span="57-57"];
m24_15 [cluster="string.ToLowerInvariant()", file="RecurringJobSchedulerFacts.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m24_16 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m24_50 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="RecurringJobSchedulerFacts.cs", label="var componentRunners = new List<IServerComponentRunner>()", span="106-106"];
m24_53 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="RecurringJobSchedulerFacts.cs", label="return new ServerComponentRunnerCollection(componentRunners);", span="111-111"];
m24_54 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="104-104"];
m24_60 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="RecurringJobSchedulerFacts.cs", label="var stateMachineFactory = new StateMachineFactory(_storage)", span="116-116"];
m24_21 [cluster="HangFire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="63-63"];
m24_43 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.BackgroundJobServer.GetServerRunner()", span="82-82"];
m24_42 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="RecurringJobSchedulerFacts.cs", label="return new ServerComponentRunner(\r\n                server, \r\n                new ServerComponentRunnerOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="96-101"];
m24_6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''options'');", span="48-48"];
m24_62 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="RecurringJobSchedulerFacts.cs", label="yield return new ServerComponentRunner(new WorkerManager(sharedWorkerContext, _options.WorkerCount));", span="125-125"];
m24_19 [cluster="HangFire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="60-60"];
m24_57 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m24_18 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="82-82"];
m24_5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="options == null", span="48-48"];
m24_56 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="114-114"];
m24_4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m24_1 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m24_2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m24_3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m24_66 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="114-114"];
m24_67 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m24_109 [cluster="ConsoleSample.Services.Cancelable(int, HangFire.IJobCancellationToken)", file="RecurringJobSchedulerFacts.cs", label="Entry ConsoleSample.Services.Cancelable(int, HangFire.IJobCancellationToken)", span="45-45"];
m24_82 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new ServerComponentRunner(component)", span="138-138"];
m24_122 [cluster="ConsoleSample.Services.EmptyCritical()", file="RecurringJobSchedulerFacts.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="16-16"];
m24_78 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="78-78"];
m24_96 [cluster="ConsoleSample.Services.Error()", file="RecurringJobSchedulerFacts.cs", label="Entry ConsoleSample.Services.Error()", span="21-21"];
m24_69 [cluster="HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28"];
m24_81 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="138-138"];
m24_88 [cluster="ConsoleSample.Services.Random(int)", file="RecurringJobSchedulerFacts.cs", label="Entry ConsoleSample.Services.Random(int)", span="28-28"];
m24_83 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="138-138"];
m24_80 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
m24_101 [cluster="System.Guid.ToString()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Guid.ToString()", span="0-0"];
m24_72 [cluster="System.Console.ReadLine()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m24_71 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="29-29"];
m24_102 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="RecurringJobSchedulerFacts.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="64-64"];
m24_123 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="137-137"];
m24_89 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="73-73"];
m24_90 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine(''Hello, {0}!'', ''world'')", prediction=72, span="73-73"];
m24_91 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="73-73"];
m24_104 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Random(number)", span="105-105"];
m24_103 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="105-105"];
m24_107 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Cancelable(iterations, JobCancellationToken.Null)", span="111-111"];
m24_93 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="88-88"];
m24_105 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="105-105"];
m24_106 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="111-111"];
m24_108 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="111-111"];
m24_114 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="129-139"];
m24_116 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="133-133"];
m24_117 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="137-137"];
m24_95 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="88-88"];
m24_94 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Error()", span="88-88"];
m24_97 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="97-97"];
m24_86 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Random(number)", span="56-56"];
m24_110 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="119-119"];
m24_118 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="129-139"];
m24_115 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="i % 2 == 0", span="131-131"];
m24_85 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="56-56"];
m24_119 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="133-133"];
m24_99 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="97-97"];
m24_98 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="97-97"];
m24_87 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="56-56"];
m24_112 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="119-119"];
m24_111 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.EmptyDefault()", span="119-119"];
m24_121 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="133-133"];
m24_120 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.EmptyCritical()", span="133-133"];
m24_124 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.EmptyDefault()", span="137-137"];
m24_125 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="137-137"];
m24_73 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29"];
m24_74 [cluster="HangFire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="60-60"];
m24_79 [cluster="System.Console.WriteLine(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m24_84 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="RecurringJobSchedulerFacts.cs", label="HangFire.BackgroundJobServer", span=""];
m24_100 [cluster="System.Guid.NewGuid()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m24_70 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m24_68 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23"];
m24_113 [cluster="ConsoleSample.Services.EmptyDefault()", file="RecurringJobSchedulerFacts.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="11-11"];
m24_127 [file="RecurringJobSchedulerFacts.cs", label=number, span=""];
m24_128 [file="RecurringJobSchedulerFacts.cs", label=iterations, span=""];
m24_126 [file="RecurringJobSchedulerFacts.cs", label=number, span=""];
m25_34 [cluster="string.Format(string, object)", file="SchedulePoller.cs", label="Entry string.Format(string, object)", span="0-0"];
m25_24 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="73-73"];
m25_25 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="76-77"];
m25_29 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="85-88"];
m25_30 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="stateMachine.ChangeState(jobId, enqueuedState, new[] { ScheduledState.StateName })", span="90-90"];
m25_31 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="return true;", span="92-92"];
m25_32 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="69-69"];
m25_26 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="String.IsNullOrEmpty(jobId)", span="79-79"];
m25_27 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="return false;", span="81-81"];
m25_28 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="var stateMachine = _stateMachineFactory(context.Storage).Create(connection)", span="84-84"];
m25_33 [cluster="Hangfire.JobStorage.GetConnection()", file="SchedulePoller.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m25_8 [cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", file="SchedulePoller.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.Dispose()", span="27-27"];
m25_81 [cluster="System.Threading.Thread.Join()", file="SchedulePoller.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m25_55 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="SchedulePoller.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10"];
m25_20 [cluster="System.TimeSpan.FromMinutes(double)", file="SchedulePoller.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m25_21 [cluster="Unk.AcquireLock", file="SchedulePoller.cs", label="Entry Unk.AcquireLock", span=""];
m25_22 [cluster="Unk.GetAllItemsFromList", file="SchedulePoller.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m25_39 [cluster="Unk.TimedOutByFetchedTime", file="SchedulePoller.cs", label="Entry Unk.TimedOutByFetchedTime", span=""];
m25_0 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32"];
m25_1 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", color=green, community=0, file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", prediction=73, span="32-32"];
m25_2 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", span="37-37"];
m25_3 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="SchedulePoller.cs", label="stateMachineFactory == null", span="39-39"];
m25_57 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="SchedulePoller.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m25_38 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SchedulePoller.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m25_17 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="SchedulePoller.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="32-32"];
m25_23 [cluster="Unk.RequeueJobIfTimedOut", file="SchedulePoller.cs", label="Entry Unk.RequeueJobIfTimedOut", span=""];
m25_5 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="SchedulePoller.cs", label="_stateMachineFactory = stateMachineFactory", span="41-41"];
m25_37 [cluster="System.Func<T, TResult>.Invoke(T)", file="SchedulePoller.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m25_62 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="SchedulePoller.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="130-130"];
m25_63 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="SchedulePoller.cs", label="!String.IsNullOrEmpty(fetchedTimestamp)", span="135-135"];
m25_65 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="SchedulePoller.cs", label="return !String.IsNullOrEmpty(checkedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(checkedTimestamp) > CheckedTimeout);", span="140-141"];
m25_64 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="SchedulePoller.cs", label="return false;", span="137-137"];
m25_66 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="SchedulePoller.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="130-130"];
m25_10 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="!EnqueueNextScheduledJob(context)", span="47-47"];
m25_11 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="SchedulePoller.cs", label="_enqueuedCount != 0", prediction=73, span="49-49"];
m25_12 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="SchedulePoller.cs", label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", prediction=73, span="51-51"];
m25_15 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="_enqueuedCount++", span="60-60"];
m25_13 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="SchedulePoller.cs", label="_enqueuedCount = 0", prediction=76, span="52-52"];
m25_16 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="45-45"];
m25_52 [cluster="Unk.TryToGetQueue", file="SchedulePoller.cs", label="Entry Unk.TryToGetQueue", span=""];
m25_80 [cluster="System.Threading.EventWaitHandle.Set()", file="SchedulePoller.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m25_9 [cluster="Unk.Dispose", file="SchedulePoller.cs", label="Entry Unk.Dispose", span=""];
m25_54 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="SchedulePoller.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m25_4 [cluster="Unk.GetClient", file="SchedulePoller.cs", label="Entry Unk.GetClient", span=""];
m25_7 [cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", file="SchedulePoller.cs", label="_redis.Dispose()", span="29-29"];
m25_42 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="SchedulePoller.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m25_56 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SchedulePoller.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m25_40 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SchedulePoller.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m25_67 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="144-144"];
m25_69 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="FindAndRequeueTimedOutJobs()", span="150-150"];
m25_70 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="_stopped.WaitOne(SleepTimeout)", span="152-152"];
m25_72 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="_logger.Fatal(\r\n                    ''Unexpected exception caught in the timed out jobs thread. Timed out jobs will not be re-queued.'',\r\n                    ex)", span="160-162"];
m25_68 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label=true, span="148-148"];
m25_71 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label=Exception, span="158-158"];
m25_73 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="144-144"];
m25_53 [cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m25_36 [cluster="Unk.IsNullOrEmpty", file="SchedulePoller.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m25_35 [cluster="Unk.GetValuesFromHash", file="SchedulePoller.cs", label="Entry Unk.GetValuesFromHash", span=""];
m25_41 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="SchedulePoller.cs", label="Hangfire.Server.SchedulePoller", span=""];
m25_43 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="SchedulePoller.cs", label="var jobType = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Type'')", span="103-105"];
m25_49 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="SchedulePoller.cs", label="_stateMachine.ChangeState(jobId, state, EnqueuedState.Name, ProcessingState.Name)", span="121-121"];
m25_48 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="SchedulePoller.cs", label="state = new FailedState(\r\n                    ''Failed to re-queue the job.'',\r\n                    new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType)))", span="116-118"];
m25_44 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="SchedulePoller.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="107-107"];
m25_47 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="SchedulePoller.cs", label="state = new EnqueuedState(''Requeued due to time out'', queue)", span="112-112"];
m25_46 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="SchedulePoller.cs", label="!String.IsNullOrEmpty(queue)", span="110-110"];
m25_45 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="SchedulePoller.cs", label="JobState state", span="108-108"];
m25_50 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="SchedulePoller.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="101-101"];
m25_18 [cluster="Unk.GetAllItemsFromSet", file="SchedulePoller.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m25_75 [cluster="Unk.Fatal", file="SchedulePoller.cs", label="Entry Unk.Fatal", span=""];
m25_58 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="SchedulePoller.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="124-124"];
m25_59 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="SchedulePoller.cs", label="return !String.IsNullOrEmpty(fetchedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(fetchedTimestamp) > JobTimeout);", span="126-127"];
m25_60 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="SchedulePoller.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="124-124"];
m25_51 [cluster="Unk.GetValueFromHash", file="SchedulePoller.cs", label="Entry Unk.GetValueFromHash", span=""];
m25_19 [cluster="Unk.Format", file="SchedulePoller.cs", label="Entry Unk.Format", span=""];
m25_61 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="SchedulePoller.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="68-68"];
m25_76 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="166-166"];
m25_77 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="_stopped.Set()", span="168-168"];
m25_78 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="thread.Join()", span="169-169"];
m25_79 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="166-166"];
m25_82 [file="SchedulePoller.cs", label="HangFire.Server.DequeuedJobsWatcher", span=""];
m26_9 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs", label="return ''Server Heartbeat'';", span="36-36"];
m26_11 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerHeartbeat.cs", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="81-81"];
m26_12 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerHeartbeat.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="82-82"];
m26_13 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerHeartbeat.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="83-83"];
m26_14 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerHeartbeat.cs", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="84-84"];
m26_10 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs", label="Exit Hangfire.Server.ServerHeartbeat.ToString()", span="34-34"];
m26_15 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerHeartbeat.cs", label="Exit Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="78-78"];
m26_5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerHeartbeat.cs", label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="38-38"];
m26_7 [cluster="System.Math.Min(int, int)", file="ServerHeartbeat.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m26_16 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="ServerHeartbeat.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="217-217"];
m26_8 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs", label="Entry Hangfire.Server.ServerHeartbeat.ToString()", span="34-34"];
m26_0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerHeartbeat.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m26_1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="ServerHeartbeat.cs", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", prediction=77, span="34-34"];
m26_2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerHeartbeat.cs", label="ServerName = Environment.MachineName", span="35-35"];
m26_4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerHeartbeat.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="37-37"];
m26_18 [cluster="Unk.Join", file="ServerHeartbeat.cs", label="Entry Unk.Join", span=""];
m26_6 [cluster="Hangfire.Storage.IStorageConnection.Heartbeat(string)", file="ServerHeartbeat.cs", label="Entry Hangfire.Storage.IStorageConnection.Heartbeat(string)", span="49-49"];
m26_19 [cluster="lambda expression", file="ServerHeartbeat.cs", label="Entry lambda expression", span="82-82"];
m26_20 [cluster="lambda expression", file="ServerHeartbeat.cs", label="''''' + x + '''''", span="82-82"];
m26_21 [cluster="lambda expression", file="ServerHeartbeat.cs", label="Exit lambda expression", span="82-82"];
m26_17 [cluster="Unk.Select", file="ServerHeartbeat.cs", label="Entry Unk.Select", span=""];
m26_22 [file="ServerHeartbeat.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m27_5 [cluster="Unk.Equal", file="ServerWatchdog.cs", label="Entry Unk.Equal", span=""];
m27_13 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdog.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="19-19"];
m27_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="ServerWatchdog.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="59-59"];
m27_32 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ServerWatchdog.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", span="48-48"];
m27_33 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ServerWatchdog.cs", label="var storage = CreateStorage()", span="50-50"];
m27_34 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ServerWatchdog.cs", label="var components = storage.GetComponents()", span="52-52"];
m27_35 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ServerWatchdog.cs", label="var componentTypes = components.Select(x => x.GetType()).ToArray()", span="54-54"];
m27_36 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ServerWatchdog.cs", label="Assert.Contains(typeof(ExpirationManager), componentTypes)", span="55-55"];
m27_37 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ServerWatchdog.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", span="48-48"];
m27_14 [cluster="lambda expression", file="ServerWatchdog.cs", label="Entry lambda expression", span="22-22"];
m27_45 [cluster="object.GetType()", file="ServerWatchdog.cs", label="Entry object.GetType()", span="0-0"];
m27_15 [cluster="lambda expression", file="ServerWatchdog.cs", label="new SqlServerStorage(''hello'', null)", span="22-22"];
m27_4 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="27-27"];
m27_23 [cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="ServerWatchdog.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", span="58-58"];
m27_46 [cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="ServerWatchdog.cs", label="return new SqlServerStorage(\r\n                ConnectionUtils.GetConnectionString(),\r\n                new SqlServerStorageOptions { PrepareSchemaIfNecessary = false });", span="60-62"];
m27_47 [cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="ServerWatchdog.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", span="58-58"];
m27_40 [cluster="Unk.ToArray", file="ServerWatchdog.cs", label="Entry Unk.ToArray", span=""];
m27_25 [cluster="Unk.NotNull", file="ServerWatchdog.cs", label="Entry Unk.NotNull", span=""];
m27_24 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ServerWatchdog.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="54-54"];
m27_17 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerWatchdog.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m27_42 [cluster="lambda expression", file="ServerWatchdog.cs", label="Entry lambda expression", span="54-54"];
m27_6 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="Entry Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="33-33"];
m27_7 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="var connection = context.Storage.GetConnection()", span="35-35"];
m27_8 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="var serversRemoved = connection.RemoveTimedOutServers(_options.ServerTimeout)", span="37-37"];
m27_16 [cluster="Hangfire.Logging.ILog.Info(string)", file="ServerWatchdog.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m27_43 [cluster="lambda expression", file="ServerWatchdog.cs", label="x.GetType()", span="54-54"];
m27_44 [cluster="lambda expression", file="ServerWatchdog.cs", label="Exit lambda expression", span="54-54"];
m27_41 [cluster="Unk.Contains", file="ServerWatchdog.cs", label="Entry Unk.Contains", span=""];
m27_26 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", span="38-38"];
m27_27 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="var storage = CreateStorage()", span="40-40"];
m27_28 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="var connection = storage.GetConnection()", span="41-41"];
m27_29 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="Assert.NotNull(connection)", span="43-43"];
m27_30 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", span="38-38"];
m27_39 [cluster="Unk.Select", file="ServerWatchdog.cs", label="Entry Unk.Select", span=""];
m27_38 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="ServerWatchdog.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="64-64"];
m27_10 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="Logger.Info(String.Format(\r\n                        ''{0} servers were removed due to timeout'', \r\n                        serversRemoved))", span="40-42"];
m27_12 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="33-33"];
m27_9 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="serversRemoved != 0", span="38-38"];
m27_0 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="27-27"];
m27_1 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", color=green, community=0, file="ServerWatchdog.cs", label="options == null", prediction=78, span="29-29"];
m27_2 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", color=green, community=0, file="ServerWatchdog.cs", label="throw new ArgumentNullException(''options'');", prediction=79, span="29-29"];
m27_3 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", color=green, community=0, file="ServerWatchdog.cs", label="_options = options", prediction=80, span="30-30"];
m27_48 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="ServerWatchdog.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m27_49 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ServerWatchdog.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m27_18 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="28-28"];
m27_19 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="var storage = CreateStorage()", span="30-30"];
m27_20 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="var api = storage.GetMonitoringApi()", span="31-31"];
m27_21 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="Hangfire.Server.ServerWatchdog", span=""];
m27_22 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ServerWatchdog.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="28-28"];
m28_10 [cluster="HangFire.Storage.IMonitoringApi.GetStatistics()", file="Worker.cs", label="Entry HangFire.Storage.IMonitoringApi.GetStatistics()", span="27-27"];
m28_12 [cluster="CamelCasePropertyNamesContractResolver.cstr", file="Worker.cs", label="Entry CamelCasePropertyNamesContractResolver.cstr", span=""];
m28_9 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="Worker.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m28_13 [cluster="Unk.SerializeObject", file="Worker.cs", label="Entry Unk.SerializeObject", span=""];
m28_0 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Worker.cs", label="Entry HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m28_2 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Worker.cs", label="var response = monitoring.GetStatistics()", span="28-28"];
m28_3 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Worker.cs", label="var settings = new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                }", span="31-34"];
m28_4 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Worker.cs", label="var serialized = JsonConvert.SerializeObject(response, settings)", span="35-35"];
m28_5 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Worker.cs", label="Response.ContentType = ''application/json''", span="37-37"];
m28_7 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Worker.cs", label="Response.Write(serialized)", span="39-39"];
m28_6 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Worker.cs", label="Response.ContentEncoding = Encoding.UTF8", span="38-38"];
m28_8 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Worker.cs", label="Exit HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m28_11 [cluster="JsonSerializerSettings.cstr", file="Worker.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m28_14 [cluster="Unk.Write", file="Worker.cs", label="Entry Unk.Write", span=""];
m28_15 [file="Worker.cs", label="HangFire.Web.JsonStats", span=""];
m29_59 [cluster="System.Threading.Thread.Join()", file="WorkerContext.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m29_38 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="WorkerContext.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10"];
m29_20 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="WorkerContext.cs", label="Entry HangFire.Server.SchedulePoller.Dispose()", span="47-47"];
m29_21 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="WorkerContext.cs", label="_redis.Dispose()", span="49-49"];
m29_22 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="WorkerContext.cs", label="Exit HangFire.Server.SchedulePoller.Dispose()", span="47-47"];
m29_42 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="WorkerContext.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="73-73"];
m29_43 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="WorkerContext.cs", label=true, span="77-77"];
m29_44 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="WorkerContext.cs", label="var wasEnqueued = EnqueueNextScheduledJob()", span="79-79"];
m29_47 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="WorkerContext.cs", label=Exception, span="90-90"];
m29_45 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="WorkerContext.cs", label="wasEnqueued && !_cts.IsCancellationRequested", span="81-81"];
m29_46 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="WorkerContext.cs", label="_stopped.WaitOne(_pollInterval)", span="84-84"];
m29_48 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="WorkerContext.cs", label="_logger.Fatal(\r\n                    ''Scheduled jobs will not be added to their queues by this server instance: ''\r\n                    + ''unexpected exception caught in the SchedulePoller thread.'',\r\n                    ex)", span="92-95"];
m29_49 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="WorkerContext.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="73-73"];
m29_41 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="WorkerContext.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m29_19 [cluster="Unk.EnqueueScheduledJob", file="WorkerContext.cs", label="Entry Unk.EnqueueScheduledJob", span=""];
m29_33 [cluster="string.Format(string, object)", file="WorkerContext.cs", label="Entry string.Format(string, object)", span="0-0"];
m29_24 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="WorkerContext.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="52-52"];
m29_25 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="WorkerContext.cs", label="var jobType = _redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="54-54"];
m29_31 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="WorkerContext.cs", label="_stateMachine.ChangeState(jobId, state, ScheduledState.Name)", span="69-69"];
m29_26 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="WorkerContext.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="55-55"];
m29_30 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="WorkerContext.cs", label="state = new FailedState(''Could not enqueue the schedule job.'',\r\n                    new InvalidOperationException(String.Format(''Could not find the type '{0}'.'', jobType)))", span="65-66"];
m29_27 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="WorkerContext.cs", label="JobState state", span="57-57"];
m29_28 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="WorkerContext.cs", label="!String.IsNullOrEmpty(queue)", span="59-59"];
m29_29 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="WorkerContext.cs", label="state = new EnqueuedState(''Enqueued by schedule poller.'', queue)", span="61-61"];
m29_32 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="WorkerContext.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="52-52"];
m29_6 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="WorkerContext.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="31-31"];
m29_0 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="WorkerContext.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21"];
m29_4 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="WorkerContext.cs", label="Exit HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21"];
m29_57 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="WorkerContext.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m29_15 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="WorkerContext.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="52-52"];
m29_35 [cluster="Unk.TryToGetQueue", file="WorkerContext.cs", label="Entry Unk.TryToGetQueue", span=""];
m29_58 [cluster="System.Threading.EventWaitHandle.Set()", file="WorkerContext.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m29_37 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="WorkerContext.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m29_39 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="WorkerContext.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m29_5 [cluster="Unk.GetClient", file="WorkerContext.cs", label="Entry Unk.GetClient", span=""];
m29_36 [cluster="string.IsNullOrEmpty(string)", file="WorkerContext.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m29_23 [cluster="Unk.Dispose", file="WorkerContext.cs", label="Entry Unk.Dispose", span=""];
m29_52 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="WorkerContext.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="99-99"];
m29_53 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="WorkerContext.cs", label="_cts.Cancel()", span="101-101"];
m29_55 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="WorkerContext.cs", label="thread.Join()", span="103-103"];
m29_54 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="WorkerContext.cs", label="_stopped.Set()", span="102-102"];
m29_56 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="WorkerContext.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="99-99"];
m29_51 [cluster="Unk.Fatal", file="WorkerContext.cs", label="Entry Unk.Fatal", span=""];
m29_17 [cluster="Unk.FirstOrDefault", file="WorkerContext.cs", label="Entry Unk.FirstOrDefault", span=""];
m29_34 [cluster="Unk.GetValueFromHash", file="WorkerContext.cs", label="Entry Unk.GetValueFromHash", span=""];
m29_50 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="WorkerContext.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m29_18 [cluster="Unk.IsNullOrEmpty", file="WorkerContext.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m29_40 [cluster="Unk.Format", file="WorkerContext.cs", label="Entry Unk.Format", span=""];
m29_16 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="WorkerContext.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m29_7 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="WorkerContext.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="29-29"];
m29_8 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="WorkerContext.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="31-31"];
m29_9 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="WorkerContext.cs", label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="33-36"];
m29_10 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="WorkerContext.cs", label="String.IsNullOrEmpty(jobId)", span="38-38"];
m29_12 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="WorkerContext.cs", label="EnqueueScheduledJob(jobId)", span="43-43"];
m29_11 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="WorkerContext.cs", label="return false;", span="40-40"];
m29_13 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="WorkerContext.cs", label="return true;", span="44-44"];
m29_14 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="WorkerContext.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="29-29"];
m29_60 [file="WorkerContext.cs", label="HangFire.Server.SchedulePoller", span=""];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m0_10 -> m0_13  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m0_10 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m0_10 -> m0_15  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m0_13 -> m0_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_23 -> m0_12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_23 -> m0_13  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_23 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_23 -> m0_15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m2_21 -> m2_23  [color=green, key=1, label=recurringJob, style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="Hangfire.Server.IScheduleInstantFactory", style=dashed];
m2_41 -> m2_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_34 -> m2_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m2_34 -> m2_49  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m2_34 -> m2_50  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m2_44 -> m2_49  [color=darkseagreen4, key=1, label=instant, style=dashed];
m2_44 -> m2_50  [color=darkseagreen4, key=1, label=instant, style=dashed];
m2_44 -> m2_46  [color=darkseagreen4, key=1, label=instant, style=dashed];
m2_15 -> m2_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label=connection, style=dashed];
m2_17 -> m2_23  [color=darkseagreen4, key=1, label=connection, style=dashed];
m2_20 -> m2_23  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m2_20 -> m2_25  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m2_65 -> m2_17  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m2_65 -> m2_23  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m2_65 -> m2_16  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m2_65 -> m2_26  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m2_65 -> m2_44  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m2_65 -> m2_48  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m2_94 -> m2_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_37  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_46  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_52  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_57  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_62  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_66  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_74  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_78  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_83  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_87  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_94 -> m2_92  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m3_4 -> m3_7  [color=darkseagreen4, key=1, label="System.Func<int, System.TimeSpan>", style=dashed];
m3_4 -> m3_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_23 -> m3_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m3_23 -> m3_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m3_24 -> m3_31  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_24 -> m3_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_24 -> m3_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_35 -> m3_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m3_33 -> m3_35  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m3_37 -> m3_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_36 -> m3_36  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m3_59 -> m3_21  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m3_59 -> m3_25  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m3_59 -> m3_26  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m3_59 -> m3_31  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m3_59 -> m3_34  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m3_59 -> m3_45  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m4_94 -> m4_33  [color=green, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
m4_94 -> m4_18  [color=darkseagreen4, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
m4_94 -> m4_19  [color=darkseagreen4, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
m4_71 -> m4_78  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>", style=dashed];
m4_50 -> m4_54  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m4_51 -> m4_55  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_51 -> m4_56  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_52 -> m4_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_52 -> m4_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_54 -> m4_57  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Server.PerformedContext>", style=dashed];
m4_180 -> m4_192  [color=darkseagreen4, key=1, label=stats, style=dashed];
m4_183 -> m4_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_183 -> m4_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_183 -> m4_204  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m4_184 -> m4_204  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_147 -> m4_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_207 -> m4_211  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m4_214 -> m4_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_214 -> m4_217  [color=darkseagreen4, key=1, label=keys, style=dashed];
m4_208 -> m4_211  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_208 -> m4_222  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_208 -> m4_224  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_209 -> m4_213  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_213 -> m4_213  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_216 -> m4_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_216 -> m4_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_216 -> m4_218  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_216 -> m4_219  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_217 -> m4_219  [color=darkseagreen4, key=1, label=key, style=dashed];
m4_220 -> m4_224  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_220 -> m4_226  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_221 -> m4_224  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_221 -> m4_225  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_225 -> m4_225  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_157 -> m4_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_157 -> m4_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_158 -> m4_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_49 -> m4_42  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_49 -> m4_51  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_59 -> m4_65  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformingContext", style=dashed];
m4_59 -> m4_69  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Server.PerformedContext>", style=dashed];
m4_59 -> m4_72  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformingContext", style=dashed];
m4_59 -> m4_79  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerFilter", style=dashed];
m4_72 -> m4_79  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m4_72 -> m4_84  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m4_73 -> m4_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_82 -> m4_270  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_105 -> m4_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_97 -> m4_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_97 -> m4_57  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m4_98 -> m4_57  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Server.PerformedContext>", style=dashed];
m4_95 -> m4_50  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m4_40 -> m4_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_99 -> m4_57  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerFilter", style=dashed];
m4_13 -> m4_18  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m4_13 -> m4_19  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m4_13 -> m4_23  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m4_18 -> m4_24  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m4_23 -> m4_25  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m4_88 -> m4_92  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_4 -> m4_7  [color=green, key=1, label="Hangfire.Common.IJobFilterProvider", style=dashed];
m4_38 -> m4_46  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m4_38 -> m4_57  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m4_87 -> m4_89  [color=darkseagreen4, key=1, label=servers, style=dashed];
m4_125 -> m4_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_244 -> m4_247  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m4_244 -> m4_248  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m4_251 -> m4_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_251 -> m4_254  [color=darkseagreen4, key=1, label=keys, style=dashed];
m4_245 -> m4_247  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m4_246 -> m4_248  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_246 -> m4_261  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_250 -> m4_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_250 -> m4_259  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m4_253 -> m4_273  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_253 -> m4_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_253 -> m4_255  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_253 -> m4_256  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_254 -> m4_256  [color=darkseagreen4, key=1, label=key, style=dashed];
m4_257 -> m4_261  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_257 -> m4_263  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_258 -> m4_261  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_258 -> m4_262  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_262 -> m4_262  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_113 -> m4_115  [color=darkseagreen4, key=1, label=queues, style=dashed];
m4_114 -> m4_117  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_30 -> m4_50  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m4_133 -> m4_135  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_134 -> m4_137  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_279 -> m4_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_33  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_46  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_80  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_84  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_97  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_145  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_149  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_279 -> m4_177  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_280 -> m4_204  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m4_281 -> m4_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_282 -> m4_270  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_26 -> m6_29  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m6_26 -> m6_30  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m6_26 -> m6_31  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m6_26 -> m6_32  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m6_26 -> m6_34  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m6_26 -> m6_35  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m6_26 -> m6_36  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m6_26 -> m6_37  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m6_26 -> m6_39  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m6_26 -> m6_40  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m6_26 -> m6_41  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m6_26 -> m6_42  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m6_28 -> m6_38  [color=darkseagreen4, key=1, label=filters, style=dashed];
m6_111 -> m6_113  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_46 -> m6_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_57 -> m6_27  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m6_57 -> m6_31  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m6_57 -> m6_36  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m6_80 -> m6_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_87 -> m6_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_87 -> m6_92  [color=darkseagreen4, key=1, label=Table, style=dashed];
m6_88 -> m6_90  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_64 -> m6_66  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m6_47 -> m6_50  [color=green, key=1, label=job, style=dashed];
m6_47 -> m6_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_19 -> m6_22  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m6_72 -> m6_74  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m6_115 -> m6_6  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_10  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_14  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_18  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_22  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_24  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_47  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_81  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_82  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_96  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_97  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_100  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_101  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_104  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_105  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_108  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_109  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_112  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m6_115 -> m6_113  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_14 -> m9_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>", style=dashed];
m9_40 -> m9_43  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m9_40 -> m9_45  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m9_40 -> m9_47  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m9_40 -> m9_49  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m9_40 -> m9_51  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m9_40 -> m9_53  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m9_4 -> m9_7  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m9_4 -> m9_16  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m9_7 -> m9_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_35 -> m9_38  [color=darkseagreen4, key=1, label=mvcFilter, style=dashed];
m9_16 -> m9_1  [color=green, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m9_16 -> m9_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m9_16 -> m9_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m9_16 -> m9_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m9_16 -> m9_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m9_16 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m9_22 -> m9_26  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m9_22 -> m9_28  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m9_23 -> m9_27  [color=darkseagreen4, key=1, label=filter, style=dashed];
m9_24 -> m9_26  [color=darkseagreen4, key=1, label=filterInstance, style=dashed];
m9_25 -> m9_28  [color=darkseagreen4, key=1, label=filterInstanceType, style=dashed];
m9_57 -> m9_7  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilterProviderCollection", style=dashed];
m9_58 -> m9_16  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m10_24 -> m10_29  [color=green, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m10_24 -> m10_30  [color=green, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m10_42 -> m10_45  [color=green, key=1, label=string, style=dashed];
m10_49 -> m10_53  [color=green, key=1, label=object, style=dashed];
m10_73 -> m10_9  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_29  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_30  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_45  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_53  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_59  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_63  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_64  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_67  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m10_73 -> m10_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m12_0 -> m12_4  [color=darkseagreen4, key=1, label="Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>", style=dashed];
m12_0 -> m12_5  [color=darkseagreen4, key=1, label="Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>", style=dashed];
m12_2 -> m12_4  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m13_0 -> m13_3  [color=darkseagreen4, key=1, label="System.Func<TSource, TSource, TResult>", style=dashed];
m13_0 -> m13_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m13_8 -> m13_10  [color=darkseagreen4, key=1, label="System.Func<TSource, TSource, TResult>", style=dashed];
m13_11 -> m13_15  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_11 -> m13_16  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_14 -> m13_16  [color=darkseagreen4, key=1, label=previous, style=dashed];
m15_18 -> m15_26  [color=green, key=1, label=queueName, style=dashed];
m15_12 -> m15_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_17 -> m15_21  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m15_16 -> m15_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_22 -> m15_26  [color=green, key=1, label=jobId, style=dashed];
m15_22 -> m15_25  [color=green, key=1, label=jobId, style=dashed];
m15_23 -> m15_26  [color=green, key=1, label=jobId, style=dashed];
m15_23 -> m15_25  [color=green, key=1, label=jobId, style=dashed];
m15_168 -> m15_180  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_169 -> m15_173  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m15_172 -> m15_175  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m15_172 -> m15_176  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m15_181 -> m15_181  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m15_170 -> m15_175  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m15_170 -> m15_197  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m15_170 -> m15_178  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m15_171 -> m15_180  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m15_175 -> m15_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_175 -> m15_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_179 -> m15_181  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m15_182 -> m15_182  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m15_182 -> m15_183  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m15_174 -> m15_197  [color=darkseagreen4, key=1, label=name, style=dashed];
m15_174 -> m15_192  [color=darkseagreen4, key=1, label=name, style=dashed];
m15_177 -> m15_182  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m15_177 -> m15_183  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m15_154 -> m15_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_151 -> m15_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_151 -> m15_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_151 -> m15_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_151 -> m15_154  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_152 -> m15_154  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_152 -> m15_155  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_153 -> m15_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_126 -> m15_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_126 -> m15_145  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_126 -> m15_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_126 -> m15_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_126 -> m15_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_126 -> m15_130  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m15_126 -> m15_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_127 -> m15_129  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_127 -> m15_132  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_127 -> m15_133  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_128 -> m15_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_129 -> m15_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_132 -> m15_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_131 -> m15_145  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m15_107 -> m15_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_104 -> m15_106  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_104 -> m15_107  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_104 -> m15_108  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_103 -> m15_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_103 -> m15_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_103 -> m15_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_103 -> m15_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_103 -> m15_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_103 -> m15_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_105 -> m15_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_106 -> m15_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_71 -> m15_77  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m15_71 -> m15_79  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m15_71 -> m15_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m15_40 -> m15_67  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_40 -> m15_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_49 -> m15_51  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_49 -> m15_52  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_50 -> m15_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_51 -> m15_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_41 -> m15_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m15_41 -> m15_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m15_41 -> m15_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m15_41 -> m15_51  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m15_41 -> m15_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m15_43 -> m15_63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m15_43 -> m15_48  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m15_43 -> m15_50  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m15_43 -> m15_45  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m15_43 -> m15_46  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m15_43 -> m15_47  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m15_42 -> m15_47  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m15_42 -> m15_44  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m15_42 -> m15_45  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m15_42 -> m15_46  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m15_203 -> m15_25  [color=green, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_203 -> m15_36  [color=green, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_203 -> m15_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_203 -> m15_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_203 -> m15_97  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_203 -> m15_100  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_203 -> m15_122  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_203 -> m15_149  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_203 -> m15_166  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_203 -> m15_181  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m15_204 -> m15_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m15_204 -> m15_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m15_206 -> m15_67  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_205 -> m15_63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m15_207 -> m15_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_207 -> m15_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_207 -> m15_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_208 -> m15_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_209 -> m15_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_209 -> m15_145  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_209 -> m15_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_210 -> m15_140  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m15_211 -> m15_145  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m15_212 -> m15_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_212 -> m15_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_213 -> m15_197  [color=darkseagreen4, key=1, label=name, style=dashed];
m15_213 -> m15_192  [color=darkseagreen4, key=1, label=name, style=dashed];
m15_214 -> m15_197  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m16_29 -> m16_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_22 -> m16_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_43 -> m16_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_14 -> m16_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_1 -> m16_3  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_36 -> m16_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_12 -> m17_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m17_12 -> m17_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m19_10 -> m19_12  [color=green, key=1, label="params string[]", style=dashed];
m19_3 -> m19_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_3 -> m19_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m22_40 -> m22_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m22_40 -> m22_24  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m22_42 -> m22_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_25 -> m22_27  [color=darkseagreen4, key=1, label=owinContext, style=dashed];
m22_49 -> m22_53  [color=darkseagreen4, key=1, label=object, style=dashed];
m22_73 -> m22_45  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_53  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_12  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_59  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_63  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m22_73 -> m22_67  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m23_239 -> m23_244  [color=darkseagreen4, key=1, label=Table, style=dashed];
m23_239 -> m23_243  [color=darkseagreen4, key=1, label=Table, style=dashed];
m23_241 -> m23_244  [color=darkseagreen4, key=1, label=history, style=dashed];
m23_242 -> m23_244  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_242 -> m23_245  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_245 -> m23_245  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_155 -> m23_157  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m23_90 -> m23_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_90 -> m23_14  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m23_90 -> m23_18  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m23_90 -> m23_26  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m23_90 -> m23_29  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m23_90 -> m23_85  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m23_19 -> m23_26  [color=darkseagreen4, key=1, label=connection, style=dashed];
m23_21 -> m23_23  [color=darkseagreen4, key=1, label=recurringJobIds, style=dashed];
m23_165 -> m23_167  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m23_64 -> m23_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_219 -> m23_219  [color=darkseagreen4, key=1, label=property, style=dashed];
m23_218 -> m23_218  [color=darkseagreen4, key=1, label=property, style=dashed];
m23_215 -> m23_219  [color=darkseagreen4, key=1, label=history, style=dashed];
m23_215 -> m23_218  [color=darkseagreen4, key=1, label=history, style=dashed];
m23_123 -> m23_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_22 -> m23_26  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m23_196 -> m23_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_223 -> m23_225  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m23_223 -> m23_226  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m23_226 -> m23_226  [color=darkseagreen4, key=1, label=property, style=dashed];
m23_225 -> m23_225  [color=darkseagreen4, key=1, label=property, style=dashed];
m23_17 -> m23_29  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m23_24 -> m23_26  [color=darkseagreen4, key=1, label=mock, style=dashed];
m23_24 -> m23_27  [color=darkseagreen4, key=1, label=mock, style=dashed];
m23_26 -> m23_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_23 -> m23_26  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m23_23 -> m23_28  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m23_23 -> m23_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_23 -> m23_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_25 -> m23_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_229 -> m23_233  [color=darkseagreen4, key=1, label=Table, style=dashed];
m23_229 -> m23_232  [color=darkseagreen4, key=1, label=Table, style=dashed];
m23_231 -> m23_233  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_231 -> m23_234  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_234 -> m23_234  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_50 -> m23_52  [color=darkseagreen4, key=1, label=lastExecutionTime, style=dashed];
m23_51 -> m23_57  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m23_51 -> m23_58  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m23_51 -> m23_59  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m23_51 -> m23_60  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m23_54 -> m23_58  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m23_200 -> m23_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_103 -> m23_105  [color=darkseagreen4, key=1, label="?", style=dashed];
m23_125 -> m23_127  [color=darkseagreen4, key=1, label="?", style=dashed];
m23_38 -> m23_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_38 -> m23_60  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m23_38 -> m23_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_45 -> m23_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_207 -> m23_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_176 -> m23_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_2 -> m23_7  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m23_2 -> m23_9  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m23_2 -> m23_14  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m23_181 -> m23_183  [color=darkseagreen4, key=1, label=Table, style=dashed];
m23_83 -> m23_85  [color=darkseagreen4, key=1, label=context, style=dashed];
m23_100 -> m23_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_49 -> m23_52  [color=darkseagreen4, key=1, label=instant, style=dashed];
m23_49 -> m23_56  [color=darkseagreen4, key=1, label=instant, style=dashed];
m23_49 -> m23_57  [color=darkseagreen4, key=1, label=instant, style=dashed];
m23_49 -> m23_59  [color=darkseagreen4, key=1, label=instant, style=dashed];
m23_75 -> m23_84  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m23_85 -> m23_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_186 -> m23_191  [color=darkseagreen4, key=1, label=Table, style=dashed];
m23_189 -> m23_191  [color=darkseagreen4, key=1, label=history, style=dashed];
m23_250 -> m23_254  [color=darkseagreen4, key=1, label=Table, style=dashed];
m23_250 -> m23_253  [color=darkseagreen4, key=1, label=Table, style=dashed];
m23_252 -> m23_254  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_252 -> m23_255  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_255 -> m23_255  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_257 -> m23_20  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_27  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_60  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_66  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_75  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_87  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_92  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_95  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_133  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_196  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_207  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_217  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_224  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_230  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_233  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_237  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_251  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m23_257 -> m23_254  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m24_14 -> m24_16  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m24_55 -> m24_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_76 -> m24_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_17 -> m24_86  [color=darkseagreen4, key=1, label=number, style=dashed];
m24_9 -> m24_33  [color=green, key=1, label=command, style=dashed];
m24_9 -> m24_45  [color=green, key=1, label=command, style=dashed];
m24_9 -> m24_13  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_23  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_24  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_38  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_39  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_44  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_48  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_49  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_51  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_52  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_58  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_9 -> m24_59  [color=darkseagreen4, key=1, label=command, style=dashed];
m24_33 -> m24_35  [color=green, key=1, label=workCount, style=dashed];
m24_45 -> m24_47  [color=green, key=1, label=seconds, style=dashed];
m24_46 -> m24_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m24_46 -> m24_104  [color=darkseagreen4, key=1, label=number, style=dashed];
m24_47 -> m24_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_27 -> m24_89  [color=green, key=1, label="lambda expression", style=dashed];
m24_28 -> m24_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_24 -> m24_26  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m24_49 -> m24_107  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m24_52 -> m24_54  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m24_36 -> m24_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_7 -> m24_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m24_25 -> m24_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_15 -> m24_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_50 -> m24_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_50 -> m24_52  [color=darkseagreen4, key=1, label=componentRunners, style=dashed];
m24_50 -> m24_53  [color=darkseagreen4, key=1, label=componentRunners, style=dashed];
m24_53 -> m24_57  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_60 -> m24_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_60 -> m24_65  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m24_43 -> m24_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_42 -> m24_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_19 -> m24_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_57 -> m24_57  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_18 -> m24_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_4 -> m24_7  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m24_2 -> m24_4  [color=darkseagreen4, key=1, label=sqlServerStorage, style=dashed];
m24_116 -> m24_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_117 -> m24_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_84 -> m24_21  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_22  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_23  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_24  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_36  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_51  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_52  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_62  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_63  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_64  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_65  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_84 -> m24_75  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m24_127 -> m24_104  [color=darkseagreen4, key=1, label=number, style=dashed];
m24_128 -> m24_107  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m24_126 -> m24_86  [color=darkseagreen4, key=1, label=number, style=dashed];
m25_24 -> m25_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_24 -> m25_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_25 -> m25_27  [color=darkseagreen4, key=1, label=flags, style=dashed];
m25_25 -> m25_30  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_26 -> m25_30  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m25_27 -> m25_30  [color=darkseagreen4, key=1, label="@checked", style=dashed];
m25_62 -> m25_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_12 -> m25_16  [color=green, key=1, label=queue, style=dashed];
m25_41 -> m25_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_41 -> m25_10  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m25_41 -> m25_11  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m25_41 -> m25_12  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m25_41 -> m25_15  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m25_44 -> m25_46  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_76 -> m25_78  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m25_82 -> m25_1  [color=green, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_11  [color=green, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_2  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_7  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_16  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_30  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_31  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_32  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_49  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_69  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_70  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_72  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m25_82 -> m25_77  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m26_9 -> m26_11  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m26_9 -> m26_12  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m26_9 -> m26_13  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m26_9 -> m26_14  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m26_12 -> m26_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_22 -> m26_11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m26_22 -> m26_12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m26_22 -> m26_13  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m26_22 -> m26_14  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m27_35 -> m27_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_8 -> m27_10  [color=darkseagreen4, key=1, label=serversRemoved, style=dashed];
m27_1 -> m27_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_4 -> m28_7  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m28_15 -> m28_7  [color=darkseagreen4, key=1, label="HangFire.Web.JsonStats", style=dashed];
m29_24 -> m29_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_26 -> m29_28  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_52 -> m29_55  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m29_9 -> m29_12  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m29_60 -> m29_12  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m29_60 -> m29_21  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m29_60 -> m29_31  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m29_60 -> m29_45  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m29_60 -> m29_46  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m29_60 -> m29_48  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m29_60 -> m29_53  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m29_60 -> m29_54  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
}
