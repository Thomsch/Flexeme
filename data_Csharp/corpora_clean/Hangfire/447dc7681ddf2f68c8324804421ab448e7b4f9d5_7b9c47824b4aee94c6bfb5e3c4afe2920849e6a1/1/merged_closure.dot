digraph  {
d1 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, label="transaction == null", prediction=0, span="31-31"];
d0 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
d2 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, label="throw new ArgumentNullException(''transaction'');", prediction=1, span="31-31"];
d3 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, label="_transaction = transaction", prediction=2, span="33-33"];
d176 [label="HangFire.Redis.RedisWriteOnlyTransaction", span=""];
d4 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
d5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d7 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", label="_transaction.Dispose()", span="38-38"];
d11 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", label="!_transaction.Commit()", span="43-43"];
d14 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", label="!_transaction.Replay()", span="52-52"];
d22 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66"];
d23 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70"];
d24 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74"];
d39 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="79-80"];
d40 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="81-82"];
d41 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="83-84"];
d54 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="89-92"];
d55 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="94-95"];
d60 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="105-107"];
d61 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="AddJobState(jobId, state)", span="109-109"];
d83 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="119-121"];
d92 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="126-127"];
d93 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="129-130"];
d103 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="135-135"];
d110 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="140-140"];
d111 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="141-141"];
d120 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="146-146"];
d127 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="151-151"];
d128 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="152-152"];
d137 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="157-158"];
d144 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="163-164"];
d150 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="169-170"];
d157 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="175-176"];
d163 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="181-182"];
d170 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="188-189"];
d6 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36"];
d8 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36"];
d9 [cluster="Unk.Dispose", label="Entry Unk.Dispose", span=""];
d10 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
d12 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", label="int replayCount = 1", span="49-49"];
d17 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
d18 [cluster="Unk.Commit", label="Entry Unk.Commit", span=""];
d13 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", label="int maxReplayCount = 3", span="50-50"];
d15 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", label="replayCount++ >= maxReplayCount", span="54-54"];
d19 [cluster="Unk.Replay", label="Entry Unk.Replay", span=""];
d21 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
d26 [cluster="Unk.QueueCommand", label="Entry Unk.QueueCommand", span=""];
d27 [cluster="lambda expression", label="Entry lambda expression", span="64-66"];
d32 [cluster="lambda expression", label="Entry lambda expression", span="68-70"];
d25 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
d35 [cluster="lambda expression", label="Entry lambda expression", span="72-74"];
d38 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
d43 [cluster="lambda expression", label="Entry lambda expression", span="79-80"];
d47 [cluster="lambda expression", label="Entry lambda expression", span="81-82"];
d42 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
d50 [cluster="lambda expression", label="Entry lambda expression", span="83-84"];
d53 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="87-87"];
d67 [cluster="lambda expression", label="Entry lambda expression", span="89-92"];
d56 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="97-97"];
d71 [cluster="lambda expression", label="Entry lambda expression", span="94-95"];
d58 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="state.Reason != null", span="100-100"];
d59 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="storedData.Add(''Reason'', state.Reason)", span="102-102"];
d75 [cluster="lambda expression", label="Entry lambda expression", span="105-107"];
d62 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="87-87"];
d66 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="112-112"];
d79 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="114-114"];
d82 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="117-117"];
d84 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="112-112"];
d86 [cluster="lambda expression", label="Entry lambda expression", span="119-121"];
d91 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124"];
d95 [cluster="lambda expression", label="Entry lambda expression", span="126-127"];
d94 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124"];
d99 [cluster="lambda expression", label="Entry lambda expression", span="129-130"];
d102 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133"];
d104 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133"];
d105 [cluster="lambda expression", label="Entry lambda expression", span="135-135"];
d109 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138"];
d113 [cluster="lambda expression", label="Entry lambda expression", span="140-140"];
d112 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138"];
d116 [cluster="lambda expression", label="Entry lambda expression", span="141-141"];
d119 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144"];
d121 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144"];
d122 [cluster="lambda expression", label="Entry lambda expression", span="146-146"];
d126 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149"];
d130 [cluster="lambda expression", label="Entry lambda expression", span="151-151"];
d129 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149"];
d133 [cluster="lambda expression", label="Entry lambda expression", span="152-152"];
d136 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
d138 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
d139 [cluster="lambda expression", label="Entry lambda expression", span="157-158"];
d143 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161"];
d145 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161"];
d146 [cluster="lambda expression", label="Entry lambda expression", span="163-164"];
d149 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167"];
d151 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167"];
d152 [cluster="lambda expression", label="Entry lambda expression", span="169-170"];
d156 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
d158 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
d159 [cluster="lambda expression", label="Entry lambda expression", span="175-176"];
d162 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179"];
d164 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179"];
d165 [cluster="lambda expression", label="Entry lambda expression", span="181-182"];
d169 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185"];
d171 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185"];
d172 [cluster="lambda expression", label="Entry lambda expression", span="188-189"];
d16 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", label="throw new RedisException(''Transaction commit was failed due to WATCH condition failure. Retry attempts exceeded.'');", span="56-56"];
d28 [cluster="lambda expression", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="64-66"];
d33 [cluster="lambda expression", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="68-70"];
d36 [cluster="lambda expression", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="72-74"];
d29 [cluster="lambda expression", label="Exit lambda expression", span="64-66"];
d34 [cluster="lambda expression", label="Exit lambda expression", span="68-70"];
d37 [cluster="lambda expression", label="Exit lambda expression", span="72-74"];
d44 [cluster="lambda expression", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="79-80"];
d48 [cluster="lambda expression", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="81-82"];
d51 [cluster="lambda expression", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="83-84"];
d45 [cluster="lambda expression", label="Exit lambda expression", span="79-80"];
d49 [cluster="lambda expression", label="Exit lambda expression", span="81-82"];
d52 [cluster="lambda expression", label="Exit lambda expression", span="83-84"];
d68 [cluster="lambda expression", label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="89-92"];
d72 [cluster="lambda expression", label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="94-95"];
d57 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", label="storedData.Add(''State'', state.Name)", span="98-98"];
d76 [cluster="lambda expression", label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="105-107"];
d69 [cluster="lambda expression", label="Exit lambda expression", span="89-92"];
d63 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
d64 [cluster="HangFire.States.IState.SerializeData()", label="Entry HangFire.States.IState.SerializeData()", span="27-27"];
d73 [cluster="lambda expression", label="Exit lambda expression", span="94-95"];
d65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
d77 [cluster="lambda expression", label="Exit lambda expression", span="105-107"];
d80 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", label="storedData.Add(''State'', state.Name)", span="115-115"];
d81 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", label="storedData.Add(''Reason'', state.Reason)", span="116-116"];
d87 [cluster="lambda expression", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="119-121"];
d85 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
d88 [cluster="lambda expression", label="Exit lambda expression", span="119-121"];
d96 [cluster="lambda expression", label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="126-127"];
d100 [cluster="lambda expression", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="129-130"];
d97 [cluster="lambda expression", label="Exit lambda expression", span="126-127"];
d101 [cluster="lambda expression", label="Exit lambda expression", span="129-130"];
d106 [cluster="lambda expression", label="x.IncrementValue(RedisStorage.Prefix + key)", span="135-135"];
d107 [cluster="lambda expression", label="Exit lambda expression", span="135-135"];
d114 [cluster="lambda expression", label="x.IncrementValue(RedisStorage.Prefix + key)", span="140-140"];
d117 [cluster="lambda expression", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="141-141"];
d115 [cluster="lambda expression", label="Exit lambda expression", span="140-140"];
d118 [cluster="lambda expression", label="Exit lambda expression", span="141-141"];
d123 [cluster="lambda expression", label="x.DecrementValue(RedisStorage.Prefix + key)", span="146-146"];
d124 [cluster="lambda expression", label="Exit lambda expression", span="146-146"];
d131 [cluster="lambda expression", label="x.DecrementValue(RedisStorage.Prefix + key)", span="151-151"];
d134 [cluster="lambda expression", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="152-152"];
d132 [cluster="lambda expression", label="Exit lambda expression", span="151-151"];
d135 [cluster="lambda expression", label="Exit lambda expression", span="152-152"];
d140 [cluster="lambda expression", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="157-158"];
d141 [cluster="lambda expression", label="Exit lambda expression", span="157-158"];
d147 [cluster="lambda expression", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="163-164"];
d148 [cluster="lambda expression", label="Exit lambda expression", span="163-164"];
d153 [cluster="lambda expression", label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="169-170"];
d154 [cluster="lambda expression", label="Exit lambda expression", span="169-170"];
d160 [cluster="lambda expression", label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="175-176"];
d161 [cluster="lambda expression", label="Exit lambda expression", span="175-176"];
d166 [cluster="lambda expression", label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="181-182"];
d167 [cluster="lambda expression", label="Exit lambda expression", span="181-182"];
d173 [cluster="lambda expression", label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="188-189"];
d174 [cluster="lambda expression", label="Exit lambda expression", span="188-189"];
d20 [cluster="RedisException.cstr", label="Entry RedisException.cstr", span=""];
d177 [label=string, span=""];
d178 [label="System.TimeSpan", span=""];
d30 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d31 [cluster="Unk.ExpireEntryIn", label="Entry Unk.ExpireEntryIn", span=""];
d179 [label=string, span=""];
d46 [cluster="Unk.Persist", label="Entry Unk.Persist", span=""];
d180 [label=string, span=""];
d181 [label="HangFire.States.IState", span=""];
d70 [cluster="Unk.SetEntryInHash", label="Entry Unk.SetEntryInHash", span=""];
d74 [cluster="Unk.RemoveEntry", label="Entry Unk.RemoveEntry", span=""];
d182 [label=storedData, span=""];
d78 [cluster="Unk.SetRangeInHash", label="Entry Unk.SetRangeInHash", span=""];
d183 [label=string, span=""];
d184 [label=storedData, span=""];
d89 [cluster="HangFire.Common.JobHelper.ToJson(object)", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
d90 [cluster="Unk.EnqueueItemOnList", label="Entry Unk.EnqueueItemOnList", span=""];
d185 [label=string, span=""];
d98 [cluster="Unk.AddItemToSet", label="Entry Unk.AddItemToSet", span=""];
d186 [label=string, span=""];
d187 [label=string, span=""];
d108 [cluster="Unk.IncrementValue", label="Entry Unk.IncrementValue", span=""];
d188 [label=string, span=""];
d189 [label="System.TimeSpan", span=""];
d190 [label=string, span=""];
d125 [cluster="Unk.DecrementValue", label="Entry Unk.DecrementValue", span=""];
d191 [label=string, span=""];
d192 [label="System.TimeSpan", span=""];
d193 [label=string, span=""];
d194 [label=string, span=""];
d142 [cluster="Unk.AddItemToSortedSet", label="Entry Unk.AddItemToSortedSet", span=""];
d195 [label=string, span=""];
d196 [label=string, span=""];
d197 [label=double, span=""];
d198 [label=string, span=""];
d199 [label=string, span=""];
d155 [cluster="Unk.RemoveItemFromSortedSet", label="Entry Unk.RemoveItemFromSortedSet", span=""];
d200 [label=string, span=""];
d201 [label=string, span=""];
d202 [label=string, span=""];
d203 [label=string, span=""];
d168 [cluster="Unk.RemoveItemFromList", label="Entry Unk.RemoveItemFromList", span=""];
d204 [label=string, span=""];
d205 [label=int, span=""];
d206 [label=int, span=""];
d175 [cluster="Unk.TrimList", label="Entry Unk.TrimList", span=""];
d176 -> d7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d14  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d24  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d39  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d40  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d41  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d54  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d55  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d60  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d61  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d83  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d92  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d93  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d110  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d111  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d120  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d127  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d128  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d137  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d144  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d150  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d157  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d163  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d176 -> d170  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
d22 -> d27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d23 -> d32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d24 -> d35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d39 -> d43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d40 -> d47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d41 -> d50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d54 -> d67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d55 -> d71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d60 -> d75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d83 -> d86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d92 -> d95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d93 -> d99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d103 -> d105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d110 -> d113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d111 -> d116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d120 -> d122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d127 -> d130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d128 -> d133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d137 -> d139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d144 -> d146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d150 -> d152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d157 -> d159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d163 -> d165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d170 -> d172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d12 -> d15  [color=darkseagreen4, key=1, label=replayCount, style=dashed];
d13 -> d15  [color=darkseagreen4, key=1, label=maxReplayCount, style=dashed];
d15 -> d15  [color=darkseagreen4, key=1, label=replayCount, style=dashed];
d21 -> d23  [color=darkseagreen4, key=1, label=string, style=dashed];
d21 -> d24  [color=darkseagreen4, key=1, label=string, style=dashed];
d21 -> d28  [color=darkseagreen4, key=1, label=string, style=dashed];
d21 -> d33  [color=darkseagreen4, key=1, label=string, style=dashed];
d21 -> d36  [color=darkseagreen4, key=1, label=string, style=dashed];
d38 -> d40  [color=darkseagreen4, key=1, label=string, style=dashed];
d38 -> d41  [color=darkseagreen4, key=1, label=string, style=dashed];
d38 -> d44  [color=darkseagreen4, key=1, label=string, style=dashed];
d38 -> d48  [color=darkseagreen4, key=1, label=string, style=dashed];
d38 -> d51  [color=darkseagreen4, key=1, label=string, style=dashed];
d53 -> d55  [color=darkseagreen4, key=1, label=string, style=dashed];
d53 -> d60  [color=darkseagreen4, key=1, label=string, style=dashed];
d53 -> d61  [color=darkseagreen4, key=1, label=string, style=dashed];
d53 -> d68  [color=darkseagreen4, key=1, label=string, style=dashed];
d53 -> d72  [color=darkseagreen4, key=1, label=string, style=dashed];
d53 -> d57  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
d53 -> d58  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
d53 -> d59  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
d53 -> d76  [color=darkseagreen4, key=1, label=string, style=dashed];
d56 -> d60  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d56 -> d59  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d56 -> d76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d66 -> d83  [color=darkseagreen4, key=1, label=string, style=dashed];
d66 -> d80  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
d66 -> d81  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
d66 -> d87  [color=darkseagreen4, key=1, label=string, style=dashed];
d79 -> d83  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d79 -> d81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d79 -> d82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d79 -> d87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d91 -> d93  [color=darkseagreen4, key=1, label=string, style=dashed];
d91 -> d96  [color=darkseagreen4, key=1, label=string, style=dashed];
d91 -> d100  [color=darkseagreen4, key=1, label=string, style=dashed];
d102 -> d106  [color=darkseagreen4, key=1, label=string, style=dashed];
d109 -> d111  [color=darkseagreen4, key=1, label=string, style=dashed];
d109 -> d114  [color=darkseagreen4, key=1, label=string, style=dashed];
d109 -> d117  [color=darkseagreen4, key=1, label=string, style=dashed];
d119 -> d123  [color=darkseagreen4, key=1, label=string, style=dashed];
d126 -> d128  [color=darkseagreen4, key=1, label=string, style=dashed];
d126 -> d131  [color=darkseagreen4, key=1, label=string, style=dashed];
d126 -> d134  [color=darkseagreen4, key=1, label=string, style=dashed];
d136 -> d140  [color=darkseagreen4, key=1, label=string, style=dashed];
d143 -> d147  [color=darkseagreen4, key=1, label=string, style=dashed];
d149 -> d153  [color=darkseagreen4, key=1, label=string, style=dashed];
d156 -> d160  [color=darkseagreen4, key=1, label=string, style=dashed];
d162 -> d166  [color=darkseagreen4, key=1, label=string, style=dashed];
d169 -> d173  [color=darkseagreen4, key=1, label=string, style=dashed];
d177 -> d28  [color=darkseagreen4, key=1, label=string, style=dashed];
d177 -> d33  [color=darkseagreen4, key=1, label=string, style=dashed];
d177 -> d36  [color=darkseagreen4, key=1, label=string, style=dashed];
d178 -> d28  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d178 -> d33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d178 -> d36  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d179 -> d44  [color=darkseagreen4, key=1, label=string, style=dashed];
d179 -> d48  [color=darkseagreen4, key=1, label=string, style=dashed];
d179 -> d51  [color=darkseagreen4, key=1, label=string, style=dashed];
d180 -> d68  [color=darkseagreen4, key=1, label=string, style=dashed];
d180 -> d72  [color=darkseagreen4, key=1, label=string, style=dashed];
d180 -> d76  [color=darkseagreen4, key=1, label=string, style=dashed];
d181 -> d68  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
d182 -> d76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d183 -> d87  [color=darkseagreen4, key=1, label=string, style=dashed];
d184 -> d87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d185 -> d96  [color=darkseagreen4, key=1, label=string, style=dashed];
d185 -> d100  [color=darkseagreen4, key=1, label=string, style=dashed];
d186 -> d100  [color=darkseagreen4, key=1, label=string, style=dashed];
d187 -> d106  [color=darkseagreen4, key=1, label=string, style=dashed];
d188 -> d114  [color=darkseagreen4, key=1, label=string, style=dashed];
d188 -> d117  [color=darkseagreen4, key=1, label=string, style=dashed];
d189 -> d117  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d190 -> d123  [color=darkseagreen4, key=1, label=string, style=dashed];
d191 -> d131  [color=darkseagreen4, key=1, label=string, style=dashed];
d191 -> d134  [color=darkseagreen4, key=1, label=string, style=dashed];
d192 -> d134  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d193 -> d140  [color=darkseagreen4, key=1, label=string, style=dashed];
d194 -> d140  [color=darkseagreen4, key=1, label=string, style=dashed];
d195 -> d147  [color=darkseagreen4, key=1, label=string, style=dashed];
d196 -> d147  [color=darkseagreen4, key=1, label=string, style=dashed];
d197 -> d147  [color=darkseagreen4, key=1, label=double, style=dashed];
d198 -> d153  [color=darkseagreen4, key=1, label=string, style=dashed];
d199 -> d153  [color=darkseagreen4, key=1, label=string, style=dashed];
d200 -> d160  [color=darkseagreen4, key=1, label=string, style=dashed];
d201 -> d160  [color=darkseagreen4, key=1, label=string, style=dashed];
d202 -> d166  [color=darkseagreen4, key=1, label=string, style=dashed];
d203 -> d166  [color=darkseagreen4, key=1, label=string, style=dashed];
d204 -> d173  [color=darkseagreen4, key=1, label=string, style=dashed];
d205 -> d173  [color=darkseagreen4, key=1, label=int, style=dashed];
d206 -> d173  [color=darkseagreen4, key=1, label=int, style=dashed];
}
