digraph  {
d10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", color=green, community=0, label="10: _connection.Dispose()", span="46-46"];
d144 [label="HangFire.SqlServer.SqlServerConnection", span=""];
d9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44"];
d11 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44"];
d12 [cluster="Unk.Dispose", label="Entry Unk.Dispose", span=""];
d14 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", color=green, community=0, label="29: return new SqlServerWriteOnlyTransaction(_connection);", span="51-51"];
d13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49"];
d15 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49"];
d16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
d5 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", label="_connection = connection", span="40-40"];
d6 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", label="_options = options", span="41-41"];
d18 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="56-58"];
d32 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = _options.JobInvisibilityTimeOut.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="84-87"];
d35 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="93-93"];
d56 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129"];
d63 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149"];
d76 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163"];
d95 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202"];
d102 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213"];
d109 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="221-222"];
d116 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233"];
d125 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="250-256"];
d131 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="263-265"];
d136 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="272-274"];
d141 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="284-286"];
d0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
d3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", label="options == null", span="38-38"];
d7 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
d17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54"];
d19 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54"];
d20 [cluster="SqlServerDistributedLock.cstr", label="Entry SqlServerDistributedLock.cstr", span=""];
d21 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
d31 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="cancellationToken.ThrowIfCancellationRequested()", span="82-82"];
d28 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="68-73"];
d29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="77-77"];
d30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="var currentQueryIndex = 0", span="78-78"];
d33 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="idAndQueue == null", span="89-89"];
d43 [cluster="System.TimeSpan.Negate()", label="Entry System.TimeSpan.Negate()", span="0-0"];
d44 [cluster="Unk.Query", label="Entry Unk.Query", span=""];
d45 [cluster="Unk.SingleOrDefault", label="Entry Unk.SingleOrDefault", span=""];
d38 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="idAndQueue == null", span="99-99"];
d39 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="return new ProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="101-103"];
d34 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="currentQueryIndex == fetchConditions.Length - 1", span="91-91"];
d36 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="cancellationToken.ThrowIfCancellationRequested()", span="94-94"];
d46 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
d49 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106"];
d55 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="var invocationData = InvocationData.Serialize(job)", span="119-119"];
d54 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117"];
d57 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="parameters.Count > 0", span="131-131"];
d67 [cluster="HangFire.Common.JobHelper.ToJson(object)", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
d68 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
d69 [cluster="Unk.>", label="Entry Unk.>", span=""];
d70 [cluster="Unk.Single", label="Entry Unk.Single", span=""];
d48 [cluster="Unk.ToString", label="Entry Unk.ToString", span=""];
d61 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142"];
d64 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="return jobId;", span="152-152"];
d58 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="var parameterArray = new object[parameters.Count]", span="133-133"];
d62 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147"];
d71 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
d72 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155"];
d75 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160"];
d77 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="jobData == null", span="165-165"];
d79 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168"];
d80 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="invocationData.Arguments = jobData.Arguments", span="169-169"];
d86 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188"];
d90 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191"];
d93 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", label="name == null", span="194-194"];
d96 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191"];
d97 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205"];
d100 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", label="name == null", span="208-208"];
d103 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205"];
d104 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216"];
d107 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", label="queue == null", span="219-219"];
d110 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216"];
d111 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225"];
d114 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="toScore < fromScore", span="228-228"];
d117 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225"];
d119 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236"];
d124 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246"];
d126 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236"];
d128 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259"];
d129 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", label="serverId == null", span="261-261"];
d132 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259"];
d133 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268"];
d134 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", label="serverId == null", span="270-270"];
d137 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268"];
d139 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", label="timeOut.Duration() != timeOut", span="279-279"];
d142 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277"];
d1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", label="connection == null", span="37-37"];
d4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", label="throw new ArgumentNullException(''options'');", span="38-38"];
d2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", label="throw new ArgumentNullException(''connection'');", span="37-37"];
d40 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
d23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="queues == null", span="63-63"];
d25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="queues.Length == 0", span="64-64"];
d42 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
d27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="dynamic idAndQueue", span="66-66"];
d37 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="98-98"];
d47 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22"];
d65 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106"];
d50 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="job == null", span="111-111"];
d52 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="parameters == null", span="112-112"];
d60 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label=parameters, span="135-135"];
d66 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
d59 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="int parameterIndex = 0", span="134-134"];
d87 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155"];
d73 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="id == null", span="157-157"];
d78 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="return null;", span="165-165"];
d83 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="job = invocationData.Deserialize()", span="176-176"];
d81 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="Job job = null", span="171-171"];
d85 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="loadException = ex", span="180-180"];
d89 [cluster="HangFire.Storage.JobData.JobData()", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
d91 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", label="id == null", span="193-193"];
d94 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", label="throw new ArgumentNullException(''name'');", span="194-194"];
d92 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", label="throw new ArgumentNullException(''id'');", span="193-193"];
d98 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", label="id == null", span="207-207"];
d101 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", label="throw new ArgumentNullException(''name'');", span="208-208"];
d99 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", label="throw new ArgumentNullException(''id'');", span="207-207"];
d105 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", label="id == null", span="218-218"];
d108 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", label="throw new ArgumentNullException(''queue'');", span="219-219"];
d106 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", label="throw new ArgumentNullException(''id'');", span="218-218"];
d112 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="key == null", span="227-227"];
d115 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228"];
d113 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="throw new ArgumentNullException(''key'');", span="227-227"];
d120 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="serverId == null", span="238-238"];
d122 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="context == null", span="239-239"];
d127 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
d121 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="throw new ArgumentNullException(''serverId'');", span="238-238"];
d123 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="throw new ArgumentNullException(''context'');", span="239-239"];
d130 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", label="throw new ArgumentNullException(''serverId'');", span="261-261"];
d135 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", label="throw new ArgumentNullException(''serverId'');", span="270-270"];
d138 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277"];
d140 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="281-281"];
d143 [cluster="System.TimeSpan.Duration()", label="Entry System.TimeSpan.Duration()", span="0-0"];
d8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="throw new ArgumentNullException(''queues'');", span="63-63"];
d26 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="64-64"];
d51 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="throw new ArgumentNullException(''job'');", span="111-111"];
d53 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="throw new ArgumentNullException(''parameters'');", span="112-112"];
d74 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="throw new ArgumentNullException(''id'');", span="157-157"];
d82 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label="JobLoadException loadException = null", span="172-172"];
d84 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", label=JobLoadException, span="178-178"];
d88 [cluster="HangFire.Storage.InvocationData.Deserialize()", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
d118 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
d41 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m2_29 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m2_36 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_28 [cluster="System.Collections.Generic.List<T>.List()", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_6 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="13: var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="35-35"];
m2_39 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m2_35 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m2_34 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m2_33 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_7 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="13: hash == null", span="37-37"];
m2_31 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m2_37 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m2_38 [cluster="string.IsNullOrWhiteSpace(string)", file="StorageConnectionExtensions.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m2_8 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="result.Add(new RecurringJobDto { Id = id, Removed = true })", span="39-39"];
m2_0 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="25-25"];
m2_1 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="13: connection == null", span="27-27"];
m2_2 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="13: throw new ArgumentNullException(''connection'');", span="27-27"];
m2_3 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="13: var result = new List<RecurringJobDto>()", span="29-29"];
m2_4 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="13: var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="31-31"];
m2_5 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="13: ids", span="33-33"];
m2_9 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="var dto = new RecurringJobDto { Id = id }", span="43-43"];
m2_10 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.Cron = hash[''Cron'']", span="44-44"];
m2_11 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="48-48"];
m2_12 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.Job = invocationData.Deserialize()", span="49-49"];
m2_15 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''NextExecution'')", span="56-56"];
m2_16 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.NextExecution = JobHelper.DeserializeDateTime(hash[''NextExecution''])", span="58-58"];
m2_17 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''LastJobId'') && !string.IsNullOrWhiteSpace(hash[''LastJobId''])", span="61-61"];
m2_18 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.LastJobId = hash[''LastJobId'']", span="63-63"];
m2_22 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''LastExecution'')", span="72-72"];
m2_23 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.LastExecution = JobHelper.DeserializeDateTime(hash[''LastExecution''])", span="74-74"];
m2_24 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="result.Add(dto)", span="77-77"];
m2_25 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="return result;", span="80-80"];
m2_19 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="var stateData = connection.GetStateData(dto.LastJobId)", span="65-65"];
m2_14 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.LoadException = ex", span="53-53"];
m2_21 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.LastJobState = stateData.Name", span="68-68"];
m2_20 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="stateData != null", span="66-66"];
m2_13 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label=JobLoadException, span="51-51"];
m2_26 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="Exit Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="25-25"];
m2_32 [cluster="Hangfire.Storage.RecurringJobDto.RecurringJobDto()", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.RecurringJobDto.RecurringJobDto()", span="21-21"];
m2_30 [cluster="string.Format(string, object)", file="StorageConnectionExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_3 [cluster="MvcSample.HangFireConfig.Start()", file="StorageConnectionExtensionsFacts.cs", label="JobStorage.Current = storage", span="31-31"];
m3_4 [cluster="MvcSample.HangFireConfig.Start()", color=green, community=0, file="StorageConnectionExtensionsFacts.cs", label="25: _server = new AspNetBackgroundJobServer()", span="46-46"];
m3_5 [cluster="MvcSample.HangFireConfig.Start()", file="StorageConnectionExtensionsFacts.cs", label="Exit MvcSample.HangFireConfig.Start()", span="17-17"];
m3_143 [cluster="int.ToString(System.IFormatProvider)", file="StorageConnectionExtensionsFacts.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m3_12 [cluster="HangFire.BackgroundJobServer.Stop()", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="71-71"];
m3_22 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="68-71"];
m3_23 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="75-76"];
m3_25 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="96-99"];
m3_21 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="queueIndex == 0", span="66-66"];
m3_19 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="63-63"];
m3_20 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="64-64"];
m3_24 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="jobId == null", span="79-79"];
m3_26 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="return new ProcessingJob(jobId, queueName);", span="105-105"];
m3_17 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="queueIndex = (queueIndex + 1) % queues.Length", span="60-60"];
m3_18 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="queueName = queues[queueIndex]", span="61-61"];
m3_15 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="var queueIndex = 0", span="54-54"];
m3_16 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="58-58"];
m3_14 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="string queueName", span="53-53"];
m3_13 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="string jobId", span="52-52"];
m3_27 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="50-50"];
m3_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StorageConnectionExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_201 [cluster="Unk.FromNullableStringTimestamp", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m3_65 [cluster="Unk.SetRangeInHash", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m3_38 [cluster="System.TimeSpan.FromMinutes(double)", file="StorageConnectionExtensionsFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_91 [cluster="Unk.GetAllEntriesFromHash", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m3_8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="StorageConnectionExtensionsFacts.cs", label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="47-47"];
m3_200 [cluster="Unk.FromStringTimestamp", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.FromStringTimestamp", span=""];
m3_168 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="293-293"];
m3_169 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="295-295"];
m3_172 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var pipeline = Redis.CreatePipeline()", span="300-300"];
m3_181 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="RemoveServer(Redis, heartbeat.Key)", span="328-328"];
m3_170 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="296-296"];
m3_173 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label=serverNames, span="302-302"];
m3_171 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var utcNow = DateTime.UtcNow", span="298-298"];
m3_175 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="306-314"];
m3_176 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="pipeline.Flush()", span="317-317"];
m3_180 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="utcNow > maxTime.Add(timeOut)", span="326-326"];
m3_179 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="323-324"];
m3_182 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="removedServerCount++", span="329-329"];
m3_178 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label=heartbeats, span="321-321"];
m3_174 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var name = serverName", span="304-304"];
m3_177 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var removedServerCount = 0", span="320-320"];
m3_183 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="return removedServerCount;", span="333-333"];
m3_184 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="293-293"];
m3_11 [cluster="MvcSample.HangFireConfig.Stop()", file="StorageConnectionExtensionsFacts.cs", label="Exit MvcSample.HangFireConfig.Stop()", span="50-50"];
m3_33 [cluster="Unk.SetEntryInHash", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m3_138 [cluster="Unk.AddItemToSet", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m3_117 [cluster="Unk.RemoveEntryFromHash", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.RemoveEntryFromHash", span=""];
m3_30 [cluster="Unk.BlockingPopAndPushItemBetweenLists", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
m3_165 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="285-285"];
m3_166 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="StorageConnectionExtensionsFacts.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="287-290"];
m3_167 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="285-285"];
m3_164 [cluster="Unk.RemoveEntry", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.RemoveEntry", span=""];
m3_154 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="277-279"];
m3_151 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="269-269"];
m3_152 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs", label="var transaction = redis.CreateTransaction()", span="271-271"];
m3_153 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="273-275"];
m3_155 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs", label="transaction.Commit()", span="281-281"];
m3_156 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="269-269"];
m3_34 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22"];
m3_7 [cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", span="28-28"];
m3_9 [cluster="MvcSample.HangFireConfig.Stop()", file="StorageConnectionExtensionsFacts.cs", label="Entry MvcSample.HangFireConfig.Stop()", span="50-50"];
m3_99 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="203-203"];
m3_100 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="StorageConnectionExtensionsFacts.cs", label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="205-207"];
m3_101 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="203-203"];
m3_69 [cluster="Unk.ExpireEntryIn", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.ExpireEntryIn", span=""];
m3_93 [cluster="InvocationData.cstr", file="StorageConnectionExtensionsFacts.cs", label="Entry InvocationData.cstr", span=""];
m3_10 [cluster="RedisWriteOnlyTransaction.cstr", file="StorageConnectionExtensionsFacts.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m3_187 [cluster="Unk.Flush", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.Flush", span=""];
m3_56 [cluster="System.Guid.ToString()", file="StorageConnectionExtensionsFacts.cs", label="Entry System.Guid.ToString()", span="0-0"];
m3_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="StorageConnectionExtensionsFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m3_202 [cluster="Unk.Add", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.Add", span=""];
m3_190 [cluster="System.DateTime.Add(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m3_126 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="237-237"];
m3_127 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs", label="var transaction = Redis.CreateTransaction()", span="239-239"];
m3_128 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="241-242"];
m3_129 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="244-250"];
m3_132 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="255-257"];
m3_133 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs", label="transaction.Commit()", span="260-260"];
m3_130 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs", label="context.Queues", span="252-252"];
m3_131 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs", label="var queue1 = queue", span="254-254"];
m3_134 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="237-237"];
m3_142 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StorageConnectionExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_199 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="StorageConnectionExtensionsFacts.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m3_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="StorageConnectionExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m3_147 [cluster="Unk.AddItemToList", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.AddItemToList", span=""];
m3_107 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked''))", span="222-224"];
m3_104 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs", label="var transaction = Redis.CreateTransaction()", span="212-212"];
m3_103 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="210-210"];
m3_105 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1))", span="214-217"];
m3_106 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched''))", span="219-221"];
m3_108 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs", label="transaction.Commit()", span="226-226"];
m3_109 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="210-210"];
m3_6 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="33-33"];
m3_188 [cluster="System.DateTime.DateTime(long)", file="StorageConnectionExtensionsFacts.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m3_160 [cluster="Unk.RemoveItemFromSet", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m3_148 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="264-264"];
m3_149 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="StorageConnectionExtensionsFacts.cs", label="RemoveServer(Redis, serverId)", span="266-266"];
m3_150 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="264-264"];
m3_189 [cluster="System.Math.Max(long, long)", file="StorageConnectionExtensionsFacts.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m3_70 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
m3_71 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="151-152"];
m3_72 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="storedData.Count == 0", span="154-154"];
m3_77 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="storedData.ContainsKey(''Type'')", span="160-160"];
m3_78 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="type = storedData[''Type'']", span="162-162"];
m3_79 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="storedData.ContainsKey(''Method'')", span="164-164"];
m3_80 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="method = storedData[''Method'']", span="166-166"];
m3_81 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="storedData.ContainsKey(''ParameterTypes'')", span="168-168"];
m3_82 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="parameterTypes = storedData[''ParameterTypes'']", span="170-170"];
m3_85 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="var invocationData = new InvocationData(type, method, parameterTypes, storedData[''Arguments''])", span="176-176"];
m3_89 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                LoadException = loadException\r\n            };", span="187-192"];
m3_73 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="return null;", span="154-154"];
m3_74 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="string type = null", span="156-156"];
m3_76 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="string parameterTypes = null", span="158-158"];
m3_83 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="Job job = null", span="173-173"];
m3_75 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="string method = null", span="157-157"];
m3_84 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="JobLoadException loadException = null", span="174-174"];
m3_86 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="job = invocationData.Deserialize()", span="180-180"];
m3_88 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="loadException = ex", span="184-184"];
m3_87 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label=JobLoadException, span="182-182"];
m3_90 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
m3_57 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m3_157 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="273-275"];
m3_67 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="138-140"];
m3_63 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="134-136"];
m3_111 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1)", span="214-217"];
m3_115 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched'')", span="219-221"];
m3_119 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked'')", span="222-224"];
m3_140 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="244-250"];
m3_145 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="255-257"];
m3_162 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="277-279"];
m3_62 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="134-136"];
m3_66 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="138-140"];
m3_110 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="214-217"];
m3_114 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="219-221"];
m3_118 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="222-224"];
m3_136 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="241-242"];
m3_135 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="241-242"];
m3_139 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="244-250"];
m3_144 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="255-257"];
m3_158 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="273-275"];
m3_197 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="310-314"];
m3_191 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="307-309"];
m3_196 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="310-314"];
m3_68 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="138-140"];
m3_64 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="134-136"];
m3_112 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="214-217"];
m3_116 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="219-221"];
m3_120 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="222-224"];
m3_141 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="244-250"];
m3_146 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="255-257"];
m3_161 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Entry lambda expression", span="277-279"];
m3_163 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="277-279"];
m3_137 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="241-242"];
m3_159 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="273-275"];
m3_198 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="310-314"];
m3_192 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="307-309"];
m3_193 [cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs", label="Exit lambda expression", span="307-309"];
m3_0 [cluster="MvcSample.HangFireConfig.Start()", file="StorageConnectionExtensionsFacts.cs", label="Entry MvcSample.HangFireConfig.Start()", span="17-17"];
m3_1 [cluster="MvcSample.HangFireConfig.Start()", color=green, community=0, file="StorageConnectionExtensionsFacts.cs", label="25: var storage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.Sample;Trusted_Connection=True;'')", span="27-28"];
m3_2 [cluster="MvcSample.HangFireConfig.Start()", file="StorageConnectionExtensionsFacts.cs", label="storage.UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')", span="29-29"];
m3_32 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m3_125 [cluster="Unk.FirstOrDefault", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.FirstOrDefault", span=""];
m3_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
m3_49 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var transaction = Redis.CreateTransaction()", span="132-132"];
m3_48 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="130-130"];
m3_50 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="134-136"];
m3_51 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="138-140"];
m3_52 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="transaction.Commit()", span="143-143"];
m3_43 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var storedParameters = new Dictionary<string, string>(parameters)", span="125-125"];
m3_47 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="129-129"];
m3_41 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var jobId = Guid.NewGuid().ToString()", span="120-120"];
m3_53 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="return jobId;", span="146-146"];
m3_42 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="var invocationData = InvocationData.Serialize(job)", span="122-122"];
m3_44 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="storedParameters.Add(''Type'', invocationData.Type)", span="126-126"];
m3_45 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="storedParameters.Add(''Method'', invocationData.Method)", span="127-127"];
m3_46 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="128-128"];
m3_54 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
m3_35 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
m3_36 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="StorageConnectionExtensionsFacts.cs", label="return Redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="110-112"];
m3_37 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
m3_186 [cluster="Unk.CreatePipeline", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.CreatePipeline", span=""];
m3_96 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="195-195"];
m3_97 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="StorageConnectionExtensionsFacts.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="197-200"];
m3_98 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="195-195"];
m3_113 [cluster="Unk.RemoveItemFromList", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.RemoveItemFromList", span=""];
m3_55 [cluster="System.Guid.NewGuid()", file="StorageConnectionExtensionsFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m3_102 [cluster="Unk.GetValueFromHash", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m3_185 [cluster="Unk.GetAllItemsFromSet", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m3_61 [cluster="Unk.Commit", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.Commit", span=""];
m3_95 [cluster="HangFire.Storage.JobData.JobData()", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m3_94 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m3_194 [cluster="Unk.Format", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.Format", span=""];
m3_195 [cluster="Unk.GetValuesFromHash", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.GetValuesFromHash", span=""];
m3_124 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m3_60 [cluster="Unk.QueueCommand", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.QueueCommand", span=""];
m3_31 [cluster="Unk.PopAndPushItemBetweenLists", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m3_39 [cluster="Unk.AcquireLock", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.AcquireLock", span=""];
m3_121 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StorageConnectionExtensionsFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="230-230"];
m3_122 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StorageConnectionExtensionsFacts.cs", label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="232-234"];
m3_123 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StorageConnectionExtensionsFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="230-230"];
m3_92 [cluster="Unk.ContainsKey", file="StorageConnectionExtensionsFacts.cs", label="Entry Unk.ContainsKey", span=""];
m3_203 [file="StorageConnectionExtensionsFacts.cs", label="HangFire.Redis.RedisConnection", span=""];
m3_204 [file="StorageConnectionExtensionsFacts.cs", label=jobId, span=""];
m3_206 [file="StorageConnectionExtensionsFacts.cs", label="System.TimeSpan", span=""];
m3_205 [file="StorageConnectionExtensionsFacts.cs", label=storedParameters, span=""];
m3_207 [file="StorageConnectionExtensionsFacts.cs", label=string, span=""];
m3_208 [file="StorageConnectionExtensionsFacts.cs", label=string, span=""];
m3_209 [file="StorageConnectionExtensionsFacts.cs", label=string, span=""];
m3_210 [file="StorageConnectionExtensionsFacts.cs", label="HangFire.Server.ServerContext", span=""];
m3_211 [file="StorageConnectionExtensionsFacts.cs", label=queue1, span=""];
m3_212 [file="StorageConnectionExtensionsFacts.cs", label=string, span=""];
m3_213 [file="StorageConnectionExtensionsFacts.cs", label=name, span=""];
m3_214 [file="StorageConnectionExtensionsFacts.cs", label=heartbeats, span=""];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d12  [color=green, key=2, style=dotted];
d144 -> d10  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d14  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d32  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d63  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d76  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d95  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d102  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d109  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d116  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d125  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d131  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d136  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d144 -> d141  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d9 -> d10  [color=green, key=0, style=solid];
d11 -> d9  [color=blue, key=0, style=bold];
d14 -> d15  [color=green, key=0, style=solid];
d14 -> d16  [color=green, key=2, style=dotted];
d13 -> d14  [color=green, key=0, style=solid];
d15 -> d13  [color=blue, key=0, style=bold];
d5 -> d6  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [key=2, style=dotted];
d18 -> d21  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d21  [key=2, style=dotted];
d32 -> d43  [key=2, style=dotted];
d32 -> d44  [key=2, style=dotted];
d32 -> d45  [key=2, style=dotted];
d32 -> d38  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
d32 -> d39  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
d35 -> d35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d35 -> d36  [key=0, style=solid];
d35 -> d46  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d56 -> d67  [key=2, style=dotted];
d56 -> d68  [key=2, style=dotted];
d56 -> d69  [key=2, style=dotted];
d56 -> d70  [key=2, style=dotted];
d56 -> d48  [key=2, style=dotted];
d56 -> d61  [color=darkseagreen4, key=1, label=jobId, style=dashed];
d56 -> d64  [color=darkseagreen4, key=1, label=jobId, style=dashed];
d63 -> d64  [key=0, style=solid];
d63 -> d71  [key=2, style=dotted];
d76 -> d77  [key=0, style=solid];
d76 -> d69  [key=2, style=dotted];
d76 -> d45  [key=2, style=dotted];
d76 -> d79  [color=darkseagreen4, key=1, label=jobData, style=dashed];
d76 -> d80  [color=darkseagreen4, key=1, label=jobData, style=dashed];
d76 -> d86  [color=darkseagreen4, key=1, label=jobData, style=dashed];
d95 -> d96  [key=0, style=solid];
d95 -> d71  [key=2, style=dotted];
d102 -> d103  [key=0, style=solid];
d102 -> d69  [key=2, style=dotted];
d102 -> d45  [key=2, style=dotted];
d109 -> d109  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d109 -> d110  [key=0, style=solid];
d109 -> d71  [key=2, style=dotted];
d116 -> d117  [key=0, style=solid];
d116 -> d69  [key=2, style=dotted];
d116 -> d45  [key=2, style=dotted];
d125 -> d126  [key=0, style=solid];
d125 -> d67  [key=2, style=dotted];
d125 -> d71  [key=2, style=dotted];
d131 -> d132  [key=0, style=solid];
d131 -> d71  [key=2, style=dotted];
d136 -> d137  [key=0, style=solid];
d136 -> d71  [key=2, style=dotted];
d141 -> d141  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d141 -> d142  [key=0, style=solid];
d141 -> d43  [key=2, style=dotted];
d141 -> d68  [key=2, style=dotted];
d141 -> d71  [key=2, style=dotted];
d0 -> d5  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
d0 -> d6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
d3 -> d5  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d7 -> d0  [color=blue, key=0, style=bold];
d17 -> d18  [key=0, style=solid];
d19 -> d17  [color=blue, key=0, style=bold];
d22 -> d32  [color=darkseagreen4, key=1, label="string[]", style=dashed];
d22 -> d23  [key=0, style=solid];
d22 -> d25  [color=darkseagreen4, key=1, label="string[]", style=dashed];
d22 -> d31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d31 -> d32  [key=0, style=solid];
d31 -> d35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d31 -> d31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d31 -> d42  [key=2, style=dotted];
d28 -> d32  [color=darkseagreen4, key=1, label=fetchJobSqlTemplate, style=dashed];
d28 -> d29  [key=0, style=solid];
d29 -> d32  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
d29 -> d30  [key=0, style=solid];
d29 -> d34  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
d29 -> d37  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
d30 -> d32  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
d30 -> d31  [key=0, style=solid];
d30 -> d34  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
d30 -> d37  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
d33 -> d34  [key=0, style=solid];
d33 -> d37  [key=0, style=solid];
d38 -> d30  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d39 -> d47  [key=2, style=dotted];
d39 -> d48  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d37  [key=0, style=solid];
d36 -> d36  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d36 -> d37  [key=0, style=solid];
d36 -> d42  [key=2, style=dotted];
d49 -> d56  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d49 -> d50  [key=0, style=solid];
d49 -> d52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
d49 -> d55  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
d49 -> d57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
d49 -> d58  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
d49 -> d60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
d55 -> d56  [key=0, style=solid];
d55 -> d66  [key=2, style=dotted];
d54 -> d56  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
d54 -> d55  [key=0, style=solid];
d57 -> d58  [key=0, style=solid];
d57 -> d64  [key=0, style=solid];
d61 -> d61  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
d61 -> d60  [key=0, style=solid];
d64 -> d65  [key=0, style=solid];
d58 -> d63  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
d58 -> d61  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
d58 -> d59  [key=0, style=solid];
d62 -> d63  [key=0, style=solid];
d72 -> d76  [color=darkseagreen4, key=1, label=string, style=dashed];
d72 -> d73  [key=0, style=solid];
d75 -> d76  [key=0, style=solid];
d77 -> d78  [key=0, style=solid];
d77 -> d79  [key=0, style=solid];
d79 -> d69  [key=2, style=dotted];
d79 -> d80  [key=0, style=solid];
d79 -> d83  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
d80 -> d81  [key=0, style=solid];
d86 -> d87  [key=0, style=solid];
d86 -> d89  [key=2, style=dotted];
d90 -> d95  [color=darkseagreen4, key=1, label=string, style=dashed];
d90 -> d91  [key=0, style=solid];
d90 -> d93  [color=darkseagreen4, key=1, label=string, style=dashed];
d93 -> d95  [key=0, style=solid];
d93 -> d94  [key=0, style=solid];
d96 -> d90  [color=blue, key=0, style=bold];
d97 -> d102  [color=darkseagreen4, key=1, label=string, style=dashed];
d97 -> d98  [key=0, style=solid];
d97 -> d100  [color=darkseagreen4, key=1, label=string, style=dashed];
d100 -> d102  [key=0, style=solid];
d100 -> d101  [key=0, style=solid];
d103 -> d97  [color=blue, key=0, style=bold];
d104 -> d109  [color=darkseagreen4, key=1, label=string, style=dashed];
d104 -> d105  [key=0, style=solid];
d104 -> d107  [color=darkseagreen4, key=1, label=string, style=dashed];
d107 -> d109  [key=0, style=solid];
d107 -> d108  [key=0, style=solid];
d110 -> d104  [color=blue, key=0, style=bold];
d111 -> d116  [color=darkseagreen4, key=1, label=string, style=dashed];
d111 -> d112  [key=0, style=solid];
d111 -> d114  [color=darkseagreen4, key=1, label=double, style=dashed];
d114 -> d116  [key=0, style=solid];
d114 -> d115  [key=0, style=solid];
d117 -> d111  [color=blue, key=0, style=bold];
d119 -> d125  [color=darkseagreen4, key=1, label=string, style=dashed];
d119 -> d120  [key=0, style=solid];
d119 -> d122  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
d119 -> d124  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
d124 -> d125  [key=0, style=solid];
d124 -> d127  [key=2, style=dotted];
d126 -> d119  [color=blue, key=0, style=bold];
d128 -> d131  [color=darkseagreen4, key=1, label=string, style=dashed];
d128 -> d129  [key=0, style=solid];
d129 -> d131  [key=0, style=solid];
d129 -> d130  [key=0, style=solid];
d132 -> d128  [color=blue, key=0, style=bold];
d133 -> d136  [color=darkseagreen4, key=1, label=string, style=dashed];
d133 -> d134  [key=0, style=solid];
d134 -> d136  [key=0, style=solid];
d134 -> d135  [key=0, style=solid];
d137 -> d133  [color=blue, key=0, style=bold];
d139 -> d141  [key=0, style=solid];
d139 -> d139  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d139 -> d140  [key=0, style=solid];
d139 -> d143  [key=2, style=dotted];
d142 -> d138  [color=blue, key=0, style=bold];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d4 -> d7  [key=0, style=solid];
d4 -> d8  [key=2, style=dotted];
d2 -> d7  [key=0, style=solid];
d2 -> d8  [key=2, style=dotted];
d40 -> d22  [color=blue, key=0, style=bold];
d23 -> d24  [key=0, style=solid];
d23 -> d25  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d25 -> d27  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d37 -> d37  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
d65 -> d49  [color=blue, key=0, style=bold];
d50 -> d51  [key=0, style=solid];
d50 -> d52  [key=0, style=solid];
d52 -> d54  [key=0, style=solid];
d52 -> d53  [key=0, style=solid];
d60 -> d61  [key=0, style=solid];
d60 -> d62  [key=0, style=solid];
d59 -> d61  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
d59 -> d60  [key=0, style=solid];
d87 -> d72  [color=blue, key=0, style=bold];
d73 -> d75  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d78 -> d87  [key=0, style=solid];
d83 -> d86  [key=0, style=solid];
d83 -> d84  [key=0, style=solid];
d83 -> d88  [key=2, style=dotted];
d81 -> d82  [key=0, style=solid];
d85 -> d86  [key=0, style=solid];
d91 -> d93  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d94 -> d96  [key=0, style=solid];
d94 -> d8  [key=2, style=dotted];
d92 -> d96  [key=0, style=solid];
d92 -> d8  [key=2, style=dotted];
d98 -> d100  [key=0, style=solid];
d98 -> d99  [key=0, style=solid];
d101 -> d103  [key=0, style=solid];
d101 -> d8  [key=2, style=dotted];
d99 -> d103  [key=0, style=solid];
d99 -> d8  [key=2, style=dotted];
d105 -> d107  [key=0, style=solid];
d105 -> d106  [key=0, style=solid];
d108 -> d110  [key=0, style=solid];
d108 -> d8  [key=2, style=dotted];
d106 -> d110  [key=0, style=solid];
d106 -> d8  [key=2, style=dotted];
d112 -> d114  [key=0, style=solid];
d112 -> d113  [key=0, style=solid];
d115 -> d117  [key=0, style=solid];
d115 -> d118  [key=2, style=dotted];
d113 -> d117  [key=0, style=solid];
d113 -> d8  [key=2, style=dotted];
d120 -> d121  [key=0, style=solid];
d120 -> d122  [key=0, style=solid];
d122 -> d124  [key=0, style=solid];
d122 -> d123  [key=0, style=solid];
d121 -> d126  [key=0, style=solid];
d121 -> d8  [key=2, style=dotted];
d123 -> d126  [key=0, style=solid];
d123 -> d8  [key=2, style=dotted];
d130 -> d132  [key=0, style=solid];
d130 -> d8  [key=2, style=dotted];
d135 -> d137  [key=0, style=solid];
d135 -> d8  [key=2, style=dotted];
d138 -> d139  [key=0, style=solid];
d140 -> d142  [key=0, style=solid];
d140 -> d41  [key=2, style=dotted];
d24 -> d40  [key=0, style=solid];
d24 -> d8  [key=2, style=dotted];
d26 -> d40  [key=0, style=solid];
d26 -> d41  [key=2, style=dotted];
d51 -> d65  [key=0, style=solid];
d51 -> d8  [key=2, style=dotted];
d53 -> d65  [key=0, style=solid];
d53 -> d8  [key=2, style=dotted];
d74 -> d87  [key=0, style=solid];
d74 -> d8  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d84 -> d85  [key=0, style=solid];
m2_6 -> m2_7  [color=green, key=0, style=solid];
m2_6 -> m2_30  [color=green, key=2, style=dotted];
m2_6 -> m2_31  [color=green, key=2, style=dotted];
m2_6 -> m2_10  [color=green, key=1, label=hash, style=dashed];
m2_6 -> m2_11  [color=green, key=1, label=hash, style=dashed];
m2_6 -> m2_15  [color=green, key=1, label=hash, style=dashed];
m2_6 -> m2_16  [color=green, key=1, label=hash, style=dashed];
m2_6 -> m2_17  [color=green, key=1, label=hash, style=dashed];
m2_6 -> m2_18  [color=green, key=1, label=hash, style=dashed];
m2_6 -> m2_22  [color=green, key=1, label=hash, style=dashed];
m2_6 -> m2_23  [color=green, key=1, label=hash, style=dashed];
m2_7 -> m2_8  [color=green, key=0, style=solid];
m2_7 -> m2_9  [color=green, key=0, style=solid];
m2_8 -> m2_5  [color=green, key=0, style=solid];
m2_8 -> m2_32  [key=2, style=dotted];
m2_8 -> m2_33  [key=2, style=dotted];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_0 -> m2_4  [color=green, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m2_0 -> m2_6  [color=green, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m2_0 -> m2_3  [color=green, key=3, label="method methodReturn System.Collections.Generic.List<Hangfire.Storage.RecurringJobDto> GetRecurringJobs", style=bold];
m2_0 -> m2_19  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=storage, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_26  [color=green, key=0, style=solid];
m2_2 -> d8  [color=green, key=2, style=dotted];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_3 -> m2_28  [color=green, key=2, style=dotted];
m2_3 -> m2_8  [color=green, key=1, label=result, style=dashed];
m2_3 -> m2_24  [color=green, key=1, label=result, style=dashed];
m2_3 -> m2_25  [color=green, key=1, label=result, style=dashed];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_29  [color=green, key=2, style=dotted];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [color=green, key=0, style=solid];
m2_5 -> m2_25  [color=green, key=0, style=solid];
m2_5 -> m2_8  [color=green, key=1, label=id, style=dashed];
m2_5 -> m2_9  [color=green, key=1, label=id, style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_16  [color=darkseagreen4, key=1, label=dto, style=dashed];
m2_9 -> m2_18  [color=darkseagreen4, key=1, label=dto, style=dashed];
m2_9 -> m2_23  [color=darkseagreen4, key=1, label=dto, style=dashed];
m2_9 -> m2_24  [color=darkseagreen4, key=1, label=dto, style=dashed];
m2_9 -> m2_32  [key=2, style=dotted];
m2_9 -> m2_12  [color=darkseagreen4, key=1, label=dto, style=dashed];
m2_9 -> m2_14  [color=darkseagreen4, key=1, label=dto, style=dashed];
m2_9 -> m2_19  [color=darkseagreen4, key=1, label=dto, style=dashed];
m2_9 -> m2_21  [color=darkseagreen4, key=1, label=dto, style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=2, style=dotted];
m2_11 -> m2_9  [color=blue, key=0, style=bold];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_34  [key=2, style=dotted];
m2_12 -> m2_15  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_35  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=0, style=solid];
m2_15 -> m2_36  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_37  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_22  [key=0, style=solid];
m2_17 -> m2_36  [key=2, style=dotted];
m2_17 -> m2_38  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, style=solid];
m2_22 -> m2_36  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_37  [key=2, style=dotted];
m2_24 -> m2_5  [color=green, key=0, style=solid];
m2_24 -> m2_33  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_39  [key=2, style=dotted];
m2_19 -> m2_21  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_20 -> m2_22  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_26 -> m2_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_6  [color=green, key=2, style=dotted];
m3_4 -> m3_8  [key=2, style=dotted];
m3_5 -> m3_3  [color=blue, key=0, style=bold];
m3_5 -> m3_0  [color=blue, key=0, style=bold];
m3_12 -> m3_17  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_12 -> m3_18  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m3_22 -> m3_24  [key=0, style=solid];
m3_22 -> m3_30  [key=2, style=dotted];
m3_22 -> m3_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_22 -> m3_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_31  [key=2, style=dotted];
m3_23 -> m3_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_23 -> m3_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> d21  [key=2, style=dotted];
m3_25 -> m3_32  [key=2, style=dotted];
m3_25 -> m3_33  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=0, style=solid];
m3_19 -> m3_22  [color=darkseagreen4, key=1, label=queueKey, style=dashed];
m3_19 -> m3_23  [color=darkseagreen4, key=1, label=queueKey, style=dashed];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> d21  [key=2, style=dotted];
m3_20 -> m3_22  [color=darkseagreen4, key=1, label=fetchedKey, style=dashed];
m3_20 -> m3_23  [color=darkseagreen4, key=1, label=fetchedKey, style=dashed];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> d21  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_15  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_34  [key=2, style=dotted];
m3_17 -> m3_21  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m3_17 -> m3_17  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m3_17 -> m3_18  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m3_18 -> m3_26  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m3_15 -> m3_17  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m3_16 -> m3_28  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_27 -> m3_12  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [key=2, style=dotted];
m3_8 -> m3_11  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_180  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_185  [key=2, style=dotted];
m3_169 -> m3_173  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_186  [key=2, style=dotted];
m3_172 -> m3_175  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_172 -> m3_176  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_181 -> m3_181  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_151  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_142  [key=2, style=dotted];
m3_170 -> m3_175  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m3_170 -> m3_197  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m3_170 -> m3_178  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_176  [key=0, style=solid];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_180  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m3_175 -> m3_173  [key=0, style=solid];
m3_175 -> m3_60  [key=2, style=dotted];
m3_175 -> m3_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_175 -> m3_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_187  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_178  [key=0, style=solid];
m3_180 -> m3_190  [key=2, style=dotted];
m3_179 -> m3_181  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_179  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m3_179 -> m3_188  [key=2, style=dotted];
m3_179 -> m3_189  [key=2, style=dotted];
m3_182 -> m3_182  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m3_182 -> m3_178  [key=0, style=solid];
m3_182 -> m3_183  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_183  [key=0, style=solid];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_197  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_174 -> m3_192  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_177 -> m3_182  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_183  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m3_183 -> m3_184  [key=0, style=solid];
m3_184 -> m3_168  [color=blue, key=0, style=bold];
m3_11 -> m3_9  [color=blue, key=0, style=bold];
m3_165 -> m3_166  [key=0, style=solid];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> d21  [key=2, style=dotted];
m3_166 -> m3_32  [key=2, style=dotted];
m3_166 -> m3_33  [key=2, style=dotted];
m3_167 -> m3_165  [color=blue, key=0, style=bold];
m3_154 -> m3_60  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_151 -> m3_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_151 -> m3_154  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_151 -> m3_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_152 -> m3_11  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_154  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_152 -> m3_155  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_153 -> m3_60  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_155 -> m3_61  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_156 -> m3_151  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_9 -> m3_7  [color=blue, key=0, style=bold];
m3_9 -> m3_10  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> d21  [key=2, style=dotted];
m3_100 -> m3_102  [key=2, style=dotted];
m3_101 -> m3_99  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_126 -> m3_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_126 -> m3_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_126 -> m3_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_126 -> m3_130  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m3_126 -> m3_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_126 -> m3_145  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_11  [key=2, style=dotted];
m3_127 -> m3_129  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_127 -> m3_132  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_127 -> m3_133  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_60  [key=2, style=dotted];
m3_128 -> m3_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_60  [key=2, style=dotted];
m3_129 -> m3_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_132 -> m3_130  [key=0, style=solid];
m3_132 -> m3_60  [key=2, style=dotted];
m3_132 -> m3_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_61  [key=2, style=dotted];
m3_130 -> m3_133  [key=0, style=solid];
m3_130 -> m3_131  [key=0, style=solid];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_145  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m3_134 -> m3_126  [color=blue, key=0, style=bold];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_60  [key=2, style=dotted];
m3_107 -> m3_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_11  [key=2, style=dotted];
m3_104 -> m3_106  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_104 -> m3_107  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_104 -> m3_108  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_103 -> m3_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_103 -> m3_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_103 -> m3_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_103 -> m3_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_103 -> m3_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_60  [key=2, style=dotted];
m3_105 -> m3_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_60  [key=2, style=dotted];
m3_106 -> m3_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_61  [key=2, style=dotted];
m3_109 -> m3_103  [color=blue, key=0, style=bold];
m3_148 -> m3_149  [key=0, style=solid];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_151  [key=2, style=dotted];
m3_150 -> m3_148  [color=blue, key=0, style=bold];
m3_70 -> m3_71  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> d21  [key=2, style=dotted];
m3_71 -> m3_91  [key=2, style=dotted];
m3_71 -> m3_77  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_71 -> m3_78  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_71 -> m3_79  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_71 -> m3_80  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_71 -> m3_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_71 -> m3_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_71 -> m3_85  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_71 -> m3_89  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_74  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_79  [key=0, style=solid];
m3_77 -> m3_92  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_85  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_81  [key=0, style=solid];
m3_79 -> m3_92  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_85  [color=darkseagreen4, key=1, label=method, style=dashed];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_83  [key=0, style=solid];
m3_81 -> m3_92  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_85  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_93  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_95  [key=2, style=dotted];
m3_89 -> m3_92  [key=2, style=dotted];
m3_73 -> m3_90  [key=0, style=solid];
m3_74 -> m3_85  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_74 -> m3_75  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_85  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m3_83 -> m3_84  [key=0, style=solid];
m3_75 -> m3_85  [color=darkseagreen4, key=1, label=method, style=dashed];
m3_75 -> m3_76  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_86 -> m3_89  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_94  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_90 -> m3_70  [color=blue, key=0, style=bold];
m3_157 -> m3_158  [key=0, style=solid];
m3_67 -> d21  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_69  [key=2, style=dotted];
m3_63 -> d21  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_65  [key=2, style=dotted];
m3_111 -> d21  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_113  [key=2, style=dotted];
m3_115 -> d21  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_117  [key=2, style=dotted];
m3_119 -> d21  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_117  [key=2, style=dotted];
m3_140 -> d21  [key=2, style=dotted];
m3_140 -> m3_32  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_142  [key=2, style=dotted];
m3_140 -> m3_143  [key=2, style=dotted];
m3_140 -> m3_65  [key=2, style=dotted];
m3_145 -> d21  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_147  [key=2, style=dotted];
m3_162 -> d21  [key=2, style=dotted];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_164  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_66 -> m3_67  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_118 -> m3_119  [key=0, style=solid];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_138  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_139 -> m3_140  [key=0, style=solid];
m3_144 -> m3_145  [key=0, style=solid];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_160  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_199  [key=2, style=dotted];
m3_197 -> m3_200  [key=2, style=dotted];
m3_197 -> m3_201  [key=2, style=dotted];
m3_197 -> m3_202  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_196 -> m3_197  [key=0, style=solid];
m3_68 -> m3_66  [color=blue, key=0, style=bold];
m3_64 -> m3_62  [color=blue, key=0, style=bold];
m3_112 -> m3_110  [color=blue, key=0, style=bold];
m3_116 -> m3_114  [color=blue, key=0, style=bold];
m3_120 -> m3_118  [color=blue, key=0, style=bold];
m3_141 -> m3_139  [color=blue, key=0, style=bold];
m3_146 -> m3_144  [color=blue, key=0, style=bold];
m3_161 -> m3_162  [key=0, style=solid];
m3_163 -> m3_161  [color=blue, key=0, style=bold];
m3_137 -> m3_135  [color=blue, key=0, style=bold];
m3_159 -> m3_157  [color=blue, key=0, style=bold];
m3_198 -> m3_196  [color=blue, key=0, style=bold];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_194  [key=2, style=dotted];
m3_192 -> m3_195  [key=2, style=dotted];
m3_193 -> m3_191  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_3  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_40 -> m3_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_40 -> m3_67  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_40 -> m3_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_11  [key=2, style=dotted];
m3_49 -> m3_51  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_49 -> m3_52  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_32  [key=2, style=dotted];
m3_48 -> m3_59  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_60  [key=2, style=dotted];
m3_50 -> m3_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_60  [key=2, style=dotted];
m3_51 -> m3_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_61  [key=2, style=dotted];
m3_43 -> m3_48  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m3_43 -> m3_50  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m3_43 -> m3_63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_58  [key=2, style=dotted];
m3_43 -> m3_45  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m3_43 -> m3_46  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m3_43 -> m3_47  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_59  [key=2, style=dotted];
m3_41 -> m3_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_41 -> m3_51  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_41 -> m3_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_41 -> m3_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_55  [key=2, style=dotted];
m3_41 -> m3_56  [key=2, style=dotted];
m3_41 -> m3_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_53 -> m3_54  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_47  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m3_42 -> m3_57  [key=2, style=dotted];
m3_42 -> m3_44  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m3_42 -> m3_45  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m3_42 -> m3_46  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m3_44 -> m3_59  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_59  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_59  [key=2, style=dotted];
m3_54 -> m3_40  [color=blue, key=0, style=bold];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> d21  [key=2, style=dotted];
m3_36 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_39  [key=2, style=dotted];
m3_37 -> m3_35  [color=blue, key=0, style=bold];
m3_96 -> m3_97  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> d21  [key=2, style=dotted];
m3_97 -> m3_33  [key=2, style=dotted];
m3_98 -> m3_96  [color=blue, key=0, style=bold];
m3_121 -> m3_122  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_124  [key=2, style=dotted];
m3_122 -> m3_125  [key=2, style=dotted];
m3_123 -> m3_121  [color=blue, key=0, style=bold];
m3_203 -> m3_1  [color=green, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_4  [color=green, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_49  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_71  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_97  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_100  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_104  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_122  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_127  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_149  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_166  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_169  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_172  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_203 -> m3_181  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m3_204 -> m3_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_204 -> m3_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_206 -> m3_67  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_205 -> m3_63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m3_207 -> m3_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_207 -> m3_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_207 -> m3_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_208 -> m3_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_209 -> m3_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_209 -> m3_145  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_209 -> m3_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_210 -> m3_140  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m3_211 -> m3_145  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m3_212 -> m3_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_212 -> m3_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_213 -> m3_197  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_213 -> m3_192  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_214 -> m3_197  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
}
