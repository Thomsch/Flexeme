digraph  {
d10 [label="_connection.Dispose()", span="46-46", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", color=green, community=0];
d144 [label="HangFire.SqlServer.SqlServerConnection", span=""];
d9 [label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()"];
d11 [label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()"];
d12 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose"];
d14 [label="return new SqlServerWriteOnlyTransaction(_connection);", span="51-51", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", color=green, community=0];
d13 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()"];
d15 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()"];
d16 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)"];
d5 [label="_connection = connection", span="40-40", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)"];
d6 [label="_options = options", span="41-41", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)"];
d18 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="56-58", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)"];
d32 [label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = _options.JobInvisibilityTimeOut.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="84-87", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d35 [label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="93-93", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d56 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d63 [label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d76 [label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d95 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
d102 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
d109 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="221-222", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)"];
d116 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d125 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="250-256", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d131 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="263-265", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)"];
d136 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="272-274", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)"];
d141 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="284-286", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
d0 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)"];
d3 [label="options == null", span="38-38", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)"];
d7 [label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)"];
d17 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)"];
d19 [label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)"];
d20 [label="Entry SqlServerDistributedLock.cstr", span="", cluster="SqlServerDistributedLock.cstr"];
d21 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
d22 [label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d31 [label="cancellationToken.ThrowIfCancellationRequested()", span="82-82", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d28 [label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="68-73", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d29 [label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="77-77", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d30 [label="var currentQueryIndex = 0", span="78-78", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d33 [label="idAndQueue == null", span="89-89", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d43 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()"];
d44 [label="Entry Unk.Query", span="", cluster="Unk.Query"];
d45 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault"];
d38 [label="idAndQueue == null", span="99-99", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d39 [label="return new ProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="101-103", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d34 [label="currentQueryIndex == fetchConditions.Length - 1", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d36 [label="cancellationToken.ThrowIfCancellationRequested()", span="94-94", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d46 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)"];
d49 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d55 [label="var invocationData = InvocationData.Serialize(job)", span="119-119", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d54 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d57 [label="parameters.Count > 0", span="131-131", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d67 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)"];
d68 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)"];
d69 [label="Entry Unk.>", span="", cluster="Unk.>"];
d70 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
d48 [label="Entry Unk.ToString", span="", cluster="Unk.ToString"];
d61 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d64 [label="return jobId;", span="152-152", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d58 [label="var parameterArray = new object[parameters.Count]", span="133-133", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d62 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d71 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
d72 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d75 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d77 [label="jobData == null", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d79 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d80 [label="invocationData.Arguments = jobData.Arguments", span="169-169", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d86 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d90 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
d93 [label="name == null", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
d96 [label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
d97 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
d100 [label="name == null", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
d103 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
d104 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)"];
d107 [label="queue == null", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)"];
d110 [label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)"];
d111 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d114 [label="toScore < fromScore", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d117 [label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d119 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d124 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d126 [label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d128 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)"];
d129 [label="serverId == null", span="261-261", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)"];
d132 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)"];
d133 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)"];
d134 [label="serverId == null", span="270-270", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)"];
d137 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)"];
d139 [label="timeOut.Duration() != timeOut", span="279-279", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
d142 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
d1 [label="connection == null", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)"];
d4 [label="throw new ArgumentNullException(''options'');", span="38-38", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)"];
d2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)"];
d40 [label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d23 [label="queues == null", span="63-63", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d25 [label="queues.Length == 0", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d42 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()"];
d27 [label="dynamic idAndQueue", span="66-66", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d37 [label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="98-98", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d47 [label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)"];
d65 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d50 [label="job == null", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d52 [label="parameters == null", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d60 [label=parameters, span="135-135", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d66 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)"];
d59 [label="int parameterIndex = 0", span="134-134", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d87 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d73 [label="id == null", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d78 [label="return null;", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d83 [label="job = invocationData.Deserialize()", span="176-176", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d81 [label="Job job = null", span="171-171", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d85 [label="loadException = ex", span="180-180", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d89 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()"];
d91 [label="id == null", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
d94 [label="throw new ArgumentNullException(''name'');", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
d92 [label="throw new ArgumentNullException(''id'');", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
d98 [label="id == null", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
d101 [label="throw new ArgumentNullException(''name'');", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
d99 [label="throw new ArgumentNullException(''id'');", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
d105 [label="id == null", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)"];
d108 [label="throw new ArgumentNullException(''queue'');", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)"];
d106 [label="throw new ArgumentNullException(''id'');", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)"];
d112 [label="key == null", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d115 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d113 [label="throw new ArgumentNullException(''key'');", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d120 [label="serverId == null", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d122 [label="context == null", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d127 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()"];
d121 [label="throw new ArgumentNullException(''serverId'');", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d123 [label="throw new ArgumentNullException(''context'');", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d130 [label="throw new ArgumentNullException(''serverId'');", span="261-261", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)"];
d135 [label="throw new ArgumentNullException(''serverId'');", span="270-270", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)"];
d138 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
d140 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="281-281", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
d143 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()"];
d8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d24 [label="throw new ArgumentNullException(''queues'');", span="63-63", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d26 [label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d51 [label="throw new ArgumentNullException(''job'');", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d53 [label="throw new ArgumentNullException(''parameters'');", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d74 [label="throw new ArgumentNullException(''id'');", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d82 [label="JobLoadException loadException = null", span="172-172", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d84 [label=JobLoadException, span="178-178", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)"];
d88 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()"];
d118 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
d41 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
m2_29 [label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="StorageConnectionExtensions.cs"];
m2_36 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StorageConnectionExtensions.cs"];
m2_28 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="StorageConnectionExtensions.cs"];
m2_6 [label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="35-35", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", color=green, community=0];
m2_39 [label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45", cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="StorageConnectionExtensions.cs"];
m2_35 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="StorageConnectionExtensions.cs"];
m2_34 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StorageConnectionExtensions.cs"];
m2_33 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StorageConnectionExtensions.cs"];
m2_7 [label="hash == null", span="37-37", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", color=green, community=0];
m2_31 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="StorageConnectionExtensions.cs"];
m2_37 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="StorageConnectionExtensions.cs"];
m2_38 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="StorageConnectionExtensions.cs"];
m2_8 [label="result.Add(new RecurringJobDto { Id = id, Removed = true })", span="39-39", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_0 [label="Entry Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="25-25", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_1 [label="connection == null", span="27-27", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", color=green, community=0];
m2_2 [label="throw new ArgumentNullException(''connection'');", span="27-27", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", color=green, community=0];
m2_3 [label="var result = new List<RecurringJobDto>()", span="29-29", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", color=green, community=0];
m2_4 [label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="31-31", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", color=green, community=0];
m2_5 [label=ids, span="33-33", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", color=green, community=0];
m2_9 [label="var dto = new RecurringJobDto { Id = id }", span="43-43", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_10 [label="dto.Cron = hash[''Cron'']", span="44-44", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_11 [label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="48-48", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_12 [label="dto.Job = invocationData.Deserialize()", span="49-49", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_15 [label="hash.ContainsKey(''NextExecution'')", span="56-56", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_16 [label="dto.NextExecution = JobHelper.DeserializeDateTime(hash[''NextExecution''])", span="58-58", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_17 [label="hash.ContainsKey(''LastJobId'') && !string.IsNullOrWhiteSpace(hash[''LastJobId''])", span="61-61", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_18 [label="dto.LastJobId = hash[''LastJobId'']", span="63-63", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_22 [label="hash.ContainsKey(''LastExecution'')", span="72-72", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_23 [label="dto.LastExecution = JobHelper.DeserializeDateTime(hash[''LastExecution''])", span="74-74", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_24 [label="result.Add(dto)", span="77-77", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_25 [label="return result;", span="80-80", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_19 [label="var stateData = connection.GetStateData(dto.LastJobId)", span="65-65", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_14 [label="dto.LoadException = ex", span="53-53", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_21 [label="dto.LastJobState = stateData.Name", span="68-68", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_20 [label="stateData != null", span="66-66", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_13 [label=JobLoadException, span="51-51", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_26 [label="Exit Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="25-25", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m2_32 [label="Entry Hangfire.Storage.RecurringJobDto.RecurringJobDto()", span="21-21", cluster="Hangfire.Storage.RecurringJobDto.RecurringJobDto()", file="StorageConnectionExtensions.cs"];
m2_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StorageConnectionExtensions.cs"];
m3_3 [label="JobStorage.Current = storage", span="31-31", cluster="MvcSample.HangFireConfig.Start()", file="StorageConnectionExtensionsFacts.cs"];
m3_4 [label="_server = new AspNetBackgroundJobServer()", span="46-46", cluster="MvcSample.HangFireConfig.Start()", color=green, community=0, file="StorageConnectionExtensionsFacts.cs"];
m3_5 [label="Exit MvcSample.HangFireConfig.Start()", span="17-17", cluster="MvcSample.HangFireConfig.Start()", file="StorageConnectionExtensionsFacts.cs"];
m3_143 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="StorageConnectionExtensionsFacts.cs"];
m3_12 [label="Entry HangFire.BackgroundJobServer.Stop()", span="71-71", cluster="HangFire.BackgroundJobServer.Stop()", file="StorageConnectionExtensionsFacts.cs"];
m3_22 [label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="68-71", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_23 [label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="75-76", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_25 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="96-99", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_21 [label="queueIndex == 0", span="66-66", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_19 [label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="63-63", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_20 [label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="64-64", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_24 [label="jobId == null", span="79-79", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_26 [label="return new ProcessingJob(jobId, queueName);", span="105-105", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_17 [label="queueIndex = (queueIndex + 1) % queues.Length", span="60-60", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_18 [label="queueName = queues[queueIndex]", span="61-61", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_15 [label="var queueIndex = 0", span="54-54", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_16 [label="cancellationToken.ThrowIfCancellationRequested()", span="58-58", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_14 [label="string queueName", span="53-53", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_13 [label="string jobId", span="52-52", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_27 [label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="50-50", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StorageConnectionExtensionsFacts.cs"];
m3_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StorageConnectionExtensionsFacts.cs"];
m3_201 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="StorageConnectionExtensionsFacts.cs"];
m3_65 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="StorageConnectionExtensionsFacts.cs"];
m3_38 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="StorageConnectionExtensionsFacts.cs"];
m3_91 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="StorageConnectionExtensionsFacts.cs"];
m3_8 [label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="47-47", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="StorageConnectionExtensionsFacts.cs"];
m3_200 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="StorageConnectionExtensionsFacts.cs"];
m3_168 [label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="293-293", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_169 [label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="295-295", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_172 [label="var pipeline = Redis.CreatePipeline()", span="300-300", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_181 [label="RemoveServer(Redis, heartbeat.Key)", span="328-328", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_170 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="296-296", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_173 [label=serverNames, span="302-302", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_171 [label="var utcNow = DateTime.UtcNow", span="298-298", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_175 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="306-314", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_176 [label="pipeline.Flush()", span="317-317", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_180 [label="utcNow > maxTime.Add(timeOut)", span="326-326", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_179 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="323-324", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_182 [label="removedServerCount++", span="329-329", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_178 [label=heartbeats, span="321-321", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_174 [label="var name = serverName", span="304-304", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_177 [label="var removedServerCount = 0", span="320-320", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_183 [label="return removedServerCount;", span="333-333", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_184 [label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="293-293", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_11 [label="Exit MvcSample.HangFireConfig.Stop()", span="50-50", cluster="MvcSample.HangFireConfig.Stop()", file="StorageConnectionExtensionsFacts.cs"];
m3_33 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="StorageConnectionExtensionsFacts.cs"];
m3_138 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="StorageConnectionExtensionsFacts.cs"];
m3_117 [label="Entry Unk.RemoveEntryFromHash", span="", cluster="Unk.RemoveEntryFromHash", file="StorageConnectionExtensionsFacts.cs"];
m3_30 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="StorageConnectionExtensionsFacts.cs"];
m3_165 [label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="285-285", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_166 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="287-290", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_167 [label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="285-285", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_164 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="StorageConnectionExtensionsFacts.cs"];
m3_154 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="277-279", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_151 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="269-269", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_152 [label="var transaction = redis.CreateTransaction()", span="271-271", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_153 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="273-275", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_155 [label="transaction.Commit()", span="281-281", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_156 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="269-269", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_34 [label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_7 [label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", span="28-28", cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", file="StorageConnectionExtensionsFacts.cs"];
m3_9 [label="Entry MvcSample.HangFireConfig.Stop()", span="50-50", cluster="MvcSample.HangFireConfig.Stop()", file="StorageConnectionExtensionsFacts.cs"];
m3_99 [label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="203-203", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_100 [label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="205-207", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_101 [label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="203-203", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_69 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="StorageConnectionExtensionsFacts.cs"];
m3_93 [label="Entry InvocationData.cstr", span="", cluster="InvocationData.cstr", file="StorageConnectionExtensionsFacts.cs"];
m3_10 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="StorageConnectionExtensionsFacts.cs"];
m3_187 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="StorageConnectionExtensionsFacts.cs"];
m3_56 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="StorageConnectionExtensionsFacts.cs"];
m3_28 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="StorageConnectionExtensionsFacts.cs"];
m3_202 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="StorageConnectionExtensionsFacts.cs"];
m3_190 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_126 [label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="237-237", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs"];
m3_127 [label="var transaction = Redis.CreateTransaction()", span="239-239", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs"];
m3_128 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="241-242", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs"];
m3_129 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="244-250", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs"];
m3_132 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="255-257", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs"];
m3_133 [label="transaction.Commit()", span="260-260", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs"];
m3_130 [label="context.Queues", span="252-252", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs"];
m3_131 [label="var queue1 = queue", span="254-254", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs"];
m3_134 [label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="237-237", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StorageConnectionExtensionsFacts.cs"];
m3_142 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StorageConnectionExtensionsFacts.cs"];
m3_199 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="StorageConnectionExtensionsFacts.cs"];
m3_58 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="StorageConnectionExtensionsFacts.cs"];
m3_147 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="StorageConnectionExtensionsFacts.cs"];
m3_107 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked''))", span="222-224", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_104 [label="var transaction = Redis.CreateTransaction()", span="212-212", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_103 [label="Entry HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="210-210", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_105 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1))", span="214-217", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_106 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched''))", span="219-221", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_108 [label="transaction.Commit()", span="226-226", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_109 [label="Exit HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="210-210", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_6 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="33-33", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_188 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="StorageConnectionExtensionsFacts.cs"];
m3_160 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="StorageConnectionExtensionsFacts.cs"];
m3_148 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="264-264", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_149 [label="RemoveServer(Redis, serverId)", span="266-266", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_150 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="264-264", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_189 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="StorageConnectionExtensionsFacts.cs"];
m3_70 [label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_71 [label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="151-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_72 [label="storedData.Count == 0", span="154-154", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_77 [label="storedData.ContainsKey(''Type'')", span="160-160", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_78 [label="type = storedData[''Type'']", span="162-162", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_79 [label="storedData.ContainsKey(''Method'')", span="164-164", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_80 [label="method = storedData[''Method'']", span="166-166", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_81 [label="storedData.ContainsKey(''ParameterTypes'')", span="168-168", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_82 [label="parameterTypes = storedData[''ParameterTypes'']", span="170-170", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_85 [label="var invocationData = new InvocationData(type, method, parameterTypes, storedData[''Arguments''])", span="176-176", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_89 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                LoadException = loadException\r\n            };", span="187-192", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_73 [label="return null;", span="154-154", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_74 [label="string type = null", span="156-156", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_76 [label="string parameterTypes = null", span="158-158", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_83 [label="Job job = null", span="173-173", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_75 [label="string method = null", span="157-157", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_84 [label="JobLoadException loadException = null", span="174-174", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_86 [label="job = invocationData.Deserialize()", span="180-180", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_88 [label="loadException = ex", span="184-184", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_87 [label=JobLoadException, span="182-182", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_90 [label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_57 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="StorageConnectionExtensionsFacts.cs"];
m3_157 [label="Entry lambda expression", span="273-275", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_67 [label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="138-140", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_63 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="134-136", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_111 [label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1)", span="214-217", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_115 [label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched'')", span="219-221", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_119 [label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked'')", span="222-224", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_140 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="244-250", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_145 [label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="255-257", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_162 [label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="277-279", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_62 [label="Entry lambda expression", span="134-136", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_66 [label="Entry lambda expression", span="138-140", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_110 [label="Entry lambda expression", span="214-217", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_114 [label="Entry lambda expression", span="219-221", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_118 [label="Entry lambda expression", span="222-224", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_136 [label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="241-242", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_135 [label="Entry lambda expression", span="241-242", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_139 [label="Entry lambda expression", span="244-250", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_144 [label="Entry lambda expression", span="255-257", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_158 [label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="273-275", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_197 [label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="310-314", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_191 [label="Entry lambda expression", span="307-309", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_196 [label="Entry lambda expression", span="310-314", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_68 [label="Exit lambda expression", span="138-140", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_64 [label="Exit lambda expression", span="134-136", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_112 [label="Exit lambda expression", span="214-217", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_116 [label="Exit lambda expression", span="219-221", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_120 [label="Exit lambda expression", span="222-224", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_141 [label="Exit lambda expression", span="244-250", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_146 [label="Exit lambda expression", span="255-257", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_161 [label="Entry lambda expression", span="277-279", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_163 [label="Exit lambda expression", span="277-279", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_137 [label="Exit lambda expression", span="241-242", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_159 [label="Exit lambda expression", span="273-275", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_198 [label="Exit lambda expression", span="310-314", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_192 [label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="307-309", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_193 [label="Exit lambda expression", span="307-309", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m3_0 [label="Entry MvcSample.HangFireConfig.Start()", span="17-17", cluster="MvcSample.HangFireConfig.Start()", file="StorageConnectionExtensionsFacts.cs"];
m3_1 [label="var storage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.Sample;Trusted_Connection=True;'')", span="27-28", cluster="MvcSample.HangFireConfig.Start()", color=green, community=0, file="StorageConnectionExtensionsFacts.cs"];
m3_2 [label="storage.UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')", span="29-29", cluster="MvcSample.HangFireConfig.Start()", file="StorageConnectionExtensionsFacts.cs"];
m3_32 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StorageConnectionExtensionsFacts.cs"];
m3_125 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="StorageConnectionExtensionsFacts.cs"];
m3_40 [label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_49 [label="var transaction = Redis.CreateTransaction()", span="132-132", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_48 [label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="130-130", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_50 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="134-136", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_51 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="138-140", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_52 [label="transaction.Commit()", span="143-143", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_43 [label="var storedParameters = new Dictionary<string, string>(parameters)", span="125-125", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_47 [label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="129-129", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_41 [label="var jobId = Guid.NewGuid().ToString()", span="120-120", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_53 [label="return jobId;", span="146-146", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_42 [label="var invocationData = InvocationData.Serialize(job)", span="122-122", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_44 [label="storedParameters.Add(''Type'', invocationData.Type)", span="126-126", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_45 [label="storedParameters.Add(''Method'', invocationData.Method)", span="127-127", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_46 [label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="128-128", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_54 [label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m3_35 [label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_36 [label="return Redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="110-112", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_37 [label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="StorageConnectionExtensionsFacts.cs"];
m3_186 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="StorageConnectionExtensionsFacts.cs"];
m3_96 [label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="195-195", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_97 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="197-200", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_98 [label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="195-195", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="StorageConnectionExtensionsFacts.cs"];
m3_113 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="StorageConnectionExtensionsFacts.cs"];
m3_55 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="StorageConnectionExtensionsFacts.cs"];
m3_102 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="StorageConnectionExtensionsFacts.cs"];
m3_185 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="StorageConnectionExtensionsFacts.cs"];
m3_61 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StorageConnectionExtensionsFacts.cs"];
m3_95 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="StorageConnectionExtensionsFacts.cs"];
m3_94 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="StorageConnectionExtensionsFacts.cs"];
m3_194 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="StorageConnectionExtensionsFacts.cs"];
m3_195 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="StorageConnectionExtensionsFacts.cs"];
m3_124 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="StorageConnectionExtensionsFacts.cs"];
m3_60 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="StorageConnectionExtensionsFacts.cs"];
m3_31 [label="Entry Unk.PopAndPushItemBetweenLists", span="", cluster="Unk.PopAndPushItemBetweenLists", file="StorageConnectionExtensionsFacts.cs"];
m3_39 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="StorageConnectionExtensionsFacts.cs"];
m3_121 [label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="230-230", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StorageConnectionExtensionsFacts.cs"];
m3_122 [label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="232-234", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StorageConnectionExtensionsFacts.cs"];
m3_123 [label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="230-230", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StorageConnectionExtensionsFacts.cs"];
m3_92 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="StorageConnectionExtensionsFacts.cs"];
m3_203 [label="HangFire.Redis.RedisConnection", span="", file="StorageConnectionExtensionsFacts.cs"];
m3_204 [label=jobId, span="", file="StorageConnectionExtensionsFacts.cs"];
m3_206 [label="System.TimeSpan", span="", file="StorageConnectionExtensionsFacts.cs"];
m3_205 [label=storedParameters, span="", file="StorageConnectionExtensionsFacts.cs"];
m3_207 [label=string, span="", file="StorageConnectionExtensionsFacts.cs"];
m3_208 [label=string, span="", file="StorageConnectionExtensionsFacts.cs"];
m3_209 [label=string, span="", file="StorageConnectionExtensionsFacts.cs"];
m3_210 [label="HangFire.Server.ServerContext", span="", file="StorageConnectionExtensionsFacts.cs"];
m3_211 [label=queue1, span="", file="StorageConnectionExtensionsFacts.cs"];
m3_212 [label=string, span="", file="StorageConnectionExtensionsFacts.cs"];
m3_213 [label=name, span="", file="StorageConnectionExtensionsFacts.cs"];
m3_214 [label=heartbeats, span="", file="StorageConnectionExtensionsFacts.cs"];
d10 -> d11  [key=0, style=solid, color=green];
d10 -> d12  [key=2, style=dotted, color=green];
d144 -> d10  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d14  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d144 -> d141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d9 -> d10  [key=0, style=solid, color=green];
d11 -> d9  [key=0, style=bold, color=blue];
d14 -> d15  [key=0, style=solid, color=green];
d14 -> d16  [key=2, style=dotted, color=green];
d13 -> d14  [key=0, style=solid, color=green];
d15 -> d13  [key=0, style=bold, color=blue];
d5 -> d6  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [key=2, style=dotted];
d18 -> d21  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d21  [key=2, style=dotted];
d32 -> d43  [key=2, style=dotted];
d32 -> d44  [key=2, style=dotted];
d32 -> d45  [key=2, style=dotted];
d32 -> d38  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
d32 -> d39  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
d35 -> d35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
d35 -> d36  [key=0, style=solid];
d35 -> d46  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d56 -> d67  [key=2, style=dotted];
d56 -> d68  [key=2, style=dotted];
d56 -> d69  [key=2, style=dotted];
d56 -> d70  [key=2, style=dotted];
d56 -> d48  [key=2, style=dotted];
d56 -> d61  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d56 -> d64  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d63 -> d64  [key=0, style=solid];
d63 -> d71  [key=2, style=dotted];
d76 -> d77  [key=0, style=solid];
d76 -> d69  [key=2, style=dotted];
d76 -> d45  [key=2, style=dotted];
d76 -> d79  [key=1, style=dashed, color=darkseagreen4, label=jobData];
d76 -> d80  [key=1, style=dashed, color=darkseagreen4, label=jobData];
d76 -> d86  [key=1, style=dashed, color=darkseagreen4, label=jobData];
d95 -> d96  [key=0, style=solid];
d95 -> d71  [key=2, style=dotted];
d102 -> d103  [key=0, style=solid];
d102 -> d69  [key=2, style=dotted];
d102 -> d45  [key=2, style=dotted];
d109 -> d109  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d109 -> d110  [key=0, style=solid];
d109 -> d71  [key=2, style=dotted];
d116 -> d117  [key=0, style=solid];
d116 -> d69  [key=2, style=dotted];
d116 -> d45  [key=2, style=dotted];
d125 -> d126  [key=0, style=solid];
d125 -> d67  [key=2, style=dotted];
d125 -> d71  [key=2, style=dotted];
d131 -> d132  [key=0, style=solid];
d131 -> d71  [key=2, style=dotted];
d136 -> d137  [key=0, style=solid];
d136 -> d71  [key=2, style=dotted];
d141 -> d141  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d141 -> d142  [key=0, style=solid];
d141 -> d43  [key=2, style=dotted];
d141 -> d68  [key=2, style=dotted];
d141 -> d71  [key=2, style=dotted];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
d0 -> d6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
d3 -> d5  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d7 -> d0  [key=0, style=bold, color=blue];
d17 -> d18  [key=0, style=solid];
d19 -> d17  [key=0, style=bold, color=blue];
d22 -> d32  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
d22 -> d23  [key=0, style=solid];
d22 -> d25  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
d22 -> d31  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
d31 -> d32  [key=0, style=solid];
d31 -> d35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
d31 -> d31  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
d31 -> d42  [key=2, style=dotted];
d28 -> d32  [key=1, style=dashed, color=darkseagreen4, label=fetchJobSqlTemplate];
d28 -> d29  [key=0, style=solid];
d29 -> d32  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
d29 -> d30  [key=0, style=solid];
d29 -> d34  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
d29 -> d37  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
d30 -> d32  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
d30 -> d31  [key=0, style=solid];
d30 -> d34  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
d30 -> d37  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
d33 -> d34  [key=0, style=solid];
d33 -> d37  [key=0, style=solid];
d38 -> d30  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d39 -> d47  [key=2, style=dotted];
d39 -> d48  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d37  [key=0, style=solid];
d36 -> d36  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
d36 -> d37  [key=0, style=solid];
d36 -> d42  [key=2, style=dotted];
d49 -> d56  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d49 -> d50  [key=0, style=solid];
d49 -> d52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d49 -> d55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
d49 -> d57  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d49 -> d58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d49 -> d60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d55 -> d56  [key=0, style=solid];
d55 -> d66  [key=2, style=dotted];
d54 -> d56  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
d54 -> d55  [key=0, style=solid];
d57 -> d58  [key=0, style=solid];
d57 -> d64  [key=0, style=solid];
d61 -> d61  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
d61 -> d60  [key=0, style=solid];
d64 -> d65  [key=0, style=solid];
d58 -> d63  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
d58 -> d61  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
d58 -> d59  [key=0, style=solid];
d62 -> d63  [key=0, style=solid];
d72 -> d76  [key=1, style=dashed, color=darkseagreen4, label=string];
d72 -> d73  [key=0, style=solid];
d75 -> d76  [key=0, style=solid];
d77 -> d78  [key=0, style=solid];
d77 -> d79  [key=0, style=solid];
d79 -> d69  [key=2, style=dotted];
d79 -> d80  [key=0, style=solid];
d79 -> d83  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
d80 -> d81  [key=0, style=solid];
d86 -> d87  [key=0, style=solid];
d86 -> d89  [key=2, style=dotted];
d90 -> d95  [key=1, style=dashed, color=darkseagreen4, label=string];
d90 -> d91  [key=0, style=solid];
d90 -> d93  [key=1, style=dashed, color=darkseagreen4, label=string];
d93 -> d95  [key=0, style=solid];
d93 -> d94  [key=0, style=solid];
d96 -> d90  [key=0, style=bold, color=blue];
d97 -> d102  [key=1, style=dashed, color=darkseagreen4, label=string];
d97 -> d98  [key=0, style=solid];
d97 -> d100  [key=1, style=dashed, color=darkseagreen4, label=string];
d100 -> d102  [key=0, style=solid];
d100 -> d101  [key=0, style=solid];
d103 -> d97  [key=0, style=bold, color=blue];
d104 -> d109  [key=1, style=dashed, color=darkseagreen4, label=string];
d104 -> d105  [key=0, style=solid];
d104 -> d107  [key=1, style=dashed, color=darkseagreen4, label=string];
d107 -> d109  [key=0, style=solid];
d107 -> d108  [key=0, style=solid];
d110 -> d104  [key=0, style=bold, color=blue];
d111 -> d116  [key=1, style=dashed, color=darkseagreen4, label=string];
d111 -> d112  [key=0, style=solid];
d111 -> d114  [key=1, style=dashed, color=darkseagreen4, label=double];
d114 -> d116  [key=0, style=solid];
d114 -> d115  [key=0, style=solid];
d117 -> d111  [key=0, style=bold, color=blue];
d119 -> d125  [key=1, style=dashed, color=darkseagreen4, label=string];
d119 -> d120  [key=0, style=solid];
d119 -> d122  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
d119 -> d124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
d124 -> d125  [key=0, style=solid];
d124 -> d127  [key=2, style=dotted];
d126 -> d119  [key=0, style=bold, color=blue];
d128 -> d131  [key=1, style=dashed, color=darkseagreen4, label=string];
d128 -> d129  [key=0, style=solid];
d129 -> d131  [key=0, style=solid];
d129 -> d130  [key=0, style=solid];
d132 -> d128  [key=0, style=bold, color=blue];
d133 -> d136  [key=1, style=dashed, color=darkseagreen4, label=string];
d133 -> d134  [key=0, style=solid];
d134 -> d136  [key=0, style=solid];
d134 -> d135  [key=0, style=solid];
d137 -> d133  [key=0, style=bold, color=blue];
d139 -> d141  [key=0, style=solid];
d139 -> d139  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d139 -> d140  [key=0, style=solid];
d139 -> d143  [key=2, style=dotted];
d142 -> d138  [key=0, style=bold, color=blue];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d4 -> d7  [key=0, style=solid];
d4 -> d8  [key=2, style=dotted];
d2 -> d7  [key=0, style=solid];
d2 -> d8  [key=2, style=dotted];
d40 -> d22  [key=0, style=bold, color=blue];
d23 -> d24  [key=0, style=solid];
d23 -> d25  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d25 -> d27  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d37 -> d37  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
d65 -> d49  [key=0, style=bold, color=blue];
d50 -> d51  [key=0, style=solid];
d50 -> d52  [key=0, style=solid];
d52 -> d54  [key=0, style=solid];
d52 -> d53  [key=0, style=solid];
d60 -> d61  [key=0, style=solid];
d60 -> d62  [key=0, style=solid];
d59 -> d61  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
d59 -> d60  [key=0, style=solid];
d87 -> d72  [key=0, style=bold, color=blue];
d73 -> d75  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d78 -> d87  [key=0, style=solid];
d83 -> d86  [key=0, style=solid];
d83 -> d84  [key=0, style=solid];
d83 -> d88  [key=2, style=dotted];
d81 -> d82  [key=0, style=solid];
d85 -> d86  [key=0, style=solid];
d91 -> d93  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d94 -> d96  [key=0, style=solid];
d94 -> d8  [key=2, style=dotted];
d92 -> d96  [key=0, style=solid];
d92 -> d8  [key=2, style=dotted];
d98 -> d100  [key=0, style=solid];
d98 -> d99  [key=0, style=solid];
d101 -> d103  [key=0, style=solid];
d101 -> d8  [key=2, style=dotted];
d99 -> d103  [key=0, style=solid];
d99 -> d8  [key=2, style=dotted];
d105 -> d107  [key=0, style=solid];
d105 -> d106  [key=0, style=solid];
d108 -> d110  [key=0, style=solid];
d108 -> d8  [key=2, style=dotted];
d106 -> d110  [key=0, style=solid];
d106 -> d8  [key=2, style=dotted];
d112 -> d114  [key=0, style=solid];
d112 -> d113  [key=0, style=solid];
d115 -> d117  [key=0, style=solid];
d115 -> d118  [key=2, style=dotted];
d113 -> d117  [key=0, style=solid];
d113 -> d8  [key=2, style=dotted];
d120 -> d121  [key=0, style=solid];
d120 -> d122  [key=0, style=solid];
d122 -> d124  [key=0, style=solid];
d122 -> d123  [key=0, style=solid];
d121 -> d126  [key=0, style=solid];
d121 -> d8  [key=2, style=dotted];
d123 -> d126  [key=0, style=solid];
d123 -> d8  [key=2, style=dotted];
d130 -> d132  [key=0, style=solid];
d130 -> d8  [key=2, style=dotted];
d135 -> d137  [key=0, style=solid];
d135 -> d8  [key=2, style=dotted];
d138 -> d139  [key=0, style=solid];
d140 -> d142  [key=0, style=solid];
d140 -> d41  [key=2, style=dotted];
d24 -> d40  [key=0, style=solid];
d24 -> d8  [key=2, style=dotted];
d26 -> d40  [key=0, style=solid];
d26 -> d41  [key=2, style=dotted];
d51 -> d65  [key=0, style=solid];
d51 -> d8  [key=2, style=dotted];
d53 -> d65  [key=0, style=solid];
d53 -> d8  [key=2, style=dotted];
d74 -> d87  [key=0, style=solid];
d74 -> d8  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d84 -> d85  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid, color=green];
m2_6 -> m2_30  [key=2, style=dotted, color=green];
m2_6 -> m2_31  [key=2, style=dotted, color=green];
m2_6 -> m2_10  [key=1, style=dashed, color=green, label=hash];
m2_6 -> m2_11  [key=1, style=dashed, color=green, label=hash];
m2_6 -> m2_15  [key=1, style=dashed, color=green, label=hash];
m2_6 -> m2_16  [key=1, style=dashed, color=green, label=hash];
m2_6 -> m2_17  [key=1, style=dashed, color=green, label=hash];
m2_6 -> m2_18  [key=1, style=dashed, color=green, label=hash];
m2_6 -> m2_22  [key=1, style=dashed, color=green, label=hash];
m2_6 -> m2_23  [key=1, style=dashed, color=green, label=hash];
m2_7 -> m2_8  [key=0, style=solid, color=green];
m2_7 -> m2_9  [key=0, style=solid, color=green];
m2_8 -> m2_5  [key=0, style=solid, color=green];
m2_8 -> m2_32  [key=2, style=dotted];
m2_8 -> m2_33  [key=2, style=dotted];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_0 -> m2_4  [key=1, style=dashed, color=green, label="Hangfire.Storage.IStorageConnection"];
m2_0 -> m2_6  [key=1, style=dashed, color=green, label="Hangfire.Storage.IStorageConnection"];
m2_0 -> m2_3  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.List<Hangfire.Storage.RecurringJobDto> GetRecurringJobs"];
m2_0 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=storage];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_26  [key=0, style=solid, color=green];
m2_2 -> d8  [key=2, style=dotted, color=green];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_28  [key=2, style=dotted, color=green];
m2_3 -> m2_8  [key=1, style=dashed, color=green, label=result];
m2_3 -> m2_24  [key=1, style=dashed, color=green, label=result];
m2_3 -> m2_25  [key=1, style=dashed, color=green, label=result];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_29  [key=2, style=dotted, color=green];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid, color=green];
m2_5 -> m2_25  [key=0, style=solid, color=green];
m2_5 -> m2_8  [key=1, style=dashed, color=green, label=id];
m2_5 -> m2_9  [key=1, style=dashed, color=green, label=id];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=dto];
m2_9 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=dto];
m2_9 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=dto];
m2_9 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=dto];
m2_9 -> m2_32  [key=2, style=dotted];
m2_9 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=dto];
m2_9 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=dto];
m2_9 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=dto];
m2_9 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=dto];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=2, style=dotted];
m2_11 -> m2_9  [key=0, style=bold, color=blue];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_34  [key=2, style=dotted];
m2_12 -> m2_15  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_35  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=0, style=solid];
m2_15 -> m2_36  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_37  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_22  [key=0, style=solid];
m2_17 -> m2_36  [key=2, style=dotted];
m2_17 -> m2_38  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, style=solid];
m2_22 -> m2_36  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_37  [key=2, style=dotted];
m2_24 -> m2_5  [key=0, style=solid, color=green];
m2_24 -> m2_33  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_39  [key=2, style=dotted];
m2_19 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m2_14 -> m2_15  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_20 -> m2_22  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_26 -> m2_0  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid, color=green];
m3_4 -> m3_5  [key=0, style=solid, color=green];
m3_4 -> m3_6  [key=2, style=dotted, color=green];
m3_4 -> m3_8  [key=2, style=dotted];
m3_5 -> m3_3  [key=0, style=bold, color=blue];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m3_12 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m3_12 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m3_22 -> m3_24  [key=0, style=solid];
m3_22 -> m3_30  [key=2, style=dotted];
m3_22 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_22 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_31  [key=2, style=dotted];
m3_23 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_23 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> d21  [key=2, style=dotted];
m3_25 -> m3_32  [key=2, style=dotted];
m3_25 -> m3_33  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=0, style=solid];
m3_19 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
m3_19 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> d21  [key=2, style=dotted];
m3_20 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m3_20 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> d21  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_15  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_34  [key=2, style=dotted];
m3_17 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m3_17 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m3_17 -> m3_18  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m3_18 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m3_15 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m3_16 -> m3_28  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_27 -> m3_12  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [key=2, style=dotted];
m3_8 -> m3_11  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_180  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_185  [key=2, style=dotted];
m3_169 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_186  [key=2, style=dotted];
m3_172 -> m3_175  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m3_172 -> m3_176  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m3_181 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_151  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_142  [key=2, style=dotted];
m3_170 -> m3_175  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m3_170 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m3_170 -> m3_178  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_176  [key=0, style=solid];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_180  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m3_175 -> m3_173  [key=0, style=solid];
m3_175 -> m3_60  [key=2, style=dotted];
m3_175 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_175 -> m3_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_187  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_178  [key=0, style=solid];
m3_180 -> m3_190  [key=2, style=dotted];
m3_179 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_179  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m3_179 -> m3_188  [key=2, style=dotted];
m3_179 -> m3_189  [key=2, style=dotted];
m3_182 -> m3_182  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m3_182 -> m3_178  [key=0, style=solid];
m3_182 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_183  [key=0, style=solid];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=name];
m3_174 -> m3_192  [key=1, style=dashed, color=darkseagreen4, label=name];
m3_177 -> m3_182  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m3_183 -> m3_184  [key=0, style=solid];
m3_184 -> m3_168  [key=0, style=bold, color=blue];
m3_11 -> m3_9  [key=0, style=bold, color=blue];
m3_165 -> m3_166  [key=0, style=solid];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> d21  [key=2, style=dotted];
m3_166 -> m3_32  [key=2, style=dotted];
m3_166 -> m3_33  [key=2, style=dotted];
m3_167 -> m3_165  [key=0, style=bold, color=blue];
m3_154 -> m3_60  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_151 -> m3_158  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_151 -> m3_154  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_151 -> m3_162  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_152 -> m3_11  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_154  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_152 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_153 -> m3_60  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_155 -> m3_61  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_156 -> m3_151  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid];
m3_9 -> m3_7  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> d21  [key=2, style=dotted];
m3_100 -> m3_102  [key=2, style=dotted];
m3_101 -> m3_99  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_126 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_126 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_126 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_126 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m3_126 -> m3_132  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_126 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_11  [key=2, style=dotted];
m3_127 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_127 -> m3_132  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_127 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_60  [key=2, style=dotted];
m3_128 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_60  [key=2, style=dotted];
m3_129 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_132 -> m3_130  [key=0, style=solid];
m3_132 -> m3_60  [key=2, style=dotted];
m3_132 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_61  [key=2, style=dotted];
m3_130 -> m3_133  [key=0, style=solid];
m3_130 -> m3_131  [key=0, style=solid];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m3_134 -> m3_126  [key=0, style=bold, color=blue];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_60  [key=2, style=dotted];
m3_107 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_11  [key=2, style=dotted];
m3_104 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_104 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_104 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_103 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_103 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_103 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_103 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_103 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_60  [key=2, style=dotted];
m3_105 -> m3_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_60  [key=2, style=dotted];
m3_106 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_61  [key=2, style=dotted];
m3_109 -> m3_103  [key=0, style=bold, color=blue];
m3_148 -> m3_149  [key=0, style=solid];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_151  [key=2, style=dotted];
m3_150 -> m3_148  [key=0, style=bold, color=blue];
m3_70 -> m3_71  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> d21  [key=2, style=dotted];
m3_71 -> m3_91  [key=2, style=dotted];
m3_71 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m3_71 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m3_71 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m3_71 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m3_71 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m3_71 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m3_71 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m3_71 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_74  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_79  [key=0, style=solid];
m3_77 -> m3_92  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=type];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_81  [key=0, style=solid];
m3_79 -> m3_92  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=method];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_83  [key=0, style=solid];
m3_81 -> m3_92  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_93  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_95  [key=2, style=dotted];
m3_89 -> m3_92  [key=2, style=dotted];
m3_73 -> m3_90  [key=0, style=solid];
m3_74 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=type];
m3_74 -> m3_75  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m3_83 -> m3_84  [key=0, style=solid];
m3_75 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=method];
m3_75 -> m3_76  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_86 -> m3_89  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_94  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_90 -> m3_70  [key=0, style=bold, color=blue];
m3_157 -> m3_158  [key=0, style=solid];
m3_67 -> d21  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_69  [key=2, style=dotted];
m3_63 -> d21  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_65  [key=2, style=dotted];
m3_111 -> d21  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_113  [key=2, style=dotted];
m3_115 -> d21  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_117  [key=2, style=dotted];
m3_119 -> d21  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_117  [key=2, style=dotted];
m3_140 -> d21  [key=2, style=dotted];
m3_140 -> m3_32  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_142  [key=2, style=dotted];
m3_140 -> m3_143  [key=2, style=dotted];
m3_140 -> m3_65  [key=2, style=dotted];
m3_145 -> d21  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_147  [key=2, style=dotted];
m3_162 -> d21  [key=2, style=dotted];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_164  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_66 -> m3_67  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_118 -> m3_119  [key=0, style=solid];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_138  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_139 -> m3_140  [key=0, style=solid];
m3_144 -> m3_145  [key=0, style=solid];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_160  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_199  [key=2, style=dotted];
m3_197 -> m3_200  [key=2, style=dotted];
m3_197 -> m3_201  [key=2, style=dotted];
m3_197 -> m3_202  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_196 -> m3_197  [key=0, style=solid];
m3_68 -> m3_66  [key=0, style=bold, color=blue];
m3_64 -> m3_62  [key=0, style=bold, color=blue];
m3_112 -> m3_110  [key=0, style=bold, color=blue];
m3_116 -> m3_114  [key=0, style=bold, color=blue];
m3_120 -> m3_118  [key=0, style=bold, color=blue];
m3_141 -> m3_139  [key=0, style=bold, color=blue];
m3_146 -> m3_144  [key=0, style=bold, color=blue];
m3_161 -> m3_162  [key=0, style=solid];
m3_163 -> m3_161  [key=0, style=bold, color=blue];
m3_137 -> m3_135  [key=0, style=bold, color=blue];
m3_159 -> m3_157  [key=0, style=bold, color=blue];
m3_198 -> m3_196  [key=0, style=bold, color=blue];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_194  [key=2, style=dotted];
m3_192 -> m3_195  [key=2, style=dotted];
m3_193 -> m3_191  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=storage];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_40 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m3_40 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m3_40 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_11  [key=2, style=dotted];
m3_49 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_49 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_32  [key=2, style=dotted];
m3_48 -> m3_59  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_60  [key=2, style=dotted];
m3_50 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_60  [key=2, style=dotted];
m3_51 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_61  [key=2, style=dotted];
m3_43 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m3_43 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m3_43 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_58  [key=2, style=dotted];
m3_43 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m3_43 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m3_43 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_59  [key=2, style=dotted];
m3_41 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_41 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_41 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_41 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_55  [key=2, style=dotted];
m3_41 -> m3_56  [key=2, style=dotted];
m3_41 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_53 -> m3_54  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m3_42 -> m3_57  [key=2, style=dotted];
m3_42 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m3_42 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m3_42 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m3_44 -> m3_59  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_59  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_59  [key=2, style=dotted];
m3_54 -> m3_40  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> d21  [key=2, style=dotted];
m3_36 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_39  [key=2, style=dotted];
m3_37 -> m3_35  [key=0, style=bold, color=blue];
m3_96 -> m3_97  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> d21  [key=2, style=dotted];
m3_97 -> m3_33  [key=2, style=dotted];
m3_98 -> m3_96  [key=0, style=bold, color=blue];
m3_121 -> m3_122  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_124  [key=2, style=dotted];
m3_122 -> m3_125  [key=2, style=dotted];
m3_123 -> m3_121  [key=0, style=bold, color=blue];
m3_203 -> m3_1  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_4  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_203 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m3_204 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_204 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_206 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m3_205 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m3_207 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_207 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_207 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_208 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_209 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_209 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_209 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_210 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m3_211 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m3_212 -> m3_162  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_212 -> m3_158  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_213 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=name];
m3_213 -> m3_192  [key=1, style=dashed, color=darkseagreen4, label=name];
m3_214 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
}
