digraph  {
n860 [label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", span=""];
n861 [label=arrangeSql, span=""];
n862 [label=jobId, span=""];
n863 [label=arrangeSql, span=""];
n864 [label=jobId, span=""];
n865 [label=arrangeSql, span=""];
n866 [label=jobId, span=""];
n867 [label=state, span=""];
n868 [label=arrangeSql, span=""];
n869 [label=jobId, span=""];
n870 [label=state, span=""];
n871 [label=correctJobQueue, span=""];
n872 [label=SqlConnection, span=""];
n873 [label=SqlConnection, span=""];
n874 [label=SqlConnection, span=""];
n875 [label=SqlConnection, span=""];
n876 [label=SqlConnection, span=""];
n877 [label=items, span=""];
n878 [label=SqlConnection, span=""];
n879 [label=arrangeSql, span=""];
n880 [label=SqlConnection, span=""];
n881 [label=arrangeSql, span=""];
n882 [label=SqlConnection, span=""];
n883 [label=arrangeSql, span=""];
n884 [label=SqlConnection, span=""];
n885 [label=arrangeSql, span=""];
n886 [label=SqlConnection, span=""];
n887 [label=arrangeSql, span=""];
n888 [label=SqlConnection, span=""];
n889 [label=arrangeSql, span=""];
n890 [label=SqlConnection, span=""];
n891 [label=arrangeSql, span=""];
n0 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="18-18", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()"];
n1 [label="var defaultProvider = new Mock<IPersistentJobQueueProvider>()", span="20-20", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()"];
n2 [label="defaultProvider.Setup(x => x.GetJobQueue())\r\n                .Returns(new Mock<IPersistentJobQueue>().Object)", span="21-22", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()"];
n5 [label="Entry Mock<IPersistentJobQueueProvider>.cstr", span="", cluster="Mock<IPersistentJobQueueProvider>.cstr"];
n3 [label="_queueProviders = new PersistentJobQueueProviderCollection(defaultProvider.Object)", span="24-24", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()"];
n6 [label="Entry Unk.Setup", span="", cluster="Unk.Setup"];
n7 [label="Entry Mock<IPersistentJobQueue>.cstr", span="", cluster="Mock<IPersistentJobQueue>.cstr"];
n8 [label="Entry Unk.Returns", span="", cluster="Unk.Returns"];
n10 [label="Entry lambda expression", span="21-21", cluster="lambda expression"];
n4 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="18-18", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()"];
n9 [label="Entry PersistentJobQueueProviderCollection.cstr", span="", cluster="PersistentJobQueueProviderCollection.cstr"];
n11 [label="x.GetJobQueue()", span="21-21", cluster="lambda expression"];
n12 [label="Exit lambda expression", span="21-21", cluster="lambda expression"];
n13 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue"];
n14 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()", span="28-28", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()"];
n15 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null))", span="30-31", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()"];
n16 [label="Assert.Equal(''storage'', exception.ParamName)", span="33-33", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()"];
n18 [label="Entry Unk.>", span="", cluster="Unk.>"];
n20 [label="Entry lambda expression", span="31-31", cluster="lambda expression"];
n17 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()", span="28-28", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfStorageIsNull()"];
n19 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n21 [label="new SqlServerWriteOnlyTransaction(null)", span="31-31", cluster="lambda expression"];
n22 [label="Exit lambda expression", span="31-31", cluster="lambda expression"];
n23 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="42-42", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)"];
n24 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="37-37", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()"];
n25 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="39-42", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()"];
n26 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="44-56", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()"];
n30 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="46-46", cluster="lambda expression"];
n31 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="47-47", cluster="lambda expression"];
n27 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="37-37", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()"];
n28 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection"];
n29 [label="Entry lambda expression", span="44-56", cluster="lambda expression"];
n32 [label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="49-49", cluster="lambda expression"];
n33 [label="var job = GetTestJob(sql, jobId)", span="51-51", cluster="lambda expression"];
n35 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="54-54", cluster="lambda expression"];
n38 [label="Entry Unk.Query", span="", cluster="Unk.Query"];
n39 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n40 [label="Entry Unk.ToString", span="", cluster="Unk.ToString"];
n48 [label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="49-49", cluster="lambda expression"];
n41 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", span="972-972", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)"];
n47 [label="Entry lambda expression", span="49-49", cluster="lambda expression"];
n34 [label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1))", span="52-52", cluster="lambda expression"];
n42 [label="Entry Unk.GetTestJob", span="", cluster="Unk.GetTestJob"];
n43 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)"];
n44 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)"];
n45 [label="Entry Unk.True", span="", cluster="Unk.True"];
n36 [label="Assert.Null(anotherJob.ExpireAt)", span="55-55", cluster="lambda expression"];
n37 [label="Exit lambda expression", span="44-56", cluster="lambda expression"];
n46 [label="Entry Unk.Null", span="", cluster="Unk.Null"];
n49 [label="Exit lambda expression", span="49-49", cluster="lambda expression"];
n50 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
n51 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob"];
n52 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="60-60", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()"];
n53 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="62-65", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()"];
n54 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="67-79", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()"];
n57 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="69-69", cluster="lambda expression"];
n58 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="70-70", cluster="lambda expression"];
n55 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="60-60", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()"];
n56 [label="Entry lambda expression", span="67-79", cluster="lambda expression"];
n59 [label="Commit(sql, x => x.PersistJob(jobId))", span="72-72", cluster="lambda expression"];
n60 [label="var job = GetTestJob(sql, jobId)", span="74-74", cluster="lambda expression"];
n62 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="77-77", cluster="lambda expression"];
n67 [label="x.PersistJob(jobId)", span="72-72", cluster="lambda expression"];
n66 [label="Entry lambda expression", span="72-72", cluster="lambda expression"];
n61 [label="Assert.Null(job.ExpireAt)", span="75-75", cluster="lambda expression"];
n63 [label="Assert.NotNull(anotherJob.ExpireAt)", span="78-78", cluster="lambda expression"];
n64 [label="Exit lambda expression", span="67-79", cluster="lambda expression"];
n65 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull"];
n68 [label="Exit lambda expression", span="72-72", cluster="lambda expression"];
n69 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob"];
n70 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="83-83", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()"];
n71 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="85-88", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()"];
n72 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="90-117", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()"];
n75 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="92-92", cluster="lambda expression"];
n76 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="93-93", cluster="lambda expression"];
n73 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="83-83", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()"];
n74 [label="Entry lambda expression", span="90-117", cluster="lambda expression"];
n81 [label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="101-101", cluster="lambda expression"];
n82 [label="var job = GetTestJob(sql, jobId)", span="103-103", cluster="lambda expression"];
n85 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="107-107", cluster="lambda expression"];
n88 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="111-111", cluster="lambda expression"];
n108 [label="x.SetJobState(jobId, state.Object)", span="101-101", cluster="lambda expression"];
n89 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="112-112", cluster="lambda expression"];
n77 [label="var state = new Mock<IState>()", span="95-95", cluster="lambda expression"];
n78 [label="state.Setup(x => x.Name).Returns(''State'')", span="96-96", cluster="lambda expression"];
n95 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr"];
n79 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="97-97", cluster="lambda expression"];
n80 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="98-99", cluster="lambda expression"];
n97 [label="Entry lambda expression", span="96-96", cluster="lambda expression"];
n100 [label="Entry lambda expression", span="97-97", cluster="lambda expression"];
n96 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n103 [label="Entry lambda expression", span="98-98", cluster="lambda expression"];
n107 [label="Entry lambda expression", span="101-101", cluster="lambda expression"];
n83 [label="Assert.Equal(''State'', job.StateName)", span="104-104", cluster="lambda expression"];
n84 [label="Assert.NotNull(job.StateId)", span="105-105", cluster="lambda expression"];
n86 [label="Assert.Null(anotherJob.StateName)", span="108-108", cluster="lambda expression"];
n87 [label="Assert.Null(anotherJob.StateId)", span="109-109", cluster="lambda expression"];
n90 [label="Assert.Equal(''State'', jobState.Name)", span="113-113", cluster="lambda expression"];
n91 [label="Assert.Equal(''Reason'', jobState.Reason)", span="114-114", cluster="lambda expression"];
n92 [label="Assert.NotNull(jobState.CreatedAt)", span="115-115", cluster="lambda expression"];
n93 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="116-116", cluster="lambda expression"];
n94 [label="Exit lambda expression", span="90-117", cluster="lambda expression"];
n98 [label="x.Name", span="96-96", cluster="lambda expression"];
n99 [label="Exit lambda expression", span="96-96", cluster="lambda expression"];
n101 [label="x.Reason", span="97-97", cluster="lambda expression"];
n102 [label="Exit lambda expression", span="97-97", cluster="lambda expression"];
n104 [label="x.SerializeData()", span="98-98", cluster="lambda expression"];
n105 [label="Exit lambda expression", span="98-98", cluster="lambda expression"];
n106 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData"];
n109 [label="Exit lambda expression", span="101-101", cluster="lambda expression"];
n110 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState"];
n111 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()"];
n112 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="123-126", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()"];
n113 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="128-150", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()"];
n116 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="130-130", cluster="lambda expression"];
n114 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()"];
n115 [label="Entry lambda expression", span="128-150", cluster="lambda expression"];
n121 [label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="138-138", cluster="lambda expression"];
n122 [label="var job = GetTestJob(sql, jobId)", span="140-140", cluster="lambda expression"];
n125 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="144-144", cluster="lambda expression"];
n117 [label="var state = new Mock<IState>()", span="132-132", cluster="lambda expression"];
n142 [label="x.AddJobState(jobId, state.Object)", span="138-138", cluster="lambda expression"];
n126 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="145-145", cluster="lambda expression"];
n118 [label="state.Setup(x => x.Name).Returns(''State'')", span="133-133", cluster="lambda expression"];
n119 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="134-134", cluster="lambda expression"];
n120 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="135-136", cluster="lambda expression"];
n132 [label="Entry lambda expression", span="133-133", cluster="lambda expression"];
n135 [label="Entry lambda expression", span="134-134", cluster="lambda expression"];
n138 [label="Entry lambda expression", span="135-135", cluster="lambda expression"];
n141 [label="Entry lambda expression", span="138-138", cluster="lambda expression"];
n123 [label="Assert.Null(job.StateName)", span="141-141", cluster="lambda expression"];
n124 [label="Assert.Null(job.StateId)", span="142-142", cluster="lambda expression"];
n127 [label="Assert.Equal(''State'', jobState.Name)", span="146-146", cluster="lambda expression"];
n128 [label="Assert.Equal(''Reason'', jobState.Reason)", span="147-147", cluster="lambda expression"];
n129 [label="Assert.NotNull(jobState.CreatedAt)", span="148-148", cluster="lambda expression"];
n130 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="149-149", cluster="lambda expression"];
n131 [label="Exit lambda expression", span="128-150", cluster="lambda expression"];
n133 [label="x.Name", span="133-133", cluster="lambda expression"];
n134 [label="Exit lambda expression", span="133-133", cluster="lambda expression"];
n136 [label="x.Reason", span="134-134", cluster="lambda expression"];
n137 [label="Exit lambda expression", span="134-134", cluster="lambda expression"];
n139 [label="x.SerializeData()", span="135-135", cluster="lambda expression"];
n140 [label="Exit lambda expression", span="135-135", cluster="lambda expression"];
n143 [label="Exit lambda expression", span="138-138", cluster="lambda expression"];
n144 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState"];
n145 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="154-154", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()"];
n146 [label="var correctJobQueue = new Mock<IPersistentJobQueue>()", span="156-156", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()"];
n147 [label="var correctProvider = new Mock<IPersistentJobQueueProvider>()", span="157-157", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()"];
n148 [label="correctProvider.Setup(x => x.GetJobQueue())\r\n                .Returns(correctJobQueue.Object)", span="158-159", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()"];
n150 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                correctJobQueue.Verify(x => x.Enqueue(It.IsNotNull<IDbConnection>(), ''default'', ''1''));\r\n            })", span="163-168", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()"];
n159 [label="correctJobQueue.Verify(x => x.Enqueue(It.IsNotNull<IDbConnection>(), ''default'', ''1''))", span="167-167", cluster="lambda expression"];
n149 [label="_queueProviders.Add(correctProvider.Object, new[] { ''default'' })", span="161-161", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()"];
n154 [label="Entry lambda expression", span="158-158", cluster="lambda expression"];
n152 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
n151 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="154-154", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()"];
n153 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="964-964", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)"];
n157 [label="Entry lambda expression", span="163-168", cluster="lambda expression"];
n155 [label="x.GetJobQueue()", span="158-158", cluster="lambda expression"];
n156 [label="Exit lambda expression", span="158-158", cluster="lambda expression"];
n158 [label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="165-165", cluster="lambda expression"];
n162 [label="Entry lambda expression", span="165-165", cluster="lambda expression"];
n160 [label="Exit lambda expression", span="163-168", cluster="lambda expression"];
n161 [label="Entry Unk.Verify", span="", cluster="Unk.Verify"];
n166 [label="Entry lambda expression", span="167-167", cluster="lambda expression"];
n163 [label="x.AddToQueue(''default'', ''1'')", span="165-165", cluster="lambda expression"];
n164 [label="Exit lambda expression", span="165-165", cluster="lambda expression"];
n165 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="135-135", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)"];
n167 [label="x.Enqueue(It.IsNotNull<IDbConnection>(), ''default'', ''1'')", span="167-167", cluster="lambda expression"];
n168 [label="Exit lambda expression", span="167-167", cluster="lambda expression"];
n169 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue"];
n170 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="171-171", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)"];
n171 [label="return connection\r\n                .Query(''select * from HangFire.Job where Id = @id'', new { id = jobId })\r\n                .Single();", span="173-175", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)"];
n172 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="171-171", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)"];
n173 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="179-179", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()"];
n174 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="181-190", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()"];
n175 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="179-179", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()"];
n176 [label="Entry lambda expression", span="181-190", cluster="lambda expression"];
n177 [label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="183-183", cluster="lambda expression"];
n178 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="185-185", cluster="lambda expression"];
n183 [label="Entry lambda expression", span="183-183", cluster="lambda expression"];
n179 [label="Assert.Equal(''my-key'', record.Key)", span="187-187", cluster="lambda expression"];
n180 [label="Assert.Equal(1, record.Value)", span="188-188", cluster="lambda expression"];
n181 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="189-189", cluster="lambda expression"];
n182 [label="Exit lambda expression", span="181-190", cluster="lambda expression"];
n184 [label="x.IncrementCounter(''my-key'')", span="183-183", cluster="lambda expression"];
n185 [label="Exit lambda expression", span="183-183", cluster="lambda expression"];
n186 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="154-154", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)"];
n187 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="194-194", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()"];
n188 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="196-210", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()"];
n189 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="194-194", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()"];
n190 [label="Entry lambda expression", span="196-210", cluster="lambda expression"];
n191 [label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="198-198", cluster="lambda expression"];
n192 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="200-200", cluster="lambda expression"];
n201 [label="Entry lambda expression", span="198-198", cluster="lambda expression"];
n193 [label="Assert.Equal(''my-key'', record.Key)", span="202-202", cluster="lambda expression"];
n194 [label="Assert.Equal(1, record.Value)", span="203-203", cluster="lambda expression"];
n195 [label="Assert.NotNull(record.ExpireAt)", span="204-204", cluster="lambda expression"];
n196 [label="var expireAt = (DateTime) record.ExpireAt", span="206-206", cluster="lambda expression"];
n197 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="208-208", cluster="lambda expression"];
n198 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="209-209", cluster="lambda expression"];
n200 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)"];
n199 [label="Exit lambda expression", span="196-210", cluster="lambda expression"];
n202 [label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="198-198", cluster="lambda expression"];
n203 [label="Exit lambda expression", span="198-198", cluster="lambda expression"];
n204 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="163-163", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)"];
n205 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="214-214", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()"];
n206 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="216-227", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()"];
n207 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="214-214", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()"];
n208 [label="Entry lambda expression", span="216-227", cluster="lambda expression"];
n209 [label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="218-222", cluster="lambda expression"];
n210 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="224-224", cluster="lambda expression"];
n213 [label="Entry lambda expression", span="218-222", cluster="lambda expression"];
n211 [label="Assert.Equal(2, recordCount)", span="226-226", cluster="lambda expression"];
n212 [label="Exit lambda expression", span="216-227", cluster="lambda expression"];
n214 [label="x.IncrementCounter(''my-key'')", span="220-220", cluster="lambda expression"];
n215 [label="x.IncrementCounter(''my-key'')", span="221-221", cluster="lambda expression"];
n216 [label="Exit lambda expression", span="218-222", cluster="lambda expression"];
n217 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="231-231", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()"];
n218 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="233-242", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()"];
n219 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="231-231", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()"];
n220 [label="Entry lambda expression", span="233-242", cluster="lambda expression"];
n221 [label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="235-235", cluster="lambda expression"];
n222 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="237-237", cluster="lambda expression"];
n227 [label="Entry lambda expression", span="235-235", cluster="lambda expression"];
n223 [label="Assert.Equal(''my-key'', record.Key)", span="239-239", cluster="lambda expression"];
n224 [label="Assert.Equal(-1, record.Value)", span="240-240", cluster="lambda expression"];
n225 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="241-241", cluster="lambda expression"];
n226 [label="Exit lambda expression", span="233-242", cluster="lambda expression"];
n228 [label="x.DecrementCounter(''my-key'')", span="235-235", cluster="lambda expression"];
n229 [label="Exit lambda expression", span="235-235", cluster="lambda expression"];
n230 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="172-172", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)"];
n231 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="246-246", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()"];
n232 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="248-262", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()"];
n233 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="246-246", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()"];
n234 [label="Entry lambda expression", span="248-262", cluster="lambda expression"];
n235 [label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="250-250", cluster="lambda expression"];
n236 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="252-252", cluster="lambda expression"];
n244 [label="Entry lambda expression", span="250-250", cluster="lambda expression"];
n237 [label="Assert.Equal(''my-key'', record.Key)", span="254-254", cluster="lambda expression"];
n238 [label="Assert.Equal(-1, record.Value)", span="255-255", cluster="lambda expression"];
n239 [label="Assert.NotNull(record.ExpireAt)", span="256-256", cluster="lambda expression"];
n240 [label="var expireAt = (DateTime)record.ExpireAt", span="258-258", cluster="lambda expression"];
n241 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="260-260", cluster="lambda expression"];
n242 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="261-261", cluster="lambda expression"];
n243 [label="Exit lambda expression", span="248-262", cluster="lambda expression"];
n245 [label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="250-250", cluster="lambda expression"];
n246 [label="Exit lambda expression", span="250-250", cluster="lambda expression"];
n247 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="181-181", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)"];
n248 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="266-266", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()"];
n249 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="268-279", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()"];
n250 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="266-266", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()"];
n251 [label="Entry lambda expression", span="268-279", cluster="lambda expression"];
n252 [label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="270-274", cluster="lambda expression"];
n253 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="276-276", cluster="lambda expression"];
n256 [label="Entry lambda expression", span="270-274", cluster="lambda expression"];
n254 [label="Assert.Equal(2, recordCount)", span="278-278", cluster="lambda expression"];
n255 [label="Exit lambda expression", span="268-279", cluster="lambda expression"];
n257 [label="x.DecrementCounter(''my-key'')", span="272-272", cluster="lambda expression"];
n258 [label="x.DecrementCounter(''my-key'')", span="273-273", cluster="lambda expression"];
n259 [label="Exit lambda expression", span="270-274", cluster="lambda expression"];
n260 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="283-283", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()"];
n261 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="285-294", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()"];
n262 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="283-283", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()"];
n263 [label="Entry lambda expression", span="285-294", cluster="lambda expression"];
n264 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="287-287", cluster="lambda expression"];
n265 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="289-289", cluster="lambda expression"];
n270 [label="Entry lambda expression", span="287-287", cluster="lambda expression"];
n266 [label="Assert.Equal(''my-key'', record.Key)", span="291-291", cluster="lambda expression"];
n267 [label="Assert.Equal(''my-value'', record.Value)", span="292-292", cluster="lambda expression"];
n268 [label="Assert.Equal(0.0, record.Score, 2)", span="293-293", cluster="lambda expression"];
n269 [label="Exit lambda expression", span="285-294", cluster="lambda expression"];
n271 [label="x.AddToSet(''my-key'', ''my-value'')", span="287-287", cluster="lambda expression"];
n272 [label="Exit lambda expression", span="287-287", cluster="lambda expression"];
n273 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="190-190", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)"];
n274 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="298-298", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()"];
n275 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="300-311", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()"];
n276 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="298-298", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()"];
n277 [label="Entry lambda expression", span="300-311", cluster="lambda expression"];
n278 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="302-306", cluster="lambda expression"];
n279 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="308-308", cluster="lambda expression"];
n282 [label="Entry lambda expression", span="302-306", cluster="lambda expression"];
n280 [label="Assert.Equal(2, recordCount)", span="310-310", cluster="lambda expression"];
n281 [label="Exit lambda expression", span="300-311", cluster="lambda expression"];
n283 [label="x.AddToSet(''my-key'', ''my-value'')", span="304-304", cluster="lambda expression"];
n284 [label="x.AddToSet(''my-key'', ''another-value'')", span="305-305", cluster="lambda expression"];
n285 [label="Exit lambda expression", span="302-306", cluster="lambda expression"];
n286 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="315-315", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()"];
n287 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="317-328", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()"];
n288 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="315-315", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()"];
n289 [label="Entry lambda expression", span="317-328", cluster="lambda expression"];
n290 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="319-323", cluster="lambda expression"];
n291 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="325-325", cluster="lambda expression"];
n294 [label="Entry lambda expression", span="319-323", cluster="lambda expression"];
n292 [label="Assert.Equal(1, recordCount)", span="327-327", cluster="lambda expression"];
n293 [label="Exit lambda expression", span="317-328", cluster="lambda expression"];
n295 [label="x.AddToSet(''my-key'', ''my-value'')", span="321-321", cluster="lambda expression"];
n296 [label="x.AddToSet(''my-key'', ''my-value'')", span="322-322", cluster="lambda expression"];
n297 [label="Exit lambda expression", span="319-323", cluster="lambda expression"];
n298 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="332-332", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()"];
n299 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="334-343", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()"];
n300 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="332-332", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()"];
n301 [label="Entry lambda expression", span="334-343", cluster="lambda expression"];
n302 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="336-336", cluster="lambda expression"];
n303 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="338-338", cluster="lambda expression"];
n308 [label="Entry lambda expression", span="336-336", cluster="lambda expression"];
n304 [label="Assert.Equal(''my-key'', record.Key)", span="340-340", cluster="lambda expression"];
n305 [label="Assert.Equal(''my-value'', record.Value)", span="341-341", cluster="lambda expression"];
n306 [label="Assert.Equal(3.2, record.Score, 3)", span="342-342", cluster="lambda expression"];
n307 [label="Exit lambda expression", span="334-343", cluster="lambda expression"];
n309 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="336-336", cluster="lambda expression"];
n310 [label="Exit lambda expression", span="336-336", cluster="lambda expression"];
n311 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="195-195", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)"];
n312 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="347-347", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()"];
n313 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="349-360", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()"];
n314 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="347-347", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()"];
n315 [label="Entry lambda expression", span="349-360", cluster="lambda expression"];
n316 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="351-355", cluster="lambda expression"];
n317 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="357-357", cluster="lambda expression"];
n320 [label="Entry lambda expression", span="351-355", cluster="lambda expression"];
n318 [label="Assert.Equal(3.2, record.Score, 3)", span="359-359", cluster="lambda expression"];
n319 [label="Exit lambda expression", span="349-360", cluster="lambda expression"];
n321 [label="x.AddToSet(''my-key'', ''my-value'')", span="353-353", cluster="lambda expression"];
n322 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="354-354", cluster="lambda expression"];
n323 [label="Exit lambda expression", span="351-355", cluster="lambda expression"];
n324 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="364-364", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()"];
n325 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="366-377", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()"];
n326 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="364-364", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()"];
n327 [label="Entry lambda expression", span="366-377", cluster="lambda expression"];
n328 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="368-372", cluster="lambda expression"];
n329 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="374-374", cluster="lambda expression"];
n332 [label="Entry lambda expression", span="368-372", cluster="lambda expression"];
n330 [label="Assert.Equal(0, recordCount)", span="376-376", cluster="lambda expression"];
n331 [label="Exit lambda expression", span="366-377", cluster="lambda expression"];
n333 [label="x.AddToSet(''my-key'', ''my-value'')", span="370-370", cluster="lambda expression"];
n334 [label="x.RemoveFromSet(''my-key'', ''my-value'')", span="371-371", cluster="lambda expression"];
n335 [label="Exit lambda expression", span="368-372", cluster="lambda expression"];
n336 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="212-212", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)"];
n337 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="381-381", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()"];
n338 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="383-394", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()"];
n339 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="381-381", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()"];
n340 [label="Entry lambda expression", span="383-394", cluster="lambda expression"];
n341 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="385-389", cluster="lambda expression"];
n342 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="391-391", cluster="lambda expression"];
n345 [label="Entry lambda expression", span="385-389", cluster="lambda expression"];
n343 [label="Assert.Equal(1, recordCount)", span="393-393", cluster="lambda expression"];
n344 [label="Exit lambda expression", span="383-394", cluster="lambda expression"];
n346 [label="x.AddToSet(''my-key'', ''my-value'')", span="387-387", cluster="lambda expression"];
n347 [label="x.RemoveFromSet(''my-key'', ''different-value'')", span="388-388", cluster="lambda expression"];
n348 [label="Exit lambda expression", span="385-389", cluster="lambda expression"];
n349 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="398-398", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()"];
n350 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="400-411", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()"];
n351 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="398-398", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()"];
n352 [label="Entry lambda expression", span="400-411", cluster="lambda expression"];
n353 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="402-406", cluster="lambda expression"];
n354 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="408-408", cluster="lambda expression"];
n357 [label="Entry lambda expression", span="402-406", cluster="lambda expression"];
n355 [label="Assert.Equal(1, recordCount)", span="410-410", cluster="lambda expression"];
n356 [label="Exit lambda expression", span="400-411", cluster="lambda expression"];
n358 [label="x.AddToSet(''my-key'', ''my-value'')", span="404-404", cluster="lambda expression"];
n359 [label="x.RemoveFromSet(''different-key'', ''my-value'')", span="405-405", cluster="lambda expression"];
n360 [label="Exit lambda expression", span="402-406", cluster="lambda expression"];
n361 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="415-415", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()"];
n362 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="417-425", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()"];
n363 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="415-415", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()"];
n364 [label="Entry lambda expression", span="417-425", cluster="lambda expression"];
n365 [label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="419-419", cluster="lambda expression"];
n366 [label="var record = sql.Query(''select * from HangFire.List'').Single()", span="421-421", cluster="lambda expression"];
n370 [label="Entry lambda expression", span="419-419", cluster="lambda expression"];
n367 [label="Assert.Equal(''my-key'', record.Key)", span="423-423", cluster="lambda expression"];
n368 [label="Assert.Equal(''my-value'', record.Value)", span="424-424", cluster="lambda expression"];
n369 [label="Exit lambda expression", span="417-425", cluster="lambda expression"];
n371 [label="x.InsertToList(''my-key'', ''my-value'')", span="419-419", cluster="lambda expression"];
n372 [label="Exit lambda expression", span="419-419", cluster="lambda expression"];
n373 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="224-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)"];
n374 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="429-429", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()"];
n375 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="431-442", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()"];
n376 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="429-429", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()"];
n377 [label="Entry lambda expression", span="431-442", cluster="lambda expression"];
n378 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="433-437", cluster="lambda expression"];
n379 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="439-439", cluster="lambda expression"];
n382 [label="Entry lambda expression", span="433-437", cluster="lambda expression"];
n380 [label="Assert.Equal(2, recordCount)", span="441-441", cluster="lambda expression"];
n381 [label="Exit lambda expression", span="431-442", cluster="lambda expression"];
n383 [label="x.InsertToList(''my-key'', ''my-value'')", span="435-435", cluster="lambda expression"];
n384 [label="x.InsertToList(''my-key'', ''my-value'')", span="436-436", cluster="lambda expression"];
n385 [label="Exit lambda expression", span="433-437", cluster="lambda expression"];
n386 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="446-446", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()"];
n387 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="448-460", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()"];
n388 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="446-446", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()"];
n389 [label="Entry lambda expression", span="448-460", cluster="lambda expression"];
n390 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="450-455", cluster="lambda expression"];
n391 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="457-457", cluster="lambda expression"];
n394 [label="Entry lambda expression", span="450-455", cluster="lambda expression"];
n392 [label="Assert.Equal(0, recordCount)", span="459-459", cluster="lambda expression"];
n393 [label="Exit lambda expression", span="448-460", cluster="lambda expression"];
n395 [label="x.InsertToList(''my-key'', ''my-value'')", span="452-452", cluster="lambda expression"];
n396 [label="x.InsertToList(''my-key'', ''my-value'')", span="453-453", cluster="lambda expression"];
n397 [label="x.RemoveFromList(''my-key'', ''my-value'')", span="454-454", cluster="lambda expression"];
n398 [label="Exit lambda expression", span="450-455", cluster="lambda expression"];
n399 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="234-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)"];
n400 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="464-464", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()"];
n401 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="466-477", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()"];
n402 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="464-464", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()"];
n403 [label="Entry lambda expression", span="466-477", cluster="lambda expression"];
n404 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="468-472", cluster="lambda expression"];
n405 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="474-474", cluster="lambda expression"];
n408 [label="Entry lambda expression", span="468-472", cluster="lambda expression"];
n406 [label="Assert.Equal(1, recordCount)", span="476-476", cluster="lambda expression"];
n407 [label="Exit lambda expression", span="466-477", cluster="lambda expression"];
n409 [label="x.InsertToList(''my-key'', ''my-value'')", span="470-470", cluster="lambda expression"];
n410 [label="x.RemoveFromList(''my-key'', ''different-value'')", span="471-471", cluster="lambda expression"];
n411 [label="Exit lambda expression", span="468-472", cluster="lambda expression"];
n412 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="481-481", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()"];
n413 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="483-494", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()"];
n414 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="481-481", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()"];
n415 [label="Entry lambda expression", span="483-494", cluster="lambda expression"];
n416 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="485-489", cluster="lambda expression"];
n417 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="491-491", cluster="lambda expression"];
n420 [label="Entry lambda expression", span="485-489", cluster="lambda expression"];
n418 [label="Assert.Equal(1, recordCount)", span="493-493", cluster="lambda expression"];
n419 [label="Exit lambda expression", span="483-494", cluster="lambda expression"];
n421 [label="x.InsertToList(''my-key'', ''my-value'')", span="487-487", cluster="lambda expression"];
n422 [label="x.RemoveFromList(''different-key'', ''my-value'')", span="488-488", cluster="lambda expression"];
n423 [label="Exit lambda expression", span="485-489", cluster="lambda expression"];
n424 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="498-498", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()"];
n425 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="500-516", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()"];
n426 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="498-498", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()"];
n427 [label="Entry lambda expression", span="500-516", cluster="lambda expression"];
n428 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="502-509", cluster="lambda expression"];
n429 [label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="511-511", cluster="lambda expression"];
n435 [label="Entry lambda expression", span="502-509", cluster="lambda expression"];
n430 [label="Assert.Equal(2, records.Length)", span="513-513", cluster="lambda expression"];
n434 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray"];
n431 [label="Assert.Equal(''1'', records[0].Value)", span="514-514", cluster="lambda expression"];
n432 [label="Assert.Equal(''2'', records[1].Value)", span="515-515", cluster="lambda expression"];
n433 [label="Exit lambda expression", span="500-516", cluster="lambda expression"];
n436 [label="x.InsertToList(''my-key'', ''0'')", span="504-504", cluster="lambda expression"];
n437 [label="x.InsertToList(''my-key'', ''1'')", span="505-505", cluster="lambda expression"];
n438 [label="x.InsertToList(''my-key'', ''2'')", span="506-506", cluster="lambda expression"];
n439 [label="x.InsertToList(''my-key'', ''3'')", span="507-507", cluster="lambda expression"];
n440 [label="x.TrimList(''my-key'', 1, 2)", span="508-508", cluster="lambda expression"];
n441 [label="Exit lambda expression", span="502-509", cluster="lambda expression"];
n442 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)"];
n443 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="520-520", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()"];
n444 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="522-535", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()"];
n445 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="520-520", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()"];
n446 [label="Entry lambda expression", span="522-535", cluster="lambda expression"];
n447 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="524-530", cluster="lambda expression"];
n448 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="532-532", cluster="lambda expression"];
n451 [label="Entry lambda expression", span="524-530", cluster="lambda expression"];
n449 [label="Assert.Equal(2, recordCount)", span="534-534", cluster="lambda expression"];
n450 [label="Exit lambda expression", span="522-535", cluster="lambda expression"];
n452 [label="x.InsertToList(''my-key'', ''0'')", span="526-526", cluster="lambda expression"];
n453 [label="x.InsertToList(''my-key'', ''1'')", span="527-527", cluster="lambda expression"];
n454 [label="x.InsertToList(''my-key'', ''2'')", span="528-528", cluster="lambda expression"];
n455 [label="x.TrimList(''my-key'', 1, 100)", span="529-529", cluster="lambda expression"];
n456 [label="Exit lambda expression", span="524-530", cluster="lambda expression"];
n457 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="539-539", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()"];
n458 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="541-552", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()"];
n459 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="539-539", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()"];
n460 [label="Entry lambda expression", span="541-552", cluster="lambda expression"];
n461 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="543-547", cluster="lambda expression"];
n462 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="549-549", cluster="lambda expression"];
n465 [label="Entry lambda expression", span="543-547", cluster="lambda expression"];
n463 [label="Assert.Equal(0, recordCount)", span="551-551", cluster="lambda expression"];
n464 [label="Exit lambda expression", span="541-552", cluster="lambda expression"];
n466 [label="x.InsertToList(''my-key'', ''0'')", span="545-545", cluster="lambda expression"];
n467 [label="x.TrimList(''my-key'', 1, 100)", span="546-546", cluster="lambda expression"];
n468 [label="Exit lambda expression", span="543-547", cluster="lambda expression"];
n469 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="556-556", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()"];
n470 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="558-569", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()"];
n471 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="556-556", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()"];
n472 [label="Entry lambda expression", span="558-569", cluster="lambda expression"];
n473 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="560-564", cluster="lambda expression"];
n474 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="566-566", cluster="lambda expression"];
n477 [label="Entry lambda expression", span="560-564", cluster="lambda expression"];
n475 [label="Assert.Equal(0, recordCount)", span="568-568", cluster="lambda expression"];
n476 [label="Exit lambda expression", span="558-569", cluster="lambda expression"];
n478 [label="x.InsertToList(''my-key'', ''0'')", span="562-562", cluster="lambda expression"];
n479 [label="x.TrimList(''my-key'', 1, 0)", span="563-563", cluster="lambda expression"];
n480 [label="Exit lambda expression", span="560-564", cluster="lambda expression"];
n481 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="573-573", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()"];
n482 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="575-586", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()"];
n483 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="573-573", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()"];
n484 [label="Entry lambda expression", span="575-586", cluster="lambda expression"];
n485 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="577-581", cluster="lambda expression"];
n486 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="583-583", cluster="lambda expression"];
n489 [label="Entry lambda expression", span="577-581", cluster="lambda expression"];
n487 [label="Assert.Equal(1, recordCount)", span="585-585", cluster="lambda expression"];
n488 [label="Exit lambda expression", span="575-586", cluster="lambda expression"];
n490 [label="x.InsertToList(''my-key'', ''0'')", span="579-579", cluster="lambda expression"];
n491 [label="x.TrimList(''another-key'', 1, 0)", span="580-580", cluster="lambda expression"];
n492 [label="Exit lambda expression", span="577-581", cluster="lambda expression"];
n493 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="590-590", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()"];
n494 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="592-598", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()"];
n495 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="590-590", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()"];
n496 [label="Entry lambda expression", span="592-598", cluster="lambda expression"];
n497 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())))", span="594-595", cluster="lambda expression"];
n501 [label="Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>()))", span="595-595", cluster="lambda expression"];
n498 [label="Assert.Equal(''key'', exception.ParamName)", span="597-597", cluster="lambda expression"];
n500 [label="Entry lambda expression", span="595-595", cluster="lambda expression"];
n499 [label="Exit lambda expression", span="592-598", cluster="lambda expression"];
n502 [label="Exit lambda expression", span="595-595", cluster="lambda expression"];
n503 [label="Entry lambda expression", span="595-595", cluster="lambda expression"];
n504 [label="x.SetRangeInHash(null, new Dictionary<string, string>())", span="595-595", cluster="lambda expression"];
n505 [label="Exit lambda expression", span="595-595", cluster="lambda expression"];
n506 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n507 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="602-602", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()"];
n508 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="604-610", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()"];
n509 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="602-602", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()"];
n510 [label="Entry lambda expression", span="604-610", cluster="lambda expression"];
n511 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)))", span="606-607", cluster="lambda expression"];
n515 [label="Commit(sql, x => x.SetRangeInHash(''some-hash'', null))", span="607-607", cluster="lambda expression"];
n512 [label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="609-609", cluster="lambda expression"];
n514 [label="Entry lambda expression", span="607-607", cluster="lambda expression"];
n513 [label="Exit lambda expression", span="604-610", cluster="lambda expression"];
n516 [label="Exit lambda expression", span="607-607", cluster="lambda expression"];
n517 [label="Entry lambda expression", span="607-607", cluster="lambda expression"];
n518 [label="x.SetRangeInHash(''some-hash'', null)", span="607-607", cluster="lambda expression"];
n519 [label="Exit lambda expression", span="607-607", cluster="lambda expression"];
n520 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="614-614", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()"];
n521 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="616-631", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()"];
n522 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="614-614", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()"];
n523 [label="Entry lambda expression", span="616-631", cluster="lambda expression"];
n524 [label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="618-622", cluster="lambda expression"];
n525 [label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="624-627", cluster="lambda expression"];
n530 [label="Entry lambda expression", span="618-622", cluster="lambda expression"];
n526 [label="Assert.Equal(''Value1'', result[''Key1''])", span="629-629", cluster="lambda expression"];
n529 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary"];
n533 [label="Entry lambda expression", span="627-627", cluster="lambda expression"];
n536 [label="Entry lambda expression", span="627-627", cluster="lambda expression"];
n527 [label="Assert.Equal(''Value2'', result[''Key2''])", span="630-630", cluster="lambda expression"];
n528 [label="Exit lambda expression", span="616-631", cluster="lambda expression"];
n531 [label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="618-622", cluster="lambda expression"];
n532 [label="Exit lambda expression", span="618-622", cluster="lambda expression"];
n534 [label="(string)x.Field", span="627-627", cluster="lambda expression"];
n535 [label="Exit lambda expression", span="627-627", cluster="lambda expression"];
n537 [label="(string)x.Value", span="627-627", cluster="lambda expression"];
n538 [label="Exit lambda expression", span="627-627", cluster="lambda expression"];
n539 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", span="635-635", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()"];
n540 [label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null)));\r\n            })", span="637-641", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()"];
n541 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", span="635-635", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()"];
n542 [label="Entry lambda expression", span="637-641", cluster="lambda expression"];
n543 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null)))", span="639-640", cluster="lambda expression"];
n546 [label="Commit(sql, x => x.RemoveHash(null))", span="640-640", cluster="lambda expression"];
n544 [label="Exit lambda expression", span="637-641", cluster="lambda expression"];
n545 [label="Entry lambda expression", span="640-640", cluster="lambda expression"];
n547 [label="Exit lambda expression", span="640-640", cluster="lambda expression"];
n548 [label="Entry lambda expression", span="640-640", cluster="lambda expression"];
n549 [label="x.RemoveHash(null)", span="640-640", cluster="lambda expression"];
n550 [label="Exit lambda expression", span="640-640", cluster="lambda expression"];
n551 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="281-281", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)"];
n552 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", span="645-645", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()"];
n553 [label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                // Act\r\n                Commit(sql, x => x.RemoveHash(''some-hash''));\r\n\r\n                // Assert\r\n                var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="647-662", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()"];
n554 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", span="645-645", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()"];
n555 [label="Entry lambda expression", span="647-662", cluster="lambda expression"];
n556 [label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="650-654", cluster="lambda expression"];
n557 [label="Commit(sql, x => x.RemoveHash(''some-hash''))", span="657-657", cluster="lambda expression"];
n558 [label="var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single()", span="660-660", cluster="lambda expression"];
n561 [label="Entry lambda expression", span="650-654", cluster="lambda expression"];
n564 [label="Entry lambda expression", span="657-657", cluster="lambda expression"];
n559 [label="Assert.Equal(0, count)", span="661-661", cluster="lambda expression"];
n560 [label="Exit lambda expression", span="647-662", cluster="lambda expression"];
n562 [label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="650-654", cluster="lambda expression"];
n563 [label="Exit lambda expression", span="650-654", cluster="lambda expression"];
n565 [label="x.RemoveHash(''some-hash'')", span="657-657", cluster="lambda expression"];
n566 [label="Exit lambda expression", span="657-657", cluster="lambda expression"];
n567 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", span="666-666", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()"];
n568 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="668-674", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()"];
n569 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", span="666-666", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()"];
n570 [label="Entry lambda expression", span="668-674", cluster="lambda expression"];
n571 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>())))", span="670-671", cluster="lambda expression"];
n575 [label="Commit(sql, x => x.AddRangeToSet(null, new List<string>()))", span="671-671", cluster="lambda expression"];
n572 [label="Assert.Equal(''key'', exception.ParamName)", span="673-673", cluster="lambda expression"];
n574 [label="Entry lambda expression", span="671-671", cluster="lambda expression"];
n573 [label="Exit lambda expression", span="668-674", cluster="lambda expression"];
n576 [label="Exit lambda expression", span="671-671", cluster="lambda expression"];
n577 [label="Entry lambda expression", span="671-671", cluster="lambda expression"];
n578 [label="x.AddRangeToSet(null, new List<string>())", span="671-671", cluster="lambda expression"];
n579 [label="Exit lambda expression", span="671-671", cluster="lambda expression"];
n580 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n581 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="295-295", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)"];
n582 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", span="678-678", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()"];
n583 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null)));\r\n\r\n                Assert.Equal(''items'', exception.ParamName);\r\n            })", span="680-686", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()"];
n584 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", span="678-678", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()"];
n585 [label="Entry lambda expression", span="680-686", cluster="lambda expression"];
n586 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null)))", span="682-683", cluster="lambda expression"];
n590 [label="Commit(sql, x => x.AddRangeToSet(''my-set'', null))", span="683-683", cluster="lambda expression"];
n587 [label="Assert.Equal(''items'', exception.ParamName)", span="685-685", cluster="lambda expression"];
n589 [label="Entry lambda expression", span="683-683", cluster="lambda expression"];
n588 [label="Exit lambda expression", span="680-686", cluster="lambda expression"];
n591 [label="Exit lambda expression", span="683-683", cluster="lambda expression"];
n592 [label="Entry lambda expression", span="683-683", cluster="lambda expression"];
n593 [label="x.AddRangeToSet(''my-set'', null)", span="683-683", cluster="lambda expression"];
n594 [label="Exit lambda expression", span="683-683", cluster="lambda expression"];
n595 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", span="690-690", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()"];
n596 [label="UseConnection(sql =>\r\n            {\r\n                var items = new List<string> { ''1'', ''2'', ''3'' };\r\n\r\n                Commit(sql, x => x.AddRangeToSet(''my-set'', items));\r\n\r\n                var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''');\r\n                Assert.Equal(items, records);\r\n            })", span="692-700", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()"];
n597 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", span="690-690", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()"];
n598 [label="Entry lambda expression", span="692-700", cluster="lambda expression"];
n599 [label="var items = new List<string> { ''1'', ''2'', ''3'' }", span="694-694", cluster="lambda expression"];
n600 [label="Commit(sql, x => x.AddRangeToSet(''my-set'', items))", span="696-696", cluster="lambda expression"];
n601 [label="var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''')", span="698-698", cluster="lambda expression"];
n605 [label="x.AddRangeToSet(''my-set'', items)", span="696-696", cluster="lambda expression"];
n602 [label="Assert.Equal(items, records)", span="699-699", cluster="lambda expression"];
n604 [label="Entry lambda expression", span="696-696", cluster="lambda expression"];
n603 [label="Exit lambda expression", span="692-700", cluster="lambda expression"];
n606 [label="Exit lambda expression", span="696-696", cluster="lambda expression"];
n607 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", span="704-704", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()"];
n608 [label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null)));\r\n            })", span="706-710", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()"];
n609 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", span="704-704", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()"];
n610 [label="Entry lambda expression", span="706-710", cluster="lambda expression"];
n611 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null)))", span="708-709", cluster="lambda expression"];
n614 [label="Commit(sql, x => x.RemoveSet(null))", span="709-709", cluster="lambda expression"];
n612 [label="Exit lambda expression", span="706-710", cluster="lambda expression"];
n613 [label="Entry lambda expression", span="709-709", cluster="lambda expression"];
n615 [label="Exit lambda expression", span="709-709", cluster="lambda expression"];
n616 [label="Entry lambda expression", span="709-709", cluster="lambda expression"];
n617 [label="x.RemoveSet(null)", span="709-709", cluster="lambda expression"];
n618 [label="Exit lambda expression", span="709-709", cluster="lambda expression"];
n619 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="313-313", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)"];
n620 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", span="714-714", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()"];
n621 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score]) values (@key, @value, 0.0)''", span="716-717", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()"];
n622 [label="UseConnection(sql =>\r\n            {\r\n                sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                Commit(sql, x => x.RemoveSet(''set-1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n                Assert.Equal(''set-2'', record.Key);\r\n            })", span="719-731", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()"];
n625 [label="sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="721-725", cluster="lambda expression"];
n623 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", span="714-714", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()"];
n624 [label="Entry lambda expression", span="719-731", cluster="lambda expression"];
n626 [label="Commit(sql, x => x.RemoveSet(''set-1''))", span="727-727", cluster="lambda expression"];
n627 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="729-729", cluster="lambda expression"];
n630 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
n631 [label="Entry lambda expression", span="727-727", cluster="lambda expression"];
n628 [label="Assert.Equal(''set-2'', record.Key)", span="730-730", cluster="lambda expression"];
n629 [label="Exit lambda expression", span="719-731", cluster="lambda expression"];
n632 [label="x.RemoveSet(''set-1'')", span="727-727", cluster="lambda expression"];
n633 [label="Exit lambda expression", span="727-727", cluster="lambda expression"];
n634 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", span="735-735", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()"];
n635 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="737-743", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()"];
n636 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", span="735-735", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()"];
n637 [label="Entry lambda expression", span="737-743", cluster="lambda expression"];
n638 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5))))", span="739-740", cluster="lambda expression"];
n642 [label="Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5)))", span="740-740", cluster="lambda expression"];
n639 [label="Assert.Equal(''key'', exception.ParamName)", span="742-742", cluster="lambda expression"];
n641 [label="Entry lambda expression", span="740-740", cluster="lambda expression"];
n640 [label="Exit lambda expression", span="737-743", cluster="lambda expression"];
n643 [label="Exit lambda expression", span="740-740", cluster="lambda expression"];
n644 [label="Entry lambda expression", span="740-740", cluster="lambda expression"];
n645 [label="x.ExpireHash(null, TimeSpan.FromMinutes(5))", span="740-740", cluster="lambda expression"];
n646 [label="Exit lambda expression", span="740-740", cluster="lambda expression"];
n647 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
n648 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="327-327", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)"];
n649 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", span="747-747", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()"];
n650 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="749-751", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()"];
n651 [label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1'']);\r\n                Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''hash-2'']);\r\n            })", span="753-770", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()"];
n654 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                })", span="756-760", cluster="lambda expression"];
n652 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", span="747-747", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()"];
n653 [label="Entry lambda expression", span="753-770", cluster="lambda expression"];
n655 [label="Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)))", span="763-763", cluster="lambda expression"];
n656 [label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="766-766", cluster="lambda expression"];
n661 [label="Entry lambda expression", span="763-763", cluster="lambda expression"];
n657 [label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1''])", span="767-767", cluster="lambda expression"];
n664 [label="Entry lambda expression", span="766-766", cluster="lambda expression"];
n667 [label="Entry lambda expression", span="766-766", cluster="lambda expression"];
n658 [label="Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61))", span="768-768", cluster="lambda expression"];
n659 [label="Assert.Null(records[''hash-2''])", span="769-769", cluster="lambda expression"];
n660 [label="Exit lambda expression", span="753-770", cluster="lambda expression"];
n662 [label="x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60))", span="763-763", cluster="lambda expression"];
n663 [label="Exit lambda expression", span="763-763", cluster="lambda expression"];
n665 [label="(string)x.Key", span="766-766", cluster="lambda expression"];
n666 [label="Exit lambda expression", span="766-766", cluster="lambda expression"];
n668 [label="(DateTime?)x.ExpireAt", span="766-766", cluster="lambda expression"];
n669 [label="Exit lambda expression", span="766-766", cluster="lambda expression"];
n670 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", span="774-774", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()"];
n671 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="776-782", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()"];
n672 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", span="774-774", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()"];
n673 [label="Entry lambda expression", span="776-782", cluster="lambda expression"];
n674 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45))))", span="778-779", cluster="lambda expression"];
n678 [label="Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45)))", span="779-779", cluster="lambda expression"];
n675 [label="Assert.Equal(''key'', exception.ParamName)", span="781-781", cluster="lambda expression"];
n677 [label="Entry lambda expression", span="779-779", cluster="lambda expression"];
n676 [label="Exit lambda expression", span="776-782", cluster="lambda expression"];
n679 [label="Exit lambda expression", span="779-779", cluster="lambda expression"];
n680 [label="Entry lambda expression", span="779-779", cluster="lambda expression"];
n681 [label="x.ExpireSet(null, TimeSpan.FromSeconds(45))", span="779-779", cluster="lambda expression"];
n682 [label="Exit lambda expression", span="779-779", cluster="lambda expression"];
n683 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n684 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="342-342", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)"];
n685 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", span="786-786", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()"];
n686 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="788-790", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()"];
n687 [label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1'']);\r\n                Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''set-2'']);\r\n            })", span="792-809", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()"];
n690 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="795-799", cluster="lambda expression"];
n688 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", span="786-786", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()"];
n689 [label="Entry lambda expression", span="792-809", cluster="lambda expression"];
n691 [label="Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)))", span="802-802", cluster="lambda expression"];
n692 [label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="805-805", cluster="lambda expression"];
n697 [label="Entry lambda expression", span="802-802", cluster="lambda expression"];
n693 [label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1''])", span="806-806", cluster="lambda expression"];
n700 [label="Entry lambda expression", span="805-805", cluster="lambda expression"];
n703 [label="Entry lambda expression", span="805-805", cluster="lambda expression"];
n694 [label="Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61))", span="807-807", cluster="lambda expression"];
n695 [label="Assert.Null(records[''set-2''])", span="808-808", cluster="lambda expression"];
n696 [label="Exit lambda expression", span="792-809", cluster="lambda expression"];
n698 [label="x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60))", span="802-802", cluster="lambda expression"];
n699 [label="Exit lambda expression", span="802-802", cluster="lambda expression"];
n701 [label="(string)x.Key", span="805-805", cluster="lambda expression"];
n702 [label="Exit lambda expression", span="805-805", cluster="lambda expression"];
n704 [label="(DateTime?)x.ExpireAt", span="805-805", cluster="lambda expression"];
n705 [label="Exit lambda expression", span="805-805", cluster="lambda expression"];
n706 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", span="813-813", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()"];
n707 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="815-821", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()"];
n708 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", span="813-813", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()"];
n709 [label="Entry lambda expression", span="815-821", cluster="lambda expression"];
n710 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45))))", span="817-818", cluster="lambda expression"];
n714 [label="Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45)))", span="818-818", cluster="lambda expression"];
n711 [label="Assert.Equal(''key'', exception.ParamName)", span="820-820", cluster="lambda expression"];
n713 [label="Entry lambda expression", span="818-818", cluster="lambda expression"];
n712 [label="Exit lambda expression", span="815-821", cluster="lambda expression"];
n715 [label="Exit lambda expression", span="818-818", cluster="lambda expression"];
n716 [label="Entry lambda expression", span="818-818", cluster="lambda expression"];
n717 [label="x.ExpireList(null, TimeSpan.FromSeconds(45))", span="818-818", cluster="lambda expression"];
n718 [label="Exit lambda expression", span="818-818", cluster="lambda expression"];
n719 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="357-357", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)"];
n720 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", span="825-825", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()"];
n721 [label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key]) values (@key)''", span="827-828", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()"];
n722 [label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1'']);\r\n                Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''list-2'']);\r\n            })", span="830-847", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()"];
n725 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                })", span="833-837", cluster="lambda expression"];
n723 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", span="825-825", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()"];
n724 [label="Entry lambda expression", span="830-847", cluster="lambda expression"];
n726 [label="Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)))", span="840-840", cluster="lambda expression"];
n727 [label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="843-843", cluster="lambda expression"];
n732 [label="Entry lambda expression", span="840-840", cluster="lambda expression"];
n728 [label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1''])", span="844-844", cluster="lambda expression"];
n735 [label="Entry lambda expression", span="843-843", cluster="lambda expression"];
n738 [label="Entry lambda expression", span="843-843", cluster="lambda expression"];
n729 [label="Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61))", span="845-845", cluster="lambda expression"];
n730 [label="Assert.Null(records[''list-2''])", span="846-846", cluster="lambda expression"];
n731 [label="Exit lambda expression", span="830-847", cluster="lambda expression"];
n733 [label="x.ExpireList(''list-1'', TimeSpan.FromMinutes(60))", span="840-840", cluster="lambda expression"];
n734 [label="Exit lambda expression", span="840-840", cluster="lambda expression"];
n736 [label="(string)x.Key", span="843-843", cluster="lambda expression"];
n737 [label="Exit lambda expression", span="843-843", cluster="lambda expression"];
n739 [label="(DateTime?)x.ExpireAt", span="843-843", cluster="lambda expression"];
n740 [label="Exit lambda expression", span="843-843", cluster="lambda expression"];
n741 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", span="851-851", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()"];
n742 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="853-859", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()"];
n743 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", span="851-851", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()"];
n744 [label="Entry lambda expression", span="853-859", cluster="lambda expression"];
n745 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null)))", span="855-856", cluster="lambda expression"];
n749 [label="Commit(sql, x => x.PersistHash(null))", span="856-856", cluster="lambda expression"];
n746 [label="Assert.Equal(''key'', exception.ParamName)", span="858-858", cluster="lambda expression"];
n748 [label="Entry lambda expression", span="856-856", cluster="lambda expression"];
n747 [label="Exit lambda expression", span="853-859", cluster="lambda expression"];
n750 [label="Exit lambda expression", span="856-856", cluster="lambda expression"];
n751 [label="Entry lambda expression", span="856-856", cluster="lambda expression"];
n752 [label="x.PersistHash(null)", span="856-856", cluster="lambda expression"];
n753 [label="Exit lambda expression", span="856-856", cluster="lambda expression"];
n754 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="372-372", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)"];
n755 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", span="863-863", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()"];
n756 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="865-867", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()"];
n757 [label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistHash(''hash-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''hash-1'']);\r\n                Assert.NotNull(records[''hash-2'']);\r\n            })", span="869-885", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()"];
n760 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="872-876", cluster="lambda expression"];
n758 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", span="863-863", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()"];
n759 [label="Entry lambda expression", span="869-885", cluster="lambda expression"];
n761 [label="Commit(sql, x => x.PersistHash(''hash-1''))", span="879-879", cluster="lambda expression"];
n762 [label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="882-882", cluster="lambda expression"];
n766 [label="Entry lambda expression", span="879-879", cluster="lambda expression"];
n763 [label="Assert.Null(records[''hash-1''])", span="883-883", cluster="lambda expression"];
n769 [label="Entry lambda expression", span="882-882", cluster="lambda expression"];
n772 [label="Entry lambda expression", span="882-882", cluster="lambda expression"];
n764 [label="Assert.NotNull(records[''hash-2''])", span="884-884", cluster="lambda expression"];
n765 [label="Exit lambda expression", span="869-885", cluster="lambda expression"];
n767 [label="x.PersistHash(''hash-1'')", span="879-879", cluster="lambda expression"];
n768 [label="Exit lambda expression", span="879-879", cluster="lambda expression"];
n770 [label="(string)x.Key", span="882-882", cluster="lambda expression"];
n771 [label="Exit lambda expression", span="882-882", cluster="lambda expression"];
n773 [label="(DateTime?)x.ExpireAt", span="882-882", cluster="lambda expression"];
n774 [label="Exit lambda expression", span="882-882", cluster="lambda expression"];
n775 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", span="889-889", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()"];
n776 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="891-897", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()"];
n777 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", span="889-889", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()"];
n778 [label="Entry lambda expression", span="891-897", cluster="lambda expression"];
n779 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null)))", span="893-894", cluster="lambda expression"];
n783 [label="Commit(sql, x => x.PersistSet(null))", span="894-894", cluster="lambda expression"];
n780 [label="Assert.Equal(''key'', exception.ParamName)", span="896-896", cluster="lambda expression"];
n782 [label="Entry lambda expression", span="894-894", cluster="lambda expression"];
n781 [label="Exit lambda expression", span="891-897", cluster="lambda expression"];
n784 [label="Exit lambda expression", span="894-894", cluster="lambda expression"];
n785 [label="Entry lambda expression", span="894-894", cluster="lambda expression"];
n786 [label="x.PersistSet(null)", span="894-894", cluster="lambda expression"];
n787 [label="Exit lambda expression", span="894-894", cluster="lambda expression"];
n788 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="387-387", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)"];
n789 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", span="901-901", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()"];
n790 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="903-905", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()"];
n791 [label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistSet(''set-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''set-1'']);\r\n                Assert.NotNull(records[''set-2'']);\r\n            })", span="907-923", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()"];
n794 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="910-914", cluster="lambda expression"];
n792 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", span="901-901", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()"];
n793 [label="Entry lambda expression", span="907-923", cluster="lambda expression"];
n795 [label="Commit(sql, x => x.PersistSet(''set-1''))", span="917-917", cluster="lambda expression"];
n796 [label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="920-920", cluster="lambda expression"];
n800 [label="Entry lambda expression", span="917-917", cluster="lambda expression"];
n797 [label="Assert.Null(records[''set-1''])", span="921-921", cluster="lambda expression"];
n803 [label="Entry lambda expression", span="920-920", cluster="lambda expression"];
n806 [label="Entry lambda expression", span="920-920", cluster="lambda expression"];
n798 [label="Assert.NotNull(records[''set-2''])", span="922-922", cluster="lambda expression"];
n799 [label="Exit lambda expression", span="907-923", cluster="lambda expression"];
n801 [label="x.PersistSet(''set-1'')", span="917-917", cluster="lambda expression"];
n802 [label="Exit lambda expression", span="917-917", cluster="lambda expression"];
n804 [label="(string)x.Key", span="920-920", cluster="lambda expression"];
n805 [label="Exit lambda expression", span="920-920", cluster="lambda expression"];
n807 [label="(DateTime?)x.ExpireAt", span="920-920", cluster="lambda expression"];
n808 [label="Exit lambda expression", span="920-920", cluster="lambda expression"];
n809 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", span="927-927", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()"];
n810 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="929-935", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()"];
n811 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", span="927-927", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()"];
n812 [label="Entry lambda expression", span="929-935", cluster="lambda expression"];
n813 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null)))", span="931-932", cluster="lambda expression"];
n817 [label="Commit(sql, x => x.PersistList(null))", span="932-932", cluster="lambda expression"];
n814 [label="Assert.Equal(''key'', exception.ParamName)", span="934-934", cluster="lambda expression"];
n816 [label="Entry lambda expression", span="932-932", cluster="lambda expression"];
n815 [label="Exit lambda expression", span="929-935", cluster="lambda expression"];
n818 [label="Exit lambda expression", span="932-932", cluster="lambda expression"];
n819 [label="Entry lambda expression", span="932-932", cluster="lambda expression"];
n820 [label="x.PersistList(null)", span="932-932", cluster="lambda expression"];
n821 [label="Exit lambda expression", span="932-932", cluster="lambda expression"];
n822 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="402-402", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)"];
n823 [label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", span="939-939", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()"];
n824 [label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="941-943", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()"];
n825 [label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistList(''list-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''list-1'']);\r\n                Assert.NotNull(records[''list-2'']);\r\n            })", span="945-961", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()"];
n828 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="948-952", cluster="lambda expression"];
n826 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", span="939-939", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()"];
n827 [label="Entry lambda expression", span="945-961", cluster="lambda expression"];
n829 [label="Commit(sql, x => x.PersistList(''list-1''))", span="955-955", cluster="lambda expression"];
n830 [label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="958-958", cluster="lambda expression"];
n834 [label="Entry lambda expression", span="955-955", cluster="lambda expression"];
n831 [label="Assert.Null(records[''list-1''])", span="959-959", cluster="lambda expression"];
n837 [label="Entry lambda expression", span="958-958", cluster="lambda expression"];
n840 [label="Entry lambda expression", span="958-958", cluster="lambda expression"];
n832 [label="Assert.NotNull(records[''list-2''])", span="960-960", cluster="lambda expression"];
n833 [label="Exit lambda expression", span="945-961", cluster="lambda expression"];
n835 [label="x.PersistList(''list-1'')", span="955-955", cluster="lambda expression"];
n836 [label="Exit lambda expression", span="955-955", cluster="lambda expression"];
n838 [label="(string)x.Key", span="958-958", cluster="lambda expression"];
n839 [label="Exit lambda expression", span="958-958", cluster="lambda expression"];
n841 [label="(DateTime?)x.ExpireAt", span="958-958", cluster="lambda expression"];
n842 [label="Exit lambda expression", span="958-958", cluster="lambda expression"];
n843 [label="var connection = ConnectionUtils.CreateConnection()", span="966-966", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)"];
n844 [label="action(connection)", span="968-968", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)"];
n846 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()"];
n845 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="964-964", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)"];
n847 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)"];
n848 [label="var storage = new Mock<SqlServerStorage>(connection)", span="976-976", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)"];
n851 [label="action(transaction)", span="981-981", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)"];
n849 [label="storage.Setup(x => x.QueueProviders).Returns(_queueProviders)", span="977-977", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)"];
n854 [label="Entry Mock<SqlServerStorage>.cstr", span="", cluster="Mock<SqlServerStorage>.cstr"];
n850 [label="var transaction = new SqlServerWriteOnlyTransaction(storage.Object)", span="979-979", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)"];
n857 [label="Entry lambda expression", span="977-977", cluster="lambda expression"];
n855 [label="Entry SqlServerWriteOnlyTransaction.cstr", span="", cluster="SqlServerWriteOnlyTransaction.cstr"];
n852 [label="transaction.Commit()", span="982-982", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)"];
n853 [label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", span="972-972", cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)"];
n856 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="49-49", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()"];
n858 [label="x.QueueProviders", span="977-977", cluster="lambda expression"];
n859 [label="Exit lambda expression", span="977-977", cluster="lambda expression"];
m1_210 [label="key == null", span="299-299", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_214 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="305-305", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_211 [label="throw new ArgumentNullException(''key'');", span="299-299", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_212 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="301-302", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_213 [label="AcquireListLock()", span="304-304", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_215 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_20 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="RedisStorageConnection.cs"];
m1_7 [label="_queueProviders = queueProviders", span="49-49", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RedisStorageConnection.cs"];
m1_15 [label=_commandQueue, span="66-66", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisStorageConnection.cs"];
m1_28 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_35 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_34 [label="Exit lambda expression", span="77-79", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_36 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="RedisStorageConnection.cs"];
m1_37 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="84-86", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="RedisStorageConnection.cs"];
m1_38 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="RedisStorageConnection.cs"];
m1_29 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="77-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_33 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="77-79", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_39 [label="Entry lambda expression", span="84-86", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_30 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_31 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="RedisStorageConnection.cs"];
m1_32 [label="Entry lambda expression", span="77-79", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_40 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="84-86", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_0 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RedisStorageConnection.cs"];
m1_1 [label="connection == null", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RedisStorageConnection.cs"];
m1_2 [label="throw new ArgumentNullException(''connection'');", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RedisStorageConnection.cs"];
m1_3 [label="queueProviders == null", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RedisStorageConnection.cs"];
m1_4 [label="throw new ArgumentNullException(''queueProviders'');", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RedisStorageConnection.cs"];
m1_5 [label="_connection = connection", span="47-47", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RedisStorageConnection.cs"];
m1_75 [label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', serverId),\r\n                        queue1)", span="101-103", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_76 [label="Exit lambda expression", span="101-103", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_77 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="RedisStorageConnection.cs"];
m1_96 [label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="133-136", cluster="HangFire.Redis.RedisStorageConnection.Heartbeat(string)", file="RedisStorageConnection.cs", color=green, community=0];
m1_97 [label="Exit HangFire.Redis.RedisStorageConnection.Heartbeat(string)", span="131-131", cluster="HangFire.Redis.RedisStorageConnection.Heartbeat(string)", file="RedisStorageConnection.cs"];
m1_99 [label="Entry HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="139-139", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_98 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisStorageConnection.cs"];
m1_100 [label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="141-141", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_42 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="RedisStorageConnection.cs"];
m1_189 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_190 [label="key == null", span="277-277", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_194 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="283-283", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_191 [label="throw new ArgumentNullException(''key'');", span="277-277", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_192 [label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="279-280", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_193 [label="AcquireHashLock()", span="282-282", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_195 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_116 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="RedisStorageConnection.cs"];
m1_41 [label="Exit lambda expression", span="84-86", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_22 [label="Entry HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", span="41-41", cluster="HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", file="RedisStorageConnection.cs"];
m1_17 [label="transaction.Complete()", span="71-71", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisStorageConnection.cs"];
m1_18 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisStorageConnection.cs"];
m1_19 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="RedisStorageConnection.cs"];
m1_219 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="RedisStorageConnection.cs"];
m1_220 [label="key == null", span="310-310", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="RedisStorageConnection.cs"];
m1_224 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="316-316", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="RedisStorageConnection.cs"];
m1_221 [label="throw new ArgumentNullException(''key'');", span="310-310", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="RedisStorageConnection.cs"];
m1_222 [label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="312-313", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="RedisStorageConnection.cs"];
m1_223 [label="AcquireHashLock()", span="315-315", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="RedisStorageConnection.cs"];
m1_225 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="RedisStorageConnection.cs"];
m1_27 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_9 [label="_redis.Dispose()", span="28-28", cluster="HangFire.Redis.RedisStorageConnection.Dispose()", file="RedisStorageConnection.cs"];
m1_105 [label="var name = serverName", span="150-150", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_106 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="152-160", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_108 [label="Logger.DebugFormat(''Looking for timed out servers...'')", span="166-166", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_107 [label="pipeline.Flush()", span="163-163", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs", color=green, community=0];
m1_109 [label=heartbeats, span="168-168", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_133 [label="Entry lambda expression", span="219-221", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_239 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="RedisStorageConnection.cs"];
m1_240 [label="key == null", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="RedisStorageConnection.cs"];
m1_244 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="338-338", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="RedisStorageConnection.cs"];
m1_241 [label="throw new ArgumentNullException(''key'');", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="RedisStorageConnection.cs"];
m1_242 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="334-335", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="RedisStorageConnection.cs"];
m1_243 [label="AcquireListLock()", span="337-337", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="RedisStorageConnection.cs"];
m1_245 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="RedisStorageConnection.cs"];
m1_69 [label="Entry lambda expression", span="90-96", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_70 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="90-96", cluster="lambda expression", color=red, community=0, file="RedisStorageConnection.cs"];
m1_71 [label="Exit lambda expression", span="90-96", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_229 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="RedisStorageConnection.cs"];
m1_230 [label="key == null", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="RedisStorageConnection.cs"];
m1_234 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="327-327", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="RedisStorageConnection.cs"];
m1_231 [label="throw new ArgumentNullException(''key'');", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="RedisStorageConnection.cs"];
m1_232 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="323-324", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="RedisStorageConnection.cs"];
m1_233 [label="AcquireSetLock()", span="326-326", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="RedisStorageConnection.cs"];
m1_235 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="RedisStorageConnection.cs"];
m1_255 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="RedisStorageConnection.cs"];
m1_260 [label="_lockedResources.Add(resource)", span="363-363", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="RedisStorageConnection.cs"];
m1_261 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="RedisStorageConnection.cs"];
m1_199 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_200 [label="key == null", span="288-288", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_204 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="294-294", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_201 [label="throw new ArgumentNullException(''key'');", span="288-288", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_202 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="290-291", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_203 [label="AcquireSetLock()", span="293-293", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_205 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_94 [label="AddToSet(key, value, 0.0)", span="165-165", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="RedisStorageConnection.cs"];
m1_68 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="RedisStorageConnection.cs"];
m1_93 [label="Exit lambda expression", span="123-125", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_95 [label="Entry HangFire.Redis.RedisStorageConnection.Heartbeat(string)", span="131-131", cluster="HangFire.Redis.RedisStorageConnection.Heartbeat(string)", file="RedisStorageConnection.cs"];
m1_73 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="137-139", cluster="lambda expression", file="RedisStorageConnection.cs", color=red, community=0];
m1_55 [label="Entry lambda expression", span="115-124", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_136 [label="var transaction = redis.CreateTransaction()", span="186-186", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisStorageConnection.cs"];
m1_137 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="188-191", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisStorageConnection.cs"];
m1_139 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Checked''))", span="196-198", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisStorageConnection.cs"];
m1_143 [label="x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="188-191", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_138 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Fetched''))", span="193-195", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisStorageConnection.cs"];
m1_140 [label="transaction.Commit()", span="200-200", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisStorageConnection.cs"];
m1_141 [label="Exit HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="181-181", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisStorageConnection.cs"];
m1_142 [label="Entry lambda expression", span="188-191", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_144 [label="Exit lambda expression", span="188-191", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_265 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="RedisStorageConnection.cs"];
m1_135 [label="Exit lambda expression", span="219-221", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_56 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="115-124", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_57 [label="Exit lambda expression", span="115-124", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_58 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RedisStorageConnection.cs"];
m1_59 [label="var provider = _queueProviders.GetProvider(queue)", span="129-129", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RedisStorageConnection.cs"];
m1_62 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RedisStorageConnection.cs"];
m1_63 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="RedisStorageConnection.cs"];
m1_61 [label="QueueCommand(_ => persistentQueue.Enqueue(queue, jobId))", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RedisStorageConnection.cs"];
m1_60 [label="var persistentQueue = provider.GetJobQueue(_connection)", span="130-130", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RedisStorageConnection.cs"];
m1_64 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="RedisStorageConnection.cs"];
m1_11 [label="var transaction = CreateTransaction(_isolationLevel)", span="54-54", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisStorageConnection.cs"];
m1_90 [label="Entry lambda expression", span="158-160", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_8 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RedisStorageConnection.cs"];
m1_10 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisStorageConnection.cs"];
m1_65 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_25 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RedisStorageConnection.cs"];
m1_26 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="RedisStorageConnection.cs"];
m1_47 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="RedisStorageConnection.cs"];
m1_46 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisStorageConnection.cs"];
m1_48 [label="Exit lambda expression", span="96-106", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_66 [label="x.AddItemToSet(\r\n                    ''hangfire:servers'', serverId)", span="87-88", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_67 [label="Exit lambda expression", span="87-88", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_72 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisStorageConnection.cs"];
m1_74 [label="Entry lambda expression", span="101-103", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_79 [label="RemoveServer(_redis, serverId)", span="112-112", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(string)", file="RedisStorageConnection.cs"];
m1_78 [label="Entry HangFire.Redis.RedisStorageConnection.RemoveServer(string)", span="110-110", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(string)", file="RedisStorageConnection.cs"];
m1_80 [label="Exit HangFire.Redis.RedisStorageConnection.RemoveServer(string)", span="110-110", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(string)", file="RedisStorageConnection.cs"];
m1_85 [label="transaction.Commit()", span="127-127", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="RedisStorageConnection.cs"];
m1_84 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverId),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverId)))", span="123-125", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="RedisStorageConnection.cs"];
m1_86 [label="Exit HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", span="115-115", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="RedisStorageConnection.cs"];
m1_91 [label="Entry lambda expression", span="123-125", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_92 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverId),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverId))", span="123-125", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_103 [label="var pipeline = _redis.CreatePipeline()", span="146-146", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_102 [label="var utcNow = DateTime.UtcNow", span="144-144", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_104 [label=serverNames, span="148-148", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_111 [label="utcNow > maxTime.Add(timeOut)", span="173-173", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_110 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="170-171", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_112 [label="RemoveServer(_redis, heartbeat.Key)", span="175-175", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs", color=green, community=0];
m1_119 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="RedisStorageConnection.cs"];
m1_118 [label="Entry Unk.DebugFormat", span="", cluster="Unk.DebugFormat", file="RedisStorageConnection.cs"];
m1_120 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="RedisStorageConnection.cs"];
m1_126 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RedisStorageConnection.cs"];
m1_125 [label="Exit lambda expression", span="153-155", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_127 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="RedisStorageConnection.cs"];
m1_134 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="RedisStorageConnection.cs"];
m1_148 [label="Exit lambda expression", span="193-195", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_151 [label="x.RemoveEntryFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Checked'')", span="196-198", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_147 [label="x.RemoveEntryFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Fetched'')", span="193-195", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_149 [label="Entry Unk.RemoveEntryFromHash", span="", cluster="Unk.RemoveEntryFromHash", file="RedisStorageConnection.cs"];
m1_150 [label="Entry lambda expression", span="196-198", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_152 [label="Exit lambda expression", span="196-198", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_161 [label=name, span="", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_160 [label=string, span="", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_162 [label=heartbeats, span="", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_173 [label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="262-262", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_177 [label="new { key = key, value = value }", span="262-262", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_172 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_174 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_176 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_178 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_187 [label="x.Execute(query, new { key = key })", span="272-272", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_186 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_188 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_197 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="283-283", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_196 [label="Entry lambda expression", span="283-283", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_198 [label="Exit lambda expression", span="283-283", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_207 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="294-294", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_206 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_208 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_217 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="305-305", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_216 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_218 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_227 [label="x.Execute(query, new { key = key })", span="316-316", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_226 [label="Entry lambda expression", span="316-316", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_228 [label="Exit lambda expression", span="316-316", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_237 [label="x.Execute(query, new { key = key })", span="327-327", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_236 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_238 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_247 [label="x.Execute(query, new { key = key })", span="338-338", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_246 [label="Entry lambda expression", span="338-338", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_248 [label="Exit lambda expression", span="338-338", cluster="lambda expression", file="RedisStorageConnection.cs"];
m1_49 [label="Entry Hangfire.States.IState.SerializeData()", span="27-27", cluster="Hangfire.States.IState.SerializeData()", file="RedisStorageConnection.cs"];
m1_53 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="115-124", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="RedisStorageConnection.cs"];
m1_88 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="158-160", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_52 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="111-113", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="RedisStorageConnection.cs"];
m1_54 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="RedisStorageConnection.cs"];
m1_146 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisStorageConnection.cs"];
m1_123 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="204-206", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisStorageConnection.cs"];
m1_128 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="RedisStorageConnection.cs"];
m1_124 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisStorageConnection.cs"];
m1_129 [label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="211-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="RedisStorageConnection.cs"];
m1_87 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_89 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_130 [label="AcquireListLock()", span="218-218", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="RedisStorageConnection.cs"];
m1_163 [label=string, span="", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RedisStorageConnection.cs"];
m1_164 [label=string, span="", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RedisStorageConnection.cs"];
m1_166 [label="items == null", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RedisStorageConnection.cs"];
m1_170 [label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="262-262", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RedisStorageConnection.cs"];
m1_165 [label="throw new ArgumentNullException(''key'');", span="254-254", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RedisStorageConnection.cs"];
m1_167 [label="throw new ArgumentNullException(''items'');", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RedisStorageConnection.cs"];
m1_168 [label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="257-259", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RedisStorageConnection.cs"];
m1_169 [label="AcquireSetLock()", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RedisStorageConnection.cs"];
m1_171 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RedisStorageConnection.cs"];
m1_262 [label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="RedisStorageConnection.cs"];
m1_145 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="RedisStorageConnection.cs"];
m1_81 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="RedisStorageConnection.cs"];
m1_82 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="151-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="RedisStorageConnection.cs"];
m1_83 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="RedisStorageConnection.cs"];
m1_175 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="RedisStorageConnection.cs"];
m1_121 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_122 [label="Entry Unk.InfoFormat", span="", cluster="Unk.InfoFormat", file="RedisStorageConnection.cs"];
m1_43 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="91-94", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="RedisStorageConnection.cs"];
m1_23 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="RedisStorageConnection.cs"];
m1_24 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="RedisStorageConnection.cs"];
m1_16 [label="command(_connection)", span="68-68", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisStorageConnection.cs"];
m1_51 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="RedisStorageConnection.cs"];
m1_12 [label="Entry HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", span="31-31", cluster="HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", file="RedisStorageConnection.cs"];
m1_13 [label="return new RedisAtomicWriteTransaction(_redis.CreateTransaction());", span="33-33", cluster="HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", file="RedisStorageConnection.cs"];
m1_14 [label="Exit HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", span="31-31", cluster="HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", file="RedisStorageConnection.cs"];
m1_251 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="RedisStorageConnection.cs"];
m1_153 [label="HangFire.Redis.RedisStorageConnection", span="", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="RedisStorageConnection.cs"];
m1_154 [label="System.Collections.Generic.IDictionary<string, string>", span="", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="RedisStorageConnection.cs"];
m1_158 [label=int, span="", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="RedisStorageConnection.cs"];
m1_155 [label=jobId, span="", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="RedisStorageConnection.cs"];
m1_156 [label="System.TimeSpan", span="", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="RedisStorageConnection.cs"];
m1_157 [label="AcquireHashLock()", span="248-248", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="RedisStorageConnection.cs"];
m1_159 [label=queue1, span="", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="RedisStorageConnection.cs"];
m1_117 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="RedisStorageConnection.cs"];
m1_6 [label="_isolationLevel = isolationLevel", span="48-48", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RedisStorageConnection.cs"];
m1_50 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RedisStorageConnection.cs"];
m1_266 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="RedisStorageConnection.cs"];
m1_45 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="RedisStorageConnection.cs"];
m1_131 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisStorageConnection.cs"];
m1_132 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="RedisStorageConnection.cs"];
m1_101 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="142-142", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisStorageConnection.cs"];
m1_256 [label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="353-353", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="RedisStorageConnection.cs"];
m1_257 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="RedisStorageConnection.cs"];
m1_254 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="RedisStorageConnection.cs"];
m1_258 [label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="358-358", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="RedisStorageConnection.cs"];
m1_259 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="RedisStorageConnection.cs"];
m1_44 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisStorageConnection.cs"];
m1_179 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="RedisStorageConnection.cs"];
m1_180 [label="key == null", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="RedisStorageConnection.cs"];
m1_184 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="272-272", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="RedisStorageConnection.cs"];
m1_181 [label="throw new ArgumentNullException(''key'');", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="RedisStorageConnection.cs"];
m1_182 [label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="269-269", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="RedisStorageConnection.cs"];
m1_183 [label="AcquireSetLock()", span="271-271", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="RedisStorageConnection.cs"];
m1_185 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="RedisStorageConnection.cs"];
m1_249 [label="_commandQueue.Enqueue(action)", span="343-343", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="RedisStorageConnection.cs"];
m1_250 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="RedisStorageConnection.cs"];
m1_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RedisStorageConnection.cs"];
m1_113 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", color=green, community=0, file="RedisStorageConnection.cs"];
m1_114 [label="AcquireListLock()", span="195-195", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="RedisStorageConnection.cs"];
m1_263 [label="return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value })\r\n                : new TransactionScope();", span="368-371", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="RedisStorageConnection.cs"];
m1_264 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="RedisStorageConnection.cs"];
m1_115 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="196-198", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="RedisStorageConnection.cs"];
m1_252 [label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="348-348", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="RedisStorageConnection.cs"];
m1_253 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="RedisStorageConnection.cs"];
m1_267 [label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="RedisStorageConnection.cs"];
m1_268 [label=string, span="", file="RedisStorageConnection.cs"];
m1_269 [label="System.TimeSpan", span="", file="RedisStorageConnection.cs"];
m1_270 [label=string, span="", file="RedisStorageConnection.cs"];
m1_271 [label=string, span="", file="RedisStorageConnection.cs"];
m1_272 [label="Hangfire.States.IState", span="", file="RedisStorageConnection.cs"];
m1_273 [label=addAndSetStateSql, span="", file="RedisStorageConnection.cs"];
m1_274 [label=string, span="", file="RedisStorageConnection.cs"];
m1_275 [label="Hangfire.States.IState", span="", file="RedisStorageConnection.cs"];
m1_276 [label=addStateSql, span="", file="RedisStorageConnection.cs"];
m1_277 [label=string, span="", file="RedisStorageConnection.cs"];
m1_278 [label=string, span="", file="RedisStorageConnection.cs"];
m1_279 [label=persistentQueue, span="", file="RedisStorageConnection.cs"];
m1_280 [label=string, span="", file="RedisStorageConnection.cs"];
m1_281 [label=string, span="", file="RedisStorageConnection.cs"];
m1_282 [label="System.TimeSpan", span="", file="RedisStorageConnection.cs"];
m1_283 [label=string, span="", file="RedisStorageConnection.cs"];
m1_284 [label=string, span="", file="RedisStorageConnection.cs"];
m1_285 [label="System.TimeSpan", span="", file="RedisStorageConnection.cs"];
m1_286 [label=string, span="", file="RedisStorageConnection.cs"];
m1_287 [label=string, span="", file="RedisStorageConnection.cs"];
m1_288 [label=double, span="", file="RedisStorageConnection.cs"];
m1_289 [label=addSql, span="", file="RedisStorageConnection.cs"];
m1_290 [label=string, span="", file="RedisStorageConnection.cs"];
m1_291 [label=string, span="", file="RedisStorageConnection.cs"];
m1_292 [label=query, span="", file="RedisStorageConnection.cs"];
m1_293 [label=string, span="", file="RedisStorageConnection.cs"];
m1_294 [label=string, span="", file="RedisStorageConnection.cs"];
m1_295 [label=string, span="", file="RedisStorageConnection.cs"];
m1_296 [label=string, span="", file="RedisStorageConnection.cs"];
m1_297 [label=string, span="", file="RedisStorageConnection.cs"];
m1_298 [label=int, span="", file="RedisStorageConnection.cs"];
m1_299 [label=int, span="", file="RedisStorageConnection.cs"];
m1_300 [label=trimSql, span="", file="RedisStorageConnection.cs"];
m1_301 [label=string, span="", file="RedisStorageConnection.cs"];
m1_302 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="RedisStorageConnection.cs"];
m1_303 [label=sql, span="", file="RedisStorageConnection.cs"];
m1_304 [label=string, span="", file="RedisStorageConnection.cs"];
m1_305 [label=query, span="", file="RedisStorageConnection.cs"];
m1_306 [label=string, span="", file="RedisStorageConnection.cs"];
m1_307 [label="System.Collections.Generic.IList<string>", span="", file="RedisStorageConnection.cs"];
m1_308 [label=query, span="", file="RedisStorageConnection.cs"];
m1_309 [label=string, span="", file="RedisStorageConnection.cs"];
m1_310 [label=query, span="", file="RedisStorageConnection.cs"];
m1_311 [label=string, span="", file="RedisStorageConnection.cs"];
m1_312 [label="System.TimeSpan", span="", file="RedisStorageConnection.cs"];
m1_313 [label=query, span="", file="RedisStorageConnection.cs"];
m1_314 [label=string, span="", file="RedisStorageConnection.cs"];
m1_315 [label="System.TimeSpan", span="", file="RedisStorageConnection.cs"];
m1_316 [label=query, span="", file="RedisStorageConnection.cs"];
m1_317 [label=string, span="", file="RedisStorageConnection.cs"];
m1_318 [label="System.TimeSpan", span="", file="RedisStorageConnection.cs"];
m1_319 [label=query, span="", file="RedisStorageConnection.cs"];
m1_320 [label=string, span="", file="RedisStorageConnection.cs"];
m1_321 [label=query, span="", file="RedisStorageConnection.cs"];
m1_322 [label=string, span="", file="RedisStorageConnection.cs"];
m1_323 [label=query, span="", file="RedisStorageConnection.cs"];
m1_324 [label=string, span="", file="RedisStorageConnection.cs"];
m1_325 [label=query, span="", file="RedisStorageConnection.cs"];
m2_106 [label="string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="185-185", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerWatchdog.cs"];
m2_108 [label="QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="188-190", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerWatchdog.cs"];
m2_107 [label="AcquireSetLock()", span="187-187", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerWatchdog.cs"];
m2_109 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerWatchdog.cs"];
m2_19 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="ServerWatchdog.cs"];
m2_101 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ServerWatchdog.cs"];
m2_256 [label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="353-353", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ServerWatchdog.cs"];
m2_257 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ServerWatchdog.cs"];
m2_9 [label="Entry HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", span="46-46", cluster="HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdog.cs"];
m2_30 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_49 [label="Entry Hangfire.States.IState.SerializeData()", span="27-27", cluster="Hangfire.States.IState.SerializeData()", file="ServerWatchdog.cs"];
m2_10 [label="Logger.Info(''Server watchdog has been started.'')", span="50-50", cluster="HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdog.cs"];
m2_11 [label=true, span="52-52", cluster="HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdog.cs"];
m2_12 [label="JobServer.RetryOnException(\r\n                        () => RemoveTimedOutServers(ServerTimeout), \r\n                        _stopped)", span="54-56", cluster="HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdog.cs"];
m2_17 [label="Exit HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", span="46-46", cluster="HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdog.cs"];
m2_13 [label="_stopped.WaitOne(CheckInterval)", span="58-58", cluster="HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdog.cs"];
m2_14 [label="Logger.Info(''Server watchdog has been stopped.'')", span="64-64", cluster="HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdog.cs"];
m2_15 [label=Exception, span="66-66", cluster="HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdog.cs"];
m2_16 [label="Logger.Fatal(''Unexpected exception caught.'', ex)", span="68-68", cluster="HangFire.Server.Components.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdog.cs"];
m2_18 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="ServerWatchdog.cs"];
m2_69 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ServerWatchdog.cs"];
m2_70 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="137-139", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ServerWatchdog.cs"];
m2_71 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ServerWatchdog.cs"];
m2_229 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerWatchdog.cs"];
m2_230 [label="key == null", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerWatchdog.cs"];
m2_234 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="327-327", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerWatchdog.cs"];
m2_231 [label="throw new ArgumentNullException(''key'');", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerWatchdog.cs"];
m2_232 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="323-324", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerWatchdog.cs"];
m2_233 [label="AcquireSetLock()", span="326-326", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerWatchdog.cs"];
m2_235 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerWatchdog.cs"];
m2_63 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ServerWatchdog.cs"];
m2_239 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerWatchdog.cs"];
m2_240 [label="key == null", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerWatchdog.cs"];
m2_244 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="338-338", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerWatchdog.cs"];
m2_241 [label="throw new ArgumentNullException(''key'');", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerWatchdog.cs"];
m2_242 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="334-335", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerWatchdog.cs"];
m2_243 [label="AcquireListLock()", span="337-337", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerWatchdog.cs"];
m2_245 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerWatchdog.cs"];
m2_81 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ServerWatchdog.cs"];
m2_82 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="151-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ServerWatchdog.cs"];
m2_83 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ServerWatchdog.cs"];
m2_254 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="ServerWatchdog.cs"];
m2_255 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ServerWatchdog.cs"];
m2_260 [label="_lockedResources.Add(resource)", span="363-363", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ServerWatchdog.cs"];
m2_261 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ServerWatchdog.cs"];
m2_199 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_200 [label="key == null", span="288-288", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_204 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="294-294", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_201 [label="throw new ArgumentNullException(''key'');", span="288-288", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_202 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="290-291", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_203 [label="AcquireSetLock()", span="293-293", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_205 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_0 [label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33", cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ServerWatchdog.cs"];
m2_1 [label="_storage = storage", span="35-35", cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ServerWatchdog.cs"];
m2_3 [label="Entry HangFire.Server.Components.ServerWatchdog.RemoveTimedOutServers(System.TimeSpan)", span="38-38", cluster="HangFire.Server.Components.ServerWatchdog.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.cs"];
m2_5 [label="connection.RemoveTimedOutServers(timeout)", span="42-42", cluster="HangFire.Server.Components.ServerWatchdog.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.cs", color=green, community=0];
m2_6 [label="Exit HangFire.Server.Components.ServerWatchdog.RemoveTimedOutServers(System.TimeSpan)", span="38-38", cluster="HangFire.Server.Components.ServerWatchdog.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.cs"];
m2_7 [label="Entry HangFire.JobStorage.GetConnection()", span="45-45", cluster="HangFire.JobStorage.GetConnection()", file="ServerWatchdog.cs"];
m2_2 [label="Exit HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33", cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ServerWatchdog.cs"];
m2_4 [label="var connection = _storage.GetConnection()", span="40-40", cluster="HangFire.Server.Components.ServerWatchdog.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.cs"];
m2_8 [label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.cs"];
m2_145 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ServerWatchdog.cs"];
m2_258 [label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="358-358", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ServerWatchdog.cs"];
m2_259 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ServerWatchdog.cs"];
m2_251 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="ServerWatchdog.cs"];
m2_42 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ServerWatchdog.cs"];
m2_43 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="91-94", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ServerWatchdog.cs"];
m2_44 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="96-106", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ServerWatchdog.cs"];
m2_45 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ServerWatchdog.cs"];
m2_209 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_210 [label="key == null", span="299-299", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_214 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="305-305", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_211 [label="throw new ArgumentNullException(''key'');", span="299-299", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_212 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="301-302", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_213 [label="AcquireListLock()", span="304-304", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_215 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_51 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ServerWatchdog.cs"];
m2_52 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="111-113", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ServerWatchdog.cs"];
m2_53 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="115-124", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ServerWatchdog.cs"];
m2_54 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ServerWatchdog.cs"];
m2_68 [label="Entry Hangfire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", span="24-24", cluster="Hangfire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", file="ServerWatchdog.cs"];
m2_87 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_88 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="158-160", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_89 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_179 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerWatchdog.cs"];
m2_180 [label="key == null", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerWatchdog.cs"];
m2_184 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="272-272", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerWatchdog.cs"];
m2_181 [label="throw new ArgumentNullException(''key'');", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerWatchdog.cs"];
m2_182 [label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="269-269", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerWatchdog.cs"];
m2_183 [label="AcquireSetLock()", span="271-271", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerWatchdog.cs"];
m2_185 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerWatchdog.cs"];
m2_93 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ServerWatchdog.cs"];
m2_94 [label="AddToSet(key, value, 0.0)", span="165-165", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ServerWatchdog.cs"];
m2_95 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ServerWatchdog.cs"];
m2_31 [label="HangFire.Server.Components.ServerWatchdog", span="", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ServerWatchdog.cs"];
m2_249 [label="_commandQueue.Enqueue(action)", span="343-343", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ServerWatchdog.cs"];
m2_250 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ServerWatchdog.cs"];
m2_29 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="77-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_58 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ServerWatchdog.cs"];
m2_59 [label="var provider = _queueProviders.GetProvider(queue)", span="129-129", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ServerWatchdog.cs"];
m2_61 [label="QueueCommand(_ => persistentQueue.Enqueue(queue, jobId))", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ServerWatchdog.cs"];
m2_60 [label="var persistentQueue = provider.GetJobQueue(_connection)", span="130-130", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ServerWatchdog.cs"];
m2_62 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ServerWatchdog.cs"];
m2_75 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_76 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="144-146", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_77 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_20 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerWatchdog.cs"];
m2_23 [label="RemoveTimedOutServers(ServerTimeout)", span="55-55", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_136 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.cs"];
m2_137 [label="key == null", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.cs"];
m2_139 [label="keyValuePairs == null", span="227-227", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.cs"];
m2_143 [label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="237-239", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.cs"];
m2_138 [label="throw new ArgumentNullException(''key'');", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.cs"];
m2_140 [label="throw new ArgumentNullException(''keyValuePairs'');", span="227-227", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.cs"];
m2_141 [label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="229-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.cs"];
m2_142 [label="AcquireHashLock()", span="236-236", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.cs"];
m2_144 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.cs"];
m2_265 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="ServerWatchdog.cs"];
m2_96 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerWatchdog.cs"];
m2_97 [label="string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="170-175", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerWatchdog.cs"];
m2_99 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="178-180", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerWatchdog.cs"];
m2_98 [label="AcquireSetLock()", span="177-177", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerWatchdog.cs"];
m2_100 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerWatchdog.cs"];
m2_153 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerWatchdog.cs"];
m2_154 [label="key == null", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerWatchdog.cs"];
m2_158 [label="QueueCommand(x => x.Execute(query, new { key }))", span="249-249", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerWatchdog.cs"];
m2_155 [label="throw new ArgumentNullException(''key'');", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerWatchdog.cs"];
m2_156 [label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="246-246", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerWatchdog.cs"];
m2_157 [label="AcquireHashLock()", span="248-248", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerWatchdog.cs"];
m2_159 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerWatchdog.cs"];
m2_24 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_35 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="ServerWatchdog.cs"];
m2_36 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ServerWatchdog.cs"];
m2_37 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="84-86", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ServerWatchdog.cs"];
m2_38 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ServerWatchdog.cs"];
m2_25 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_26 [label="new { resource = x }", span="63-63", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_27 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_28 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_263 [label="return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value })\r\n                : new TransactionScope();", span="368-371", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="ServerWatchdog.cs"];
m2_264 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="ServerWatchdog.cs"];
m2_189 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_190 [label="key == null", span="277-277", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_194 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="283-283", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_191 [label="throw new ArgumentNullException(''key'');", span="277-277", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_192 [label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="279-280", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_193 [label="AcquireHashLock()", span="282-282", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_195 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerWatchdog.cs"];
m2_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServerWatchdog.cs"];
m2_50 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ServerWatchdog.cs"];
m2_266 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="ServerWatchdog.cs"];
m2_22 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerWatchdog.cs"];
m2_33 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="77-79", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_32 [label="Entry lambda expression", span="77-79", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_34 [label="Exit lambda expression", span="77-79", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_40 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="84-86", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_39 [label="Entry lambda expression", span="84-86", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_41 [label="Exit lambda expression", span="84-86", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_47 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="96-106", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_46 [label="Entry lambda expression", span="96-106", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_48 [label="Exit lambda expression", span="96-106", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_56 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="115-124", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_55 [label="Entry lambda expression", span="115-124", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_57 [label="Exit lambda expression", span="115-124", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_66 [label="persistentQueue.Enqueue(queue, jobId)", span="132-132", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_65 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_67 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_73 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="137-139", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_72 [label="Entry lambda expression", span="137-139", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_74 [label="Exit lambda expression", span="137-139", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_79 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="144-146", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_78 [label="Entry lambda expression", span="144-146", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_80 [label="Exit lambda expression", span="144-146", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_85 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="151-153", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_84 [label="Entry lambda expression", span="151-153", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_86 [label="Exit lambda expression", span="151-153", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_91 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="158-160", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_90 [label="Entry lambda expression", span="158-160", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_92 [label="Exit lambda expression", span="158-160", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_103 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="178-180", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_102 [label="Entry lambda expression", span="178-180", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_104 [label="Exit lambda expression", span="178-180", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_111 [label="x.Execute(\r\n                query,\r\n                new { key, value })", span="188-190", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_110 [label="Entry lambda expression", span="188-190", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_112 [label="Exit lambda expression", span="188-190", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_119 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="196-198", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_118 [label="Entry lambda expression", span="196-198", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_120 [label="Exit lambda expression", span="196-198", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_126 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="204-206", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_125 [label="Entry lambda expression", span="204-206", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_127 [label="Exit lambda expression", span="204-206", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_134 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="219-221", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_133 [label="Entry lambda expression", span="219-221", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_135 [label="Exit lambda expression", span="219-221", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_148 [label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="237-239", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_151 [label="new { key = key, field = y.Key, value = y.Value }", span="239-239", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_147 [label="Entry lambda expression", span="237-239", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_149 [label="Exit lambda expression", span="237-239", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_150 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_152 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_161 [label="x.Execute(query, new { key })", span="249-249", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_160 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_162 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_173 [label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="262-262", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_177 [label="new { key = key, value = value }", span="262-262", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_172 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_174 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_176 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_178 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_187 [label="x.Execute(query, new { key = key })", span="272-272", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_186 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_188 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_197 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="283-283", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_196 [label="Entry lambda expression", span="283-283", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_198 [label="Exit lambda expression", span="283-283", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_207 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="294-294", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_206 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_208 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_217 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="305-305", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_216 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_218 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_227 [label="x.Execute(query, new { key = key })", span="316-316", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_226 [label="Entry lambda expression", span="316-316", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_228 [label="Exit lambda expression", span="316-316", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_237 [label="x.Execute(query, new { key = key })", span="327-327", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_236 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_238 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_247 [label="x.Execute(query, new { key = key })", span="338-338", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_246 [label="Entry lambda expression", span="338-338", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_248 [label="Exit lambda expression", span="338-338", cluster="lambda expression", file="ServerWatchdog.cs"];
m2_163 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerWatchdog.cs"];
m2_164 [label="key == null", span="254-254", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerWatchdog.cs"];
m2_166 [label="items == null", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerWatchdog.cs"];
m2_170 [label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="262-262", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerWatchdog.cs"];
m2_165 [label="throw new ArgumentNullException(''key'');", span="254-254", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerWatchdog.cs"];
m2_167 [label="throw new ArgumentNullException(''items'');", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerWatchdog.cs"];
m2_168 [label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="257-259", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerWatchdog.cs"];
m2_169 [label="AcquireSetLock()", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerWatchdog.cs"];
m2_171 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerWatchdog.cs"];
m2_262 [label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="ServerWatchdog.cs"];
m2_175 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ServerWatchdog.cs"];
m2_64 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="ServerWatchdog.cs"];
m2_146 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ServerWatchdog.cs"];
m2_121 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ServerWatchdog.cs"];
m2_122 [label="AcquireListLock()", span="203-203", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ServerWatchdog.cs"];
m2_123 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="204-206", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ServerWatchdog.cs"];
m2_124 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ServerWatchdog.cs"];
m2_117 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ServerWatchdog.cs"];
m2_252 [label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="348-348", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ServerWatchdog.cs"];
m2_253 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ServerWatchdog.cs"];
m2_219 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerWatchdog.cs"];
m2_220 [label="key == null", span="310-310", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerWatchdog.cs"];
m2_224 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="316-316", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerWatchdog.cs"];
m2_221 [label="throw new ArgumentNullException(''key'');", span="310-310", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerWatchdog.cs"];
m2_222 [label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="312-313", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerWatchdog.cs"];
m2_223 [label="AcquireHashLock()", span="315-315", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerWatchdog.cs"];
m2_225 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerWatchdog.cs"];
m2_113 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ServerWatchdog.cs"];
m2_114 [label="AcquireListLock()", span="195-195", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ServerWatchdog.cs"];
m2_115 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="196-198", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ServerWatchdog.cs"];
m2_116 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ServerWatchdog.cs"];
m2_128 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ServerWatchdog.cs"];
m2_129 [label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="211-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ServerWatchdog.cs"];
m2_131 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="219-221", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ServerWatchdog.cs"];
m2_130 [label="AcquireListLock()", span="218-218", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ServerWatchdog.cs"];
m2_132 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ServerWatchdog.cs"];
m2_267 [label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="ServerWatchdog.cs"];
m2_268 [label=string, span="", file="ServerWatchdog.cs"];
m2_269 [label="System.TimeSpan", span="", file="ServerWatchdog.cs"];
m2_270 [label=string, span="", file="ServerWatchdog.cs"];
m2_271 [label=string, span="", file="ServerWatchdog.cs"];
m2_272 [label="Hangfire.States.IState", span="", file="ServerWatchdog.cs"];
m2_273 [label=addAndSetStateSql, span="", file="ServerWatchdog.cs"];
m2_274 [label=string, span="", file="ServerWatchdog.cs"];
m2_275 [label="Hangfire.States.IState", span="", file="ServerWatchdog.cs"];
m2_276 [label=addStateSql, span="", file="ServerWatchdog.cs"];
m2_277 [label=string, span="", file="ServerWatchdog.cs"];
m2_278 [label=string, span="", file="ServerWatchdog.cs"];
m2_279 [label=persistentQueue, span="", file="ServerWatchdog.cs"];
m2_280 [label=string, span="", file="ServerWatchdog.cs"];
m2_281 [label=string, span="", file="ServerWatchdog.cs"];
m2_282 [label="System.TimeSpan", span="", file="ServerWatchdog.cs"];
m2_283 [label=string, span="", file="ServerWatchdog.cs"];
m2_284 [label=string, span="", file="ServerWatchdog.cs"];
m2_285 [label="System.TimeSpan", span="", file="ServerWatchdog.cs"];
m2_286 [label=string, span="", file="ServerWatchdog.cs"];
m2_287 [label=string, span="", file="ServerWatchdog.cs"];
m2_288 [label=double, span="", file="ServerWatchdog.cs"];
m2_289 [label=addSql, span="", file="ServerWatchdog.cs"];
m2_290 [label=string, span="", file="ServerWatchdog.cs"];
m2_291 [label=string, span="", file="ServerWatchdog.cs"];
m2_292 [label=query, span="", file="ServerWatchdog.cs"];
m2_293 [label=string, span="", file="ServerWatchdog.cs"];
m2_294 [label=string, span="", file="ServerWatchdog.cs"];
m2_295 [label=string, span="", file="ServerWatchdog.cs"];
m2_296 [label=string, span="", file="ServerWatchdog.cs"];
m2_297 [label=string, span="", file="ServerWatchdog.cs"];
m2_298 [label=int, span="", file="ServerWatchdog.cs"];
m2_299 [label=int, span="", file="ServerWatchdog.cs"];
m2_300 [label=trimSql, span="", file="ServerWatchdog.cs"];
m2_301 [label=string, span="", file="ServerWatchdog.cs"];
m2_302 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="ServerWatchdog.cs"];
m2_303 [label=sql, span="", file="ServerWatchdog.cs"];
m2_304 [label=string, span="", file="ServerWatchdog.cs"];
m2_305 [label=query, span="", file="ServerWatchdog.cs"];
m2_306 [label=string, span="", file="ServerWatchdog.cs"];
m2_307 [label="System.Collections.Generic.IList<string>", span="", file="ServerWatchdog.cs"];
m2_308 [label=query, span="", file="ServerWatchdog.cs"];
m2_309 [label=string, span="", file="ServerWatchdog.cs"];
m2_310 [label=query, span="", file="ServerWatchdog.cs"];
m2_311 [label=string, span="", file="ServerWatchdog.cs"];
m2_312 [label="System.TimeSpan", span="", file="ServerWatchdog.cs"];
m2_313 [label=query, span="", file="ServerWatchdog.cs"];
m2_314 [label=string, span="", file="ServerWatchdog.cs"];
m2_315 [label="System.TimeSpan", span="", file="ServerWatchdog.cs"];
m2_316 [label=query, span="", file="ServerWatchdog.cs"];
m2_317 [label=string, span="", file="ServerWatchdog.cs"];
m2_318 [label="System.TimeSpan", span="", file="ServerWatchdog.cs"];
m2_319 [label=query, span="", file="ServerWatchdog.cs"];
m2_320 [label=string, span="", file="ServerWatchdog.cs"];
m2_321 [label=query, span="", file="ServerWatchdog.cs"];
m2_322 [label=string, span="", file="ServerWatchdog.cs"];
m2_323 [label=query, span="", file="ServerWatchdog.cs"];
m2_324 [label=string, span="", file="ServerWatchdog.cs"];
m2_325 [label=query, span="", file="ServerWatchdog.cs"];
m3_11 [label="_connection.Dispose()", span="34-34", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m3_16 [label="return GetNumberOfJobsByStateName(ScheduledState.Name);", span="39-39", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m3_17 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m3_18 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs"];
m3_19 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m3_71 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="SqlServerMonitoringApi.cs"];
m3_142 [label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="SqlServerMonitoringApi.cs"];
m3_50 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m3_55 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="121-122", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m3_51 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="114-114", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m3_52 [label=jobs, span="116-116", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m3_54 [label="var dto = selector(DeserializeJobMethod(job.InvocationData), stateData)", span="119-119", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m3_56 [label="return new JobList<TDto>(result);", span="125-125", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m3_53 [label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="118-118", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m3_57 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m3_62 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SqlServerMonitoringApi.cs"];
m3_43 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="SqlServerMonitoringApi.cs"];
m3_178 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_181 [label="var multi = _connection.QueryMultiple(sql)", span="362-362", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_180 [label="string sql = @''\r\nselect [State], count(id) as [Count] From HangFire.Job group by [State]\r\nselect count(Id) from HangFire.Server\r\nselect count(distinct Queue) from HangFire.JobQueue\r\nselect sum([Value]) from HangFire.Counter where [Key] = 'stats:succeeded'\r\n''", span="355-360", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_182 [label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="364-364", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_188 [label="stats.Servers = multi.Read<int>().Single()", span="373-373", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_189 [label="stats.Queues = multi.Read<int>().Single()", span="374-374", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_190 [label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="376-376", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_179 [label="var stats = new StatisticsDto()", span="353-353", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_183 [label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_187 [label="stats.Scheduled = getCountIfExists(ScheduledState.Name)", span="371-371", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_191 [label="return stats;", span="379-379", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_184 [label="stats.Enqueued = getCountIfExists(EnqueuedState.Name)", span="368-368", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_185 [label="stats.Failed = getCountIfExists(FailedState.Name)", span="369-369", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_186 [label="stats.Processing = getCountIfExists(ProcessingState.Name)", span="370-370", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_192 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m3_42 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="SqlServerMonitoringApi.cs"];
m3_83 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m3_84 [label="return GetTimelineStats(''failed'');", span="161-161", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m3_85 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m3_103 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerMonitoringApi.cs"];
m3_7 [label="Entry HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="25-25", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="SqlServerMonitoringApi.cs"];
m3_147 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_215 [label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="399-402", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_210 [label="dates.Add(endDate)", span="388-388", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_213 [label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="392-392", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_214 [label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="394-397", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_216 [label=keys, span="404-404", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_217 [label="!valuesMap.ContainsKey(key)", span="406-406", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_218 [label="valuesMap.Add(key, 0)", span="406-406", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_222 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="412-412", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_206 [label="var endDate = DateTime.UtcNow", span="384-384", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_207 [label="var dates = new List<DateTime>()", span="385-385", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_209 [label="i < 24", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_211 [label="endDate = endDate.AddHours(-1)", span="389-389", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_219 [label="var result = new Dictionary<DateTime, long>()", span="409-409", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_221 [label="i < dates.Count", span="410-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_220 [label="var i = 0", span="410-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_223 [label="result.Add(dates[i], value)", span="413-413", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_208 [label="var i = 0", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_212 [label="i++", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_225 [label="return result;", span="416-416", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_224 [label="i++", span="410-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_226 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_141 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerMonitoringApi.cs"];
m3_151 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_153 [label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="322-322", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_159 [label="return new JobDetailsDto\r\n                {\r\n                    Arguments = JobHelper.FromJson<string[]>(job.Arguments),\r\n                    CreatedAt = job.CreatedAt,\r\n                    State = job.State,\r\n                    Method = DeserializeJobMethod(job.InvocationData),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", span="334-342", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_152 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.JobHistory where JobId = @id order by CreatedAt desc''", span="317-320", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_154 [label="var job = multi.Read<Job>().SingleOrDefault()", span="324-324", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_157 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="327-327", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_158 [label="var history =\r\n                    multi.Read<JobHistory>()\r\n                        .ToList()\r\n                        .Select(x => JobHelper.FromJson<Dictionary<string, string>>(x.Data))\r\n                        .ToList()", span="328-332", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_155 [label="job == null", span="325-325", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_156 [label="return null;", span="325-325", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_160 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m3_49 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="SqlServerMonitoringApi.cs"];
m3_24 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", span="51-51", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs"];
m3_25 [label="return _connection.Query<int>(\r\n                @''select count(JobId) from HangFire.JobQueue ''\r\n                + @''where Queue = @queue and FetchedAt is not NULL'',\r\n                new { queue = queue })\r\n                .Single();", span="53-57", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs"];
m3_26 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", span="51-51", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs"];
m3_27 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="60-60", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m3_32 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="67-67", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="SqlServerMonitoringApi.cs"];
m3_33 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="73-73", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerMonitoringApi.cs"];
m3_34 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="75-76", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerMonitoringApi.cs"];
m3_144 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m3_145 [label="return GetHourlyTimelineStats(''succeeded'');", span="307-307", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m3_146 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m3_6 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SqlServerMonitoringApi.cs"];
m3_194 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="SqlServerMonitoringApi.cs"];
m3_12 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m3_13 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerMonitoringApi.cs"];
m3_14 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerMonitoringApi.cs"];
m3_104 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_105 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.Name,\r\n                (method, stateData) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="206-214", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_106 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_96 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_97 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                FailedState.Name,\r\n                (method, stateData) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                });", span="190-201", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_98 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_38 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m3_39 [label="Entry lambda expression", span="83-88", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_40 [label="new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", span="83-88", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_41 [label="Exit lambda expression", span="83-88", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_205 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerMonitoringApi.cs"];
m3_121 [label="Entry Unk.EnqueuedJobs", span="", cluster="Unk.EnqueuedJobs", file="SqlServerMonitoringApi.cs"];
m3_79 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m3_80 [label="return GetTimelineStats(''succeeded'');", span="156-156", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m3_81 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m3_59 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerMonitoringApi.cs"];
m3_139 [label="Entry List<KeyValuePair<string, DequeuedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, DequeuedJobDto>>.cstr", file="SqlServerMonitoringApi.cs"];
m3_60 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m3_69 [label="return null;", span="138-138", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m3_68 [label=JobLoadException, span="136-136", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m3_66 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="130-130", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m3_67 [label="return JobMethod.Deserialize(data);", span="134-134", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m3_70 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="SqlServerMonitoringApi.cs"];
m3_193 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SqlServerMonitoringApi.cs"];
m3_195 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerMonitoringApi.cs"];
m3_63 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="SqlServerMonitoringApi.cs"];
m3_28 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="SqlServerMonitoringApi.cs"];
m3_29 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="SqlServerMonitoringApi.cs"];
m3_95 [label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="SqlServerMonitoringApi.cs"];
m3_143 [label="Entry Unk.DeserializeJobMethod", span="", cluster="Unk.DeserializeJobMethod", file="SqlServerMonitoringApi.cs"];
m3_5 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerMonitoringApi.cs"];
m3_264 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs"];
m3_35 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_36 [label="return GetJobs(\r\n                from, count,\r\n                ProcessingState.Name,\r\n                (method, stateData) => new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                });", span="80-88", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_8 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m3_9 [label="_transaction.Complete()", span="32-32", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m3_10 [label="_transaction.Dispose()", span="33-33", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs"];
m3_165 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SqlServerMonitoringApi.cs"];
m3_202 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_75 [label="Entry lambda expression", span="147-151", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_99 [label="Entry lambda expression", span="194-201", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_107 [label="Entry lambda expression", span="210-214", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_127 [label="Entry lambda expression", span="266-270", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_237 [label="Entry lambda expression", span="402-402", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_240 [label="Entry lambda expression", span="402-402", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_272 [label="Entry lambda expression", span="442-442", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_275 [label="Entry lambda expression", span="442-442", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_173 [label="JobHelper.FromJson<Dictionary<string, string>>(x.Data)", span="331-331", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_77 [label="Exit lambda expression", span="147-151", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_76 [label="new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="147-151", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_269 [label="String.Format(''stats:{0}:{1}'', type, x)", span="432-432", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_233 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="392-392", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_101 [label="Exit lambda expression", span="194-201", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_100 [label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="194-201", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_109 [label="Exit lambda expression", span="210-214", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_108 [label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="210-214", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_129 [label="Exit lambda expression", span="266-270", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_128 [label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                }", span="266-270", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_166 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_169 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_172 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_196 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_199 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_203 [label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_232 [label="Entry lambda expression", span="392-392", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_239 [label="Exit lambda expression", span="402-402", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_238 [label="(string)x.Key", span="402-402", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_242 [label="Exit lambda expression", span="402-402", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_241 [label="(long)x.Count", span="402-402", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_268 [label="Entry lambda expression", span="432-432", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_274 [label="Exit lambda expression", span="442-442", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_273 [label="(string)x.Key", span="442-442", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_277 [label="Exit lambda expression", span="442-442", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_276 [label="(long)x.Count", span="442-442", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_174 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_265 [label="Entry lambda expression", span="431-431", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_270 [label="Exit lambda expression", span="432-432", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_234 [label="Exit lambda expression", span="392-392", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_168 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_167 [label="x.Name", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_171 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_170 [label="x.Value", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_198 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_197 [label="x.State", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_201 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_200 [label="x.Count", span="364-364", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_204 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_266 [label="x.ToString(''yyyy-MM-dd'')", span="431-431", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_267 [label="Exit lambda expression", span="431-431", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m3_120 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerMonitoringApi.cs"];
m3_64 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs"];
m3_48 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerMonitoringApi.cs"];
m3_271 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="SqlServerMonitoringApi.cs"];
m3_61 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="SqlServerMonitoringApi.cs"];
m3_0 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs"];
m3_1 [label="_connection = connection", span="22-22", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs"];
m3_235 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="SqlServerMonitoringApi.cs"];
m3_2 [label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="19-19", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="SqlServerMonitoringApi.cs"];
m3_3 [label="Given(String.Format(''a job in the '{0}' queue'', DefaultQueue))", span="21-21", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="SqlServerMonitoringApi.cs"];
m3_4 [label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="19-19", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="SqlServerMonitoringApi.cs"];
m3_119 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerMonitoringApi.cs"];
m3_231 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="SqlServerMonitoringApi.cs"];
m3_78 [label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="SqlServerMonitoringApi.cs"];
m3_228 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerMonitoringApi.cs"];
m3_37 [label="Entry Unk.DoesNotContain", span="", cluster="Unk.DoesNotContain", file="SqlServerMonitoringApi.cs"];
m3_229 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerMonitoringApi.cs"];
m3_227 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs"];
m3_23 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerMonitoringApi.cs"];
m3_15 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs"];
m3_45 [label="var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="92-93", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerMonitoringApi.cs"];
m3_46 [label="Assert.AreEqual(length, actualLength)", span="94-94", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerMonitoringApi.cs"];
m3_44 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="90-90", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerMonitoringApi.cs"];
m3_47 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="90-90", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerMonitoringApi.cs"];
m3_161 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="SqlServerMonitoringApi.cs"];
m3_110 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SqlServerMonitoringApi.cs"];
m3_140 [label="Entry KeyValuePair<string, DequeuedJobDto>.cstr", span="", cluster="KeyValuePair<string, DequeuedJobDto>.cstr", file="SqlServerMonitoringApi.cs"];
m3_72 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_73 [label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.Name,\r\n                (method, stateData) => new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="144-151", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_74 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m3_122 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_124 [label="var jobs = _connection.Query<Job>(\r\n                enqueuedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="259-262", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_125 [label="return DeserializeJobs(\r\n                jobs,\r\n                (method, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                });", span="264-270", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_123 [label="string enqueuedJobsSql = @''\r\nselect * from\r\n(select j.*, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is null) as r\r\nwhere r.row_num between @start and @end''", span="252-257", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_126 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_20 [label="return _connection.Query<int>(\r\n                @''select count(JobId) from HangFire.JobQueue '' \r\n                + @''where Queue = @queue and FetchedAt is NULL'',\r\n                new { queue = queue })\r\n                .Single();", span="44-48", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m3_21 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m3_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerMonitoringApi.cs"];
m3_86 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m3_87 [label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="166-168", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m3_91 [label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="175-182", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m3_88 [label="var result = new List<ServerDto>()", span="170-170", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m3_89 [label=servers, span="172-172", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m3_90 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="174-174", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m3_92 [label="return result;", span="185-185", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m3_93 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m3_236 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs"];
m3_163 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs"];
m3_175 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m3_176 [label="return GetNumberOfJobsByStateName(SucceededState.Name);", span="348-348", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m3_177 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m3_130 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerMonitoringApi.cs"];
m3_102 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SqlServerMonitoringApi.cs"];
m3_82 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="419-419", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_252 [label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="439-442", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_247 [label="dates.Add(endDate)", span="427-427", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_250 [label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="432-432", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_251 [label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="434-437", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_253 [label=keys, span="444-444", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_254 [label="!valuesMap.ContainsKey(key)", span="446-446", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_255 [label="valuesMap.Add(key, 0)", span="446-446", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_259 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="452-452", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_243 [label="var endDate = DateTime.UtcNow.Date", span="421-421", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_246 [label="startDate <= endDate", span="425-425", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_245 [label="var dates = new List<DateTime>()", span="423-423", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_248 [label="endDate = endDate.AddDays(-1)", span="428-428", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_249 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="431-431", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_256 [label="var result = new Dictionary<DateTime, long>()", span="449-449", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_258 [label="i < stringDates.Count", span="450-450", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_257 [label="var i = 0", span="450-450", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_260 [label="result.Add(dates[i], value)", span="453-453", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_244 [label="var startDate = endDate.AddDays(-7)", span="422-422", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_262 [label="return result;", span="456-456", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_261 [label="i++", span="450-450", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_263 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="419-419", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs"];
m3_230 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs"];
m3_65 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerMonitoringApi.cs"];
m3_30 [label="return _connection.Query<int>(\r\n                @''select count(Id) from HangFire.Job where State = @state'',\r\n                new { state = stateName })\r\n                .Single();", span="67-70", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs"];
m3_31 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs"];
m3_148 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m3_149 [label="return GetHourlyTimelineStats(''failed'');", span="312-312", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m3_150 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m3_164 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerMonitoringApi.cs"];
m3_58 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerMonitoringApi.cs"];
m3_111 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m3_116 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue.Queue,\r\n                    Length = queue.Enqueued,\r\n                    Dequeued = queue.Fetched,\r\n                    FirstJobs = EnqueuedJobs(queue.Queue, 0, 5)\r\n                })", span="238-244", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m3_114 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="234-234", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m3_115 [label=queues, span="236-236", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m3_113 [label="var queues = _connection.Query<QueueStatusDto>(queuesAndStatusSql).ToList()", span="233-233", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m3_117 [label="return result;", span="247-247", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m3_112 [label="string queuesAndStatusSql = @''\r\nselect distinct [Queue],\r\n	(select count(JobId) from HangFire.JobQueue as a where q.Queue = a.Queue and a.FetchedAt is null) as Enqueued,\r\n	(select count(JobId) from HangFire.JobQueue as b where q.Queue = b.Queue and b.FetchedAt is not null) as Fetched\r\nfrom HangFire.[JobQueue] as q\r\n''", span="226-231", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m3_118 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m3_162 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs"];
m3_131 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_133 [label="var jobs = _connection.Query<Job>(\r\n                fetchedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="282-285", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_136 [label="result.Add(new KeyValuePair<string, DequeuedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new DequeuedJobDto\r\n                    {\r\n                        Method = DeserializeJobMethod(job.InvocationData),\r\n                        State = job.State,\r\n                        CreatedAt = job.CreatedAt,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="291-299", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_132 [label="string fetchedJobsSql = @''\r\nselect * from\r\n(select j.*, jq.FetchedAt, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is not null) as r\r\nwhere r.row_num between @start and @end''", span="275-280", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_134 [label="var result = new List<KeyValuePair<string, DequeuedJobDto>>(jobs.Count)", span="287-287", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_135 [label=jobs, span="289-289", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_137 [label="return new JobList<DequeuedJobDto>(result);", span="302-302", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_138 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m3_278 [label="HangFire.SqlServer.SqlServerMonitoringApi", span="", file="SqlServerMonitoringApi.cs"];
m3_281 [label=string, span="", file="SqlServerMonitoringApi.cs"];
m3_280 [label=string, span="", file="SqlServerMonitoringApi.cs"];
m3_279 [label=countByStates, span="", file="SqlServerMonitoringApi.cs"];
m4_48 [label="Entry HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", span="112-112", cluster="HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", file="SqlStorageConnection.cs"];
m4_49 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="114-116", cluster="HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", file="SqlStorageConnection.cs"];
m4_50 [label="Exit HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", span="112-112", cluster="HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", file="SqlStorageConnection.cs"];
m4_23 [label="Entry HangFire.SqlServer.SqlJobLock.SqlJobLock(string, SqlConnection)", span="28-28", cluster="HangFire.SqlServer.SqlJobLock.SqlJobLock(string, SqlConnection)", file="SqlStorageConnection.cs"];
m4_16 [label="Entry HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34", cluster="HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs"];
m4_17 [label="return new SqlServerFetcher(_connection, queueNames);", span="36-36", cluster="HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs"];
m4_18 [label="Exit HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34", cluster="HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs"];
m4_19 [label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs"];
m4_46 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="4-4", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlStorageConnection.cs"];
m4_54 [label="Entry HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="126-126", cluster="HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_55 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) })", span="128-130", cluster="HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=1, file="SqlStorageConnection.cs"];
m4_56 [label="Exit HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="126-126", cluster="HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_0 [label="Entry HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="16-16", cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlStorageConnection.cs"];
m4_1 [label="_connection = connection", span="18-18", cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlStorageConnection.cs"];
m4_4 [label="Storage = storage", span="21-21", cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlStorageConnection.cs"];
m4_2 [label="Jobs = new SqlStoredJobs(_connection)", span="19-19", cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlStorageConnection.cs"];
m4_3 [label="Sets = new SqlStoredSets(_connection)", span="20-20", cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlStorageConnection.cs"];
m4_5 [label="Exit HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="16-16", cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlStorageConnection.cs"];
m4_15 [label="Entry HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19", cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlStorageConnection.cs"];
m4_51 [label="Entry HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", span="119-119", cluster="HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", file="SqlStorageConnection.cs"];
m4_52 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="121-123", cluster="HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", file="SqlStorageConnection.cs"];
m4_53 [label="Exit HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", span="119-119", cluster="HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", file="SqlStorageConnection.cs"];
m4_57 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlStorageConnection.cs"];
m4_7 [label="Entry HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", span="11-11", cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStorageConnection.cs"];
m4_40 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlStorageConnection.cs"];
m4_37 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_24 [label="Entry HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="48-48", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_25 [label="string createJobSql = @''\r\ninsert into HangFire.Job (State, InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@state, @invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="54-57", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_26 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    state = ''Created'',\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="59-68", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_27 [label="parameters.Count > 0", span="70-70", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_28 [label="var parameterArray = new object[parameters.Count]", span="72-72", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_30 [label=parameters, span="74-74", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_31 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="76-81", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_34 [label="return jobId;", span="91-91", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_29 [label="int parameterIndex = 0", span="73-73", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_33 [label="_connection.Execute(insertParameterSql, parameterArray)", span="88-88", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_32 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="84-86", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_35 [label="Exit HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="48-48", cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs"];
m4_42 [label="Entry HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="94-94", cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs"];
m4_43 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues.ToArray(),\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="96-101", cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs"];
m4_44 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="103-109", cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs"];
m4_45 [label="Exit HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="94-94", cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs"];
m4_11 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlStorageConnection.cs"];
m4_36 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlStorageConnection.cs"];
m4_39 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlStorageConnection.cs"];
m4_8 [label="Entry HangFire.SqlServer.SqlStorageConnection.Dispose()", span="24-24", cluster="HangFire.SqlServer.SqlStorageConnection.Dispose()", file="SqlStorageConnection.cs"];
m4_9 [label="_connection.Dispose()", span="26-26", cluster="HangFire.SqlServer.SqlStorageConnection.Dispose()", file="SqlStorageConnection.cs"];
m4_10 [label="Exit HangFire.SqlServer.SqlStorageConnection.Dispose()", span="24-24", cluster="HangFire.SqlServer.SqlStorageConnection.Dispose()", file="SqlStorageConnection.cs"];
m4_41 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlStorageConnection.cs"];
m4_20 [label="Entry HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", span="39-39", cluster="HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", file="SqlStorageConnection.cs"];
m4_21 [label="return new SqlJobLock(jobId, _connection);", span="41-41", cluster="HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", file="SqlStorageConnection.cs"];
m4_22 [label="Exit HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", span="39-39", cluster="HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", file="SqlStorageConnection.cs"];
m4_6 [label="Entry HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15", cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStorageConnection.cs"];
m4_47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SqlStorageConnection.cs"];
m4_12 [label="Entry HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", span="29-29", cluster="HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", file="SqlStorageConnection.cs"];
m4_13 [label="return new SqlWriteTransaction(_connection);", span="31-31", cluster="HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", file="SqlStorageConnection.cs"];
m4_14 [label="Exit HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", span="29-29", cluster="HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", file="SqlStorageConnection.cs"];
m4_58 [label="HangFire.SqlServer.SqlStorageConnection", span="", file="SqlStorageConnection.cs"];
n860 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n122  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n206  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n218  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n221  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n232  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n261  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n264  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n275  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n278  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n287  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n290  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n299  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n316  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n325  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n328  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n338  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n341  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n350  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n353  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n362  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n365  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n375  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n378  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n387  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n390  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n401  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n404  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n413  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n416  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n425  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n428  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n444  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n447  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n458  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n461  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n470  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n473  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n482  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n485  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n494  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n497  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n501  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n508  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n511  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n515  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n521  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n524  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n540  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n543  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n546  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n553  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n556  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n557  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n568  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n571  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n575  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n583  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n586  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n590  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n596  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n600  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n608  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n611  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n614  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n622  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n626  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n635  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n638  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n642  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n651  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n655  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n671  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n674  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n678  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n687  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n691  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n707  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n710  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n714  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n722  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n726  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n742  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n745  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n749  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n757  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n761  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n776  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n779  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n783  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n791  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n795  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n810  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n813  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n817  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n825  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n829  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n860 -> n849  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
n861 -> n30  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n861 -> n31  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n862 -> n48  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n863 -> n57  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n863 -> n58  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n864 -> n67  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n865 -> n75  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n865 -> n76  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n866 -> n108  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n867 -> n108  [key=1, style=dashed, color=darkseagreen4, label=state];
n868 -> n116  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n869 -> n142  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n870 -> n142  [key=1, style=dashed, color=darkseagreen4, label=state];
n871 -> n159  [key=1, style=dashed, color=darkseagreen4, label=correctJobQueue];
n872 -> n501  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n873 -> n515  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n874 -> n546  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n875 -> n575  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n876 -> n590  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n877 -> n605  [key=1, style=dashed, color=darkseagreen4, label=items];
n878 -> n614  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n879 -> n625  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n880 -> n642  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n881 -> n654  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n882 -> n678  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n883 -> n690  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n884 -> n714  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n885 -> n725  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n886 -> n749  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n887 -> n760  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n888 -> n783  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n889 -> n794  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n890 -> n817  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n891 -> n828  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n5  [key=2, style=dotted];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=defaultProvider];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n2 -> n7  [key=2, style=dotted];
n2 -> n8  [key=2, style=dotted];
n2 -> n10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n3 -> n4  [key=0, style=solid];
n3 -> n9  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n4 -> n0  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=2, style=dotted];
n12 -> n10  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n18  [key=2, style=dotted];
n15 -> n20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n16 -> n17  [key=0, style=solid];
n16 -> n19  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n17 -> n14  [key=0, style=bold, color=blue];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=2, style=dotted];
n22 -> n20  [key=0, style=bold, color=blue];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n30  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n25 -> n31  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n25 -> n25  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=2, style=dotted];
n26 -> n29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n30 -> n31  [key=0, style=solid];
n30 -> n38  [key=2, style=dotted];
n30 -> n39  [key=2, style=dotted];
n30 -> n40  [key=2, style=dotted];
n30 -> n32  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n30 -> n48  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n30 -> n33  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n31 -> n32  [key=0, style=solid];
n31 -> n38  [key=2, style=dotted];
n31 -> n39  [key=2, style=dotted];
n31 -> n40  [key=2, style=dotted];
n31 -> n35  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
n27 -> n24  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n29 -> n31  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n29 -> n32  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n29 -> n33  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n29 -> n35  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n32 -> n33  [key=0, style=solid];
n32 -> n41  [key=2, style=dotted];
n32 -> n47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n33 -> n34  [key=0, style=solid];
n33 -> n42  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n42  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [key=2, style=dotted];
n48 -> n51  [key=2, style=dotted];
n41 -> n848  [key=0, style=solid];
n41 -> n851  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>"];
n47 -> n48  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n43  [key=2, style=dotted];
n34 -> n44  [key=2, style=dotted];
n34 -> n45  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n46  [key=2, style=dotted];
n37 -> n29  [key=0, style=bold, color=blue];
n49 -> n47  [key=0, style=bold, color=blue];
n52 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n57  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n53 -> n58  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n53 -> n53  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n54 -> n55  [key=0, style=solid];
n54 -> n28  [key=2, style=dotted];
n54 -> n56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n57 -> n58  [key=0, style=solid];
n57 -> n38  [key=2, style=dotted];
n57 -> n39  [key=2, style=dotted];
n57 -> n40  [key=2, style=dotted];
n57 -> n59  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n57 -> n67  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n57 -> n60  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n58 -> n59  [key=0, style=solid];
n58 -> n38  [key=2, style=dotted];
n58 -> n39  [key=2, style=dotted];
n58 -> n40  [key=2, style=dotted];
n58 -> n62  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
n55 -> n52  [key=0, style=bold, color=blue];
n56 -> n57  [key=0, style=solid];
n56 -> n58  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n56 -> n59  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n56 -> n60  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n56 -> n62  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n59 -> n60  [key=0, style=solid];
n59 -> n41  [key=2, style=dotted];
n59 -> n66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n60 -> n61  [key=0, style=solid];
n60 -> n42  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n42  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n69  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n61 -> n46  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n65  [key=2, style=dotted];
n64 -> n56  [key=0, style=bold, color=blue];
n68 -> n66  [key=0, style=bold, color=blue];
n70 -> n71  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n75  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n71 -> n76  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n71 -> n25  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n72 -> n73  [key=0, style=solid];
n72 -> n28  [key=2, style=dotted];
n72 -> n74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n75 -> n76  [key=0, style=solid];
n75 -> n38  [key=2, style=dotted];
n75 -> n39  [key=2, style=dotted];
n75 -> n40  [key=2, style=dotted];
n75 -> n81  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n75 -> n108  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n75 -> n82  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n75 -> n89  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n76 -> n77  [key=0, style=solid];
n76 -> n38  [key=2, style=dotted];
n76 -> n39  [key=2, style=dotted];
n76 -> n40  [key=2, style=dotted];
n76 -> n85  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
n73 -> n70  [key=0, style=bold, color=blue];
n74 -> n75  [key=0, style=solid];
n74 -> n76  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n74 -> n81  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n74 -> n82  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n74 -> n85  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n74 -> n88  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n81 -> n82  [key=0, style=solid];
n81 -> n41  [key=2, style=dotted];
n81 -> n107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n82 -> n83  [key=0, style=solid];
n82 -> n42  [key=2, style=dotted];
n82 -> n84  [key=1, style=dashed, color=darkseagreen4, label=job];
n85 -> n86  [key=0, style=solid];
n85 -> n42  [key=2, style=dotted];
n85 -> n87  [key=1, style=dashed, color=darkseagreen4, label=anotherJob];
n88 -> n89  [key=0, style=solid];
n88 -> n38  [key=2, style=dotted];
n88 -> n39  [key=2, style=dotted];
n88 -> n90  [key=1, style=dashed, color=darkseagreen4, label=jobState];
n88 -> n91  [key=1, style=dashed, color=darkseagreen4, label=jobState];
n88 -> n92  [key=1, style=dashed, color=darkseagreen4, label=jobState];
n88 -> n93  [key=1, style=dashed, color=darkseagreen4, label=jobState];
n108 -> n109  [key=0, style=solid];
n108 -> n110  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n40  [key=2, style=dotted];
n89 -> n19  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n95  [key=2, style=dotted];
n77 -> n79  [key=1, style=dashed, color=darkseagreen4, label=state];
n77 -> n80  [key=1, style=dashed, color=darkseagreen4, label=state];
n77 -> n81  [key=1, style=dashed, color=darkseagreen4, label=state];
n77 -> n108  [key=1, style=dashed, color=darkseagreen4, label=state];
n78 -> n79  [key=0, style=solid];
n78 -> n6  [key=2, style=dotted];
n78 -> n8  [key=2, style=dotted];
n78 -> n97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n79 -> n80  [key=0, style=solid];
n79 -> n6  [key=2, style=dotted];
n79 -> n8  [key=2, style=dotted];
n79 -> n100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n80 -> n81  [key=0, style=solid];
n80 -> n6  [key=2, style=dotted];
n80 -> n96  [key=2, style=dotted];
n80 -> n8  [key=2, style=dotted];
n80 -> n103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n97 -> n98  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n19  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n65  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n46  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n46  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n19  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n19  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n65  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n19  [key=2, style=dotted];
n94 -> n74  [key=0, style=bold, color=blue];
n98 -> n99  [key=0, style=solid];
n99 -> n97  [key=0, style=bold, color=blue];
n101 -> n102  [key=0, style=solid];
n102 -> n100  [key=0, style=bold, color=blue];
n104 -> n105  [key=0, style=solid];
n104 -> n106  [key=2, style=dotted];
n105 -> n103  [key=0, style=bold, color=blue];
n109 -> n107  [key=0, style=bold, color=blue];
n111 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n116  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n112 -> n25  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n113 -> n114  [key=0, style=solid];
n113 -> n28  [key=2, style=dotted];
n113 -> n115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n116 -> n117  [key=0, style=solid];
n116 -> n38  [key=2, style=dotted];
n116 -> n39  [key=2, style=dotted];
n116 -> n40  [key=2, style=dotted];
n116 -> n121  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n116 -> n142  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n116 -> n122  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n116 -> n126  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n114 -> n111  [key=0, style=bold, color=blue];
n115 -> n116  [key=0, style=solid];
n115 -> n121  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n115 -> n122  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n115 -> n125  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n121 -> n122  [key=0, style=solid];
n121 -> n41  [key=2, style=dotted];
n121 -> n141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n122 -> n123  [key=0, style=solid];
n122 -> n42  [key=2, style=dotted];
n122 -> n124  [key=1, style=dashed, color=darkseagreen4, label=job];
n125 -> n126  [key=0, style=solid];
n125 -> n38  [key=2, style=dotted];
n125 -> n39  [key=2, style=dotted];
n125 -> n127  [key=1, style=dashed, color=darkseagreen4, label=jobState];
n125 -> n128  [key=1, style=dashed, color=darkseagreen4, label=jobState];
n125 -> n129  [key=1, style=dashed, color=darkseagreen4, label=jobState];
n125 -> n130  [key=1, style=dashed, color=darkseagreen4, label=jobState];
n117 -> n118  [key=0, style=solid];
n117 -> n95  [key=2, style=dotted];
n117 -> n119  [key=1, style=dashed, color=darkseagreen4, label=state];
n117 -> n120  [key=1, style=dashed, color=darkseagreen4, label=state];
n117 -> n121  [key=1, style=dashed, color=darkseagreen4, label=state];
n117 -> n142  [key=1, style=dashed, color=darkseagreen4, label=state];
n142 -> n143  [key=0, style=solid];
n142 -> n144  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n126 -> n40  [key=2, style=dotted];
n126 -> n19  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n6  [key=2, style=dotted];
n118 -> n8  [key=2, style=dotted];
n118 -> n132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n119 -> n120  [key=0, style=solid];
n119 -> n6  [key=2, style=dotted];
n119 -> n8  [key=2, style=dotted];
n119 -> n135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n120 -> n121  [key=0, style=solid];
n120 -> n6  [key=2, style=dotted];
n120 -> n96  [key=2, style=dotted];
n120 -> n8  [key=2, style=dotted];
n120 -> n138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n132 -> n133  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n123 -> n124  [key=0, style=solid];
n123 -> n46  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n124 -> n46  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n19  [key=2, style=dotted];
n128 -> n129  [key=0, style=solid];
n128 -> n19  [key=2, style=dotted];
n129 -> n130  [key=0, style=solid];
n129 -> n65  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n19  [key=2, style=dotted];
n131 -> n115  [key=0, style=bold, color=blue];
n133 -> n134  [key=0, style=solid];
n134 -> n132  [key=0, style=bold, color=blue];
n136 -> n137  [key=0, style=solid];
n137 -> n135  [key=0, style=bold, color=blue];
n139 -> n140  [key=0, style=solid];
n139 -> n106  [key=2, style=dotted];
n140 -> n138  [key=0, style=bold, color=blue];
n143 -> n141  [key=0, style=bold, color=blue];
n145 -> n146  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n7  [key=2, style=dotted];
n146 -> n148  [key=1, style=dashed, color=darkseagreen4, label=correctJobQueue];
n146 -> n150  [key=1, style=dashed, color=darkseagreen4, label=correctJobQueue];
n146 -> n159  [key=1, style=dashed, color=darkseagreen4, label=correctJobQueue];
n147 -> n148  [key=0, style=solid];
n147 -> n5  [key=2, style=dotted];
n147 -> n149  [key=1, style=dashed, color=darkseagreen4, label=correctProvider];
n148 -> n149  [key=0, style=solid];
n148 -> n6  [key=2, style=dotted];
n148 -> n8  [key=2, style=dotted];
n148 -> n154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n150 -> n151  [key=0, style=solid];
n150 -> n153  [key=2, style=dotted];
n150 -> n157  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n159 -> n160  [key=0, style=solid];
n159 -> n161  [key=2, style=dotted];
n159 -> n166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n149 -> n150  [key=0, style=solid];
n149 -> n152  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n151 -> n145  [key=0, style=bold, color=blue];
n153 -> n843  [key=0, style=solid];
n153 -> n844  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
n153 -> n150  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
n157 -> n158  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n13  [key=2, style=dotted];
n156 -> n154  [key=0, style=bold, color=blue];
n158 -> n159  [key=0, style=solid];
n158 -> n41  [key=2, style=dotted];
n158 -> n162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n162 -> n163  [key=0, style=solid];
n160 -> n157  [key=0, style=bold, color=blue];
n166 -> n167  [key=0, style=solid];
n163 -> n164  [key=0, style=solid];
n163 -> n165  [key=2, style=dotted];
n164 -> n162  [key=0, style=bold, color=blue];
n167 -> n168  [key=0, style=solid];
n167 -> n18  [key=2, style=dotted];
n167 -> n169  [key=2, style=dotted];
n168 -> n166  [key=0, style=bold, color=blue];
n170 -> n171  [key=0, style=solid];
n171 -> n172  [key=0, style=solid];
n171 -> n38  [key=2, style=dotted];
n171 -> n39  [key=2, style=dotted];
n172 -> n170  [key=0, style=bold, color=blue];
n173 -> n174  [key=0, style=solid];
n174 -> n175  [key=0, style=solid];
n174 -> n28  [key=2, style=dotted];
n174 -> n176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n175 -> n173  [key=0, style=bold, color=blue];
n176 -> n177  [key=0, style=solid];
n176 -> n178  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n177 -> n178  [key=0, style=solid];
n177 -> n41  [key=2, style=dotted];
n177 -> n183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n178 -> n179  [key=0, style=solid];
n178 -> n38  [key=2, style=dotted];
n178 -> n39  [key=2, style=dotted];
n178 -> n180  [key=1, style=dashed, color=darkseagreen4, label=record];
n178 -> n181  [key=1, style=dashed, color=darkseagreen4, label=record];
n183 -> n184  [key=0, style=solid];
n179 -> n180  [key=0, style=solid];
n179 -> n19  [key=2, style=dotted];
n180 -> n181  [key=0, style=solid];
n180 -> n19  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n19  [key=2, style=dotted];
n182 -> n176  [key=0, style=bold, color=blue];
n184 -> n185  [key=0, style=solid];
n184 -> n186  [key=2, style=dotted];
n185 -> n183  [key=0, style=bold, color=blue];
n187 -> n188  [key=0, style=solid];
n188 -> n189  [key=0, style=solid];
n188 -> n28  [key=2, style=dotted];
n188 -> n190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n189 -> n187  [key=0, style=bold, color=blue];
n190 -> n191  [key=0, style=solid];
n190 -> n192  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n191 -> n192  [key=0, style=solid];
n191 -> n41  [key=2, style=dotted];
n191 -> n201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n192 -> n193  [key=0, style=solid];
n192 -> n38  [key=2, style=dotted];
n192 -> n39  [key=2, style=dotted];
n192 -> n194  [key=1, style=dashed, color=darkseagreen4, label=record];
n192 -> n195  [key=1, style=dashed, color=darkseagreen4, label=record];
n192 -> n196  [key=1, style=dashed, color=darkseagreen4, label=record];
n201 -> n202  [key=0, style=solid];
n193 -> n194  [key=0, style=solid];
n193 -> n19  [key=2, style=dotted];
n194 -> n195  [key=0, style=solid];
n194 -> n19  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n195 -> n65  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n198  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
n197 -> n198  [key=0, style=solid];
n197 -> n200  [key=2, style=dotted];
n197 -> n45  [key=2, style=dotted];
n198 -> n199  [key=0, style=solid];
n198 -> n200  [key=2, style=dotted];
n198 -> n45  [key=2, style=dotted];
n199 -> n190  [key=0, style=bold, color=blue];
n202 -> n203  [key=0, style=solid];
n202 -> n50  [key=2, style=dotted];
n202 -> n204  [key=2, style=dotted];
n203 -> n201  [key=0, style=bold, color=blue];
n205 -> n206  [key=0, style=solid];
n206 -> n207  [key=0, style=solid];
n206 -> n28  [key=2, style=dotted];
n206 -> n208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n207 -> n205  [key=0, style=bold, color=blue];
n208 -> n209  [key=0, style=solid];
n208 -> n210  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n209 -> n210  [key=0, style=solid];
n209 -> n41  [key=2, style=dotted];
n209 -> n213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n210 -> n211  [key=0, style=solid];
n210 -> n18  [key=2, style=dotted];
n210 -> n39  [key=2, style=dotted];
n213 -> n214  [key=0, style=solid];
n213 -> n215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n211 -> n212  [key=0, style=solid];
n211 -> n19  [key=2, style=dotted];
n212 -> n208  [key=0, style=bold, color=blue];
n214 -> n215  [key=0, style=solid];
n214 -> n186  [key=2, style=dotted];
n215 -> n216  [key=0, style=solid];
n215 -> n186  [key=2, style=dotted];
n216 -> n213  [key=0, style=bold, color=blue];
n217 -> n218  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n218 -> n28  [key=2, style=dotted];
n218 -> n220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n219 -> n217  [key=0, style=bold, color=blue];
n220 -> n221  [key=0, style=solid];
n220 -> n222  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n221 -> n222  [key=0, style=solid];
n221 -> n41  [key=2, style=dotted];
n221 -> n227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n222 -> n223  [key=0, style=solid];
n222 -> n38  [key=2, style=dotted];
n222 -> n39  [key=2, style=dotted];
n222 -> n224  [key=1, style=dashed, color=darkseagreen4, label=record];
n222 -> n225  [key=1, style=dashed, color=darkseagreen4, label=record];
n227 -> n228  [key=0, style=solid];
n223 -> n224  [key=0, style=solid];
n223 -> n19  [key=2, style=dotted];
n224 -> n225  [key=0, style=solid];
n224 -> n19  [key=2, style=dotted];
n225 -> n226  [key=0, style=solid];
n225 -> n19  [key=2, style=dotted];
n226 -> n220  [key=0, style=bold, color=blue];
n228 -> n229  [key=0, style=solid];
n228 -> n230  [key=2, style=dotted];
n229 -> n227  [key=0, style=bold, color=blue];
n231 -> n232  [key=0, style=solid];
n232 -> n233  [key=0, style=solid];
n232 -> n28  [key=2, style=dotted];
n232 -> n234  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n233 -> n231  [key=0, style=bold, color=blue];
n234 -> n235  [key=0, style=solid];
n234 -> n236  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n235 -> n236  [key=0, style=solid];
n235 -> n41  [key=2, style=dotted];
n235 -> n244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n236 -> n237  [key=0, style=solid];
n236 -> n38  [key=2, style=dotted];
n236 -> n39  [key=2, style=dotted];
n236 -> n238  [key=1, style=dashed, color=darkseagreen4, label=record];
n236 -> n239  [key=1, style=dashed, color=darkseagreen4, label=record];
n236 -> n240  [key=1, style=dashed, color=darkseagreen4, label=record];
n244 -> n245  [key=0, style=solid];
n237 -> n238  [key=0, style=solid];
n237 -> n19  [key=2, style=dotted];
n238 -> n239  [key=0, style=solid];
n238 -> n19  [key=2, style=dotted];
n239 -> n240  [key=0, style=solid];
n239 -> n65  [key=2, style=dotted];
n240 -> n241  [key=0, style=solid];
n240 -> n242  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
n241 -> n242  [key=0, style=solid];
n241 -> n200  [key=2, style=dotted];
n241 -> n45  [key=2, style=dotted];
n242 -> n243  [key=0, style=solid];
n242 -> n200  [key=2, style=dotted];
n242 -> n45  [key=2, style=dotted];
n243 -> n234  [key=0, style=bold, color=blue];
n245 -> n246  [key=0, style=solid];
n245 -> n50  [key=2, style=dotted];
n245 -> n247  [key=2, style=dotted];
n246 -> n244  [key=0, style=bold, color=blue];
n248 -> n249  [key=0, style=solid];
n249 -> n250  [key=0, style=solid];
n249 -> n28  [key=2, style=dotted];
n249 -> n251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n250 -> n248  [key=0, style=bold, color=blue];
n251 -> n252  [key=0, style=solid];
n251 -> n253  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n252 -> n253  [key=0, style=solid];
n252 -> n41  [key=2, style=dotted];
n252 -> n256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n253 -> n254  [key=0, style=solid];
n253 -> n18  [key=2, style=dotted];
n253 -> n39  [key=2, style=dotted];
n256 -> n257  [key=0, style=solid];
n256 -> n258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n254 -> n255  [key=0, style=solid];
n254 -> n19  [key=2, style=dotted];
n255 -> n251  [key=0, style=bold, color=blue];
n257 -> n258  [key=0, style=solid];
n257 -> n230  [key=2, style=dotted];
n258 -> n259  [key=0, style=solid];
n258 -> n230  [key=2, style=dotted];
n259 -> n256  [key=0, style=bold, color=blue];
n260 -> n261  [key=0, style=solid];
n261 -> n262  [key=0, style=solid];
n261 -> n28  [key=2, style=dotted];
n261 -> n263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n262 -> n260  [key=0, style=bold, color=blue];
n263 -> n264  [key=0, style=solid];
n263 -> n265  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n264 -> n265  [key=0, style=solid];
n264 -> n41  [key=2, style=dotted];
n264 -> n270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n265 -> n266  [key=0, style=solid];
n265 -> n38  [key=2, style=dotted];
n265 -> n39  [key=2, style=dotted];
n265 -> n267  [key=1, style=dashed, color=darkseagreen4, label=record];
n265 -> n268  [key=1, style=dashed, color=darkseagreen4, label=record];
n270 -> n271  [key=0, style=solid];
n266 -> n267  [key=0, style=solid];
n266 -> n19  [key=2, style=dotted];
n267 -> n268  [key=0, style=solid];
n267 -> n19  [key=2, style=dotted];
n268 -> n269  [key=0, style=solid];
n268 -> n19  [key=2, style=dotted];
n269 -> n263  [key=0, style=bold, color=blue];
n271 -> n272  [key=0, style=solid];
n271 -> n273  [key=2, style=dotted];
n272 -> n270  [key=0, style=bold, color=blue];
n274 -> n275  [key=0, style=solid];
n275 -> n276  [key=0, style=solid];
n275 -> n28  [key=2, style=dotted];
n275 -> n277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n276 -> n274  [key=0, style=bold, color=blue];
n277 -> n278  [key=0, style=solid];
n277 -> n279  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n278 -> n279  [key=0, style=solid];
n278 -> n41  [key=2, style=dotted];
n278 -> n282  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n279 -> n280  [key=0, style=solid];
n279 -> n18  [key=2, style=dotted];
n279 -> n39  [key=2, style=dotted];
n282 -> n283  [key=0, style=solid];
n282 -> n284  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n280 -> n281  [key=0, style=solid];
n280 -> n19  [key=2, style=dotted];
n281 -> n277  [key=0, style=bold, color=blue];
n283 -> n284  [key=0, style=solid];
n283 -> n273  [key=2, style=dotted];
n284 -> n285  [key=0, style=solid];
n284 -> n273  [key=2, style=dotted];
n285 -> n282  [key=0, style=bold, color=blue];
n286 -> n287  [key=0, style=solid];
n287 -> n288  [key=0, style=solid];
n287 -> n28  [key=2, style=dotted];
n287 -> n289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n288 -> n286  [key=0, style=bold, color=blue];
n289 -> n290  [key=0, style=solid];
n289 -> n291  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n290 -> n291  [key=0, style=solid];
n290 -> n41  [key=2, style=dotted];
n290 -> n294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n291 -> n292  [key=0, style=solid];
n291 -> n18  [key=2, style=dotted];
n291 -> n39  [key=2, style=dotted];
n294 -> n295  [key=0, style=solid];
n294 -> n296  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n292 -> n293  [key=0, style=solid];
n292 -> n19  [key=2, style=dotted];
n293 -> n289  [key=0, style=bold, color=blue];
n295 -> n296  [key=0, style=solid];
n295 -> n273  [key=2, style=dotted];
n296 -> n297  [key=0, style=solid];
n296 -> n273  [key=2, style=dotted];
n297 -> n294  [key=0, style=bold, color=blue];
n298 -> n299  [key=0, style=solid];
n299 -> n300  [key=0, style=solid];
n299 -> n28  [key=2, style=dotted];
n299 -> n301  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n300 -> n298  [key=0, style=bold, color=blue];
n301 -> n302  [key=0, style=solid];
n301 -> n303  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n302 -> n303  [key=0, style=solid];
n302 -> n41  [key=2, style=dotted];
n302 -> n308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n303 -> n304  [key=0, style=solid];
n303 -> n38  [key=2, style=dotted];
n303 -> n39  [key=2, style=dotted];
n303 -> n305  [key=1, style=dashed, color=darkseagreen4, label=record];
n303 -> n306  [key=1, style=dashed, color=darkseagreen4, label=record];
n308 -> n309  [key=0, style=solid];
n304 -> n305  [key=0, style=solid];
n304 -> n19  [key=2, style=dotted];
n305 -> n306  [key=0, style=solid];
n305 -> n19  [key=2, style=dotted];
n306 -> n307  [key=0, style=solid];
n306 -> n19  [key=2, style=dotted];
n307 -> n301  [key=0, style=bold, color=blue];
n309 -> n310  [key=0, style=solid];
n309 -> n311  [key=2, style=dotted];
n310 -> n308  [key=0, style=bold, color=blue];
n312 -> n313  [key=0, style=solid];
n313 -> n314  [key=0, style=solid];
n313 -> n28  [key=2, style=dotted];
n313 -> n315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n314 -> n312  [key=0, style=bold, color=blue];
n315 -> n316  [key=0, style=solid];
n315 -> n317  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n316 -> n317  [key=0, style=solid];
n316 -> n41  [key=2, style=dotted];
n316 -> n320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n317 -> n318  [key=0, style=solid];
n317 -> n38  [key=2, style=dotted];
n317 -> n39  [key=2, style=dotted];
n320 -> n321  [key=0, style=solid];
n320 -> n322  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n318 -> n319  [key=0, style=solid];
n318 -> n19  [key=2, style=dotted];
n319 -> n315  [key=0, style=bold, color=blue];
n321 -> n322  [key=0, style=solid];
n321 -> n273  [key=2, style=dotted];
n322 -> n323  [key=0, style=solid];
n322 -> n311  [key=2, style=dotted];
n323 -> n320  [key=0, style=bold, color=blue];
n324 -> n325  [key=0, style=solid];
n325 -> n326  [key=0, style=solid];
n325 -> n28  [key=2, style=dotted];
n325 -> n327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n326 -> n324  [key=0, style=bold, color=blue];
n327 -> n328  [key=0, style=solid];
n327 -> n329  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n328 -> n329  [key=0, style=solid];
n328 -> n41  [key=2, style=dotted];
n328 -> n332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n329 -> n330  [key=0, style=solid];
n329 -> n18  [key=2, style=dotted];
n329 -> n39  [key=2, style=dotted];
n332 -> n333  [key=0, style=solid];
n332 -> n334  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n330 -> n331  [key=0, style=solid];
n330 -> n19  [key=2, style=dotted];
n331 -> n327  [key=0, style=bold, color=blue];
n333 -> n334  [key=0, style=solid];
n333 -> n273  [key=2, style=dotted];
n334 -> n335  [key=0, style=solid];
n334 -> n336  [key=2, style=dotted];
n335 -> n332  [key=0, style=bold, color=blue];
n337 -> n338  [key=0, style=solid];
n338 -> n339  [key=0, style=solid];
n338 -> n28  [key=2, style=dotted];
n338 -> n340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n339 -> n337  [key=0, style=bold, color=blue];
n340 -> n341  [key=0, style=solid];
n340 -> n342  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n341 -> n342  [key=0, style=solid];
n341 -> n41  [key=2, style=dotted];
n341 -> n345  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n342 -> n343  [key=0, style=solid];
n342 -> n18  [key=2, style=dotted];
n342 -> n39  [key=2, style=dotted];
n345 -> n346  [key=0, style=solid];
n345 -> n347  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n343 -> n344  [key=0, style=solid];
n343 -> n19  [key=2, style=dotted];
n344 -> n340  [key=0, style=bold, color=blue];
n346 -> n347  [key=0, style=solid];
n346 -> n273  [key=2, style=dotted];
n347 -> n348  [key=0, style=solid];
n347 -> n336  [key=2, style=dotted];
n348 -> n345  [key=0, style=bold, color=blue];
n349 -> n350  [key=0, style=solid];
n350 -> n351  [key=0, style=solid];
n350 -> n28  [key=2, style=dotted];
n350 -> n352  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n351 -> n349  [key=0, style=bold, color=blue];
n352 -> n353  [key=0, style=solid];
n352 -> n354  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n353 -> n354  [key=0, style=solid];
n353 -> n41  [key=2, style=dotted];
n353 -> n357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n354 -> n355  [key=0, style=solid];
n354 -> n18  [key=2, style=dotted];
n354 -> n39  [key=2, style=dotted];
n357 -> n358  [key=0, style=solid];
n357 -> n359  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n355 -> n356  [key=0, style=solid];
n355 -> n19  [key=2, style=dotted];
n356 -> n352  [key=0, style=bold, color=blue];
n358 -> n359  [key=0, style=solid];
n358 -> n273  [key=2, style=dotted];
n359 -> n360  [key=0, style=solid];
n359 -> n336  [key=2, style=dotted];
n360 -> n357  [key=0, style=bold, color=blue];
n361 -> n362  [key=0, style=solid];
n362 -> n363  [key=0, style=solid];
n362 -> n28  [key=2, style=dotted];
n362 -> n364  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n363 -> n361  [key=0, style=bold, color=blue];
n364 -> n365  [key=0, style=solid];
n364 -> n366  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n365 -> n366  [key=0, style=solid];
n365 -> n41  [key=2, style=dotted];
n365 -> n370  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n366 -> n367  [key=0, style=solid];
n366 -> n38  [key=2, style=dotted];
n366 -> n39  [key=2, style=dotted];
n366 -> n368  [key=1, style=dashed, color=darkseagreen4, label=record];
n370 -> n371  [key=0, style=solid];
n367 -> n368  [key=0, style=solid];
n367 -> n19  [key=2, style=dotted];
n368 -> n369  [key=0, style=solid];
n368 -> n19  [key=2, style=dotted];
n369 -> n364  [key=0, style=bold, color=blue];
n371 -> n372  [key=0, style=solid];
n371 -> n373  [key=2, style=dotted];
n372 -> n370  [key=0, style=bold, color=blue];
n374 -> n375  [key=0, style=solid];
n375 -> n376  [key=0, style=solid];
n375 -> n28  [key=2, style=dotted];
n375 -> n377  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n376 -> n374  [key=0, style=bold, color=blue];
n377 -> n378  [key=0, style=solid];
n377 -> n379  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n378 -> n379  [key=0, style=solid];
n378 -> n41  [key=2, style=dotted];
n378 -> n382  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n379 -> n380  [key=0, style=solid];
n379 -> n18  [key=2, style=dotted];
n379 -> n39  [key=2, style=dotted];
n382 -> n383  [key=0, style=solid];
n382 -> n384  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n380 -> n381  [key=0, style=solid];
n380 -> n19  [key=2, style=dotted];
n381 -> n377  [key=0, style=bold, color=blue];
n383 -> n384  [key=0, style=solid];
n383 -> n373  [key=2, style=dotted];
n384 -> n385  [key=0, style=solid];
n384 -> n373  [key=2, style=dotted];
n385 -> n382  [key=0, style=bold, color=blue];
n386 -> n387  [key=0, style=solid];
n387 -> n388  [key=0, style=solid];
n387 -> n28  [key=2, style=dotted];
n387 -> n389  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n388 -> n386  [key=0, style=bold, color=blue];
n389 -> n390  [key=0, style=solid];
n389 -> n391  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n390 -> n391  [key=0, style=solid];
n390 -> n41  [key=2, style=dotted];
n390 -> n394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n391 -> n392  [key=0, style=solid];
n391 -> n18  [key=2, style=dotted];
n391 -> n39  [key=2, style=dotted];
n394 -> n395  [key=0, style=solid];
n394 -> n396  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n394 -> n397  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n392 -> n393  [key=0, style=solid];
n392 -> n19  [key=2, style=dotted];
n393 -> n389  [key=0, style=bold, color=blue];
n395 -> n396  [key=0, style=solid];
n395 -> n373  [key=2, style=dotted];
n396 -> n397  [key=0, style=solid];
n396 -> n373  [key=2, style=dotted];
n397 -> n398  [key=0, style=solid];
n397 -> n399  [key=2, style=dotted];
n398 -> n394  [key=0, style=bold, color=blue];
n400 -> n401  [key=0, style=solid];
n401 -> n402  [key=0, style=solid];
n401 -> n28  [key=2, style=dotted];
n401 -> n403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n402 -> n400  [key=0, style=bold, color=blue];
n403 -> n404  [key=0, style=solid];
n403 -> n405  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n404 -> n405  [key=0, style=solid];
n404 -> n41  [key=2, style=dotted];
n404 -> n408  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n405 -> n406  [key=0, style=solid];
n405 -> n18  [key=2, style=dotted];
n405 -> n39  [key=2, style=dotted];
n408 -> n409  [key=0, style=solid];
n408 -> n410  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n406 -> n407  [key=0, style=solid];
n406 -> n19  [key=2, style=dotted];
n407 -> n403  [key=0, style=bold, color=blue];
n409 -> n410  [key=0, style=solid];
n409 -> n373  [key=2, style=dotted];
n410 -> n411  [key=0, style=solid];
n410 -> n399  [key=2, style=dotted];
n411 -> n408  [key=0, style=bold, color=blue];
n412 -> n413  [key=0, style=solid];
n413 -> n414  [key=0, style=solid];
n413 -> n28  [key=2, style=dotted];
n413 -> n415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n414 -> n412  [key=0, style=bold, color=blue];
n415 -> n416  [key=0, style=solid];
n415 -> n417  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n416 -> n417  [key=0, style=solid];
n416 -> n41  [key=2, style=dotted];
n416 -> n420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n417 -> n418  [key=0, style=solid];
n417 -> n18  [key=2, style=dotted];
n417 -> n39  [key=2, style=dotted];
n420 -> n421  [key=0, style=solid];
n420 -> n422  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n418 -> n419  [key=0, style=solid];
n418 -> n19  [key=2, style=dotted];
n419 -> n415  [key=0, style=bold, color=blue];
n421 -> n422  [key=0, style=solid];
n421 -> n373  [key=2, style=dotted];
n422 -> n423  [key=0, style=solid];
n422 -> n399  [key=2, style=dotted];
n423 -> n420  [key=0, style=bold, color=blue];
n424 -> n425  [key=0, style=solid];
n425 -> n426  [key=0, style=solid];
n425 -> n28  [key=2, style=dotted];
n425 -> n427  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n426 -> n424  [key=0, style=bold, color=blue];
n427 -> n428  [key=0, style=solid];
n427 -> n429  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n428 -> n429  [key=0, style=solid];
n428 -> n41  [key=2, style=dotted];
n428 -> n435  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n429 -> n430  [key=0, style=solid];
n429 -> n38  [key=2, style=dotted];
n429 -> n434  [key=2, style=dotted];
n429 -> n431  [key=1, style=dashed, color=darkseagreen4, label=records];
n429 -> n432  [key=1, style=dashed, color=darkseagreen4, label=records];
n435 -> n436  [key=0, style=solid];
n435 -> n437  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n435 -> n438  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n435 -> n439  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n435 -> n440  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n430 -> n431  [key=0, style=solid];
n430 -> n19  [key=2, style=dotted];
n431 -> n432  [key=0, style=solid];
n431 -> n19  [key=2, style=dotted];
n432 -> n433  [key=0, style=solid];
n432 -> n19  [key=2, style=dotted];
n433 -> n427  [key=0, style=bold, color=blue];
n436 -> n437  [key=0, style=solid];
n436 -> n373  [key=2, style=dotted];
n437 -> n438  [key=0, style=solid];
n437 -> n373  [key=2, style=dotted];
n438 -> n439  [key=0, style=solid];
n438 -> n373  [key=2, style=dotted];
n439 -> n440  [key=0, style=solid];
n439 -> n373  [key=2, style=dotted];
n440 -> n441  [key=0, style=solid];
n440 -> n442  [key=2, style=dotted];
n441 -> n435  [key=0, style=bold, color=blue];
n443 -> n444  [key=0, style=solid];
n444 -> n445  [key=0, style=solid];
n444 -> n28  [key=2, style=dotted];
n444 -> n446  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n445 -> n443  [key=0, style=bold, color=blue];
n446 -> n447  [key=0, style=solid];
n446 -> n448  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n447 -> n448  [key=0, style=solid];
n447 -> n41  [key=2, style=dotted];
n447 -> n451  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n448 -> n449  [key=0, style=solid];
n448 -> n18  [key=2, style=dotted];
n448 -> n39  [key=2, style=dotted];
n451 -> n452  [key=0, style=solid];
n451 -> n453  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n451 -> n454  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n451 -> n455  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n449 -> n450  [key=0, style=solid];
n449 -> n19  [key=2, style=dotted];
n450 -> n446  [key=0, style=bold, color=blue];
n452 -> n453  [key=0, style=solid];
n452 -> n373  [key=2, style=dotted];
n453 -> n454  [key=0, style=solid];
n453 -> n373  [key=2, style=dotted];
n454 -> n455  [key=0, style=solid];
n454 -> n373  [key=2, style=dotted];
n455 -> n456  [key=0, style=solid];
n455 -> n442  [key=2, style=dotted];
n456 -> n451  [key=0, style=bold, color=blue];
n457 -> n458  [key=0, style=solid];
n458 -> n459  [key=0, style=solid];
n458 -> n28  [key=2, style=dotted];
n458 -> n460  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n459 -> n457  [key=0, style=bold, color=blue];
n460 -> n461  [key=0, style=solid];
n460 -> n462  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n461 -> n462  [key=0, style=solid];
n461 -> n41  [key=2, style=dotted];
n461 -> n465  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n462 -> n463  [key=0, style=solid];
n462 -> n18  [key=2, style=dotted];
n462 -> n39  [key=2, style=dotted];
n465 -> n466  [key=0, style=solid];
n465 -> n467  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n463 -> n464  [key=0, style=solid];
n463 -> n19  [key=2, style=dotted];
n464 -> n460  [key=0, style=bold, color=blue];
n466 -> n467  [key=0, style=solid];
n466 -> n373  [key=2, style=dotted];
n467 -> n468  [key=0, style=solid];
n467 -> n442  [key=2, style=dotted];
n468 -> n465  [key=0, style=bold, color=blue];
n469 -> n470  [key=0, style=solid];
n470 -> n471  [key=0, style=solid];
n470 -> n28  [key=2, style=dotted];
n470 -> n472  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n471 -> n469  [key=0, style=bold, color=blue];
n472 -> n473  [key=0, style=solid];
n472 -> n474  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n473 -> n474  [key=0, style=solid];
n473 -> n41  [key=2, style=dotted];
n473 -> n477  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n474 -> n475  [key=0, style=solid];
n474 -> n18  [key=2, style=dotted];
n474 -> n39  [key=2, style=dotted];
n477 -> n478  [key=0, style=solid];
n477 -> n479  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n475 -> n476  [key=0, style=solid];
n475 -> n19  [key=2, style=dotted];
n476 -> n472  [key=0, style=bold, color=blue];
n478 -> n479  [key=0, style=solid];
n478 -> n373  [key=2, style=dotted];
n479 -> n480  [key=0, style=solid];
n479 -> n442  [key=2, style=dotted];
n480 -> n477  [key=0, style=bold, color=blue];
n481 -> n482  [key=0, style=solid];
n482 -> n483  [key=0, style=solid];
n482 -> n28  [key=2, style=dotted];
n482 -> n484  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n483 -> n481  [key=0, style=bold, color=blue];
n484 -> n485  [key=0, style=solid];
n484 -> n486  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n485 -> n486  [key=0, style=solid];
n485 -> n41  [key=2, style=dotted];
n485 -> n489  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n486 -> n487  [key=0, style=solid];
n486 -> n18  [key=2, style=dotted];
n486 -> n39  [key=2, style=dotted];
n489 -> n490  [key=0, style=solid];
n489 -> n491  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
n487 -> n488  [key=0, style=solid];
n487 -> n19  [key=2, style=dotted];
n488 -> n484  [key=0, style=bold, color=blue];
n490 -> n491  [key=0, style=solid];
n490 -> n373  [key=2, style=dotted];
n491 -> n492  [key=0, style=solid];
n491 -> n442  [key=2, style=dotted];
n492 -> n489  [key=0, style=bold, color=blue];
n493 -> n494  [key=0, style=solid];
n494 -> n495  [key=0, style=solid];
n494 -> n28  [key=2, style=dotted];
n494 -> n496  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n495 -> n493  [key=0, style=bold, color=blue];
n496 -> n497  [key=0, style=solid];
n496 -> n501  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n497 -> n498  [key=0, style=solid];
n497 -> n18  [key=2, style=dotted];
n497 -> n500  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n501 -> n502  [key=0, style=solid];
n501 -> n41  [key=2, style=dotted];
n501 -> n503  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n498 -> n499  [key=0, style=solid];
n498 -> n19  [key=2, style=dotted];
n500 -> n501  [key=0, style=solid];
n499 -> n496  [key=0, style=bold, color=blue];
n502 -> n500  [key=0, style=bold, color=blue];
n503 -> n504  [key=0, style=solid];
n504 -> n505  [key=0, style=solid];
n504 -> n96  [key=2, style=dotted];
n504 -> n506  [key=2, style=dotted];
n505 -> n503  [key=0, style=bold, color=blue];
n507 -> n508  [key=0, style=solid];
n508 -> n509  [key=0, style=solid];
n508 -> n28  [key=2, style=dotted];
n508 -> n510  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n509 -> n507  [key=0, style=bold, color=blue];
n510 -> n511  [key=0, style=solid];
n510 -> n515  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n511 -> n512  [key=0, style=solid];
n511 -> n18  [key=2, style=dotted];
n511 -> n514  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n515 -> n516  [key=0, style=solid];
n515 -> n41  [key=2, style=dotted];
n515 -> n517  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n512 -> n513  [key=0, style=solid];
n512 -> n19  [key=2, style=dotted];
n514 -> n515  [key=0, style=solid];
n513 -> n510  [key=0, style=bold, color=blue];
n516 -> n514  [key=0, style=bold, color=blue];
n517 -> n518  [key=0, style=solid];
n518 -> n519  [key=0, style=solid];
n518 -> n506  [key=2, style=dotted];
n519 -> n517  [key=0, style=bold, color=blue];
n520 -> n521  [key=0, style=solid];
n521 -> n522  [key=0, style=solid];
n521 -> n28  [key=2, style=dotted];
n521 -> n523  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n522 -> n520  [key=0, style=bold, color=blue];
n523 -> n524  [key=0, style=solid];
n523 -> n525  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n524 -> n525  [key=0, style=solid];
n524 -> n41  [key=2, style=dotted];
n524 -> n530  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n525 -> n526  [key=0, style=solid];
n525 -> n38  [key=2, style=dotted];
n525 -> n529  [key=2, style=dotted];
n525 -> n533  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n525 -> n536  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n525 -> n527  [key=1, style=dashed, color=darkseagreen4, label=result];
n530 -> n531  [key=0, style=solid];
n526 -> n527  [key=0, style=solid];
n526 -> n19  [key=2, style=dotted];
n533 -> n534  [key=0, style=solid];
n536 -> n537  [key=0, style=solid];
n527 -> n528  [key=0, style=solid];
n527 -> n19  [key=2, style=dotted];
n528 -> n523  [key=0, style=bold, color=blue];
n531 -> n532  [key=0, style=solid];
n531 -> n96  [key=2, style=dotted];
n531 -> n506  [key=2, style=dotted];
n532 -> n530  [key=0, style=bold, color=blue];
n534 -> n535  [key=0, style=solid];
n535 -> n533  [key=0, style=bold, color=blue];
n537 -> n538  [key=0, style=solid];
n538 -> n536  [key=0, style=bold, color=blue];
n539 -> n540  [key=0, style=solid];
n540 -> n541  [key=0, style=solid];
n540 -> n28  [key=2, style=dotted];
n540 -> n542  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n541 -> n539  [key=0, style=bold, color=blue];
n542 -> n543  [key=0, style=solid];
n542 -> n546  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n543 -> n544  [key=0, style=solid];
n543 -> n18  [key=2, style=dotted];
n543 -> n545  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n546 -> n547  [key=0, style=solid];
n546 -> n41  [key=2, style=dotted];
n546 -> n548  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n544 -> n542  [key=0, style=bold, color=blue];
n545 -> n546  [key=0, style=solid];
n547 -> n545  [key=0, style=bold, color=blue];
n548 -> n549  [key=0, style=solid];
n549 -> n550  [key=0, style=solid];
n549 -> n551  [key=2, style=dotted];
n550 -> n548  [key=0, style=bold, color=blue];
n552 -> n553  [key=0, style=solid];
n553 -> n554  [key=0, style=solid];
n553 -> n28  [key=2, style=dotted];
n553 -> n555  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n554 -> n552  [key=0, style=bold, color=blue];
n555 -> n556  [key=0, style=solid];
n555 -> n557  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n555 -> n558  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n556 -> n557  [key=0, style=solid];
n556 -> n41  [key=2, style=dotted];
n556 -> n561  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n557 -> n558  [key=0, style=solid];
n557 -> n41  [key=2, style=dotted];
n557 -> n564  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n558 -> n559  [key=0, style=solid];
n558 -> n18  [key=2, style=dotted];
n558 -> n39  [key=2, style=dotted];
n561 -> n562  [key=0, style=solid];
n564 -> n565  [key=0, style=solid];
n559 -> n560  [key=0, style=solid];
n559 -> n19  [key=2, style=dotted];
n560 -> n555  [key=0, style=bold, color=blue];
n562 -> n563  [key=0, style=solid];
n562 -> n96  [key=2, style=dotted];
n562 -> n506  [key=2, style=dotted];
n563 -> n561  [key=0, style=bold, color=blue];
n565 -> n566  [key=0, style=solid];
n565 -> n551  [key=2, style=dotted];
n566 -> n564  [key=0, style=bold, color=blue];
n567 -> n568  [key=0, style=solid];
n568 -> n569  [key=0, style=solid];
n568 -> n28  [key=2, style=dotted];
n568 -> n570  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n569 -> n567  [key=0, style=bold, color=blue];
n570 -> n571  [key=0, style=solid];
n570 -> n575  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n571 -> n572  [key=0, style=solid];
n571 -> n18  [key=2, style=dotted];
n571 -> n574  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n575 -> n576  [key=0, style=solid];
n575 -> n41  [key=2, style=dotted];
n575 -> n577  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n572 -> n573  [key=0, style=solid];
n572 -> n19  [key=2, style=dotted];
n574 -> n575  [key=0, style=solid];
n573 -> n570  [key=0, style=bold, color=blue];
n576 -> n574  [key=0, style=bold, color=blue];
n577 -> n578  [key=0, style=solid];
n578 -> n579  [key=0, style=solid];
n578 -> n580  [key=2, style=dotted];
n578 -> n581  [key=2, style=dotted];
n579 -> n577  [key=0, style=bold, color=blue];
n582 -> n583  [key=0, style=solid];
n583 -> n584  [key=0, style=solid];
n583 -> n28  [key=2, style=dotted];
n583 -> n585  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n584 -> n582  [key=0, style=bold, color=blue];
n585 -> n586  [key=0, style=solid];
n585 -> n590  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n586 -> n587  [key=0, style=solid];
n586 -> n18  [key=2, style=dotted];
n586 -> n589  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n590 -> n591  [key=0, style=solid];
n590 -> n41  [key=2, style=dotted];
n590 -> n592  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n587 -> n588  [key=0, style=solid];
n587 -> n19  [key=2, style=dotted];
n589 -> n590  [key=0, style=solid];
n588 -> n585  [key=0, style=bold, color=blue];
n591 -> n589  [key=0, style=bold, color=blue];
n592 -> n593  [key=0, style=solid];
n593 -> n594  [key=0, style=solid];
n593 -> n581  [key=2, style=dotted];
n594 -> n592  [key=0, style=bold, color=blue];
n595 -> n596  [key=0, style=solid];
n596 -> n597  [key=0, style=solid];
n596 -> n28  [key=2, style=dotted];
n596 -> n598  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n597 -> n595  [key=0, style=bold, color=blue];
n598 -> n599  [key=0, style=solid];
n598 -> n600  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n598 -> n601  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n599 -> n600  [key=0, style=solid];
n599 -> n580  [key=2, style=dotted];
n599 -> n605  [key=1, style=dashed, color=darkseagreen4, label=items];
n599 -> n602  [key=1, style=dashed, color=darkseagreen4, label=items];
n600 -> n601  [key=0, style=solid];
n600 -> n41  [key=2, style=dotted];
n600 -> n604  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n601 -> n602  [key=0, style=solid];
n601 -> n18  [key=2, style=dotted];
n605 -> n606  [key=0, style=solid];
n605 -> n581  [key=2, style=dotted];
n602 -> n603  [key=0, style=solid];
n602 -> n19  [key=2, style=dotted];
n604 -> n605  [key=0, style=solid];
n603 -> n598  [key=0, style=bold, color=blue];
n606 -> n604  [key=0, style=bold, color=blue];
n607 -> n608  [key=0, style=solid];
n608 -> n609  [key=0, style=solid];
n608 -> n28  [key=2, style=dotted];
n608 -> n610  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n609 -> n607  [key=0, style=bold, color=blue];
n610 -> n611  [key=0, style=solid];
n610 -> n614  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n611 -> n612  [key=0, style=solid];
n611 -> n18  [key=2, style=dotted];
n611 -> n613  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n614 -> n615  [key=0, style=solid];
n614 -> n41  [key=2, style=dotted];
n614 -> n616  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n612 -> n610  [key=0, style=bold, color=blue];
n613 -> n614  [key=0, style=solid];
n615 -> n613  [key=0, style=bold, color=blue];
n616 -> n617  [key=0, style=solid];
n617 -> n618  [key=0, style=solid];
n617 -> n619  [key=2, style=dotted];
n618 -> n616  [key=0, style=bold, color=blue];
n620 -> n621  [key=0, style=solid];
n621 -> n622  [key=0, style=solid];
n621 -> n625  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n621 -> n621  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n622 -> n623  [key=0, style=solid];
n622 -> n28  [key=2, style=dotted];
n622 -> n624  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n625 -> n626  [key=0, style=solid];
n625 -> n630  [key=2, style=dotted];
n623 -> n620  [key=0, style=bold, color=blue];
n624 -> n625  [key=0, style=solid];
n624 -> n626  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n624 -> n627  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n626 -> n627  [key=0, style=solid];
n626 -> n41  [key=2, style=dotted];
n626 -> n631  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n627 -> n628  [key=0, style=solid];
n627 -> n38  [key=2, style=dotted];
n627 -> n39  [key=2, style=dotted];
n631 -> n632  [key=0, style=solid];
n628 -> n629  [key=0, style=solid];
n628 -> n19  [key=2, style=dotted];
n629 -> n624  [key=0, style=bold, color=blue];
n632 -> n633  [key=0, style=solid];
n632 -> n619  [key=2, style=dotted];
n633 -> n631  [key=0, style=bold, color=blue];
n634 -> n635  [key=0, style=solid];
n635 -> n636  [key=0, style=solid];
n635 -> n28  [key=2, style=dotted];
n635 -> n637  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n636 -> n634  [key=0, style=bold, color=blue];
n637 -> n638  [key=0, style=solid];
n637 -> n642  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n638 -> n639  [key=0, style=solid];
n638 -> n18  [key=2, style=dotted];
n638 -> n641  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n642 -> n643  [key=0, style=solid];
n642 -> n41  [key=2, style=dotted];
n642 -> n644  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n639 -> n640  [key=0, style=solid];
n639 -> n19  [key=2, style=dotted];
n641 -> n642  [key=0, style=solid];
n640 -> n637  [key=0, style=bold, color=blue];
n643 -> n641  [key=0, style=bold, color=blue];
n644 -> n645  [key=0, style=solid];
n645 -> n646  [key=0, style=solid];
n645 -> n647  [key=2, style=dotted];
n645 -> n648  [key=2, style=dotted];
n646 -> n644  [key=0, style=bold, color=blue];
n649 -> n650  [key=0, style=solid];
n650 -> n651  [key=0, style=solid];
n650 -> n654  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n650 -> n650  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n651 -> n652  [key=0, style=solid];
n651 -> n28  [key=2, style=dotted];
n651 -> n653  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n654 -> n655  [key=0, style=solid];
n654 -> n630  [key=2, style=dotted];
n652 -> n649  [key=0, style=bold, color=blue];
n653 -> n654  [key=0, style=solid];
n653 -> n655  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n653 -> n656  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n655 -> n656  [key=0, style=solid];
n655 -> n41  [key=2, style=dotted];
n655 -> n661  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n656 -> n657  [key=0, style=solid];
n656 -> n38  [key=2, style=dotted];
n656 -> n529  [key=2, style=dotted];
n656 -> n664  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n656 -> n667  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n656 -> n658  [key=1, style=dashed, color=darkseagreen4, label=records];
n656 -> n659  [key=1, style=dashed, color=darkseagreen4, label=records];
n661 -> n662  [key=0, style=solid];
n657 -> n658  [key=0, style=solid];
n657 -> n43  [key=2, style=dotted];
n657 -> n45  [key=2, style=dotted];
n664 -> n665  [key=0, style=solid];
n667 -> n668  [key=0, style=solid];
n658 -> n659  [key=0, style=solid];
n658 -> n43  [key=2, style=dotted];
n658 -> n45  [key=2, style=dotted];
n659 -> n660  [key=0, style=solid];
n659 -> n46  [key=2, style=dotted];
n660 -> n653  [key=0, style=bold, color=blue];
n662 -> n663  [key=0, style=solid];
n662 -> n647  [key=2, style=dotted];
n662 -> n648  [key=2, style=dotted];
n663 -> n661  [key=0, style=bold, color=blue];
n665 -> n666  [key=0, style=solid];
n666 -> n664  [key=0, style=bold, color=blue];
n668 -> n669  [key=0, style=solid];
n669 -> n667  [key=0, style=bold, color=blue];
n670 -> n671  [key=0, style=solid];
n671 -> n672  [key=0, style=solid];
n671 -> n28  [key=2, style=dotted];
n671 -> n673  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n672 -> n670  [key=0, style=bold, color=blue];
n673 -> n674  [key=0, style=solid];
n673 -> n678  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n674 -> n675  [key=0, style=solid];
n674 -> n18  [key=2, style=dotted];
n674 -> n677  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n678 -> n679  [key=0, style=solid];
n678 -> n41  [key=2, style=dotted];
n678 -> n680  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n675 -> n676  [key=0, style=solid];
n675 -> n19  [key=2, style=dotted];
n677 -> n678  [key=0, style=solid];
n676 -> n673  [key=0, style=bold, color=blue];
n679 -> n677  [key=0, style=bold, color=blue];
n680 -> n681  [key=0, style=solid];
n681 -> n682  [key=0, style=solid];
n681 -> n683  [key=2, style=dotted];
n681 -> n684  [key=2, style=dotted];
n682 -> n680  [key=0, style=bold, color=blue];
n685 -> n686  [key=0, style=solid];
n686 -> n687  [key=0, style=solid];
n686 -> n690  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n686 -> n686  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n687 -> n688  [key=0, style=solid];
n687 -> n28  [key=2, style=dotted];
n687 -> n689  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n690 -> n691  [key=0, style=solid];
n690 -> n630  [key=2, style=dotted];
n688 -> n685  [key=0, style=bold, color=blue];
n689 -> n690  [key=0, style=solid];
n689 -> n691  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n689 -> n692  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n691 -> n692  [key=0, style=solid];
n691 -> n41  [key=2, style=dotted];
n691 -> n697  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n692 -> n693  [key=0, style=solid];
n692 -> n38  [key=2, style=dotted];
n692 -> n529  [key=2, style=dotted];
n692 -> n700  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n692 -> n703  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n692 -> n694  [key=1, style=dashed, color=darkseagreen4, label=records];
n692 -> n695  [key=1, style=dashed, color=darkseagreen4, label=records];
n697 -> n698  [key=0, style=solid];
n693 -> n694  [key=0, style=solid];
n693 -> n43  [key=2, style=dotted];
n693 -> n45  [key=2, style=dotted];
n700 -> n701  [key=0, style=solid];
n703 -> n704  [key=0, style=solid];
n694 -> n695  [key=0, style=solid];
n694 -> n43  [key=2, style=dotted];
n694 -> n45  [key=2, style=dotted];
n695 -> n696  [key=0, style=solid];
n695 -> n46  [key=2, style=dotted];
n696 -> n689  [key=0, style=bold, color=blue];
n698 -> n699  [key=0, style=solid];
n698 -> n647  [key=2, style=dotted];
n698 -> n684  [key=2, style=dotted];
n699 -> n697  [key=0, style=bold, color=blue];
n701 -> n702  [key=0, style=solid];
n702 -> n700  [key=0, style=bold, color=blue];
n704 -> n705  [key=0, style=solid];
n705 -> n703  [key=0, style=bold, color=blue];
n706 -> n707  [key=0, style=solid];
n707 -> n708  [key=0, style=solid];
n707 -> n28  [key=2, style=dotted];
n707 -> n709  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n708 -> n706  [key=0, style=bold, color=blue];
n709 -> n710  [key=0, style=solid];
n709 -> n714  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n710 -> n711  [key=0, style=solid];
n710 -> n18  [key=2, style=dotted];
n710 -> n713  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n714 -> n715  [key=0, style=solid];
n714 -> n41  [key=2, style=dotted];
n714 -> n716  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n711 -> n712  [key=0, style=solid];
n711 -> n19  [key=2, style=dotted];
n713 -> n714  [key=0, style=solid];
n712 -> n709  [key=0, style=bold, color=blue];
n715 -> n713  [key=0, style=bold, color=blue];
n716 -> n717  [key=0, style=solid];
n717 -> n718  [key=0, style=solid];
n717 -> n683  [key=2, style=dotted];
n717 -> n719  [key=2, style=dotted];
n718 -> n716  [key=0, style=bold, color=blue];
n720 -> n721  [key=0, style=solid];
n721 -> n722  [key=0, style=solid];
n721 -> n725  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n721 -> n721  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n722 -> n723  [key=0, style=solid];
n722 -> n28  [key=2, style=dotted];
n722 -> n724  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n725 -> n726  [key=0, style=solid];
n725 -> n630  [key=2, style=dotted];
n723 -> n720  [key=0, style=bold, color=blue];
n724 -> n725  [key=0, style=solid];
n724 -> n726  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n724 -> n727  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n726 -> n727  [key=0, style=solid];
n726 -> n41  [key=2, style=dotted];
n726 -> n732  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n727 -> n728  [key=0, style=solid];
n727 -> n38  [key=2, style=dotted];
n727 -> n529  [key=2, style=dotted];
n727 -> n735  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n727 -> n738  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n727 -> n729  [key=1, style=dashed, color=darkseagreen4, label=records];
n727 -> n730  [key=1, style=dashed, color=darkseagreen4, label=records];
n732 -> n733  [key=0, style=solid];
n728 -> n729  [key=0, style=solid];
n728 -> n43  [key=2, style=dotted];
n728 -> n45  [key=2, style=dotted];
n735 -> n736  [key=0, style=solid];
n738 -> n739  [key=0, style=solid];
n729 -> n730  [key=0, style=solid];
n729 -> n43  [key=2, style=dotted];
n729 -> n45  [key=2, style=dotted];
n730 -> n731  [key=0, style=solid];
n730 -> n46  [key=2, style=dotted];
n731 -> n724  [key=0, style=bold, color=blue];
n733 -> n734  [key=0, style=solid];
n733 -> n647  [key=2, style=dotted];
n733 -> n719  [key=2, style=dotted];
n734 -> n732  [key=0, style=bold, color=blue];
n736 -> n737  [key=0, style=solid];
n737 -> n735  [key=0, style=bold, color=blue];
n739 -> n740  [key=0, style=solid];
n740 -> n738  [key=0, style=bold, color=blue];
n741 -> n742  [key=0, style=solid];
n742 -> n743  [key=0, style=solid];
n742 -> n28  [key=2, style=dotted];
n742 -> n744  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n743 -> n741  [key=0, style=bold, color=blue];
n744 -> n745  [key=0, style=solid];
n744 -> n749  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n745 -> n746  [key=0, style=solid];
n745 -> n18  [key=2, style=dotted];
n745 -> n748  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n749 -> n750  [key=0, style=solid];
n749 -> n41  [key=2, style=dotted];
n749 -> n751  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n746 -> n747  [key=0, style=solid];
n746 -> n19  [key=2, style=dotted];
n748 -> n749  [key=0, style=solid];
n747 -> n744  [key=0, style=bold, color=blue];
n750 -> n748  [key=0, style=bold, color=blue];
n751 -> n752  [key=0, style=solid];
n752 -> n753  [key=0, style=solid];
n752 -> n754  [key=2, style=dotted];
n753 -> n751  [key=0, style=bold, color=blue];
n755 -> n756  [key=0, style=solid];
n756 -> n757  [key=0, style=solid];
n756 -> n760  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n756 -> n756  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n757 -> n758  [key=0, style=solid];
n757 -> n28  [key=2, style=dotted];
n757 -> n759  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n760 -> n761  [key=0, style=solid];
n760 -> n44  [key=2, style=dotted];
n760 -> n630  [key=2, style=dotted];
n758 -> n755  [key=0, style=bold, color=blue];
n759 -> n760  [key=0, style=solid];
n759 -> n761  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n759 -> n762  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n761 -> n762  [key=0, style=solid];
n761 -> n41  [key=2, style=dotted];
n761 -> n766  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n762 -> n763  [key=0, style=solid];
n762 -> n38  [key=2, style=dotted];
n762 -> n529  [key=2, style=dotted];
n762 -> n769  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n762 -> n772  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n762 -> n764  [key=1, style=dashed, color=darkseagreen4, label=records];
n766 -> n767  [key=0, style=solid];
n763 -> n764  [key=0, style=solid];
n763 -> n46  [key=2, style=dotted];
n769 -> n770  [key=0, style=solid];
n772 -> n773  [key=0, style=solid];
n764 -> n765  [key=0, style=solid];
n764 -> n65  [key=2, style=dotted];
n765 -> n759  [key=0, style=bold, color=blue];
n767 -> n768  [key=0, style=solid];
n767 -> n754  [key=2, style=dotted];
n768 -> n766  [key=0, style=bold, color=blue];
n770 -> n771  [key=0, style=solid];
n771 -> n769  [key=0, style=bold, color=blue];
n773 -> n774  [key=0, style=solid];
n774 -> n772  [key=0, style=bold, color=blue];
n775 -> n776  [key=0, style=solid];
n776 -> n777  [key=0, style=solid];
n776 -> n28  [key=2, style=dotted];
n776 -> n778  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n777 -> n775  [key=0, style=bold, color=blue];
n778 -> n779  [key=0, style=solid];
n778 -> n783  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n779 -> n780  [key=0, style=solid];
n779 -> n18  [key=2, style=dotted];
n779 -> n782  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n783 -> n784  [key=0, style=solid];
n783 -> n41  [key=2, style=dotted];
n783 -> n785  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n780 -> n781  [key=0, style=solid];
n780 -> n19  [key=2, style=dotted];
n782 -> n783  [key=0, style=solid];
n781 -> n778  [key=0, style=bold, color=blue];
n784 -> n782  [key=0, style=bold, color=blue];
n785 -> n786  [key=0, style=solid];
n786 -> n787  [key=0, style=solid];
n786 -> n788  [key=2, style=dotted];
n787 -> n785  [key=0, style=bold, color=blue];
n789 -> n790  [key=0, style=solid];
n790 -> n791  [key=0, style=solid];
n790 -> n794  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n790 -> n790  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n791 -> n792  [key=0, style=solid];
n791 -> n28  [key=2, style=dotted];
n791 -> n793  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n794 -> n795  [key=0, style=solid];
n794 -> n44  [key=2, style=dotted];
n794 -> n630  [key=2, style=dotted];
n792 -> n789  [key=0, style=bold, color=blue];
n793 -> n794  [key=0, style=solid];
n793 -> n795  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n793 -> n796  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n795 -> n796  [key=0, style=solid];
n795 -> n41  [key=2, style=dotted];
n795 -> n800  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n796 -> n797  [key=0, style=solid];
n796 -> n38  [key=2, style=dotted];
n796 -> n529  [key=2, style=dotted];
n796 -> n803  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n796 -> n806  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n796 -> n798  [key=1, style=dashed, color=darkseagreen4, label=records];
n800 -> n801  [key=0, style=solid];
n797 -> n798  [key=0, style=solid];
n797 -> n46  [key=2, style=dotted];
n803 -> n804  [key=0, style=solid];
n806 -> n807  [key=0, style=solid];
n798 -> n799  [key=0, style=solid];
n798 -> n65  [key=2, style=dotted];
n799 -> n793  [key=0, style=bold, color=blue];
n801 -> n802  [key=0, style=solid];
n801 -> n788  [key=2, style=dotted];
n802 -> n800  [key=0, style=bold, color=blue];
n804 -> n805  [key=0, style=solid];
n805 -> n803  [key=0, style=bold, color=blue];
n807 -> n808  [key=0, style=solid];
n808 -> n806  [key=0, style=bold, color=blue];
n809 -> n810  [key=0, style=solid];
n810 -> n811  [key=0, style=solid];
n810 -> n28  [key=2, style=dotted];
n810 -> n812  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n811 -> n809  [key=0, style=bold, color=blue];
n812 -> n813  [key=0, style=solid];
n812 -> n817  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n813 -> n814  [key=0, style=solid];
n813 -> n18  [key=2, style=dotted];
n813 -> n816  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n817 -> n818  [key=0, style=solid];
n817 -> n41  [key=2, style=dotted];
n817 -> n819  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n814 -> n815  [key=0, style=solid];
n814 -> n19  [key=2, style=dotted];
n816 -> n817  [key=0, style=solid];
n815 -> n812  [key=0, style=bold, color=blue];
n818 -> n816  [key=0, style=bold, color=blue];
n819 -> n820  [key=0, style=solid];
n820 -> n821  [key=0, style=solid];
n820 -> n822  [key=2, style=dotted];
n821 -> n819  [key=0, style=bold, color=blue];
n823 -> n824  [key=0, style=solid];
n824 -> n825  [key=0, style=solid];
n824 -> n828  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
n824 -> n824  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
n825 -> n826  [key=0, style=solid];
n825 -> n28  [key=2, style=dotted];
n825 -> n827  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n828 -> n829  [key=0, style=solid];
n828 -> n44  [key=2, style=dotted];
n828 -> n630  [key=2, style=dotted];
n826 -> n823  [key=0, style=bold, color=blue];
n827 -> n828  [key=0, style=solid];
n827 -> n829  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n827 -> n830  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n829 -> n830  [key=0, style=solid];
n829 -> n41  [key=2, style=dotted];
n829 -> n834  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n830 -> n831  [key=0, style=solid];
n830 -> n38  [key=2, style=dotted];
n830 -> n529  [key=2, style=dotted];
n830 -> n837  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n830 -> n840  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n830 -> n832  [key=1, style=dashed, color=darkseagreen4, label=records];
n834 -> n835  [key=0, style=solid];
n831 -> n832  [key=0, style=solid];
n831 -> n46  [key=2, style=dotted];
n837 -> n838  [key=0, style=solid];
n840 -> n841  [key=0, style=solid];
n832 -> n833  [key=0, style=solid];
n832 -> n65  [key=2, style=dotted];
n833 -> n827  [key=0, style=bold, color=blue];
n835 -> n836  [key=0, style=solid];
n835 -> n822  [key=2, style=dotted];
n836 -> n834  [key=0, style=bold, color=blue];
n838 -> n839  [key=0, style=solid];
n839 -> n837  [key=0, style=bold, color=blue];
n841 -> n842  [key=0, style=solid];
n842 -> n840  [key=0, style=bold, color=blue];
n843 -> n844  [key=0, style=solid];
n843 -> n846  [key=2, style=dotted];
n844 -> n845  [key=0, style=solid];
n844 -> n847  [key=2, style=dotted];
n845 -> n153  [key=0, style=bold, color=blue];
n848 -> n849  [key=0, style=solid];
n848 -> n854  [key=2, style=dotted];
n848 -> n850  [key=1, style=dashed, color=darkseagreen4, label=storage];
n851 -> n852  [key=0, style=solid];
n851 -> n847  [key=2, style=dotted];
n849 -> n850  [key=0, style=solid];
n849 -> n6  [key=2, style=dotted];
n849 -> n8  [key=2, style=dotted];
n849 -> n857  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n850 -> n851  [key=0, style=solid];
n850 -> n855  [key=2, style=dotted];
n850 -> n852  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n857 -> n858  [key=0, style=solid];
n852 -> n853  [key=0, style=solid];
n852 -> n856  [key=2, style=dotted];
n853 -> n41  [key=0, style=bold, color=blue];
n858 -> n859  [key=0, style=solid];
n859 -> n857  [key=0, style=bold, color=blue];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_212  [key=0, style=solid];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_31  [key=2, style=dotted];
m1_214 -> m1_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_211 -> m1_215  [key=0, style=solid];
m1_211 -> m1_9  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_212 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_212 -> m1_212  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_117  [key=2, style=dotted];
m1_215 -> n719  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_28 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_28 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_28 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_28 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_28 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m1_28 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m1_28 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m1_28 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_16  [key=2, style=dotted];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_35 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_34 -> m1_45  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_43  [key=2, style=dotted];
m1_34 -> m1_32  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_46  [key=2, style=dotted];
m1_36 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_36 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_46  [key=2, style=dotted];
m1_37 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_37 -> m1_31  [key=2, style=dotted];
m1_37 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_47  [key=2, style=dotted];
m1_38 -> m1_36  [key=0, style=bold, color=blue];
m1_29 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_29 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_29 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_29 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_41  [key=2, style=dotted];
m1_29 -> m1_42  [key=2, style=dotted];
m1_29 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_29 -> m1_31  [key=2, style=dotted];
m1_29 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_44  [key=2, style=dotted];
m1_33 -> m1_43  [key=2, style=dotted];
m1_33 -> m1_35  [key=2, style=dotted];
m1_33 -> m1_22  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_30 -> m1_43  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_28  [key=0, style=bold, color=blue];
m1_31 -> m1_43  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_249  [key=0, style=solid];
m1_31 -> m1_29  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_37  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_44  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_61  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_70  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_76  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_82  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_88  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_99  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_108  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_115  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_123  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_131  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_158  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_184  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_194  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_204  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_214  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_224  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_234  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_31 -> m1_244  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_43  [key=2, style=dotted];
m1_40 -> m1_28  [key=0, style=bold, color=blue];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_22  [key=2, style=dotted];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m1_0 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_0 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_8  [key=0, style=solid];
m1_2 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_5  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_8  [key=0, style=solid];
m1_4 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_75 -> m1_25  [key=2, style=dotted];
m1_75 -> m1_77  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_31  [key=2, style=dotted];
m1_76 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_76 -> m1_74  [key=0, style=bold, color=blue];
m1_77 -> m1_75  [key=0, style=bold, color=blue];
m1_96 -> m1_97  [key=0, style=solid, color=green];
m1_96 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_96 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_96 -> m1_93  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_96 -> m1_94  [key=3, color=darkorchid, style=bold, label="Parameter variable double score"];
m1_96 -> m1_25  [key=2, style=dotted, color=green];
m1_96 -> m1_45  [key=2, style=dotted, color=green];
m1_96 -> m1_98  [key=2, style=dotted, color=green];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m1_97 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m1_97 -> m1_97  [key=3, color=darkorchid, style=bold, label="Local variable string addSql"];
m1_97 -> m1_95  [key=0, style=bold, color=blue];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_31  [key=2, style=dotted];
m1_99 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_99 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_101  [key=2, style=dotted];
m1_100 -> m1_96  [key=0, style=bold, color=blue];
m1_100 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_115  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_42 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_189 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_192  [key=0, style=solid];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_31  [key=2, style=dotted];
m1_194 -> m1_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_191 -> m1_195  [key=0, style=solid];
m1_191 -> m1_9  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_192 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_192 -> m1_192  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_145  [key=2, style=dotted];
m1_195 -> m1_189  [key=0, style=bold, color=blue];
m1_116 -> m1_113  [key=0, style=bold, color=blue];
m1_41 -> m1_39  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_24  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=2, style=dotted];
m1_18 -> m1_21  [key=2, style=dotted];
m1_18 -> m1_10  [key=0, style=bold, color=blue];
m1_19 -> m1_17  [key=0, style=bold, color=blue];
m1_19 -> m1_263  [key=0, style=solid];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_219 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_222  [key=0, style=solid];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_31  [key=2, style=dotted];
m1_224 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_221 -> m1_225  [key=0, style=solid];
m1_221 -> m1_9  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_222 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_222 -> m1_222  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_145  [key=2, style=dotted];
m1_225 -> m1_219  [key=0, style=bold, color=blue];
m1_27 -> m1_25  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_105 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_105 -> m1_104  [key=3, color=darkorchid, style=bold, label="Local variable var name"];
m1_105 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_105 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_106 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_106 -> m1_106  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_106 -> m1_104  [key=0, style=solid];
m1_106 -> m1_46  [key=2, style=dotted];
m1_106 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_106 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_31  [key=2, style=dotted];
m1_108 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_108 -> m1_118  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid, color=green];
m1_107 -> m1_101  [key=2, style=dotted];
m1_107 -> m1_117  [key=2, style=dotted, color=green];
m1_109 -> m1_105  [key=0, style=bold, color=blue];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_114  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_239 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_242  [key=0, style=solid];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_31  [key=2, style=dotted];
m1_244 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_241 -> m1_245  [key=0, style=solid];
m1_241 -> m1_9  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_242 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_242 -> m1_242  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_243 -> m1_244  [key=0, style=solid];
m1_243 -> m1_117  [key=2, style=dotted];
m1_245 -> m1_239  [key=0, style=bold, color=blue];
m1_69 -> m1_70  [key=0, style=solid, color=red];
m1_69 -> m1_73  [key=1, style=dashed, color=red, label=string];
m1_70 -> m1_71  [key=0, style=solid, color=red];
m1_70 -> m1_31  [key=2, style=dotted, color=red];
m1_70 -> m1_72  [key=1, style=dashed, color=red, label="lambda expression"];
m1_70 -> m1_25  [key=2, style=dotted];
m1_70 -> m1_45  [key=2, style=dotted];
m1_70 -> m1_73  [key=2, style=dotted];
m1_70 -> m1_51  [key=2, style=dotted];
m1_71 -> m1_69  [key=0, style=bold, color=blue];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_229 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_232  [key=0, style=solid];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_31  [key=2, style=dotted];
m1_234 -> m1_236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_231 -> m1_235  [key=0, style=solid];
m1_231 -> m1_9  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_232 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_232 -> m1_232  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_101  [key=2, style=dotted];
m1_235 -> m1_229  [key=0, style=bold, color=blue];
m1_255 -> m1_260  [key=0, style=solid];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_262  [key=2, style=dotted];
m1_261 -> m1_255  [key=0, style=bold, color=blue];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_199 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_202  [key=0, style=solid];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_31  [key=2, style=dotted];
m1_204 -> m1_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_201 -> m1_205  [key=0, style=solid];
m1_201 -> m1_9  [key=2, style=dotted];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_202 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_202 -> m1_202  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_101  [key=2, style=dotted];
m1_205 -> m1_199  [key=0, style=bold, color=blue];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_96  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_91  [key=0, style=bold, color=blue];
m1_95 -> m1_93  [key=0, style=bold, color=blue];
m1_95 -> m1_96  [key=0, style=solid, color=green];
m1_73 -> m1_74  [key=0, style=solid, color=red];
m1_73 -> m1_22  [key=2, style=dotted, color=red];
m1_55 -> m1_56  [key=0, style=solid];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_136 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_136 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_136 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_136 -> m1_16  [key=2, style=dotted];
m1_136 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_136 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_139  [key=0, style=solid];
m1_137 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_137 -> m1_46  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_141  [key=0, style=solid];
m1_139 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_139 -> m1_46  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_146  [key=2, style=dotted];
m1_143 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_143 -> m1_25  [key=2, style=dotted];
m1_143 -> m1_145  [key=2, style=dotted];
m1_138 -> m1_144  [key=0, style=solid];
m1_138 -> m1_9  [key=2, style=dotted];
m1_138 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_138 -> m1_46  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_140 -> m1_144  [key=0, style=solid];
m1_140 -> m1_9  [key=2, style=dotted];
m1_140 -> m1_47  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label=sql];
m1_141 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label=sql];
m1_141 -> m1_141  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m1_141 -> m1_135  [key=0, style=bold, color=blue];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_145  [key=2, style=dotted];
m1_144 -> m1_136  [key=0, style=bold, color=blue];
m1_144 -> m1_142  [key=0, style=bold, color=blue];
m1_135 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_135 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_135 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_135 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_135 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_135 -> m1_133  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_56 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_56 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_56 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_56 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_56 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_56 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_56 -> m1_49  [key=2, style=dotted];
m1_56 -> m1_50  [key=2, style=dotted];
m1_56 -> m1_22  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_16  [key=2, style=dotted];
m1_57 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_57 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_57 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_57 -> m1_55  [key=0, style=bold, color=blue];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_46  [key=2, style=dotted];
m1_58 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_58 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_58 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_46  [key=2, style=dotted];
m1_59 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_59 -> m1_63  [key=2, style=dotted];
m1_62 -> m1_60  [key=0, style=solid];
m1_62 -> m1_46  [key=2, style=dotted];
m1_62 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_62 -> m1_58  [key=0, style=bold, color=blue];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_47  [key=2, style=dotted];
m1_61 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_60  [key=3, color=darkorchid, style=bold, label="Local variable string queue1"];
m1_61 -> m1_31  [key=2, style=dotted];
m1_61 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_60 -> m1_63  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_64  [key=2, style=dotted];
m1_60 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m1_64 -> m1_56  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_19  [key=2, style=dotted];
m1_11 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_90 -> m1_91  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_0  [key=0, style=bold, color=blue];
m1_10 -> m1_8  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string CreateExpiredJob"];
m1_65 -> m1_66  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=2, style=dotted];
m1_47 -> m1_50  [key=2, style=dotted];
m1_47 -> m1_22  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_48 -> m1_46  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=2, style=dotted];
m1_67 -> m1_65  [key=0, style=bold, color=blue];
m1_72 -> m1_73  [key=0, style=solid, color=red];
m1_72 -> m1_49  [key=0, style=solid];
m1_74 -> m1_72  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_35  [key=2, style=dotted];
m1_79 -> m1_22  [key=2, style=dotted];
m1_79 -> m1_81  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_80 -> m1_78  [key=0, style=bold, color=blue];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_22  [key=2, style=dotted];
m1_85 -> m1_47  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_46  [key=2, style=dotted];
m1_84 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_86 -> m1_84  [key=0, style=bold, color=blue];
m1_86 -> m1_81  [key=0, style=bold, color=blue];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_35  [key=2, style=dotted];
m1_91 -> m1_22  [key=2, style=dotted];
m1_92 -> m1_90  [key=0, style=bold, color=blue];
m1_92 -> m1_25  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_94  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_22  [key=2, style=dotted];
m1_103 -> m1_107  [key=1, style=dashed, color=green, label=pipeline];
m1_103 -> m1_116  [key=2, style=dotted];
m1_103 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m1_104 -> m1_102  [key=0, style=bold, color=blue];
m1_104 -> m1_107  [key=0, style=solid, color=green];
m1_104 -> m1_105  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid, color=green];
m1_111 -> m1_22  [key=2, style=dotted];
m1_111 -> m1_109  [key=0, style=solid];
m1_111 -> m1_121  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_112  [key=1, style=dashed, color=green, label=heartbeat];
m1_110 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m1_110 -> m1_119  [key=2, style=dotted];
m1_110 -> m1_120  [key=2, style=dotted];
m1_112 -> m1_110  [key=0, style=bold, color=blue];
m1_112 -> m1_112  [key=1, style=dashed, color=green, label=heartbeat];
m1_112 -> m1_113  [key=0, style=solid, color=green];
m1_112 -> m1_81  [key=2, style=dotted, color=green];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_22  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_120 -> m1_118  [key=0, style=bold, color=blue];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_22  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_123  [key=0, style=bold, color=blue];
m1_127 -> m1_125  [key=0, style=bold, color=blue];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_22  [key=2, style=dotted];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_21  [key=2, style=dotted];
m1_148 -> m1_22  [key=2, style=dotted];
m1_148 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_148 -> m1_146  [key=0, style=bold, color=blue];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m1_151 -> m1_25  [key=2, style=dotted];
m1_151 -> m1_149  [key=2, style=dotted];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_25  [key=2, style=dotted];
m1_147 -> m1_149  [key=2, style=dotted];
m1_149 -> m1_147  [key=0, style=bold, color=blue];
m1_150 -> m1_151  [key=0, style=solid];
m1_152 -> m1_150  [key=0, style=bold, color=blue];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_22  [key=2, style=dotted];
m1_161 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_161 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_160 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_162 -> m1_160  [key=0, style=bold, color=blue];
m1_162 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_21  [key=2, style=dotted];
m1_173 -> m1_175  [key=2, style=dotted];
m1_173 -> m1_22  [key=2, style=dotted];
m1_173 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_177 -> m1_178  [key=0, style=solid];
m1_172 -> m1_173  [key=0, style=solid];
m1_174 -> m1_172  [key=0, style=bold, color=blue];
m1_176 -> m1_177  [key=0, style=solid];
m1_178 -> m1_176  [key=0, style=bold, color=blue];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_22  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_188 -> m1_186  [key=0, style=bold, color=blue];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_35  [key=2, style=dotted];
m1_197 -> m1_22  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_198 -> m1_196  [key=0, style=bold, color=blue];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_35  [key=2, style=dotted];
m1_207 -> m1_22  [key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_208 -> m1_206  [key=0, style=bold, color=blue];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_35  [key=2, style=dotted];
m1_217 -> m1_22  [key=2, style=dotted];
m1_216 -> m1_217  [key=0, style=solid];
m1_218 -> m1_216  [key=0, style=bold, color=blue];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_22  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_228 -> m1_226  [key=0, style=bold, color=blue];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_22  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_238 -> m1_236  [key=0, style=bold, color=blue];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_22  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_248 -> m1_246  [key=0, style=bold, color=blue];
m1_49 -> m1_25  [key=2, style=dotted];
m1_49 -> m1_74  [key=0, style=solid];
m1_49 -> m1_51  [key=2, style=dotted];
m1_53 -> m1_25  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_55  [key=2, style=dotted];
m1_53 -> m1_31  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [key=2, style=dotted];
m1_88 -> m1_31  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m1_52 -> m1_52  [key=3, color=darkorchid, style=bold, label="Local variable string addStateSql"];
m1_54 -> m1_52  [key=0, style=bold, color=blue];
m1_54 -> m1_51  [key=0, style=bold, color=blue];
m1_146 -> m1_147  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_31  [key=2, style=dotted];
m1_123 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_128 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_126  [key=2, style=dotted];
m1_124 -> m1_127  [key=2, style=dotted];
m1_124 -> m1_121  [key=0, style=bold, color=blue];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_131  [key=2, style=dotted];
m1_129 -> m1_132  [key=2, style=dotted];
m1_129 -> m1_133  [key=2, style=dotted];
m1_129 -> m1_134  [key=2, style=dotted];
m1_129 -> m1_129  [key=3, color=darkorchid, style=bold, label="Local variable string trimSql"];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_89 -> m1_87  [key=0, style=bold, color=blue];
m1_130 -> m1_128  [key=0, style=bold, color=blue];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_117  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_163 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_163 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_163 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_163 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_166  [key=0, style=solid];
m1_164 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_164 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_164 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_168  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_146  [key=2, style=dotted];
m1_170 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_165 -> m1_171  [key=0, style=solid];
m1_165 -> m1_9  [key=2, style=dotted];
m1_167 -> m1_171  [key=0, style=solid];
m1_167 -> m1_9  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_168 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_168 -> m1_168  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_101  [key=2, style=dotted];
m1_171 -> m1_163  [key=0, style=bold, color=blue];
m1_145 -> m1_258  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_81 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_81 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_81 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_81 -> m1_78  [key=3, color=darkorchid, style=bold, label="Parameter variable string serverId"];
m1_81 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_16  [key=2, style=dotted];
m1_82 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_82 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_82 -> m1_31  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_46  [key=2, style=dotted];
m1_83 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_83 -> m1_81  [key=0, style=bold, color=blue];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_121 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_117  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m1_43 -> m1_43  [key=3, color=darkorchid, style=bold, label="Local variable string addAndSetStateSql"];
m1_23 -> m1_25  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_26  [key=2, style=dotted];
m1_23 -> m1_27  [key=2, style=dotted];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_16 -> m1_15  [key=0, style=solid];
m1_16 -> m1_23  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_51 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_20  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_13 -> m1_16  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_21  [key=2, style=dotted];
m1_14 -> m1_22  [key=2, style=dotted];
m1_14 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_153 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_153 -> m1_96  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_112  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_153 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_156  [key=0, style=solid];
m1_154 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_31  [key=2, style=dotted];
m1_158 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_158 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_155 -> m1_159  [key=0, style=solid];
m1_155 -> m1_9  [key=2, style=dotted];
m1_155 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_155 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_156 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_156 -> m1_156  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_156 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_145  [key=2, style=dotted];
m1_159 -> m1_153  [key=0, style=bold, color=blue];
m1_159 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m1_117 -> m1_252  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_45 -> m1_42  [key=0, style=bold, color=blue];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_31  [key=2, style=dotted];
m1_131 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_132 -> m1_128  [key=0, style=bold, color=blue];
m1_101 -> m1_256  [key=0, style=solid];
m1_101 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m1_101 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_72  [key=2, style=dotted];
m1_101 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_254  [key=2, style=dotted];
m1_256 -> m1_255  [key=2, style=dotted];
m1_257 -> m1_101  [key=0, style=bold, color=blue];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_254  [key=2, style=dotted];
m1_258 -> m1_255  [key=2, style=dotted];
m1_259 -> m1_145  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_31  [key=2, style=dotted];
m1_44 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_44 -> m1_44  [key=3, color=darkorchid, style=bold, label="Local variable string queue1"];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_179 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_182  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_31  [key=2, style=dotted];
m1_184 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_181 -> m1_185  [key=0, style=solid];
m1_181 -> m1_9  [key=2, style=dotted];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_182 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_182 -> m1_182  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_101  [key=2, style=dotted];
m1_185 -> m1_179  [key=0, style=bold, color=blue];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_251  [key=2, style=dotted];
m1_250 -> m1_31  [key=0, style=bold, color=blue];
m1_113 -> m1_113  [key=1, style=dashed, color=green, label=heartbeat];
m1_113 -> m1_109  [key=0, style=solid, color=green];
m1_113 -> m1_122  [key=2, style=dotted, color=green];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_113 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_114 -> m1_99  [key=0, style=bold, color=blue];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_117  [key=2, style=dotted];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_265  [key=2, style=dotted];
m1_263 -> m1_266  [key=2, style=dotted];
m1_264 -> m1_19  [key=0, style=bold, color=blue];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_31  [key=2, style=dotted];
m1_115 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_254  [key=2, style=dotted];
m1_252 -> m1_255  [key=2, style=dotted];
m1_253 -> m1_117  [key=0, style=bold, color=blue];
m1_267 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_70  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_267 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m1_268 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_269 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_270 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_271 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_272 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m1_273 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m1_274 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_275 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m1_276 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m1_277 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_278 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_279 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m1_280 -> m1_73  [key=1, style=dashed, color=red, label=string];
m1_280 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_280 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_280 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_281 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_282 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_283 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_284 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_285 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_286 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_287 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_288 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=double];
m1_289 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m1_290 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_291 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_292 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_293 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_294 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_295 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_296 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_297 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_298 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_299 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_300 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m1_301 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_301 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_302 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m1_303 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label=sql];
m1_304 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_305 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_306 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_306 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_307 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_308 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_309 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_310 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_311 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_312 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_313 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_314 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_315 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_316 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_317 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_318 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_319 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_320 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_321 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_322 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_323 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label=query];
m1_324 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_325 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_106 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_106 -> m2_106  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_31  [key=2, style=dotted];
m2_108 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_101  [key=2, style=dotted];
m2_109 -> n336  [key=0, style=bold, color=blue];
m2_19 -> m2_263  [key=0, style=solid];
m2_101 -> m2_256  [key=0, style=solid];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_254  [key=2, style=dotted];
m2_256 -> m2_255  [key=2, style=dotted];
m2_257 -> m2_101  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_18  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_19  [key=2, style=dotted];
m2_11 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m2_11 -> m2_14  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_20  [key=2, style=dotted];
m2_12 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_12 -> m2_19  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_24  [key=2, style=dotted];
m2_17 -> m2_9  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_13 -> m2_11  [key=0, style=solid];
m2_13 -> m2_20  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_21  [key=2, style=dotted];
m2_14 -> m2_22  [key=2, style=dotted];
m2_14 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_14 -> m2_17  [key=0, style=solid];
m2_14 -> m2_18  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=0, style=solid];
m2_16 -> m2_15  [key=0, style=solid];
m2_16 -> m2_23  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_21  [key=2, style=dotted];
m2_18 -> m2_10  [key=0, style=bold, color=blue];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_31  [key=2, style=dotted];
m2_70 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_71 -> m2_69  [key=0, style=bold, color=blue];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_229 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_232  [key=0, style=solid];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_31  [key=2, style=dotted];
m2_234 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_231 -> m2_235  [key=0, style=solid];
m2_231 -> m2_9  [key=2, style=dotted];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_232 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_232 -> m2_232  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_101  [key=2, style=dotted];
m2_235 -> m2_229  [key=0, style=bold, color=blue];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_239 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_242  [key=0, style=solid];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_31  [key=2, style=dotted];
m2_244 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_241 -> m2_245  [key=0, style=solid];
m2_241 -> m2_9  [key=2, style=dotted];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_242 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_242 -> m2_242  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_117  [key=2, style=dotted];
m2_245 -> m2_239  [key=0, style=bold, color=blue];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_31  [key=2, style=dotted];
m2_82 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_83 -> m2_81  [key=0, style=bold, color=blue];
m2_255 -> m2_260  [key=0, style=solid];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_262  [key=2, style=dotted];
m2_261 -> m2_255  [key=0, style=bold, color=blue];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_199 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_202  [key=0, style=solid];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_31  [key=2, style=dotted];
m2_204 -> m2_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_201 -> m2_205  [key=0, style=solid];
m2_201 -> m2_9  [key=2, style=dotted];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_202 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_202 -> m2_202  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_101  [key=2, style=dotted];
m2_205 -> m2_199  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m2_0 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_0 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m2_0 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid, color=green];
m2_5 -> m2_8  [key=2, style=dotted, color=green];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_3  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_2 -> m2_8  [key=0, style=solid];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_8  [key=0, style=solid];
m2_4 -> m2_9  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_7  [key=2, style=dotted];
m2_8 -> m2_0  [key=0, style=bold, color=blue];
m2_145 -> m2_258  [key=0, style=solid];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_254  [key=2, style=dotted];
m2_258 -> m2_255  [key=2, style=dotted];
m2_259 -> m2_145  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_42 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m2_43 -> m2_43  [key=3, color=darkorchid, style=bold, label="Local variable string addAndSetStateSql"];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_31  [key=2, style=dotted];
m2_44 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_45 -> m2_42  [key=0, style=bold, color=blue];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_209 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_212  [key=0, style=solid];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_31  [key=2, style=dotted];
m2_214 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_211 -> m2_215  [key=0, style=solid];
m2_211 -> m2_9  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_212 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_212 -> m2_212  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_117  [key=2, style=dotted];
m2_215 -> m2_209  [key=0, style=bold, color=blue];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_51 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m2_52 -> m2_52  [key=3, color=darkorchid, style=bold, label="Local variable string addStateSql"];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_31  [key=2, style=dotted];
m2_53 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_54 -> m2_51  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_31  [key=2, style=dotted];
m2_88 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_89 -> m2_87  [key=0, style=bold, color=blue];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_179 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_182  [key=0, style=solid];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_31  [key=2, style=dotted];
m2_184 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_181 -> m2_185  [key=0, style=solid];
m2_181 -> m2_9  [key=2, style=dotted];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_182 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_182 -> m2_182  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_101  [key=2, style=dotted];
m2_185 -> m2_179  [key=0, style=bold, color=blue];
m2_93 -> m2_94  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_96  [key=2, style=dotted];
m2_95 -> m2_93  [key=0, style=bold, color=blue];
m2_31 -> m2_249  [key=0, style=solid];
m2_31 -> m2_29  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_37  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_44  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_61  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_70  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_76  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_82  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_88  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_99  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_108  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_115  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_123  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_131  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_158  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_184  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_194  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_204  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_214  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_224  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_234  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_244  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m2_31 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.ServerWatchdog"];
m2_31 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.ServerWatchdog"];
m2_31 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.ServerWatchdog"];
m2_31 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.ServerWatchdog"];
m2_31 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.ServerWatchdog"];
m2_31 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.ServerWatchdog"];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_251  [key=2, style=dotted];
m2_250 -> m2_31  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=2, style=dotted];
m2_29 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_58 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_63  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_31  [key=2, style=dotted];
m2_61 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_64  [key=2, style=dotted];
m2_60 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m2_62 -> m2_58  [key=0, style=bold, color=blue];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_31  [key=2, style=dotted];
m2_76 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_77 -> m2_75  [key=0, style=bold, color=blue];
m2_23 -> m2_3  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m2_136 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_136 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_136 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_141  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_146  [key=2, style=dotted];
m2_143 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_138 -> m2_144  [key=0, style=solid];
m2_138 -> m2_9  [key=2, style=dotted];
m2_140 -> m2_144  [key=0, style=solid];
m2_140 -> m2_9  [key=2, style=dotted];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=sql];
m2_141 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=sql];
m2_141 -> m2_141  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_145  [key=2, style=dotted];
m2_144 -> m2_136  [key=0, style=bold, color=blue];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_96 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_96 -> m2_93  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_96 -> m2_94  [key=3, color=darkorchid, style=bold, label="Parameter variable double score"];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m2_97 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m2_97 -> m2_97  [key=3, color=darkorchid, style=bold, label="Local variable string addSql"];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_31  [key=2, style=dotted];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_101  [key=2, style=dotted];
m2_100 -> m2_96  [key=0, style=bold, color=blue];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_153 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_156  [key=0, style=solid];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_31  [key=2, style=dotted];
m2_158 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_155 -> m2_159  [key=0, style=solid];
m2_155 -> m2_9  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_156 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_156 -> m2_156  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_145  [key=2, style=dotted];
m2_159 -> m2_153  [key=0, style=bold, color=blue];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_31  [key=2, style=dotted];
m2_37 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_38 -> m2_36  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.Thread"];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_30  [key=2, style=dotted];
m2_27 -> m2_25  [key=0, style=bold, color=blue];
m2_28 -> m2_25  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_263 -> m2_264  [key=0, style=solid];
m2_263 -> m2_265  [key=2, style=dotted];
m2_263 -> m2_266  [key=2, style=dotted];
m2_264 -> m2_19  [key=0, style=bold, color=blue];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_189 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_192  [key=0, style=solid];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_31  [key=2, style=dotted];
m2_194 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_191 -> m2_195  [key=0, style=solid];
m2_191 -> m2_9  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_192 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_192 -> m2_192  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_145  [key=2, style=dotted];
m2_195 -> m2_189  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=2, style=dotted];
m2_33 -> m2_22  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_34 -> m2_32  [key=0, style=bold, color=blue];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_22  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_41 -> m2_39  [key=0, style=bold, color=blue];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [key=2, style=dotted];
m2_47 -> m2_50  [key=2, style=dotted];
m2_47 -> m2_22  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_48 -> m2_46  [key=0, style=bold, color=blue];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_49  [key=2, style=dotted];
m2_56 -> m2_50  [key=2, style=dotted];
m2_56 -> m2_22  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_57 -> m2_55  [key=0, style=bold, color=blue];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_67 -> m2_65  [key=0, style=bold, color=blue];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_22  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_74 -> m2_72  [key=0, style=bold, color=blue];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_35  [key=2, style=dotted];
m2_79 -> m2_22  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_80 -> m2_78  [key=0, style=bold, color=blue];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_22  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_86 -> m2_84  [key=0, style=bold, color=blue];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_35  [key=2, style=dotted];
m2_91 -> m2_22  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_92 -> m2_90  [key=0, style=bold, color=blue];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_22  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_104 -> m2_102  [key=0, style=bold, color=blue];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_22  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_112 -> m2_110  [key=0, style=bold, color=blue];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_22  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_120 -> m2_118  [key=0, style=bold, color=blue];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_22  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_127 -> m2_125  [key=0, style=bold, color=blue];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_22  [key=2, style=dotted];
m2_133 -> m2_134  [key=0, style=solid];
m2_135 -> m2_133  [key=0, style=bold, color=blue];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_21  [key=2, style=dotted];
m2_148 -> m2_22  [key=2, style=dotted];
m2_148 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m2_147 -> m2_148  [key=0, style=solid];
m2_149 -> m2_147  [key=0, style=bold, color=blue];
m2_150 -> m2_151  [key=0, style=solid];
m2_152 -> m2_150  [key=0, style=bold, color=blue];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_22  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_162 -> m2_160  [key=0, style=bold, color=blue];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_21  [key=2, style=dotted];
m2_173 -> m2_175  [key=2, style=dotted];
m2_173 -> m2_22  [key=2, style=dotted];
m2_173 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_177 -> m2_178  [key=0, style=solid];
m2_172 -> m2_173  [key=0, style=solid];
m2_174 -> m2_172  [key=0, style=bold, color=blue];
m2_176 -> m2_177  [key=0, style=solid];
m2_178 -> m2_176  [key=0, style=bold, color=blue];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_22  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_188 -> m2_186  [key=0, style=bold, color=blue];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_35  [key=2, style=dotted];
m2_197 -> m2_22  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_198 -> m2_196  [key=0, style=bold, color=blue];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_35  [key=2, style=dotted];
m2_207 -> m2_22  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_208 -> m2_206  [key=0, style=bold, color=blue];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_35  [key=2, style=dotted];
m2_217 -> m2_22  [key=2, style=dotted];
m2_216 -> m2_217  [key=0, style=solid];
m2_218 -> m2_216  [key=0, style=bold, color=blue];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_22  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_228 -> m2_226  [key=0, style=bold, color=blue];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_22  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_238 -> m2_236  [key=0, style=bold, color=blue];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_22  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_248 -> m2_246  [key=0, style=bold, color=blue];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m2_163 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_163 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_163 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_166  [key=0, style=solid];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_168  [key=0, style=solid];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_146  [key=2, style=dotted];
m2_170 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_165 -> m2_171  [key=0, style=solid];
m2_165 -> m2_9  [key=2, style=dotted];
m2_167 -> m2_171  [key=0, style=solid];
m2_167 -> m2_9  [key=2, style=dotted];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_168 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_168 -> m2_168  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_101  [key=2, style=dotted];
m2_171 -> m2_163  [key=0, style=bold, color=blue];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_121 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_117  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_31  [key=2, style=dotted];
m2_123 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_124 -> m2_121  [key=0, style=bold, color=blue];
m2_117 -> m2_252  [key=0, style=solid];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_254  [key=2, style=dotted];
m2_252 -> m2_255  [key=2, style=dotted];
m2_253 -> m2_117  [key=0, style=bold, color=blue];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_219 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_222  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_31  [key=2, style=dotted];
m2_224 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_221 -> m2_225  [key=0, style=solid];
m2_221 -> m2_9  [key=2, style=dotted];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_222 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_222 -> m2_222  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_145  [key=2, style=dotted];
m2_225 -> m2_219  [key=0, style=bold, color=blue];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_113 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_117  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_31  [key=2, style=dotted];
m2_115 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_116 -> m2_113  [key=0, style=bold, color=blue];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_128 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m2_129 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m2_129 -> m2_129  [key=3, color=darkorchid, style=bold, label="Local variable string trimSql"];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_31  [key=2, style=dotted];
m2_131 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_117  [key=2, style=dotted];
m2_132 -> m2_128  [key=0, style=bold, color=blue];
m2_267 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_267 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m2_268 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_269 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_270 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_271 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_272 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m2_273 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m2_274 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_275 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m2_276 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m2_277 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_278 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_279 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m2_280 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_281 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_282 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_283 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_284 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_285 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_286 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_287 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_288 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=double];
m2_289 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m2_290 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_291 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_292 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_293 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_294 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_295 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_296 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_297 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_298 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_299 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_300 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m2_301 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_301 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_302 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m2_303 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=sql];
m2_304 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_305 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_306 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_306 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_307 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m2_308 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_309 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_310 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_311 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_312 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_313 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_314 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_315 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_316 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_317 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_318 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_319 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_320 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_321 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_322 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_323 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label=query];
m2_324 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_325 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=query];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_14  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_5  [key=2, style=dotted];
m3_17 -> m3_6  [key=2, style=dotted];
m3_17 -> m3_15  [key=0, style=bold, color=blue];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_5  [key=2, style=dotted];
m3_18 -> m3_11  [key=2, style=dotted];
m3_18 -> m3_30  [key=0, style=solid];
m3_19 -> m3_16  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>"];
m3_50 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m3_55 -> m3_64  [key=2, style=dotted];
m3_55 -> m3_52  [key=0, style=solid];
m3_55 -> m3_62  [key=2, style=dotted];
m3_55 -> m3_63  [key=2, style=dotted];
m3_51 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_58  [key=2, style=dotted];
m3_51 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_52 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_56  [key=0, style=solid];
m3_52 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_60  [key=2, style=dotted];
m3_54 -> m3_61  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_65  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_59  [key=2, style=dotted];
m3_57 -> m3_50  [key=0, style=bold, color=blue];
m3_178 -> m3_179  [key=0, style=solid];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_161  [key=2, style=dotted];
m3_181 -> m3_188  [key=1, style=dashed, color=darkseagreen4, label=multi];
m3_181 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label=multi];
m3_181 -> m3_190  [key=1, style=dashed, color=darkseagreen4, label=multi];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_180  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_194  [key=2, style=dotted];
m3_182 -> m3_163  [key=2, style=dotted];
m3_182 -> m3_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_182 -> m3_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_182 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m3_188 -> m3_22  [key=2, style=dotted];
m3_188 -> m3_23  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_189 -> m3_22  [key=2, style=dotted];
m3_189 -> m3_23  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_190 -> m3_22  [key=2, style=dotted];
m3_190 -> m3_191  [key=0, style=solid];
m3_190 -> m3_162  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_188  [key=1, style=dashed, color=darkseagreen4, label=stats];
m3_179 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label=stats];
m3_179 -> m3_190  [key=1, style=dashed, color=darkseagreen4, label=stats];
m3_179 -> m3_193  [key=2, style=dotted];
m3_179 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label=stats];
m3_179 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label=stats];
m3_179 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=stats];
m3_179 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label=stats];
m3_179 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label=stats];
m3_183 -> m3_183  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, int> getCountIfExists"];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_183 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m3_183 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m3_183 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_195  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_195  [key=2, style=dotted];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_195  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_195  [key=2, style=dotted];
m3_192 -> m3_178  [key=0, style=bold, color=blue];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_82  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount"];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_82  [key=2, style=dotted];
m3_85 -> m3_83  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_147 -> m3_80  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m3_147 -> m3_84  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m3_147 -> m3_206  [key=0, style=solid];
m3_147 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_147 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_147 -> m3_219  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats"];
m3_215 -> m3_216  [key=0, style=solid];
m3_215 -> m3_228  [key=2, style=dotted];
m3_215 -> m3_163  [key=2, style=dotted];
m3_215 -> m3_237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_215 -> m3_240  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_215 -> m3_217  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m3_215 -> m3_218  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m3_215 -> m3_222  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m3_210 -> m3_64  [key=2, style=dotted];
m3_210 -> m3_211  [key=0, style=solid];
m3_213 -> m3_215  [key=1, style=dashed, color=darkseagreen4, label=keys];
m3_213 -> m3_48  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_164  [key=2, style=dotted];
m3_213 -> m3_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_213 -> m3_216  [key=1, style=dashed, color=darkseagreen4, label=keys];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_214  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_219  [key=0, style=solid];
m3_216 -> m3_218  [key=1, style=dashed, color=darkseagreen4, label=key];
m3_217 -> m3_216  [key=0, style=solid];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_205  [key=2, style=dotted];
m3_218 -> m3_216  [key=0, style=solid];
m3_218 -> m3_229  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_231  [key=2, style=dotted];
m3_206 -> m3_210  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m3_206 -> m3_207  [key=0, style=solid];
m3_206 -> m3_211  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m3_207 -> m3_210  [key=1, style=dashed, color=darkseagreen4, label=dates];
m3_207 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=dates];
m3_207 -> m3_208  [key=0, style=solid];
m3_207 -> n580  [key=2, style=dotted];
m3_207 -> m3_221  [key=1, style=dashed, color=darkseagreen4, label=dates];
m3_207 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label=dates];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_213  [key=0, style=solid];
m3_211 -> m3_211  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_227  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_219 -> m3_230  [key=2, style=dotted];
m3_219 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_219 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_225  [key=0, style=solid];
m3_221 -> m3_208  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_220 -> m3_222  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_220 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_223 -> m3_229  [key=2, style=dotted];
m3_223 -> m3_224  [key=0, style=solid];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_208  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_208 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_212 -> m3_209  [key=0, style=solid];
m3_212 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_225 -> m3_226  [key=0, style=solid];
m3_224 -> m3_221  [key=0, style=solid];
m3_224 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_226 -> m3_147  [key=0, style=bold, color=blue];
m3_151 -> m3_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_69  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobDetailsDto JobDetails"];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_161  [key=2, style=dotted];
m3_153 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label=multi];
m3_153 -> m3_158  [key=1, style=dashed, color=darkseagreen4, label=multi];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_165  [key=2, style=dotted];
m3_159 -> m3_22  [key=2, style=dotted];
m3_159 -> m3_143  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_152  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m3_154 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label=job];
m3_154 -> m3_22  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_162  [key=2, style=dotted];
m3_157 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m3_157 -> m3_22  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_163  [key=2, style=dotted];
m3_157 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_157 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_22  [key=2, style=dotted];
m3_158 -> m3_48  [key=2, style=dotted];
m3_158 -> m3_164  [key=2, style=dotted];
m3_158 -> m3_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_155 -> m3_157  [key=0, style=solid];
m3_155 -> m3_156  [key=0, style=solid];
m3_156 -> m3_160  [key=0, style=solid];
m3_160 -> m3_151  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_5  [key=2, style=dotted];
m3_25 -> m3_28  [key=2, style=dotted];
m3_25 -> m3_22  [key=2, style=dotted];
m3_25 -> m3_23  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_29  [key=2, style=dotted];
m3_26 -> m3_24  [key=0, style=bold, color=blue];
m3_27 -> m3_24  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_18  [key=3, color=darkorchid, style=bold, label="method methodReturn long FailedCount"];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_18  [key=3, color=darkorchid, style=bold, label="method methodReturn long ProcessingCount"];
m3_32 -> m3_30  [key=0, style=bold, color=blue];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_18  [key=2, style=dotted];
m3_34 -> m3_32  [key=0, style=bold, color=blue];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_5  [key=2, style=dotted];
m3_34 -> m3_28  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_147  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_147  [key=2, style=dotted];
m3_146 -> m3_144  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_8  [key=0, style=bold, color=blue];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=2, style=dotted];
m3_13 -> m3_6  [key=2, style=dotted];
m3_14 -> m3_12  [key=0, style=bold, color=blue];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_38  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.SucceededJobDto> SucceededJobs"];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_38  [key=2, style=dotted];
m3_105 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_106 -> m3_104  [key=0, style=bold, color=blue];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_38  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FailedJobDto> FailedJobs"];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_38  [key=2, style=dotted];
m3_97 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_98 -> m3_96  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_38 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m3_38 -> m3_44  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_5  [key=2, style=dotted];
m3_39 -> m3_42  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_43  [key=2, style=dotted];
m3_40 -> m3_42  [key=2, style=dotted];
m3_41 -> m3_38  [key=0, style=bold, color=blue];
m3_41 -> m3_39  [key=0, style=bold, color=blue];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_82  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_82  [key=2, style=dotted];
m3_81 -> m3_79  [key=0, style=bold, color=blue];
m3_60 -> m3_69  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Common.JobMethod DeserializeJobMethod"];
m3_60 -> m3_66  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_68 -> m3_69  [key=0, style=solid];
m3_66 -> m3_59  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_67 -> m3_70  [key=0, style=solid];
m3_67 -> m3_71  [key=2, style=dotted];
m3_70 -> m3_60  [key=0, style=bold, color=blue];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_18  [key=2, style=dotted];
m3_29 -> m3_27  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_37  [key=2, style=dotted];
m3_35 -> m3_38  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs"];
m3_36 -> m3_33  [key=0, style=bold, color=blue];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_6  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_5  [key=2, style=dotted];
m3_9 -> m3_11  [key=2, style=dotted];
m3_9 -> m3_13  [key=2, style=dotted];
m3_10 -> m3_7  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_14  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_107 -> m3_108  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_237 -> m3_238  [key=0, style=solid];
m3_240 -> m3_241  [key=0, style=solid];
m3_272 -> m3_273  [key=0, style=solid];
m3_275 -> m3_276  [key=0, style=solid];
m3_173 -> m3_22  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_77 -> m3_75  [key=0, style=bold, color=blue];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_78  [key=2, style=dotted];
m3_76 -> m3_43  [key=2, style=dotted];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_271  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_235  [key=2, style=dotted];
m3_233 -> m3_236  [key=2, style=dotted];
m3_101 -> m3_99  [key=0, style=bold, color=blue];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=2, style=dotted];
m3_100 -> m3_103  [key=2, style=dotted];
m3_109 -> m3_107  [key=0, style=bold, color=blue];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_110  [key=2, style=dotted];
m3_108 -> m3_103  [key=2, style=dotted];
m3_129 -> m3_127  [key=0, style=bold, color=blue];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_130  [key=2, style=dotted];
m3_128 -> m3_103  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_169 -> m3_170  [key=0, style=solid];
m3_172 -> m3_173  [key=0, style=solid];
m3_196 -> m3_197  [key=0, style=solid];
m3_199 -> m3_200  [key=0, style=solid];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_205  [key=2, style=dotted];
m3_232 -> m3_233  [key=0, style=solid];
m3_239 -> m3_237  [key=0, style=bold, color=blue];
m3_238 -> m3_239  [key=0, style=solid];
m3_242 -> m3_240  [key=0, style=bold, color=blue];
m3_241 -> m3_242  [key=0, style=solid];
m3_268 -> m3_269  [key=0, style=solid];
m3_274 -> m3_272  [key=0, style=bold, color=blue];
m3_273 -> m3_274  [key=0, style=solid];
m3_277 -> m3_275  [key=0, style=bold, color=blue];
m3_276 -> m3_277  [key=0, style=solid];
m3_174 -> m3_172  [key=0, style=bold, color=blue];
m3_265 -> m3_266  [key=0, style=solid];
m3_270 -> m3_268  [key=0, style=bold, color=blue];
m3_234 -> m3_232  [key=0, style=bold, color=blue];
m3_168 -> m3_166  [key=0, style=bold, color=blue];
m3_167 -> m3_168  [key=0, style=solid];
m3_171 -> m3_169  [key=0, style=bold, color=blue];
m3_170 -> m3_171  [key=0, style=solid];
m3_198 -> m3_196  [key=0, style=bold, color=blue];
m3_197 -> m3_198  [key=0, style=solid];
m3_201 -> m3_199  [key=0, style=bold, color=blue];
m3_200 -> m3_201  [key=0, style=solid];
m3_204 -> m3_202  [key=0, style=bold, color=blue];
m3_266 -> m3_235  [key=2, style=dotted];
m3_266 -> m3_267  [key=0, style=solid];
m3_267 -> m3_265  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_6  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_7  [key=2, style=dotted];
m3_3 -> m3_5  [key=2, style=dotted];
m3_3 -> m3_6  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_2  [key=0, style=bold, color=blue];
m3_37 -> m3_35  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_18  [key=3, color=darkorchid, style=bold, label="method methodReturn long ScheduledCount"];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_22  [key=2, style=dotted];
m3_45 -> m3_48  [key=2, style=dotted];
m3_45 -> m3_5  [key=2, style=dotted];
m3_45 -> m3_42  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_49  [key=2, style=dotted];
m3_46 -> m3_43  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_44  [key=3, color=darkorchid, style=bold, label="Local variable string jobsSql"];
m3_44 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_47 -> m3_38  [key=0, style=bold, color=blue];
m3_47 -> m3_44  [key=0, style=bold, color=blue];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_38  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ScheduleDto> ScheduledJobs"];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_38  [key=2, style=dotted];
m3_73 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_74 -> m3_72  [key=0, style=bold, color=blue];
m3_122 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_122 -> m3_123  [key=0, style=solid];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_22  [key=2, style=dotted];
m3_124 -> m3_48  [key=2, style=dotted];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_49  [key=2, style=dotted];
m3_125 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_123  [key=3, color=darkorchid, style=bold, label="Local variable string enqueuedJobsSql"];
m3_126 -> m3_122  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=2, style=dotted];
m3_20 -> m3_23  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_5  [key=2, style=dotted];
m3_21 -> m3_23  [key=2, style=dotted];
m3_21 -> m3_19  [key=0, style=bold, color=blue];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_88  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.ServerDto> Servers"];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_22  [key=2, style=dotted];
m3_87 -> m3_48  [key=2, style=dotted];
m3_87 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=servers];
m3_91 -> m3_64  [key=2, style=dotted];
m3_91 -> m3_89  [key=0, style=solid];
m3_91 -> m3_95  [key=2, style=dotted];
m3_88 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> n580  [key=2, style=dotted];
m3_88 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_89 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=server];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_92  [key=0, style=solid];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_22  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_93 -> m3_86  [key=0, style=bold, color=blue];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_18  [key=3, color=darkorchid, style=bold, label="method methodReturn long SucceededListCount"];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_18  [key=2, style=dotted];
m3_177 -> m3_175  [key=0, style=bold, color=blue];
m3_82 -> m3_80  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m3_82 -> m3_84  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m3_82 -> m3_243  [key=0, style=solid];
m3_82 -> m3_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_82 -> m3_269  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_82 -> m3_256  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m3_252 -> m3_253  [key=0, style=solid];
m3_252 -> m3_228  [key=2, style=dotted];
m3_252 -> m3_163  [key=2, style=dotted];
m3_252 -> m3_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_252 -> m3_275  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_252 -> m3_254  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m3_252 -> m3_255  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m3_252 -> m3_259  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m3_247 -> m3_64  [key=2, style=dotted];
m3_247 -> m3_248  [key=0, style=solid];
m3_250 -> m3_252  [key=1, style=dashed, color=darkseagreen4, label=keys];
m3_250 -> m3_48  [key=2, style=dotted];
m3_250 -> m3_251  [key=0, style=solid];
m3_250 -> m3_164  [key=2, style=dotted];
m3_250 -> m3_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_250 -> m3_253  [key=1, style=dashed, color=darkseagreen4, label=keys];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_214  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m3_253 -> m3_254  [key=0, style=solid];
m3_253 -> m3_256  [key=0, style=solid];
m3_253 -> m3_255  [key=1, style=dashed, color=darkseagreen4, label=key];
m3_254 -> m3_253  [key=0, style=solid];
m3_254 -> m3_255  [key=0, style=solid];
m3_254 -> m3_205  [key=2, style=dotted];
m3_255 -> m3_253  [key=0, style=solid];
m3_255 -> m3_229  [key=2, style=dotted];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_231  [key=2, style=dotted];
m3_243 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_246  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m3_243 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_249  [key=0, style=solid];
m3_245 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=dates];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> n580  [key=2, style=dotted];
m3_245 -> m3_249  [key=1, style=dashed, color=darkseagreen4, label=dates];
m3_245 -> m3_260  [key=1, style=dashed, color=darkseagreen4, label=dates];
m3_248 -> m3_246  [key=0, style=solid];
m3_248 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m3_248 -> m3_264  [key=2, style=dotted];
m3_249 -> m3_48  [key=2, style=dotted];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_164  [key=2, style=dotted];
m3_249 -> m3_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_249 -> m3_258  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m3_256 -> m3_257  [key=0, style=solid];
m3_256 -> m3_230  [key=2, style=dotted];
m3_256 -> m3_260  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_256 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_258 -> m3_259  [key=0, style=solid];
m3_258 -> m3_262  [key=0, style=solid];
m3_258 -> m3_208  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_257 -> m3_259  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_257 -> m3_258  [key=0, style=solid];
m3_257 -> m3_260  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_257 -> m3_261  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_260 -> m3_229  [key=2, style=dotted];
m3_260 -> m3_261  [key=0, style=solid];
m3_244 -> m3_246  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_264  [key=2, style=dotted];
m3_262 -> m3_263  [key=0, style=solid];
m3_261 -> m3_258  [key=0, style=solid];
m3_261 -> m3_261  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_263 -> m3_82  [key=0, style=bold, color=blue];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_22  [key=2, style=dotted];
m3_30 -> m3_23  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_5  [key=2, style=dotted];
m3_31 -> m3_23  [key=2, style=dotted];
m3_31 -> m3_18  [key=0, style=bold, color=blue];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_147  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs"];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_147  [key=2, style=dotted];
m3_150 -> m3_148  [key=0, style=bold, color=blue];
m3_111 -> m3_114  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> Queues"];
m3_111 -> m3_112  [key=0, style=solid];
m3_116 -> m3_115  [key=0, style=solid, color=green];
m3_116 -> m3_120  [key=2, style=dotted, color=green];
m3_116 -> m3_121  [key=2, style=dotted, color=green];
m3_116 -> m3_64  [key=2, style=dotted, color=green];
m3_114 -> m3_116  [key=1, style=dashed, color=green, label=result];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_119  [key=2, style=dotted];
m3_114 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_115 -> m3_116  [key=0, style=solid, color=green];
m3_115 -> m3_117  [key=0, style=solid];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label=queues];
m3_113 -> m3_22  [key=2, style=dotted];
m3_113 -> m3_48  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_112  [key=3, color=darkorchid, style=bold, label="Local variable string queuesAndStatusSql"];
m3_118 -> m3_111  [key=0, style=bold, color=blue];
m3_131 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_131 -> m3_132  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_22  [key=2, style=dotted];
m3_133 -> m3_48  [key=2, style=dotted];
m3_133 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m3_136 -> m3_64  [key=2, style=dotted];
m3_136 -> m3_135  [key=0, style=solid];
m3_136 -> m3_140  [key=2, style=dotted];
m3_136 -> m3_141  [key=2, style=dotted];
m3_136 -> m3_142  [key=2, style=dotted];
m3_136 -> m3_143  [key=2, style=dotted];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_132  [key=3, color=darkorchid, style=bold, label="Local variable string fetchedJobsSql"];
m3_134 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_139  [key=2, style=dotted];
m3_134 -> m3_137  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_137  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_65  [key=2, style=dotted];
m3_138 -> m3_131  [key=0, style=bold, color=blue];
m3_278 -> m3_116  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_176  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_215  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_278 -> m3_252  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m3_281 -> m3_269  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_280 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_279 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m4_48 -> m4_49  [key=0, style=solid];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_41  [key=2, style=dotted];
m4_50 -> m4_48  [key=0, style=bold, color=blue];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_18 -> m4_16  [key=0, style=bold, color=blue];
m4_54 -> m4_55  [key=0, style=solid, color=green];
m4_55 -> m4_56  [key=0, style=solid, color=green];
m4_55 -> m4_57  [key=2, style=dotted, color=green];
m4_55 -> m4_37  [key=2, style=dotted, color=green];
m4_55 -> m4_41  [key=2, style=dotted, color=green];
m4_55 -> m4_55  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m4_56 -> m4_54  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m4_1 -> m4_2  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_7  [key=2, style=dotted];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m4_51 -> m4_52  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_41  [key=2, style=dotted];
m4_53 -> m4_51  [key=0, style=bold, color=blue];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m4_24 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m4_24 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m4_24 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_25  [key=3, color=darkorchid, style=bold, label="Local variable string createJobSql"];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_36  [key=2, style=dotted];
m4_26 -> m4_37  [key=2, style=dotted];
m4_26 -> n18  [key=2, style=dotted];
m4_26 -> m4_39  [key=2, style=dotted];
m4_26 -> m4_40  [key=2, style=dotted];
m4_26 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m4_26 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_34  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m4_28 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=0, style=solid];
m4_31 -> m4_30  [key=0, style=solid];
m4_31 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m4_34 -> m4_35  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m4_29 -> m4_29  [key=3, color=darkorchid, style=bold, label="Local variable int parameterIndex"];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_41  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_32  [key=3, color=darkorchid, style=bold, label="Local variable string insertParameterSql"];
m4_35 -> m4_24  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_46  [key=2, style=dotted];
m4_43 -> m4_47  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_36  [key=2, style=dotted];
m4_44 -> m4_41  [key=2, style=dotted];
m4_45 -> m4_42  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=2, style=dotted];
m4_10 -> m4_8  [key=0, style=bold, color=blue];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_22 -> m4_20  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_12  [key=0, style=bold, color=blue];
m4_58 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlStorageConnection"];
m4_58 -> m4_55  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlStorageConnection"];
}
