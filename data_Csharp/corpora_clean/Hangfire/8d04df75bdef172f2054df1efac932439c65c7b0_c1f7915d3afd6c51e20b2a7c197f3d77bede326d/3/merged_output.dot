digraph  {
n0 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", label="Entry Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
n1 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", label="Exit Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
n2 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", label="Entry Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
n3 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", label="Exit Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
n4 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", label="Entry Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
n5 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", label="Exit Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
m0_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_66 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m0_40 [cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobManager.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m0_14 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="55-55"];
m0_15 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="1: recurringJobId == null", span="57-57"];
m0_16 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="0: throw new ArgumentNullException(nameof(recurringJobId));", span="57-57"];
m0_17 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="1: job == null", span="58-58"];
m0_18 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="0: throw new ArgumentNullException(nameof(job));", span="58-58"];
m0_19 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs", label="cronExpression == null", span="59-59"];
m0_20 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs", label="throw new ArgumentNullException(nameof(cronExpression));", span="59-59"];
m0_21 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs", label="options == null", span="60-60"];
m0_22 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs", label="throw new ArgumentNullException(nameof(options));", span="60-60"];
m0_23 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="0: ValidateCronExpression(cronExpression)", span="62-62"];
m0_26 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="1: var invocationData = InvocationData.Serialize(job)", span="67-67"];
m0_28 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="1: recurringJob[''Cron''] = cronExpression", span="70-70"];
m0_29 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="0: recurringJob[''TimeZoneId''] = options.TimeZone.Id", span="71-71"];
m0_30 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="0: recurringJob[''Queue''] = options.QueueName", span="72-72"];
m0_31 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="1: var existingJob = connection.GetAllEntriesFromHash($''recurring-job:{recurringJobId}'')", span="74-74"];
m0_35 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=1, file="RecurringJobManager.cs", label="2: transaction.SetRangeInHash(\r\n                        $''recurring-job:{recurringJobId}'',\r\n                        recurringJob)", span="82-84"];
m0_36 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="1: transaction.AddToSet(''recurring-jobs'', recurringJobId)", span="86-86"];
m0_24 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="0: var connection = _storage.GetConnection()", span="64-64"];
m0_25 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="2: var recurringJob = new Dictionary<string, string>()", span="66-66"];
m0_34 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="1: var transaction = connection.CreateWriteTransaction()", span="80-80"];
m0_27 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="2: recurringJob[''Job''] = JobHelper.ToJson(invocationData)", span="69-69"];
m0_33 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="0: recurringJob[''CreatedAt''] = JobHelper.SerializeDateTime(DateTime.UtcNow)", span="77-77"];
m0_32 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="1: existingJob == null", span="75-75"];
m0_37 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=green, community=0, file="RecurringJobManager.cs", label="2: transaction.Commit()", span="88-88"];
m0_38 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="55-55"];
m0_67 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobManager.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m0_50 [cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.Trigger(string)", span="93-93"];
m0_51 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: recurringJobId == null", span="95-95"];
m0_52 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="0: throw new ArgumentNullException(nameof(recurringJobId));", span="95-95"];
m0_54 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="0: var hash = connection.GetAllEntriesFromHash($''recurring-job:{recurringJobId}'')", span="99-99"];
m0_62 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="2: context.Parameters[''RecurringJobId''] = recurringJobId", span="114-114"];
m0_53 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: var connection = _storage.GetConnection()", span="97-97"];
m0_61 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="2: var context = new CreateContext(_storage, connection, job, state)", span="113-113"];
m0_55 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="2: hash == null", span="100-100"];
m0_57 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="2: var job = JobHelper.FromJson<InvocationData>(hash[''Job'']).Deserialize()", span="105-105"];
m0_59 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: hash.ContainsKey(''Queue'')", span="108-108"];
m0_60 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="2: state.Queue = hash[''Queue'']", span="110-110"];
m0_56 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: return;", span="102-102"];
m0_58 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="0: var state = new EnqueuedState { Reason = ''Triggered using recurring job manager'' }", span="106-106"];
m0_63 [cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: _factory.Create(context)", span="115-115"];
m0_64 [cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.Trigger(string)", span="93-93"];
m0_71 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.RemoveIfExists(string)", span="119-119"];
m0_72 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: recurringJobId == null", span="121-121"];
m0_73 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=green, community=0, file="RecurringJobManager.cs", label="0: throw new ArgumentNullException(nameof(recurringJobId));", span="121-121"];
m0_76 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=green, community=0, file="RecurringJobManager.cs", label="0: transaction.RemoveHash($''recurring-job:{recurringJobId}'')", span="126-126"];
m0_77 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=green, community=0, file="RecurringJobManager.cs", label="0: transaction.RemoveFromSet(''recurring-jobs'', recurringJobId)", span="127-127"];
m0_74 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=green, community=0, file="RecurringJobManager.cs", label="0: var connection = _storage.GetConnection()", span="123-123"];
m0_75 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: var transaction = connection.CreateWriteTransaction()", span="124-124"];
m0_78 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: transaction.Commit()", span="129-129"];
m0_79 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.RemoveIfExists(string)", span="119-119"];
m0_0 [cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager()", span="36-36"];
m0_1 [cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.RecurringJobManager()", span="36-36"];
m0_89 [cluster="System.ArgumentException.ArgumentException(string, string, System.Exception)", file="RecurringJobManager.cs", label="Entry System.ArgumentException.ArgumentException(string, string, System.Exception)", span="0-0"];
m0_81 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m0_68 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_42 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="69-69"];
m0_69 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobManager.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m0_2 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41"];
m0_3 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41"];
m0_13 [cluster="Unk.nameof", file="RecurringJobManager.cs", label="Entry Unk.nameof", span=""];
m0_46 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m0_48 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="41-41"];
m0_41 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_47 [cluster="Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="51-51"];
m0_45 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobManager.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m0_65 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobManager.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m0_39 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="133-133"];
m0_82 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: var schedule = CrontabSchedule.Parse(cronExpression)", span="137-137"];
m0_85 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", color=green, community=0, file="RecurringJobManager.cs", label="2: throw new ArgumentException(''CRON expression is invalid. Please see the inner exception for details.'', nameof(cronExpression), ex);", span="142-142"];
m0_83 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", color=green, community=0, file="RecurringJobManager.cs", label="2: schedule.GetNextOccurrence(DateTime.UtcNow)", span="138-138"];
m0_84 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", color=green, community=0, file="RecurringJobManager.cs", label="1: Exception", span="140-140"];
m0_86 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="133-133"];
m0_49 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m0_43 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobManager.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m0_4 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", span="46-46"];
m0_5 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs", label="2: storage == null", span="48-48"];
m0_6 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs", label="0: throw new ArgumentNullException(nameof(storage));", span="48-48"];
m0_7 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs", label="1: factory == null", span="49-49"];
m0_8 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs", label="0: throw new ArgumentNullException(nameof(factory));", span="49-49"];
m0_9 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs", label="2: _storage = storage", span="51-51"];
m0_10 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs", label="0: _factory = factory", span="52-52"];
m0_11 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", span="46-46"];
m0_44 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m0_80 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", span="52-52"];
m0_87 [cluster="NCrontab.CrontabSchedule.Parse(string)", file="RecurringJobManager.cs", label="Entry NCrontab.CrontabSchedule.Parse(string)", span="93-93"];
m0_88 [cluster="NCrontab.CrontabSchedule.GetNextOccurrence(System.DateTime)", file="RecurringJobManager.cs", label="Entry NCrontab.CrontabSchedule.GetNextOccurrence(System.DateTime)", span="193-193"];
m0_70 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="RecurringJobManager.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m0_90 [file="RecurringJobManager.cs", label="Hangfire.RecurringJobManager", span=""];
m1_11 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobManagerExtensions.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="25-25"];
m1_42 [cluster="Unk.Same", file="RecurringJobManagerExtensions.cs", label="Entry Unk.Same", span=""];
m1_31 [cluster="lambda expression", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="2: new BackgroundProcessContext(_serverId, _storage.Object, null, _cts.Token)", span="46-46"];
m1_13 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="RecurringJobManagerExtensions.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56"];
m1_25 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="RecurringJobManagerExtensions.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="68-71"];
m1_15 [cluster="lambda expression", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="0: new BackgroundProcessContext(null, _storage.Object, _properties, _cts.Token)", span="28-28"];
m1_23 [cluster="lambda expression", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="1: new BackgroundProcessContext(_serverId, null, _properties, _cts.Token)", span="37-37"];
m1_27 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(_serverId, _storage.Object, null, _cts.Token))", span="45-46"];
m1_24 [cluster="lambda expression", file="RecurringJobManagerExtensions.cs", label="Exit lambda expression", span="37-37"];
m1_26 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="RecurringJobManagerExtensions.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", span="43-43"];
m1_28 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="2: Assert.Equal(''properties'', exception.ParamName)", span="48-48"];
m1_12 [cluster="Unk.>", file="RecurringJobManagerExtensions.cs", label="Entry Unk.>", span=""];
m1_16 [cluster="lambda expression", file="RecurringJobManagerExtensions.cs", label="Exit lambda expression", span="28-28"];
m1_18 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="1: var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="58-58"];
m1_19 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="2: return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="59-59"];
m1_20 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="2: Exit HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56"];
m1_21 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobManagerExtensions.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="34-34"];
m1_17 [cluster="Unk.Execute", file="RecurringJobManagerExtensions.cs", label="Entry Unk.Execute", span=""];
m1_29 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="RecurringJobManagerExtensions.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m1_30 [cluster="lambda expression", file="RecurringJobManagerExtensions.cs", label="Entry lambda expression", span="46-46"];
m1_40 [cluster="Unk.SequenceEqual", file="RecurringJobManagerExtensions.cs", label="Entry Unk.SequenceEqual", span=""];
m1_6 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="1: var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''HangFire.SqlServer.Install.sql'')", span="45-47"];
m1_0 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="RecurringJobManagerExtensions.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m1_1 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="2: connection == null", span="36-36"];
m1_2 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="2: throw new ArgumentNullException(''connection'');", span="36-36"];
m1_3 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="1: Log.Info(''Start installing HangFire SQL objects...'')", span="38-38"];
m1_4 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="2: !IsSqlEditionSupported(connection)", span="40-40"];
m1_7 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="0: script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="49-49"];
m1_14 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="RecurringJobManagerExtensions.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m1_22 [cluster="Unk.Single", file="RecurringJobManagerExtensions.cs", label="Entry Unk.Single", span=""];
m1_32 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="RecurringJobManagerExtensions.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m1_8 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="2: connection.Execute(script)", span="51-51"];
m1_9 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="1: Log.Info(''HangFire SQL objects installed.'')", span="53-53"];
m1_10 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="2: Exit HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m1_33 [cluster="System.IO.StreamReader.ReadToEnd()", file="RecurringJobManagerExtensions.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m1_34 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="1: var context = new BackgroundProcessContext(_serverId, _storage.Object, _properties, _cts.Token)", span="54-54"];
m1_35 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="2: Assert.Equal(_serverId, context.ServerId)", span="56-56"];
m1_36 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="0: Assert.True(_properties.SequenceEqual(context.Properties))", span="57-57"];
m1_37 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="1: Assert.Same(_storage.Object, context.Storage)", span="58-58"];
m1_38 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="2: Assert.Equal(_cts.Token, context.CancellationToken)", span="59-59"];
m1_39 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="RecurringJobManagerExtensions.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="52-52"];
m1_5 [cluster="Mock<JobStorage>.cstr", color=green, community=0, file="RecurringJobManagerExtensions.cs", label="1: Entry Mock<JobStorage>.cstr", span=""];
m1_41 [cluster="Unk.True", file="RecurringJobManagerExtensions.cs", label="Entry Unk.True", span=""];
m1_43 [file="RecurringJobManagerExtensions.cs", label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", span=""];
m2_21 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerDistributedLock.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_26 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="228-228"];
m2_28 [cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="241-241"];
m2_71 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22"];
m2_47 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="120-120"];
m2_48 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="SqlServerDistributedLock.cs", label=_lockObject, span="122-122"];
m2_49 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="SqlServerDistributedLock.cs", label="_connection?.Execute(''SELECT 1;'')", span="126-126"];
m2_50 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="120-120"];
m2_46 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="173-173"];
m2_73 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="var parameters = new DynamicParameters()", span="175-175"];
m2_74 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Resource'', resource)", span="176-176"];
m2_77 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="180-183"];
m2_80 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="throw new SqlServerDistributedLockException(\r\n                    $''Could not release a lock on the resource '{resource}': Server returned the '{releaseResult}' error.'');", span="189-190"];
m2_79 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="releaseResult < 0", span="187-187"];
m2_75 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="177-177"];
m2_76 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="178-178"];
m2_78 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="var releaseResult = parameters.Get<int>(''@Result'')", span="185-185"];
m2_81 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="173-173"];
m2_25 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerDistributedLock.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_69 [cluster="Unk.>", file="SqlServerDistributedLock.cs", label="Entry Unk.>", span=""];
m2_30 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="87-87"];
m2_31 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label=_completed, span="89-89"];
m2_33 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="_completed = true", span="91-91"];
m2_34 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="!AcquiredLocks.Value.ContainsKey(_resource)", span="93-93"];
m2_36 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value[_resource]--", span="95-95"];
m2_37 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value[_resource] != 0", span="97-97"];
m2_39 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label=_lockObject, span="99-99"];
m2_40 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value.Remove(_resource)", span="106-106"];
m2_41 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="_timer?.Dispose()", span="108-108"];
m2_42 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="Release(_connection, _resource)", span="110-110"];
m2_32 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="return;", span="89-89"];
m2_35 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="return;", span="93-93"];
m2_38 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="return;", span="97-97"];
m2_43 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="87-87"];
m2_22 [cluster="Unk.nameof", file="SqlServerDistributedLock.cs", label="Entry Unk.nameof", span=""];
m2_67 [cluster="DynamicParameters.cstr", file="SqlServerDistributedLock.cs", label="Entry DynamicParameters.cstr", span=""];
m2_68 [cluster="Unk.Add", file="SqlServerDistributedLock.cs", label="Entry Unk.Add", span=""];
m2_4 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="58-58"];
m2_11 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs", label="1: _storage = storage", span="65-65"];
m2_9 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="timeout.TotalSeconds + CommandTimeoutAdditionSeconds > Int32.MaxValue", span="62-62"];
m2_12 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs", label="2: _resource = resource", span="66-66"];
m2_13 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="!AcquiredLocks.Value.ContainsKey(_resource) || AcquiredLocks.Value[_resource] == 0", span="68-68"];
m2_14 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="_connection = storage.CreateAndOpenConnection()", span="70-70"];
m2_15 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Acquire(_connection, _resource, timeout)", span="72-72"];
m2_16 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="!_storage.IsExistingConnection(_connection)", span="74-74"];
m2_17 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="_timer = new Timer(ExecuteKeepAliveQuery, null, KeepAliveInterval, KeepAliveInterval)", span="76-76"];
m2_18 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value[_resource] = 1", span="79-79"];
m2_19 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value[_resource]++", span="83-83"];
m2_5 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="storage == null", span="60-60"];
m2_6 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="throw new ArgumentNullException(nameof(storage));", span="60-60"];
m2_7 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="String.IsNullOrEmpty(resource)", span="61-61"];
m2_8 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="throw new ArgumentNullException(nameof(resource));", span="61-61"];
m2_10 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="throw new ArgumentException(\r\n                $''The timeout specified is too large. Please supply a timeout equal to or less than {Int32.MaxValue - CommandTimeoutAdditionSeconds} seconds'', nameof(timeout));", span="62-63"];
m2_20 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="58-58"];
m2_29 [cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0"];
m2_23 [cluster="string.IsNullOrEmpty(string)", file="SqlServerDistributedLock.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_27 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="140-140"];
m2_52 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="var parameters = new DynamicParameters()", span="142-142"];
m2_53 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Resource'', resource)", span="143-143"];
m2_57 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockTimeout'', (int)timeout.TotalMilliseconds)", span="147-147"];
m2_60 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="connection.Execute(\r\n                @''sp_getapplock'',\r\n                parameters,\r\n                commandTimeout: commandTimeout,\r\n                commandType: CommandType.StoredProcedure)", span="153-157"];
m2_64 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="throw new DistributedLockTimeoutException(resource);", span="165-165"];
m2_65 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="throw new SqlServerDistributedLockException(\r\n                    $''Could not place a lock on the resource '{resource}': {(LockErrorMessages.ContainsKey(lockResult) ? LockErrorMessages[lockResult] : $''Server returned the '{lockResult}' error.'')}.'');", span="168-169"];
m2_62 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="lockResult < 0", span="161-161"];
m2_54 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@DbPrincipal'', ''public'')", span="144-144"];
m2_55 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockMode'', LockMode)", span="145-145"];
m2_56 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="146-146"];
m2_58 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="148-148"];
m2_61 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="var lockResult = parameters.Get<int>(''@Result'')", span="159-159"];
m2_59 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="var commandTimeout = (int)(timeout.TotalSeconds + CommandTimeoutAdditionSeconds)", span="151-151"];
m2_63 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="lockResult == -1", span="163-163"];
m2_66 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="140-140"];
m2_70 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m2_45 [cluster="System.Threading.Timer.Dispose()", file="SqlServerDistributedLock.cs", label="Entry System.Threading.Timer.Dispose()", span="0-0"];
m2_24 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerDistributedLock.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m2_51 [cluster="Unk.Execute", file="SqlServerDistributedLock.cs", label="Entry Unk.Execute", span=""];
m2_44 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="SqlServerDistributedLock.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m2_72 [cluster="Unk.ContainsKey", file="SqlServerDistributedLock.cs", label="Entry Unk.ContainsKey", span=""];
m2_82 [file="SqlServerDistributedLock.cs", label="Hangfire.SqlServer.SqlServerDistributedLock", span=""];
m3_61 [cluster="System.Threading.Thread.Join()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m3_13 [cluster="Unk.UseConnection", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.UseConnection", span=""];
m3_98 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerDistributedLockFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_58 [cluster="System.Threading.Thread.Start()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m3_25 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="42-42"];
m3_26 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", color=green, community=2, file="SqlServerDistributedLockFacts.cs", label="2: UseConnection(connection =>\r\n            {\r\n                var storage = CreateStorage(connection);\r\n\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(storage, '''', _timeout));\r\n\r\n                Assert.Equal(''resource'', exception.ParamName);\r\n            })", span="44-52"];
m3_27 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="42-42"];
m3_5 [cluster="Unk.Equal", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.Equal", span=""];
m3_109 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="SqlServerDistributedLockFacts.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m3_111 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="SqlServerDistributedLockFacts.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m3_20 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(DbConnection)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(DbConnection)", span="156-156"];
m3_113 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(DbConnection)", file="SqlServerDistributedLockFacts.cs", label="return new SqlServerStorage(connection);", span="158-158"];
m3_114 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(DbConnection)", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(DbConnection)", span="156-156"];
m3_60 [cluster="System.Threading.ManualResetEventSlim.Set()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m3_119 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m3_4 [cluster="Unk.>", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.>", span=""];
m3_79 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", span="109-109"];
m3_80 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="SqlServerDistributedLockFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var storage = CreateStorage(sql);\r\n                var distributedLock = new SqlServerDistributedLock(storage, ''hello'', _timeout);\r\n                distributedLock.Dispose();\r\n\r\n                var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                Assert.Equal(''NoLock'', lockMode);\r\n            })", span="111-121"];
m3_81 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", span="109-109"];
m3_89 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="87-87"];
m3_65 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<DbConnection>)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<DbConnection>)", span="161-161"];
m3_116 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<DbConnection>)", file="SqlServerDistributedLockFacts.cs", label="var connection = ConnectionUtils.CreateConnection()", span="163-163"];
m3_117 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<DbConnection>)", file="SqlServerDistributedLockFacts.cs", label="action(connection)", span="165-165"];
m3_118 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<DbConnection>)", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<DbConnection>)", span="161-161"];
m3_21 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerDistributedLockFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m3_96 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="43-43"];
m3_36 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="56-56"];
m3_37 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerDistributedLockFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                // ReSharper disable once UnusedVariable\r\n                var storage = CreateStorage(sql);\r\n                using (new SqlServerDistributedLock(storage, ''hello'', _timeout))\r\n                {\r\n                    var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                    Assert.Equal(''Exclusive'', lockMode);\r\n                }\r\n            })", span="58-69"];
m3_38 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="56-56"];
m3_9 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="58-58"];
m3_110 [cluster="Unk.NotNull", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.NotNull", span=""];
m3_59 [cluster="System.Threading.ManualResetEventSlim.Wait()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.ManualResetEventSlim.Wait()", span="0-0"];
m3_112 [cluster="Unk.Null", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.Null", span=""];
m3_56 [cluster="System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", span="0-0"];
m3_22 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="35-35"];
m3_28 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="44-52"];
m3_29 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="2: var storage = CreateStorage(connection)", span="46-46"];
m3_30 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(storage, '''', _timeout))", span="48-49"];
m3_34 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="1: new SqlServerDistributedLock(storage, '''', _timeout)", span="49-49"];
m3_31 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="2: Assert.Equal(''resource'', exception.ParamName)", span="51-51"];
m3_33 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="49-49"];
m3_35 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="49-49"];
m3_32 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="44-52"];
m3_7 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="new SqlServerDistributedLock(null, ''hello'', _timeout)", span="23-23"];
m3_41 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="new SqlServerDistributedLock(storage, ''hello'', _timeout)", span="62-62"];
m3_63 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="UseConnection(connection1 =>\r\n                {\r\n                    var storage = CreateStorage(connection1);\r\n                    using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                })", span="79-87"];
m3_68 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="new SqlServerDistributedLock(storage, ''exclusive'', _timeout)", span="82-82"];
m3_74 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Assert.Throws<DistributedLockTimeoutException>(\r\n                    () =>\r\n                    {\r\n                        using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                        {\r\n                        }\r\n                    })", span="95-101"];
m3_77 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="new SqlServerDistributedLock(storage, ''exclusive'', _timeout)", span="98-98"];
m3_84 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var distributedLock = new SqlServerDistributedLock(storage, ''hello'', _timeout)", span="114-114"];
m3_15 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var storage = CreateStorage(connection)", span="33-33"];
m3_40 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var storage = CreateStorage(sql)", span="61-61"];
m3_67 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var storage = CreateStorage(connection1)", span="81-81"];
m3_73 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var storage = CreateStorage(connection2)", span="94-94"];
m3_83 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var storage = CreateStorage(sql)", span="113-113"];
m3_17 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var exception = Assert.Throws<ArgumentException>(() => new SqlServerDistributedLock(storage, ''hello'', tooLargeTimeout))", span="35-35"];
m3_42 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'hello', 'session')'').Single()", span="64-65"];
m3_86 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single()", span="117-118"];
m3_23 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="new SqlServerDistributedLock(storage, ''hello'', tooLargeTimeout)", span="35-35"];
m3_18 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Assert.Equal(''timeout'', exception.ParamName)", span="37-37"];
m3_43 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Assert.Equal(''Exclusive'', lockMode)", span="67-67"];
m3_87 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Assert.Equal(''NoLock'', lockMode)", span="120-120"];
m3_6 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="23-23"];
m3_8 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="23-23"];
m3_14 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="31-38"];
m3_39 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="58-69"];
m3_62 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="79-87"];
m3_64 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="79-87"];
m3_66 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="79-87"];
m3_69 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="lockAcquired.Set()", span="84-84"];
m3_72 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="92-102"];
m3_75 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="92-102"];
m3_76 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="96-101"];
m3_78 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="96-101"];
m3_82 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="111-121"];
m3_85 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="distributedLock.Dispose()", span="115-115"];
m3_16 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="var tooLargeTimeout = TimeSpan.FromSeconds(Int32.MaxValue)", span="34-34"];
m3_24 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="35-35"];
m3_19 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="31-38"];
m3_44 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="58-69"];
m3_88 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="111-121"];
m3_70 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="releaseLock.Wait()", span="85-85"];
m3_71 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="79-87"];
m3_90 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", span="125-125"];
m3_92 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="SqlServerDistributedLockFacts.cs", label="new SqlServerDistributedLock(storage, ''hello'', TimeSpan.FromMinutes(5))", span="129-129"];
m3_93 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="SqlServerDistributedLockFacts.cs", label="new SqlServerDistributedLock(storage, ''hello'', TimeSpan.FromMinutes(5))", span="130-130"];
m3_91 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="SqlServerDistributedLockFacts.cs", label="var storage = new SqlServerStorage(ConnectionUtils.GetConnectionString())", span="127-127"];
m3_94 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="SqlServerDistributedLockFacts.cs", label="Assert.True(true)", span="132-132"];
m3_95 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", span="125-125"];
m3_10 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", span="29-29"];
m3_11 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", file="SqlServerDistributedLockFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var storage = CreateStorage(connection);\r\n                var tooLargeTimeout = TimeSpan.FromSeconds(Int32.MaxValue);\r\n                var exception = Assert.Throws<ArgumentException>(() => new SqlServerDistributedLock(storage, ''hello'', tooLargeTimeout));\r\n\r\n                Assert.Equal(''timeout'', exception.ParamName);\r\n            })", span="31-38"];
m3_12 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", span="29-29"];
m3_45 [cluster="Unk.Single", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.Single", span=""];
m3_97 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m3_100 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", span="137-137"];
m3_102 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", file="SqlServerDistributedLockFacts.cs", label="var outer = new SqlServerDistributedLock(storage, ''hello'', TimeSpan.FromMinutes(5))", span="143-143"];
m3_103 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", file="SqlServerDistributedLockFacts.cs", label="var inner = new SqlServerDistributedLock(storage, ''hello'', TimeSpan.FromMinutes(5))", span="144-144"];
m3_101 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", file="SqlServerDistributedLockFacts.cs", label="var storage = new SqlServerStorage(ConnectionUtils.GetConnectionString())", span="140-140"];
m3_106 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", file="SqlServerDistributedLockFacts.cs", label="Assert.NotNull(field.GetValue(outer))", span="151-151"];
m3_104 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", file="SqlServerDistributedLockFacts.cs", label="var field = typeof(SqlServerDistributedLock).GetField(''_connection'',\r\n                    BindingFlags.Instance | BindingFlags.NonPublic)", span="147-148"];
m3_107 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", file="SqlServerDistributedLockFacts.cs", label="Assert.Null(field.GetValue(inner))", span="152-152"];
m3_105 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", file="SqlServerDistributedLockFacts.cs", label="Assert.NotNull(field)", span="149-149"];
m3_108 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.InnerDistributedLock_DoesNotConsumeADatabaseConnection()", span="137-137"];
m3_0 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="20-20"];
m3_1 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerDistributedLockFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(null, ''hello'', _timeout))", span="22-23"];
m3_2 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerDistributedLockFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="25-25"];
m3_3 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="20-20"];
m3_99 [cluster="Unk.True", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.True", span=""];
m3_120 [cluster="Unk.action", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.action", span=""];
m3_46 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="73-73"];
m3_49 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="var thread = new Thread(\r\n                () => UseConnection(connection1 =>\r\n                {\r\n                    var storage = CreateStorage(connection1);\r\n                    using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                }))", span="78-87"];
m3_52 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="UseConnection(connection2 =>\r\n            {\r\n                var storage = CreateStorage(connection2);\r\n                Assert.Throws<DistributedLockTimeoutException>(\r\n                    () =>\r\n                    {\r\n                        using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                        {\r\n                        }\r\n                    });\r\n            })", span="92-102"];
m3_47 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="var releaseLock = new ManualResetEventSlim(false)", span="75-75"];
m3_48 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="var lockAcquired = new ManualResetEventSlim(false)", span="76-76"];
m3_50 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="thread.Start()", span="88-88"];
m3_54 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="thread.Join()", span="105-105"];
m3_51 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="lockAcquired.Wait()", span="90-90"];
m3_53 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="releaseLock.Set()", span="104-104"];
m3_55 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="73-73"];
m3_57 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m3_115 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection)", span="85-85"];
m3_121 [file="SqlServerDistributedLockFacts.cs", label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", span=""];
m3_124 [file="SqlServerDistributedLockFacts.cs", label=storage, span=""];
m3_125 [file="SqlServerDistributedLockFacts.cs", label=releaseLock, span=""];
m3_126 [file="SqlServerDistributedLockFacts.cs", label=lockAcquired, span=""];
m3_127 [file="SqlServerDistributedLockFacts.cs", label=storage, span=""];
m3_122 [file="SqlServerDistributedLockFacts.cs", label=storage, span=""];
m3_123 [file="SqlServerDistributedLockFacts.cs", label=tooLargeTimeout, span=""];
m4_31 [cluster="Unk.NotNull", file="TypeExtensions.cs", label="Entry Unk.NotNull", span=""];
m4_24 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="TypeExtensions.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="39-39"];
m4_25 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=green, community=0, file="TypeExtensions.cs", label="0: var context = new BackgroundProcessContext(_serverId, _storage.Object, _cts.Token)", span="41-41"];
m4_26 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=green, community=0, file="TypeExtensions.cs", label="2: Assert.Equal(_serverId, context.ServerId)", span="43-43"];
m4_27 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=green, community=0, file="TypeExtensions.cs", label="1: Assert.NotNull(context.Properties)", span="44-44"];
m4_28 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="TypeExtensions.cs", label="Assert.Same(_storage.Object, context.Storage)", span="45-45"];
m4_29 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=green, community=0, file="TypeExtensions.cs", label="1: Assert.Equal(_cts.Token, context.CancellationToken)", span="46-46"];
m4_30 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="TypeExtensions.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="39-39"];
m4_10 [cluster="Unk.>", file="TypeExtensions.cs", label="Entry Unk.>", span=""];
m4_16 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="TypeExtensions.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
m4_17 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="TypeExtensions.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(_serverId, null, _cts.Token))", span="32-33"];
m4_18 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="TypeExtensions.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="35-35"];
m4_19 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="TypeExtensions.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
m4_23 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="TypeExtensions.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m4_32 [cluster="Unk.Same", file="TypeExtensions.cs", label="Entry Unk.Same", span=""];
m4_0 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="TypeExtensions.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="14-14"];
m4_1 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", color=green, community=0, file="TypeExtensions.cs", label="1: _storage = new Mock<JobStorage>()", span="16-16"];
m4_2 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", color=green, community=0, file="TypeExtensions.cs", label="0: _cts = new CancellationTokenSource()", span="17-17"];
m4_3 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="TypeExtensions.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="14-14"];
m4_15 [cluster="BackgroundProcessContext.cstr", file="TypeExtensions.cs", label="Entry BackgroundProcessContext.cstr", span=""];
m4_11 [cluster="Unk.Equal", file="TypeExtensions.cs", label="Entry Unk.Equal", span=""];
m4_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="TypeExtensions.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m4_4 [cluster="Mock<JobStorage>.cstr", file="TypeExtensions.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m4_20 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="33-33"];
m4_12 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="24-24"];
m4_13 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="2: new BackgroundProcessContext(null, _storage.Object, _cts.Token)", span="24-24"];
m4_14 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="24-24"];
m4_21 [cluster="lambda expression", file="TypeExtensions.cs", label="new BackgroundProcessContext(_serverId, null, _cts.Token)", span="33-33"];
m4_22 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="33-33"];
m4_6 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="TypeExtensions.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="21-21"];
m4_7 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="TypeExtensions.cs", label="2: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(null, _storage.Object, _cts.Token))", span="23-24"];
m4_8 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="TypeExtensions.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="26-26"];
m4_9 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="TypeExtensions.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="21-21"];
m4_33 [file="TypeExtensions.cs", label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_14 -> m0_16  [color=green, key=1, label=string, style=dashed];
m0_14 -> m0_17  [color=green, key=1, label="Hangfire.Common.Job", style=dashed];
m0_14 -> m0_18  [color=green, key=1, label="Hangfire.Common.Job", style=dashed];
m0_14 -> m0_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_14 -> m0_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_14 -> m0_21  [color=darkseagreen4, key=1, label="Hangfire.RecurringJobOptions", style=dashed];
m0_14 -> m0_22  [color=darkseagreen4, key=1, label="Hangfire.RecurringJobOptions", style=dashed];
m0_14 -> m0_23  [color=green, key=1, label=string, style=dashed];
m0_14 -> m0_26  [color=green, key=1, label="Hangfire.Common.Job", style=dashed];
m0_14 -> m0_28  [color=green, key=1, label=string, style=dashed];
m0_14 -> m0_29  [color=green, key=1, label="Hangfire.RecurringJobOptions", style=dashed];
m0_14 -> m0_30  [color=green, key=1, label="Hangfire.RecurringJobOptions", style=dashed];
m0_14 -> m0_31  [color=green, key=1, label=string, style=dashed];
m0_14 -> m0_35  [color=green, key=1, label=string, style=dashed];
m0_14 -> m0_36  [color=green, key=1, label=string, style=dashed];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_15 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_38  [color=green, key=0, style=solid];
m0_16 -> m0_12  [color=green, key=2, style=dotted];
m0_16 -> m0_13  [color=green, key=2, style=dotted];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_17 -> m0_19  [color=green, key=0, style=solid];
m0_18 -> m0_38  [color=green, key=0, style=solid];
m0_18 -> m0_12  [color=green, key=2, style=dotted];
m0_18 -> m0_13  [color=green, key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_20 -> m0_38  [key=0, style=solid];
m0_20 -> m0_12  [key=2, style=dotted];
m0_20 -> m0_13  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [color=green, key=0, style=solid];
m0_22 -> m0_38  [key=0, style=solid];
m0_22 -> m0_12  [key=2, style=dotted];
m0_22 -> m0_13  [key=2, style=dotted];
m0_23 -> m0_24  [color=green, key=0, style=solid];
m0_23 -> m0_39  [color=green, key=2, style=dotted];
m0_26 -> m0_27  [color=green, key=0, style=solid];
m0_26 -> m0_42  [color=green, key=2, style=dotted];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_29 -> m0_30  [color=green, key=0, style=solid];
m0_30 -> m0_31  [color=green, key=0, style=solid];
m0_31 -> m0_32  [color=green, key=0, style=solid];
m0_31 -> m0_44  [color=green, key=2, style=dotted];
m0_35 -> m0_36  [color=green, key=0, style=solid];
m0_35 -> m0_47  [color=green, key=2, style=dotted];
m0_36 -> m0_37  [color=green, key=0, style=solid];
m0_36 -> m0_48  [color=green, key=2, style=dotted];
m0_24 -> m0_25  [color=green, key=0, style=solid];
m0_24 -> m0_40  [color=green, key=2, style=dotted];
m0_24 -> m0_31  [color=green, key=1, label=connection, style=dashed];
m0_24 -> m0_34  [color=green, key=1, label=connection, style=dashed];
m0_25 -> m0_26  [color=green, key=0, style=solid];
m0_25 -> m0_41  [color=green, key=2, style=dotted];
m0_25 -> m0_27  [color=green, key=1, label=recurringJob, style=dashed];
m0_25 -> m0_28  [color=green, key=1, label=recurringJob, style=dashed];
m0_25 -> m0_29  [color=green, key=1, label=recurringJob, style=dashed];
m0_25 -> m0_30  [color=green, key=1, label=recurringJob, style=dashed];
m0_25 -> m0_33  [color=green, key=1, label=recurringJob, style=dashed];
m0_25 -> m0_35  [color=green, key=1, label=recurringJob, style=dashed];
m0_34 -> m0_35  [color=green, key=0, style=solid];
m0_34 -> m0_46  [color=green, key=2, style=dotted];
m0_34 -> m0_36  [color=green, key=1, label=transaction, style=dashed];
m0_34 -> m0_37  [color=green, key=1, label=transaction, style=dashed];
m0_27 -> m0_28  [color=green, key=0, style=solid];
m0_27 -> m0_43  [color=green, key=2, style=dotted];
m0_33 -> m0_34  [color=green, key=0, style=solid];
m0_33 -> m0_45  [color=green, key=2, style=dotted];
m0_32 -> m0_33  [color=green, key=0, style=solid];
m0_32 -> m0_34  [color=green, key=0, style=solid];
m0_37 -> m0_38  [color=green, key=0, style=solid];
m0_37 -> m0_49  [color=green, key=2, style=dotted];
m0_38 -> m0_14  [color=blue, key=0, style=bold];
m0_50 -> m0_51  [color=green, key=0, style=solid];
m0_50 -> m0_52  [color=green, key=1, label=string, style=dashed];
m0_50 -> m0_54  [color=green, key=1, label=string, style=dashed];
m0_50 -> m0_62  [color=green, key=1, label=string, style=dashed];
m0_51 -> m0_52  [color=green, key=0, style=solid];
m0_51 -> m0_53  [color=green, key=0, style=solid];
m0_52 -> m0_64  [color=green, key=0, style=solid];
m0_52 -> m0_12  [color=green, key=2, style=dotted];
m0_52 -> m0_13  [color=green, key=2, style=dotted];
m0_54 -> m0_55  [color=green, key=0, style=solid];
m0_54 -> m0_44  [color=green, key=2, style=dotted];
m0_54 -> m0_57  [color=green, key=1, label=hash, style=dashed];
m0_54 -> m0_59  [color=green, key=1, label=hash, style=dashed];
m0_54 -> m0_60  [color=green, key=1, label=hash, style=dashed];
m0_62 -> m0_63  [color=green, key=0, style=solid];
m0_53 -> m0_54  [color=green, key=0, style=solid];
m0_53 -> m0_40  [color=green, key=2, style=dotted];
m0_53 -> m0_61  [color=green, key=1, label=connection, style=dashed];
m0_61 -> m0_62  [color=green, key=0, style=solid];
m0_61 -> m0_69  [color=green, key=2, style=dotted];
m0_61 -> m0_63  [color=green, key=1, label=context, style=dashed];
m0_55 -> m0_56  [color=green, key=0, style=solid];
m0_55 -> m0_57  [color=green, key=0, style=solid];
m0_57 -> m0_58  [color=green, key=0, style=solid];
m0_57 -> m0_65  [color=green, key=2, style=dotted];
m0_57 -> m0_66  [color=green, key=2, style=dotted];
m0_57 -> m0_61  [color=green, key=1, label=job, style=dashed];
m0_59 -> m0_60  [color=green, key=0, style=solid];
m0_59 -> m0_61  [color=green, key=0, style=solid];
m0_59 -> m0_68  [color=green, key=2, style=dotted];
m0_60 -> m0_61  [color=green, key=0, style=solid];
m0_56 -> m0_64  [color=green, key=0, style=solid];
m0_58 -> m0_59  [color=green, key=0, style=solid];
m0_58 -> m0_67  [color=green, key=2, style=dotted];
m0_58 -> m0_60  [color=green, key=1, label=state, style=dashed];
m0_58 -> m0_61  [color=green, key=1, label=state, style=dashed];
m0_63 -> m0_64  [color=green, key=0, style=solid];
m0_63 -> m0_70  [color=green, key=2, style=dotted];
m0_64 -> m0_50  [color=blue, key=0, style=bold];
m0_71 -> m0_72  [color=green, key=0, style=solid];
m0_71 -> m0_73  [color=green, key=1, label=string, style=dashed];
m0_71 -> m0_76  [color=green, key=1, label=string, style=dashed];
m0_71 -> m0_77  [color=green, key=1, label=string, style=dashed];
m0_72 -> m0_73  [color=green, key=0, style=solid];
m0_72 -> m0_74  [color=green, key=0, style=solid];
m0_73 -> m0_79  [color=green, key=0, style=solid];
m0_73 -> m0_12  [color=green, key=2, style=dotted];
m0_73 -> m0_13  [color=green, key=2, style=dotted];
m0_76 -> m0_77  [color=green, key=0, style=solid];
m0_76 -> m0_80  [color=green, key=2, style=dotted];
m0_77 -> m0_78  [color=green, key=0, style=solid];
m0_77 -> m0_81  [color=green, key=2, style=dotted];
m0_74 -> m0_75  [color=green, key=0, style=solid];
m0_74 -> m0_40  [color=green, key=2, style=dotted];
m0_75 -> m0_76  [color=green, key=0, style=solid];
m0_75 -> m0_46  [color=green, key=2, style=dotted];
m0_75 -> m0_77  [color=green, key=1, label=transaction, style=dashed];
m0_75 -> m0_78  [color=green, key=1, label=transaction, style=dashed];
m0_78 -> m0_79  [color=green, key=0, style=solid];
m0_78 -> m0_49  [color=green, key=2, style=dotted];
m0_79 -> m0_71  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_39 -> m0_82  [color=green, key=0, style=solid];
m0_39 -> m0_85  [color=green, key=1, label=string, style=dashed];
m0_39 -> m0_14  [color=darkorchid, key=3, label="Parameter variable string cronExpression", style=bold];
m0_82 -> m0_83  [color=green, key=0, style=solid];
m0_82 -> m0_87  [color=green, key=2, style=dotted];
m0_85 -> m0_86  [color=green, key=0, style=solid];
m0_85 -> m0_89  [color=green, key=2, style=dotted];
m0_85 -> m0_13  [color=green, key=2, style=dotted];
m0_83 -> m0_84  [color=green, key=0, style=solid];
m0_83 -> m0_86  [color=green, key=0, style=solid];
m0_83 -> m0_88  [color=green, key=2, style=dotted];
m0_84 -> m0_85  [color=green, key=0, style=solid];
m0_86 -> m0_39  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_6  [color=green, key=1, label="Hangfire.JobStorage", style=dashed];
m0_4 -> m0_7  [color=green, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m0_4 -> m0_8  [color=green, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m0_4 -> m0_9  [color=green, key=1, label="Hangfire.JobStorage", style=dashed];
m0_4 -> m0_10  [color=green, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_11  [color=green, key=0, style=solid];
m0_6 -> m0_12  [color=green, key=2, style=dotted];
m0_6 -> m0_13  [color=green, key=2, style=dotted];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_11  [color=green, key=0, style=solid];
m0_8 -> m0_12  [color=green, key=2, style=dotted];
m0_8 -> m0_13  [color=green, key=2, style=dotted];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_11 -> m0_4  [color=blue, key=0, style=bold];
m0_90 -> m0_9  [color=green, key=1, label="Hangfire.RecurringJobManager", style=dashed];
m0_90 -> m0_10  [color=green, key=1, label="Hangfire.RecurringJobManager", style=dashed];
m0_90 -> m0_24  [color=green, key=1, label="Hangfire.RecurringJobManager", style=dashed];
m0_90 -> m0_53  [color=green, key=1, label="Hangfire.RecurringJobManager", style=dashed];
m0_90 -> m0_61  [color=green, key=1, label="Hangfire.RecurringJobManager", style=dashed];
m0_90 -> m0_63  [color=green, key=1, label="Hangfire.RecurringJobManager", style=dashed];
m0_90 -> m0_74  [color=green, key=1, label="Hangfire.RecurringJobManager", style=dashed];
m1_11 -> m1_8  [color=blue, key=0, style=bold];
m1_31 -> m1_32  [color=red, key=0, style=solid];
m1_31 -> m1_17  [color=red, key=2, style=dotted];
m1_13 -> m1_18  [color=green, key=0, style=solid];
m1_25 -> m1_28  [key=0, style=solid];
m1_25 -> m1_30  [key=2, style=dotted];
m1_25 -> m1_31  [key=2, style=dotted];
m1_15 -> m1_23  [key=0, style=solid];
m1_15 -> m1_25  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m1_15 -> m1_16  [color=red, key=0, style=solid];
m1_15 -> m1_17  [color=red, key=2, style=dotted];
m1_23 -> m1_24  [color=red, key=0, style=solid];
m1_23 -> m1_29  [key=2, style=dotted];
m1_23 -> m1_26  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_23 -> m1_25  [color=red, key=2, style=dotted];
m1_27 -> m1_28  [color=red, key=0, style=solid];
m1_27 -> m1_33  [key=2, style=dotted];
m1_27 -> m1_12  [color=red, key=2, style=dotted];
m1_27 -> m1_30  [color=red, key=1, label="lambda expression", style=dashed];
m1_27 -> m1_19  [color=red, key=3, label="Parameter variable string recurringJobId", style=bold];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=0, style=solid];
m1_24 -> m1_22  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [color=red, key=0, style=solid];
m1_26 -> m1_32  [key=2, style=dotted];
m1_28 -> m1_15  [color=blue, key=0, style=bold];
m1_28 -> m1_29  [color=red, key=0, style=solid];
m1_28 -> m1_13  [color=red, key=2, style=dotted];
m1_16 -> m1_14  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [color=green, key=0, style=solid];
m1_18 -> m1_12  [color=green, key=2, style=dotted];
m1_18 -> m1_22  [color=green, key=2, style=dotted];
m1_19 -> m1_20  [color=green, key=0, style=solid];
m1_19 -> m1_12  [color=red, key=2, style=dotted];
m1_19 -> m1_22  [color=red, key=1, label="lambda expression", style=dashed];
m1_19 -> m1_9  [color=red, key=3, label="Parameter variable Hangfire.Common.Job job", style=bold];
m1_20 -> m1_21  [color=red, key=0, style=solid];
m1_20 -> m1_13  [color=red, key=2, style=dotted];
m1_21 -> m1_18  [color=blue, key=0, style=bold];
m1_29 -> m1_26  [color=blue, key=0, style=bold];
m1_30 -> m1_31  [color=red, key=0, style=solid];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_6 -> m1_15  [color=green, key=2, style=dotted];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_0 -> m1_4  [color=green, key=1, label=SqlConnection, style=dashed];
m1_0 -> m1_8  [color=green, key=1, label=SqlConnection, style=dashed];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_5  [color=red, key=2, style=dotted];
m1_1 -> m1_3  [color=green, key=0, style=solid];
m1_2 -> m1_3  [color=red, key=0, style=solid];
m1_2 -> m1_6  [color=red, key=2, style=dotted];
m1_2 -> m1_10  [color=green, key=0, style=solid];
m1_2 -> m1_11  [color=green, key=2, style=dotted];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_3 -> m1_7  [color=red, key=2, style=dotted];
m1_3 -> m1_12  [color=green, key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_6  [color=green, key=0, style=solid];
m1_4 -> m1_13  [color=green, key=2, style=dotted];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_7 -> m1_7  [color=green, key=1, label=script, style=dashed];
m1_7 -> m1_16  [color=green, key=2, style=dotted];
m1_14 -> m1_15  [color=red, key=0, style=solid];
m1_22 -> m1_23  [color=red, key=0, style=solid];
m1_32 -> m1_30  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [color=green, key=0, style=solid];
m1_8 -> m1_17  [color=green, key=2, style=dotted];
m1_9 -> m1_10  [color=green, key=0, style=solid];
m1_9 -> m1_12  [color=green, key=2, style=dotted];
m1_9 -> m1_14  [color=red, key=1, label="lambda expression", style=dashed];
m1_10 -> m1_11  [color=red, key=0, style=solid];
m1_10 -> m1_13  [color=red, key=2, style=dotted];
m1_10 -> m1_0  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [color=red, key=0, style=solid];
m1_34 -> m1_35  [color=red, key=0, style=solid];
m1_34 -> m1_17  [color=red, key=2, style=dotted];
m1_34 -> m1_36  [color=red, key=1, label=context, style=dashed];
m1_34 -> m1_37  [color=red, key=1, label=context, style=dashed];
m1_34 -> m1_38  [color=red, key=1, label=context, style=dashed];
m1_35 -> m1_36  [color=red, key=0, style=solid];
m1_35 -> m1_13  [color=red, key=2, style=dotted];
m1_36 -> m1_37  [color=red, key=0, style=solid];
m1_36 -> m1_40  [color=red, key=2, style=dotted];
m1_36 -> m1_41  [color=red, key=2, style=dotted];
m1_37 -> m1_38  [color=red, key=0, style=solid];
m1_37 -> m1_42  [color=red, key=2, style=dotted];
m1_38 -> m1_39  [color=red, key=0, style=solid];
m1_38 -> m1_13  [color=red, key=2, style=dotted];
m1_39 -> m1_33  [color=blue, key=0, style=bold];
m1_5 -> m1_10  [color=green, key=0, style=solid];
m1_5 -> m1_14  [color=green, key=2, style=dotted];
m1_43 -> m1_1  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_2  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_3  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_9  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_15  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_19  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_23  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_27  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_31  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_34  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_35  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_36  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_37  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m1_43 -> m1_38  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m2_47 -> m2_48  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_51  [key=2, style=dotted];
m2_50 -> m2_47  [color=blue, key=0, style=bold];
m2_46 -> m2_73  [key=0, style=solid];
m2_46 -> m2_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_46 -> m2_77  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m2_46 -> m2_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_67  [key=2, style=dotted];
m2_73 -> m2_75  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_73 -> m2_76  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_73 -> m2_77  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_73 -> m2_78  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_68  [key=2, style=dotted];
m2_77 -> m2_51  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_71  [key=2, style=dotted];
m2_79 -> m2_81  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_75 -> m2_68  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_68  [key=2, style=dotted];
m2_78 -> m2_80  [color=darkseagreen4, key=1, label=releaseResult, style=dashed];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_69  [key=2, style=dotted];
m2_81 -> m2_46  [color=blue, key=0, style=bold];
m2_30 -> m2_31  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_36  [key=0, style=solid];
m2_34 -> m2_25  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_44  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_45  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_46  [key=2, style=dotted];
m2_32 -> m2_43  [key=0, style=solid];
m2_35 -> m2_43  [key=0, style=solid];
m2_38 -> m2_43  [key=0, style=solid];
m2_43 -> m2_30  [color=blue, key=0, style=bold];
m2_4 -> m2_11  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m2_4 -> m2_12  [color=green, key=1, label=string, style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m2_4 -> m2_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_4 -> m2_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_4 -> m2_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_4 -> m2_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m2_11 -> m2_12  [color=green, key=0, style=solid];
m2_9 -> m2_11  [color=green, key=0, style=solid];
m2_9 -> m2_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_15  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_19  [key=0, style=solid];
m2_13 -> m2_25  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_26  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_27  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=0, style=solid];
m2_16 -> m2_28  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_29  [key=2, style=dotted];
m2_18 -> m2_20  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid];
m2_6 -> m2_20  [key=0, style=solid];
m2_6 -> m2_21  [key=2, style=dotted];
m2_6 -> m2_22  [key=2, style=dotted];
m2_7 -> m2_9  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_23  [key=2, style=dotted];
m2_8 -> m2_20  [key=0, style=solid];
m2_8 -> m2_21  [key=2, style=dotted];
m2_8 -> m2_22  [key=2, style=dotted];
m2_10 -> m2_20  [key=0, style=solid];
m2_10 -> m2_24  [key=2, style=dotted];
m2_10 -> m2_22  [key=2, style=dotted];
m2_20 -> m2_4  [color=blue, key=0, style=bold];
m2_27 -> m2_4  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan timeout", style=bold];
m2_27 -> m2_52  [key=0, style=solid];
m2_27 -> m2_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_27 -> m2_57  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_27 -> m2_60  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m2_27 -> m2_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_27 -> m2_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_67  [key=2, style=dotted];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_52 -> m2_55  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_52 -> m2_56  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_52 -> m2_57  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_52 -> m2_58  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_52 -> m2_60  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_52 -> m2_61  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_68  [key=2, style=dotted];
m2_57 -> m2_57  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_68  [key=2, style=dotted];
m2_57 -> m2_59  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_60 -> m2_51  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_64 -> m2_66  [key=0, style=solid];
m2_64 -> m2_70  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_71  [key=2, style=dotted];
m2_65 -> m2_72  [key=2, style=dotted];
m2_62 -> m2_66  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_68  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_68  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_68  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_68  [key=2, style=dotted];
m2_61 -> m2_65  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_69  [key=2, style=dotted];
m2_61 -> m2_63  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_59  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_65  [key=0, style=solid];
m2_66 -> m2_27  [color=blue, key=0, style=bold];
m2_82 -> m2_11  [color=green, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_12  [color=green, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_18  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_34  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_37  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_39  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_40  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_41  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_42  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_48  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_82 -> m2_49  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m3_25 -> m3_26  [color=green, key=0, style=solid];
m3_26 -> m3_27  [color=green, key=0, style=solid];
m3_26 -> m3_13  [color=green, key=2, style=dotted];
m3_26 -> m3_28  [color=green, key=1, label="lambda expression", style=dashed];
m3_26 -> m3_20  [color=green, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m3_27 -> m3_25  [color=blue, key=0, style=bold];
m3_20 -> m3_26  [color=green, key=3, label="Parameter variable DbConnection connection", style=bold];
m3_20 -> m3_113  [key=0, style=solid];
m3_20 -> m3_11  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m3_20 -> m3_9  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m3_20 -> m3_49  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m3_20 -> m3_52  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m3_20 -> m3_80  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_115  [key=2, style=dotted];
m3_114 -> m3_20  [color=blue, key=0, style=bold];
m3_79 -> m3_80  [key=0, style=solid];
m3_80 -> m3_20  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m3_80 -> m3_13  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_81 -> m3_79  [color=blue, key=0, style=bold];
m3_65 -> m3_49  [color=darkorchid, key=3, label="Parameter variable System.Action<DbConnection> action", style=bold];
m3_65 -> m3_116  [key=0, style=solid];
m3_65 -> m3_117  [color=darkseagreen4, key=1, label="System.Action<DbConnection>", style=dashed];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_119  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_120  [key=2, style=dotted];
m3_118 -> m3_65  [color=blue, key=0, style=bold];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_20  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m3_37 -> m3_13  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_38 -> m3_36  [color=blue, key=0, style=bold];
m3_22 -> m3_23  [key=0, style=solid];
m3_28 -> m3_29  [color=green, key=0, style=solid];
m3_29 -> m3_30  [color=green, key=0, style=solid];
m3_29 -> m3_20  [color=green, key=2, style=dotted];
m3_29 -> m3_34  [color=green, key=1, label=storage, style=dashed];
m3_30 -> m3_31  [color=green, key=0, style=solid];
m3_30 -> m3_4  [color=green, key=2, style=dotted];
m3_30 -> m3_33  [color=green, key=1, label="lambda expression", style=dashed];
m3_34 -> m3_35  [color=green, key=0, style=solid];
m3_34 -> m3_9  [color=green, key=2, style=dotted];
m3_31 -> m3_32  [color=green, key=0, style=solid];
m3_31 -> m3_5  [color=green, key=2, style=dotted];
m3_33 -> m3_34  [color=green, key=0, style=solid];
m3_35 -> m3_33  [color=blue, key=0, style=bold];
m3_32 -> m3_28  [color=blue, key=0, style=bold];
m3_7 -> m3_9  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_41 -> m3_9  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_65  [key=2, style=dotted];
m3_63 -> m3_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_68 -> m3_9  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_74 -> m3_4  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_77 -> m3_9  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_84 -> m3_9  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_15 -> m3_20  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_15 -> m3_23  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_40 -> m3_20  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_67 -> m3_20  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_73 -> m3_20  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_77  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_83 -> m3_20  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_17 -> m3_4  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_42 -> m3_4  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_45  [key=2, style=dotted];
m3_86 -> m3_4  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_45  [key=2, style=dotted];
m3_23 -> m3_9  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_18 -> m3_5  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_43 -> m3_5  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_87 -> m3_5  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_8 -> m3_6  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_42  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m3_62 -> m3_63  [key=0, style=solid];
m3_64 -> m3_62  [color=blue, key=0, style=bold];
m3_66 -> m3_67  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_60  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_75 -> m3_72  [color=blue, key=0, style=bold];
m3_76 -> m3_77  [key=0, style=solid];
m3_78 -> m3_76  [color=blue, key=0, style=bold];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_86  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_89  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_23  [color=darkseagreen4, key=1, label=tooLargeTimeout, style=dashed];
m3_16 -> m3_21  [key=2, style=dotted];
m3_24 -> m3_22  [color=blue, key=0, style=bold];
m3_19 -> m3_14  [color=blue, key=0, style=bold];
m3_44 -> m3_39  [color=blue, key=0, style=bold];
m3_88 -> m3_82  [color=blue, key=0, style=bold];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_59  [key=2, style=dotted];
m3_71 -> m3_66  [color=blue, key=0, style=bold];
m3_90 -> m3_91  [key=0, style=solid];
m3_92 -> m3_9  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_98  [key=2, style=dotted];
m3_93 -> m3_9  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_98  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_93  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_91 -> m3_96  [key=2, style=dotted];
m3_91 -> m3_97  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_99  [key=2, style=dotted];
m3_95 -> m3_90  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_20  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m3_11 -> m3_13  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_12 -> m3_10  [color=blue, key=0, style=bold];
m3_100 -> m3_101  [key=0, style=solid];
m3_102 -> m3_9  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_98  [key=2, style=dotted];
m3_102 -> m3_106  [color=darkseagreen4, key=1, label=outer, style=dashed];
m3_103 -> m3_9  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_98  [key=2, style=dotted];
m3_103 -> m3_107  [color=darkseagreen4, key=1, label=inner, style=dashed];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_103  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_101 -> m3_96  [key=2, style=dotted];
m3_101 -> m3_97  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_111  [key=2, style=dotted];
m3_106 -> m3_110  [key=2, style=dotted];
m3_104 -> m3_106  [color=darkseagreen4, key=1, label=field, style=dashed];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_109  [key=2, style=dotted];
m3_104 -> m3_107  [color=darkseagreen4, key=1, label=field, style=dashed];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_111  [key=2, style=dotted];
m3_107 -> m3_112  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_110  [key=2, style=dotted];
m3_108 -> m3_100  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_46 -> m3_47  [key=0, style=solid];
m3_49 -> m3_20  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_57  [key=2, style=dotted];
m3_49 -> m3_54  [color=darkseagreen4, key=1, label=thread, style=dashed];
m3_52 -> m3_20  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m3_52 -> m3_13  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_47 -> m3_49  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m3_47 -> m3_63  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_56  [key=2, style=dotted];
m3_47 -> m3_70  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m3_47 -> m3_53  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_63  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m3_48 -> m3_56  [key=2, style=dotted];
m3_48 -> m3_69  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m3_48 -> m3_51  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_58  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_61  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_59  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_60  [key=2, style=dotted];
m3_55 -> m3_46  [color=blue, key=0, style=bold];
m3_121 -> m3_26  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_30  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_34  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_37  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_41  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_49  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_63  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_68  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_52  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_74  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_77  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_80  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_121 -> m3_84  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m3_124 -> m3_34  [color=green, key=1, label=storage, style=dashed];
m3_125 -> m3_63  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m3_125 -> m3_70  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m3_126 -> m3_63  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m3_126 -> m3_69  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m3_127 -> m3_77  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_122 -> m3_23  [color=darkseagreen4, key=1, label=storage, style=dashed];
m3_123 -> m3_23  [color=darkseagreen4, key=1, label=tooLargeTimeout, style=dashed];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_25 -> m4_26  [color=green, key=0, style=solid];
m4_25 -> m4_15  [color=green, key=2, style=dotted];
m4_25 -> m4_27  [color=green, key=1, label=context, style=dashed];
m4_25 -> m4_28  [color=green, key=1, label=context, style=dashed];
m4_25 -> m4_29  [color=green, key=1, label=context, style=dashed];
m4_26 -> m4_27  [color=green, key=0, style=solid];
m4_26 -> m4_11  [color=green, key=2, style=dotted];
m4_27 -> m4_28  [color=green, key=0, style=solid];
m4_27 -> m4_31  [color=green, key=2, style=dotted];
m4_28 -> m4_29  [color=green, key=0, style=solid];
m4_28 -> m4_32  [key=2, style=dotted];
m4_29 -> m4_30  [color=green, key=0, style=solid];
m4_29 -> m4_11  [color=green, key=2, style=dotted];
m4_30 -> m4_24  [color=blue, key=0, style=bold];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_10  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_18 -> m4_11  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_16  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_4  [color=green, key=2, style=dotted];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_5  [color=green, key=2, style=dotted];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_12 -> m4_13  [color=green, key=0, style=solid];
m4_13 -> m4_14  [color=green, key=0, style=solid];
m4_13 -> m4_15  [color=green, key=2, style=dotted];
m4_14 -> m4_12  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> m4_10  [color=green, key=2, style=dotted];
m4_7 -> m4_12  [color=green, key=1, label="lambda expression", style=dashed];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_11  [key=2, style=dotted];
m4_9 -> m4_6  [color=blue, key=0, style=bold];
m4_33 -> m4_1  [color=green, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m4_33 -> m4_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m4_33 -> m4_7  [color=green, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m4_33 -> m4_13  [color=green, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m4_33 -> m4_25  [color=green, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m4_33 -> m4_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m4_33 -> m4_29  [color=green, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m4_33 -> m4_17  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m4_33 -> m4_21  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m4_33 -> m4_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
}
