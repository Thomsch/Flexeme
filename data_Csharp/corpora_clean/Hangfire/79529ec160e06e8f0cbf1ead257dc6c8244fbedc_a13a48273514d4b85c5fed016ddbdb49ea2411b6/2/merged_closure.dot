digraph  {
n584 [label="Hangfire.Logging.LoggerExecutionWrapper", span=""];
n585 [label="System.Func<string>", span=""];
n586 [label="Hangfire.Logging.LogProviders.NLogLogProvider", span=""];
n587 [label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", span=""];
n588 [label="Hangfire.Logging.LogProviders.Log4NetLogProvider", span=""];
n589 [label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", span=""];
n590 [label="Hangfire.Logging.LogProviders.SerilogLogProvider", span=""];
n591 [label=func, span=""];
n592 [label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", span=""];
n593 [label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger", span=""];
n0 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="56-56"];
n1 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="56-56"];
n2 [cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", label="Entry Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", span="74-74"];
n3 [cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", label="GuardAgainstNullLogger(logger)", span="76-76"];
n4 [cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", label="return logger.Log(LogLevel.Debug, null);", span="77-77"];
n6 [cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", label="Entry Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", span="288-288"];
n5 [cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", label="Exit Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", span="74-74"];
n7 [cluster="Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", label="Entry Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", span="80-80"];
n8 [cluster="Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", label="GuardAgainstNullLogger(logger)", span="82-82"];
n9 [cluster="Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", label="return logger.Log(LogLevel.Error, null);", span="83-83"];
n10 [cluster="Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", label="Exit Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", span="80-80"];
n11 [cluster="Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", label="Entry Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", span="86-86"];
n12 [cluster="Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", label="GuardAgainstNullLogger(logger)", span="88-88"];
n13 [cluster="Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", label="return logger.Log(LogLevel.Fatal, null);", span="89-89"];
n14 [cluster="Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", label="Exit Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", span="86-86"];
n15 [cluster="Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", label="Entry Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", span="92-92"];
n16 [cluster="Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", label="GuardAgainstNullLogger(logger)", span="94-94"];
n17 [cluster="Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", label="return logger.Log(LogLevel.Info, null);", span="95-95"];
n18 [cluster="Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", label="Exit Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", span="92-92"];
n19 [cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", label="Entry Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", span="98-98"];
n20 [cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", label="GuardAgainstNullLogger(logger)", span="100-100"];
n21 [cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", label="return logger.Log(LogLevel.Trace, null);", span="101-101"];
n22 [cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", label="Exit Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", span="98-98"];
n23 [cluster="Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", label="Entry Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", span="104-104"];
n24 [cluster="Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", label="GuardAgainstNullLogger(logger)", span="106-106"];
n25 [cluster="Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", label="return logger.Log(LogLevel.Warn, null);", span="107-107"];
n26 [cluster="Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", label="Exit Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", span="104-104"];
n27 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", label="Entry Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", span="110-110"];
n28 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", label="GuardAgainstNullLogger(logger)", span="112-112"];
n29 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", label="logger.Log(LogLevel.Debug, messageFunc)", span="113-113"];
n30 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", label="Exit Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", span="110-110"];
n31 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", label="Entry Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", span="116-116"];
n32 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", label="logger.IsDebugEnabled()", span="118-118"];
n33 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", label="logger.Log(LogLevel.Debug, message.AsFunc())", span="120-120"];
n34 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", label="Exit Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", span="116-116"];
n35 [cluster="Hangfire.Logging.ILog.IsDebugEnabled()", label="Entry Hangfire.Logging.ILog.IsDebugEnabled()", span="74-74"];
n36 [cluster="T.AsFunc<T>()", label="Entry T.AsFunc<T>()", span="303-303"];
n37 [cluster="Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", label="Entry Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", span="124-124"];
n38 [cluster="Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.IsDebugEnabled()", span="126-126"];
n39 [cluster="Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.LogFormat(LogLevel.Debug, message, args)", span="128-128"];
n40 [cluster="Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", label="Exit Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", span="124-124"];
n41 [cluster="Hangfire.Logging.ILog.LogFormat(Hangfire.Logging.LogLevel, string, params object[])", label="Entry Hangfire.Logging.ILog.LogFormat(Hangfire.Logging.LogLevel, string, params object[])", span="296-296"];
n42 [cluster="Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", label="Entry Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", span="132-132"];
n43 [cluster="Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.IsDebugEnabled()", span="134-134"];
n44 [cluster="Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.Log(LogLevel.Debug, message.AsFunc(), exception)", span="136-136"];
n45 [cluster="Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", label="Exit Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", span="132-132"];
n46 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", label="Entry Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", span="140-140"];
n47 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", label="logger.Log(LogLevel.Error, messageFunc)", span="142-142"];
n48 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", label="Exit Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", span="140-140"];
n49 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", label="Entry Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", span="145-145"];
n50 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", label="logger.IsErrorEnabled()", span="147-147"];
n51 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", label="logger.Log(LogLevel.Error, message.AsFunc())", span="149-149"];
n52 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", label="Exit Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", span="145-145"];
n53 [cluster="Hangfire.Logging.ILog.IsErrorEnabled()", label="Entry Hangfire.Logging.ILog.IsErrorEnabled()", span="80-80"];
n54 [cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", label="Entry Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", span="153-153"];
n55 [cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.IsErrorEnabled()", span="155-155"];
n56 [cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.LogFormat(LogLevel.Error, message, args)", span="157-157"];
n57 [cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", label="Exit Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", span="153-153"];
n58 [cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", label="Entry Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", span="161-161"];
n59 [cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.IsErrorEnabled()", span="163-163"];
n60 [cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.Log(LogLevel.Error, message.AsFunc(), exception)", span="165-165"];
n61 [cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", label="Exit Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", span="161-161"];
n62 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", label="Entry Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", span="169-169"];
n63 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", label="logger.Log(LogLevel.Fatal, messageFunc)", span="171-171"];
n64 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", label="Exit Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", span="169-169"];
n65 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", label="Entry Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", span="174-174"];
n66 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", label="logger.IsFatalEnabled()", span="176-176"];
n67 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", label="logger.Log(LogLevel.Fatal, message.AsFunc())", span="178-178"];
n68 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", label="Exit Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", span="174-174"];
n69 [cluster="Hangfire.Logging.ILog.IsFatalEnabled()", label="Entry Hangfire.Logging.ILog.IsFatalEnabled()", span="86-86"];
n70 [cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", label="Entry Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", span="182-182"];
n71 [cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.IsFatalEnabled()", span="184-184"];
n72 [cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.LogFormat(LogLevel.Fatal, message, args)", span="186-186"];
n73 [cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", label="Exit Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", span="182-182"];
n74 [cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", label="Entry Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", span="190-190"];
n75 [cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.IsFatalEnabled()", span="192-192"];
n76 [cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.Log(LogLevel.Fatal, message.AsFunc(), exception)", span="194-194"];
n77 [cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", label="Exit Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", span="190-190"];
n78 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", label="Entry Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", span="198-198"];
n79 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", label="GuardAgainstNullLogger(logger)", span="200-200"];
n80 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", label="logger.Log(LogLevel.Info, messageFunc)", span="201-201"];
n81 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", label="Exit Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", span="198-198"];
n82 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", label="Entry Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", span="204-204"];
n83 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", label="logger.IsInfoEnabled()", span="206-206"];
n84 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", label="logger.Log(LogLevel.Info, message.AsFunc())", span="208-208"];
n85 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", label="Exit Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", span="204-204"];
n86 [cluster="Hangfire.Logging.ILog.IsInfoEnabled()", label="Entry Hangfire.Logging.ILog.IsInfoEnabled()", span="92-92"];
n87 [cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", label="Entry Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", span="212-212"];
n88 [cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.IsInfoEnabled()", span="214-214"];
n89 [cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.LogFormat(LogLevel.Info, message, args)", span="216-216"];
n90 [cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", label="Exit Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", span="212-212"];
n91 [cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", label="Entry Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", span="220-220"];
n92 [cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.IsInfoEnabled()", span="222-222"];
n93 [cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.Log(LogLevel.Info, message.AsFunc(), exception)", span="224-224"];
n94 [cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", label="Exit Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", span="220-220"];
n95 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", label="Entry Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", span="228-228"];
n96 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", label="GuardAgainstNullLogger(logger)", span="230-230"];
n97 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", label="logger.Log(LogLevel.Trace, messageFunc)", span="231-231"];
n98 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", label="Exit Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", span="228-228"];
n99 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", label="Entry Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", span="234-234"];
n100 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", label="logger.IsTraceEnabled()", span="236-236"];
n101 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", label="logger.Log(LogLevel.Trace, message.AsFunc())", span="238-238"];
n102 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", label="Exit Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", span="234-234"];
n103 [cluster="Hangfire.Logging.ILog.IsTraceEnabled()", label="Entry Hangfire.Logging.ILog.IsTraceEnabled()", span="98-98"];
n104 [cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", label="Entry Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", span="242-242"];
n105 [cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.IsTraceEnabled()", span="244-244"];
n106 [cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.LogFormat(LogLevel.Trace, message, args)", span="246-246"];
n107 [cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", label="Exit Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", span="242-242"];
n108 [cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", label="Entry Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", span="250-250"];
n109 [cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.IsTraceEnabled()", span="252-252"];
n110 [cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.Log(LogLevel.Trace, message.AsFunc(), exception)", span="254-254"];
n111 [cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", label="Exit Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", span="250-250"];
n112 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", label="Entry Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", span="258-258"];
n113 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", label="GuardAgainstNullLogger(logger)", span="260-260"];
n114 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", label="logger.Log(LogLevel.Warn, messageFunc)", span="261-261"];
n115 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", label="Exit Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", span="258-258"];
n116 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", label="Entry Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", span="264-264"];
n117 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", label="logger.IsWarnEnabled()", span="266-266"];
n118 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", label="logger.Log(LogLevel.Warn, message.AsFunc())", span="268-268"];
n119 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", label="Exit Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", span="264-264"];
n120 [cluster="Hangfire.Logging.ILog.IsWarnEnabled()", label="Entry Hangfire.Logging.ILog.IsWarnEnabled()", span="104-104"];
n121 [cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", label="Entry Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", span="272-272"];
n122 [cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.IsWarnEnabled()", span="274-274"];
n123 [cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", label="logger.LogFormat(LogLevel.Warn, message, args)", span="276-276"];
n124 [cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", label="Exit Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", span="272-272"];
n125 [cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", label="Entry Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", span="280-280"];
n126 [cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.IsWarnEnabled()", span="282-282"];
n127 [cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", label="logger.Log(LogLevel.Warn, message.AsFunc(), exception)", span="284-284"];
n128 [cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", label="Exit Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", span="280-280"];
n129 [cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", label="logger == null", span="290-290"];
n130 [cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", label="throw new ArgumentNullException(nameof(logger));", span="292-292"];
n131 [cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", label="Exit Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", span="288-288"];
n132 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n133 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n134 [cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", label="Entry Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", span="296-296"];
n135 [cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", label="var result = string.Format(CultureInfo.InvariantCulture, message, args)", span="298-298"];
n136 [cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", label="logger.Log(logLevel, result.AsFunc())", span="299-299"];
n138 [cluster="string.Format(System.IFormatProvider, string, params object[])", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
n137 [cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", label="Exit Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", span="296-296"];
n139 [cluster="Hangfire.Logging.LogExtensions.AsFunc<T>(T)", label="Entry Hangfire.Logging.LogExtensions.AsFunc<T>(T)", span="303-303"];
n140 [cluster="Hangfire.Logging.LogExtensions.AsFunc<T>(T)", label="return value.Return;", span="305-305"];
n141 [cluster="Hangfire.Logging.LogExtensions.AsFunc<T>(T)", label="Exit Hangfire.Logging.LogExtensions.AsFunc<T>(T)", span="303-303"];
n142 [cluster="Hangfire.Logging.LogExtensions.Return<T>(T)", label="Entry Hangfire.Logging.LogExtensions.Return<T>(T)", span="308-308"];
n143 [cluster="Hangfire.Logging.LogExtensions.Return<T>(T)", label="return value;", span="310-310"];
n144 [cluster="Hangfire.Logging.LogExtensions.Return<T>(T)", label="Exit Hangfire.Logging.LogExtensions.Return<T>(T)", span="308-308"];
n145 [cluster="Hangfire.Logging.ILogProvider.GetLogger(string)", label="Entry Hangfire.Logging.ILogProvider.GetLogger(string)", span="319-319"];
n146 [cluster="Hangfire.Logging.ILogProvider.GetLogger(string)", label="Exit Hangfire.Logging.ILogProvider.GetLogger(string)", span="319-319"];
n147 [cluster="Hangfire.Logging.LogProvider.For<T>()", label="Entry Hangfire.Logging.LogProvider.For<T>()", span="335-335"];
n148 [cluster="Hangfire.Logging.LogProvider.For<T>()", label="return GetLogger(typeof(T));", span="337-337"];
n149 [cluster="Hangfire.Logging.LogProvider.For<T>()", label="Exit Hangfire.Logging.LogProvider.For<T>()", span="335-335"];
n150 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="357-357"];
n151 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", label="return GetLogger(type.FullName);", span="359-359"];
n152 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", label="Exit Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="357-357"];
n153 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", label="Entry Hangfire.Logging.LogProvider.GetLogger(string)", span="367-367"];
n154 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", label="ILogProvider logProvider = _currentLogProvider ?? ResolveLogProvider()", span="369-369"];
n155 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", label="return logProvider == null ? new NoOpLogger() : (ILog)new LoggerExecutionWrapper(logProvider.GetLogger(name));", span="370-370"];
n157 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", label="Entry Hangfire.Logging.LogProvider.ResolveLogProvider()", span="399-399"];
n156 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", label="Exit Hangfire.Logging.LogProvider.GetLogger(string)", span="367-367"];
n158 [cluster="Hangfire.Logging.LogProvider.NoOpLogger.NoOpLogger()", label="Entry Hangfire.Logging.LogProvider.NoOpLogger.NoOpLogger()", span="421-421"];
n159 [cluster="Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", label="Entry Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", span="440-440"];
n160 [cluster="Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", label="Entry Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", span="377-377"];
n161 [cluster="Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", label="_currentLogProvider = logProvider", span="379-379"];
n162 [cluster="Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", label="Exit Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", span="377-377"];
n163 [cluster="lambda expression", label="Entry lambda expression", span="389-389"];
n164 [cluster="lambda expression", label="new SerilogLogProvider()", span="389-389"];
n165 [cluster="lambda expression", label="Exit lambda expression", span="389-389"];
n166 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", span="993-993"];
n167 [cluster="lambda expression", label="Entry lambda expression", span="390-390"];
n168 [cluster="lambda expression", label="new NLogLogProvider()", span="390-390"];
n169 [cluster="lambda expression", label="Exit lambda expression", span="390-390"];
n170 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", span="484-484"];
n171 [cluster="lambda expression", label="Entry lambda expression", span="391-391"];
n172 [cluster="lambda expression", label="new Log4NetLogProvider()", span="391-391"];
n173 [cluster="lambda expression", label="Exit lambda expression", span="391-391"];
n174 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", span="666-666"];
n175 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", label=LogProviderResolvers, span="403-403"];
n176 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", label="providerResolver.Item1()", span="405-405"];
n178 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", label=Exception, span="411-411"];
n180 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", label="return null;", span="418-418"];
n177 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", label="return providerResolver.Item2();", span="407-407"];
n182 [cluster="Hangfire.Logging.LogProvider.IsLoggerAvailable.Invoke()", label="Entry Hangfire.Logging.LogProvider.IsLoggerAvailable.Invoke()", span="382-382"];
n179 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", label="Console.WriteLine(\r\n                    ''Exception occured resolving a log provider. Logging for this assembly {0} is disabled. {1}'',\r\n                    typeof(LogProvider).GetTypeInfo().Assembly.FullName,\r\n                    ex)", span="413-416"];
n184 [cluster="System.Type.GetTypeInfo()", label="Entry System.Type.GetTypeInfo()", span="0-0"];
n185 [cluster="System.Console.WriteLine(string, object, object)", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
n181 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", label="Exit Hangfire.Logging.LogProvider.ResolveLogProvider()", span="399-399"];
n183 [cluster="Hangfire.Logging.LogProvider.CreateLogProvider.Invoke()", label="Entry Hangfire.Logging.LogProvider.CreateLogProvider.Invoke()", span="384-384"];
n186 [cluster="Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="423-423"];
n187 [cluster="Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return false;", span="425-425"];
n188 [cluster="Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="423-423"];
n189 [cluster="Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", label="_logger = logger", span="442-442"];
n190 [cluster="Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", label="Exit Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", span="440-440"];
n191 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="445-445"];
n192 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="messageFunc == null", span="447-447"];
n193 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return _logger.Log(logLevel, null);", span="449-449"];
n194 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Func<string> wrappedMessageFunc = () =>\r\n            {\r\n                try\r\n                {\r\n                    return messageFunc();\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    Log(LogLevel.Error, () => FailedToGenerateLogMessage, ex);\r\n                }\r\n                return null;\r\n            }", span="452-463"];
n198 [cluster="lambda expression", label="return messageFunc();", span="456-456"];
n195 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return _logger.Log(logLevel, wrappedMessageFunc, exception);", span="464-464"];
n200 [cluster="lambda expression", label="Log(LogLevel.Error, () => FailedToGenerateLogMessage, ex)", span="460-460"];
n196 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="445-445"];
n197 [cluster="lambda expression", label="Entry lambda expression", span="452-463"];
n199 [cluster="lambda expression", label=Exception, span="458-458"];
n201 [cluster="lambda expression", label="return null;", span="462-462"];
n204 [cluster="lambda expression", label="Entry lambda expression", span="460-460"];
n202 [cluster="lambda expression", label="Exit lambda expression", span="452-463"];
n203 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
n205 [cluster="lambda expression", label=FailedToGenerateLogMessage, span="460-460"];
n206 [cluster="lambda expression", label="Exit lambda expression", span="460-460"];
n207 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", label="!IsLoggerAvailable()", span="486-486"];
n208 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", label="throw new InvalidOperationException(''NLog.LogManager not found'');", span="488-488"];
n209 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", label="_getLoggerByNameDelegate = GetGetLoggerMethodCall()", span="490-490"];
n211 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", span="504-504"];
n210 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", span="484-484"];
n212 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n213 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", span="514-514"];
n214 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", span="499-499"];
n215 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", label="return new NLogLogger(_getLoggerByNameDelegate(name));", span="501-501"];
n216 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", span="499-499"];
n217 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", span="527-527"];
n218 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n219 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="506-506"];
n220 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", span="504-504"];
n221 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", span="509-509"];
n222 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", label="return Type.GetType(''NLog.LogManager, NLog'');", span="511-511"];
n223 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", span="509-509"];
n224 [cluster="System.Type.GetType(string)", label="Entry System.Type.GetType(string)", span="0-0"];
n225 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", label="Type logManagerType = GetLogManagerType()", span="516-516"];
n226 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", label="MethodInfo method = logManagerType.GetRuntimeMethod(''GetLogger'', new[] { typeof(string) })", span="517-517"];
n227 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", label="ParameterExpression nameParam = Expression.Parameter(typeof(string), ''name'')", span="518-518"];
n231 [cluster="System.Type.GetRuntimeMethod(string, System.Type[])", label="Entry System.Type.GetRuntimeMethod(string, System.Type[])", span="0-0"];
n228 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[] { nameParam })", span="519-519"];
n232 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
n229 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", label="return Expression.Lambda<Func<string, object>>(methodCall, new[] { nameParam }).Compile();", span="520-520"];
n233 [cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
n230 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", span="514-514"];
n234 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
n235 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
n236 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", label="_logger = logger", span="529-529"];
n237 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", span="527-527"];
n238 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="532-532"];
n239 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="messageFunc == null", span="534-534"];
n240 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return IsLogLevelEnable(logLevel);", span="536-536"];
n241 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="exception != null", span="538-538"];
n242 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return LogException(logLevel, messageFunc, exception);", span="540-540"];
n243 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label=logLevel, span="542-542"];
n246 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Debug(messageFunc())", span="547-547"];
n250 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Info(messageFunc())", span="554-554"];
n254 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Warn(messageFunc())", span="561-561"];
n258 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Error(messageFunc())", span="568-568"];
n262 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Fatal(messageFunc())", span="575-575"];
n265 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Trace(messageFunc())", span="582-582"];
n244 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Debug", span="544-544"];
n248 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Info", span="551-551"];
n252 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Warn", span="558-558"];
n256 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Error", span="565-565"];
n260 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Fatal", span="572-572"];
n264 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsTraceEnabled", span="580-580"];
n245 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsDebugEnabled", span="545-545"];
n267 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return false;", span="587-587"];
n247 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="548-548"];
n271 [cluster="Unk.Debug", label="Entry Unk.Debug", span=""];
n249 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsInfoEnabled", span="552-552"];
n251 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="555-555"];
n272 [cluster="Unk.Info", label="Entry Unk.Info", span=""];
n253 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsWarnEnabled", span="559-559"];
n255 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="562-562"];
n273 [cluster="Unk.Warn", label="Entry Unk.Warn", span=""];
n257 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsErrorEnabled", span="566-566"];
n259 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="569-569"];
n274 [cluster="Unk.Error", label="Entry Unk.Error", span=""];
n261 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsFatalEnabled", span="573-573"];
n263 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="576-576"];
n275 [cluster="Unk.Fatal", label="Entry Unk.Fatal", span=""];
n266 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="583-583"];
n276 [cluster="Unk.Trace", label="Entry Unk.Trace", span=""];
n268 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="532-532"];
n269 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="640-640"];
n270 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="590-590"];
n277 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label=logLevel, span="592-592"];
n280 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.DebugException(messageFunc(), exception)", span="597-597"];
n284 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.InfoException(messageFunc(), exception)", span="604-604"];
n288 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.WarnException(messageFunc(), exception)", span="611-611"];
n292 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.ErrorException(messageFunc(), exception)", span="618-618"];
n296 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.FatalException(messageFunc(), exception)", span="625-625"];
n299 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.TraceException(messageFunc(), exception)", span="632-632"];
n278 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Debug", span="594-594"];
n282 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Info", span="601-601"];
n286 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Warn", span="608-608"];
n290 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Error", span="615-615"];
n294 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Fatal", span="622-622"];
n298 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsTraceEnabled", span="630-630"];
n279 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsDebugEnabled", span="595-595"];
n301 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return false;", span="637-637"];
n281 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="598-598"];
n303 [cluster="Unk.DebugException", label="Entry Unk.DebugException", span=""];
n283 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsInfoEnabled", span="602-602"];
n285 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="605-605"];
n304 [cluster="Unk.InfoException", label="Entry Unk.InfoException", span=""];
n287 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsWarnEnabled", span="609-609"];
n289 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="612-612"];
n305 [cluster="Unk.WarnException", label="Entry Unk.WarnException", span=""];
n291 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsErrorEnabled", span="616-616"];
n293 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="619-619"];
n306 [cluster="Unk.ErrorException", label="Entry Unk.ErrorException", span=""];
n295 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsFatalEnabled", span="623-623"];
n297 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="626-626"];
n307 [cluster="Unk.FatalException", label="Entry Unk.FatalException", span=""];
n300 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="633-633"];
n308 [cluster="Unk.TraceException", label="Entry Unk.TraceException", span=""];
n302 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="590-590"];
n309 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label=logLevel, span="642-642"];
n310 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Debug", span="644-644"];
n312 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Info", span="646-646"];
n314 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Warn", span="648-648"];
n316 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Error", span="650-650"];
n318 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Fatal", span="652-652"];
n320 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsTraceEnabled;", span="655-655"];
n311 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsDebugEnabled;", span="645-645"];
n313 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsInfoEnabled;", span="647-647"];
n315 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsWarnEnabled;", span="649-649"];
n317 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsErrorEnabled;", span="651-651"];
n319 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsFatalEnabled;", span="653-653"];
n321 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="640-640"];
n322 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", label="!IsLoggerAvailable()", span="668-668"];
n323 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", label="throw new InvalidOperationException(''log4net.LogManager not found'');", span="670-670"];
n324 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", label="_getLoggerByNameDelegate = GetGetLoggerMethodCall()", span="672-672"];
n326 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", span="686-686"];
n325 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", span="666-666"];
n327 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", span="696-696"];
n328 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", span="681-681"];
n329 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", label="return new Log4NetLogger(_getLoggerByNameDelegate(name));", span="683-683"];
n330 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", span="681-681"];
n331 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", span="709-709"];
n332 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="688-688"];
n333 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", span="686-686"];
n334 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", span="691-691"];
n335 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", label="return Type.GetType(''log4net.LogManager, log4net'');", span="693-693"];
n336 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", span="691-691"];
n337 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", label="Type logManagerType = GetLogManagerType()", span="698-698"];
n338 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", label="MethodInfo method = logManagerType.GetRuntimeMethod(''GetLogger'', new[] { typeof(string) })", span="699-699"];
n339 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", label="ParameterExpression nameParam = Expression.Parameter(typeof(string), ''name'')", span="700-700"];
n340 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[] { Expression.Constant(Assembly.GetEntryAssembly()), nameParam })", span="701-701"];
n341 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", label="return Expression.Lambda<Func<string, object>>(methodCall, new[] { nameParam }).Compile();", span="702-702"];
n343 [cluster="System.Reflection.Assembly.GetEntryAssembly()", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
n344 [cluster="System.Linq.Expressions.Expression.Constant(object)", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
n342 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", span="696-696"];
n345 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", label="_logger = logger", span="711-711"];
n346 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", span="709-709"];
n347 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="714-714"];
n348 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="messageFunc == null", span="716-716"];
n349 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return IsLogLevelEnable(logLevel);", span="718-718"];
n350 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="exception != null", span="720-720"];
n351 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return LogException(logLevel, messageFunc, exception);", span="722-722"];
n352 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label=logLevel, span="724-724"];
n355 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Info(messageFunc())", span="729-729"];
n359 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Warn(messageFunc())", span="736-736"];
n363 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Error(messageFunc())", span="743-743"];
n367 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Fatal(messageFunc())", span="750-750"];
n370 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Debug(messageFunc())", span="757-757"];
n353 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Info", span="726-726"];
n357 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Warn", span="733-733"];
n361 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Error", span="740-740"];
n365 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Fatal", span="747-747"];
n369 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsDebugEnabled", span="755-755"];
n354 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsInfoEnabled", span="727-727"];
n372 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return false;", span="762-762"];
n356 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="730-730"];
n358 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsWarnEnabled", span="734-734"];
n360 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="737-737"];
n362 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsErrorEnabled", span="741-741"];
n364 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="744-744"];
n366 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsFatalEnabled", span="748-748"];
n368 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="751-751"];
n371 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="758-758"];
n373 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="714-714"];
n375 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="765-765"];
n374 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="808-808"];
n376 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label=logLevel, span="767-767"];
n379 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Info(messageFunc(), exception)", span="772-772"];
n383 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Warn(messageFunc(), exception)", span="779-779"];
n387 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Error(messageFunc(), exception)", span="786-786"];
n391 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Fatal(messageFunc(), exception)", span="793-793"];
n394 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.Debug(messageFunc(), exception)", span="800-800"];
n377 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Info", span="769-769"];
n381 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Warn", span="776-776"];
n385 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Error", span="783-783"];
n389 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Fatal", span="790-790"];
n393 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsDebugEnabled", span="798-798"];
n378 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsDebugEnabled", span="770-770"];
n396 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return false;", span="805-805"];
n380 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="773-773"];
n382 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsWarnEnabled", span="777-777"];
n384 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="780-780"];
n386 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsErrorEnabled", span="784-784"];
n388 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="787-787"];
n390 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="_logger.IsFatalEnabled", span="791-791"];
n392 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="794-794"];
n395 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="801-801"];
n397 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="765-765"];
n398 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label=logLevel, span="810-810"];
n399 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Debug", span="812-812"];
n401 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Info", span="814-814"];
n403 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Warn", span="816-816"];
n405 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Error", span="818-818"];
n407 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="LogLevel.Fatal", span="820-820"];
n409 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsDebugEnabled;", span="823-823"];
n400 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsDebugEnabled;", span="813-813"];
n402 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsInfoEnabled;", span="815-815"];
n404 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsWarnEnabled;", span="817-817"];
n406 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsErrorEnabled;", span="819-819"];
n408 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="return _logger.IsFatalEnabled;", span="821-821"];
n410 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="808-808"];
n411 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", label="!IsLoggerAvailable()", span="995-995"];
n412 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", label="throw new InvalidOperationException(''Serilog.Log not found'');", span="997-997"];
n413 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", label="_getLoggerByNameDelegate = GetForContextMethodCall()", span="999-999"];
n415 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", span="1013-1013"];
n414 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", span="993-993"];
n416 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", span="1023-1023"];
n417 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", span="1008-1008"];
n418 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", label="return new SerilogLogger(_getLoggerByNameDelegate(name));", span="1010-1010"];
n419 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", span="1008-1008"];
n420 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", span="1121-1121"];
n421 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="1015-1015"];
n422 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", span="1013-1013"];
n423 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", span="1018-1018"];
n424 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", label="return Type.GetType(''Serilog.Log, Serilog'');", span="1020-1020"];
n425 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", span="1018-1018"];
n426 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="Type logManagerType = GetLogManagerType()", span="1025-1025"];
n427 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="MethodInfo method = logManagerType.GetRuntimeMethod(''ForContext'', new[] { typeof(string), typeof(object), typeof(bool) })", span="1026-1026"];
n428 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="ParameterExpression propertyNameParam = Expression.Parameter(typeof(string), ''propertyName'')", span="1027-1027"];
n431 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[]\r\n            {\r\n                propertyNameParam, \r\n                valueParam,\r\n                destructureObjectsParam\r\n            })", span="1030-1035"];
n429 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="ParameterExpression valueParam = Expression.Parameter(typeof(object), ''value'')", span="1028-1028"];
n432 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="var func = Expression.Lambda<Func<string, object, bool, object>>(methodCall, new[]\r\n            {\r\n                propertyNameParam,\r\n                valueParam,\r\n                destructureObjectsParam\r\n            }).Compile()", span="1036-1041"];
n430 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="ParameterExpression destructureObjectsParam = Expression.Parameter(typeof(bool), ''destructureObjects'')", span="1029-1029"];
n433 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="return name => func(''Name'', name, false);", span="1042-1042"];
n436 [cluster="lambda expression", label="func(''Name'', name, false)", span="1042-1042"];
n434 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", span="1023-1023"];
n435 [cluster="lambda expression", label="Entry lambda expression", span="1042-1042"];
n437 [cluster="lambda expression", label="Exit lambda expression", span="1042-1042"];
n438 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
n439 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", span="1058-1058"];
n440 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="var logEventTypeType = Type.GetType(''Serilog.Events.LogEventLevel, Serilog'')", span="1060-1060"];
n441 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="DebugLevel = Enum.Parse(logEventTypeType, ''Debug'')", span="1061-1061"];
n442 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="ErrorLevel = Enum.Parse(logEventTypeType, ''Error'')", span="1062-1062"];
n443 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="FatalLevel = Enum.Parse(logEventTypeType, ''Fatal'')", span="1063-1063"];
n444 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="InformationLevel = Enum.Parse(logEventTypeType, ''Information'')", span="1064-1064"];
n445 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="VerboseLevel = Enum.Parse(logEventTypeType, ''Verbose'')", span="1065-1065"];
n446 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="WarningLevel = Enum.Parse(logEventTypeType, ''Warning'')", span="1066-1066"];
n448 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="MethodInfo isEnabledMethodInfo = loggerType.GetRuntimeMethod(''IsEnabled'', new Type[] { logEventTypeType })", span="1070-1070"];
n452 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="UnaryExpression levelCast = Expression.Convert(levelParam, logEventTypeType)", span="1074-1074"];
n455 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="MethodInfo writeMethodInfo = loggerType.GetRuntimeMethod(''Write'', new[] { logEventTypeType, typeof(string), typeof(object[]) })", span="1084-1084"];
n460 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="MethodInfo writeExceptionMethodInfo = loggerType.GetRuntimeMethod(''Write'', new[]\r\n                {\r\n                    logEventTypeType,\r\n                    typeof(Exception), \r\n                    typeof(string),\r\n                    typeof(object[])\r\n                })", span="1097-1103"];
n465 [cluster="System.Enum.Parse(System.Type, string)", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
n447 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="var loggerType = Type.GetType(''Serilog.ILogger, Serilog'')", span="1069-1069"];
n450 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="UnaryExpression instanceCast = Expression.Convert(instanceParam, loggerType)", span="1072-1072"];
n449 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="ParameterExpression instanceParam = Expression.Parameter(typeof(object))", span="1071-1071"];
n453 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="MethodCallExpression isEnabledMethodCall = Expression.Call(instanceCast, isEnabledMethodInfo, levelCast)", span="1075-1075"];
n466 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type)", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type)", span="0-0"];
n454 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="IsEnabled = Expression.Lambda<Func<object, object, bool>>(isEnabledMethodCall, new[]\r\n                {\r\n                    instanceParam,\r\n                    levelParam\r\n                }).Compile()", span="1076-1080"];
n459 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="Write = Expression.Lambda<Action<object, object, string>>(writeMethodExp, new[]\r\n                {\r\n                    instanceParam,\r\n                    levelParam,\r\n                    messageParam\r\n                }).Compile()", span="1088-1093"];
n463 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="WriteException = Expression.Lambda<Action<object, object, Exception, string>>(writeMethodExp, new[]\r\n                {\r\n                    instanceParam,\r\n                    levelParam,\r\n                    exceptionParam,\r\n                    messageParam,\r\n                }).Compile()", span="1112-1118"];
n451 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="ParameterExpression levelParam = Expression.Parameter(typeof(object))", span="1073-1073"];
n467 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
n458 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="MethodCallExpression writeMethodExp = Expression.Call(instanceCast, writeMethodInfo, levelCast, messageParam, propertyValuesParam)", span="1087-1087"];
n462 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="writeMethodExp = Expression.Call(\r\n                    instanceCast,\r\n                    writeExceptionMethodInfo,\r\n                    levelCast,\r\n                    exceptionParam,\r\n                    messageParam,\r\n                    propertyValuesParam)", span="1105-1111"];
n456 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="ParameterExpression messageParam = Expression.Parameter(typeof(string))", span="1085-1085"];
n457 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="ConstantExpression propertyValuesParam = Expression.Constant(new object[0])", span="1086-1086"];
n468 [cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
n461 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="ParameterExpression exceptionParam = Expression.Parameter(typeof(Exception))", span="1104-1104"];
n464 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", span="1058-1058"];
n469 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", label="_logger = logger", span="1123-1123"];
n470 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", span="1121-1121"];
n471 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1126-1126"];
n472 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="messageFunc == null", span="1128-1128"];
n473 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return IsEnabled(_logger, logLevel);", span="1130-1130"];
n474 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="exception != null", span="1132-1132"];
n475 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return LogException(logLevel, messageFunc, exception);", span="1134-1134"];
n476 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label=logLevel, span="1137-1137"];
n479 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Write(_logger, DebugLevel, messageFunc())", span="1142-1142"];
n483 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Write(_logger, InformationLevel, messageFunc())", span="1149-1149"];
n487 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Write(_logger, WarningLevel, messageFunc())", span="1156-1156"];
n491 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Write(_logger, ErrorLevel, messageFunc())", span="1163-1163"];
n495 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Write(_logger, FatalLevel, messageFunc())", span="1170-1170"];
n498 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Write(_logger, VerboseLevel, messageFunc())", span="1177-1177"];
n477 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Debug", span="1139-1139"];
n481 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Info", span="1146-1146"];
n485 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Warn", span="1153-1153"];
n489 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Error", span="1160-1160"];
n493 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Fatal", span="1167-1167"];
n497 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, VerboseLevel)", span="1175-1175"];
n478 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, DebugLevel)", span="1140-1140"];
n500 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return false;", span="1182-1182"];
n502 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
n480 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1143-1143"];
n504 [cluster="System.Action<T1, T2, T3>.Invoke(T1, T2, T3)", label="Entry System.Action<T1, T2, T3>.Invoke(T1, T2, T3)", span="0-0"];
n482 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, InformationLevel)", span="1147-1147"];
n484 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1150-1150"];
n486 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, WarningLevel)", span="1154-1154"];
n488 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1157-1157"];
n490 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, ErrorLevel)", span="1161-1161"];
n492 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1164-1164"];
n494 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, FatalLevel)", span="1168-1168"];
n496 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1171-1171"];
n499 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1178-1178"];
n501 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1126-1126"];
n503 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1185-1185"];
n505 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label=logLevel, span="1187-1187"];
n508 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="WriteException(_logger, DebugLevel, exception, messageFunc())", span="1192-1192"];
n512 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="WriteException(_logger, InformationLevel, exception, messageFunc())", span="1199-1199"];
n516 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="WriteException(_logger, WarningLevel, exception, messageFunc())", span="1206-1206"];
n520 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="WriteException(_logger, ErrorLevel, exception, messageFunc())", span="1213-1213"];
n524 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="WriteException(_logger, FatalLevel, exception, messageFunc())", span="1220-1220"];
n527 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="WriteException(_logger, VerboseLevel, exception, messageFunc())", span="1227-1227"];
n506 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Debug", span="1189-1189"];
n510 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Info", span="1196-1196"];
n514 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Warn", span="1203-1203"];
n518 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Error", span="1210-1210"];
n522 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="LogLevel.Fatal", span="1217-1217"];
n526 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, VerboseLevel)", span="1225-1225"];
n507 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, DebugLevel)", span="1190-1190"];
n529 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return false;", span="1232-1232"];
n509 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1193-1193"];
n531 [cluster="System.Action<T1, T2, T3, T4>.Invoke(T1, T2, T3, T4)", label="Entry System.Action<T1, T2, T3, T4>.Invoke(T1, T2, T3, T4)", span="0-0"];
n511 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, InformationLevel)", span="1197-1197"];
n513 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1200-1200"];
n515 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, WarningLevel)", span="1204-1204"];
n517 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1207-1207"];
n519 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, ErrorLevel)", span="1211-1211"];
n521 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1214-1214"];
n523 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="IsEnabled(_logger, FatalLevel)", span="1218-1218"];
n525 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1221-1221"];
n528 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1228-1228"];
n530 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1185-1185"];
n532 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", span="1367-1367"];
n533 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", label="MessageFormatter = DefaultMessageFormatter", span="1369-1369"];
n534 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", label="Colors = new Dictionary<LogLevel, ConsoleColor> {\r\n                        { LogLevel.Fatal, ConsoleColor.Red },\r\n                        { LogLevel.Error, ConsoleColor.Yellow },\r\n                        { LogLevel.Warn, ConsoleColor.Magenta },\r\n                        { LogLevel.Info, ConsoleColor.White },\r\n                        { LogLevel.Debug, ConsoleColor.Gray },\r\n                        { LogLevel.Trace, ConsoleColor.DarkGray },\r\n                    }", span="1370-1377"];
n535 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", span="1367-1367"];
n536 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n537 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", span="1380-1380"];
n538 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", label="return new ColouredConsoleLogger(name);", span="1382-1382"];
n539 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", span="1380-1380"];
n540 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", span="1435-1435"];
n541 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", span="1403-1403"];
n542 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="var stringBuilder = new StringBuilder()", span="1405-1405"];
n545 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="stringBuilder.Append((''['' + level.ToString().ToUpper() + '']'').PadRight(8))", span="1412-1412"];
n546 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="stringBuilder.Append(''('' + loggerName + '') '')", span="1414-1414"];
n547 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="stringBuilder.Append(message)", span="1417-1417"];
n548 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="e != null", span="1420-1420"];
n549 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="stringBuilder.Append(Environment.NewLine).Append(e.GetType())", span="1422-1422"];
n550 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="stringBuilder.Append(Environment.NewLine).Append(e.Message)", span="1423-1423"];
n551 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="stringBuilder.Append(Environment.NewLine).Append(e.StackTrace)", span="1424-1424"];
n543 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="stringBuilder.Append(DateTime.Now.ToString(''yyyy-MM-dd hh:mm:ss'', CultureInfo.InvariantCulture))", span="1407-1407"];
n554 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
n544 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="stringBuilder.Append('' '')", span="1409-1409"];
n552 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="return stringBuilder.ToString();", span="1427-1427"];
n555 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
n556 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n557 [cluster="System.Enum.ToString()", label="Entry System.Enum.ToString()", span="0-0"];
n558 [cluster="string.ToUpper()", label="Entry string.ToUpper()", span="0-0"];
n559 [cluster="string.PadRight(int)", label="Entry string.PadRight(int)", span="0-0"];
n560 [cluster="System.Text.StringBuilder.Append(object)", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
n561 [cluster="System.Exception.GetType()", label="Entry System.Exception.GetType()", span="0-0"];
n553 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", span="1403-1403"];
n562 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n563 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", label="_name = name", span="1437-1437"];
n564 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", span="1435-1435"];
n565 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1440-1440"];
n566 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="messageFunc == null", span="1442-1442"];
n568 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Write(logLevel, messageFunc(), exception)", span="1447-1447"];
n567 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1444-1444"];
n569 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="return true;", span="1448-1448"];
n571 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", span="1451-1451"];
n570 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1440-1440"];
n572 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label="var formattedMessage = MessageFormatter(_name, logLevel, message, e)", span="1453-1453"];
n574 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label="Colors.TryGetValue(logLevel, out color)", span="1456-1456"];
n573 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label="ConsoleColor color", span="1454-1454"];
n581 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.MessageFormatterDelegate.Invoke(string, Hangfire.Logging.LogLevel, object, System.Exception)", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.MessageFormatterDelegate.Invoke(string, Hangfire.Logging.LogLevel, object, System.Exception)", span="1393-1393"];
n578 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label="Console.Out.WriteLine(formattedMessage)", span="1464-1464"];
n579 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label="Console.Out.WriteLine(formattedMessage)", span="1474-1474"];
n575 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label=Lock, span="1458-1458"];
n582 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n577 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label="Console.ForegroundColor = color", span="1463-1463"];
n576 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label="var originalColor = Console.ForegroundColor", span="1460-1460"];
n580 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", span="1451-1451"];
n583 [cluster="System.IO.TextWriter.WriteLine(string)", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m1_24 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="64-64"];
m1_25 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="BackgroundProcessContextFacts.cs", label="var connection = CreateAndOpenConnection()", span="66-66"];
m1_26 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="BackgroundProcessContextFacts.cs", label="return new SqlServerConnection(connection, QueueProviders);", span="68-68"];
m1_27 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="64-64"];
m1_40 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.ToString()", span="83-83"];
m1_41 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="85-85"];
m1_42 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value)", span="89-92"];
m1_52 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="return builder.Length != 0 \r\n                    ? String.Format(''SQL Server: {0}'', builder) \r\n                    : canNotParseMessage;", span="116-118"];
m1_54 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="return canNotParseMessage;", span="122-122"];
m1_43 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="var builder = new StringBuilder()", span="94-94"];
m1_45 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="parts.ContainsKey(alias)", span="98-98"];
m1_46 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="builder.AppendFormat(''{1}'', alias, parts[alias])", span="100-100"];
m1_50 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="parts.ContainsKey(alias)", span="109-109"];
m1_51 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="builder.AppendFormat(''{1}'', alias, parts[alias])", span="111-111"];
m1_44 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="96-96"];
m1_47 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="builder.Length != 0", span="105-105"];
m1_48 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="builder.Append(''@'')", span="105-105"];
m1_49 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="new[] { ''Database'', ''Initial Catalog'' }", span="107-107"];
m1_53 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label=Exception, span="120-120"];
m1_55 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerStorage.ToString()", span="83-83"];
m1_62 [cluster="System.Text.StringBuilder.Append(string)", file="BackgroundProcessContextFacts.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_58 [cluster="Unk.ToDictionary", file="BackgroundProcessContextFacts.cs", label="Entry Unk.ToDictionary", span=""];
m1_60 [cluster="Unk.ContainsKey", file="BackgroundProcessContextFacts.cs", label="Entry Unk.ContainsKey", span=""];
m1_63 [cluster="string.Format(string, object)", file="BackgroundProcessContextFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_38 [cluster="Unk.Info", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Info", span=""];
m1_5 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundProcessContextFacts.cs", label="options == null", span="40-40"];
m1_33 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", span="76-76"];
m1_34 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="BackgroundProcessContextFacts.cs", label="logger.Info(''Using the following options for SQL Server job storage:'')", span="78-78"];
m1_35 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="BackgroundProcessContextFacts.cs", label="logger.InfoFormat(''    Queue poll interval: {0}.'', _options.QueuePollInterval)", span="79-79"];
m1_36 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="BackgroundProcessContextFacts.cs", label="logger.InfoFormat(''    Invisibility timeout: {0}.'', _options.InvisibilityTimeout)", span="80-80"];
m1_37 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", span="76-76"];
m1_59 [cluster="System.Text.StringBuilder.StringBuilder()", file="BackgroundProcessContextFacts.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m1_82 [cluster="Unk.Open", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Open", span=""];
m1_39 [cluster="Unk.InfoFormat", file="BackgroundProcessContextFacts.cs", label="Entry Unk.InfoFormat", span=""];
m1_70 [cluster="Unk.Trim", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Trim", span=""];
m1_19 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(HangFire.SqlServer.IPersistentJobQueueProvider)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(HangFire.SqlServer.IPersistentJobQueueProvider)", span="31-31"];
m1_81 [cluster="SqlConnection.cstr", file="BackgroundProcessContextFacts.cs", label="Entry SqlConnection.cstr", span=""];
m1_61 [cluster="Unk.AppendFormat", file="BackgroundProcessContextFacts.cs", label="Entry Unk.AppendFormat", span=""];
m1_13 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundProcessContextFacts.cs", label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="54-54"];
m1_7 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundProcessContextFacts.cs", label="_options = options", span="42-42"];
m1_18 [cluster="HangFire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(HangFire.SqlServer.SqlServerStorageOptions)", span="25-25"];
m1_20 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="59-59"];
m1_21 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="BackgroundProcessContextFacts.cs", label="return new SqlServerMonitoringApi(CreateAndOpenConnection(), QueueProviders);", span="61-61"];
m1_22 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="59-59"];
m1_32 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m1_2 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="BackgroundProcessContextFacts.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Server watchdog'', ''\r\n  As an Administrator, I would like if the crashed servers \r\n  are automaticall'' +\r\n                    ''y removed.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35"];
m1_3 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="BackgroundProcessContextFacts.cs", label="testRunner.OnFeatureStart(featureInfo)", span="36-36"];
m1_8 [cluster="Unk.OnFeatureStart", file="BackgroundProcessContextFacts.cs", label="Entry Unk.OnFeatureStart", span=""];
m1_9 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", span="40-40"];
m1_12 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", span="40-40"];
m1_4 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m1_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="BackgroundProcessContextFacts.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m1_10 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", color=green, community=0, file="BackgroundProcessContextFacts.cs", label="testRunner.OnFeatureEnd()", prediction=0, span="42-42"];
m1_11 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", color=green, community=0, file="BackgroundProcessContextFacts.cs", label="testRunner = null", prediction=1, span="43-43"];
m1_14 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.TestInitialize()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.TestInitialize()", span="47-47"];
m1_15 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.TestInitialize()", color=green, community=0, file="BackgroundProcessContextFacts.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Server watchdog''))", prediction=2, span="49-50"];
m1_16 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="126-126"];
m1_17 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m1_56 [cluster="string.Split(char[], System.StringSplitOptions)", file="BackgroundProcessContextFacts.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m1_0 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32"];
m1_1 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32"];
m1_74 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="92-92"];
m1_64 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="90-90"];
m1_67 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="91-91"];
m1_71 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="92-92"];
m1_65 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="90-90"];
m1_66 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="90-90"];
m1_68 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="91-91"];
m1_69 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="91-91"];
m1_72 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.Key", span="92-92"];
m1_73 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="92-92"];
m1_75 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.Value", span="92-92"];
m1_76 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="92-92"];
m1_23 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36"];
m1_57 [cluster="Unk.Select", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Select", span=""];
m1_29 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="71-71"];
m1_30 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="BackgroundProcessContextFacts.cs", label="yield return new ExpirationManager(this);", span="73-73"];
m1_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="71-71"];
m1_77 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundProcessContextFacts.cs", label="var connection = new SqlConnection(_connectionString)", span="128-128"];
m1_78 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundProcessContextFacts.cs", label="connection.Open()", span="129-129"];
m1_79 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundProcessContextFacts.cs", label="return connection;", span="131-131"];
m1_80 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="126-126"];
m1_28 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m1_83 [file="BackgroundProcessContextFacts.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m2_0 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", file="BackgroundProcessContextMock.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", span="15-15"];
m2_3 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", color=green, community=0, file="BackgroundProcessContextMock.cs", label="Assert.Equal(typeof(NonGenericClass.NestedNonGenericClass.DoubleNestedNonGenericClass).ToGenericTypeString(), ''NonGenericClass.NestedNonGenericClass.DoubleNestedNonGenericClass'')", prediction=3, span="19-19"];
m2_4 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", file="BackgroundProcessContextMock.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", span="15-15"];
m2_5 [cluster="System.Type.ToGenericTypeString()", color=green, community=0, file="BackgroundProcessContextMock.cs", label="Entry System.Type.ToGenericTypeString()", prediction=4, span="26-26"];
m2_1 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", file="BackgroundProcessContextMock.cs", label="Assert.Equal(typeof(NonGenericClass).ToGenericTypeString(), ''NonGenericClass'')", span="17-17"];
m2_6 [cluster="Unk.Equal", file="BackgroundProcessContextMock.cs", label="Entry Unk.Equal", span=""];
m2_10 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", file="BackgroundProcessContextMock.cs", label="Assert.Equal(typeof(GenericClass<>.NestedNonGenericClass).ToGenericTypeString(), ''GenericClass<T0>.NestedNonGenericClass'')", span="27-27"];
m2_7 [cluster="Mock<JobStorage>.cstr", file="BackgroundProcessContextMock.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m2_8 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", file="BackgroundProcessContextMock.cs", label="Assert.Equal(typeof(NonGenericClass.NestedGenericClass<,>).ToGenericTypeString(), ''NonGenericClass.NestedGenericClass<T1,T2>'')", span="25-25"];
m2_9 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m2_11 [cluster="lambda expression", file="BackgroundProcessContextMock.cs", label="Entry lambda expression", span="20-20"];
m2_12 [cluster="lambda expression", color=green, community=0, file="BackgroundProcessContextMock.cs", label="new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token)", prediction=3, span="20-20"];
m2_19 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", file="BackgroundProcessContextMock.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", span="41-41"];
m2_20 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", file="BackgroundProcessContextMock.cs", label="Assert.Equal(''ClassWithoutNamespace'', typeof(ClassWithoutNamespace).ToGenericTypeString())", span="43-43"];
m2_21 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", file="BackgroundProcessContextMock.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", span="41-41"];
m2_14 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", file="BackgroundProcessContextMock.cs", label="Assert.Equal(typeof(NonGenericClass.NestedGenericClass<Assert, List<Assert>>).ToGenericTypeString(), ''NonGenericClass.NestedGenericClass<Assert,List<Assert>>'')", span="34-34"];
m2_13 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", file="BackgroundProcessContextMock.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", span="32-32"];
m2_15 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", file="BackgroundProcessContextMock.cs", label="Hangfire.Core.Tests.BackgroundProcessContextMock", span=""];
m2_16 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", file="BackgroundProcessContextMock.cs", label="Assert.Equal(typeof(GenericClass<List<Assert>>.NestedNonGenericClass).ToGenericTypeString(), ''GenericClass<List<Assert>>.NestedNonGenericClass'')", span="36-36"];
m2_17 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", file="BackgroundProcessContextMock.cs", label="Assert.Equal(typeof(GenericClass<List<GenericClass<List<Assert>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert, List<Assert>, Stack<Assert>>>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert, List<Assert>, Stack<Assert>>).ToGenericTypeString(), ''GenericClass<List<GenericClass<List<Assert>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert,List<Assert>,Stack<Assert>>>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert,List<Assert>,Stack<Assert>>'')", span="37-37"];
m2_18 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", file="BackgroundProcessContextMock.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", span="32-32"];
m4_42 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m4_41 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m4_40 [cluster="Hangfire.JobStorage.GetConnection()", file="DelayedJobScheduler.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m4_2 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="41-41"];
m4_3 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="41-41"];
m4_46 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="DelayedJobScheduler.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m4_45 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="DelayedJobScheduler.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m4_20 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="DelayedJobScheduler.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m4_19 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="78-78"];
m4_26 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="var connection = context.Storage.GetConnection()", span="80-80"];
m4_27 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="DelayedJobScheduler.cs", label="var connection = context.Storage.GetConnection()", prediction=6, span="131-131"];
m4_29 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="DelayedJobScheduler.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", prediction=7, span="134-134"];
m4_35 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="appliedState == null", span="157-157"];
m4_28 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="connection.AcquireDistributedLock(''locks:schedulepoller'', DefaultLockTimeout)", span="132-132"];
m4_30 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="DelayedJobScheduler.cs", label="var jobId = connection.GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", prediction=8, span="137-137"];
m4_36 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="DelayedJobScheduler.cs", label="var transaction = connection.CreateWriteTransaction()", prediction=9, span="162-162"];
m4_31 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="String.IsNullOrEmpty(jobId)", span="139-139"];
m4_34 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="DelayedJobScheduler.cs", label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = String.Format(''Triggered by {0}'', ToString()) }, \r\n                    ScheduledState.StateName))", prediction=10, span="150-155"];
m4_38 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="transaction.Commit()", span="165-165"];
m4_37 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="transaction.RemoveFromSet(''schedule'', jobId)", span="164-164"];
m4_39 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="78-78"];
m4_25 [cluster="object.GetType()", file="DelayedJobScheduler.cs", label="Entry object.GetType()", span="0-0"];
m4_48 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="DelayedJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m4_49 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m4_21 [cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23"];
m4_22 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.ToString()", span="73-73"];
m4_23 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="DelayedJobScheduler.cs", label="return GetType().Name;", span="75-75"];
m4_24 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.ToString()", span="73-73"];
m4_44 [cluster="string.IsNullOrEmpty(string)", file="DelayedJobScheduler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_50 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="DelayedJobScheduler.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m4_43 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m4_0 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="36-36"];
m4_1 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="36-36"];
m4_47 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="DelayedJobScheduler.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m4_11 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="54-54"];
m4_12 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="DelayedJobScheduler.cs", label="var jobsEnqueued = 0", prediction=11, span="103-103"];
m4_16 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="DelayedJobScheduler.cs", label="jobsEnqueued != 0", prediction=11, span="115-115"];
m4_17 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="DelayedJobScheduler.cs", label="Logger.InfoFormat(''{0} scheduled job(s) enqueued.'', jobsEnqueued)", prediction=13, span="117-117"];
m4_15 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="DelayedJobScheduler.cs", label="context.CancellationToken.IsCancellationRequested", prediction=14, span="109-109"];
m4_18 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="54-54"];
m4_4 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="46-46"];
m4_5 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="DelayedJobScheduler.cs", label="stateChanger == null", prediction=15, span="90-90"];
m4_7 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="DelayedJobScheduler.cs", label="_stateChanger = stateChanger", prediction=16, span="92-92"];
m4_6 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="DelayedJobScheduler.cs", label="throw new ArgumentNullException(''stateChanger'');", prediction=17, span="90-90"];
m4_9 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="88-88"];
m4_51 [file="DelayedJobScheduler.cs", label="Hangfire.Server.DelayedJobScheduler", span=""];
m4_53 [file="DelayedJobScheduler.cs", label="Hangfire.Server.DelayedJobScheduler", span=""];
m5_0 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.IServerProcess)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.IServerProcess)", span="23-23"];
m5_1 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.IServerProcess)", file="InfiniteLoopProcess.cs", label="innerProcess == null", span="25-25"];
m5_3 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.IServerProcess)", file="InfiniteLoopProcess.cs", label="InnerProcess = innerProcess", span="26-26"];
m5_2 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.IServerProcess)", file="InfiniteLoopProcess.cs", label="throw new ArgumentNullException(''innerProcess'');", span="25-25"];
m5_4 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.IServerProcess)", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.IServerProcess)", span="23-23"];
m5_13 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="40-40"];
m5_14 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopProcess.cs", label="return InnerProcess.ToString();", span="42-42"];
m5_15 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.ToString()", span="40-40"];
m5_6 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m5_7 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="InfiniteLoopProcess.cs", label=true, prediction=18, span="33-33"];
m5_9 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label="InnerProcess.Execute(context)", span="36-36"];
m5_10 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m5_12 [cluster="Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26"];
m5_16 [cluster="object.ToString()", file="InfiniteLoopProcess.cs", label="Entry object.ToString()", span="0-0"];
m5_11 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="InfiniteLoopProcess.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m5_17 [file="InfiniteLoopProcess.cs", label="Hangfire.Server.InfiniteLoopProcess", span=""];
m6_36 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m6_113 [cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m6_1 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="RecurringJobScheduler.cs", label=Redis, span="14-14"];
m6_3 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m6_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m6_7 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="RecurringJobScheduler.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24"];
m6_8 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m6_9 [cluster="string.Format(string, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_10 [cluster="Unk.GetListCount", file="RecurringJobScheduler.cs", label="Entry Unk.GetListCount", span=""];
m6_2 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="RecurringJobScheduler.cs", label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16"];
m6_4 [cluster="Unk.GetSortedSetCount", file="RecurringJobScheduler.cs", label="Entry Unk.GetSortedSetCount", span=""];
m6_6 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="RecurringJobScheduler.cs", label=Redis, span="22-22"];
m6_11 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m6_28 [cluster="Unk.GetRangeFromSortedSet", file="RecurringJobScheduler.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m6_291 [cluster="Unk.TryParse", file="RecurringJobScheduler.cs", label="Entry Unk.TryParse", span=""];
m6_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="RecurringJobScheduler.cs", label="Hangfire.Dashboard.DashboardMiddleware", span=""];
m6_133 [cluster="int.Parse(string)", file="RecurringJobScheduler.cs", label="Entry int.Parse(string)", span="0-0"];
m6_43 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m6_45 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="RecurringJobScheduler.cs", label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", prediction=19, span="84-87"];
m6_44 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label=Redis, span="82-82"];
m6_46 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="RecurringJobScheduler.cs", label="scheduledJobs.Count == 0", prediction=20, span="89-89"];
m6_51 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label=scheduledJobs, span="99-99"];
m6_56 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129"];
m6_47 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="return new Dictionary<string, ScheduleDto>();", span="91-91"];
m6_48 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="var jobs = new Dictionary<string, List<string>>()", span="94-94"];
m6_54 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", prediction=21, span="109-113"];
m6_49 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="var states = new Dictionary<string, string>()", span="95-95"];
m6_53 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107"];
m6_50 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="var pipeline = Redis.CreatePipeline()", span="97-97"];
m6_52 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="var job = scheduledJob", span="101-101"];
m6_55 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="pipeline.Flush()", span="116-116"];
m6_57 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m6_38 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="65-65"];
m6_214 [cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m6_386 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m6_27 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m6_29 [cluster="Hangfire.Dashboard.IRequestDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Dashboard.IRequestDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", span="22-22"];
m6_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m6_359 [cluster="KeyValuePair<string, T>.cstr", file="RecurringJobScheduler.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m6_197 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m6_60 [cluster="Unk.CreatePipeline", file="RecurringJobScheduler.cs", label="Entry Unk.CreatePipeline", span=""];
m6_76 [cluster="Unk.GetValueFromHash", file="RecurringJobScheduler.cs", label="Entry Unk.GetValueFromHash", span=""];
m6_23 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", span="50-50"];
m6_24 [cluster="Unk.FindDispatcher", color=green, community=0, file="RecurringJobScheduler.cs", label="Entry Unk.FindDispatcher", prediction=22, span=""];
m6_25 [cluster="Unk.Invoke", color=green, community=0, file="RecurringJobScheduler.cs", label="Entry Unk.Invoke", prediction=23, span=""];
m6_26 [cluster="Unk.Authorize", color=green, community=0, file="RecurringJobScheduler.cs", label="Entry Unk.Authorize", prediction=24, span=""];
m6_134 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m6_257 [cluster="Unk.ContainsKey", file="RecurringJobScheduler.cs", label="Entry Unk.ContainsKey", span=""];
m6_234 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RecurringJobScheduler.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m6_173 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m6_331 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="518-520"];
m6_333 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="524-526"];
m6_335 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="533-543"];
m6_330 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="var id = jobId", span="516-516"];
m6_328 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="var pipeline = redis.CreatePipeline()", span="512-512"];
m6_326 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509"];
m6_332 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="stateProperties != null", span="522-522"];
m6_327 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="510-510"];
m6_329 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label=jobIds, span="514-514"];
m6_334 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="pipeline.Flush()", span="530-530"];
m6_324 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="jobIds.Count == 0", span="507-507"];
m6_325 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="return new List<KeyValuePair<string, T>>();", span="507-507"];
m6_336 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m6_361 [cluster="Unk.selector", file="RecurringJobScheduler.cs", label="Entry Unk.selector", span=""];
m6_345 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_12 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=green, community=0, file="RecurringJobScheduler.cs", label=Redis, prediction=25, span="30-30"];
m6_13 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", color=green, community=0, file="RecurringJobScheduler.cs", label="Entry Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", prediction=26, span="50-50"];
m6_14 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="RecurringJobScheduler.cs", label="var dispatcher = _routes.FindDispatcher(context.Request.Path.Value)", span="52-52"];
m6_219 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439"];
m6_276 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="450-450"];
m6_278 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var result = new Dictionary<DateTime, long>()", span="453-453"];
m6_270 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var dates = new List<DateTime>()", span="443-443"];
m6_272 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="i < 24", span="444-444"];
m6_277 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="451-451"];
m6_279 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var i = 0", span="454-454"];
m6_284 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="result.Add(dates[i], value)", span="462-462"];
m6_286 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="return result;", span="465-465"];
m6_271 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var i = 0", span="444-444"];
m6_280 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="i < dates.Count", span="454-454"];
m6_269 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var endDate = DateTime.UtcNow", span="442-442"];
m6_273 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="dates.Add(endDate)", span="446-446"];
m6_275 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="i++", span="444-444"];
m6_282 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="457-457"];
m6_285 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="i++", span="454-454"];
m6_283 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="value = 0", span="459-459"];
m6_281 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="long value", span="456-456"];
m6_274 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="endDate = endDate.AddHours(-1)", span="447-447"];
m6_287 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439"];
m6_232 [cluster="Unk.TryToGetQueue", file="RecurringJobScheduler.cs", label="Entry Unk.TryToGetQueue", span=""];
m6_58 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="RecurringJobScheduler.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m6_132 [cluster="HangFire.Web.ServerDto.ServerDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m6_258 [cluster="Unk.Where", file="RecurringJobScheduler.cs", label="Entry Unk.Where", span=""];
m6_236 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m6_238 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RecurringJobScheduler.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="397-397"];
m6_237 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RecurringJobScheduler.cs", label=Redis, span="395-395"];
m6_239 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RecurringJobScheduler.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="398-398"];
m6_242 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RecurringJobScheduler.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="405-408"];
m6_240 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RecurringJobScheduler.cs", label="String.IsNullOrEmpty(queue)", span="400-400"];
m6_241 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RecurringJobScheduler.cs", label="return false;", span="402-402"];
m6_243 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m6_174 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m6_317 [cluster="System.DateTime.AddDays(double)", file="RecurringJobScheduler.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m6_360 [cluster="Unk.TrueForAll", file="RecurringJobScheduler.cs", label="Entry Unk.TrueForAll", span=""];
m6_362 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="542-542"];
m6_32 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="66-76"];
m6_40 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="76-76"];
m6_33 [cluster="lambda expression", color=green, community=0, file="RecurringJobScheduler.cs", label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", prediction=27, span="66-76"];
m6_34 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="66-76"];
m6_41 [cluster="lambda expression", color=green, community=0, file="RecurringJobScheduler.cs", label="x.Value.StartedAt", prediction=28, span="76-76"];
m6_42 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="76-76"];
m6_73 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="110-112"];
m6_77 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="113-113"];
m6_78 [cluster="lambda expression", color=green, community=0, file="RecurringJobScheduler.cs", label="states.Add(job.Key, x)", prediction=21, span="113-113"];
m6_79 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="113-113"];
m6_74 [cluster="lambda expression", color=green, community=0, file="RecurringJobScheduler.cs", label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", prediction=21, span="110-112"];
m6_75 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="110-112"];
m6_129 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="184-191"];
m6_130 [cluster="lambda expression", color=green, community=0, file="RecurringJobScheduler.cs", label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", prediction=31, span="184-191"];
m6_131 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="184-191"];
m6_339 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="519-519"];
m6_347 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="525-525"];
m6_183 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269"];
m6_189 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273"];
m6_427 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="592-592"];
m6_401 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="573-573"];
m6_407 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="577-577"];
m6_421 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="585-585"];
m6_84 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129"];
m6_142 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219"];
m6_152 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244"];
m6_195 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290"];
m6_204 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326"];
m6_212 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352"];
m6_80 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="120-120"];
m6_83 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="121-129"];
m6_70 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="jobs.Add(job.Key, x)", span="107-107"];
m6_64 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="104-106"];
m6_69 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="107-107"];
m6_65 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106"];
m6_120 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="servers.Add(name, x)", span="173-173"];
m6_127 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="queues.Add(name, x)", span="178-178"];
m6_343 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="jobs.Add(id, x)", span="520-520"];
m6_351 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="states.Add(id, x)", span="526-526"];
m6_117 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172"];
m6_123 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177"];
m6_177 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265"];
m6_322 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="482-482"];
m6_338 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="519-519"];
m6_340 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="519-519"];
m6_346 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="525-525"];
m6_348 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="525-525"];
m6_182 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="269-269"];
m6_184 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="269-269"];
m6_188 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="273-273"];
m6_190 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="273-273"];
m6_426 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="592-592"];
m6_428 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="592-592"];
m6_400 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="573-573"];
m6_402 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="573-573"];
m6_406 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="577-577"];
m6_408 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="577-577"];
m6_420 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="585-585"];
m6_422 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="585-585"];
m6_141 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="209-219"];
m6_151 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="237-244"];
m6_203 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="320-326"];
m6_211 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="344-352"];
m6_85 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="121-129"];
m6_143 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="209-219"];
m6_153 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="237-244"];
m6_194 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="284-290"];
m6_196 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="284-290"];
m6_205 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="320-326"];
m6_213 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="344-352"];
m6_82 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="120-120"];
m6_81 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="job.Key", span="120-120"];
m6_71 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="107-107"];
m6_66 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="104-106"];
m6_116 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="170-172"];
m6_119 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="173-173"];
m6_122 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="176-177"];
m6_126 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="178-178"];
m6_176 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="264-265"];
m6_179 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="266-266"];
m6_185 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="270-270"];
m6_191 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="274-274"];
m6_341 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="520-520"];
m6_349 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="526-526"];
m6_387 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="565-565"];
m6_391 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="566-566"];
m6_394 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="569-569"];
m6_397 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="570-570"];
m6_403 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="574-574"];
m6_409 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="578-578"];
m6_412 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="581-581"];
m6_416 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="582-582"];
m6_423 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="586-586"];
m6_429 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="593-593"];
m6_121 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="173-173"];
m6_128 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="178-178"];
m6_342 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="!jobs.ContainsKey(id)", span="520-520"];
m6_344 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="520-520"];
m6_350 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="!states.ContainsKey(id)", span="526-526"];
m6_352 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="526-526"];
m6_118 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="170-172"];
m6_124 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="176-177"];
m6_178 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="264-265"];
m6_321 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="482-482"];
m6_323 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="482-482"];
m6_293 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="450-450"];
m6_318 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="481-481"];
m6_353 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="534-539"];
m6_356 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="540-542"];
m6_259 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="433-433"];
m6_263 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="433-433"];
m6_266 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="433-433"];
m6_260 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="!hiddenProperties.Contains(x.Key)", span="433-433"];
m6_357 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="540-542"];
m6_181 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="266-266"];
m6_180 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="firstJobIds = x", span="266-266"];
m6_187 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="270-270"];
m6_186 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="length = x", span="270-270"];
m6_193 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="274-274"];
m6_192 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="dequeued = x", span="274-274"];
m6_354 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="534-539"];
m6_392 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="stats.Servers = x", span="566-566"];
m6_398 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="stats.Queues = x", span="570-570"];
m6_404 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="stats.Scheduled = x", span="574-574"];
m6_410 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="stats.Processing = x", span="578-578"];
m6_417 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="582-582"];
m6_424 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="stats.Failed = x", span="586-586"];
m6_430 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="stats.Enqueued += x", span="593-593"];
m6_389 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="565-565"];
m6_388 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetSetCount(''hangfire:servers'')", span="565-565"];
m6_393 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="566-566"];
m6_396 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="569-569"];
m6_395 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetSetCount(''hangfire:queues'')", span="569-569"];
m6_399 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="570-570"];
m6_405 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="574-574"];
m6_411 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="578-578"];
m6_414 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="581-581"];
m6_413 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="581-581"];
m6_418 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="582-582"];
m6_425 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="586-586"];
m6_431 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="593-593"];
m6_294 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="450-450"];
m6_295 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="450-450"];
m6_320 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="481-481"];
m6_319 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.ToString(''yyyy-MM-dd'')", span="481-481"];
m6_355 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="534-539"];
m6_358 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="540-542"];
m6_261 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="433-433"];
m6_265 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="433-433"];
m6_264 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.Key", span="433-433"];
m6_268 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="433-433"];
m6_267 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.Value", span="433-433"];
m6_363 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="y == null", span="542-542"];
m6_364 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="542-542"];
m6_175 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_115 [cluster="Unk.ToList", file="RecurringJobScheduler.cs", label="Entry Unk.ToList", span=""];
m6_67 [cluster="Unk.Format", file="RecurringJobScheduler.cs", label="Entry Unk.Format", span=""];
m6_220 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m6_222 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RecurringJobScheduler.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368"];
m6_221 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RecurringJobScheduler.cs", label=Redis, span="366-366"];
m6_223 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m6_35 [cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5"];
m6_61 [cluster="Unk.QueueCommand", file="RecurringJobScheduler.cs", label="Entry Unk.QueueCommand", span=""];
m6_135 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m6_138 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RecurringJobScheduler.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219"];
m6_137 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RecurringJobScheduler.cs", label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202"];
m6_136 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RecurringJobScheduler.cs", label=Redis, span="197-197"];
m6_139 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m6_37 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m6_144 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m6_87 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="RecurringJobScheduler.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m6_296 [cluster="System.DateTime.ToString(string)", file="RecurringJobScheduler.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m6_145 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m6_148 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RecurringJobScheduler.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244"];
m6_147 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RecurringJobScheduler.cs", label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230"];
m6_146 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RecurringJobScheduler.cs", label=Redis, span="225-225"];
m6_149 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m6_172 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RecurringJobScheduler.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m6_290 [cluster="Unk.ElementAt", file="RecurringJobScheduler.cs", label="Entry Unk.ElementAt", span=""];
m6_150 [cluster="Unk.GetRangeFromList", file="RecurringJobScheduler.cs", label="Entry Unk.GetRangeFromList", span=""];
m6_155 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="248-248"];
m6_164 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266"];
m6_165 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270"];
m6_166 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274"];
m6_159 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label=queues, span="255-255"];
m6_163 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="var pipeline = Redis.CreatePipeline()", span="261-261"];
m6_160 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="IList<string> firstJobIds = null", span="257-257"];
m6_168 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290"];
m6_161 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="long length = 0", span="258-258"];
m6_169 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298"];
m6_162 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="long dequeued = 0", span="259-259"];
m6_167 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="pipeline.Flush()", span="276-276"];
m6_157 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252"];
m6_158 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253"];
m6_170 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="return result;", span="301-301"];
m6_156 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label=Redis, span="250-250"];
m6_171 [cluster="HangFire.Web.JobStorage.Queues()", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="248-248"];
m6_88 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m6_90 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RecurringJobScheduler.cs", label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137"];
m6_89 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RecurringJobScheduler.cs", label=Redis, span="135-135"];
m6_91 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m6_62 [cluster="Unk.Flush", file="RecurringJobScheduler.cs", label="Entry Unk.Flush", span=""];
m6_154 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5"];
m6_419 [cluster="Unk.Parse", file="RecurringJobScheduler.cs", label="Entry Unk.Parse", span=""];
m6_72 [cluster="Unk.Add", file="RecurringJobScheduler.cs", label="Entry Unk.Add", span=""];
m6_97 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="149-149"];
m6_110 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="RecurringJobScheduler.cs", label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", prediction=32, span="184-191"];
m6_99 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153"];
m6_102 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="var servers = new Dictionary<string, List<string>>()", span="160-160"];
m6_103 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="var queues = new Dictionary<string, List<string>>()", span="161-161"];
m6_109 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="pipeline.Flush()", span="181-181"];
m6_107 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173"];
m6_108 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178"];
m6_98 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label=Redis, span="151-151"];
m6_100 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="serverNames.Count == 0", span="155-155"];
m6_105 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label=serverNames, span="165-165"];
m6_104 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="var pipeline = Redis.CreatePipeline()", span="163-163"];
m6_101 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="return new List<ServerDto>();", span="157-157"];
m6_106 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="var name = serverName", span="167-167"];
m6_111 [cluster="HangFire.Web.JobStorage.Servers()", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="149-149"];
m6_369 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m6_374 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="564-566"];
m6_375 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="568-570"];
m6_376 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="572-574"];
m6_377 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="576-578"];
m6_378 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="580-582"];
m6_379 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="584-586"];
m6_382 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="591-593"];
m6_381 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="var queueName = queue", span="590-590"];
m6_373 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="var pipeline = Redis.CreatePipeline()", span="562-562"];
m6_371 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="var stats = new StatisticsDto()", span="558-558"];
m6_380 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label=queues, span="588-588"];
m6_372 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="560-560"];
m6_383 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="pipeline.Flush()", span="596-596"];
m6_370 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label=Redis, span="556-556"];
m6_384 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="return stats;", span="599-599"];
m6_385 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m6_365 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m6_367 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RecurringJobScheduler.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="550-550"];
m6_366 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RecurringJobScheduler.cs", label=Redis, span="548-548"];
m6_368 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m6_215 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m6_217 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="RecurringJobScheduler.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360"];
m6_216 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="RecurringJobScheduler.cs", label=Redis, span="358-358"];
m6_218 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m6_39 [cluster="string.Equals(string, System.StringComparison)", file="RecurringJobScheduler.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m6_235 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="RecurringJobScheduler.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m6_288 [cluster="System.DateTime.AddHours(double)", file="RecurringJobScheduler.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m6_92 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468"];
m6_305 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="482-482"];
m6_304 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="481-481"];
m6_307 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var result = new Dictionary<DateTime, long>()", span="486-486"];
m6_306 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="484-484"];
m6_301 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="startDate <= endDate", span="475-475"];
m6_300 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var dates = new List<DateTime>()", span="473-473"];
m6_309 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="i < stringDates.Count", span="487-487"];
m6_308 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var i = 0", span="487-487"];
m6_313 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="result.Add(dates[i], value)", span="494-494"];
m6_315 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="return result;", span="497-497"];
m6_298 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var endDate = DateTime.UtcNow.Date", span="471-471"];
m6_311 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="490-490"];
m6_299 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="var startDate = endDate.AddDays(-7)", span="472-472"];
m6_303 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="endDate = endDate.AddDays(-1)", span="478-478"];
m6_302 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="dates.Add(endDate)", span="477-477"];
m6_314 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="i++", span="487-487"];
m6_310 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="long value", span="489-489"];
m6_312 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="value = 0", span="492-492"];
m6_316 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468"];
m6_15 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="RecurringJobScheduler.cs", label="dispatcher == null", span="54-54"];
m6_16 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", color=green, community=0, file="RecurringJobScheduler.cs", label="return Next.Invoke(context);", prediction=26, span="56-56"];
m6_17 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", color=green, community=0, file="RecurringJobScheduler.cs", label=_authorizationFilters, prediction=34, span="59-59"];
m6_18 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="RecurringJobScheduler.cs", label="!filter.Authorize(context.Environment)", span="61-61"];
m6_255 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m6_244 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="412-412"];
m6_246 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="416-416"];
m6_250 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="421-422"];
m6_251 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="424-426"];
m6_245 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label=Redis, span="414-414"];
m6_247 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label="job.Count == 0", span="417-417"];
m6_252 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="428-435"];
m6_249 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="419-419"];
m6_248 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label="return null;", span="417-417"];
m6_253 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="412-412"];
m6_292 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_297 [cluster="string.Format(string, object, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_254 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobScheduler.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m6_63 [cluster="Unk.ToDictionary", file="RecurringJobScheduler.cs", label="Entry Unk.ToDictionary", span=""];
m6_337 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m6_390 [cluster="Unk.GetSetCount", file="RecurringJobScheduler.cs", label="Entry Unk.GetSetCount", span=""];
m6_206 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m6_208 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337"];
m6_209 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352"];
m6_207 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label=Redis, span="333-333"];
m6_210 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m6_93 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m6_95 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RecurringJobScheduler.cs", label="return GetTimelineStats(Redis, ''failed'');", span="145-145"];
m6_94 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RecurringJobScheduler.cs", label=Redis, span="143-143"];
m6_96 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m6_256 [cluster="Unk.>", file="RecurringJobScheduler.cs", label="Entry Unk.>", span=""];
m6_86 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m6_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_233 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobScheduler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_289 [cluster="Unk.GetValuesMap", file="RecurringJobScheduler.cs", label="Entry Unk.GetValuesMap", span=""];
m6_19 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="RecurringJobScheduler.cs", label="context.Response.StatusCode = (int) HttpStatusCode.Unauthorized", span="63-63"];
m6_20 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", color=green, community=0, file="RecurringJobScheduler.cs", label="return Task.FromResult(false);", prediction=35, span="64-64"];
m6_21 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", color=green, community=0, file="RecurringJobScheduler.cs", label="var dispatcherContext = new RequestDispatcherContext(\r\n                _appPath,\r\n                _storage,\r\n                context.Environment,\r\n                dispatcher.Item2)", prediction=36, span="68-72"];
m6_22 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="RecurringJobScheduler.cs", label="return dispatcher.Item1.Dispatch(dispatcherContext);", span="74-74"];
m6_125 [cluster="Unk.GetAllItemsFromList", file="RecurringJobScheduler.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m6_262 [cluster="Unk.Contains", file="RecurringJobScheduler.cs", label="Entry Unk.Contains", span=""];
m6_114 [cluster="Unk.Select", file="RecurringJobScheduler.cs", label="Entry Unk.Select", span=""];
m6_112 [cluster="Unk.GetAllItemsFromSet", file="RecurringJobScheduler.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m6_140 [cluster="Unk.GetRangeFromSortedSetDesc", file="RecurringJobScheduler.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m6_415 [cluster="Unk.GetValue", file="RecurringJobScheduler.cs", label="Entry Unk.GetValue", span=""];
m6_68 [cluster="Unk.GetValuesFromHash", file="RecurringJobScheduler.cs", label="Entry Unk.GetValuesFromHash", span=""];
m6_224 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m6_226 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RecurringJobScheduler.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376"];
m6_225 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RecurringJobScheduler.cs", label=Redis, span="374-374"];
m6_227 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RecurringJobScheduler.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378"];
m6_230 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RecurringJobScheduler.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-389"];
m6_229 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RecurringJobScheduler.cs", label="return false;", span="381-381"];
m6_228 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RecurringJobScheduler.cs", label="String.IsNullOrEmpty(queue)", span="379-379"];
m6_231 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m6_198 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m6_200 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313"];
m6_201 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326"];
m6_199 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label=Redis, span="308-308"];
m6_202 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RecurringJobScheduler.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m6_432 [file="RecurringJobScheduler.cs", label=job, span=""];
m6_434 [file="RecurringJobScheduler.cs", label=states, span=""];
m6_436 [file="RecurringJobScheduler.cs", label=servers, span=""];
m6_437 [file="RecurringJobScheduler.cs", label=queues, span=""];
m6_442 [file="RecurringJobScheduler.cs", label="string[]", span=""];
m6_443 [file="RecurringJobScheduler.cs", label=id, span=""];
m6_445 [file="RecurringJobScheduler.cs", label="string[]", span=""];
m6_438 [file="RecurringJobScheduler.cs", label=queue, span=""];
m6_449 [file="RecurringJobScheduler.cs", label=queueName, span=""];
m6_433 [file="RecurringJobScheduler.cs", label=jobs, span=""];
m6_435 [file="RecurringJobScheduler.cs", label=name, span=""];
m6_444 [file="RecurringJobScheduler.cs", label=jobs, span=""];
m6_446 [file="RecurringJobScheduler.cs", label=states, span=""];
m6_441 [file="RecurringJobScheduler.cs", label=string, span=""];
m6_439 [file="RecurringJobScheduler.cs", label=hiddenProperties, span=""];
m6_447 [file="RecurringJobScheduler.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m6_448 [file="RecurringJobScheduler.cs", label=stats, span=""];
m6_440 [file="RecurringJobScheduler.cs", label=string, span=""];
n584 -> n193  [color=darkseagreen4, key=1, label="Hangfire.Logging.LoggerExecutionWrapper", style=dashed];
n584 -> n200  [color=darkseagreen4, key=1, label="Hangfire.Logging.LoggerExecutionWrapper", style=dashed];
n584 -> n195  [color=darkseagreen4, key=1, label="Hangfire.Logging.LoggerExecutionWrapper", style=dashed];
n585 -> n198  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n586 -> n215  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider", style=dashed];
n587 -> n240  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n242  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n245  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n246  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n249  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n250  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n253  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n254  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n257  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n258  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n261  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n262  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n264  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n265  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n279  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n280  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n283  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n284  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n287  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n288  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n291  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n292  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n295  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n296  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n298  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n299  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n311  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n313  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n315  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n317  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n319  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n587 -> n320  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
n588 -> n329  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider", style=dashed];
n589 -> n349  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n351  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n354  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n355  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n358  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n359  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n362  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n363  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n366  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n367  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n369  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n370  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n378  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n379  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n382  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n383  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n386  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n387  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n390  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n391  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n393  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n394  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n400  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n402  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n404  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n406  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n408  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n589 -> n409  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
n590 -> n418  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider", style=dashed];
n591 -> n436  [color=darkseagreen4, key=1, label=func, style=dashed];
n592 -> n473  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n475  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n478  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n479  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n482  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n483  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n486  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n487  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n490  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n491  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n494  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n495  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n497  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n498  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n507  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n508  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n511  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n512  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n515  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n516  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n519  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n520  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n523  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n524  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n526  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n592 -> n527  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
n593 -> n568  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger", style=dashed];
n2 -> n4  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n6 -> n130  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n7 -> n9  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n11 -> n13  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n15 -> n17  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n19 -> n21  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n23 -> n25  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n27 -> n29  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n31 -> n33  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n37 -> n39  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n42 -> n44  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n49 -> n51  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n54 -> n56  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n58 -> n60  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n65 -> n67  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n70 -> n72  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n74 -> n76  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n78 -> n80  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n82 -> n84  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n87 -> n89  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n91 -> n93  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n95 -> n97  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n99 -> n101  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n104 -> n106  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n108 -> n110  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n112 -> n114  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n116 -> n118  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n121 -> n123  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n125 -> n127  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n134 -> n136  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
n153 -> n155  [color=darkseagreen4, key=1, label=string, style=dashed];
n175 -> n177  [color=darkseagreen4, key=1, label=providerResolver, style=dashed];
n191 -> n193  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n191 -> n198  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n191 -> n195  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n194 -> n200  [color=darkseagreen4, key=1, label=ex, style=dashed];
n200 -> n204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n227 -> n229  [color=darkseagreen4, key=1, label=nameParam, style=dashed];
n238 -> n240  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n238 -> n241  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
n238 -> n242  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n238 -> n243  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n238 -> n246  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n238 -> n250  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n238 -> n254  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n238 -> n258  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n238 -> n262  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n238 -> n265  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n270 -> n280  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n270 -> n284  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n270 -> n288  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n270 -> n292  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n270 -> n296  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n270 -> n299  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n339 -> n341  [color=darkseagreen4, key=1, label=nameParam, style=dashed];
n347 -> n349  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n347 -> n350  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
n347 -> n351  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n347 -> n352  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n347 -> n355  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n347 -> n359  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n347 -> n363  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n347 -> n367  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n347 -> n370  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n375 -> n379  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n375 -> n383  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n375 -> n387  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n375 -> n391  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n375 -> n394  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n432 -> n436  [color=darkseagreen4, key=1, label=func, style=dashed];
n433 -> n436  [color=darkseagreen4, key=1, label=string, style=dashed];
n471 -> n473  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n471 -> n474  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
n471 -> n475  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n471 -> n476  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n471 -> n479  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n471 -> n483  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n471 -> n487  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n471 -> n491  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n471 -> n495  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n471 -> n498  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n503 -> n508  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n503 -> n512  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n503 -> n516  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n503 -> n520  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n503 -> n524  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n503 -> n527  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
n541 -> n545  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n541 -> n546  [color=darkseagreen4, key=1, label=string, style=dashed];
n541 -> n547  [color=darkseagreen4, key=1, label=object, style=dashed];
n541 -> n548  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
n541 -> n549  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
n541 -> n550  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
n541 -> n551  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
n542 -> n544  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
n542 -> n545  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
n542 -> n546  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
n542 -> n547  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
n542 -> n549  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
n542 -> n550  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
n542 -> n551  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
n542 -> n552  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
n565 -> n568  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n571 -> n574  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
n572 -> n578  [color=darkseagreen4, key=1, label=formattedMessage, style=dashed];
n572 -> n579  [color=darkseagreen4, key=1, label=formattedMessage, style=dashed];
m1_41 -> m1_52  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m1_41 -> m1_54  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m1_42 -> m1_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_42 -> m1_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_42 -> m1_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_42 -> m1_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_42 -> m1_45  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_42 -> m1_46  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_42 -> m1_50  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_42 -> m1_51  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_43 -> m1_46  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_43 -> m1_47  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_43 -> m1_48  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_43 -> m1_51  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_43 -> m1_52  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_44 -> m1_46  [color=darkseagreen4, key=1, label=alias, style=dashed];
m1_49 -> m1_51  [color=darkseagreen4, key=1, label=alias, style=dashed];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m1_33 -> m1_36  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m1_2 -> m1_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m1_2 -> m1_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_2 -> m1_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m1_2 -> m1_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m1_77 -> m1_79  [color=darkseagreen4, key=1, label=connection, style=dashed];
m1_83 -> m1_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m1_83 -> m1_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m1_83 -> m1_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m1_83 -> m1_26  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m1_83 -> m1_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m1_83 -> m1_35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m1_83 -> m1_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m2_15 -> m2_3  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m2_15 -> m2_12  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m2_15 -> m2_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m2_15 -> m2_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m4_26 -> m4_35  [color=darkseagreen4, key=1, label=connection, style=dashed];
m4_35 -> m4_37  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m4_30 -> m4_37  [color=green, key=1, label=jobId, style=dashed];
m4_36 -> m4_38  [color=green, key=1, label=transaction, style=dashed];
m4_11 -> m4_15  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_11 -> m4_18  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_12 -> m4_16  [color=green, key=1, label=jobsEnqueued, style=dashed];
m4_51 -> m4_23  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m4_53 -> m4_18  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m4_53 -> m4_23  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m5_6 -> m5_9  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m5_17 -> m5_9  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m5_17 -> m5_14  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RouteCollection", style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m6_0 -> m6_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m6_0 -> m6_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RouteCollection", style=dashed];
m6_0 -> m6_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m6_11 -> m6_13  [color=green, key=1, label=string, style=dashed];
m6_30 -> m6_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m6_30 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m6_30 -> m6_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m6_30 -> m6_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m6_30 -> m6_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m6_45 -> m6_51  [color=green, key=1, label=scheduledJobs, style=dashed];
m6_56 -> m6_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_56 -> m6_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_48 -> m6_53  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_48 -> m6_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_54 -> m6_73  [color=green, key=1, label="lambda expression", style=dashed];
m6_54 -> m6_77  [color=green, key=1, label="lambda expression", style=dashed];
m6_49 -> m6_54  [color=green, key=1, label=states, style=dashed];
m6_49 -> m6_78  [color=green, key=1, label=states, style=dashed];
m6_53 -> m6_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_53 -> m6_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_50 -> m6_54  [color=green, key=1, label=pipeline, style=dashed];
m6_50 -> m6_53  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_50 -> m6_55  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_52 -> m6_54  [color=green, key=1, label=job, style=dashed];
m6_52 -> m6_78  [color=green, key=1, label=job, style=dashed];
m6_52 -> m6_74  [color=green, key=1, label=job, style=dashed];
m6_52 -> m6_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_52 -> m6_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_23 -> m6_25  [color=green, key=1, label=int, style=dashed];
m6_26 -> m6_32  [color=green, key=1, label="lambda expression", style=dashed];
m6_26 -> m6_40  [color=green, key=1, label="lambda expression", style=dashed];
m6_173 -> m6_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_173 -> m6_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_173 -> m6_331  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_173 -> m6_333  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_173 -> m6_329  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m6_173 -> m6_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_173 -> m6_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m6_331 -> m6_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_331 -> m6_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_333 -> m6_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_333 -> m6_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_335 -> m6_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_335 -> m6_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_330 -> m6_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_330 -> m6_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_330 -> m6_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_330 -> m6_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_330 -> m6_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_330 -> m6_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_330 -> m6_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_328 -> m6_331  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_328 -> m6_333  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_328 -> m6_334  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_326 -> m6_331  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_326 -> m6_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_326 -> m6_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_327 -> m6_333  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_327 -> m6_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_327 -> m6_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_13 -> m6_16  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m6_13 -> m6_18  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m6_14 -> m6_22  [color=darkseagreen4, key=1, label=dispatcher, style=dashed];
m6_219 -> m6_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_276 -> m6_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_278 -> m6_284  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_278 -> m6_286  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_270 -> m6_273  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_270 -> m6_280  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_270 -> m6_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_277 -> m6_282  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m6_279 -> m6_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_279 -> m6_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_279 -> m6_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_271 -> m6_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_269 -> m6_273  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_275 -> m6_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_285 -> m6_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_236 -> m6_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_239 -> m6_242  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_41 -> m6_41  [color=green, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>", style=dashed];
m6_341 -> m6_343  [color=darkseagreen4, key=1, label="?", style=dashed];
m6_349 -> m6_351  [color=darkseagreen4, key=1, label="?", style=dashed];
m6_357 -> m6_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_138 -> m6_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_148 -> m6_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_164 -> m6_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_164 -> m6_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_165 -> m6_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_165 -> m6_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_166 -> m6_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_166 -> m6_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_159 -> m6_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_159 -> m6_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_159 -> m6_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_163 -> m6_167  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_168 -> m6_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_157 -> m6_159  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_158 -> m6_170  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_110 -> m6_129  [color=green, key=1, label="lambda expression", style=dashed];
m6_99 -> m6_105  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m6_102 -> m6_107  [color=darkseagreen4, key=1, label=servers, style=dashed];
m6_102 -> m6_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m6_103 -> m6_108  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_103 -> m6_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_107 -> m6_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_107 -> m6_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_108 -> m6_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_108 -> m6_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_104 -> m6_109  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_104 -> m6_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_104 -> m6_108  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_106 -> m6_108  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_106 -> m6_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_106 -> m6_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_106 -> m6_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_106 -> m6_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_374 -> m6_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_374 -> m6_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_375 -> m6_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_375 -> m6_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_376 -> m6_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_376 -> m6_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_377 -> m6_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_377 -> m6_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_378 -> m6_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_378 -> m6_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_379 -> m6_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_379 -> m6_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_382 -> m6_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_382 -> m6_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_381 -> m6_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m6_373 -> m6_383  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_371 -> m6_384  [color=darkseagreen4, key=1, label=stats, style=dashed];
m6_372 -> m6_380  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_92 -> m6_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_305 -> m6_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_304 -> m6_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_304 -> m6_309  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m6_307 -> m6_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_307 -> m6_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_306 -> m6_311  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m6_300 -> m6_302  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_300 -> m6_313  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_308 -> m6_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_308 -> m6_313  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_308 -> m6_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_298 -> m6_301  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_298 -> m6_302  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_299 -> m6_301  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m6_314 -> m6_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_252 -> m6_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_252 -> m6_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_252 -> m6_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_249 -> m6_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m6_209 -> m6_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_224 -> m6_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_227 -> m6_230  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_201 -> m6_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_432 -> m6_78  [color=green, key=1, label=job, style=dashed];
m6_432 -> m6_74  [color=green, key=1, label=job, style=dashed];
m6_432 -> m6_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_432 -> m6_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_434 -> m6_78  [color=green, key=1, label=states, style=dashed];
m6_436 -> m6_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m6_437 -> m6_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_442 -> m6_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_443 -> m6_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_443 -> m6_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_443 -> m6_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_443 -> m6_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_443 -> m6_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_443 -> m6_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_445 -> m6_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_438 -> m6_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_438 -> m6_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_438 -> m6_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_449 -> m6_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m6_433 -> m6_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_435 -> m6_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_435 -> m6_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_435 -> m6_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_435 -> m6_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_444 -> m6_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_444 -> m6_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_446 -> m6_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_446 -> m6_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_441 -> m6_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_439 -> m6_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m6_447 -> m6_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m6_440 -> m6_294  [color=darkseagreen4, key=1, label=string, style=dashed];
}
